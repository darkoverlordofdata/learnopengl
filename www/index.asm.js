Module["asm"] =  (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_X=env.invoke_X;
  var invoke_ii=env.invoke_ii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_vi=env.invoke_vi;
  var invoke_vidd=env.invoke_vidd;
  var invoke_vii=env.invoke_vii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var ___assert_fail=env.___assert_fail;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___lock=env.___lock;
  var ___map_file=env.___map_file;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall221=env.___syscall221;
  var ___syscall5=env.___syscall5;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___syscall91=env.___syscall91;
  var ___unlock=env.___unlock;
  var _emscripten_get_now=env._emscripten_get_now;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _getenv=env._getenv;
  var _glActiveTexture=env._glActiveTexture;
  var _glAttachShader=env._glAttachShader;
  var _glBindBuffer=env._glBindBuffer;
  var _glBindTexture=env._glBindTexture;
  var _glBindVertexArray=env._glBindVertexArray;
  var _glBufferData=env._glBufferData;
  var _glClear=env._glClear;
  var _glClearColor=env._glClearColor;
  var _glCompileShader=env._glCompileShader;
  var _glCreateProgram=env._glCreateProgram;
  var _glCreateShader=env._glCreateShader;
  var _glDeleteShader=env._glDeleteShader;
  var _glDrawArrays=env._glDrawArrays;
  var _glEnable=env._glEnable;
  var _glEnableVertexAttribArray=env._glEnableVertexAttribArray;
  var _glGenBuffers=env._glGenBuffers;
  var _glGenTextures=env._glGenTextures;
  var _glGenVertexArrays=env._glGenVertexArrays;
  var _glGenerateMipmap=env._glGenerateMipmap;
  var _glGetProgramInfoLog=env._glGetProgramInfoLog;
  var _glGetProgramiv=env._glGetProgramiv;
  var _glGetShaderInfoLog=env._glGetShaderInfoLog;
  var _glGetShaderiv=env._glGetShaderiv;
  var _glGetUniformLocation=env._glGetUniformLocation;
  var _glLinkProgram=env._glLinkProgram;
  var _glShaderSource=env._glShaderSource;
  var _glTexImage2D=env._glTexImage2D;
  var _glTexParameteri=env._glTexParameteri;
  var _glUniform1i=env._glUniform1i;
  var _glUniformMatrix4fv=env._glUniformMatrix4fv;
  var _glUseProgram=env._glUseProgram;
  var _glVertexAttribPointer=env._glVertexAttribPointer;
  var _glViewport=env._glViewport;
  var _glfwCreateWindow=env._glfwCreateWindow;
  var _glfwGetKey=env._glfwGetKey;
  var _glfwGetTime=env._glfwGetTime;
  var _glfwInit=env._glfwInit;
  var _glfwMakeContextCurrent=env._glfwMakeContextCurrent;
  var _glfwPollEvents=env._glfwPollEvents;
  var _glfwSetCursorPosCallback=env._glfwSetCursorPosCallback;
  var _glfwSetFramebufferSizeCallback=env._glfwSetFramebufferSizeCallback;
  var _glfwSetScrollCallback=env._glfwSetScrollCallback;
  var _glfwSetWindowShouldClose=env._glfwSetWindowShouldClose;
  var _glfwSwapBuffers=env._glfwSwapBuffers;
  var _glfwTerminate=env._glfwTerminate;
  var _glfwWindowHint=env._glfwWindowHint;
  var _glfwWindowShouldClose=env._glfwWindowShouldClose;
  var _llvm_cttz_i32=env._llvm_cttz_i32;
  var _llvm_trap=env._llvm_trap;
  var emscriptenWebGLComputeImageSize=env.emscriptenWebGLComputeImageSize;
  var emscriptenWebGLGetHeapForType=env.emscriptenWebGLGetHeapForType;
  var emscriptenWebGLGetShiftForType=env.emscriptenWebGLGetShiftForType;
  var emscriptenWebGLGetTexPixelData=env.emscriptenWebGLGetTexPixelData;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _glm_vec3_new($0,$1,$2) {
 $0 = Math_fround($0);
 $1 = Math_fround($1);
 $2 = Math_fround($2);
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_malloc(24)|0);
 $4 = ((($3)) + 16|0);
 HEAP32[$4>>2] = 1;
 HEAPF32[$3>>2] = $0;
 $5 = ((($3)) + 4|0);
 HEAPF32[$5>>2] = $1;
 $6 = ((($3)) + 8|0);
 HEAPF32[$6>>2] = $2;
 return ($3|0);
}
function _glm_vec3_unref($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(1);
 if ($3) {
  _free($0);
  return;
 } else {
  $4 = (($2) + -1)|0;
  HEAP32[$1>>2] = $4;
  return;
 }
}
function _glm_mat4_new($0) {
 $0 = Math_fround($0);
 var $1 = 0, $10 = 0, $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = (_malloc(80)|0);
 $2 = ((($1)) + 64|0);
 HEAP32[$2>>2] = 1;
 $3 = $0 == Math_fround(0.0);
 if ($3) {
  dest=$1; stop=dest+80|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
  return ($1|0);
 }
 $4 = ((($1)) + 4|0);
 HEAP32[$1>>2] = 1065353216;
 $5 = ((($1)) + 20|0);
 $6 = ((($1)) + 24|0);
 ;HEAP32[$4>>2]=0|0;HEAP32[$4+4>>2]=0|0;HEAP32[$4+8>>2]=0|0;HEAP32[$4+12>>2]=0|0;
 HEAP32[$5>>2] = 1065353216;
 $7 = ((($1)) + 40|0);
 $8 = ((($1)) + 44|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 HEAP32[$7>>2] = 1065353216;
 $9 = ((($1)) + 60|0);
 ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0;
 HEAP32[$9>>2] = 1065353216;
 $10 = $0 != Math_fround(1.0);
 if (!($10)) {
  return ($1|0);
 }
 HEAPF32[$1>>2] = $0;
 $11 = Math_fround($0 * Math_fround(0.0));
 HEAPF32[$4>>2] = $11;
 $12 = ((($1)) + 8|0);
 HEAPF32[$12>>2] = $11;
 $13 = ((($1)) + 12|0);
 HEAPF32[$13>>2] = $11;
 $14 = ((($1)) + 16|0);
 HEAPF32[$14>>2] = $11;
 HEAPF32[$5>>2] = $0;
 HEAPF32[$6>>2] = $11;
 $15 = ((($1)) + 28|0);
 HEAPF32[$15>>2] = $11;
 $16 = ((($1)) + 32|0);
 HEAPF32[$16>>2] = $11;
 $17 = ((($1)) + 36|0);
 HEAPF32[$17>>2] = $11;
 HEAPF32[$7>>2] = $0;
 HEAPF32[$8>>2] = $11;
 $18 = ((($1)) + 48|0);
 HEAPF32[$18>>2] = $11;
 $19 = ((($1)) + 52|0);
 HEAPF32[$19>>2] = $11;
 $20 = ((($1)) + 56|0);
 HEAPF32[$20>>2] = $11;
 HEAPF32[$9>>2] = $0;
 return ($1|0);
}
function _glm_mat4_unref($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 64|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(1);
 if ($3) {
  _free($0);
  return;
 } else {
  $4 = (($2) + -1)|0;
  HEAP32[$1>>2] = $4;
  return;
 }
}
function _SOIL_load_image($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (_stbi_load($0,$1,$2,$3,$4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_stbi_failure_reason()|0);
  $storemerge = $7;
 } else {
  $storemerge = 121093;
 }
 HEAP32[29372] = $storemerge;
 return ($5|0);
}
function _SOIL_free_image_data($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function _stbi_failure_reason() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[36596]|0;
 return ($0|0);
}
function _stbi_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (_fopen($0,121106)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  HEAP32[36596] = 121109;
  $$0 = 0;
  return ($$0|0);
 } else {
  $7 = (_stbi_load_from_file($5,$1,$2,$3,$4)|0);
  (_fclose($5)|0);
  $$0 = $7;
  return ($$0|0);
 }
 return (0)|0;
}
function _stbi_load_from_file($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$05556 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp17$not$i = 0, $phitmp1718$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 14016|0;
 $5 = sp;
 $6 = (_ftell($0)|0);
 $7 = ($0|0)==(0|0);
 if ($7) {
  _llvm_trap();
  // unreachable;
 }
 $8 = (_fgetc($0)|0);
 $9 = ($8|0)==(-1);
 $10 = $8&255;
 $phitmp1718$i = ($10<<24>>24)!=(-1);
 $phitmp17$not$i = $9 | $phitmp1718$i;
 L4: do {
  if (!($phitmp17$not$i)) {
   L6: while(1) {
    $11 = (_fgetc($0)|0);
    $12 = ($11|0)==(-1);
    $13 = $11&255;
    $14 = $12 ? 0 : $13;
    switch ($14<<24>>24) {
    case -1:  {
     break;
    }
    case -40:  {
     break L6;
     break;
    }
    default: {
     break L4;
    }
    }
   }
   (_fseek($0,$6,0)|0);
   $15 = ((($5)) + 16|0);
   HEAP32[$15>>2] = $0;
   $16 = (_load_jpeg_image($5,$1,$2,$3,$4)|0);
   $$0 = $16;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 HEAP32[36596] = 121129;
 (_fseek($0,$6,0)|0);
 $17 = (_ftell($0)|0);
 $18 = ((($5)) + 16|0);
 HEAP32[$18>>2] = $0;
 $19 = (_parse_png_file($5,1,0)|0);
 (_fseek($0,$17,0)|0);
 $20 = ($19|0)==(0);
 if (!($20)) {
  $21 = ((($5)) + 16|0);
  HEAP32[$21>>2] = $0;
  $22 = (_do_png($5,$1,$2,$3,$4)|0);
  $$0 = $22;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = (_ftell($0)|0);
 $24 = ((($5)) + 16|0);
 HEAP32[$24>>2] = $0;
 $25 = (_bmp_test($5)|0);
 (_fseek($0,$23,0)|0);
 $26 = ($25|0)==(0);
 if (!($26)) {
  $27 = ((($5)) + 16|0);
  HEAP32[$27>>2] = $0;
  $28 = (_bmp_load($5,$1,$2,$3,$4)|0);
  $$0 = $28;
  STACKTOP = sp;return ($$0|0);
 }
 $29 = (_stbi_psd_test_file($0)|0);
 $30 = ($29|0)==(0);
 if (!($30)) {
  $31 = ((($5)) + 16|0);
  HEAP32[$31>>2] = $0;
  $32 = (_psd_load($5,$1,$2,$3,$4)|0);
  $$0 = $32;
  STACKTOP = sp;return ($$0|0);
 }
 $33 = (_ftell($0)|0);
 $34 = ((($5)) + 16|0);
 HEAP32[$34>>2] = $0;
 $35 = (_dds_test($5)|0);
 (_fseek($0,$33,0)|0);
 $36 = ($35|0)==(0);
 if (!($36)) {
  $37 = ((($5)) + 16|0);
  HEAP32[$37>>2] = $0;
  $38 = (_dds_load($5,$1,$2,$3,$4)|0);
  $$0 = $38;
  STACKTOP = sp;return ($$0|0);
 }
 $39 = (_ftell($0)|0);
 $40 = ((($5)) + 16|0);
 HEAP32[$40>>2] = $0;
 $41 = (_hdr_test($5)|0);
 (_fseek($0,$39,0)|0);
 $42 = ($41|0)==(0);
 if (!($42)) {
  $43 = ((($5)) + 16|0);
  HEAP32[$43>>2] = $0;
  $44 = (_hdr_load($5,$1,$2,$3,$4)|0);
  $45 = HEAP32[$1>>2]|0;
  $46 = HEAP32[$2>>2]|0;
  $47 = ($4|0)==(0);
  if ($47) {
   $48 = HEAP32[$3>>2]|0;
   $49 = $48;
  } else {
   $49 = $4;
  }
  $50 = (_hdr_to_ldr($44,$45,$46,$49)|0);
  $$0 = $50;
  STACKTOP = sp;return ($$0|0);
 }
 $51 = (0)>(0);
 L34: do {
  if ($51) {
   $$05556 = 0;
   while(1) {
    $54 = ((0) + 8|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (ftCall_ii($55|0,$0)|0);
    $57 = ($56|0)==(0);
    $53 = (($$05556) + 1)|0;
    if (!($57)) {
     break;
    }
    $52 = ($53|0)<(0);
    if ($52) {
     $$05556 = $53;
    } else {
     break L34;
    }
   }
   $58 = ((0) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (ftCall_iiiiii($59|0,$0,$1,$2,$3,$4)|0);
   $$0 = $60;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $61 = (_ftell($0)|0);
 $62 = ((($5)) + 16|0);
 HEAP32[$62>>2] = $0;
 $63 = (_tga_test($5)|0);
 (_fseek($0,$61,0)|0);
 $64 = ($63|0)==(0);
 if ($64) {
  HEAP32[36596] = 121142;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $65 = ((($5)) + 16|0);
  HEAP32[$65>>2] = $0;
  $66 = (_tga_load($5,$1,$2,$3,$4)|0);
  $$0 = $66;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _load_jpeg_image($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i18$i = 0, $$0$i$i15$i = 0, $$0$i$i9$i$i = 0, $$0$i$i9$i20$i = 0, $$0$i$off$i$i = 0, $$0$i137$i$i = 0, $$0$i3$i$ph$i$i = 0, $$0$i53$i$i = 0, $$0$i55$i$i = 0, $$0$i57$i$i = 0, $$0$ph$i$i = 0, $$0121149$i$i = 0, $$0122150$i$i = 0, $$0123158$i$i = 0, $$0124154$i33$i = 0, $$0125163$i$i = 0;
 var $$0126172$i$i = 0, $$0127167$i$i = 0, $$015$i = 0, $$015$i172 = 0, $$015$i175 = 0, $$015$i178 = 0, $$0161215 = 0, $$0163208 = 0, $$0165207 = 0, $$0168211 = 0, $$04652$i = 0, $$047$i = 0, $$048$i = 0, $$048$lcssa$i$i = 0, $$04865$i$i = 0, $$049$i = 0, $$049$i$i = 0, $$053$i = 0, $$08$i$i = 0, $$08$i22$i = 0;
 var $$1162199 = 0, $$1164201 = 0, $$183 = 0, $$2 = 0, $$2167200 = 0, $$3 = 0, $$8$ph$i$i = 0, $$9$i$i = 0, $$in = 0, $$in169 = 0, $$op$i$i$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i13$i = 0, $$pre$phi$iZ2D = 0, $$pre178$i$i = 0, $$pre180$i$i = 0, $$pre182$i$i = 0;
 var $$pre183$i$i = 0, $$pre184$i$i = 0, $$pre233 = 0, $$pre234 = 0, $$pre46$i = 0, $$pre47$i = 0, $$pre48$i = 0, $$pre49$i = 0, $$pre74$i$i = 0, $$pre75$i$i = 0, $$pre76$i$i = 0, $$pre77$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0;
 var $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0;
 var $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0;
 var $597 = 0, $598 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $or$cond3 = 0, $phitmp$i$i$i = 0, $resample_row_v_2$sink = 0, $spec$select$i$i$i = 0, $spec$select$i133$i$i = 0, $spec$select$i139$i$i = 0, $switch$select = 0, $switch$select266 = 0, $switch$select268 = 0, $switch$select270 = 0, $switch$selectcmp = 0, $switch$selectcmp265 = 0;
 var $switch$selectcmp267 = 0, $switch$selectcmp269 = 0, $trunc$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp + 128|0;
 $6 = sp;
 $7 = ($4>>>0)>(4);
 if ($7) {
  HEAP32[36596] = 121690;
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $8 = ((($0)) + 8|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($0)) + 14008|0);
 HEAP32[$9>>2] = 0;
 $10 = (_decode_jpeg_header($0,0)|0);
 $11 = ($10|0)==(0);
 L5: do {
  if (!($11)) {
   $12 = ((($0)) + 13980|0);
   $13 = HEAP8[$12>>0]|0;
   $14 = ($13<<24>>24)==(-1);
   if ($14) {
    $15 = ((($0)) + 16|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = ($16|0)==(0|0);
    if ($17) {
     $21 = ((($0)) + 20|0);
     $22 = HEAP32[$21>>2]|0;
     $23 = ((($0)) + 24|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($22>>>0)<($24>>>0);
     if ($25) {
      $26 = ((($22)) + 1|0);
      HEAP32[$21>>2] = $26;
      $27 = HEAP8[$22>>0]|0;
      $28 = $27&255;
      $$0$i$i$i$i = $28;
     } else {
      $$0$i$i$i$i = 0;
     }
    } else {
     $18 = (_fgetc($16)|0);
     $19 = ($18|0)==(-1);
     $20 = $19 ? 0 : $18;
     $$0$i$i$i$i = $20;
    }
    $29 = $$0$i$i$i$i&255;
    $30 = ($29<<24>>24)==(-1);
    if ($30) {
     $31 = ((($0)) + 20|0);
     $32 = ((($0)) + 24|0);
     while(1) {
      $33 = HEAP32[$15>>2]|0;
      $34 = ($33|0)==(0|0);
      if ($34) {
       $38 = HEAP32[$31>>2]|0;
       $39 = HEAP32[$32>>2]|0;
       $40 = ($38>>>0)<($39>>>0);
       if ($40) {
        $41 = ((($38)) + 1|0);
        HEAP32[$31>>2] = $41;
        $42 = HEAP8[$38>>0]|0;
        $43 = $42&255;
        $$0$i$i9$i$i = $43;
       } else {
        $$0$i$i9$i$i = 0;
       }
      } else {
       $35 = (_fgetc($33)|0);
       $36 = ($35|0)==(-1);
       $37 = $36 ? 0 : $35;
       $$0$i$i9$i$i = $37;
      }
      $44 = $$0$i$i9$i$i&255;
      $45 = ($44<<24>>24)==(-1);
      if (!($45)) {
       $$08$i$i = $44;$$pre$phi$iZ2D = $15;
       break;
      }
     }
    } else {
     $$08$i$i = -1;$$pre$phi$iZ2D = $15;
    }
   } else {
    HEAP8[$12>>0] = -1;
    $$pre49$i = ((($0)) + 16|0);
    $$08$i$i = $13;$$pre$phi$iZ2D = $$pre49$i;
   }
   $46 = $$08$i$i&255;
   $47 = ((($0)) + 20|0);
   $48 = ((($0)) + 24|0);
   $49 = ((($0)) + 13988|0);
   $50 = ((($0)) + 13976|0);
   $51 = ((($0)) + 13972|0);
   $52 = ((($0)) + 13984|0);
   $53 = ((($0)) + 13884|0);
   $54 = ((($0)) + 13828|0);
   $55 = ((($0)) + 13772|0);
   $56 = ((($0)) + 14012|0);
   $57 = ((($0)) + 13992|0);
   $58 = ((($0)) + 13736|0);
   $59 = ((($0)) + 13732|0);
   $$0$i = $46;
   L24: while(1) {
    $trunc$i = $$0$i&255;
    L26: do {
     switch ($trunc$i<<24>>24) {
     case -39:  {
      label = 161;
      break L24;
      break;
     }
     case -38:  {
      $60 = HEAP32[$$pre$phi$iZ2D>>2]|0;
      $61 = ($60|0)==(0|0);
      do {
       if ($61) {
        $62 = HEAP32[$47>>2]|0;
        $63 = HEAP32[$48>>2]|0;
        $64 = ($62>>>0)<($63>>>0);
        if ($64) {
         $65 = ((($62)) + 1|0);
         HEAP32[$47>>2] = $65;
         $66 = HEAP8[$62>>0]|0;
         $67 = $66&255;
         $phitmp$i$i$i = $67 << 8;
         $73 = $65;$74 = $63;$79 = $phitmp$i$i$i;
         label = 24;
        } else {
         $73 = $62;$74 = $63;$79 = 0;
         label = 24;
        }
       } else {
        $68 = (_fgetc($60)|0);
        $69 = ($68|0)==(-1);
        $$pre$i$i$i = HEAP32[$$pre$phi$iZ2D>>2]|0;
        $$op$i$i$i = $68 << 8;
        $70 = $69 ? 0 : $$op$i$i$i;
        $71 = ($$pre$i$i$i|0)==(0|0);
        if ($71) {
         $$pre$i$i = HEAP32[$47>>2]|0;
         $$pre74$i$i = HEAP32[$48>>2]|0;
         $73 = $$pre$i$i;$74 = $$pre74$i$i;$79 = $70;
         label = 24;
         break;
        }
        $80 = (_fgetc($$pre$i$i$i)|0);
        $81 = ($80|0)==(-1);
        $82 = $81 ? 0 : $80;
        $$pre75$i$i = HEAP32[$$pre$phi$iZ2D>>2]|0;
        $83 = (($82) + ($70))|0;
        $84 = ($$pre75$i$i|0)==(0|0);
        if ($84) {
         $$pre$i = HEAP32[$47>>2]|0;
         $$pre46$i = HEAP32[$48>>2]|0;
         $589 = $83;$89 = $$pre$i;$90 = $$pre46$i;
         label = 30;
         break;
        } else {
         $85 = (_fgetc($$pre75$i$i)|0);
         $86 = ($85|0)==(-1);
         $87 = $86 ? 0 : $85;
         $$0$i$i$i = $87;$100 = $83;
         break;
        }
       }
      } while(0);
      if ((label|0) == 24) {
       label = 0;
       $72 = ($73>>>0)<($74>>>0);
       if ($72) {
        $75 = ((($73)) + 1|0);
        HEAP32[$47>>2] = $75;
        $76 = HEAP8[$73>>0]|0;
        $77 = $76&255;
        $$0$i3$i$ph$i$i = $77;$588 = $75;
       } else {
        $$0$i3$i$ph$i$i = 0;$588 = $73;
       }
       $78 = (($$0$i3$i$ph$i$i) + ($79))|0;
       $589 = $78;$89 = $588;$90 = $74;
       label = 30;
      }
      if ((label|0) == 30) {
       label = 0;
       $88 = ($89>>>0)<($90>>>0);
       if (!($88)) {
        label = 31;
        break L24;
       }
       $91 = ((($89)) + 1|0);
       HEAP32[$47>>2] = $91;
       $92 = HEAP8[$89>>0]|0;
       $93 = $92&255;
       $$0$i$i$i = $93;$100 = $589;
      }
      HEAP32[$49>>2] = $$0$i$i$i;
      $$0$i$off$i$i = (($$0$i$i$i) + -1)|0;
      $94 = ($$0$i$off$i$i>>>0)>(3);
      if ($94) {
       break L24;
      }
      $95 = HEAP32[$8>>2]|0;
      $96 = ($$0$i$i$i|0)>($95|0);
      if ($96) {
       break L24;
      }
      $97 = $$0$i$i$i << 1;
      $98 = (($97) + 6)|0;
      $99 = ($100|0)==($98|0);
      if (!($99)) {
       label = 38;
       break L24;
      }
      $$049$i$i = 0;$102 = $$0$i$i$i;
      while(1) {
       $101 = ($$049$i$i|0)<($102|0);
       $103 = HEAP32[$$pre$phi$iZ2D>>2]|0;
       $104 = ($103|0)==(0|0);
       if ($104) {
        $108 = HEAP32[$47>>2]|0;
        $109 = HEAP32[$48>>2]|0;
        $110 = ($108>>>0)<($109>>>0);
        if ($110) {
         $111 = ((($108)) + 1|0);
         HEAP32[$47>>2] = $111;
         $112 = HEAP8[$108>>0]|0;
         $113 = $112&255;
         $$0$i55$i$i = $113;
        } else {
         $$0$i55$i$i = 0;
        }
       } else {
        $105 = (_fgetc($103)|0);
        $106 = ($105|0)==(-1);
        $107 = $106 ? 0 : $105;
        $$0$i55$i$i = $107;
       }
       if (!($101)) {
        break;
       }
       $114 = HEAP32[$$pre$phi$iZ2D>>2]|0;
       $115 = ($114|0)==(0|0);
       if ($115) {
        $119 = HEAP32[$47>>2]|0;
        $120 = HEAP32[$48>>2]|0;
        $121 = ($119>>>0)<($120>>>0);
        if ($121) {
         $122 = ((($119)) + 1|0);
         HEAP32[$47>>2] = $122;
         $123 = HEAP8[$119>>0]|0;
         $124 = $123&255;
         $$0$i57$i$i = $124;
        } else {
         $$0$i57$i$i = 0;
        }
       } else {
        $116 = (_fgetc($114)|0);
        $117 = ($116|0)==(-1);
        $118 = $117 ? 0 : $116;
        $$0$i57$i$i = $118;
       }
       $125 = HEAP32[$8>>2]|0;
       $126 = ($125|0)>(0);
       L64: do {
        if ($126) {
         $$04865$i$i = 0;
         while(1) {
          $127 = (((($0)) + 13748|0) + (($$04865$i$i*56)|0)|0);
          $128 = HEAP32[$127>>2]|0;
          $129 = ($128|0)==($$0$i55$i$i|0);
          if ($129) {
           $$048$lcssa$i$i = $$04865$i$i;
           break L64;
          }
          $130 = (($$04865$i$i) + 1)|0;
          $131 = ($130|0)<($125|0);
          if ($131) {
           $$04865$i$i = $130;
          } else {
           $$048$lcssa$i$i = $130;
           break;
          }
         }
        } else {
         $$048$lcssa$i$i = 0;
        }
       } while(0);
       $132 = ($$048$lcssa$i$i|0)==($125|0);
       if ($132) {
        break L5;
       }
       $133 = $$0$i57$i$i >> 4;
       $134 = (((((($0)) + 13748|0) + (($$048$lcssa$i$i*56)|0)|0)) + 16|0);
       HEAP32[$134>>2] = $133;
       $135 = ($$0$i57$i$i|0)>(63);
       if ($135) {
        label = 54;
        break L24;
       }
       $136 = $$0$i57$i$i & 15;
       $137 = (((((($0)) + 13748|0) + (($$048$lcssa$i$i*56)|0)|0)) + 20|0);
       HEAP32[$137>>2] = $136;
       $138 = ($136>>>0)>(3);
       if ($138) {
        label = 56;
        break L24;
       }
       $139 = (((($0)) + 13992|0) + ($$049$i$i<<2)|0);
       HEAP32[$139>>2] = $$048$lcssa$i$i;
       $140 = (($$049$i$i) + 1)|0;
       $$pre76$i$i = HEAP32[$49>>2]|0;
       $$049$i$i = $140;$102 = $$pre76$i$i;
      }
      $141 = ($$0$i55$i$i|0)==(0);
      if (!($141)) {
       label = 59;
       break L24;
      }
      $142 = HEAP32[$$pre$phi$iZ2D>>2]|0;
      $143 = ($142|0)==(0|0);
      do {
       if ($143) {
        $144 = HEAP32[$47>>2]|0;
        $145 = HEAP32[$48>>2]|0;
        $146 = ($144>>>0)<($145>>>0);
        if ($146) {
         $147 = ((($144)) + 1|0);
         HEAP32[$47>>2] = $147;
         $152 = $147;$153 = $145;
         label = 66;
        } else {
         $152 = $144;$153 = $145;
         label = 66;
        }
       } else {
        (_fgetc($142)|0);
        $$pre77$i$i = HEAP32[$$pre$phi$iZ2D>>2]|0;
        $148 = ($$pre77$i$i|0)==(0|0);
        if ($148) {
         $$pre47$i = HEAP32[$47>>2]|0;
         $$pre48$i = HEAP32[$48>>2]|0;
         $152 = $$pre47$i;$153 = $$pre48$i;
         label = 66;
         break;
        } else {
         $149 = (_fgetc($$pre77$i$i)|0);
         $150 = ($149|0)==(-1);
         if ($150) {
          break;
         } else {
          $$0$i53$i$i = $149;
          label = 68;
          break;
         }
        }
       }
      } while(0);
      if ((label|0) == 66) {
       label = 0;
       $151 = ($152>>>0)<($153>>>0);
       if ($151) {
        $154 = ((($152)) + 1|0);
        HEAP32[$47>>2] = $154;
        $155 = HEAP8[$152>>0]|0;
        $156 = $155&255;
        $$0$i53$i$i = $156;
        label = 68;
       }
      }
      if ((label|0) == 68) {
       label = 0;
       $157 = ($$0$i53$i$i|0)==(0);
       if (!($157)) {
        label = 69;
        break L24;
       }
      }
      HEAP32[$50>>2] = 0;
      HEAP32[$51>>2] = 0;
      HEAP32[$52>>2] = 0;
      HEAP32[$53>>2] = 0;
      HEAP32[$54>>2] = 0;
      HEAP32[$55>>2] = 0;
      HEAP8[$12>>0] = -1;
      $158 = HEAP32[$9>>2]|0;
      $159 = ($158|0)==(0);
      $spec$select$i$i$i = $159 ? 2147483647 : $158;
      HEAP32[$56>>2] = $spec$select$i$i$i;
      $160 = HEAP32[$49>>2]|0;
      $161 = ($160|0)==(1);
      L88: do {
       if ($161) {
        $162 = HEAP32[$57>>2]|0;
        $163 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 28|0);
        $164 = HEAP32[$163>>2]|0;
        $165 = (($164) + 7)|0;
        $166 = $165 >> 3;
        $167 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 32|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = (($168) + 7)|0;
        $170 = $169 >> 3;
        $171 = ($168|0)>(0);
        L90: do {
         if ($171) {
          $172 = ($164|0)>(0);
          $173 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 16|0);
          $174 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 20|0);
          $175 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 44|0);
          $176 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 36|0);
          $177 = (((((($0)) + 13748|0) + (($162*56)|0)|0)) + 12|0);
          $$0122150$i$i = 0;
          L92: while(1) {
           if ($172) {
            $178 = $$0122150$i$i << 3;
            $$0121149$i$i = 0;
            while(1) {
             $179 = HEAP32[$173>>2]|0;
             $180 = (((($0)) + 28|0) + (($179*1680)|0)|0);
             $181 = HEAP32[$174>>2]|0;
             $182 = (((($0)) + 6748|0) + (($181*1680)|0)|0);
             $183 = (_decode_block($0,$5,$180,$182,$162)|0);
             $184 = ($183|0)==(0);
             if ($184) {
              $$0$ph$i$i = 0;
              break L92;
             }
             $185 = HEAP32[$175>>2]|0;
             $186 = HEAP32[$176>>2]|0;
             $187 = Math_imul($178, $186)|0;
             $188 = (($185) + ($187)|0);
             $189 = $$0121149$i$i << 3;
             $190 = (($188) + ($189)|0);
             $191 = HEAP32[$177>>2]|0;
             $192 = (((($0)) + 13468|0) + ($191<<6)|0);
             _idct_block($190,$186,$5,$192);
             $193 = HEAP32[$56>>2]|0;
             $194 = (($193) + -1)|0;
             HEAP32[$56>>2] = $194;
             $195 = ($193|0)<(2);
             if ($195) {
              $196 = HEAP32[$50>>2]|0;
              $197 = ($196|0)<(24);
              L101: do {
               if ($197) {
                L103: while(1) {
                 $198 = HEAP32[$52>>2]|0;
                 $199 = ($198|0)==(0);
                 do {
                  if ($199) {
                   $200 = HEAP32[$$pre$phi$iZ2D>>2]|0;
                   $201 = ($200|0)==(0|0);
                   if ($201) {
                    $204 = HEAP32[$47>>2]|0;
                    $205 = HEAP32[$48>>2]|0;
                    $206 = ($204>>>0)<($205>>>0);
                    if (!($206)) {
                     $227 = 0;
                     break;
                    }
                    $207 = ((($204)) + 1|0);
                    HEAP32[$47>>2] = $207;
                    $208 = HEAP8[$204>>0]|0;
                    $209 = $208&255;
                    $211 = $209;
                   } else {
                    $202 = (_fgetc($200)|0);
                    $203 = ($202|0)==(-1);
                    if ($203) {
                     $227 = 0;
                     break;
                    } else {
                     $211 = $202;
                    }
                   }
                   $210 = ($211|0)==(255);
                   if (!($210)) {
                    $227 = $211;
                    break;
                   }
                   $212 = HEAP32[$$pre$phi$iZ2D>>2]|0;
                   $213 = ($212|0)==(0|0);
                   if ($213) {
                    $216 = HEAP32[$47>>2]|0;
                    $217 = HEAP32[$48>>2]|0;
                    $218 = ($216>>>0)<($217>>>0);
                    if (!($218)) {
                     $227 = 255;
                     break;
                    }
                    $219 = ((($216)) + 1|0);
                    HEAP32[$47>>2] = $219;
                    $220 = HEAP8[$216>>0]|0;
                    $221 = $220&255;
                    $$0$i137$i$i = $221;
                   } else {
                    $214 = (_fgetc($212)|0);
                    $215 = ($214|0)==(-1);
                    if ($215) {
                     $227 = 255;
                     break;
                    } else {
                     $$0$i137$i$i = $214;
                    }
                   }
                   $222 = ($$0$i137$i$i|0)==(0);
                   if ($222) {
                    $227 = 255;
                   } else {
                    break L103;
                   }
                  } else {
                   $227 = 0;
                  }
                 } while(0);
                 $224 = HEAP32[$51>>2]|0;
                 $225 = $224 << 8;
                 $226 = $225 | $227;
                 HEAP32[$51>>2] = $226;
                 $228 = HEAP32[$50>>2]|0;
                 $229 = (($228) + 8)|0;
                 HEAP32[$50>>2] = $229;
                 $230 = ($228|0)<(17);
                 if (!($230)) {
                  break L101;
                 }
                }
                $223 = $$0$i137$i$i&255;
                HEAP8[$12>>0] = $223;
                HEAP32[$52>>2] = 1;
               }
              } while(0);
              $231 = HEAP8[$12>>0]|0;
              $232 = $231 & -8;
              $233 = ($232<<24>>24)==(-48);
              if (!($233)) {
               $$0$ph$i$i = 1;
               break L92;
              }
              HEAP32[$50>>2] = 0;
              HEAP32[$51>>2] = 0;
              HEAP32[$52>>2] = 0;
              HEAP32[$53>>2] = 0;
              HEAP32[$54>>2] = 0;
              HEAP32[$55>>2] = 0;
              HEAP8[$12>>0] = -1;
              $234 = HEAP32[$9>>2]|0;
              $235 = ($234|0)==(0);
              $spec$select$i139$i$i = $235 ? 2147483647 : $234;
              HEAP32[$56>>2] = $spec$select$i139$i$i;
             }
             $236 = (($$0121149$i$i) + 1)|0;
             $237 = ($236|0)<($166|0);
             if ($237) {
              $$0121149$i$i = $236;
             } else {
              break;
             }
            }
           }
           $238 = (($$0122150$i$i) + 1)|0;
           $239 = ($238|0)<($170|0);
           if ($239) {
            $$0122150$i$i = $238;
           } else {
            break L90;
           }
          }
          $$9$i$i = $$0$ph$i$i;
          break L88;
         }
        } while(0);
        break L26;
       } else {
        $240 = HEAP32[$58>>2]|0;
        $241 = ($240|0)>(0);
        L127: do {
         if ($241) {
          $$pre$i13$i = HEAP32[$59>>2]|0;
          $$0126172$i$i = 0;$243 = $$pre$i13$i;$590 = $240;$591 = $spec$select$i$i$i;
          L129: while(1) {
           $242 = ($243|0)>(0);
           if ($242) {
            $$0127167$i$i = 0;$594 = $591;
            while(1) {
             $244 = HEAP32[$49>>2]|0;
             $245 = ($244|0)>(0);
             if ($245) {
              $$0125163$i$i = 0;$595 = $244;
              while(1) {
               $246 = (((($0)) + 13992|0) + ($$0125163$i$i<<2)|0);
               $247 = HEAP32[$246>>2]|0;
               $248 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 8|0);
               $249 = HEAP32[$248>>2]|0;
               $250 = ($249|0)>(0);
               if ($250) {
                $251 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 4|0);
                $252 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 16|0);
                $253 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 20|0);
                $254 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 44|0);
                $255 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 36|0);
                $256 = (((((($0)) + 13748|0) + (($247*56)|0)|0)) + 12|0);
                $$pre178$i$i = HEAP32[$251>>2]|0;
                $$0123158$i$i = 0;$258 = $$pre178$i$i;$596 = $249;
                while(1) {
                 $257 = ($258|0)>(0);
                 L143: do {
                  if ($257) {
                   $259 = HEAP32[$252>>2]|0;
                   $260 = (((($0)) + 28|0) + (($259*1680)|0)|0);
                   $261 = HEAP32[$253>>2]|0;
                   $262 = (((($0)) + 6748|0) + (($261*1680)|0)|0);
                   $263 = (_decode_block($0,$5,$260,$262,$247)|0);
                   $264 = ($263|0)==(0);
                   if ($264) {
                    $$8$ph$i$i = 0;
                    break L129;
                   }
                   $$0124154$i33$i = 0;$272 = $596;$276 = $258;
                   while(1) {
                    $271 = Math_imul($272, $$0126172$i$i)|0;
                    $273 = (($271) + ($$0123158$i$i))|0;
                    $274 = $273 << 3;
                    $275 = Math_imul($276, $$0127167$i$i)|0;
                    $277 = (($275) + ($$0124154$i33$i))|0;
                    $278 = $277 << 3;
                    $279 = HEAP32[$254>>2]|0;
                    $280 = HEAP32[$255>>2]|0;
                    $281 = Math_imul($274, $280)|0;
                    $282 = (($279) + ($281)|0);
                    $283 = (($282) + ($278)|0);
                    $284 = HEAP32[$256>>2]|0;
                    $285 = (((($0)) + 13468|0) + ($284<<6)|0);
                    _idct_block($283,$280,$5,$285);
                    $286 = (($$0124154$i33$i) + 1)|0;
                    $287 = HEAP32[$251>>2]|0;
                    $288 = ($286|0)<($287|0);
                    $$pre180$i$i = HEAP32[$248>>2]|0;
                    if (!($288)) {
                     $291 = $$pre180$i$i;$597 = $287;
                     break L143;
                    }
                    $265 = HEAP32[$252>>2]|0;
                    $266 = (((($0)) + 28|0) + (($265*1680)|0)|0);
                    $267 = HEAP32[$253>>2]|0;
                    $268 = (((($0)) + 6748|0) + (($267*1680)|0)|0);
                    $269 = (_decode_block($0,$5,$266,$268,$247)|0);
                    $270 = ($269|0)==(0);
                    if ($270) {
                     $$8$ph$i$i = 0;
                     break L129;
                    } else {
                     $$0124154$i33$i = $286;$272 = $$pre180$i$i;$276 = $287;
                    }
                   }
                  } else {
                   $291 = $596;$597 = $258;
                  }
                 } while(0);
                 $289 = (($$0123158$i$i) + 1)|0;
                 $290 = ($289|0)<($291|0);
                 if ($290) {
                  $$0123158$i$i = $289;$258 = $597;$596 = $291;
                 } else {
                  break;
                 }
                }
                $$pre182$i$i = HEAP32[$49>>2]|0;
                $294 = $$pre182$i$i;
               } else {
                $294 = $595;
               }
               $292 = (($$0125163$i$i) + 1)|0;
               $293 = ($292|0)<($294|0);
               if ($293) {
                $$0125163$i$i = $292;$595 = $294;
               } else {
                break;
               }
              }
              $$pre183$i$i = HEAP32[$56>>2]|0;
              $296 = $$pre183$i$i;
             } else {
              $296 = $594;
             }
             $295 = (($296) + -1)|0;
             HEAP32[$56>>2] = $295;
             $297 = ($296|0)<(2);
             if ($297) {
              $298 = HEAP32[$50>>2]|0;
              $299 = ($298|0)<(24);
              L156: do {
               if ($299) {
                L158: while(1) {
                 $300 = HEAP32[$52>>2]|0;
                 $301 = ($300|0)==(0);
                 do {
                  if ($301) {
                   $302 = HEAP32[$$pre$phi$iZ2D>>2]|0;
                   $303 = ($302|0)==(0|0);
                   if ($303) {
                    $306 = HEAP32[$47>>2]|0;
                    $307 = HEAP32[$48>>2]|0;
                    $308 = ($306>>>0)<($307>>>0);
                    if (!($308)) {
                     $329 = 0;
                     break;
                    }
                    $309 = ((($306)) + 1|0);
                    HEAP32[$47>>2] = $309;
                    $310 = HEAP8[$306>>0]|0;
                    $311 = $310&255;
                    $313 = $311;
                   } else {
                    $304 = (_fgetc($302)|0);
                    $305 = ($304|0)==(-1);
                    if ($305) {
                     $329 = 0;
                     break;
                    } else {
                     $313 = $304;
                    }
                   }
                   $312 = ($313|0)==(255);
                   if (!($312)) {
                    $329 = $313;
                    break;
                   }
                   $314 = HEAP32[$$pre$phi$iZ2D>>2]|0;
                   $315 = ($314|0)==(0|0);
                   if ($315) {
                    $318 = HEAP32[$47>>2]|0;
                    $319 = HEAP32[$48>>2]|0;
                    $320 = ($318>>>0)<($319>>>0);
                    if (!($320)) {
                     $329 = 255;
                     break;
                    }
                    $321 = ((($318)) + 1|0);
                    HEAP32[$47>>2] = $321;
                    $322 = HEAP8[$318>>0]|0;
                    $323 = $322&255;
                    $$0$i$i15$i = $323;
                   } else {
                    $316 = (_fgetc($314)|0);
                    $317 = ($316|0)==(-1);
                    if ($317) {
                     $329 = 255;
                     break;
                    } else {
                     $$0$i$i15$i = $316;
                    }
                   }
                   $324 = ($$0$i$i15$i|0)==(0);
                   if ($324) {
                    $329 = 255;
                   } else {
                    break L158;
                   }
                  } else {
                   $329 = 0;
                  }
                 } while(0);
                 $326 = HEAP32[$51>>2]|0;
                 $327 = $326 << 8;
                 $328 = $327 | $329;
                 HEAP32[$51>>2] = $328;
                 $330 = HEAP32[$50>>2]|0;
                 $331 = (($330) + 8)|0;
                 HEAP32[$50>>2] = $331;
                 $332 = ($330|0)<(17);
                 if (!($332)) {
                  break L156;
                 }
                }
                $325 = $$0$i$i15$i&255;
                HEAP8[$12>>0] = $325;
                HEAP32[$52>>2] = 1;
               }
              } while(0);
              $333 = HEAP8[$12>>0]|0;
              $334 = $333 & -8;
              $335 = ($334<<24>>24)==(-48);
              if (!($335)) {
               $$8$ph$i$i = 1;
               break L129;
              }
              HEAP32[$50>>2] = 0;
              HEAP32[$51>>2] = 0;
              HEAP32[$52>>2] = 0;
              HEAP32[$53>>2] = 0;
              HEAP32[$54>>2] = 0;
              HEAP32[$55>>2] = 0;
              HEAP8[$12>>0] = -1;
              $336 = HEAP32[$9>>2]|0;
              $337 = ($336|0)==(0);
              $spec$select$i133$i$i = $337 ? 2147483647 : $336;
              HEAP32[$56>>2] = $spec$select$i133$i$i;
              $598 = $spec$select$i133$i$i;
             } else {
              $598 = $295;
             }
             $338 = (($$0127167$i$i) + 1)|0;
             $339 = HEAP32[$59>>2]|0;
             $340 = ($338|0)<($339|0);
             if ($340) {
              $$0127167$i$i = $338;$594 = $598;
             } else {
              break;
             }
            }
            $$pre184$i$i = HEAP32[$58>>2]|0;
            $343 = $$pre184$i$i;$592 = $598;$593 = $339;
           } else {
            $343 = $590;$592 = $591;$593 = $243;
           }
           $341 = (($$0126172$i$i) + 1)|0;
           $342 = ($341|0)<($343|0);
           if ($342) {
            $$0126172$i$i = $341;$243 = $593;$590 = $343;$591 = $592;
           } else {
            break L127;
           }
          }
          $$9$i$i = $$8$ph$i$i;
          break L88;
         }
        } while(0);
        break L26;
       }
      } while(0);
      $344 = ($$9$i$i|0)==(0);
      if ($344) {
       break L5;
      }
      break;
     }
     default: {
      $345 = (_process_marker($0,$$0$i)|0);
      $346 = ($345|0)==(0);
      if ($346) {
       break L5;
      }
     }
     }
    } while(0);
    $347 = HEAP8[$12>>0]|0;
    $348 = ($347<<24>>24)==(-1);
    if ($348) {
     $349 = HEAP32[$$pre$phi$iZ2D>>2]|0;
     $350 = ($349|0)==(0|0);
     if ($350) {
      $354 = HEAP32[$47>>2]|0;
      $355 = HEAP32[$48>>2]|0;
      $356 = ($354>>>0)<($355>>>0);
      if ($356) {
       $357 = ((($354)) + 1|0);
       HEAP32[$47>>2] = $357;
       $358 = HEAP8[$354>>0]|0;
       $359 = $358&255;
       $$0$i$i$i18$i = $359;
      } else {
       $$0$i$i$i18$i = 0;
      }
     } else {
      $351 = (_fgetc($349)|0);
      $352 = ($351|0)==(-1);
      $353 = $352 ? 0 : $351;
      $$0$i$i$i18$i = $353;
     }
     $360 = $$0$i$i$i18$i&255;
     $361 = ($360<<24>>24)==(-1);
     if ($361) {
      while(1) {
       $362 = HEAP32[$$pre$phi$iZ2D>>2]|0;
       $363 = ($362|0)==(0|0);
       if ($363) {
        $367 = HEAP32[$47>>2]|0;
        $368 = HEAP32[$48>>2]|0;
        $369 = ($367>>>0)<($368>>>0);
        if ($369) {
         $370 = ((($367)) + 1|0);
         HEAP32[$47>>2] = $370;
         $371 = HEAP8[$367>>0]|0;
         $372 = $371&255;
         $$0$i$i9$i20$i = $372;
        } else {
         $$0$i$i9$i20$i = 0;
        }
       } else {
        $364 = (_fgetc($362)|0);
        $365 = ($364|0)==(-1);
        $366 = $365 ? 0 : $364;
        $$0$i$i9$i20$i = $366;
       }
       $373 = $$0$i$i9$i20$i&255;
       $374 = ($373<<24>>24)==(-1);
       if (!($374)) {
        $$08$i22$i = $373;
        break;
       }
      }
     } else {
      $$08$i22$i = -1;
     }
    } else {
     HEAP8[$12>>0] = -1;
     $$08$i22$i = $347;
    }
    $375 = $$08$i22$i&255;
    $$0$i = $375;
   }
   if ((label|0) == 31) {
    HEAP32[$49>>2] = 0;
   }
   else if ((label|0) == 38) {
    HEAP32[36596] = 121129;
    break;
   }
   else if ((label|0) == 54) {
    HEAP32[36596] = 121129;
    break;
   }
   else if ((label|0) == 56) {
    HEAP32[36596] = 121129;
    break;
   }
   else if ((label|0) == 59) {
    HEAP32[36596] = 121129;
    break;
   }
   else if ((label|0) == 69) {
    HEAP32[36596] = 121129;
    break;
   }
   else if ((label|0) == 161) {
    $389 = ($4|0)==(0);
    $390 = HEAP32[$8>>2]|0;
    $$183 = $389 ? $390 : $4;
    $391 = ($390|0)==(3);
    $392 = ($$183|0)<(3);
    $or$cond3 = $391 & $392;
    $$ = $or$cond3 ? 1 : $390;
    $393 = ($$|0)>(0);
    L203: do {
     if ($393) {
      $394 = ((($0)) + 13724|0);
      $395 = ((($0)) + 13728|0);
      $$0161215 = 0;
      while(1) {
       $396 = HEAP32[$0>>2]|0;
       $397 = (($396) + 3)|0;
       $398 = (_malloc($397)|0);
       $399 = (((((($0)) + 13748|0) + (($$0161215*56)|0)|0)) + 52|0);
       HEAP32[$399>>2] = $398;
       $400 = ($398|0)==(0|0);
       if ($400) {
        break;
       }
       $413 = HEAP32[$394>>2]|0;
       $414 = (((((($0)) + 13748|0) + (($$0161215*56)|0)|0)) + 4|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = (($413|0) / ($415|0))&-1;
       $417 = (((($6) + ($$0161215<<5)|0)) + 12|0);
       HEAP32[$417>>2] = $416;
       $418 = HEAP32[$395>>2]|0;
       $419 = (((((($0)) + 13748|0) + (($$0161215*56)|0)|0)) + 8|0);
       $420 = HEAP32[$419>>2]|0;
       $421 = (($418|0) / ($420|0))&-1;
       $422 = (((($6) + ($$0161215<<5)|0)) + 16|0);
       HEAP32[$422>>2] = $421;
       $423 = $421 >> 1;
       $424 = (((($6) + ($$0161215<<5)|0)) + 24|0);
       HEAP32[$424>>2] = $423;
       $425 = (($396) + -1)|0;
       $426 = (($425) + ($416))|0;
       $427 = (($426>>>0) / ($416>>>0))&-1;
       $428 = (((($6) + ($$0161215<<5)|0)) + 20|0);
       HEAP32[$428>>2] = $427;
       $429 = (((($6) + ($$0161215<<5)|0)) + 28|0);
       HEAP32[$429>>2] = 0;
       $430 = (((((($0)) + 13748|0) + (($$0161215*56)|0)|0)) + 44|0);
       $431 = HEAP32[$430>>2]|0;
       $432 = (((($6) + ($$0161215<<5)|0)) + 8|0);
       HEAP32[$432>>2] = $431;
       $433 = (((($6) + ($$0161215<<5)|0)) + 4|0);
       HEAP32[$433>>2] = $431;
       switch ($416|0) {
       case 1:  {
        $switch$selectcmp = ($421|0)==(2);
        $switch$select = $switch$selectcmp ? 253 : 252;
        $switch$selectcmp265 = ($421|0)==(1);
        $switch$select266 = $switch$selectcmp265 ? 254 : $switch$select;
        $resample_row_v_2$sink = $switch$select266;
        break;
       }
       case 2:  {
        $switch$selectcmp267 = ($421|0)==(2);
        $switch$select268 = $switch$selectcmp267 ? 255 : 252;
        $switch$selectcmp269 = ($421|0)==(1);
        $switch$select270 = $switch$selectcmp269 ? 256 : $switch$select268;
        $resample_row_v_2$sink = $switch$select270;
        break;
       }
       default: {
        $resample_row_v_2$sink = 252;
       }
       }
       $434 = (($6) + ($$0161215<<5)|0);
       HEAP32[$434>>2] = $resample_row_v_2$sink;
       $435 = (($$0161215) + 1)|0;
       $436 = ($435|0)<($$|0);
       if ($436) {
        $$0161215 = $435;
       } else {
        $438 = $396;
        label = 177;
        break L203;
       }
      }
      $401 = ($390|0)>(0);
      if ($401) {
       $$015$i175 = 0;
       while(1) {
        $402 = (((((($0)) + 13748|0) + (($$015$i175*56)|0)|0)) + 44|0);
        $403 = HEAP32[$402>>2]|0;
        $404 = ($403|0)==(0|0);
        if (!($404)) {
         $405 = (((((($0)) + 13748|0) + (($$015$i175*56)|0)|0)) + 48|0);
         $406 = HEAP32[$405>>2]|0;
         _free($406);
         HEAP32[$402>>2] = 0;
        }
        $407 = (((((($0)) + 13748|0) + (($$015$i175*56)|0)|0)) + 52|0);
        $408 = HEAP32[$407>>2]|0;
        $409 = ($408|0)==(0|0);
        if (!($409)) {
         _free($408);
         HEAP32[$407>>2] = 0;
        }
        $410 = (($$015$i175) + 1)|0;
        $411 = HEAP32[$8>>2]|0;
        $412 = ($410|0)<($411|0);
        if ($412) {
         $$015$i175 = $410;
        } else {
         break;
        }
       }
      }
      HEAP32[36596] = 121182;
      $$2 = 0;
     } else {
      $$pre = HEAP32[$0>>2]|0;
      $438 = $$pre;
      label = 177;
     }
    } while(0);
    do {
     if ((label|0) == 177) {
      $437 = Math_imul($438, $$183)|0;
      $439 = ((($0)) + 4|0);
      $440 = HEAP32[$439>>2]|0;
      $441 = Math_imul($437, $440)|0;
      $442 = (($441) + 1)|0;
      $443 = (_malloc($442)|0);
      $444 = ($443|0)==(0|0);
      if ($444) {
       $445 = ($390|0)>(0);
       if ($445) {
        $$015$i178 = 0;
        while(1) {
         $446 = (((((($0)) + 13748|0) + (($$015$i178*56)|0)|0)) + 44|0);
         $447 = HEAP32[$446>>2]|0;
         $448 = ($447|0)==(0|0);
         if (!($448)) {
          $449 = (((((($0)) + 13748|0) + (($$015$i178*56)|0)|0)) + 48|0);
          $450 = HEAP32[$449>>2]|0;
          _free($450);
          HEAP32[$446>>2] = 0;
         }
         $451 = (((((($0)) + 13748|0) + (($$015$i178*56)|0)|0)) + 52|0);
         $452 = HEAP32[$451>>2]|0;
         $453 = ($452|0)==(0|0);
         if (!($453)) {
          _free($452);
          HEAP32[$451>>2] = 0;
         }
         $454 = (($$015$i178) + 1)|0;
         $455 = HEAP32[$8>>2]|0;
         $456 = ($454|0)<($455|0);
         if ($456) {
          $$015$i178 = $454;
         } else {
          break;
         }
        }
       }
       HEAP32[36596] = 121182;
       $$2 = 0;
       break;
      }
      $457 = ($440|0)==(0);
      if ($457) {
       $572 = $390;
      } else {
       $458 = ($$183|0)>(2);
       $459 = ($$183|0)==(1);
       $460 = ((($5)) + 4|0);
       $461 = ((($5)) + 8|0);
       $$0168211 = 0;$464 = $438;
       while(1) {
        $462 = Math_imul($$0168211, $$183)|0;
        $463 = Math_imul($462, $464)|0;
        $465 = (($443) + ($463)|0);
        if ($393) {
         $$1162199 = 0;
         while(1) {
          $466 = (((($6) + ($$1162199<<5)|0)) + 24|0);
          $467 = HEAP32[$466>>2]|0;
          $468 = (((($6) + ($$1162199<<5)|0)) + 16|0);
          $469 = HEAP32[$468>>2]|0;
          $470 = $469 >> 1;
          $471 = ($467|0)>=($470|0);
          $472 = (($6) + ($$1162199<<5)|0);
          $473 = HEAP32[$472>>2]|0;
          $474 = (((((($0)) + 13748|0) + (($$1162199*56)|0)|0)) + 52|0);
          $475 = HEAP32[$474>>2]|0;
          $476 = (((($6) + ($$1162199<<5)|0)) + 8|0);
          $477 = (((($6) + ($$1162199<<5)|0)) + 4|0);
          $$in = $471 ? $476 : $477;
          $478 = HEAP32[$$in>>2]|0;
          $$in169 = $471 ? $477 : $476;
          $479 = HEAP32[$$in169>>2]|0;
          $480 = (((($6) + ($$1162199<<5)|0)) + 20|0);
          $481 = HEAP32[$480>>2]|0;
          $482 = (((($6) + ($$1162199<<5)|0)) + 12|0);
          $483 = HEAP32[$482>>2]|0;
          $484 = (ftCall_iiiiii($473|0,$475,$478,$479,$481,$483)|0);
          $485 = (($5) + ($$1162199<<2)|0);
          HEAP32[$485>>2] = $484;
          $486 = (($467) + 1)|0;
          HEAP32[$466>>2] = $486;
          $487 = ($486|0)<($469|0);
          if (!($487)) {
           HEAP32[$466>>2] = 0;
           $488 = HEAP32[$476>>2]|0;
           HEAP32[$477>>2] = $488;
           $489 = (((($6) + ($$1162199<<5)|0)) + 28|0);
           $490 = HEAP32[$489>>2]|0;
           $491 = (($490) + 1)|0;
           HEAP32[$489>>2] = $491;
           $492 = (((((($0)) + 13748|0) + (($$1162199*56)|0)|0)) + 32|0);
           $493 = HEAP32[$492>>2]|0;
           $494 = ($491|0)<($493|0);
           if ($494) {
            $495 = $488;
            $496 = (((((($0)) + 13748|0) + (($$1162199*56)|0)|0)) + 36|0);
            $497 = HEAP32[$496>>2]|0;
            $498 = (($495) + ($497)|0);
            HEAP32[$476>>2] = $498;
           }
          }
          $499 = (($$1162199) + 1)|0;
          $exitcond = ($499|0)==($$|0);
          if ($exitcond) {
           break;
          } else {
           $$1162199 = $499;
          }
         }
        }
        $500 = HEAP32[$5>>2]|0;
        do {
         if ($458) {
          $501 = HEAP32[$8>>2]|0;
          $502 = ($501|0)==(3);
          if ($502) {
           $503 = HEAP32[$460>>2]|0;
           $504 = HEAP32[$461>>2]|0;
           $505 = HEAP32[$0>>2]|0;
           $506 = ($505|0)>(0);
           if (!($506)) {
            break;
           }
           $$04652$i = 0;$$053$i = $465;
           while(1) {
            $507 = (($500) + ($$04652$i)|0);
            $508 = HEAP8[$507>>0]|0;
            $509 = $508&255;
            $510 = $509 << 16;
            $511 = $510 | 32768;
            $512 = (($504) + ($$04652$i)|0);
            $513 = HEAP8[$512>>0]|0;
            $514 = $513&255;
            $515 = (($514) + -128)|0;
            $516 = (($503) + ($$04652$i)|0);
            $517 = HEAP8[$516>>0]|0;
            $518 = $517&255;
            $519 = (($518) + -128)|0;
            $520 = ($515*91881)|0;
            $521 = (($520) + ($511))|0;
            $522 = Math_imul($515, -46802)|0;
            $523 = (($522) + ($511))|0;
            $524 = Math_imul($519, -22554)|0;
            $525 = (($523) + ($524))|0;
            $526 = ($519*116130)|0;
            $527 = (($526) + ($511))|0;
            $528 = $521 >> 16;
            $529 = $525 >> 16;
            $530 = $527 >> 16;
            $531 = ($528>>>0)>(255);
            $532 = $521 >>> 31;
            $533 = (($532) + 255)|0;
            $$049$i = $531 ? $533 : $528;
            $534 = ($529>>>0)>(255);
            $535 = $525 >>> 31;
            $536 = (($535) + 255)|0;
            $$048$i = $534 ? $536 : $529;
            $537 = ($530>>>0)>(255);
            $538 = $527 >>> 31;
            $539 = (($538) + 255)|0;
            $$047$i = $537 ? $539 : $530;
            $540 = $$049$i&255;
            HEAP8[$$053$i>>0] = $540;
            $541 = $$048$i&255;
            $542 = ((($$053$i)) + 1|0);
            HEAP8[$542>>0] = $541;
            $543 = $$047$i&255;
            $544 = ((($$053$i)) + 2|0);
            HEAP8[$544>>0] = $543;
            $545 = ((($$053$i)) + 3|0);
            HEAP8[$545>>0] = -1;
            $546 = (($$053$i) + ($$183)|0);
            $547 = (($$04652$i) + 1)|0;
            $exitcond$i = ($547|0)==($505|0);
            if ($exitcond$i) {
             break;
            } else {
             $$04652$i = $547;$$053$i = $546;
            }
           }
          } else {
           $548 = HEAP32[$0>>2]|0;
           $549 = ($548|0)==(0);
           if ($549) {
            break;
           }
           $$0163208 = $465;$$0165207 = 0;
           while(1) {
            $550 = (($500) + ($$0165207)|0);
            $551 = HEAP8[$550>>0]|0;
            $552 = ((($$0163208)) + 2|0);
            HEAP8[$552>>0] = $551;
            $553 = ((($$0163208)) + 1|0);
            HEAP8[$553>>0] = $551;
            HEAP8[$$0163208>>0] = $551;
            $554 = ((($$0163208)) + 3|0);
            HEAP8[$554>>0] = -1;
            $555 = (($$0163208) + ($$183)|0);
            $556 = (($$0165207) + 1)|0;
            $557 = HEAP32[$0>>2]|0;
            $558 = ($556>>>0)<($557>>>0);
            if ($558) {
             $$0163208 = $555;$$0165207 = $556;
            } else {
             break;
            }
           }
          }
         } else {
          $559 = HEAP32[$0>>2]|0;
          $560 = ($559|0)!=(0);
          if ($459) {
           if (!($560)) {
            break;
           }
           _memcpy(($465|0),($500|0),($559|0))|0;
           break;
          }
          if ($560) {
           $$1164201 = $465;$$2167200 = 0;
           while(1) {
            $561 = (($500) + ($$2167200)|0);
            $562 = HEAP8[$561>>0]|0;
            $563 = ((($$1164201)) + 1|0);
            HEAP8[$$1164201>>0] = $562;
            $564 = ((($$1164201)) + 2|0);
            HEAP8[$563>>0] = -1;
            $565 = (($$2167200) + 1)|0;
            $566 = HEAP32[$0>>2]|0;
            $567 = ($565>>>0)<($566>>>0);
            if ($567) {
             $$1164201 = $564;$$2167200 = $565;
            } else {
             break;
            }
           }
          }
         }
        } while(0);
        $568 = (($$0168211) + 1)|0;
        $569 = HEAP32[$439>>2]|0;
        $570 = ($568>>>0)<($569>>>0);
        if (!($570)) {
         break;
        }
        $$pre233 = HEAP32[$0>>2]|0;
        $$0168211 = $568;$464 = $$pre233;
       }
       $$pre234 = HEAP32[$8>>2]|0;
       $572 = $$pre234;
      }
      $571 = ($572|0)>(0);
      if ($571) {
       $$015$i = 0;
       while(1) {
        $573 = (((((($0)) + 13748|0) + (($$015$i*56)|0)|0)) + 44|0);
        $574 = HEAP32[$573>>2]|0;
        $575 = ($574|0)==(0|0);
        if (!($575)) {
         $576 = (((((($0)) + 13748|0) + (($$015$i*56)|0)|0)) + 48|0);
         $577 = HEAP32[$576>>2]|0;
         _free($577);
         HEAP32[$573>>2] = 0;
        }
        $578 = (((((($0)) + 13748|0) + (($$015$i*56)|0)|0)) + 52|0);
        $579 = HEAP32[$578>>2]|0;
        $580 = ($579|0)==(0|0);
        if (!($580)) {
         _free($579);
         HEAP32[$578>>2] = 0;
        }
        $581 = (($$015$i) + 1)|0;
        $582 = HEAP32[$8>>2]|0;
        $583 = ($581|0)<($582|0);
        if ($583) {
         $$015$i = $581;
        } else {
         break;
        }
       }
      }
      $584 = HEAP32[$0>>2]|0;
      HEAP32[$1>>2] = $584;
      $585 = HEAP32[$439>>2]|0;
      HEAP32[$2>>2] = $585;
      $586 = ($3|0)==(0|0);
      if ($586) {
       $$2 = $443;
      } else {
       $587 = HEAP32[$8>>2]|0;
       HEAP32[$3>>2] = $587;
       $$2 = $443;
      }
     }
    } while(0);
    $$3 = $$2;
    STACKTOP = sp;return ($$3|0);
   }
   HEAP32[36596] = 121129;
  }
 } while(0);
 $376 = HEAP32[$8>>2]|0;
 $377 = ($376|0)>(0);
 if (!($377)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $$015$i172 = 0;
 while(1) {
  $378 = (((((($0)) + 13748|0) + (($$015$i172*56)|0)|0)) + 44|0);
  $379 = HEAP32[$378>>2]|0;
  $380 = ($379|0)==(0|0);
  if (!($380)) {
   $381 = (((((($0)) + 13748|0) + (($$015$i172*56)|0)|0)) + 48|0);
   $382 = HEAP32[$381>>2]|0;
   _free($382);
   HEAP32[$378>>2] = 0;
  }
  $383 = (((((($0)) + 13748|0) + (($$015$i172*56)|0)|0)) + 52|0);
  $384 = HEAP32[$383>>2]|0;
  $385 = ($384|0)==(0|0);
  if (!($385)) {
   _free($384);
   HEAP32[$383>>2] = 0;
  }
  $386 = (($$015$i172) + 1)|0;
  $387 = HEAP32[$8>>2]|0;
  $388 = ($386|0)<($387|0);
  if ($388) {
   $$015$i172 = $386;
  } else {
   $$3 = 0;
   break;
  }
 }
 STACKTOP = sp;return ($$3|0);
}
function _parse_png_file($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$$i$us$i = 0, $$$i464$i$us = 0, $$0$i = 0, $$0$i$1$i = 0, $$0$i$2$i = 0, $$0$i$3$i = 0, $$0$i$4$i = 0, $$0$i$5$i = 0, $$0$i$6$i = 0, $$0$i$7$i = 0, $$0$i$i = 0, $$0$i$i235$ph = 0, $$0$i$i237$ph = 0, $$0$i$i240 = 0, $$0$i$i243 = 0, $$0$i$us$i = 0, $$0$i227 = 0, $$0$i227311313 = 0, $$0$i229 = 0;
 var $$0$i231 = 0, $$0$i233 = 0, $$0$i277 = 0, $$0$i3$i = 0, $$0$i3$i$i$ph = 0, $$0$i3$i$i$ph$i = 0, $$0$i3$i$i16$ph$i = 0, $$0$i3$i$i216$ph = 0, $$0$i3$i$ph$i = 0, $$0$i3$i225 = 0, $$0$i3$i25$i = 0, $$0$i3$i266 = 0, $$0$i465$i$us = 0, $$0161 = 0, $$0166 = 0, $$0169 = 0, $$0172 = 0, $$0178418 = 0, $$0184 = 0, $$0187415 = 0;
 var $$0188 = 0, $$03$i = 0, $$0322$i = 0, $$0388643$us$i = 0, $$0406485$i = 0, $$0406485$i$us = 0, $$0406485$i$us407 = 0, $$0406485$us$i = 0, $$0406485$us486$i = 0, $$0435648$i411 = 0, $$0436$us$i = 0, $$0436641$i = 0, $$0436644$us$i = 0, $$0573$i = 0, $$0582$i = 0, $$10398528$i = 0, $$10398528$us$i = 0, $$10416534$us$i = 0, $$10430539$us$i = 0, $$10446$i = 0;
 var $$10446$us$i = 0, $$10446526$i = 0, $$10446530$i = 0, $$10446530$us$i = 0, $$10529$us$i = 0, $$11399516$i = 0, $$11399516$us$i = 0, $$11417522$us$i = 0, $$11431527$us$i = 0, $$11447$i = 0, $$11447$us$i = 0, $$11447514$i = 0, $$11447518$i = 0, $$11447518$us$i = 0, $$11517$us$i = 0, $$1162 = 0, $$1167 = 0, $$1170 = 0, $$1173 = 0, $$1179412 = 0;
 var $$1185 = 0, $$12400505$i = 0, $$12400505$us$i = 0, $$12418510$us$i = 0, $$12432515$us$i = 0, $$12448$i = 0, $$12448$us$i = 0, $$12448503$i = 0, $$12448506$i = 0, $$12448506$us$i = 0, $$1334$i = 0, $$13401495$i = 0, $$13401495$us$i = 0, $$13419499$us$i = 0, $$13433504$us$i = 0, $$13449$i = 0, $$13449$us$i = 0, $$13449493$i = 0, $$13449496$i = 0, $$13449496$us$i = 0;
 var $$1389632$us$i = 0, $$1407637$us$i = 0, $$1421642$us$i = 0, $$1437$us$i = 0, $$1437630$i = 0, $$1437633$us$i = 0, $$14434494$us$i = 0, $$14489$us$i = 0, $$15$i = 0, $$15$i285 = 0, $$1594$i = 0, $$16$ph$i = 0, $$2174 = 0, $$2390620$us$i = 0, $$2408626$us$i = 0, $$2422631$us$i = 0, $$2438$us$i = 0, $$2438618$i = 0, $$2438622$us$i = 0, $$2621$us$i = 0;
 var $$3164 = 0, $$3175 = 0, $$3391608$us$i = 0, $$3409614$us$i = 0, $$3423619$us$i = 0, $$3439$us$i = 0, $$3439606$i = 0, $$3439610$us$i = 0, $$3609$us$i = 0, $$4176 = 0, $$4392596$i$us = 0, $$4410602$us$i = 0, $$4424607$us$i = 0, $$4440$i$us = 0, $$4440594$i = 0, $$4440598$i$us = 0, $$4597$i$us = 0, $$5393585$us$i = 0, $$5411590$i$us = 0, $$5425595$i$us = 0;
 var $$5441$us$i = 0, $$5441583$i = 0, $$5441586$us$i = 0, $$6394574$us$i = 0, $$6412579$us$i = 0, $$6426584$us$i = 0, $$6442$us$i = 0, $$6442572$i = 0, $$6442575$us$i = 0, $$7 = 0, $$7395563$i = 0, $$7395563$us$i = 0, $$7413568$us$i = 0, $$7427573$us$i = 0, $$7443$i = 0, $$7443$us$i = 0, $$7443561$i = 0, $$7443564$i = 0, $$7443564$us$i = 0, $$8396552$i = 0;
 var $$8396552$us$i = 0, $$8414557$us$i = 0, $$8428562$us$i = 0, $$8444$i = 0, $$8444$us$i = 0, $$8444550$i = 0, $$8444553$i = 0, $$8444553$us$i = 0, $$9397540$i = 0, $$9397540$us$i = 0, $$9415546$us$i = 0, $$9429551$us$i = 0, $$9445$i = 0, $$9445$us$i = 0, $$9445538$i = 0, $$9445542$i = 0, $$9445542$us$i = 0, $$9541$us$i = 0, $$idx$val = 0, $$idx190$val = 0;
 var $$idx191$val = 0, $$lobit = 0, $$op$i = 0, $$op$i$i = 0, $$op$i$i$i = 0, $$op$i$i194 = 0, $$op$i$i207 = 0, $$op$i$i7$i = 0, $$op$i223 = 0, $$op$i23$i = 0, $$op$i264 = 0, $$pn = 0, $$pn421 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i193 = 0, $$pre$i$i206 = 0, $$pre$i$i247 = 0;
 var $$pre$i$i6$i = 0, $$pre$i10$i = 0, $$pre$i18$i = 0, $$pre$i197 = 0, $$pre$i203 = 0, $$pre$i210 = 0, $$pre$i22$i = 0, $$pre$i222 = 0, $$pre$i251 = 0, $$pre$i263 = 0, $$pre$i271 = 0, $$pre$i278 = 0, $$pre27$i = 0, $$pre29$i = 0, $$pre30$i = 0, $$pre31$i = 0, $$pre33$i = 0, $$pre35$i = 0, $$pre4$i = 0, $$pre4$i$i = 0;
 var $$pre4$i12$i = 0, $$pre4$i212 = 0, $$pre4$i253 = 0, $$pre506 = 0, $$pre507 = 0, $$pre508 = 0, $$pre509 = 0, $$pre510 = 0, $$pre513 = 0, $$pre514 = 0, $$pre515 = 0, $$pre516 = 0, $$pre517 = 0, $$pre518 = 0, $$pre519 = 0, $$pre520 = 0, $$pre521 = 0, $$pre522 = 0, $$pre523 = 0, $$pre524 = 0;
 var $$pre525 = 0, $$pre526 = 0, $$sink696 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0;
 var $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0;
 var $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0;
 var $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0;
 var $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0;
 var $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0;
 var $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0;
 var $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0;
 var $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0;
 var $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0;
 var $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0;
 var $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0;
 var $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0;
 var $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0;
 var $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0;
 var $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0;
 var $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0;
 var $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0;
 var $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0;
 var $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0;
 var $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0;
 var $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0;
 var $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0;
 var $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0;
 var $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0;
 var $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0;
 var $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0;
 var $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0;
 var $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0;
 var $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0;
 var $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0;
 var $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0;
 var $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0;
 var $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0;
 var $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0;
 var $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0;
 var $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0;
 var $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i280 = 0, $exitcond$i283 = 0, $exitcond706$i = 0, $exitcond707$i = 0, $exitcond707$i$us = 0, $exitcond707$i$us408 = 0, $exitcond709$i = 0, $exitcond714$i = 0, $exitcond719$i = 0, $exitcond724$i = 0, $exitcond729$i = 0, $exitcond734$i = 0;
 var $exitcond739$i = 0, $exitcond745$i = 0, $exitcond750$i = 0, $exitcond753$i$us = 0, $exitcond758$i = 0, $exitcond763$i = 0, $exitcond768$i = 0, $exitcond773$i = 0, $exitcond8$i = 0, $exitcond8$i286 = 0, $ispos$i$us$i = 0, $ispos$i457$i$us = 0, $ispos26$i$us$i = 0, $ispos26$i459$i$us = 0, $ispos28$i$us$i = 0, $ispos28$i461$i$us = 0, $neg$i$us$i = 0, $neg$i458$i$us = 0, $neg27$i453$us$i = 0, $neg27$i460$i$us = 0;
 var $neg29$i454$us$i = 0, $neg29$i462$i$us = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i$us$i = 0, $or$cond$i463$i$us = 0, $or$cond189 = 0, $or$cond5$not = 0, $or$cond7 = 0, $phitmp$i = 0, $phitmp$i$i = 0, $phitmp$i$i$i = 0, $phitmp$i$i192 = 0, $phitmp$i$i205 = 0, $phitmp$i$i5$i = 0, $phitmp$i19$i = 0, $phitmp$i219 = 0, $scevgep708$i = 0, $scevgep711$i = 0, $scevgep713$i = 0;
 var $scevgep716$i = 0, $scevgep718$i = 0, $scevgep721$i = 0, $scevgep723$i = 0, $scevgep726$i = 0, $scevgep728$i = 0, $scevgep731$i = 0, $scevgep733$i = 0, $scevgep736$i = 0, $scevgep738$i = 0, $scevgep742$i = 0, $scevgep744$i = 0, $scevgep747$i = 0, $scevgep749$i = 0, $scevgep752$i = 0, $scevgep755$i = 0, $scevgep757$i = 0, $scevgep760$i = 0, $scevgep762$i = 0, $scevgep765$i = 0;
 var $scevgep767$i = 0, $scevgep770$i = 0, $scevgep772$i = 0, $scevgep776$i = 0, $spec$select = 0, $switch$split2D = 0, $switch$split32D = 0, $switch$split62D = 0, $switch$split92D = 0, $trunc$i = 0, $trunc450$i = 0, $trunc451$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5104|0;
 $3 = sp + 1024|0;
 $4 = sp;
 $5 = sp + 5096|0;
 $6 = ((($0)) + 16|0);
 $7 = ((($0)) + 20|0);
 $8 = ((($0)) + 24|0);
 $9 = HEAP32[$6>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $15 = HEAP32[$7>>2]|0;
  $16 = HEAP32[$8>>2]|0;
  $17 = ($15>>>0)<($16>>>0);
  if ($17) {
   $18 = ((($15)) + 1|0);
   HEAP32[$7>>2] = $18;
   $19 = HEAP8[$15>>0]|0;
   $20 = $19&255;
   $$0$i$i = $20;
   label = 6;
  }
 } else {
  $13 = (_fgetc($9)|0);
  $14 = ($13|0)==(-1);
  if (!($14)) {
   $$0$i$i = $13;
   label = 6;
  }
 }
 do {
  if ((label|0) == 6) {
   $21 = ($$0$i$i|0)==(137);
   if ($21) {
    $11 = HEAP32[$6>>2]|0;
    $12 = ($11|0)==(0|0);
    if ($12) {
     $24 = HEAP32[$7>>2]|0;
     $25 = HEAP32[$8>>2]|0;
     $26 = ($24>>>0)<($25>>>0);
     if (!($26)) {
      break;
     }
     $27 = ((($24)) + 1|0);
     HEAP32[$7>>2] = $27;
     $28 = HEAP8[$24>>0]|0;
     $29 = $28&255;
     $$0$i$1$i = $29;
    } else {
     $22 = (_fgetc($11)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      break;
     } else {
      $$0$i$1$i = $22;
     }
    }
    $30 = ($$0$i$1$i|0)==(80);
    if ($30) {
     $31 = HEAP32[$6>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      $35 = HEAP32[$7>>2]|0;
      $36 = HEAP32[$8>>2]|0;
      $37 = ($35>>>0)<($36>>>0);
      if (!($37)) {
       break;
      }
      $38 = ((($35)) + 1|0);
      HEAP32[$7>>2] = $38;
      $39 = HEAP8[$35>>0]|0;
      $40 = $39&255;
      $$0$i$2$i = $40;
     } else {
      $33 = (_fgetc($31)|0);
      $34 = ($33|0)==(-1);
      if ($34) {
       break;
      } else {
       $$0$i$2$i = $33;
      }
     }
     $41 = ($$0$i$2$i|0)==(78);
     if ($41) {
      $42 = HEAP32[$6>>2]|0;
      $43 = ($42|0)==(0|0);
      if ($43) {
       $46 = HEAP32[$7>>2]|0;
       $47 = HEAP32[$8>>2]|0;
       $48 = ($46>>>0)<($47>>>0);
       if (!($48)) {
        break;
       }
       $49 = ((($46)) + 1|0);
       HEAP32[$7>>2] = $49;
       $50 = HEAP8[$46>>0]|0;
       $51 = $50&255;
       $$0$i$3$i = $51;
      } else {
       $44 = (_fgetc($42)|0);
       $45 = ($44|0)==(-1);
       if ($45) {
        break;
       } else {
        $$0$i$3$i = $44;
       }
      }
      $52 = ($$0$i$3$i|0)==(71);
      if ($52) {
       $53 = HEAP32[$6>>2]|0;
       $54 = ($53|0)==(0|0);
       if ($54) {
        $57 = HEAP32[$7>>2]|0;
        $58 = HEAP32[$8>>2]|0;
        $59 = ($57>>>0)<($58>>>0);
        if (!($59)) {
         break;
        }
        $60 = ((($57)) + 1|0);
        HEAP32[$7>>2] = $60;
        $61 = HEAP8[$57>>0]|0;
        $62 = $61&255;
        $$0$i$4$i = $62;
       } else {
        $55 = (_fgetc($53)|0);
        $56 = ($55|0)==(-1);
        if ($56) {
         break;
        } else {
         $$0$i$4$i = $55;
        }
       }
       $63 = ($$0$i$4$i|0)==(13);
       if ($63) {
        $64 = HEAP32[$6>>2]|0;
        $65 = ($64|0)==(0|0);
        if ($65) {
         $68 = HEAP32[$7>>2]|0;
         $69 = HEAP32[$8>>2]|0;
         $70 = ($68>>>0)<($69>>>0);
         if (!($70)) {
          break;
         }
         $71 = ((($68)) + 1|0);
         HEAP32[$7>>2] = $71;
         $72 = HEAP8[$68>>0]|0;
         $73 = $72&255;
         $$0$i$5$i = $73;
        } else {
         $66 = (_fgetc($64)|0);
         $67 = ($66|0)==(-1);
         if ($67) {
          break;
         } else {
          $$0$i$5$i = $66;
         }
        }
        $74 = ($$0$i$5$i|0)==(10);
        if ($74) {
         $75 = HEAP32[$6>>2]|0;
         $76 = ($75|0)==(0|0);
         if ($76) {
          $79 = HEAP32[$7>>2]|0;
          $80 = HEAP32[$8>>2]|0;
          $81 = ($79>>>0)<($80>>>0);
          if (!($81)) {
           break;
          }
          $82 = ((($79)) + 1|0);
          HEAP32[$7>>2] = $82;
          $83 = HEAP8[$79>>0]|0;
          $84 = $83&255;
          $$0$i$6$i = $84;
         } else {
          $77 = (_fgetc($75)|0);
          $78 = ($77|0)==(-1);
          if ($78) {
           break;
          } else {
           $$0$i$6$i = $77;
          }
         }
         $85 = ($$0$i$6$i|0)==(26);
         if ($85) {
          $86 = HEAP32[$6>>2]|0;
          $87 = ($86|0)==(0|0);
          if ($87) {
           $90 = HEAP32[$7>>2]|0;
           $91 = HEAP32[$8>>2]|0;
           $92 = ($90>>>0)<($91>>>0);
           if (!($92)) {
            break;
           }
           $93 = ((($90)) + 1|0);
           HEAP32[$7>>2] = $93;
           $94 = HEAP8[$90>>0]|0;
           $95 = $94&255;
           $$0$i$7$i = $95;
          } else {
           $88 = (_fgetc($86)|0);
           $89 = ($88|0)==(-1);
           if ($89) {
            break;
           } else {
            $$0$i$7$i = $88;
           }
          }
          $96 = ($$0$i$7$i|0)==(10);
          if ($96) {
           $97 = ($1|0)==(1);
           if ($97) {
            $$7 = 1;
            STACKTOP = sp;return ($$7|0);
           }
           $98 = ((($0)) + 28|0);
           $99 = ((($0)) + 8|0);
           $100 = ((($0)) + 4|0);
           $$0161 = 0;$$0166 = 0;$$0169 = 0;$$0172 = 0;$$0184 = 0;$$0188 = 1;
           L53: while(1) {
            $101 = HEAP32[$6>>2]|0;
            $102 = ($101|0)==(0|0);
            do {
             if ($102) {
              $103 = HEAP32[$7>>2]|0;
              $104 = HEAP32[$8>>2]|0;
              $105 = ($103>>>0)<($104>>>0);
              if (!($105)) {
               $114 = $103;$115 = $104;$120 = 0;
               label = 49;
               break;
              }
              $106 = ((($103)) + 1|0);
              HEAP32[$7>>2] = $106;
              $107 = HEAP8[$103>>0]|0;
              $108 = $107&255;
              $phitmp$i$i$i = $108 << 8;
              $114 = $106;$115 = $104;$120 = $phitmp$i$i$i;
              label = 49;
             } else {
              $109 = (_fgetc($101)|0);
              $110 = ($109|0)==(-1);
              $$pre$i$i$i = HEAP32[$6>>2]|0;
              $$op$i$i$i = $109 << 8;
              $111 = $110 ? 0 : $$op$i$i$i;
              $112 = ($$pre$i$i$i|0)==(0|0);
              if ($112) {
               $$pre$i$i = HEAP32[$7>>2]|0;
               $$pre4$i$i = HEAP32[$8>>2]|0;
               $114 = $$pre$i$i;$115 = $$pre4$i$i;$120 = $111;
               label = 49;
               break;
              }
              $122 = (_fgetc($$pre$i$i$i)|0);
              $123 = ($122|0)==(-1);
              $124 = $123 ? 0 : $122;
              $$pre$i = HEAP32[$6>>2]|0;
              $125 = (($124) + ($111))|0;
              $126 = $125 << 16;
              $127 = ($$pre$i|0)==(0|0);
              if ($127) {
               $$pre = HEAP32[$7>>2]|0;
               $$pre506 = HEAP32[$8>>2]|0;
               $1028 = $126;$129 = $$pre;$130 = $$pre506;
               label = 54;
               break;
              }
              $134 = (_fgetc($$pre$i)|0);
              $135 = ($134|0)==(-1);
              $$pre$i18$i = HEAP32[$6>>2]|0;
              $$op$i$i = $134 << 8;
              $136 = $135 ? 0 : $$op$i$i;
              $137 = ($$pre$i18$i|0)==(0|0);
              if ($137) {
               $$pre27$i = HEAP32[$7>>2]|0;
               $$pre29$i = HEAP32[$8>>2]|0;
               $139 = $$pre27$i;$140 = $$pre29$i;$145 = $126;$146 = $136;
               label = 58;
               break;
              }
              $148 = (_fgetc($$pre$i18$i)|0);
              $149 = ($148|0)==(-1);
              $150 = $149 ? 0 : $148;
              $$pre30$i = HEAP32[$6>>2]|0;
              $151 = (($136) + ($126))|0;
              $152 = (($151) + ($150))|0;
              $153 = ($$pre30$i|0)==(0|0);
              if ($153) {
               $$pre507 = HEAP32[$7>>2]|0;
               $$pre508 = HEAP32[$8>>2]|0;
               $1030 = $152;$155 = $$pre507;$156 = $$pre508;
               label = 63;
               break;
              }
              $160 = (_fgetc($$pre30$i)|0);
              $161 = ($160|0)==(-1);
              $$pre$i$i6$i = HEAP32[$6>>2]|0;
              $$op$i$i7$i = $160 << 8;
              $162 = $161 ? 0 : $$op$i$i7$i;
              $163 = ($$pre$i$i6$i|0)==(0|0);
              if ($163) {
               $$pre$i10$i = HEAP32[$7>>2]|0;
               $$pre4$i12$i = HEAP32[$8>>2]|0;
               $1031 = $152;$165 = $$pre$i10$i;$166 = $$pre4$i12$i;$171 = $162;
               label = 67;
               break;
              }
              $173 = (_fgetc($$pre$i$i6$i)|0);
              $174 = ($173|0)==(-1);
              $175 = $174 ? 0 : $173;
              $$pre31$i = HEAP32[$6>>2]|0;
              $176 = (($175) + ($162))|0;
              $177 = $176 << 16;
              $178 = ($$pre31$i|0)==(0|0);
              if ($178) {
               $$pre509 = HEAP32[$7>>2]|0;
               $$pre510 = HEAP32[$8>>2]|0;
               $1033 = $177;$1034 = $152;$180 = $$pre509;$181 = $$pre510;
               label = 72;
               break;
              }
              $185 = (_fgetc($$pre31$i)|0);
              $186 = ($185|0)==(-1);
              $$pre$i22$i = HEAP32[$6>>2]|0;
              $$op$i23$i = $185 << 8;
              $187 = $186 ? 0 : $$op$i23$i;
              $188 = ($$pre$i22$i|0)==(0|0);
              if ($188) {
               $$pre33$i = HEAP32[$7>>2]|0;
               $$pre35$i = HEAP32[$8>>2]|0;
               $1035 = $177;$1036 = $152;$1037 = $187;$193 = $$pre33$i;$194 = $$pre35$i;
               label = 77;
               break;
              } else {
               $189 = (_fgetc($$pre$i22$i)|0);
               $190 = ($189|0)==(-1);
               $191 = $190 ? 0 : $189;
               $$0$i3$i25$i = $191;$199 = $177;$200 = $187;$204 = $152;
               break;
              }
             }
            } while(0);
            if ((label|0) == 49) {
             label = 0;
             $113 = ($114>>>0)<($115>>>0);
             if ($113) {
              $116 = ((($114)) + 1|0);
              HEAP32[$7>>2] = $116;
              $117 = HEAP8[$114>>0]|0;
              $118 = $117&255;
              $$0$i3$i$i$ph$i = $118;$1027 = $116;
             } else {
              $$0$i3$i$i$ph$i = 0;$1027 = $114;
             }
             $119 = (($$0$i3$i$i$ph$i) + ($120))|0;
             $121 = $119 << 16;
             $1028 = $121;$129 = $1027;$130 = $115;
             label = 54;
            }
            do {
             if ((label|0) == 54) {
              label = 0;
              $128 = ($129>>>0)<($130>>>0);
              if (!($128)) {
               $139 = $129;$140 = $130;$145 = $1028;$146 = 0;
               label = 58;
               break;
              }
              $131 = ((($129)) + 1|0);
              HEAP32[$7>>2] = $131;
              $132 = HEAP8[$129>>0]|0;
              $133 = $132&255;
              $phitmp$i$i = $133 << 8;
              $139 = $131;$140 = $130;$145 = $1028;$146 = $phitmp$i$i;
              label = 58;
             }
            } while(0);
            if ((label|0) == 58) {
             label = 0;
             $138 = ($139>>>0)<($140>>>0);
             if ($138) {
              $141 = ((($139)) + 1|0);
              HEAP32[$7>>2] = $141;
              $142 = HEAP8[$139>>0]|0;
              $143 = $142&255;
              $$0$i3$i$ph$i = $143;$1029 = $141;
             } else {
              $$0$i3$i$ph$i = 0;$1029 = $139;
             }
             $144 = (($146) + ($145))|0;
             $147 = (($144) + ($$0$i3$i$ph$i))|0;
             $1030 = $147;$155 = $1029;$156 = $140;
             label = 63;
            }
            do {
             if ((label|0) == 63) {
              label = 0;
              $154 = ($155>>>0)<($156>>>0);
              if (!($154)) {
               $1031 = $1030;$165 = $155;$166 = $156;$171 = 0;
               label = 67;
               break;
              }
              $157 = ((($155)) + 1|0);
              HEAP32[$7>>2] = $157;
              $158 = HEAP8[$155>>0]|0;
              $159 = $158&255;
              $phitmp$i$i5$i = $159 << 8;
              $1031 = $1030;$165 = $157;$166 = $156;$171 = $phitmp$i$i5$i;
              label = 67;
             }
            } while(0);
            if ((label|0) == 67) {
             label = 0;
             $164 = ($165>>>0)<($166>>>0);
             if ($164) {
              $167 = ((($165)) + 1|0);
              HEAP32[$7>>2] = $167;
              $168 = HEAP8[$165>>0]|0;
              $169 = $168&255;
              $$0$i3$i$i16$ph$i = $169;$1032 = $167;
             } else {
              $$0$i3$i$i16$ph$i = 0;$1032 = $165;
             }
             $170 = (($$0$i3$i$i16$ph$i) + ($171))|0;
             $172 = $170 << 16;
             $1033 = $172;$1034 = $1031;$180 = $1032;$181 = $166;
             label = 72;
            }
            do {
             if ((label|0) == 72) {
              label = 0;
              $179 = ($180>>>0)<($181>>>0);
              if (!($179)) {
               $1035 = $1033;$1036 = $1034;$1037 = 0;$193 = $180;$194 = $181;
               label = 77;
               break;
              }
              $182 = ((($180)) + 1|0);
              HEAP32[$7>>2] = $182;
              $183 = HEAP8[$180>>0]|0;
              $184 = $183&255;
              $phitmp$i19$i = $184 << 8;
              $1035 = $1033;$1036 = $1034;$1037 = $phitmp$i19$i;$193 = $182;$194 = $181;
              label = 77;
             }
            } while(0);
            do {
             if ((label|0) == 77) {
              label = 0;
              $192 = ($193>>>0)<($194>>>0);
              if (!($192)) {
               $$0$i3$i25$i = 0;$199 = $1035;$200 = $1037;$204 = $1036;
               break;
              }
              $195 = ((($193)) + 1|0);
              HEAP32[$7>>2] = $195;
              $196 = HEAP8[$193>>0]|0;
              $197 = $196&255;
              $$0$i3$i25$i = $197;$199 = $1035;$200 = $1037;$204 = $1036;
             }
            } while(0);
            $198 = (($200) + ($199))|0;
            $201 = (($198) + ($$0$i3$i25$i))|0;
            L108: do {
             if ($$0188) {
              $202 = ($201|0)==(1229472850);
              if (!($202)) {
               label = 81;
               break L53;
              }
              $203 = ($204|0)==(13);
              if (!($203)) {
               label = 85;
               break L53;
              }
              $205 = HEAP32[$6>>2]|0;
              $206 = ($205|0)==(0|0);
              do {
               if ($206) {
                $207 = HEAP32[$7>>2]|0;
                $208 = HEAP32[$8>>2]|0;
                $209 = ($207>>>0)<($208>>>0);
                if (!($209)) {
                 $218 = $207;$219 = $208;$224 = 0;
                 label = 91;
                 break;
                }
                $210 = ((($207)) + 1|0);
                HEAP32[$7>>2] = $210;
                $211 = HEAP8[$207>>0]|0;
                $212 = $211&255;
                $phitmp$i$i192 = $212 << 8;
                $218 = $210;$219 = $208;$224 = $phitmp$i$i192;
                label = 91;
               } else {
                $213 = (_fgetc($205)|0);
                $214 = ($213|0)==(-1);
                $$pre$i$i193 = HEAP32[$6>>2]|0;
                $$op$i$i194 = $213 << 8;
                $215 = $214 ? 0 : $$op$i$i194;
                $216 = ($$pre$i$i193|0)==(0|0);
                if ($216) {
                 $$pre$i197 = HEAP32[$7>>2]|0;
                 $$pre4$i = HEAP32[$8>>2]|0;
                 $218 = $$pre$i197;$219 = $$pre4$i;$224 = $215;
                 label = 91;
                 break;
                }
                $226 = (_fgetc($$pre$i$i193)|0);
                $227 = ($226|0)==(-1);
                $228 = $227 ? 0 : $226;
                $$pre518 = HEAP32[$6>>2]|0;
                $229 = (($228) + ($215))|0;
                $230 = $229 << 16;
                $231 = ($$pre518|0)==(0|0);
                if ($231) {
                 $1038 = $230;
                 label = 95;
                 break;
                }
                $238 = (_fgetc($$pre518)|0);
                $239 = ($238|0)==(-1);
                $$pre$i203 = HEAP32[$6>>2]|0;
                $$op$i = $238 << 8;
                $240 = $239 ? 0 : $$op$i;
                $241 = ($$pre$i203|0)==(0|0);
                if ($241) {
                 $$pre519 = HEAP32[$7>>2]|0;
                 $$pre520 = HEAP32[$8>>2]|0;
                 $1039 = $230;$1040 = $240;$246 = $$pre519;$247 = $$pre520;
                 label = 100;
                 break;
                } else {
                 $242 = (_fgetc($$pre$i203)|0);
                 $243 = ($242|0)==(-1);
                 $244 = $243 ? 0 : $242;
                 $$0$i3$i = $244;$252 = $230;$253 = $240;
                 break;
                }
               }
              } while(0);
              if ((label|0) == 91) {
               label = 0;
               $217 = ($218>>>0)<($219>>>0);
               if ($217) {
                $220 = ((($218)) + 1|0);
                HEAP32[$7>>2] = $220;
                $221 = HEAP8[$218>>0]|0;
                $222 = $221&255;
                $$0$i3$i$i$ph = $222;
               } else {
                $$0$i3$i$i$ph = 0;
               }
               $223 = (($$0$i3$i$i$ph) + ($224))|0;
               $225 = $223 << 16;
               $1038 = $225;
               label = 95;
              }
              do {
               if ((label|0) == 95) {
                label = 0;
                $232 = HEAP32[$7>>2]|0;
                $233 = HEAP32[$8>>2]|0;
                $234 = ($232>>>0)<($233>>>0);
                if (!($234)) {
                 $1039 = $1038;$1040 = 0;$246 = $232;$247 = $233;
                 label = 100;
                 break;
                }
                $235 = ((($232)) + 1|0);
                HEAP32[$7>>2] = $235;
                $236 = HEAP8[$232>>0]|0;
                $237 = $236&255;
                $phitmp$i = $237 << 8;
                $1039 = $1038;$1040 = $phitmp$i;$246 = $235;$247 = $233;
                label = 100;
               }
              } while(0);
              do {
               if ((label|0) == 100) {
                label = 0;
                $245 = ($246>>>0)<($247>>>0);
                if (!($245)) {
                 $$0$i3$i = 0;$252 = $1039;$253 = $1040;
                 break;
                }
                $248 = ((($246)) + 1|0);
                HEAP32[$7>>2] = $248;
                $249 = HEAP8[$246>>0]|0;
                $250 = $249&255;
                $$0$i3$i = $250;$252 = $1039;$253 = $1040;
               }
              } while(0);
              $251 = (($253) + ($252))|0;
              $254 = (($251) + ($$0$i3$i))|0;
              HEAP32[$0>>2] = $254;
              $255 = ($254>>>0)>(16777216);
              if ($255) {
               label = 103;
               break L53;
              }
              $256 = HEAP32[$6>>2]|0;
              $257 = ($256|0)==(0|0);
              do {
               if ($257) {
                $258 = HEAP32[$7>>2]|0;
                $259 = HEAP32[$8>>2]|0;
                $260 = ($258>>>0)<($259>>>0);
                if (!($260)) {
                 $269 = $258;$270 = $259;$275 = 0;
                 label = 109;
                 break;
                }
                $261 = ((($258)) + 1|0);
                HEAP32[$7>>2] = $261;
                $262 = HEAP8[$258>>0]|0;
                $263 = $262&255;
                $phitmp$i$i205 = $263 << 8;
                $269 = $261;$270 = $259;$275 = $phitmp$i$i205;
                label = 109;
               } else {
                $264 = (_fgetc($256)|0);
                $265 = ($264|0)==(-1);
                $$pre$i$i206 = HEAP32[$6>>2]|0;
                $$op$i$i207 = $264 << 8;
                $266 = $265 ? 0 : $$op$i$i207;
                $267 = ($$pre$i$i206|0)==(0|0);
                if ($267) {
                 $$pre$i210 = HEAP32[$7>>2]|0;
                 $$pre4$i212 = HEAP32[$8>>2]|0;
                 $269 = $$pre$i210;$270 = $$pre4$i212;$275 = $266;
                 label = 109;
                 break;
                }
                $277 = (_fgetc($$pre$i$i206)|0);
                $278 = ($277|0)==(-1);
                $279 = $278 ? 0 : $277;
                $$pre521 = HEAP32[$6>>2]|0;
                $280 = (($279) + ($266))|0;
                $281 = $280 << 16;
                $282 = ($$pre521|0)==(0|0);
                if ($282) {
                 $1041 = $281;
                 label = 113;
                 break;
                }
                $289 = (_fgetc($$pre521)|0);
                $290 = ($289|0)==(-1);
                $$pre$i222 = HEAP32[$6>>2]|0;
                $$op$i223 = $289 << 8;
                $291 = $290 ? 0 : $$op$i223;
                $292 = ($$pre$i222|0)==(0|0);
                if ($292) {
                 $$pre522 = HEAP32[$7>>2]|0;
                 $$pre523 = HEAP32[$8>>2]|0;
                 $1042 = $281;$1043 = $291;$297 = $$pre522;$298 = $$pre523;
                 label = 118;
                 break;
                } else {
                 $293 = (_fgetc($$pre$i222)|0);
                 $294 = ($293|0)==(-1);
                 $295 = $294 ? 0 : $293;
                 $$0$i3$i225 = $295;$303 = $281;$304 = $291;
                 break;
                }
               }
              } while(0);
              if ((label|0) == 109) {
               label = 0;
               $268 = ($269>>>0)<($270>>>0);
               if ($268) {
                $271 = ((($269)) + 1|0);
                HEAP32[$7>>2] = $271;
                $272 = HEAP8[$269>>0]|0;
                $273 = $272&255;
                $$0$i3$i$i216$ph = $273;
               } else {
                $$0$i3$i$i216$ph = 0;
               }
               $274 = (($$0$i3$i$i216$ph) + ($275))|0;
               $276 = $274 << 16;
               $1041 = $276;
               label = 113;
              }
              do {
               if ((label|0) == 113) {
                label = 0;
                $283 = HEAP32[$7>>2]|0;
                $284 = HEAP32[$8>>2]|0;
                $285 = ($283>>>0)<($284>>>0);
                if (!($285)) {
                 $1042 = $1041;$1043 = 0;$297 = $283;$298 = $284;
                 label = 118;
                 break;
                }
                $286 = ((($283)) + 1|0);
                HEAP32[$7>>2] = $286;
                $287 = HEAP8[$283>>0]|0;
                $288 = $287&255;
                $phitmp$i219 = $288 << 8;
                $1042 = $1041;$1043 = $phitmp$i219;$297 = $286;$298 = $284;
                label = 118;
               }
              } while(0);
              do {
               if ((label|0) == 118) {
                label = 0;
                $296 = ($297>>>0)<($298>>>0);
                if (!($296)) {
                 $$0$i3$i225 = 0;$303 = $1042;$304 = $1043;
                 break;
                }
                $299 = ((($297)) + 1|0);
                HEAP32[$7>>2] = $299;
                $300 = HEAP8[$297>>0]|0;
                $301 = $300&255;
                $$0$i3$i225 = $301;$303 = $1042;$304 = $1043;
               }
              } while(0);
              $302 = (($304) + ($303))|0;
              $305 = (($302) + ($$0$i3$i225))|0;
              HEAP32[$100>>2] = $305;
              $306 = ($305>>>0)>(16777216);
              if ($306) {
               label = 121;
               break L53;
              }
              $307 = HEAP32[$6>>2]|0;
              $308 = ($307|0)==(0|0);
              if ($308) {
               $311 = HEAP32[$7>>2]|0;
               $312 = HEAP32[$8>>2]|0;
               $313 = ($311>>>0)<($312>>>0);
               if (!($313)) {
                label = 127;
                break L53;
               }
               $314 = ((($311)) + 1|0);
               HEAP32[$7>>2] = $314;
               $315 = HEAP8[$311>>0]|0;
               $316 = $315&255;
               $$0$i = $316;
              } else {
               $309 = (_fgetc($307)|0);
               $310 = ($309|0)==(-1);
               if ($310) {
                label = 127;
                break L53;
               } else {
                $$0$i = $309;
               }
              }
              $317 = ($$0$i|0)==(8);
              if (!($317)) {
               label = 127;
               break L53;
              }
              $318 = HEAP32[$6>>2]|0;
              $319 = ($318|0)==(0|0);
              do {
               if ($319) {
                $322 = HEAP32[$7>>2]|0;
                $323 = HEAP32[$8>>2]|0;
                $324 = ($322>>>0)<($323>>>0);
                if (!($324)) {
                 $$0$i227311313 = 0;$$1162 = $$0161;
                 break;
                }
                $325 = ((($322)) + 1|0);
                HEAP32[$7>>2] = $325;
                $326 = HEAP8[$322>>0]|0;
                $327 = $326&255;
                $$0$i227 = $327;
                label = 132;
               } else {
                $320 = (_fgetc($318)|0);
                $321 = ($320|0)==(-1);
                if ($321) {
                 $$0$i227311313 = 0;$$1162 = $$0161;
                } else {
                 $$0$i227 = $320;
                 label = 132;
                }
               }
              } while(0);
              do {
               if ((label|0) == 132) {
                label = 0;
                $328 = ($$0$i227|0)>(6);
                if ($328) {
                 label = 133;
                 break L53;
                }
                $329 = ($$0$i227|0)==(3);
                if ($329) {
                 $$0$i227311313 = 3;$$1162 = 3;
                 break;
                }
                $330 = $$0$i227 & 1;
                $331 = ($330|0)==(0);
                if ($331) {
                 $$0$i227311313 = $$0$i227;$$1162 = $$0161;
                } else {
                 label = 136;
                 break L53;
                }
               }
              } while(0);
              $332 = HEAP32[$6>>2]|0;
              $333 = ($332|0)==(0|0);
              do {
               if ($333) {
                $336 = HEAP32[$7>>2]|0;
                $337 = HEAP32[$8>>2]|0;
                $338 = ($336>>>0)<($337>>>0);
                if (!($338)) {
                 break;
                }
                $339 = ((($336)) + 1|0);
                HEAP32[$7>>2] = $339;
                $340 = HEAP8[$336>>0]|0;
                $341 = $340&255;
                $$0$i229 = $341;
                label = 141;
               } else {
                $334 = (_fgetc($332)|0);
                $335 = ($334|0)==(-1);
                if (!($335)) {
                 $$0$i229 = $334;
                 label = 141;
                }
               }
              } while(0);
              if ((label|0) == 141) {
               label = 0;
               $342 = ($$0$i229|0)==(0);
               if (!($342)) {
                label = 142;
                break L53;
               }
              }
              $343 = HEAP32[$6>>2]|0;
              $344 = ($343|0)==(0|0);
              do {
               if ($344) {
                $347 = HEAP32[$7>>2]|0;
                $348 = HEAP32[$8>>2]|0;
                $349 = ($347>>>0)<($348>>>0);
                if (!($349)) {
                 break;
                }
                $350 = ((($347)) + 1|0);
                HEAP32[$7>>2] = $350;
                $351 = HEAP8[$347>>0]|0;
                $352 = $351&255;
                $$0$i231 = $352;
                label = 147;
               } else {
                $345 = (_fgetc($343)|0);
                $346 = ($345|0)==(-1);
                if (!($346)) {
                 $$0$i231 = $345;
                 label = 147;
                }
               }
              } while(0);
              if ((label|0) == 147) {
               label = 0;
               $353 = ($$0$i231|0)==(0);
               if (!($353)) {
                label = 148;
                break L53;
               }
              }
              $354 = HEAP32[$6>>2]|0;
              $355 = ($354|0)==(0|0);
              do {
               if ($355) {
                $358 = HEAP32[$7>>2]|0;
                $359 = HEAP32[$8>>2]|0;
                $360 = ($358>>>0)<($359>>>0);
                if (!($360)) {
                 break;
                }
                $361 = ((($358)) + 1|0);
                HEAP32[$7>>2] = $361;
                $362 = HEAP8[$358>>0]|0;
                $363 = $362&255;
                $$0$i233 = $363;
                label = 153;
               } else {
                $356 = (_fgetc($354)|0);
                $357 = ($356|0)==(-1);
                if (!($357)) {
                 $$0$i233 = $356;
                 label = 153;
                }
               }
              } while(0);
              if ((label|0) == 153) {
               label = 0;
               $364 = ($$0$i233|0)==(0);
               if (!($364)) {
                label = 154;
                break L53;
               }
              }
              $365 = HEAP32[$0>>2]|0;
              $366 = ($365|0)==(0);
              if ($366) {
               label = 157;
               break L53;
              }
              $367 = HEAP32[$100>>2]|0;
              $368 = ($367|0)==(0);
              if ($368) {
               label = 157;
               break L53;
              }
              $369 = ($$1162<<24>>24)==(0);
              if ($369) {
               $370 = $$0$i227311313 & 2;
               $371 = $370 | 1;
               $372 = $$0$i227311313 >>> 2;
               $$lobit = $372 & 1;
               $373 = (($371) + ($$lobit))|0;
               HEAP32[$99>>2] = $373;
               $374 = (1073741824 / ($365>>>0))&-1;
               $375 = (($374>>>0) / ($373>>>0))&-1;
               $376 = ($375>>>0)<($367>>>0);
               if ($376) {
                label = 160;
                break L53;
               } else {
                $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = 0;$$4176 = $$0172;
                break;
               }
              } else {
               HEAP32[$99>>2] = 1;
               $377 = (1073741824 / ($365>>>0))&-1;
               $378 = $377 >>> 2;
               $379 = ($378>>>0)<($367>>>0);
               if ($379) {
                label = 162;
                break L53;
               } else {
                $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = $$1162;$$4176 = $$0172;
                break;
               }
              }
             } else {
              $switch$split2D = ($201|0)<(1229472850);
              L202: do {
               if ($switch$split2D) {
                $switch$split32D = ($201|0)<(1229278788);
                if (!($switch$split32D)) {
                 switch ($201|0) {
                 case 1229278788:  {
                  label = 224;
                  break L53;
                  break;
                 }
                 default: {
                  break L202;
                 }
                 }
                }
                switch ($201|0) {
                case 1229209940:  {
                 break;
                }
                default: {
                 break L202;
                }
                }
                $491 = ($$0161<<24>>24)==(0);
                $492 = ($$0184|0)!=(0);
                $or$cond = $492 | $491;
                if (!($or$cond)) {
                 label = 212;
                 break L53;
                }
                $493 = (($204) + ($$0169))|0;
                $494 = ($493>>>0)>($$0172>>>0);
                if ($494) {
                 $495 = ($$0172|0)==(0);
                 $496 = ($204>>>0)>(4096);
                 $497 = $496 ? $204 : 4096;
                 $$1173 = $495 ? $497 : $$0172;
                 $$2174 = $$1173;
                 while(1) {
                  $498 = ($493>>>0)>($$2174>>>0);
                  $499 = $$2174 << 1;
                  if ($498) {
                   $$2174 = $499;
                  } else {
                   break;
                  }
                 }
                 $500 = HEAP32[$98>>2]|0;
                 $501 = (_realloc($500,$$2174)|0);
                 $502 = ($501|0)==(0|0);
                 if ($502) {
                  label = 219;
                  break L53;
                 }
                 HEAP32[$98>>2] = $501;
                 $$3175 = $$2174;$506 = $501;
                } else {
                 $$pre513 = HEAP32[$98>>2]|0;
                 $$3175 = $$0172;$506 = $$pre513;
                }
                $503 = HEAP32[$6>>2]|0;
                $504 = ($503|0)==(0|0);
                $505 = (($506) + ($$0169)|0);
                if ($504) {
                 $509 = HEAP32[$7>>2]|0;
                 _memcpy(($505|0),($509|0),($204|0))|0;
                 $510 = HEAP32[$7>>2]|0;
                 $511 = (($510) + ($204)|0);
                 HEAP32[$7>>2] = $511;
                 $$1167 = $$0166;$$1170 = $493;$$1185 = $$0184;$$3164 = $$0161;$$4176 = $$3175;
                 break L108;
                } else {
                 $507 = (_fread($505,1,$204,$503)|0);
                 $508 = ($507|0)==($204|0);
                 if ($508) {
                  $$1167 = $$0166;$$1170 = $493;$$1185 = $$0184;$$3164 = $$0161;$$4176 = $$3175;
                  break L108;
                 } else {
                  label = 222;
                  break L53;
                 }
                }
               } else {
                $switch$split62D = ($201|0)<(1347179589);
                if ($switch$split62D) {
                 switch ($201|0) {
                 case 1229472850:  {
                  label = 83;
                  break L53;
                  break;
                 }
                 default: {
                  break L202;
                 }
                 }
                }
                $switch$split92D = ($201|0)<(1951551059);
                if ($switch$split92D) {
                 switch ($201|0) {
                 case 1347179589:  {
                  break;
                 }
                 default: {
                  break L202;
                 }
                 }
                 $380 = ($204>>>0)>(768);
                 if ($380) {
                  label = 164;
                  break L53;
                 }
                 $381 = (($204>>>0) / 3)&-1;
                 $382 = ($381*3)|0;
                 $383 = ($382|0)==($204|0);
                 if (!($383)) {
                  label = 166;
                  break L53;
                 }
                 $384 = ($204>>>0)>(2);
                 if (!($384)) {
                  $$1167 = $$0166;$$1170 = $$0169;$$1185 = $381;$$3164 = $$0161;$$4176 = $$0172;
                  break L108;
                 }
                 $$0178418 = 0;
                 while(1) {
                  $385 = HEAP32[$6>>2]|0;
                  $386 = ($385|0)==(0|0);
                  do {
                   if ($386) {
                    $387 = HEAP32[$7>>2]|0;
                    $388 = HEAP32[$8>>2]|0;
                    $389 = ($387>>>0)<($388>>>0);
                    if ($389) {
                     $390 = ((($387)) + 1|0);
                     HEAP32[$7>>2] = $390;
                     $391 = HEAP8[$387>>0]|0;
                     $392 = $391&255;
                     $$0$i$i235$ph = $392;
                    } else {
                     $$0$i$i235$ph = 0;
                    }
                    $393 = $$0$i$i235$ph&255;
                    $394 = $$0178418 << 2;
                    $395 = (($4) + ($394)|0);
                    HEAP8[$395>>0] = $393;
                    $411 = $394;
                    label = 174;
                   } else {
                    $396 = (_fgetc($385)|0);
                    $397 = ($396|0)==(-1);
                    $$pre516 = HEAP32[$6>>2]|0;
                    $398 = $396&255;
                    $399 = $397 ? 0 : $398;
                    $400 = $$0178418 << 2;
                    $401 = (($4) + ($400)|0);
                    HEAP8[$401>>0] = $399;
                    $402 = ($$pre516|0)==(0|0);
                    if ($402) {
                     $411 = $400;
                     label = 174;
                     break;
                    }
                    $413 = (_fgetc($$pre516)|0);
                    $414 = ($413|0)==(-1);
                    $$pre517 = HEAP32[$6>>2]|0;
                    $415 = $413&255;
                    $416 = $414 ? 0 : $415;
                    $417 = $400 | 1;
                    $418 = (($4) + ($417)|0);
                    HEAP8[$418>>0] = $416;
                    $419 = ($$pre517|0)==(0|0);
                    if ($419) {
                     $1044 = $400;
                     label = 179;
                     break;
                    }
                    $420 = (_fgetc($$pre517)|0);
                    $421 = ($420|0)==(-1);
                    $422 = $421 ? 0 : $420;
                    $$0$i$i240 = $422;$431 = $400;
                   }
                  } while(0);
                  if ((label|0) == 174) {
                   label = 0;
                   $403 = HEAP32[$7>>2]|0;
                   $404 = HEAP32[$8>>2]|0;
                   $405 = ($403>>>0)<($404>>>0);
                   if ($405) {
                    $406 = ((($403)) + 1|0);
                    HEAP32[$7>>2] = $406;
                    $407 = HEAP8[$403>>0]|0;
                    $408 = $407&255;
                    $$0$i$i237$ph = $408;
                   } else {
                    $$0$i$i237$ph = 0;
                   }
                   $409 = $$0$i$i237$ph&255;
                   $410 = $411 | 1;
                   $412 = (($4) + ($410)|0);
                   HEAP8[$412>>0] = $409;
                   $1044 = $411;
                   label = 179;
                  }
                  do {
                   if ((label|0) == 179) {
                    label = 0;
                    $423 = HEAP32[$7>>2]|0;
                    $424 = HEAP32[$8>>2]|0;
                    $425 = ($423>>>0)<($424>>>0);
                    if (!($425)) {
                     $$0$i$i240 = 0;$431 = $1044;
                     break;
                    }
                    $426 = ((($423)) + 1|0);
                    HEAP32[$7>>2] = $426;
                    $427 = HEAP8[$423>>0]|0;
                    $428 = $427&255;
                    $$0$i$i240 = $428;$431 = $1044;
                   }
                  } while(0);
                  $429 = $$0$i$i240&255;
                  $430 = $431 | 2;
                  $432 = (($4) + ($430)|0);
                  HEAP8[$432>>0] = $429;
                  $433 = $431 | 3;
                  $434 = (($4) + ($433)|0);
                  HEAP8[$434>>0] = -1;
                  $435 = (($$0178418) + 1)|0;
                  $436 = ($435>>>0)<($381>>>0);
                  if ($436) {
                   $$0178418 = $435;
                  } else {
                   $$1167 = $$0166;$$1170 = $$0169;$$1185 = $381;$$3164 = $$0161;$$4176 = $$0172;
                   break L108;
                  }
                 }
                }
                switch ($201|0) {
                case 1951551059:  {
                 break;
                }
                default: {
                 break L202;
                }
                }
                $437 = HEAP32[$98>>2]|0;
                $438 = ($437|0)==(0|0);
                if (!($438)) {
                 label = 183;
                 break L53;
                }
                $439 = ($$0161<<24>>24)==(0);
                if (!($439)) {
                 $440 = ($$0184|0)==(0);
                 if ($440) {
                  label = 186;
                  break L53;
                 }
                 $441 = ($204>>>0)>($$0184>>>0);
                 if ($441) {
                  label = 188;
                  break L53;
                 }
                 $442 = ($204|0)==(0);
                 if ($442) {
                  $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = 4;$$4176 = $$0172;
                  break L108;
                 }
                 $$1179412 = 0;
                 while(1) {
                  $443 = HEAP32[$6>>2]|0;
                  $444 = ($443|0)==(0|0);
                  do {
                   if ($444) {
                    $448 = HEAP32[$7>>2]|0;
                    $449 = HEAP32[$8>>2]|0;
                    $450 = ($448>>>0)<($449>>>0);
                    if (!($450)) {
                     $$0$i$i243 = 0;
                     break;
                    }
                    $451 = ((($448)) + 1|0);
                    HEAP32[$7>>2] = $451;
                    $452 = HEAP8[$448>>0]|0;
                    $453 = $452&255;
                    $$0$i$i243 = $453;
                   } else {
                    $445 = (_fgetc($443)|0);
                    $446 = ($445|0)==(-1);
                    $447 = $446 ? 0 : $445;
                    $$0$i$i243 = $447;
                   }
                  } while(0);
                  $454 = $$0$i$i243&255;
                  $455 = $$1179412 << 2;
                  $456 = $455 | 3;
                  $457 = (($4) + ($456)|0);
                  HEAP8[$457>>0] = $454;
                  $458 = (($$1179412) + 1)|0;
                  $exitcond = ($458|0)==($204|0);
                  if ($exitcond) {
                   $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = 4;$$4176 = $$0172;
                   break L108;
                  } else {
                   $$1179412 = $458;
                  }
                 }
                }
                $459 = HEAP32[$99>>2]|0;
                $460 = $459 & 1;
                $461 = ($460|0)==(0);
                if ($461) {
                 label = 197;
                 break L53;
                }
                $462 = $459 << 1;
                $463 = ($204|0)==($462|0);
                if (!($463)) {
                 label = 199;
                 break L53;
                }
                $464 = ($459|0)>(0);
                if (!($464)) {
                 $$1167 = 1;$$1170 = $$0169;$$1185 = $$0184;$$3164 = 0;$$4176 = $$0172;
                 break L108;
                }
                $$0187415 = 0;
                while(1) {
                 $465 = HEAP32[$6>>2]|0;
                 $466 = ($465|0)==(0|0);
                 do {
                  if ($466) {
                   $467 = HEAP32[$7>>2]|0;
                   $468 = HEAP32[$8>>2]|0;
                   $469 = ($467>>>0)<($468>>>0);
                   if (!($469)) {
                    $1045 = 0;$479 = $467;$480 = $468;
                    label = 208;
                    break;
                   }
                   $470 = ((($467)) + 1|0);
                   HEAP32[$7>>2] = $470;
                   $1045 = 0;$479 = $470;$480 = $468;
                   label = 208;
                  } else {
                   $471 = (_fgetc($465)|0);
                   $472 = ($471|0)==(-1);
                   $$pre$i263 = HEAP32[$6>>2]|0;
                   $$op$i264 = $471 << 8;
                   $473 = $472 ? 0 : $$op$i264;
                   $474 = ($$pre$i263|0)==(0|0);
                   if ($474) {
                    $$pre514 = HEAP32[$7>>2]|0;
                    $$pre515 = HEAP32[$8>>2]|0;
                    $1045 = $473;$479 = $$pre514;$480 = $$pre515;
                    label = 208;
                    break;
                   } else {
                    $475 = (_fgetc($$pre$i263)|0);
                    $476 = ($475|0)==(-1);
                    $477 = $476 ? 0 : $475;
                    $$0$i3$i266 = $477;$485 = $473;
                    break;
                   }
                  }
                 } while(0);
                 do {
                  if ((label|0) == 208) {
                   label = 0;
                   $478 = ($479>>>0)<($480>>>0);
                   if (!($478)) {
                    $$0$i3$i266 = 0;$485 = $1045;
                    break;
                   }
                   $481 = ((($479)) + 1|0);
                   HEAP32[$7>>2] = $481;
                   $482 = HEAP8[$479>>0]|0;
                   $483 = $482&255;
                   $$0$i3$i266 = $483;$485 = $1045;
                  }
                 } while(0);
                 $484 = (($$0$i3$i266) + ($485))|0;
                 $486 = $484&255;
                 $487 = (($5) + ($$0187415)|0);
                 HEAP8[$487>>0] = $486;
                 $488 = (($$0187415) + 1)|0;
                 $489 = HEAP32[$99>>2]|0;
                 $490 = ($488|0)<($489|0);
                 if ($490) {
                  $$0187415 = $488;
                 } else {
                  $$1167 = 1;$$1170 = $$0169;$$1185 = $$0184;$$3164 = 0;$$4176 = $$0172;
                  break L108;
                 }
                }
               }
              } while(0);
              $1000 = $201 & 536870912;
              $1001 = ($1000|0)==(0);
              if ($1001) {
               label = 419;
               break L53;
              }
              $1002 = HEAP32[$6>>2]|0;
              $1003 = ($1002|0)==(0|0);
              if ($1003) {
               $1004 = HEAP32[$7>>2]|0;
               $1005 = (($1004) + ($204)|0);
               HEAP32[$7>>2] = $1005;
               $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = $$0161;$$4176 = $$0172;
               break;
              } else {
               (_fseek($1002,$204,1)|0);
               $$1167 = $$0166;$$1170 = $$0169;$$1185 = $$0184;$$3164 = $$0161;$$4176 = $$0172;
               break;
              }
             }
            } while(0);
            $1006 = HEAP32[$6>>2]|0;
            $1007 = ($1006|0)==(0|0);
            do {
             if ($1007) {
              $1008 = HEAP32[$7>>2]|0;
              $1009 = HEAP32[$8>>2]|0;
              $1010 = ($1008>>>0)<($1009>>>0);
              if (!($1010)) {
               $1014 = $1008;$1015 = $1009;
               label = 428;
               break;
              }
              $1011 = ((($1008)) + 1|0);
              HEAP32[$7>>2] = $1011;
              $1014 = $1011;$1015 = $1009;
              label = 428;
             } else {
              (_fgetc($1006)|0);
              $$pre$i$i247 = HEAP32[$6>>2]|0;
              $1012 = ($$pre$i$i247|0)==(0|0);
              if ($1012) {
               $$pre$i251 = HEAP32[$7>>2]|0;
               $$pre4$i253 = HEAP32[$8>>2]|0;
               $1014 = $$pre$i251;$1015 = $$pre4$i253;
               label = 428;
               break;
              }
              (_fgetc($$pre$i$i247)|0);
              $$pre524 = HEAP32[$6>>2]|0;
              $1017 = ($$pre524|0)==(0|0);
              if ($1017) {
               label = 431;
               break;
              }
              (_fgetc($$pre524)|0);
              $$pre$i271 = HEAP32[$6>>2]|0;
              $1022 = ($$pre$i271|0)==(0|0);
              if ($1022) {
               $$pre525 = HEAP32[$7>>2]|0;
               $$pre526 = HEAP32[$8>>2]|0;
               $1024 = $$pre525;$1025 = $$pre526;
               label = 437;
               break;
              } else {
               (_fgetc($$pre$i271)|0);
               break;
              }
             }
            } while(0);
            do {
             if ((label|0) == 428) {
              label = 0;
              $1013 = ($1014>>>0)<($1015>>>0);
              if (!($1013)) {
               label = 431;
               break;
              }
              $1016 = ((($1014)) + 1|0);
              HEAP32[$7>>2] = $1016;
              label = 431;
             }
            } while(0);
            do {
             if ((label|0) == 431) {
              label = 0;
              $1018 = HEAP32[$7>>2]|0;
              $1019 = HEAP32[$8>>2]|0;
              $1020 = ($1018>>>0)<($1019>>>0);
              if (!($1020)) {
               $1024 = $1018;$1025 = $1019;
               label = 437;
               break;
              }
              $1021 = ((($1018)) + 1|0);
              HEAP32[$7>>2] = $1021;
              $1024 = $1021;$1025 = $1019;
              label = 437;
             }
            } while(0);
            do {
             if ((label|0) == 437) {
              label = 0;
              $1023 = ($1024>>>0)<($1025>>>0);
              if (!($1023)) {
               break;
              }
              $1026 = ((($1024)) + 1|0);
              HEAP32[$7>>2] = $1026;
             }
            } while(0);
            $$0161 = $$3164;$$0166 = $$1167;$$0169 = $$1170;$$0172 = $$4176;$$0184 = $$1185;$$0188 = 0;
           }
           switch (label|0) {
            case 81: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 83: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 85: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 103: {
             HEAP32[36596] = 121727;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 121: {
             HEAP32[36596] = 121727;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 127: {
             HEAP32[36596] = 121755;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 133: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 136: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 142: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 148: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 154: {
             HEAP32[36596] = 121785;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 157: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 160: {
             HEAP32[36596] = 121820;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 162: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 164: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 166: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 183: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 186: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 188: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 197: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 199: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 212: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 219: {
             HEAP32[36596] = 121182;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 222: {
             HEAP32[36596] = 121715;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 224: {
             $512 = ($1|0)==(0);
             if (!($512)) {
              $$7 = 1;
              STACKTOP = sp;return ($$7|0);
             }
             $513 = HEAP32[$98>>2]|0;
             $514 = ($513|0)==(0|0);
             if ($514) {
              HEAP32[36596] = 121715;
              $$7 = 0;
              STACKTOP = sp;return ($$7|0);
             }
             $515 = (_malloc(16384)|0);
             $516 = ($515|0)==(0|0);
             do {
              if (!($516)) {
               HEAP32[$3>>2] = $513;
               $517 = (($513) + ($$0169)|0);
               $518 = ((($3)) + 4|0);
               HEAP32[$518>>2] = $517;
               $519 = (_do_zlib($3,$515,16384,1,1)|0);
               $520 = ($519|0)==(0);
               if ($520) {
                $521 = ((($3)) + 20|0);
                $522 = HEAP32[$521>>2]|0;
                _free($522);
                break;
               }
               $524 = ((($3)) + 16|0);
               $525 = HEAP32[$524>>2]|0;
               $526 = ((($3)) + 20|0);
               $527 = HEAP32[$526>>2]|0;
               $528 = (($525) - ($527))|0;
               $529 = $527;
               $530 = ((($0)) + 32|0);
               HEAP32[$530>>2] = $529;
               $531 = ($527|0)==(0);
               if ($531) {
                $$7 = 0;
                STACKTOP = sp;return ($$7|0);
               }
               $532 = HEAP32[$98>>2]|0;
               _free($532);
               HEAP32[$98>>2] = 0;
               $533 = HEAP32[$99>>2]|0;
               $534 = (($533) + 1)|0;
               $535 = ($534|0)!=($2|0);
               $536 = ($2|0)==(3);
               $or$cond5$not = $536 | $535;
               $537 = ($$0161<<24>>24)!=(0);
               $or$cond7 = $537 | $or$cond5$not;
               $538 = ($$0166<<24>>24)==(0);
               $or$cond189 = $538 & $or$cond7;
               $539 = ((($0)) + 12|0);
               $$ = $or$cond189 ? $533 : $534;
               HEAP32[$539>>2] = $$;
               $540 = HEAP32[$530>>2]|0;
               $541 = HEAP32[$0>>2]|0;
               $542 = Math_imul($$, $541)|0;
               $543 = ($534|0)==($$|0);
               $or$cond$i = $or$cond189 | $543;
               if (!($or$cond$i)) {
                ___assert_fail((121846|0),(121322|0),2085,(121887|0));
                // unreachable;
               }
               $544 = HEAP32[$100>>2]|0;
               $545 = Math_imul($544, $542)|0;
               $546 = (_malloc($545)|0);
               $547 = ((($0)) + 36|0);
               HEAP32[$547>>2] = $546;
               $548 = ($546|0)==(0|0);
               if ($548) {
                HEAP32[36596] = 121182;
                $$7 = 0;
                STACKTOP = sp;return ($$7|0);
               }
               $549 = Math_imul($541, $533)|0;
               $550 = (($549) + 1)|0;
               $551 = Math_imul($544, $550)|0;
               $552 = ($551|0)==($528|0);
               if (!($552)) {
                HEAP32[36596] = 121715;
                $$7 = 0;
                STACKTOP = sp;return ($$7|0);
               }
               $553 = ($544|0)==(0);
               L360: do {
                if ($553) {
                 $$idx190$val = 0;
                } else {
                 $554 = (0 - ($542))|0;
                 $555 = ($533|0)>(0);
                 $556 = HEAP8[$540>>0]|0;
                 $557 = ($556&255)>(4);
                 L362: do {
                  if (!($557)) {
                   $558 = $556&255;
                   $$0435648$i411 = 0;$$pn = $540;$$pn421 = $546;$563 = $558;
                   L364: while(1) {
                    $559 = (($$pn421) + ($554)|0);
                    $560 = ((($$pn)) + 1|0);
                    $561 = ($$0435648$i411|0)==(0);
                    if ($561) {
                     $562 = (121904 + ($563)|0);
                     $564 = HEAP8[$562>>0]|0;
                     $565 = $564&255;
                     $$0$i277 = $565;
                    } else {
                     $$0$i277 = $563;
                    }
                    L369: do {
                     if ($555) {
                      $trunc451$i = $$0$i277&255;
                      switch ($trunc451$i<<24>>24) {
                      case 0:  {
                       $$0406485$us$i = 0;
                       while(1) {
                        $566 = (($560) + ($$0406485$us$i)|0);
                        $567 = HEAP8[$566>>0]|0;
                        $568 = (($$pn421) + ($$0406485$us$i)|0);
                        HEAP8[$568>>0] = $567;
                        $569 = (($$0406485$us$i) + 1)|0;
                        $exitcond706$i = ($569|0)==($533|0);
                        if ($exitcond706$i) {
                         break;
                        } else {
                         $$0406485$us$i = $569;
                        }
                       }
                       break;
                      }
                      case 1:  {
                       $$0406485$us486$i = 0;
                       while(1) {
                        $570 = (($560) + ($$0406485$us486$i)|0);
                        $571 = HEAP8[$570>>0]|0;
                        $572 = (($$pn421) + ($$0406485$us486$i)|0);
                        HEAP8[$572>>0] = $571;
                        $573 = (($$0406485$us486$i) + 1)|0;
                        $exitcond$i = ($573|0)==($533|0);
                        if ($exitcond$i) {
                         break;
                        } else {
                         $$0406485$us486$i = $573;
                        }
                       }
                       break;
                      }
                      case 6:  {
                       $$0406485$i$us = 0;
                       while(1) {
                        $574 = (($560) + ($$0406485$i$us)|0);
                        $575 = HEAP8[$574>>0]|0;
                        $576 = (($$pn421) + ($$0406485$i$us)|0);
                        HEAP8[$576>>0] = $575;
                        $577 = (($$0406485$i$us) + 1)|0;
                        $exitcond707$i$us = ($577|0)==($533|0);
                        if ($exitcond707$i$us) {
                         break;
                        } else {
                         $$0406485$i$us = $577;
                        }
                       }
                       break;
                      }
                      case 5:  {
                       $$0406485$i$us407 = 0;
                       while(1) {
                        $578 = (($560) + ($$0406485$i$us407)|0);
                        $579 = HEAP8[$578>>0]|0;
                        $580 = (($$pn421) + ($$0406485$i$us407)|0);
                        HEAP8[$580>>0] = $579;
                        $581 = (($$0406485$i$us407) + 1)|0;
                        $exitcond707$i$us408 = ($581|0)==($533|0);
                        if ($exitcond707$i$us408) {
                         break;
                        } else {
                         $$0406485$i$us407 = $581;
                        }
                       }
                       break;
                      }
                      default: {
                       $$0406485$i = 0;
                       while(1) {
                        switch ($trunc451$i<<24>>24) {
                        case 3:  {
                         $589 = (($560) + ($$0406485$i)|0);
                         $590 = HEAP8[$589>>0]|0;
                         $591 = $590&255;
                         $592 = (($559) + ($$0406485$i)|0);
                         $593 = HEAP8[$592>>0]|0;
                         $594 = $593&255;
                         $595 = $594 >>> 1;
                         $596 = (($595) + ($591))|0;
                         $$sink696 = $596;
                         label = 258;
                         break;
                        }
                        case 4:  {
                         $597 = (($560) + ($$0406485$i)|0);
                         $598 = HEAP8[$597>>0]|0;
                         $599 = $598&255;
                         $600 = (($559) + ($$0406485$i)|0);
                         $601 = HEAP8[$600>>0]|0;
                         $602 = $601&255;
                         $603 = (($602) + ($599))|0;
                         $$sink696 = $603;
                         label = 258;
                         break;
                        }
                        case 2:  {
                         $582 = (($560) + ($$0406485$i)|0);
                         $583 = HEAP8[$582>>0]|0;
                         $584 = $583&255;
                         $585 = (($559) + ($$0406485$i)|0);
                         $586 = HEAP8[$585>>0]|0;
                         $587 = $586&255;
                         $588 = (($587) + ($584))|0;
                         $$sink696 = $588;
                         label = 258;
                         break;
                        }
                        default: {
                        }
                        }
                        if ((label|0) == 258) {
                         label = 0;
                         $604 = $$sink696&255;
                         $605 = (($$pn421) + ($$0406485$i)|0);
                         HEAP8[$605>>0] = $604;
                        }
                        $606 = (($$0406485$i) + 1)|0;
                        $exitcond707$i = ($606|0)==($533|0);
                        if ($exitcond707$i) {
                         break L369;
                        } else {
                         $$0406485$i = $606;
                        }
                       }
                      }
                      }
                     }
                    } while(0);
                    L395: do {
                     if ($or$cond189) {
                      $607 = (($560) + ($$)|0);
                      $608 = (($$pn421) + ($$)|0);
                      $609 = (($559) + ($$)|0);
                      $trunc450$i = $$0$i277&255;
                      switch ($trunc450$i<<24>>24) {
                      case 0:  {
                       $610 = HEAP32[$0>>2]|0;
                       $$0436641$i = (($610) + -1)|0;
                       $611 = ($$0436641$i|0)==(0);
                       if ($611) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $612 = Math_imul($610, $$)|0;
                       if (!($555)) {
                        $scevgep772$i = (($560) + ($612)|0);
                        $$16$ph$i = $scevgep772$i;
                        break L395;
                       }
                       $$0388643$us$i = $608;$$0436644$us$i = $$0436641$i;$$1421642$us$i = $607;
                       while(1) {
                        $$1407637$us$i = 0;
                        while(1) {
                         $613 = (($$1421642$us$i) + ($$1407637$us$i)|0);
                         $614 = HEAP8[$613>>0]|0;
                         $615 = (($$0388643$us$i) + ($$1407637$us$i)|0);
                         HEAP8[$615>>0] = $614;
                         $616 = (($$1407637$us$i) + 1)|0;
                         $exitcond773$i = ($616|0)==($$|0);
                         if ($exitcond773$i) {
                          break;
                         } else {
                          $$1407637$us$i = $616;
                         }
                        }
                        $617 = (($$1421642$us$i) + ($$)|0);
                        $618 = (($$0388643$us$i) + ($$)|0);
                        $$0436$us$i = (($$0436644$us$i) + -1)|0;
                        $619 = ($$0436$us$i|0)==(0);
                        if ($619) {
                         break;
                        } else {
                         $$0388643$us$i = $618;$$0436644$us$i = $$0436$us$i;$$1421642$us$i = $617;
                        }
                       }
                       $scevgep776$i = (($560) + ($612)|0);
                       $$16$ph$i = $scevgep776$i;
                       break L395;
                       break;
                      }
                      case 1:  {
                       $620 = HEAP32[$0>>2]|0;
                       $$1437630$i = (($620) + -1)|0;
                       $621 = ($$1437630$i|0)==(0);
                       if ($621) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $622 = Math_imul($620, $$)|0;
                       if (!($555)) {
                        $scevgep767$i = (($560) + ($622)|0);
                        $$16$ph$i = $scevgep767$i;
                        break L395;
                       }
                       $$1389632$us$i = $608;$$1437633$us$i = $$1437630$i;$$2422631$us$i = $607;
                       while(1) {
                        $$2408626$us$i = 0;
                        while(1) {
                         $623 = (($$2422631$us$i) + ($$2408626$us$i)|0);
                         $624 = HEAP8[$623>>0]|0;
                         $625 = $624&255;
                         $626 = (($$2408626$us$i) - ($$))|0;
                         $627 = (($$1389632$us$i) + ($626)|0);
                         $628 = HEAP8[$627>>0]|0;
                         $629 = $628&255;
                         $630 = (($629) + ($625))|0;
                         $631 = $630&255;
                         $632 = (($$1389632$us$i) + ($$2408626$us$i)|0);
                         HEAP8[$632>>0] = $631;
                         $633 = (($$2408626$us$i) + 1)|0;
                         $exitcond768$i = ($633|0)==($$|0);
                         if ($exitcond768$i) {
                          break;
                         } else {
                          $$2408626$us$i = $633;
                         }
                        }
                        $634 = (($$2422631$us$i) + ($$)|0);
                        $635 = (($$1389632$us$i) + ($$)|0);
                        $$1437$us$i = (($$1437633$us$i) + -1)|0;
                        $636 = ($$1437$us$i|0)==(0);
                        if ($636) {
                         break;
                        } else {
                         $$1389632$us$i = $635;$$1437633$us$i = $$1437$us$i;$$2422631$us$i = $634;
                        }
                       }
                       $scevgep770$i = (($560) + ($622)|0);
                       $$16$ph$i = $scevgep770$i;
                       break L395;
                       break;
                      }
                      case 2:  {
                       $637 = HEAP32[$0>>2]|0;
                       $$2438618$i = (($637) + -1)|0;
                       $638 = ($$2438618$i|0)==(0);
                       if ($638) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $639 = Math_imul($637, $$)|0;
                       if (!($555)) {
                        $scevgep762$i = (($560) + ($639)|0);
                        $$16$ph$i = $scevgep762$i;
                        break L395;
                       }
                       $$2390620$us$i = $608;$$2438622$us$i = $$2438618$i;$$2621$us$i = $609;$$3423619$us$i = $607;
                       while(1) {
                        $$3409614$us$i = 0;
                        while(1) {
                         $640 = (($$3423619$us$i) + ($$3409614$us$i)|0);
                         $641 = HEAP8[$640>>0]|0;
                         $642 = $641&255;
                         $643 = (($$2621$us$i) + ($$3409614$us$i)|0);
                         $644 = HEAP8[$643>>0]|0;
                         $645 = $644&255;
                         $646 = (($645) + ($642))|0;
                         $647 = $646&255;
                         $648 = (($$2390620$us$i) + ($$3409614$us$i)|0);
                         HEAP8[$648>>0] = $647;
                         $649 = (($$3409614$us$i) + 1)|0;
                         $exitcond763$i = ($649|0)==($$|0);
                         if ($exitcond763$i) {
                          break;
                         } else {
                          $$3409614$us$i = $649;
                         }
                        }
                        $650 = (($$3423619$us$i) + ($$)|0);
                        $651 = (($$2390620$us$i) + ($$)|0);
                        $652 = (($$2621$us$i) + ($$)|0);
                        $$2438$us$i = (($$2438622$us$i) + -1)|0;
                        $653 = ($$2438$us$i|0)==(0);
                        if ($653) {
                         break;
                        } else {
                         $$2390620$us$i = $651;$$2438622$us$i = $$2438$us$i;$$2621$us$i = $652;$$3423619$us$i = $650;
                        }
                       }
                       $scevgep765$i = (($560) + ($639)|0);
                       $$16$ph$i = $scevgep765$i;
                       break L395;
                       break;
                      }
                      case 3:  {
                       $654 = HEAP32[$0>>2]|0;
                       $$3439606$i = (($654) + -1)|0;
                       $655 = ($$3439606$i|0)==(0);
                       if ($655) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $656 = Math_imul($654, $$)|0;
                       if (!($555)) {
                        $scevgep757$i = (($560) + ($656)|0);
                        $$16$ph$i = $scevgep757$i;
                        break L395;
                       }
                       $$3391608$us$i = $608;$$3439610$us$i = $$3439606$i;$$3609$us$i = $609;$$4424607$us$i = $607;
                       while(1) {
                        $$4410602$us$i = 0;
                        while(1) {
                         $657 = (($$4424607$us$i) + ($$4410602$us$i)|0);
                         $658 = HEAP8[$657>>0]|0;
                         $659 = $658&255;
                         $660 = (($$3609$us$i) + ($$4410602$us$i)|0);
                         $661 = HEAP8[$660>>0]|0;
                         $662 = $661&255;
                         $663 = (($$4410602$us$i) - ($$))|0;
                         $664 = (($$3391608$us$i) + ($663)|0);
                         $665 = HEAP8[$664>>0]|0;
                         $666 = $665&255;
                         $667 = (($666) + ($662))|0;
                         $668 = $667 >>> 1;
                         $669 = (($668) + ($659))|0;
                         $670 = $669&255;
                         $671 = (($$3391608$us$i) + ($$4410602$us$i)|0);
                         HEAP8[$671>>0] = $670;
                         $672 = (($$4410602$us$i) + 1)|0;
                         $exitcond758$i = ($672|0)==($$|0);
                         if ($exitcond758$i) {
                          break;
                         } else {
                          $$4410602$us$i = $672;
                         }
                        }
                        $673 = (($$4424607$us$i) + ($$)|0);
                        $674 = (($$3391608$us$i) + ($$)|0);
                        $675 = (($$3609$us$i) + ($$)|0);
                        $$3439$us$i = (($$3439610$us$i) + -1)|0;
                        $676 = ($$3439$us$i|0)==(0);
                        if ($676) {
                         break;
                        } else {
                         $$3391608$us$i = $674;$$3439610$us$i = $$3439$us$i;$$3609$us$i = $675;$$4424607$us$i = $673;
                        }
                       }
                       $scevgep760$i = (($560) + ($656)|0);
                       $$16$ph$i = $scevgep760$i;
                       break L395;
                       break;
                      }
                      case 4:  {
                       $677 = HEAP32[$0>>2]|0;
                       $$4440594$i = (($677) + -1)|0;
                       $678 = ($$4440594$i|0)==(0);
                       if ($678) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $679 = Math_imul($677, $$)|0;
                       if ($555) {
                        $$4392596$i$us = $608;$$4440598$i$us = $$4440594$i;$$4597$i$us = $609;$$5425595$i$us = $607;
                        while(1) {
                         $$5411590$i$us = 0;
                         while(1) {
                          $680 = (($$5425595$i$us) + ($$5411590$i$us)|0);
                          $681 = HEAP8[$680>>0]|0;
                          $682 = $681&255;
                          $683 = (($$5411590$i$us) - ($$))|0;
                          $684 = (($$4392596$i$us) + ($683)|0);
                          $685 = HEAP8[$684>>0]|0;
                          $686 = $685&255;
                          $687 = (($$4597$i$us) + ($$5411590$i$us)|0);
                          $688 = HEAP8[$687>>0]|0;
                          $689 = $688&255;
                          $690 = (($$4597$i$us) + ($683)|0);
                          $691 = HEAP8[$690>>0]|0;
                          $692 = $691&255;
                          $693 = (($689) + ($686))|0;
                          $694 = (($693) - ($692))|0;
                          $695 = (($694) - ($686))|0;
                          $ispos$i457$i$us = ($695|0)>(-1);
                          $neg$i458$i$us = (0 - ($695))|0;
                          $696 = $ispos$i457$i$us ? $695 : $neg$i458$i$us;
                          $697 = (($694) - ($689))|0;
                          $ispos26$i459$i$us = ($697|0)>(-1);
                          $neg27$i460$i$us = (0 - ($697))|0;
                          $698 = $ispos26$i459$i$us ? $697 : $neg27$i460$i$us;
                          $699 = (($694) - ($692))|0;
                          $ispos28$i461$i$us = ($699|0)>(-1);
                          $neg29$i462$i$us = (0 - ($699))|0;
                          $700 = $ispos28$i461$i$us ? $699 : $neg29$i462$i$us;
                          $701 = ($696|0)>($698|0);
                          $702 = ($696|0)>($700|0);
                          $or$cond$i463$i$us = $701 | $702;
                          $703 = ($698|0)>($700|0);
                          $$$i464$i$us = $703 ? $692 : $689;
                          $$0$i465$i$us = $or$cond$i463$i$us ? $$$i464$i$us : $686;
                          $704 = (($$0$i465$i$us) + ($682))|0;
                          $705 = $704&255;
                          $706 = (($$4392596$i$us) + ($$5411590$i$us)|0);
                          HEAP8[$706>>0] = $705;
                          $707 = (($$5411590$i$us) + 1)|0;
                          $exitcond753$i$us = ($707|0)==($$|0);
                          if ($exitcond753$i$us) {
                           break;
                          } else {
                           $$5411590$i$us = $707;
                          }
                         }
                         $708 = (($$5425595$i$us) + ($$)|0);
                         $709 = (($$4392596$i$us) + ($$)|0);
                         $710 = (($$4597$i$us) + ($$)|0);
                         $$4440$i$us = (($$4440598$i$us) + -1)|0;
                         $711 = ($$4440$i$us|0)==(0);
                         if ($711) {
                          break;
                         } else {
                          $$4392596$i$us = $709;$$4440598$i$us = $$4440$i$us;$$4597$i$us = $710;$$5425595$i$us = $708;
                         }
                        }
                       }
                       $scevgep755$i = (($560) + ($679)|0);
                       $$16$ph$i = $scevgep755$i;
                       break L395;
                       break;
                      }
                      case 5:  {
                       $712 = HEAP32[$0>>2]|0;
                       $$5441583$i = (($712) + -1)|0;
                       $713 = ($$5441583$i|0)==(0);
                       if ($713) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $714 = Math_imul($712, $$)|0;
                       if (!($555)) {
                        $scevgep749$i = (($560) + ($714)|0);
                        $$16$ph$i = $scevgep749$i;
                        break L395;
                       }
                       $$5393585$us$i = $608;$$5441586$us$i = $$5441583$i;$$6426584$us$i = $607;
                       while(1) {
                        $$6412579$us$i = 0;
                        while(1) {
                         $715 = (($$6426584$us$i) + ($$6412579$us$i)|0);
                         $716 = HEAP8[$715>>0]|0;
                         $717 = $716&255;
                         $718 = (($$6412579$us$i) - ($$))|0;
                         $719 = (($$5393585$us$i) + ($718)|0);
                         $720 = HEAP8[$719>>0]|0;
                         $721 = $720&255;
                         $722 = $721 >>> 1;
                         $723 = (($722) + ($717))|0;
                         $724 = $723&255;
                         $725 = (($$5393585$us$i) + ($$6412579$us$i)|0);
                         HEAP8[$725>>0] = $724;
                         $726 = (($$6412579$us$i) + 1)|0;
                         $exitcond750$i = ($726|0)==($$|0);
                         if ($exitcond750$i) {
                          break;
                         } else {
                          $$6412579$us$i = $726;
                         }
                        }
                        $727 = (($$6426584$us$i) + ($$)|0);
                        $728 = (($$5393585$us$i) + ($$)|0);
                        $$5441$us$i = (($$5441586$us$i) + -1)|0;
                        $729 = ($$5441$us$i|0)==(0);
                        if ($729) {
                         break;
                        } else {
                         $$5393585$us$i = $728;$$5441586$us$i = $$5441$us$i;$$6426584$us$i = $727;
                        }
                       }
                       $scevgep752$i = (($560) + ($714)|0);
                       $$16$ph$i = $scevgep752$i;
                       break L395;
                       break;
                      }
                      case 6:  {
                       $730 = HEAP32[$0>>2]|0;
                       $$6442572$i = (($730) + -1)|0;
                       $731 = ($$6442572$i|0)==(0);
                       if ($731) {
                        $$16$ph$i = $607;
                        break L395;
                       }
                       $732 = Math_imul($730, $$)|0;
                       if (!($555)) {
                        $scevgep744$i = (($560) + ($732)|0);
                        $$16$ph$i = $scevgep744$i;
                        break L395;
                       }
                       $$6394574$us$i = $608;$$6442575$us$i = $$6442572$i;$$7427573$us$i = $607;
                       while(1) {
                        $$7413568$us$i = 0;
                        while(1) {
                         $733 = (($$7427573$us$i) + ($$7413568$us$i)|0);
                         $734 = HEAP8[$733>>0]|0;
                         $735 = $734&255;
                         $736 = (($$7413568$us$i) - ($$))|0;
                         $737 = (($$6394574$us$i) + ($736)|0);
                         $738 = HEAP8[$737>>0]|0;
                         $739 = $738&255;
                         $740 = (($739) + ($735))|0;
                         $741 = $740&255;
                         $742 = (($$6394574$us$i) + ($$7413568$us$i)|0);
                         HEAP8[$742>>0] = $741;
                         $743 = (($$7413568$us$i) + 1)|0;
                         $exitcond745$i = ($743|0)==($$|0);
                         if ($exitcond745$i) {
                          break;
                         } else {
                          $$7413568$us$i = $743;
                         }
                        }
                        $744 = (($$7427573$us$i) + ($$)|0);
                        $745 = (($$6394574$us$i) + ($$)|0);
                        $$6442$us$i = (($$6442575$us$i) + -1)|0;
                        $746 = ($$6442$us$i|0)==(0);
                        if ($746) {
                         break;
                        } else {
                         $$6394574$us$i = $745;$$6442575$us$i = $$6442$us$i;$$7427573$us$i = $744;
                        }
                       }
                       $scevgep747$i = (($560) + ($732)|0);
                       $$16$ph$i = $scevgep747$i;
                       break L395;
                       break;
                      }
                      default: {
                       $$16$ph$i = $607;
                       break L395;
                      }
                      }
                     } else {
                      $747 = (($$pn421) + ($533)|0);
                      HEAP8[$747>>0] = -1;
                      $748 = (($560) + ($533)|0);
                      $749 = (($$pn421) + ($$)|0);
                      $750 = (($559) + ($$)|0);
                      if (!($543)) {
                       break L364;
                      }
                      $trunc$i = $$0$i277&255;
                      switch ($trunc$i<<24>>24) {
                      case 0:  {
                       $751 = HEAP32[$0>>2]|0;
                       $$7443561$i = (($751) + -1)|0;
                       $752 = ($$7443561$i|0)==(0);
                       if ($752) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $753 = Math_imul($751, $533)|0;
                       if (!($555)) {
                        $$7395563$i = $749;$$7443564$i = $$7443561$i;
                        while(1) {
                         $762 = (($$7395563$i) + ($533)|0);
                         HEAP8[$762>>0] = -1;
                         $763 = (($$7395563$i) + ($534)|0);
                         $$7443$i = (($$7443564$i) + -1)|0;
                         $764 = ($$7443$i|0)==(0);
                         if ($764) {
                          break;
                         } else {
                          $$7395563$i = $763;$$7443564$i = $$7443$i;
                         }
                        }
                        $scevgep738$i = (($560) + ($753)|0);
                        $$16$ph$i = $scevgep738$i;
                        break L395;
                       }
                       $$7395563$us$i = $749;$$7443564$us$i = $$7443561$i;$$8428562$us$i = $748;
                       while(1) {
                        $$8414557$us$i = 0;
                        while(1) {
                         $754 = (($$8428562$us$i) + ($$8414557$us$i)|0);
                         $755 = HEAP8[$754>>0]|0;
                         $756 = (($$7395563$us$i) + ($$8414557$us$i)|0);
                         HEAP8[$756>>0] = $755;
                         $757 = (($$8414557$us$i) + 1)|0;
                         $exitcond739$i = ($757|0)==($533|0);
                         if ($exitcond739$i) {
                          break;
                         } else {
                          $$8414557$us$i = $757;
                         }
                        }
                        $758 = (($$7395563$us$i) + ($533)|0);
                        HEAP8[$758>>0] = -1;
                        $759 = (($$8428562$us$i) + ($533)|0);
                        $760 = (($$7395563$us$i) + ($534)|0);
                        $$7443$us$i = (($$7443564$us$i) + -1)|0;
                        $761 = ($$7443$us$i|0)==(0);
                        if ($761) {
                         break;
                        } else {
                         $$7395563$us$i = $760;$$7443564$us$i = $$7443$us$i;$$8428562$us$i = $759;
                        }
                       }
                       $scevgep742$i = (($560) + ($753)|0);
                       $$16$ph$i = $scevgep742$i;
                       break L395;
                       break;
                      }
                      case 1:  {
                       $765 = HEAP32[$0>>2]|0;
                       $$8444550$i = (($765) + -1)|0;
                       $766 = ($$8444550$i|0)==(0);
                       if ($766) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $767 = Math_imul($765, $533)|0;
                       if (!($555)) {
                        $$8396552$i = $749;$$8444553$i = $$8444550$i;
                        while(1) {
                         $783 = (($$8396552$i) + ($533)|0);
                         HEAP8[$783>>0] = -1;
                         $784 = (($$8396552$i) + ($534)|0);
                         $$8444$i = (($$8444553$i) + -1)|0;
                         $785 = ($$8444$i|0)==(0);
                         if ($785) {
                          break;
                         } else {
                          $$8396552$i = $784;$$8444553$i = $$8444$i;
                         }
                        }
                        $scevgep733$i = (($560) + ($767)|0);
                        $$16$ph$i = $scevgep733$i;
                        break L395;
                       }
                       $$8396552$us$i = $749;$$8444553$us$i = $$8444550$i;$$9429551$us$i = $748;
                       while(1) {
                        $$9415546$us$i = 0;
                        while(1) {
                         $768 = (($$9429551$us$i) + ($$9415546$us$i)|0);
                         $769 = HEAP8[$768>>0]|0;
                         $770 = $769&255;
                         $771 = (($$9415546$us$i) - ($534))|0;
                         $772 = (($$8396552$us$i) + ($771)|0);
                         $773 = HEAP8[$772>>0]|0;
                         $774 = $773&255;
                         $775 = (($774) + ($770))|0;
                         $776 = $775&255;
                         $777 = (($$8396552$us$i) + ($$9415546$us$i)|0);
                         HEAP8[$777>>0] = $776;
                         $778 = (($$9415546$us$i) + 1)|0;
                         $exitcond734$i = ($778|0)==($533|0);
                         if ($exitcond734$i) {
                          break;
                         } else {
                          $$9415546$us$i = $778;
                         }
                        }
                        $779 = (($$8396552$us$i) + ($533)|0);
                        HEAP8[$779>>0] = -1;
                        $780 = (($$9429551$us$i) + ($533)|0);
                        $781 = (($$8396552$us$i) + ($534)|0);
                        $$8444$us$i = (($$8444553$us$i) + -1)|0;
                        $782 = ($$8444$us$i|0)==(0);
                        if ($782) {
                         break;
                        } else {
                         $$8396552$us$i = $781;$$8444553$us$i = $$8444$us$i;$$9429551$us$i = $780;
                        }
                       }
                       $scevgep736$i = (($560) + ($767)|0);
                       $$16$ph$i = $scevgep736$i;
                       break L395;
                       break;
                      }
                      case 2:  {
                       $786 = HEAP32[$0>>2]|0;
                       $$9445538$i = (($786) + -1)|0;
                       $787 = ($$9445538$i|0)==(0);
                       if ($787) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $788 = Math_imul($786, $533)|0;
                       if (!($555)) {
                        $$9397540$i = $749;$$9445542$i = $$9445538$i;
                        while(1) {
                         $804 = (($$9397540$i) + ($533)|0);
                         HEAP8[$804>>0] = -1;
                         $805 = (($$9397540$i) + ($534)|0);
                         $$9445$i = (($$9445542$i) + -1)|0;
                         $806 = ($$9445$i|0)==(0);
                         if ($806) {
                          break;
                         } else {
                          $$9397540$i = $805;$$9445542$i = $$9445$i;
                         }
                        }
                        $scevgep728$i = (($560) + ($788)|0);
                        $$16$ph$i = $scevgep728$i;
                        break L395;
                       }
                       $$10430539$us$i = $748;$$9397540$us$i = $749;$$9445542$us$i = $$9445538$i;$$9541$us$i = $750;
                       while(1) {
                        $$10416534$us$i = 0;
                        while(1) {
                         $789 = (($$10430539$us$i) + ($$10416534$us$i)|0);
                         $790 = HEAP8[$789>>0]|0;
                         $791 = $790&255;
                         $792 = (($$9541$us$i) + ($$10416534$us$i)|0);
                         $793 = HEAP8[$792>>0]|0;
                         $794 = $793&255;
                         $795 = (($794) + ($791))|0;
                         $796 = $795&255;
                         $797 = (($$9397540$us$i) + ($$10416534$us$i)|0);
                         HEAP8[$797>>0] = $796;
                         $798 = (($$10416534$us$i) + 1)|0;
                         $exitcond729$i = ($798|0)==($533|0);
                         if ($exitcond729$i) {
                          break;
                         } else {
                          $$10416534$us$i = $798;
                         }
                        }
                        $799 = (($$9397540$us$i) + ($533)|0);
                        HEAP8[$799>>0] = -1;
                        $800 = (($$10430539$us$i) + ($533)|0);
                        $801 = (($$9397540$us$i) + ($534)|0);
                        $802 = (($$9541$us$i) + ($534)|0);
                        $$9445$us$i = (($$9445542$us$i) + -1)|0;
                        $803 = ($$9445$us$i|0)==(0);
                        if ($803) {
                         break;
                        } else {
                         $$10430539$us$i = $800;$$9397540$us$i = $801;$$9445542$us$i = $$9445$us$i;$$9541$us$i = $802;
                        }
                       }
                       $scevgep731$i = (($560) + ($788)|0);
                       $$16$ph$i = $scevgep731$i;
                       break L395;
                       break;
                      }
                      case 3:  {
                       $807 = HEAP32[$0>>2]|0;
                       $$10446526$i = (($807) + -1)|0;
                       $808 = ($$10446526$i|0)==(0);
                       if ($808) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $809 = Math_imul($807, $533)|0;
                       if (!($555)) {
                        $$10398528$i = $749;$$10446530$i = $$10446526$i;
                        while(1) {
                         $831 = (($$10398528$i) + ($533)|0);
                         HEAP8[$831>>0] = -1;
                         $832 = (($$10398528$i) + ($534)|0);
                         $$10446$i = (($$10446530$i) + -1)|0;
                         $833 = ($$10446$i|0)==(0);
                         if ($833) {
                          break;
                         } else {
                          $$10398528$i = $832;$$10446530$i = $$10446$i;
                         }
                        }
                        $scevgep723$i = (($560) + ($809)|0);
                        $$16$ph$i = $scevgep723$i;
                        break L395;
                       }
                       $$10398528$us$i = $749;$$10446530$us$i = $$10446526$i;$$10529$us$i = $750;$$11431527$us$i = $748;
                       while(1) {
                        $$11417522$us$i = 0;
                        while(1) {
                         $810 = (($$11431527$us$i) + ($$11417522$us$i)|0);
                         $811 = HEAP8[$810>>0]|0;
                         $812 = $811&255;
                         $813 = (($$10529$us$i) + ($$11417522$us$i)|0);
                         $814 = HEAP8[$813>>0]|0;
                         $815 = $814&255;
                         $816 = (($$11417522$us$i) - ($534))|0;
                         $817 = (($$10398528$us$i) + ($816)|0);
                         $818 = HEAP8[$817>>0]|0;
                         $819 = $818&255;
                         $820 = (($819) + ($815))|0;
                         $821 = $820 >>> 1;
                         $822 = (($821) + ($812))|0;
                         $823 = $822&255;
                         $824 = (($$10398528$us$i) + ($$11417522$us$i)|0);
                         HEAP8[$824>>0] = $823;
                         $825 = (($$11417522$us$i) + 1)|0;
                         $exitcond724$i = ($825|0)==($533|0);
                         if ($exitcond724$i) {
                          break;
                         } else {
                          $$11417522$us$i = $825;
                         }
                        }
                        $826 = (($$10398528$us$i) + ($533)|0);
                        HEAP8[$826>>0] = -1;
                        $827 = (($$11431527$us$i) + ($533)|0);
                        $828 = (($$10398528$us$i) + ($534)|0);
                        $829 = (($$10529$us$i) + ($534)|0);
                        $$10446$us$i = (($$10446530$us$i) + -1)|0;
                        $830 = ($$10446$us$i|0)==(0);
                        if ($830) {
                         break;
                        } else {
                         $$10398528$us$i = $828;$$10446530$us$i = $$10446$us$i;$$10529$us$i = $829;$$11431527$us$i = $827;
                        }
                       }
                       $scevgep726$i = (($560) + ($809)|0);
                       $$16$ph$i = $scevgep726$i;
                       break L395;
                       break;
                      }
                      case 4:  {
                       $834 = HEAP32[$0>>2]|0;
                       $$11447514$i = (($834) + -1)|0;
                       $835 = ($$11447514$i|0)==(0);
                       if ($835) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $836 = Math_imul($834, $533)|0;
                       if (!($555)) {
                        $$11399516$i = $749;$$11447518$i = $$11447514$i;
                        while(1) {
                         $870 = (($$11399516$i) + ($533)|0);
                         HEAP8[$870>>0] = -1;
                         $871 = (($$11399516$i) + ($534)|0);
                         $$11447$i = (($$11447518$i) + -1)|0;
                         $872 = ($$11447$i|0)==(0);
                         if ($872) {
                          break;
                         } else {
                          $$11399516$i = $871;$$11447518$i = $$11447$i;
                         }
                        }
                        $scevgep718$i = (($560) + ($836)|0);
                        $$16$ph$i = $scevgep718$i;
                        break L395;
                       }
                       $$11399516$us$i = $749;$$11447518$us$i = $$11447514$i;$$11517$us$i = $750;$$12432515$us$i = $748;
                       while(1) {
                        $$12418510$us$i = 0;
                        while(1) {
                         $837 = (($$12432515$us$i) + ($$12418510$us$i)|0);
                         $838 = HEAP8[$837>>0]|0;
                         $839 = $838&255;
                         $840 = (($$12418510$us$i) - ($534))|0;
                         $841 = (($$11399516$us$i) + ($840)|0);
                         $842 = HEAP8[$841>>0]|0;
                         $843 = $842&255;
                         $844 = (($$11517$us$i) + ($$12418510$us$i)|0);
                         $845 = HEAP8[$844>>0]|0;
                         $846 = $845&255;
                         $847 = (($$11517$us$i) + ($840)|0);
                         $848 = HEAP8[$847>>0]|0;
                         $849 = $848&255;
                         $850 = (($846) + ($843))|0;
                         $851 = (($850) - ($849))|0;
                         $852 = (($851) - ($843))|0;
                         $ispos$i$us$i = ($852|0)>(-1);
                         $neg$i$us$i = (0 - ($852))|0;
                         $853 = $ispos$i$us$i ? $852 : $neg$i$us$i;
                         $854 = (($851) - ($846))|0;
                         $ispos26$i$us$i = ($854|0)>(-1);
                         $neg27$i453$us$i = (0 - ($854))|0;
                         $855 = $ispos26$i$us$i ? $854 : $neg27$i453$us$i;
                         $856 = (($851) - ($849))|0;
                         $ispos28$i$us$i = ($856|0)>(-1);
                         $neg29$i454$us$i = (0 - ($856))|0;
                         $857 = $ispos28$i$us$i ? $856 : $neg29$i454$us$i;
                         $858 = ($853|0)>($855|0);
                         $859 = ($853|0)>($857|0);
                         $or$cond$i$us$i = $858 | $859;
                         $860 = ($855|0)>($857|0);
                         $$$i$us$i = $860 ? $849 : $846;
                         $$0$i$us$i = $or$cond$i$us$i ? $$$i$us$i : $843;
                         $861 = (($$0$i$us$i) + ($839))|0;
                         $862 = $861&255;
                         $863 = (($$11399516$us$i) + ($$12418510$us$i)|0);
                         HEAP8[$863>>0] = $862;
                         $864 = (($$12418510$us$i) + 1)|0;
                         $exitcond719$i = ($864|0)==($533|0);
                         if ($exitcond719$i) {
                          break;
                         } else {
                          $$12418510$us$i = $864;
                         }
                        }
                        $865 = (($$11399516$us$i) + ($533)|0);
                        HEAP8[$865>>0] = -1;
                        $866 = (($$12432515$us$i) + ($533)|0);
                        $867 = (($$11399516$us$i) + ($534)|0);
                        $868 = (($$11517$us$i) + ($534)|0);
                        $$11447$us$i = (($$11447518$us$i) + -1)|0;
                        $869 = ($$11447$us$i|0)==(0);
                        if ($869) {
                         break;
                        } else {
                         $$11399516$us$i = $867;$$11447518$us$i = $$11447$us$i;$$11517$us$i = $868;$$12432515$us$i = $866;
                        }
                       }
                       $scevgep721$i = (($560) + ($836)|0);
                       $$16$ph$i = $scevgep721$i;
                       break L395;
                       break;
                      }
                      case 5:  {
                       $873 = HEAP32[$0>>2]|0;
                       $$12448503$i = (($873) + -1)|0;
                       $874 = ($$12448503$i|0)==(0);
                       if ($874) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $875 = Math_imul($873, $533)|0;
                       if (!($555)) {
                        $$12400505$i = $749;$$12448506$i = $$12448503$i;
                        while(1) {
                         $892 = (($$12400505$i) + ($533)|0);
                         HEAP8[$892>>0] = -1;
                         $893 = (($$12400505$i) + ($534)|0);
                         $$12448$i = (($$12448506$i) + -1)|0;
                         $894 = ($$12448$i|0)==(0);
                         if ($894) {
                          break;
                         } else {
                          $$12400505$i = $893;$$12448506$i = $$12448$i;
                         }
                        }
                        $scevgep713$i = (($560) + ($875)|0);
                        $$16$ph$i = $scevgep713$i;
                        break L395;
                       }
                       $$12400505$us$i = $749;$$12448506$us$i = $$12448503$i;$$13433504$us$i = $748;
                       while(1) {
                        $$13419499$us$i = 0;
                        while(1) {
                         $876 = (($$13433504$us$i) + ($$13419499$us$i)|0);
                         $877 = HEAP8[$876>>0]|0;
                         $878 = $877&255;
                         $879 = (($$13419499$us$i) - ($534))|0;
                         $880 = (($$12400505$us$i) + ($879)|0);
                         $881 = HEAP8[$880>>0]|0;
                         $882 = $881&255;
                         $883 = $882 >>> 1;
                         $884 = (($883) + ($878))|0;
                         $885 = $884&255;
                         $886 = (($$12400505$us$i) + ($$13419499$us$i)|0);
                         HEAP8[$886>>0] = $885;
                         $887 = (($$13419499$us$i) + 1)|0;
                         $exitcond714$i = ($887|0)==($533|0);
                         if ($exitcond714$i) {
                          break;
                         } else {
                          $$13419499$us$i = $887;
                         }
                        }
                        $888 = (($$12400505$us$i) + ($533)|0);
                        HEAP8[$888>>0] = -1;
                        $889 = (($$13433504$us$i) + ($533)|0);
                        $890 = (($$12400505$us$i) + ($534)|0);
                        $$12448$us$i = (($$12448506$us$i) + -1)|0;
                        $891 = ($$12448$us$i|0)==(0);
                        if ($891) {
                         break;
                        } else {
                         $$12400505$us$i = $890;$$12448506$us$i = $$12448$us$i;$$13433504$us$i = $889;
                        }
                       }
                       $scevgep716$i = (($560) + ($875)|0);
                       $$16$ph$i = $scevgep716$i;
                       break L395;
                       break;
                      }
                      case 6:  {
                       $895 = HEAP32[$0>>2]|0;
                       $$13449493$i = (($895) + -1)|0;
                       $896 = ($$13449493$i|0)==(0);
                       if ($896) {
                        $$16$ph$i = $748;
                        break L395;
                       }
                       $897 = Math_imul($895, $533)|0;
                       if (!($555)) {
                        $$13401495$i = $749;$$13449496$i = $$13449493$i;
                        while(1) {
                         $913 = (($$13401495$i) + ($533)|0);
                         HEAP8[$913>>0] = -1;
                         $914 = (($$13401495$i) + ($534)|0);
                         $$13449$i = (($$13449496$i) + -1)|0;
                         $915 = ($$13449$i|0)==(0);
                         if ($915) {
                          break;
                         } else {
                          $$13401495$i = $914;$$13449496$i = $$13449$i;
                         }
                        }
                        $scevgep708$i = (($560) + ($897)|0);
                        $$16$ph$i = $scevgep708$i;
                        break L395;
                       }
                       $$13401495$us$i = $749;$$13449496$us$i = $$13449493$i;$$14434494$us$i = $748;
                       while(1) {
                        $$14489$us$i = 0;
                        while(1) {
                         $898 = (($$14434494$us$i) + ($$14489$us$i)|0);
                         $899 = HEAP8[$898>>0]|0;
                         $900 = $899&255;
                         $901 = (($$14489$us$i) - ($534))|0;
                         $902 = (($$13401495$us$i) + ($901)|0);
                         $903 = HEAP8[$902>>0]|0;
                         $904 = $903&255;
                         $905 = (($904) + ($900))|0;
                         $906 = $905&255;
                         $907 = (($$13401495$us$i) + ($$14489$us$i)|0);
                         HEAP8[$907>>0] = $906;
                         $908 = (($$14489$us$i) + 1)|0;
                         $exitcond709$i = ($908|0)==($533|0);
                         if ($exitcond709$i) {
                          break;
                         } else {
                          $$14489$us$i = $908;
                         }
                        }
                        $909 = (($$13401495$us$i) + ($533)|0);
                        HEAP8[$909>>0] = -1;
                        $910 = (($$14434494$us$i) + ($533)|0);
                        $911 = (($$13401495$us$i) + ($534)|0);
                        $$13449$us$i = (($$13449496$us$i) + -1)|0;
                        $912 = ($$13449$us$i|0)==(0);
                        if ($912) {
                         break;
                        } else {
                         $$13401495$us$i = $911;$$13449496$us$i = $$13449$us$i;$$14434494$us$i = $910;
                        }
                       }
                       $scevgep711$i = (($560) + ($897)|0);
                       $$16$ph$i = $scevgep711$i;
                       break L395;
                       break;
                      }
                      default: {
                       $$16$ph$i = $748;
                       break L395;
                      }
                      }
                     }
                    } while(0);
                    $916 = (($$0435648$i411) + 1)|0;
                    $917 = HEAP32[$100>>2]|0;
                    $918 = ($916>>>0)<($917>>>0);
                    if (!($918)) {
                     $$idx190$val = $917;
                     break L360;
                    }
                    $$pre$i278 = HEAP32[$547>>2]|0;
                    $919 = Math_imul($916, $542)|0;
                    $920 = (($$pre$i278) + ($919)|0);
                    $921 = HEAP8[$$16$ph$i>>0]|0;
                    $922 = $921&255;
                    $923 = ($921&255)>(4);
                    if ($923) {
                     break L362;
                    } else {
                     $$0435648$i411 = $916;$$pn = $$16$ph$i;$$pn421 = $920;$563 = $922;
                    }
                   }
                   ___assert_fail((121909|0),(121322|0),2129,(121887|0));
                   // unreachable;
                  }
                 } while(0);
                 HEAP32[36596] = 121715;
                 $$7 = 0;
                 STACKTOP = sp;return ($$7|0);
                }
               } while(0);
               L581: do {
                if (!($538)) {
                 $924 = HEAP32[$539>>2]|0;
                 $$idx$val = HEAP32[$0>>2]|0;
                 $$idx191$val = HEAP32[$547>>2]|0;
                 $925 = Math_imul($$idx190$val, $$idx$val)|0;
                 switch ($924|0) {
                 case 2:  {
                  $926 = ($925|0)==(0);
                  if ($926) {
                   break L581;
                  }
                  $927 = HEAP8[$5>>0]|0;
                  $$03$i = $$idx191$val;$$0322$i = 0;
                  while(1) {
                   $928 = HEAP8[$$03$i>>0]|0;
                   $929 = ($928<<24>>24)!=($927<<24>>24);
                   $930 = $929 << 31 >> 31;
                   $931 = ((($$03$i)) + 1|0);
                   HEAP8[$931>>0] = $930;
                   $932 = ((($$03$i)) + 2|0);
                   $933 = (($$0322$i) + 1)|0;
                   $exitcond$i280 = ($933|0)==($925|0);
                   if ($exitcond$i280) {
                    break;
                   } else {
                    $$03$i = $932;$$0322$i = $933;
                   }
                  }
                  break;
                 }
                 case 4:  {
                  $934 = ($925|0)==(0);
                  if ($934) {
                   break L581;
                  }
                  $935 = ((($5)) + 1|0);
                  $936 = ((($5)) + 2|0);
                  $937 = HEAP8[$5>>0]|0;
                  $938 = HEAP8[$935>>0]|0;
                  $939 = HEAP8[$936>>0]|0;
                  $$1334$i = 0;$$15$i = $$idx191$val;
                  while(1) {
                   $940 = HEAP8[$$15$i>>0]|0;
                   $941 = ($940<<24>>24)==($937<<24>>24);
                   do {
                    if ($941) {
                     $942 = ((($$15$i)) + 1|0);
                     $943 = HEAP8[$942>>0]|0;
                     $944 = ($943<<24>>24)==($938<<24>>24);
                     if (!($944)) {
                      break;
                     }
                     $945 = ((($$15$i)) + 2|0);
                     $946 = HEAP8[$945>>0]|0;
                     $947 = ($946<<24>>24)==($939<<24>>24);
                     if (!($947)) {
                      break;
                     }
                     $948 = ((($$15$i)) + 3|0);
                     HEAP8[$948>>0] = 0;
                    }
                   } while(0);
                   $949 = ((($$15$i)) + 4|0);
                   $950 = (($$1334$i) + 1)|0;
                   $exitcond8$i = ($950|0)==($925|0);
                   if ($exitcond8$i) {
                    break;
                   } else {
                    $$1334$i = $950;$$15$i = $949;
                   }
                  }
                  break;
                 }
                 default: {
                  ___assert_fail((121926|0),(121322|0),2157,(121951|0));
                  // unreachable;
                 }
                 }
                }
               } while(0);
               if ($537) {
                $951 = $$0161&255;
                HEAP32[$99>>2] = $951;
                $952 = ($2|0)>(2);
                $spec$select = $952 ? $2 : $951;
                HEAP32[$539>>2] = $spec$select;
                $953 = HEAP32[$0>>2]|0;
                $954 = HEAP32[$100>>2]|0;
                $955 = Math_imul($954, $953)|0;
                $956 = HEAP32[$547>>2]|0;
                $957 = Math_imul($955, $spec$select)|0;
                $958 = (_malloc($957)|0);
                $959 = ($958|0)==(0|0);
                if ($959) {
                 HEAP32[36596] = 121182;
                 $$7 = 0;
                 STACKTOP = sp;return ($$7|0);
                }
                $960 = ($spec$select|0)==(3);
                $961 = ($955|0)!=(0);
                do {
                 if ($960) {
                  if (!($961)) {
                   break;
                  }
                  $$0573$i = 0;$$0582$i = $958;
                  while(1) {
                   $962 = (($956) + ($$0573$i)|0);
                   $963 = HEAP8[$962>>0]|0;
                   $964 = $963&255;
                   $965 = $964 << 2;
                   $966 = (($4) + ($965)|0);
                   $967 = HEAP8[$966>>0]|0;
                   HEAP8[$$0582$i>>0] = $967;
                   $968 = $965 | 1;
                   $969 = (($4) + ($968)|0);
                   $970 = HEAP8[$969>>0]|0;
                   $971 = ((($$0582$i)) + 1|0);
                   HEAP8[$971>>0] = $970;
                   $972 = $965 | 2;
                   $973 = (($4) + ($972)|0);
                   $974 = HEAP8[$973>>0]|0;
                   $975 = ((($$0582$i)) + 2|0);
                   HEAP8[$975>>0] = $974;
                   $976 = ((($$0582$i)) + 3|0);
                   $977 = (($$0573$i) + 1)|0;
                   $exitcond$i283 = ($977|0)==($955|0);
                   if ($exitcond$i283) {
                    break;
                   } else {
                    $$0573$i = $977;$$0582$i = $976;
                   }
                  }
                 } else {
                  if (!($961)) {
                   break;
                  }
                  $$15$i285 = 0;$$1594$i = $958;
                  while(1) {
                   $978 = (($956) + ($$15$i285)|0);
                   $979 = HEAP8[$978>>0]|0;
                   $980 = $979&255;
                   $981 = $980 << 2;
                   $982 = (($4) + ($981)|0);
                   $983 = HEAP8[$982>>0]|0;
                   HEAP8[$$1594$i>>0] = $983;
                   $984 = $981 | 1;
                   $985 = (($4) + ($984)|0);
                   $986 = HEAP8[$985>>0]|0;
                   $987 = ((($$1594$i)) + 1|0);
                   HEAP8[$987>>0] = $986;
                   $988 = $981 | 2;
                   $989 = (($4) + ($988)|0);
                   $990 = HEAP8[$989>>0]|0;
                   $991 = ((($$1594$i)) + 2|0);
                   HEAP8[$991>>0] = $990;
                   $992 = $981 | 3;
                   $993 = (($4) + ($992)|0);
                   $994 = HEAP8[$993>>0]|0;
                   $995 = ((($$1594$i)) + 3|0);
                   HEAP8[$995>>0] = $994;
                   $996 = ((($$1594$i)) + 4|0);
                   $997 = (($$15$i285) + 1)|0;
                   $exitcond8$i286 = ($997|0)==($955|0);
                   if ($exitcond8$i286) {
                    break;
                   } else {
                    $$15$i285 = $997;$$1594$i = $996;
                   }
                  }
                 }
                } while(0);
                $998 = HEAP32[$547>>2]|0;
                _free($998);
                HEAP32[$547>>2] = $958;
               }
               $999 = HEAP32[$530>>2]|0;
               _free($999);
               HEAP32[$530>>2] = 0;
               $$7 = 1;
               STACKTOP = sp;return ($$7|0);
              }
             } while(0);
             $523 = ((($0)) + 32|0);
             HEAP32[$523>>2] = 0;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
            case 419: {
             HEAP32[36596] = 121972;
             $$7 = 0;
             STACKTOP = sp;return ($$7|0);
             break;
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 HEAP32[36596] = 121705;
 $$7 = 0;
 STACKTOP = sp;return ($$7|0);
}
function _do_png($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$037 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 32|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 0;
 $8 = ($4>>>0)>(4);
 if ($8) {
  HEAP32[36596] = 121690;
  $$037 = 0;
  return ($$037|0);
 }
 $9 = (_parse_png_file($0,0,$4)|0);
 $10 = ($9|0)==(0);
 if ($10) {
  $$1 = 0;
 } else {
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$7>>2] = 0;
  $12 = ($4|0)==(0);
  if ($12) {
   $$0 = $11;
  } else {
   $13 = ((($0)) + 12|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==($4|0);
   if ($15) {
    $$0 = $11;
   } else {
    $16 = HEAP32[$0>>2]|0;
    $17 = ((($0)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (_convert_format($11,$14,$4,$16,$18)|0);
    HEAP32[$13>>2] = $4;
    $20 = ($19|0)==(0|0);
    if ($20) {
     $$037 = 0;
     return ($$037|0);
    } else {
     $$0 = $19;
    }
   }
  }
  $21 = HEAP32[$0>>2]|0;
  HEAP32[$1>>2] = $21;
  $22 = ((($0)) + 4|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$2>>2] = $23;
  $24 = ($3|0)==(0|0);
  if ($24) {
   $$1 = $$0;
  } else {
   $25 = ((($0)) + 8|0);
   $26 = HEAP32[$25>>2]|0;
   HEAP32[$3>>2] = $26;
   $$1 = $$0;
  }
 }
 $27 = HEAP32[$7>>2]|0;
 _free($27);
 HEAP32[$7>>2] = 0;
 $28 = HEAP32[$5>>2]|0;
 _free($28);
 HEAP32[$5>>2] = 0;
 $29 = HEAP32[$6>>2]|0;
 _free($29);
 HEAP32[$6>>2] = 0;
 $$037 = $$1;
 return ($$037|0);
}
function _bmp_test($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i17 = 0, $$0$i3$i$i51$ph = 0, $$0$i3$i72 = 0, $$0$i5$i71 = 0, $$0$i6$i$i48 = 0, $$0$i6$i69 = 0, $$op = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i29 = 0, $$phi$trans$insert$i42 = 0, $$phi$trans$insert3$i = 0, $$phi$trans$insert3$i31 = 0, $$phi$trans$insert3$i44 = 0, $$phi$trans$insert76 = 0, $$phi$trans$insert79 = 0, $$phi$trans$insert81 = 0, $$phi$trans$insert84 = 0;
 var $$phi$trans$insert86 = 0, $$phi$trans$insert90 = 0, $$phi$trans$insert92 = 0, $$phi$trans$insert96 = 0, $$phi$trans$insert98 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i27 = 0, $$pre$i$i40 = 0, $$pre$i19 = 0, $$pre$i20 = 0, $$pre$i30 = 0, $$pre$i43 = 0, $$pre$i53 = 0, $$pre$i60 = 0, $$pre$i67 = 0, $$pre$phi$i34Z2D = 0, $$pre$phi$i47Z2D = 0, $$pre$phi$iZ2D = 0;
 var $$pre$phi101Z2D = 0, $$pre$phi103Z2D = 0, $$pre$phi105Z2D = 0, $$pre$phi107Z2D = 0, $$pre$phiZ2D = 0, $$pre4$i = 0, $$pre4$i32 = 0, $$pre4$i45 = 0, $$pre75 = 0, $$pre77 = 0, $$pre78 = 0, $$pre80 = 0, $$pre82 = 0, $$pre83 = 0, $$pre85 = 0, $$pre87 = 0, $$pre88 = 0, $$pre89 = 0, $$pre91 = 0, $$pre93 = 0;
 var $$pre94 = 0, $$pre95 = 0, $$pre97 = 0, $$pre99 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 do {
  if ($3) {
   $6 = ((($0)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 24|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    HEAP32[$6>>2] = $11;
    $12 = HEAP8[$7>>0]|0;
    $13 = $12&255;
    $$0$i = $13;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $4 = (_fgetc($2)|0);
   $5 = ($4|0)==(-1);
   if ($5) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i = $4;
   }
  }
 } while(0);
 $14 = ($$0$i|0)==(66);
 if (!($14)) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[$1>>2]|0;
 $16 = ($15|0)==(0|0);
 do {
  if ($16) {
   $19 = ((($0)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($0)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20>>>0)<($22>>>0);
   if ($23) {
    $24 = ((($20)) + 1|0);
    HEAP32[$19>>2] = $24;
    $25 = HEAP8[$20>>0]|0;
    $26 = $25&255;
    $$0$i17 = $26;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $17 = (_fgetc($15)|0);
   $18 = ($17|0)==(-1);
   if ($18) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i17 = $17;
   }
  }
 } while(0);
 $27 = ($$0$i17|0)==(77);
 if (!($27)) {
  $$0 = 0;
  return ($$0|0);
 }
 $28 = HEAP32[$1>>2]|0;
 $29 = ($28|0)==(0|0);
 do {
  if ($29) {
   $30 = ((($0)) + 20|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($0)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($31>>>0)<($33>>>0);
   if ($34) {
    $35 = ((($31)) + 1|0);
    HEAP32[$30>>2] = $35;
    $$pre$phi$iZ2D = $30;$38 = $35;$39 = $33;
    label = 16;
   } else {
    $$pre$phi$iZ2D = $30;$38 = $31;$39 = $33;
    label = 16;
   }
  } else {
   (_fgetc($28)|0);
   $$pre$i$i = HEAP32[$1>>2]|0;
   $36 = ($$pre$i$i|0)==(0|0);
   if ($36) {
    $$phi$trans$insert$i = ((($0)) + 20|0);
    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $$phi$trans$insert3$i = ((($0)) + 24|0);
    $$pre4$i = HEAP32[$$phi$trans$insert3$i>>2]|0;
    $$pre$phi$iZ2D = $$phi$trans$insert$i;$38 = $$pre$i;$39 = $$pre4$i;
    label = 16;
    break;
   }
   (_fgetc($$pre$i$i)|0);
   $$pre = HEAP32[$1>>2]|0;
   $41 = ($$pre|0)==(0|0);
   if ($41) {
    label = 19;
   } else {
    (_fgetc($$pre)|0);
    $$pre$i53 = HEAP32[$1>>2]|0;
    $48 = ($$pre$i53|0)==(0|0);
    if ($48) {
     $$phi$trans$insert = ((($0)) + 20|0);
     $$pre75 = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert76 = ((($0)) + 24|0);
     $$pre77 = HEAP32[$$phi$trans$insert76>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$50 = $$pre75;$51 = $$pre77;
     label = 23;
     break;
    }
    (_fgetc($$pre$i53)|0);
    $$pre78 = HEAP32[$1>>2]|0;
    $53 = ($$pre78|0)==(0|0);
    if ($53) {
     label = 26;
    } else {
     (_fgetc($$pre78)|0);
     $$pre$i19 = HEAP32[$1>>2]|0;
     $60 = ($$pre$i19|0)==(0|0);
     if ($60) {
      $$phi$trans$insert79 = ((($0)) + 20|0);
      $$pre80 = HEAP32[$$phi$trans$insert79>>2]|0;
      $$phi$trans$insert81 = ((($0)) + 24|0);
      $$pre82 = HEAP32[$$phi$trans$insert81>>2]|0;
      $$pre$phi101Z2D = $$phi$trans$insert79;$62 = $$pre80;$63 = $$pre82;
      label = 30;
      break;
     }
     (_fgetc($$pre$i19)|0);
     $$pre83 = HEAP32[$1>>2]|0;
     $65 = ($$pre83|0)==(0|0);
     if ($65) {
      label = 33;
     } else {
      (_fgetc($$pre83)|0);
      $$pre$i20 = HEAP32[$1>>2]|0;
      $72 = ($$pre$i20|0)==(0|0);
      if ($72) {
       $$phi$trans$insert84 = ((($0)) + 20|0);
       $$pre85 = HEAP32[$$phi$trans$insert84>>2]|0;
       $$phi$trans$insert86 = ((($0)) + 24|0);
       $$pre87 = HEAP32[$$phi$trans$insert86>>2]|0;
       $$pre$phi103Z2D = $$phi$trans$insert84;$74 = $$pre85;$75 = $$pre87;
       label = 37;
       break;
      }
      (_fgetc($$pre$i20)|0);
      $$pre88 = HEAP32[$1>>2]|0;
      $77 = ($$pre88|0)==(0|0);
      if ($77) {
       label = 40;
      } else {
       (_fgetc($$pre88)|0);
       $$pre$i$i27 = HEAP32[$1>>2]|0;
       $84 = ($$pre$i$i27|0)==(0|0);
       if ($84) {
        $$phi$trans$insert$i29 = ((($0)) + 20|0);
        $$pre$i30 = HEAP32[$$phi$trans$insert$i29>>2]|0;
        $$phi$trans$insert3$i31 = ((($0)) + 24|0);
        $$pre4$i32 = HEAP32[$$phi$trans$insert3$i31>>2]|0;
        $$pre$phi$i34Z2D = $$phi$trans$insert$i29;$86 = $$pre$i30;$87 = $$pre4$i32;
        label = 44;
        break;
       }
       (_fgetc($$pre$i$i27)|0);
       $$pre89 = HEAP32[$1>>2]|0;
       $89 = ($$pre89|0)==(0|0);
       if ($89) {
        label = 47;
       } else {
        (_fgetc($$pre89)|0);
        $$pre$i60 = HEAP32[$1>>2]|0;
        $96 = ($$pre$i60|0)==(0|0);
        if ($96) {
         $$phi$trans$insert90 = ((($0)) + 20|0);
         $$pre91 = HEAP32[$$phi$trans$insert90>>2]|0;
         $$phi$trans$insert92 = ((($0)) + 24|0);
         $$pre93 = HEAP32[$$phi$trans$insert92>>2]|0;
         $$pre$phi105Z2D = $$phi$trans$insert90;$98 = $$pre91;$99 = $$pre93;
         label = 51;
         break;
        }
        (_fgetc($$pre$i60)|0);
        $$pre94 = HEAP32[$1>>2]|0;
        $101 = ($$pre94|0)==(0|0);
        if ($101) {
         label = 54;
        } else {
         $110 = (_fgetc($$pre94)|0);
         $111 = ($110|0)==(-1);
         $112 = $111 ? 0 : $110;
         $$pre$i$i40 = HEAP32[$1>>2]|0;
         $113 = ($$pre$i$i40|0)==(0|0);
         if ($113) {
          $$phi$trans$insert$i42 = ((($0)) + 20|0);
          $$pre$i43 = HEAP32[$$phi$trans$insert$i42>>2]|0;
          $$phi$trans$insert3$i44 = ((($0)) + 24|0);
          $$pre4$i45 = HEAP32[$$phi$trans$insert3$i44>>2]|0;
          $$0$i6$i$i48 = $112;$$pre$phi$i47Z2D = $$phi$trans$insert$i42;$115 = $$pre$i43;$116 = $$pre4$i45;
          label = 58;
          break;
         }
         $121 = (_fgetc($$pre$i$i40)|0);
         $122 = ($121|0)==(-1);
         $$pre95 = HEAP32[$1>>2]|0;
         $$op = $121 << 8;
         $123 = $122 ? 0 : $$op;
         $124 = (($123) + ($112))|0;
         $125 = ($$pre95|0)==(0|0);
         if ($125) {
          $152 = $124;
          label = 62;
         } else {
          $134 = (_fgetc($$pre95)|0);
          $135 = ($134|0)==(-1);
          $136 = $135 ? 0 : $134;
          $$pre$i67 = HEAP32[$1>>2]|0;
          $137 = ($$pre$i67|0)==(0|0);
          if ($137) {
           $$phi$trans$insert96 = ((($0)) + 20|0);
           $$pre97 = HEAP32[$$phi$trans$insert96>>2]|0;
           $$phi$trans$insert98 = ((($0)) + 24|0);
           $$pre99 = HEAP32[$$phi$trans$insert98>>2]|0;
           $$0$i6$i69 = $136;$$pre$phi107Z2D = $$phi$trans$insert96;$142 = $$pre97;$143 = $$pre99;$153 = $124;
           label = 67;
           break;
          } else {
           $138 = (_fgetc($$pre$i67)|0);
           $139 = ($138|0)==(-1);
           $140 = $139 ? 0 : $138;
           $$0$i3$i72 = $140;$$0$i5$i71 = $136;$151 = $124;
           break;
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $37 = ($38>>>0)<($39>>>0);
  if ($37) {
   $40 = ((($38)) + 1|0);
   HEAP32[$$pre$phi$iZ2D>>2] = $40;
   label = 19;
  } else {
   label = 19;
  }
 }
 if ((label|0) == 19) {
  $42 = ((($0)) + 20|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = ((($0)) + 24|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = ($43>>>0)<($45>>>0);
  if ($46) {
   $47 = ((($43)) + 1|0);
   HEAP32[$42>>2] = $47;
   $$pre$phiZ2D = $42;$50 = $47;$51 = $45;
   label = 23;
  } else {
   $$pre$phiZ2D = $42;$50 = $43;$51 = $45;
   label = 23;
  }
 }
 if ((label|0) == 23) {
  $49 = ($50>>>0)<($51>>>0);
  if ($49) {
   $52 = ((($50)) + 1|0);
   HEAP32[$$pre$phiZ2D>>2] = $52;
   label = 26;
  } else {
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $54 = ((($0)) + 20|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($0)) + 24|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($55>>>0)<($57>>>0);
  if ($58) {
   $59 = ((($55)) + 1|0);
   HEAP32[$54>>2] = $59;
   $$pre$phi101Z2D = $54;$62 = $59;$63 = $57;
   label = 30;
  } else {
   $$pre$phi101Z2D = $54;$62 = $55;$63 = $57;
   label = 30;
  }
 }
 if ((label|0) == 30) {
  $61 = ($62>>>0)<($63>>>0);
  if ($61) {
   $64 = ((($62)) + 1|0);
   HEAP32[$$pre$phi101Z2D>>2] = $64;
   label = 33;
  } else {
   label = 33;
  }
 }
 if ((label|0) == 33) {
  $66 = ((($0)) + 20|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ((($0)) + 24|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ($67>>>0)<($69>>>0);
  if ($70) {
   $71 = ((($67)) + 1|0);
   HEAP32[$66>>2] = $71;
   $$pre$phi103Z2D = $66;$74 = $71;$75 = $69;
   label = 37;
  } else {
   $$pre$phi103Z2D = $66;$74 = $67;$75 = $69;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $73 = ($74>>>0)<($75>>>0);
  if ($73) {
   $76 = ((($74)) + 1|0);
   HEAP32[$$pre$phi103Z2D>>2] = $76;
   label = 40;
  } else {
   label = 40;
  }
 }
 if ((label|0) == 40) {
  $78 = ((($0)) + 20|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = ((($0)) + 24|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = ($79>>>0)<($81>>>0);
  if ($82) {
   $83 = ((($79)) + 1|0);
   HEAP32[$78>>2] = $83;
   $$pre$phi$i34Z2D = $78;$86 = $83;$87 = $81;
   label = 44;
  } else {
   $$pre$phi$i34Z2D = $78;$86 = $79;$87 = $81;
   label = 44;
  }
 }
 if ((label|0) == 44) {
  $85 = ($86>>>0)<($87>>>0);
  if ($85) {
   $88 = ((($86)) + 1|0);
   HEAP32[$$pre$phi$i34Z2D>>2] = $88;
   label = 47;
  } else {
   label = 47;
  }
 }
 if ((label|0) == 47) {
  $90 = ((($0)) + 20|0);
  $91 = HEAP32[$90>>2]|0;
  $92 = ((($0)) + 24|0);
  $93 = HEAP32[$92>>2]|0;
  $94 = ($91>>>0)<($93>>>0);
  if ($94) {
   $95 = ((($91)) + 1|0);
   HEAP32[$90>>2] = $95;
   $$pre$phi105Z2D = $90;$98 = $95;$99 = $93;
   label = 51;
  } else {
   $$pre$phi105Z2D = $90;$98 = $91;$99 = $93;
   label = 51;
  }
 }
 if ((label|0) == 51) {
  $97 = ($98>>>0)<($99>>>0);
  if ($97) {
   $100 = ((($98)) + 1|0);
   HEAP32[$$pre$phi105Z2D>>2] = $100;
   label = 54;
  } else {
   label = 54;
  }
 }
 if ((label|0) == 54) {
  $102 = ((($0)) + 20|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ((($0)) + 24|0);
  $105 = HEAP32[$104>>2]|0;
  $106 = ($103>>>0)<($105>>>0);
  if ($106) {
   $107 = ((($103)) + 1|0);
   HEAP32[$102>>2] = $107;
   $108 = HEAP8[$103>>0]|0;
   $109 = $108&255;
   $$0$i6$i$i48 = $109;$$pre$phi$i47Z2D = $102;$115 = $107;$116 = $105;
   label = 58;
  } else {
   $$0$i6$i$i48 = 0;$$pre$phi$i47Z2D = $102;$115 = $103;$116 = $105;
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $114 = ($115>>>0)<($116>>>0);
  if ($114) {
   $117 = ((($115)) + 1|0);
   HEAP32[$$pre$phi$i47Z2D>>2] = $117;
   $118 = HEAP8[$115>>0]|0;
   $119 = $118&255;
   $phitmp = $119 << 8;
   $$0$i3$i$i51$ph = $phitmp;
  } else {
   $$0$i3$i$i51$ph = 0;
  }
  $120 = (($$0$i3$i$i51$ph) + ($$0$i6$i$i48))|0;
  $152 = $120;
  label = 62;
 }
 if ((label|0) == 62) {
  $126 = ((($0)) + 20|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ((($0)) + 24|0);
  $129 = HEAP32[$128>>2]|0;
  $130 = ($127>>>0)<($129>>>0);
  if ($130) {
   $131 = ((($127)) + 1|0);
   HEAP32[$126>>2] = $131;
   $132 = HEAP8[$127>>0]|0;
   $133 = $132&255;
   $$0$i6$i69 = $133;$$pre$phi107Z2D = $126;$142 = $131;$143 = $129;$153 = $152;
   label = 67;
  } else {
   $$0$i6$i69 = 0;$$pre$phi107Z2D = $126;$142 = $127;$143 = $129;$153 = $152;
   label = 67;
  }
 }
 if ((label|0) == 67) {
  $141 = ($142>>>0)<($143>>>0);
  if ($141) {
   $144 = ((($142)) + 1|0);
   HEAP32[$$pre$phi107Z2D>>2] = $144;
   $145 = HEAP8[$142>>0]|0;
   $146 = $145&255;
   $$0$i3$i72 = $146;$$0$i5$i71 = $$0$i6$i69;$151 = $153;
  } else {
   $$0$i3$i72 = 0;$$0$i5$i71 = $$0$i6$i69;$151 = $153;
  }
 }
 $147 = $$0$i3$i72 << 8;
 $148 = (($147) + ($$0$i5$i71))|0;
 $149 = $148 << 16;
 $150 = (($151) + ($149))|0;
 switch ($150|0) {
 case 12: case 40: case 56: case 108:  {
  $$0 = 1;
  return ($$0|0);
  break;
 }
 default: {
 }
 }
 $$0 = 0;
 return ($$0|0);
}
function _bmp_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0$i = 0, $$0$i3$i$i438$ph = 0, $$0$i3$i$i451$ph = 0, $$0$i3$i$i485$ph = 0, $$0$i3$i$i498$ph = 0, $$0$i3$i$i525$ph = 0, $$0$i3$i$i662$ph = 0, $$0$i3$i$i675$ph = 0, $$0$i3$i$i688$ph = 0, $$0$i3$i$i701$ph = 0, $$0$i3$i$i714$ph = 0, $$0$i3$i$i727$ph = 0, $$0$i3$i$i740$ph = 0, $$0$i3$i$i869$ph = 0, $$0$i3$i1000$ph = 0, $$0$i3$i1007 = 0, $$0$i3$i1014$ph = 0, $$0$i3$i1021$ph = 0, $$0$i3$i458 = 0;
 var $$0$i3$i465$ph = 0, $$0$i3$i472 = 0, $$0$i3$i505 = 0, $$0$i3$i512 = 0, $$0$i3$i532 = 0, $$0$i3$i812$ph = 0, $$0$i3$i830$ph = 0, $$0$i3$i856 = 0, $$0$i3$i876 = 0, $$0$i3$i909$ph = 0, $$0$i3$i916 = 0, $$0$i3$i923 = 0, $$0$i3$i993$ph = 0, $$0$i417 = 0, $$0$i5$i1006 = 0, $$0$i5$i457 = 0, $$0$i5$i471 = 0, $$0$i5$i504 = 0, $$0$i5$i511 = 0, $$0$i5$i531 = 0;
 var $$0$i5$i855 = 0, $$0$i5$i875 = 0, $$0$i5$i915 = 0, $$0$i5$i922 = 0, $$0$i6$i$i435 = 0, $$0$i6$i$i448 = 0, $$0$i6$i$i482 = 0, $$0$i6$i$i495 = 0, $$0$i6$i$i522 = 0, $$0$i6$i$i659 = 0, $$0$i6$i$i672 = 0, $$0$i6$i$i685 = 0, $$0$i6$i$i698 = 0, $$0$i6$i$i711 = 0, $$0$i6$i$i724 = 0, $$0$i6$i$i737 = 0, $$0$i6$i$i866 = 0, $$0$i6$i1004 = 0, $$0$i6$i1011 = 0, $$0$i6$i1018 = 0;
 var $$0$i6$i455 = 0, $$0$i6$i462 = 0, $$0$i6$i469 = 0, $$0$i6$i502 = 0, $$0$i6$i509 = 0, $$0$i6$i529 = 0, $$0$i6$i809 = 0, $$0$i6$i827 = 0, $$0$i6$i853 = 0, $$0$i6$i873 = 0, $$0$i6$i906 = 0, $$0$i6$i913 = 0, $$0$i6$i920 = 0, $$0$i6$i990 = 0, $$0$i6$i997 = 0, $$0$i775$ph = 0, $$0$i777$ph = 0, $$0$i779 = 0, $$0$i783 = 0, $$0$i843$ph = 0;
 var $$0$i845$ph = 0, $$0$i847 = 0, $$016$lcssa$i = 0, $$016$lcssa$i882 = 0, $$016$lcssa$i888 = 0, $$01618$i = 0, $$01618$i881 = 0, $$01618$i887 = 0, $$01618$i893 = 0, $$017$i = 0, $$017$i878 = 0, $$017$i884 = 0, $$017$i890 = 0, $$019$i = 0, $$019$i880 = 0, $$019$i886 = 0, $$019$i892 = 0, $$0366 = 0, $$0367 = 0, $$0369 = 0;
 var $$0371 = 0, $$0373 = 0, $$03751034 = 0, $$03761074 = 0, $$0382 = 0, $$0383 = 0, $$0384 = 0, $$0385 = 0, $$0386 = 0, $$0387 = 0, $$0388 = 0, $$03891056 = 0, $$0398 = 0, $$03991076 = 0, $$04061055 = 0, $$0409 = 0, $$1$i = 0, $$1$i799 = 0, $$1$i817 = 0, $$1$i835 = 0;
 var $$120$i = 0, $$120$i798 = 0, $$120$i816 = 0, $$120$i834 = 0, $$1368 = 0, $$1370 = 0, $$1372 = 0, $$1374 = 0, $$13771069 = 0, $$13901049 = 0, $$14001059 = 0, $$14071073 = 0, $$2 = 0, $$2$i = 0, $$2$i801 = 0, $$2$i819 = 0, $$2$i837 = 0, $$221$i = 0, $$221$i800 = 0, $$221$i818 = 0;
 var $$221$i836 = 0, $$2378 = 0, $$2391 = 0, $$24011048 = 0, $$24081045$us = 0, $$3$i = 0, $$3$i803 = 0, $$3$i821 = 0, $$3$i839 = 0, $$31064 = 0, $$322$i = 0, $$322$i802 = 0, $$322$i820 = 0, $$322$i838 = 0, $$34021068 = 0, $$4 = 0, $$411 = 0, $$412 = 0, $$413 = 0, $$4393$ph = 0;
 var $$44031063 = 0, $$5 = 0, $$5394 = 0, $$54041044$us = 0, $$op = 0, $$op1323 = 0, $$op1324 = 0, $$op1325 = 0, $$op1326 = 0, $$op1327 = 0, $$op1328 = 0, $$op1329 = 0, $$op1330 = 0, $$op1331 = 0, $$op1332 = 0, $$op1333 = 0, $$op1334 = 0, $$op1335 = 0, $$op1336 = 0, $$op1337 = 0;
 var $$op1338 = 0, $$op1339 = 0, $$op1340 = 0, $$op1341 = 0, $$op1342 = 0, $$ph = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i429 = 0, $$phi$trans$insert$i442 = 0, $$phi$trans$insert$i476 = 0, $$phi$trans$insert$i489 = 0, $$phi$trans$insert$i516 = 0, $$phi$trans$insert$i536 = 0, $$phi$trans$insert$i549 = 0, $$phi$trans$insert$i562 = 0, $$phi$trans$insert$i575 = 0, $$phi$trans$insert$i588 = 0, $$phi$trans$insert$i601 = 0, $$phi$trans$insert$i614 = 0;
 var $$phi$trans$insert$i627 = 0, $$phi$trans$insert$i640 = 0, $$phi$trans$insert$i653 = 0, $$phi$trans$insert$i666 = 0, $$phi$trans$insert$i679 = 0, $$phi$trans$insert$i692 = 0, $$phi$trans$insert$i705 = 0, $$phi$trans$insert$i718 = 0, $$phi$trans$insert$i731 = 0, $$phi$trans$insert$i744 = 0, $$phi$trans$insert1086 = 0, $$phi$trans$insert1089 = 0, $$phi$trans$insert1091 = 0, $$phi$trans$insert1094 = 0, $$phi$trans$insert1096 = 0, $$phi$trans$insert1100 = 0, $$phi$trans$insert1102 = 0, $$phi$trans$insert1106 = 0, $$phi$trans$insert1108 = 0, $$phi$trans$insert1111 = 0;
 var $$phi$trans$insert1113 = 0, $$phi$trans$insert1117 = 0, $$phi$trans$insert1119 = 0, $$phi$trans$insert1121 = 0, $$phi$trans$insert1123 = 0, $$phi$trans$insert1126 = 0, $$phi$trans$insert1128 = 0, $$phi$trans$insert1130 = 0, $$phi$trans$insert1132 = 0, $$phi$trans$insert1134 = 0, $$phi$trans$insert1136 = 0, $$phi$trans$insert1139 = 0, $$phi$trans$insert1141 = 0, $$phi$trans$insert1144 = 0, $$phi$trans$insert1146 = 0, $$phi$trans$insert1150 = 0, $$phi$trans$insert1152 = 0, $$phi$trans$insert1156 = 0, $$phi$trans$insert1158 = 0, $$phi$trans$insert1162 = 0;
 var $$phi$trans$insert1164 = 0, $$phi$trans$insert1168 = 0, $$phi$trans$insert1170 = 0, $$phi$trans$insert1173 = 0, $$phi$trans$insert1175 = 0, $$phi$trans$insert1179 = 0, $$phi$trans$insert1181 = 0, $$phi$trans$insert1185 = 0, $$phi$trans$insert1187 = 0, $$phi$trans$insert1191 = 0, $$phi$trans$insert1193 = 0, $$phi$trans$insert1197 = 0, $$phi$trans$insert1199 = 0, $$phi$trans$insert1205 = 0, $$phi$trans$insert1207 = 0, $$phi$trans$insert1211 = 0, $$phi$trans$insert1213 = 0, $$phi$trans$insert1217 = 0, $$phi$trans$insert1219 = 0, $$phi$trans$insert1223 = 0;
 var $$phi$trans$insert1225 = 0, $$phi$trans$insert1228 = 0, $$phi$trans$insert1230 = 0, $$phi$trans$insert1234 = 0, $$phi$trans$insert1236 = 0, $$phi$trans$insert1240 = 0, $$phi$trans$insert1242 = 0, $$phi$trans$insert3$i = 0, $$phi$trans$insert3$i431 = 0, $$phi$trans$insert3$i444 = 0, $$phi$trans$insert3$i478 = 0, $$phi$trans$insert3$i491 = 0, $$phi$trans$insert3$i518 = 0, $$phi$trans$insert3$i538 = 0, $$phi$trans$insert3$i551 = 0, $$phi$trans$insert3$i564 = 0, $$phi$trans$insert3$i577 = 0, $$phi$trans$insert3$i590 = 0, $$phi$trans$insert3$i603 = 0, $$phi$trans$insert3$i616 = 0;
 var $$phi$trans$insert3$i629 = 0, $$phi$trans$insert3$i642 = 0, $$phi$trans$insert3$i655 = 0, $$phi$trans$insert3$i668 = 0, $$phi$trans$insert3$i681 = 0, $$phi$trans$insert3$i694 = 0, $$phi$trans$insert3$i707 = 0, $$phi$trans$insert3$i720 = 0, $$phi$trans$insert3$i733 = 0, $$phi$trans$insert3$i746 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i427 = 0, $$pre$i$i440 = 0, $$pre$i$i474 = 0, $$pre$i$i487 = 0, $$pre$i$i514 = 0, $$pre$i$i534 = 0, $$pre$i$i547 = 0;
 var $$pre$i$i560 = 0, $$pre$i$i573 = 0, $$pre$i$i586 = 0, $$pre$i$i599 = 0, $$pre$i$i612 = 0, $$pre$i$i625 = 0, $$pre$i$i638 = 0, $$pre$i$i651 = 0, $$pre$i$i664 = 0, $$pre$i$i677 = 0, $$pre$i$i690 = 0, $$pre$i$i703 = 0, $$pre$i$i716 = 0, $$pre$i$i729 = 0, $$pre$i$i742 = 0, $$pre$i$i755 = 0, $$pre$i$i858 = 0, $$pre$i1002 = 0, $$pre$i1009 = 0, $$pre$i1016 = 0;
 var $$pre$i419 = 0, $$pre$i420 = 0, $$pre$i430 = 0, $$pre$i443 = 0, $$pre$i453 = 0, $$pre$i460 = 0, $$pre$i467 = 0, $$pre$i477 = 0, $$pre$i490 = 0, $$pre$i500 = 0, $$pre$i507 = 0, $$pre$i517 = 0, $$pre$i527 = 0, $$pre$i537 = 0, $$pre$i550 = 0, $$pre$i563 = 0, $$pre$i576 = 0, $$pre$i589 = 0, $$pre$i602 = 0, $$pre$i615 = 0;
 var $$pre$i628 = 0, $$pre$i641 = 0, $$pre$i654 = 0, $$pre$i667 = 0, $$pre$i680 = 0, $$pre$i693 = 0, $$pre$i706 = 0, $$pre$i719 = 0, $$pre$i732 = 0, $$pre$i745 = 0, $$pre$i758 = 0, $$pre$i768 = 0, $$pre$i789 = 0, $$pre$i807 = 0, $$pre$i825 = 0, $$pre$i851 = 0, $$pre$i861 = 0, $$pre$i871 = 0, $$pre$i897 = 0, $$pre$i904 = 0;
 var $$pre$i911 = 0, $$pre$i918 = 0, $$pre$i925 = 0, $$pre$i932 = 0, $$pre$i939 = 0, $$pre$i946 = 0, $$pre$i953 = 0, $$pre$i960 = 0, $$pre$i967 = 0, $$pre$i974 = 0, $$pre$i981 = 0, $$pre$i988 = 0, $$pre$i995 = 0, $$pre$phi$i434Z2D = 0, $$pre$phi$i447Z2D = 0, $$pre$phi$i481Z2D = 0, $$pre$phi$i494Z2D = 0, $$pre$phi$i521Z2D = 0, $$pre$phi$i541Z2D = 0, $$pre$phi$i554Z2D = 0;
 var $$pre$phi$i567Z2D = 0, $$pre$phi$i580Z2D = 0, $$pre$phi$i593Z2D = 0, $$pre$phi$i606Z2D = 0, $$pre$phi$i619Z2D = 0, $$pre$phi$i632Z2D = 0, $$pre$phi$i645Z2D = 0, $$pre$phi$i658Z2D = 0, $$pre$phi$i671Z2D = 0, $$pre$phi$i684Z2D = 0, $$pre$phi$i697Z2D = 0, $$pre$phi$i710Z2D = 0, $$pre$phi$i723Z2D = 0, $$pre$phi$i736Z2D = 0, $$pre$phi$i749Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi1255Z2D = 0, $$pre$phi1257Z2D = 0, $$pre$phi1259Z2D = 0, $$pre$phi1261Z2D = 0;
 var $$pre$phi1263Z2D = 0, $$pre$phi1265Z2D = 0, $$pre$phi1267Z2D = 0, $$pre$phi1269Z2D = 0, $$pre$phi1271Z2D = 0, $$pre$phi1273Z2D = 0, $$pre$phi1275Z2D = 0, $$pre$phi1277Z2D = 0, $$pre$phi1279Z2D = 0, $$pre$phi1281Z2D = 0, $$pre$phi1283Z2D = 0, $$pre$phi1285Z2D = 0, $$pre$phi1287Z2D = 0, $$pre$phi1289Z2D = 0, $$pre$phi1291Z2D = 0, $$pre$phi1293Z2D = 0, $$pre$phi1295Z2D = 0, $$pre$phi1297Z2D = 0, $$pre$phi1299Z2D = 0, $$pre$phi1301Z2D = 0;
 var $$pre$phi1303Z2D = 0, $$pre$phi1305Z2D = 0, $$pre$phi1306Z2D = 0, $$pre$phi1308Z2D = 0, $$pre$phi1310Z2D = 0, $$pre$phi1311Z2D = 0, $$pre$phi1313Z2D = 0, $$pre$phiZ2D = 0, $$pre1085 = 0, $$pre1087 = 0, $$pre1088 = 0, $$pre1090 = 0, $$pre1092 = 0, $$pre1093 = 0, $$pre1095 = 0, $$pre1097 = 0, $$pre1098 = 0, $$pre1099 = 0, $$pre1101 = 0, $$pre1103 = 0;
 var $$pre1104 = 0, $$pre1105 = 0, $$pre1107 = 0, $$pre1109 = 0, $$pre1110 = 0, $$pre1112 = 0, $$pre1114 = 0, $$pre1115 = 0, $$pre1116 = 0, $$pre1118 = 0, $$pre1120 = 0, $$pre1122 = 0, $$pre1124 = 0, $$pre1125 = 0, $$pre1127 = 0, $$pre1129 = 0, $$pre1131 = 0, $$pre1133 = 0, $$pre1135 = 0, $$pre1137 = 0;
 var $$pre1138 = 0, $$pre1140 = 0, $$pre1142 = 0, $$pre1143 = 0, $$pre1145 = 0, $$pre1147 = 0, $$pre1148 = 0, $$pre1149 = 0, $$pre1151 = 0, $$pre1153 = 0, $$pre1154 = 0, $$pre1155 = 0, $$pre1157 = 0, $$pre1159 = 0, $$pre1160 = 0, $$pre1161 = 0, $$pre1163 = 0, $$pre1165 = 0, $$pre1166 = 0, $$pre1167 = 0;
 var $$pre1169 = 0, $$pre1171 = 0, $$pre1172 = 0, $$pre1174 = 0, $$pre1176 = 0, $$pre1177 = 0, $$pre1178 = 0, $$pre1180 = 0, $$pre1182 = 0, $$pre1183 = 0, $$pre1184 = 0, $$pre1186 = 0, $$pre1188 = 0, $$pre1189 = 0, $$pre1190 = 0, $$pre1192 = 0, $$pre1194 = 0, $$pre1195 = 0, $$pre1196 = 0, $$pre1198 = 0;
 var $$pre1200 = 0, $$pre1201 = 0, $$pre1202 = 0, $$pre1203 = 0, $$pre1204 = 0, $$pre1206 = 0, $$pre1208 = 0, $$pre1209 = 0, $$pre1210 = 0, $$pre1212 = 0, $$pre1214 = 0, $$pre1215 = 0, $$pre1216 = 0, $$pre1218 = 0, $$pre1220 = 0, $$pre1221 = 0, $$pre1222 = 0, $$pre1224 = 0, $$pre1226 = 0, $$pre1227 = 0;
 var $$pre1229 = 0, $$pre1231 = 0, $$pre1232 = 0, $$pre1233 = 0, $$pre1235 = 0, $$pre1237 = 0, $$pre1238 = 0, $$pre1239 = 0, $$pre1241 = 0, $$pre1243 = 0, $$pre1244 = 0, $$pre1245 = 0, $$pre1246 = 0, $$pre1247 = 0, $$pre1248 = 0, $$pre1249 = 0, $$pre1250 = 0, $$pre1251 = 0, $$pre1252 = 0, $$pre1253 = 0;
 var $$pre1307 = 0, $$pre1309 = 0, $$pre4$i = 0, $$pre4$i432 = 0, $$pre4$i445 = 0, $$pre4$i479 = 0, $$pre4$i492 = 0, $$pre4$i519 = 0, $$pre4$i539 = 0, $$pre4$i552 = 0, $$pre4$i565 = 0, $$pre4$i578 = 0, $$pre4$i591 = 0, $$pre4$i604 = 0, $$pre4$i617 = 0, $$pre4$i630 = 0, $$pre4$i643 = 0, $$pre4$i656 = 0, $$pre4$i669 = 0, $$pre4$i682 = 0;
 var $$pre4$i695 = 0, $$pre4$i708 = 0, $$pre4$i721 = 0, $$pre4$i734 = 0, $$pre4$i747 = 0, $$pre4$i760 = 0, $$pre4$i863 = 0, $$sink = 0, $$sink1351 = 0, $$sink1352 = 0, $$sink1353 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0;
 var $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0;
 var $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0;
 var $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0;
 var $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0;
 var $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0;
 var $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0;
 var $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0;
 var $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0;
 var $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0;
 var $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0;
 var $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0;
 var $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0;
 var $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0;
 var $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0;
 var $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0;
 var $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0;
 var $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0;
 var $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0;
 var $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0;
 var $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0;
 var $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0;
 var $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0;
 var $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0;
 var $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0;
 var $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0;
 var $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0;
 var $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0;
 var $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0;
 var $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0;
 var $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0;
 var $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0;
 var $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0;
 var $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0;
 var $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0;
 var $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0;
 var $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0;
 var $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0;
 var $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0;
 var $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0;
 var $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0;
 var $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0;
 var $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0;
 var $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0;
 var $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0;
 var $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0;
 var $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0;
 var $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0;
 var $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0;
 var $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0;
 var $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0;
 var $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0;
 var $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0;
 var $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0;
 var $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0;
 var $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0;
 var $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0;
 var $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0;
 var $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0;
 var $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0;
 var $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0;
 var $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0;
 var $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0;
 var $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0;
 var $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0;
 var $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0;
 var $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0;
 var $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0;
 var $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0;
 var $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0;
 var $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0;
 var $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0;
 var $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0;
 var $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0;
 var $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond = 0, $exitcond1083 = 0, $exitcond1084 = 0, $ispos = 0, $neg = 0, $or$cond = 0, $or$cond1322 = 0, $or$cond16 = 0, $or$cond18 = 0, $or$cond20 = 0, $or$cond22 = 0, $or$cond24 = 0, $or$cond26 = 0;
 var $or$cond416 = 0, $phitmp = 0, $spec$select = 0, $spec$select$i = 0, $spec$select$i796 = 0, $spec$select$i814 = 0, $spec$select$i832 = 0, $spec$select24$i = 0, $spec$select24$i797 = 0, $spec$select24$i815 = 0, $spec$select24$i833 = 0, $spec$select25$i = 0, $spec$select25$i804 = 0, $spec$select25$i822 = 0, $spec$select25$i840 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1024|0;
 $5 = sp;
 $6 = ((($0)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $11 = ((($0)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($0)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($12>>>0)<($14>>>0);
  if ($15) {
   $16 = ((($12)) + 1|0);
   HEAP32[$11>>2] = $16;
   $17 = HEAP8[$12>>0]|0;
   $18 = $17&255;
   $$0$i = $18;
   label = 5;
  }
 } else {
  $9 = (_fgetc($7)|0);
  $10 = ($9|0)==(-1);
  if (!($10)) {
   $$0$i = $9;
   label = 5;
  }
 }
 do {
  if ((label|0) == 5) {
   $19 = ($$0$i|0)==(66);
   if ($19) {
    $20 = HEAP32[$6>>2]|0;
    $21 = ($20|0)==(0|0);
    if ($21) {
     $24 = ((($0)) + 20|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ((($0)) + 24|0);
     $27 = HEAP32[$26>>2]|0;
     $28 = ($25>>>0)<($27>>>0);
     if (!($28)) {
      break;
     }
     $29 = ((($25)) + 1|0);
     HEAP32[$24>>2] = $29;
     $30 = HEAP8[$25>>0]|0;
     $31 = $30&255;
     $$0$i417 = $31;
    } else {
     $22 = (_fgetc($20)|0);
     $23 = ($22|0)==(-1);
     if ($23) {
      break;
     } else {
      $$0$i417 = $22;
     }
    }
    $32 = ($$0$i417|0)==(77);
    if ($32) {
     $33 = HEAP32[$6>>2]|0;
     $34 = ($33|0)==(0|0);
     do {
      if ($34) {
       $35 = ((($0)) + 20|0);
       $36 = HEAP32[$35>>2]|0;
       $37 = ((($0)) + 24|0);
       $38 = HEAP32[$37>>2]|0;
       $39 = ($36>>>0)<($38>>>0);
       if ($39) {
        $40 = ((($36)) + 1|0);
        HEAP32[$35>>2] = $40;
        $$pre$phi$iZ2D = $35;$43 = $40;$44 = $38;
        label = 17;
       } else {
        $$pre$phi$iZ2D = $35;$43 = $36;$44 = $38;
        label = 17;
       }
      } else {
       (_fgetc($33)|0);
       $$pre$i$i = HEAP32[$6>>2]|0;
       $41 = ($$pre$i$i|0)==(0|0);
       if ($41) {
        $$phi$trans$insert$i = ((($0)) + 20|0);
        $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
        $$phi$trans$insert3$i = ((($0)) + 24|0);
        $$pre4$i = HEAP32[$$phi$trans$insert3$i>>2]|0;
        $$pre$phi$iZ2D = $$phi$trans$insert$i;$43 = $$pre$i;$44 = $$pre4$i;
        label = 17;
        break;
       }
       (_fgetc($$pre$i$i)|0);
       $$pre = HEAP32[$6>>2]|0;
       $46 = ($$pre|0)==(0|0);
       if ($46) {
        label = 20;
       } else {
        (_fgetc($$pre)|0);
        $$pre$i897 = HEAP32[$6>>2]|0;
        $53 = ($$pre$i897|0)==(0|0);
        if ($53) {
         $$phi$trans$insert = ((($0)) + 20|0);
         $$pre1085 = HEAP32[$$phi$trans$insert>>2]|0;
         $$phi$trans$insert1086 = ((($0)) + 24|0);
         $$pre1087 = HEAP32[$$phi$trans$insert1086>>2]|0;
         $$pre$phiZ2D = $$phi$trans$insert;$55 = $$pre1085;$56 = $$pre1087;
         label = 24;
         break;
        }
        (_fgetc($$pre$i897)|0);
        $$pre1088 = HEAP32[$6>>2]|0;
        $58 = ($$pre1088|0)==(0|0);
        if ($58) {
         label = 27;
        } else {
         (_fgetc($$pre1088)|0);
         $$pre$i419 = HEAP32[$6>>2]|0;
         $65 = ($$pre$i419|0)==(0|0);
         if ($65) {
          $$phi$trans$insert1089 = ((($0)) + 20|0);
          $$pre1090 = HEAP32[$$phi$trans$insert1089>>2]|0;
          $$phi$trans$insert1091 = ((($0)) + 24|0);
          $$pre1092 = HEAP32[$$phi$trans$insert1091>>2]|0;
          $$pre$phi1255Z2D = $$phi$trans$insert1089;$67 = $$pre1090;$68 = $$pre1092;
          label = 31;
          break;
         }
         (_fgetc($$pre$i419)|0);
         $$pre1093 = HEAP32[$6>>2]|0;
         $70 = ($$pre1093|0)==(0|0);
         if ($70) {
          label = 34;
         } else {
          (_fgetc($$pre1093)|0);
          $$pre$i420 = HEAP32[$6>>2]|0;
          $77 = ($$pre$i420|0)==(0|0);
          if ($77) {
           $$phi$trans$insert1094 = ((($0)) + 20|0);
           $$pre1095 = HEAP32[$$phi$trans$insert1094>>2]|0;
           $$phi$trans$insert1096 = ((($0)) + 24|0);
           $$pre1097 = HEAP32[$$phi$trans$insert1096>>2]|0;
           $$pre$phi1257Z2D = $$phi$trans$insert1094;$79 = $$pre1095;$80 = $$pre1097;
           label = 38;
           break;
          }
          (_fgetc($$pre$i420)|0);
          $$pre1098 = HEAP32[$6>>2]|0;
          $82 = ($$pre1098|0)==(0|0);
          if ($82) {
           label = 41;
          } else {
           $91 = (_fgetc($$pre1098)|0);
           $92 = ($91|0)==(-1);
           $93 = $92 ? 0 : $91;
           $$pre$i$i427 = HEAP32[$6>>2]|0;
           $94 = ($$pre$i$i427|0)==(0|0);
           if ($94) {
            $$phi$trans$insert$i429 = ((($0)) + 20|0);
            $$pre$i430 = HEAP32[$$phi$trans$insert$i429>>2]|0;
            $$phi$trans$insert3$i431 = ((($0)) + 24|0);
            $$pre4$i432 = HEAP32[$$phi$trans$insert3$i431>>2]|0;
            $$0$i6$i$i435 = $93;$$pre$phi$i434Z2D = $$phi$trans$insert$i429;$96 = $$pre$i430;$97 = $$pre4$i432;
            label = 45;
            break;
           }
           $103 = (_fgetc($$pre$i$i427)|0);
           $104 = ($103|0)==(-1);
           $$pre1099 = HEAP32[$6>>2]|0;
           $$op = $103 << 8;
           $105 = $104 ? 0 : $$op;
           $106 = (($105) + ($93))|0;
           $107 = ($$pre1099|0)==(0|0);
           if ($107) {
            $1598 = $106;
            label = 49;
           } else {
            $116 = (_fgetc($$pre1099)|0);
            $117 = ($116|0)==(-1);
            $118 = $117 ? 0 : $116;
            $$pre$i904 = HEAP32[$6>>2]|0;
            $119 = ($$pre$i904|0)==(0|0);
            if ($119) {
             $$phi$trans$insert1100 = ((($0)) + 20|0);
             $$pre1101 = HEAP32[$$phi$trans$insert1100>>2]|0;
             $$phi$trans$insert1102 = ((($0)) + 24|0);
             $$pre1103 = HEAP32[$$phi$trans$insert1102>>2]|0;
             $$0$i6$i906 = $118;$$pre$phi1259Z2D = $$phi$trans$insert1100;$121 = $$pre1101;$122 = $$pre1103;$130 = $106;
             label = 53;
             break;
            }
            $131 = (_fgetc($$pre$i904)|0);
            $132 = ($131|0)==(-1);
            $$pre1104 = HEAP32[$6>>2]|0;
            $$op1323 = $131 << 8;
            $133 = $132 ? 0 : $$op1323;
            $134 = (($133) + ($118))|0;
            $135 = $134 << 16;
            $136 = (($106) + ($135))|0;
            $137 = ($$pre1104|0)==(0|0);
            if ($137) {
             $1599 = $136;
             label = 57;
            } else {
             $146 = (_fgetc($$pre1104)|0);
             $147 = ($146|0)==(-1);
             $148 = $147 ? 0 : $146;
             $$pre$i$i440 = HEAP32[$6>>2]|0;
             $149 = ($$pre$i$i440|0)==(0|0);
             if ($149) {
              $$phi$trans$insert$i442 = ((($0)) + 20|0);
              $$pre$i443 = HEAP32[$$phi$trans$insert$i442>>2]|0;
              $$phi$trans$insert3$i444 = ((($0)) + 24|0);
              $$pre4$i445 = HEAP32[$$phi$trans$insert3$i444>>2]|0;
              $$0$i6$i$i448 = $148;$$pre$phi$i447Z2D = $$phi$trans$insert$i442;$151 = $$pre$i443;$152 = $$pre4$i445;$1600 = $136;
              label = 61;
              break;
             }
             $158 = (_fgetc($$pre$i$i440)|0);
             $159 = ($158|0)==(-1);
             $$pre1105 = HEAP32[$6>>2]|0;
             $$op1324 = $158 << 8;
             $160 = $159 ? 0 : $$op1324;
             $161 = (($160) + ($148))|0;
             $162 = ($$pre1105|0)==(0|0);
             if ($162) {
              $1601 = $161;$1602 = $136;
              label = 65;
              break;
             }
             $171 = (_fgetc($$pre1105)|0);
             $172 = ($171|0)==(-1);
             $173 = $172 ? 0 : $171;
             $$pre$i453 = HEAP32[$6>>2]|0;
             $174 = ($$pre$i453|0)==(0|0);
             if ($174) {
              $$phi$trans$insert1106 = ((($0)) + 20|0);
              $$pre1107 = HEAP32[$$phi$trans$insert1106>>2]|0;
              $$phi$trans$insert1108 = ((($0)) + 24|0);
              $$pre1109 = HEAP32[$$phi$trans$insert1108>>2]|0;
              $$0$i6$i455 = $173;$$pre$phi1261Z2D = $$phi$trans$insert1106;$1603 = $161;$1604 = $136;$179 = $$pre1107;$180 = $$pre1109;
              label = 70;
              break;
             } else {
              $175 = (_fgetc($$pre$i453)|0);
              $176 = ($175|0)==(-1);
              $177 = $176 ? 0 : $175;
              $$0$i3$i458 = $177;$$0$i5$i457 = $173;$188 = $161;$401 = $136;
              break;
             }
            }
           }
          }
         }
        }
       }
      }
     } while(0);
     if ((label|0) == 17) {
      $42 = ($43>>>0)<($44>>>0);
      if ($42) {
       $45 = ((($43)) + 1|0);
       HEAP32[$$pre$phi$iZ2D>>2] = $45;
       label = 20;
      } else {
       label = 20;
      }
     }
     if ((label|0) == 20) {
      $47 = ((($0)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ((($0)) + 24|0);
      $50 = HEAP32[$49>>2]|0;
      $51 = ($48>>>0)<($50>>>0);
      if ($51) {
       $52 = ((($48)) + 1|0);
       HEAP32[$47>>2] = $52;
       $$pre$phiZ2D = $47;$55 = $52;$56 = $50;
       label = 24;
      } else {
       $$pre$phiZ2D = $47;$55 = $48;$56 = $50;
       label = 24;
      }
     }
     if ((label|0) == 24) {
      $54 = ($55>>>0)<($56>>>0);
      if ($54) {
       $57 = ((($55)) + 1|0);
       HEAP32[$$pre$phiZ2D>>2] = $57;
       label = 27;
      } else {
       label = 27;
      }
     }
     if ((label|0) == 27) {
      $59 = ((($0)) + 20|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ((($0)) + 24|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($60>>>0)<($62>>>0);
      if ($63) {
       $64 = ((($60)) + 1|0);
       HEAP32[$59>>2] = $64;
       $$pre$phi1255Z2D = $59;$67 = $64;$68 = $62;
       label = 31;
      } else {
       $$pre$phi1255Z2D = $59;$67 = $60;$68 = $62;
       label = 31;
      }
     }
     if ((label|0) == 31) {
      $66 = ($67>>>0)<($68>>>0);
      if ($66) {
       $69 = ((($67)) + 1|0);
       HEAP32[$$pre$phi1255Z2D>>2] = $69;
       label = 34;
      } else {
       label = 34;
      }
     }
     if ((label|0) == 34) {
      $71 = ((($0)) + 20|0);
      $72 = HEAP32[$71>>2]|0;
      $73 = ((($0)) + 24|0);
      $74 = HEAP32[$73>>2]|0;
      $75 = ($72>>>0)<($74>>>0);
      if ($75) {
       $76 = ((($72)) + 1|0);
       HEAP32[$71>>2] = $76;
       $$pre$phi1257Z2D = $71;$79 = $76;$80 = $74;
       label = 38;
      } else {
       $$pre$phi1257Z2D = $71;$79 = $72;$80 = $74;
       label = 38;
      }
     }
     if ((label|0) == 38) {
      $78 = ($79>>>0)<($80>>>0);
      if ($78) {
       $81 = ((($79)) + 1|0);
       HEAP32[$$pre$phi1257Z2D>>2] = $81;
       label = 41;
      } else {
       label = 41;
      }
     }
     if ((label|0) == 41) {
      $83 = ((($0)) + 20|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = ((($0)) + 24|0);
      $86 = HEAP32[$85>>2]|0;
      $87 = ($84>>>0)<($86>>>0);
      if ($87) {
       $88 = ((($84)) + 1|0);
       HEAP32[$83>>2] = $88;
       $89 = HEAP8[$84>>0]|0;
       $90 = $89&255;
       $$0$i6$i$i435 = $90;$$pre$phi$i434Z2D = $83;$96 = $88;$97 = $86;
       label = 45;
      } else {
       $$0$i6$i$i435 = 0;$$pre$phi$i434Z2D = $83;$96 = $84;$97 = $86;
       label = 45;
      }
     }
     if ((label|0) == 45) {
      $95 = ($96>>>0)<($97>>>0);
      if ($95) {
       $98 = ((($96)) + 1|0);
       HEAP32[$$pre$phi$i434Z2D>>2] = $98;
       $99 = HEAP8[$96>>0]|0;
       $100 = $99&255;
       $$0$i3$i$i438$ph = $100;
      } else {
       $$0$i3$i$i438$ph = 0;
      }
      $101 = $$0$i3$i$i438$ph << 8;
      $102 = (($101) + ($$0$i6$i$i435))|0;
      $1598 = $102;
      label = 49;
     }
     if ((label|0) == 49) {
      $108 = ((($0)) + 20|0);
      $109 = HEAP32[$108>>2]|0;
      $110 = ((($0)) + 24|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = ($109>>>0)<($111>>>0);
      if ($112) {
       $113 = ((($109)) + 1|0);
       HEAP32[$108>>2] = $113;
       $114 = HEAP8[$109>>0]|0;
       $115 = $114&255;
       $$0$i6$i906 = $115;$$pre$phi1259Z2D = $108;$121 = $113;$122 = $111;$130 = $1598;
       label = 53;
      } else {
       $$0$i6$i906 = 0;$$pre$phi1259Z2D = $108;$121 = $109;$122 = $111;$130 = $1598;
       label = 53;
      }
     }
     if ((label|0) == 53) {
      $120 = ($121>>>0)<($122>>>0);
      if ($120) {
       $123 = ((($121)) + 1|0);
       HEAP32[$$pre$phi1259Z2D>>2] = $123;
       $124 = HEAP8[$121>>0]|0;
       $125 = $124&255;
       $$0$i3$i909$ph = $125;
      } else {
       $$0$i3$i909$ph = 0;
      }
      $126 = $$0$i3$i909$ph << 8;
      $127 = (($126) + ($$0$i6$i906))|0;
      $128 = $127 << 16;
      $129 = (($130) + ($128))|0;
      $1599 = $129;
      label = 57;
     }
     if ((label|0) == 57) {
      $138 = ((($0)) + 20|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ((($0)) + 24|0);
      $141 = HEAP32[$140>>2]|0;
      $142 = ($139>>>0)<($141>>>0);
      if ($142) {
       $143 = ((($139)) + 1|0);
       HEAP32[$138>>2] = $143;
       $144 = HEAP8[$139>>0]|0;
       $145 = $144&255;
       $$0$i6$i$i448 = $145;$$pre$phi$i447Z2D = $138;$151 = $143;$152 = $141;$1600 = $1599;
       label = 61;
      } else {
       $$0$i6$i$i448 = 0;$$pre$phi$i447Z2D = $138;$151 = $139;$152 = $141;$1600 = $1599;
       label = 61;
      }
     }
     if ((label|0) == 61) {
      $150 = ($151>>>0)<($152>>>0);
      if ($150) {
       $153 = ((($151)) + 1|0);
       HEAP32[$$pre$phi$i447Z2D>>2] = $153;
       $154 = HEAP8[$151>>0]|0;
       $155 = $154&255;
       $$0$i3$i$i451$ph = $155;
      } else {
       $$0$i3$i$i451$ph = 0;
      }
      $156 = $$0$i3$i$i451$ph << 8;
      $157 = (($156) + ($$0$i6$i$i448))|0;
      $1601 = $157;$1602 = $1600;
      label = 65;
     }
     if ((label|0) == 65) {
      $163 = ((($0)) + 20|0);
      $164 = HEAP32[$163>>2]|0;
      $165 = ((($0)) + 24|0);
      $166 = HEAP32[$165>>2]|0;
      $167 = ($164>>>0)<($166>>>0);
      if ($167) {
       $168 = ((($164)) + 1|0);
       HEAP32[$163>>2] = $168;
       $169 = HEAP8[$164>>0]|0;
       $170 = $169&255;
       $$0$i6$i455 = $170;$$pre$phi1261Z2D = $163;$1603 = $1601;$1604 = $1602;$179 = $168;$180 = $166;
       label = 70;
      } else {
       $$0$i6$i455 = 0;$$pre$phi1261Z2D = $163;$1603 = $1601;$1604 = $1602;$179 = $164;$180 = $166;
       label = 70;
      }
     }
     if ((label|0) == 70) {
      $178 = ($179>>>0)<($180>>>0);
      if ($178) {
       $181 = ((($179)) + 1|0);
       HEAP32[$$pre$phi1261Z2D>>2] = $181;
       $182 = HEAP8[$179>>0]|0;
       $183 = $182&255;
       $$0$i3$i458 = $183;$$0$i5$i457 = $$0$i6$i455;$188 = $1603;$401 = $1604;
      } else {
       $$0$i3$i458 = 0;$$0$i5$i457 = $$0$i6$i455;$188 = $1603;$401 = $1604;
      }
     }
     $184 = $$0$i3$i458 << 8;
     $185 = (($184) + ($$0$i5$i457))|0;
     $186 = $185 << 16;
     $187 = (($188) + ($186))|0;
     $189 = ($187|0)==(12);
     switch ($187|0) {
     case 12: case 40: case 56: case 108:  {
      break;
     }
     default: {
      HEAP32[36596] = 121572;
      $$2 = 0;
      STACKTOP = sp;return ($$2|0);
     }
     }
     HEAP32[36596] = 121604;
     $190 = HEAP32[$6>>2]|0;
     $191 = ($190|0)==(0|0);
     if ($189) {
      do {
       if ($191) {
        $192 = ((($0)) + 20|0);
        $193 = HEAP32[$192>>2]|0;
        $194 = ((($0)) + 24|0);
        $195 = HEAP32[$194>>2]|0;
        $196 = ($193>>>0)<($195>>>0);
        if ($196) {
         $197 = ((($193)) + 1|0);
         HEAP32[$192>>2] = $197;
         $198 = HEAP8[$193>>0]|0;
         $199 = $198&255;
         $$0$i6$i462 = $199;$$pre$phi1263Z2D = $192;$205 = $197;$206 = $195;
         label = 80;
        } else {
         $$0$i6$i462 = 0;$$pre$phi1263Z2D = $192;$205 = $193;$206 = $195;
         label = 80;
        }
       } else {
        $200 = (_fgetc($190)|0);
        $201 = ($200|0)==(-1);
        $202 = $201 ? 0 : $200;
        $$pre$i460 = HEAP32[$6>>2]|0;
        $203 = ($$pre$i460|0)==(0|0);
        if ($203) {
         $$phi$trans$insert1121 = ((($0)) + 20|0);
         $$pre1122 = HEAP32[$$phi$trans$insert1121>>2]|0;
         $$phi$trans$insert1123 = ((($0)) + 24|0);
         $$pre1124 = HEAP32[$$phi$trans$insert1123>>2]|0;
         $$0$i6$i462 = $202;$$pre$phi1263Z2D = $$phi$trans$insert1121;$205 = $$pre1122;$206 = $$pre1124;
         label = 80;
         break;
        }
        $212 = (_fgetc($$pre$i460)|0);
        $213 = ($212|0)==(-1);
        $$pre1125 = HEAP32[$6>>2]|0;
        $$op1342 = $212 << 8;
        $214 = $213 ? 0 : $$op1342;
        $215 = (($214) + ($202))|0;
        HEAP32[$0>>2] = $215;
        $216 = ($$pre1125|0)==(0|0);
        if ($216) {
         label = 84;
        } else {
         $225 = (_fgetc($$pre1125)|0);
         $226 = ($225|0)==(-1);
         $227 = $226 ? 0 : $225;
         $$pre$i467 = HEAP32[$6>>2]|0;
         $228 = ($$pre$i467|0)==(0|0);
         if ($228) {
          $$phi$trans$insert1126 = ((($0)) + 20|0);
          $$pre1127 = HEAP32[$$phi$trans$insert1126>>2]|0;
          $$phi$trans$insert1128 = ((($0)) + 24|0);
          $$pre1129 = HEAP32[$$phi$trans$insert1128>>2]|0;
          $$0$i6$i469 = $227;$$pre$phi1265Z2D = $$phi$trans$insert1126;$233 = $$pre1127;$234 = $$pre1129;
          label = 89;
          break;
         } else {
          $229 = (_fgetc($$pre$i467)|0);
          $230 = ($229|0)==(-1);
          $231 = $230 ? 0 : $229;
          $$0$i3$i472 = $231;$$0$i5$i471 = $227;
          break;
         }
        }
       }
      } while(0);
      if ((label|0) == 80) {
       $204 = ($205>>>0)<($206>>>0);
       if ($204) {
        $207 = ((($205)) + 1|0);
        HEAP32[$$pre$phi1263Z2D>>2] = $207;
        $208 = HEAP8[$205>>0]|0;
        $209 = $208&255;
        $$0$i3$i465$ph = $209;
       } else {
        $$0$i3$i465$ph = 0;
       }
       $210 = $$0$i3$i465$ph << 8;
       $211 = (($210) + ($$0$i6$i462))|0;
       HEAP32[$0>>2] = $211;
       label = 84;
      }
      if ((label|0) == 84) {
       $217 = ((($0)) + 20|0);
       $218 = HEAP32[$217>>2]|0;
       $219 = ((($0)) + 24|0);
       $220 = HEAP32[$219>>2]|0;
       $221 = ($218>>>0)<($220>>>0);
       if ($221) {
        $222 = ((($218)) + 1|0);
        HEAP32[$217>>2] = $222;
        $223 = HEAP8[$218>>0]|0;
        $224 = $223&255;
        $$0$i6$i469 = $224;$$pre$phi1265Z2D = $217;$233 = $222;$234 = $220;
        label = 89;
       } else {
        $$0$i6$i469 = 0;$$pre$phi1265Z2D = $217;$233 = $218;$234 = $220;
        label = 89;
       }
      }
      if ((label|0) == 89) {
       $232 = ($233>>>0)<($234>>>0);
       if ($232) {
        $235 = ((($233)) + 1|0);
        HEAP32[$$pre$phi1265Z2D>>2] = $235;
        $236 = HEAP8[$233>>0]|0;
        $237 = $236&255;
        $$0$i3$i472 = $237;$$0$i5$i471 = $$0$i6$i469;
       } else {
        $$0$i3$i472 = 0;$$0$i5$i471 = $$0$i6$i469;
       }
      }
      $238 = $$0$i3$i472 << 8;
      $$sink1351 = $238;$$sink1352 = $$0$i5$i471;
     } else {
      do {
       if ($191) {
        $239 = ((($0)) + 20|0);
        $240 = HEAP32[$239>>2]|0;
        $241 = ((($0)) + 24|0);
        $242 = HEAP32[$241>>2]|0;
        $243 = ($240>>>0)<($242>>>0);
        if ($243) {
         $244 = ((($240)) + 1|0);
         HEAP32[$239>>2] = $244;
         $245 = HEAP8[$240>>0]|0;
         $246 = $245&255;
         $$0$i6$i$i482 = $246;$$pre$phi$i481Z2D = $239;$252 = $244;$253 = $242;
         label = 97;
        } else {
         $$0$i6$i$i482 = 0;$$pre$phi$i481Z2D = $239;$252 = $240;$253 = $242;
         label = 97;
        }
       } else {
        $247 = (_fgetc($190)|0);
        $248 = ($247|0)==(-1);
        $249 = $248 ? 0 : $247;
        $$pre$i$i474 = HEAP32[$6>>2]|0;
        $250 = ($$pre$i$i474|0)==(0|0);
        if ($250) {
         $$phi$trans$insert$i476 = ((($0)) + 20|0);
         $$pre$i477 = HEAP32[$$phi$trans$insert$i476>>2]|0;
         $$phi$trans$insert3$i478 = ((($0)) + 24|0);
         $$pre4$i479 = HEAP32[$$phi$trans$insert3$i478>>2]|0;
         $$0$i6$i$i482 = $249;$$pre$phi$i481Z2D = $$phi$trans$insert$i476;$252 = $$pre$i477;$253 = $$pre4$i479;
         label = 97;
         break;
        }
        $259 = (_fgetc($$pre$i$i474)|0);
        $260 = ($259|0)==(-1);
        $$pre1110 = HEAP32[$6>>2]|0;
        $$op1325 = $259 << 8;
        $261 = $260 ? 0 : $$op1325;
        $262 = (($261) + ($249))|0;
        $263 = ($$pre1110|0)==(0|0);
        if ($263) {
         $1605 = $262;
         label = 101;
        } else {
         $272 = (_fgetc($$pre1110)|0);
         $273 = ($272|0)==(-1);
         $274 = $273 ? 0 : $272;
         $$pre$i911 = HEAP32[$6>>2]|0;
         $275 = ($$pre$i911|0)==(0|0);
         if ($275) {
          $$phi$trans$insert1111 = ((($0)) + 20|0);
          $$pre1112 = HEAP32[$$phi$trans$insert1111>>2]|0;
          $$phi$trans$insert1113 = ((($0)) + 24|0);
          $$pre1114 = HEAP32[$$phi$trans$insert1113>>2]|0;
          $$0$i6$i913 = $274;$$pre$phi1311Z2D = $$phi$trans$insert1111;$1606 = $262;$280 = $$pre1112;$281 = $$pre1114;
          label = 106;
          break;
         } else {
          $276 = (_fgetc($$pre$i911)|0);
          $277 = ($276|0)==(-1);
          $278 = $277 ? 0 : $276;
          $$pre1115 = HEAP32[$6>>2]|0;
          $$0$i3$i916 = $278;$$0$i5$i915 = $274;$289 = $262;$291 = $$pre1115;
          break;
         }
        }
       }
      } while(0);
      if ((label|0) == 97) {
       $251 = ($252>>>0)<($253>>>0);
       if ($251) {
        $254 = ((($252)) + 1|0);
        HEAP32[$$pre$phi$i481Z2D>>2] = $254;
        $255 = HEAP8[$252>>0]|0;
        $256 = $255&255;
        $$0$i3$i$i485$ph = $256;
       } else {
        $$0$i3$i$i485$ph = 0;
       }
       $257 = $$0$i3$i$i485$ph << 8;
       $258 = (($257) + ($$0$i6$i$i482))|0;
       $1605 = $258;
       label = 101;
      }
      if ((label|0) == 101) {
       $264 = ((($0)) + 20|0);
       $265 = HEAP32[$264>>2]|0;
       $266 = ((($0)) + 24|0);
       $267 = HEAP32[$266>>2]|0;
       $268 = ($265>>>0)<($267>>>0);
       if ($268) {
        $269 = ((($265)) + 1|0);
        HEAP32[$264>>2] = $269;
        $270 = HEAP8[$265>>0]|0;
        $271 = $270&255;
        $$0$i6$i913 = $271;$$pre$phi1311Z2D = $264;$1606 = $1605;$280 = $269;$281 = $267;
        label = 106;
       } else {
        $$0$i6$i913 = 0;$$pre$phi1311Z2D = $264;$1606 = $1605;$280 = $265;$281 = $267;
        label = 106;
       }
      }
      if ((label|0) == 106) {
       $279 = ($280>>>0)<($281>>>0);
       if ($279) {
        $282 = ((($280)) + 1|0);
        HEAP32[$$pre$phi1311Z2D>>2] = $282;
        $283 = HEAP8[$280>>0]|0;
        $284 = $283&255;
        $$0$i3$i916 = $284;$$0$i5$i915 = $$0$i6$i913;$289 = $1606;$291 = 0;
       } else {
        $$0$i3$i916 = 0;$$0$i5$i915 = $$0$i6$i913;$289 = $1606;$291 = 0;
       }
      }
      $285 = $$0$i3$i916 << 8;
      $286 = (($285) + ($$0$i5$i915))|0;
      $287 = $286 << 16;
      $288 = (($289) + ($287))|0;
      HEAP32[$0>>2] = $288;
      $290 = ($291|0)==(0|0);
      do {
       if ($290) {
        $292 = ((($0)) + 20|0);
        $293 = HEAP32[$292>>2]|0;
        $294 = ((($0)) + 24|0);
        $295 = HEAP32[$294>>2]|0;
        $296 = ($293>>>0)<($295>>>0);
        if ($296) {
         $297 = ((($293)) + 1|0);
         HEAP32[$292>>2] = $297;
         $298 = HEAP8[$293>>0]|0;
         $299 = $298&255;
         $$0$i6$i$i495 = $299;$$pre$phi$i494Z2D = $292;$305 = $297;$306 = $295;
         label = 113;
        } else {
         $$0$i6$i$i495 = 0;$$pre$phi$i494Z2D = $292;$305 = $293;$306 = $295;
         label = 113;
        }
       } else {
        $300 = (_fgetc($291)|0);
        $301 = ($300|0)==(-1);
        $302 = $301 ? 0 : $300;
        $$pre$i$i487 = HEAP32[$6>>2]|0;
        $303 = ($$pre$i$i487|0)==(0|0);
        if ($303) {
         $$phi$trans$insert$i489 = ((($0)) + 20|0);
         $$pre$i490 = HEAP32[$$phi$trans$insert$i489>>2]|0;
         $$phi$trans$insert3$i491 = ((($0)) + 24|0);
         $$pre4$i492 = HEAP32[$$phi$trans$insert3$i491>>2]|0;
         $$0$i6$i$i495 = $302;$$pre$phi$i494Z2D = $$phi$trans$insert$i489;$305 = $$pre$i490;$306 = $$pre4$i492;
         label = 113;
         break;
        }
        $312 = (_fgetc($$pre$i$i487)|0);
        $313 = ($312|0)==(-1);
        $$pre1116 = HEAP32[$6>>2]|0;
        $$op1326 = $312 << 8;
        $314 = $313 ? 0 : $$op1326;
        $315 = (($314) + ($302))|0;
        $316 = ($$pre1116|0)==(0|0);
        if ($316) {
         $1607 = $315;
         label = 117;
        } else {
         $325 = (_fgetc($$pre1116)|0);
         $326 = ($325|0)==(-1);
         $327 = $326 ? 0 : $325;
         $$pre$i918 = HEAP32[$6>>2]|0;
         $328 = ($$pre$i918|0)==(0|0);
         if ($328) {
          $$phi$trans$insert1117 = ((($0)) + 20|0);
          $$pre1118 = HEAP32[$$phi$trans$insert1117>>2]|0;
          $$phi$trans$insert1119 = ((($0)) + 24|0);
          $$pre1120 = HEAP32[$$phi$trans$insert1119>>2]|0;
          $$0$i6$i920 = $327;$$pre$phi1313Z2D = $$phi$trans$insert1117;$1608 = $315;$333 = $$pre1118;$334 = $$pre1120;
          label = 122;
          break;
         } else {
          $329 = (_fgetc($$pre$i918)|0);
          $330 = ($329|0)==(-1);
          $331 = $330 ? 0 : $329;
          $$0$i3$i923 = $331;$$0$i5$i922 = $327;$1609 = $315;
          break;
         }
        }
       }
      } while(0);
      if ((label|0) == 113) {
       $304 = ($305>>>0)<($306>>>0);
       if ($304) {
        $307 = ((($305)) + 1|0);
        HEAP32[$$pre$phi$i494Z2D>>2] = $307;
        $308 = HEAP8[$305>>0]|0;
        $309 = $308&255;
        $$0$i3$i$i498$ph = $309;
       } else {
        $$0$i3$i$i498$ph = 0;
       }
       $310 = $$0$i3$i$i498$ph << 8;
       $311 = (($310) + ($$0$i6$i$i495))|0;
       $1607 = $311;
       label = 117;
      }
      if ((label|0) == 117) {
       $317 = ((($0)) + 20|0);
       $318 = HEAP32[$317>>2]|0;
       $319 = ((($0)) + 24|0);
       $320 = HEAP32[$319>>2]|0;
       $321 = ($318>>>0)<($320>>>0);
       if ($321) {
        $322 = ((($318)) + 1|0);
        HEAP32[$317>>2] = $322;
        $323 = HEAP8[$318>>0]|0;
        $324 = $323&255;
        $$0$i6$i920 = $324;$$pre$phi1313Z2D = $317;$1608 = $1607;$333 = $322;$334 = $320;
        label = 122;
       } else {
        $$0$i6$i920 = 0;$$pre$phi1313Z2D = $317;$1608 = $1607;$333 = $318;$334 = $320;
        label = 122;
       }
      }
      if ((label|0) == 122) {
       $332 = ($333>>>0)<($334>>>0);
       if ($332) {
        $335 = ((($333)) + 1|0);
        HEAP32[$$pre$phi1313Z2D>>2] = $335;
        $336 = HEAP8[$333>>0]|0;
        $337 = $336&255;
        $$0$i3$i923 = $337;$$0$i5$i922 = $$0$i6$i920;$1609 = $1608;
       } else {
        $$0$i3$i923 = 0;$$0$i5$i922 = $$0$i6$i920;$1609 = $1608;
       }
      }
      $338 = $$0$i3$i923 << 8;
      $339 = (($338) + ($$0$i5$i922))|0;
      $340 = $339 << 16;
      $$sink1351 = $1609;$$sink1352 = $340;
     }
     $341 = (($$sink1351) + ($$sink1352))|0;
     $342 = ((($0)) + 4|0);
     HEAP32[$342>>2] = $341;
     $343 = HEAP32[$6>>2]|0;
     $344 = ($343|0)==(0|0);
     do {
      if ($344) {
       $345 = ((($0)) + 20|0);
       $346 = HEAP32[$345>>2]|0;
       $347 = ((($0)) + 24|0);
       $348 = HEAP32[$347>>2]|0;
       $349 = ($346>>>0)<($348>>>0);
       if ($349) {
        $350 = ((($346)) + 1|0);
        HEAP32[$345>>2] = $350;
        $351 = HEAP8[$346>>0]|0;
        $352 = $351&255;
        $$0$i6$i502 = $352;$$pre$phi1267Z2D = $345;$361 = $350;$362 = $348;
        label = 131;
       } else {
        $$0$i6$i502 = 0;$$pre$phi1267Z2D = $345;$361 = $346;$362 = $348;
        label = 131;
       }
      } else {
       $353 = (_fgetc($343)|0);
       $354 = ($353|0)==(-1);
       $355 = $354 ? 0 : $353;
       $$pre$i500 = HEAP32[$6>>2]|0;
       $356 = ($$pre$i500|0)==(0|0);
       if ($356) {
        $$phi$trans$insert1130 = ((($0)) + 20|0);
        $$pre1131 = HEAP32[$$phi$trans$insert1130>>2]|0;
        $$phi$trans$insert1132 = ((($0)) + 24|0);
        $$pre1133 = HEAP32[$$phi$trans$insert1132>>2]|0;
        $$0$i6$i502 = $355;$$pre$phi1267Z2D = $$phi$trans$insert1130;$361 = $$pre1131;$362 = $$pre1133;
        label = 131;
        break;
       } else {
        $357 = (_fgetc($$pre$i500)|0);
        $358 = ($357|0)==(-1);
        $359 = $358 ? 0 : $357;
        $$0$i3$i505 = $359;$$0$i5$i504 = $355;
        break;
       }
      }
     } while(0);
     if ((label|0) == 131) {
      $360 = ($361>>>0)<($362>>>0);
      if ($360) {
       $363 = ((($361)) + 1|0);
       HEAP32[$$pre$phi1267Z2D>>2] = $363;
       $364 = HEAP8[$361>>0]|0;
       $365 = $364&255;
       $$0$i3$i505 = $365;$$0$i5$i504 = $$0$i6$i502;
      } else {
       $$0$i3$i505 = 0;$$0$i5$i504 = $$0$i6$i502;
      }
     }
     $366 = $$0$i3$i505 << 8;
     $367 = (($366) + ($$0$i5$i504))|0;
     $368 = ($367|0)==(1);
     if (!($368)) {
      $$2 = 0;
      STACKTOP = sp;return ($$2|0);
     }
     $369 = HEAP32[$6>>2]|0;
     $370 = ($369|0)==(0|0);
     do {
      if ($370) {
       $371 = ((($0)) + 20|0);
       $372 = HEAP32[$371>>2]|0;
       $373 = ((($0)) + 24|0);
       $374 = HEAP32[$373>>2]|0;
       $375 = ($372>>>0)<($374>>>0);
       if ($375) {
        $376 = ((($372)) + 1|0);
        HEAP32[$371>>2] = $376;
        $377 = HEAP8[$372>>0]|0;
        $378 = $377&255;
        $$0$i6$i509 = $378;$$pre$phi1269Z2D = $371;$387 = $376;$388 = $374;
        label = 140;
       } else {
        $$0$i6$i509 = 0;$$pre$phi1269Z2D = $371;$387 = $372;$388 = $374;
        label = 140;
       }
      } else {
       $379 = (_fgetc($369)|0);
       $380 = ($379|0)==(-1);
       $381 = $380 ? 0 : $379;
       $$pre$i507 = HEAP32[$6>>2]|0;
       $382 = ($$pre$i507|0)==(0|0);
       if ($382) {
        $$phi$trans$insert1134 = ((($0)) + 20|0);
        $$pre1135 = HEAP32[$$phi$trans$insert1134>>2]|0;
        $$phi$trans$insert1136 = ((($0)) + 24|0);
        $$pre1137 = HEAP32[$$phi$trans$insert1136>>2]|0;
        $$0$i6$i509 = $381;$$pre$phi1269Z2D = $$phi$trans$insert1134;$387 = $$pre1135;$388 = $$pre1137;
        label = 140;
        break;
       } else {
        $383 = (_fgetc($$pre$i507)|0);
        $384 = ($383|0)==(-1);
        $385 = $384 ? 0 : $383;
        $$0$i3$i512 = $385;$$0$i5$i511 = $381;
        break;
       }
      }
     } while(0);
     if ((label|0) == 140) {
      $386 = ($387>>>0)<($388>>>0);
      if ($386) {
       $389 = ((($387)) + 1|0);
       HEAP32[$$pre$phi1269Z2D>>2] = $389;
       $390 = HEAP8[$387>>0]|0;
       $391 = $390&255;
       $$0$i3$i512 = $391;$$0$i5$i511 = $$0$i6$i509;
      } else {
       $$0$i3$i512 = 0;$$0$i5$i511 = $$0$i6$i509;
      }
     }
     $392 = $$0$i3$i512 << 8;
     $393 = (($392) + ($$0$i5$i511))|0;
     $394 = ($393|0)==(1);
     if ($394) {
      HEAP32[36596] = 121612;
      $$2 = 0;
      STACKTOP = sp;return ($$2|0);
     }
     $395 = ((($0)) + 4|0);
     $396 = HEAP32[$395>>2]|0;
     $397 = ($396|0)>(0);
     $ispos = ($396|0)>(-1);
     $neg = (0 - ($396))|0;
     $398 = $ispos ? $396 : $neg;
     HEAP32[$395>>2] = $398;
     L207: do {
      if ($189) {
       $399 = ($393|0)<(24);
       if ($399) {
        $400 = (($401) + -38)|0;
        $402 = (($400|0) / 3)&-1;
        $$0398 = $402;$$1368 = 0;$$1370 = 0;$$1372 = 0;$$1374 = 0;
       } else {
        $$0398 = 0;$$1368 = 0;$$1370 = 0;$$1372 = 0;$$1374 = 0;
       }
      } else {
       $403 = HEAP32[$6>>2]|0;
       $404 = ($403|0)==(0|0);
       do {
        if ($404) {
         $405 = ((($0)) + 20|0);
         $406 = HEAP32[$405>>2]|0;
         $407 = ((($0)) + 24|0);
         $408 = HEAP32[$407>>2]|0;
         $409 = ($406>>>0)<($408>>>0);
         if ($409) {
          $410 = ((($406)) + 1|0);
          HEAP32[$405>>2] = $410;
          $411 = HEAP8[$406>>0]|0;
          $412 = $411&255;
          $$0$i6$i$i522 = $412;$$pre$phi$i521Z2D = $405;$418 = $410;$419 = $408;
          label = 152;
         } else {
          $$0$i6$i$i522 = 0;$$pre$phi$i521Z2D = $405;$418 = $406;$419 = $408;
          label = 152;
         }
        } else {
         $413 = (_fgetc($403)|0);
         $414 = ($413|0)==(-1);
         $415 = $414 ? 0 : $413;
         $$pre$i$i514 = HEAP32[$6>>2]|0;
         $416 = ($$pre$i$i514|0)==(0|0);
         if ($416) {
          $$phi$trans$insert$i516 = ((($0)) + 20|0);
          $$pre$i517 = HEAP32[$$phi$trans$insert$i516>>2]|0;
          $$phi$trans$insert3$i518 = ((($0)) + 24|0);
          $$pre4$i519 = HEAP32[$$phi$trans$insert3$i518>>2]|0;
          $$0$i6$i$i522 = $415;$$pre$phi$i521Z2D = $$phi$trans$insert$i516;$418 = $$pre$i517;$419 = $$pre4$i519;
          label = 152;
          break;
         }
         $425 = (_fgetc($$pre$i$i514)|0);
         $426 = ($425|0)==(-1);
         $$pre1138 = HEAP32[$6>>2]|0;
         $$op1327 = $425 << 8;
         $427 = $426 ? 0 : $$op1327;
         $428 = (($427) + ($415))|0;
         $429 = ($$pre1138|0)==(0|0);
         if ($429) {
          $1610 = $428;
          label = 156;
         } else {
          $438 = (_fgetc($$pre1138)|0);
          $439 = ($438|0)==(-1);
          $440 = $439 ? 0 : $438;
          $$pre$i527 = HEAP32[$6>>2]|0;
          $441 = ($$pre$i527|0)==(0|0);
          if ($441) {
           $$phi$trans$insert1139 = ((($0)) + 20|0);
           $$pre1140 = HEAP32[$$phi$trans$insert1139>>2]|0;
           $$phi$trans$insert1141 = ((($0)) + 24|0);
           $$pre1142 = HEAP32[$$phi$trans$insert1141>>2]|0;
           $$0$i6$i529 = $440;$$pre$phi1271Z2D = $$phi$trans$insert1139;$1611 = $428;$446 = $$pre1140;$447 = $$pre1142;
           label = 161;
           break;
          } else {
           $442 = (_fgetc($$pre$i527)|0);
           $443 = ($442|0)==(-1);
           $444 = $443 ? 0 : $442;
           $$0$i3$i532 = $444;$$0$i5$i531 = $440;$455 = $428;
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 152) {
        $417 = ($418>>>0)<($419>>>0);
        if ($417) {
         $420 = ((($418)) + 1|0);
         HEAP32[$$pre$phi$i521Z2D>>2] = $420;
         $421 = HEAP8[$418>>0]|0;
         $422 = $421&255;
         $$0$i3$i$i525$ph = $422;
        } else {
         $$0$i3$i$i525$ph = 0;
        }
        $423 = $$0$i3$i$i525$ph << 8;
        $424 = (($423) + ($$0$i6$i$i522))|0;
        $1610 = $424;
        label = 156;
       }
       if ((label|0) == 156) {
        $430 = ((($0)) + 20|0);
        $431 = HEAP32[$430>>2]|0;
        $432 = ((($0)) + 24|0);
        $433 = HEAP32[$432>>2]|0;
        $434 = ($431>>>0)<($433>>>0);
        if ($434) {
         $435 = ((($431)) + 1|0);
         HEAP32[$430>>2] = $435;
         $436 = HEAP8[$431>>0]|0;
         $437 = $436&255;
         $$0$i6$i529 = $437;$$pre$phi1271Z2D = $430;$1611 = $1610;$446 = $435;$447 = $433;
         label = 161;
        } else {
         $$0$i6$i529 = 0;$$pre$phi1271Z2D = $430;$1611 = $1610;$446 = $431;$447 = $433;
         label = 161;
        }
       }
       if ((label|0) == 161) {
        $445 = ($446>>>0)<($447>>>0);
        if ($445) {
         $448 = ((($446)) + 1|0);
         HEAP32[$$pre$phi1271Z2D>>2] = $448;
         $449 = HEAP8[$446>>0]|0;
         $450 = $449&255;
         $$0$i3$i532 = $450;$$0$i5$i531 = $$0$i6$i529;$455 = $1611;
        } else {
         $$0$i3$i532 = 0;$$0$i5$i531 = $$0$i6$i529;$455 = $1611;
        }
       }
       $451 = $$0$i3$i532 << 8;
       $452 = (($451) + ($$0$i5$i531))|0;
       $453 = $452 << 16;
       $454 = (($455) + ($453))|0;
       $456 = (($454) + -1)|0;
       $457 = ($456>>>0)<(2);
       if ($457) {
        HEAP32[36596] = 121642;
        $$2 = 0;
        STACKTOP = sp;return ($$2|0);
       }
       $458 = HEAP32[$6>>2]|0;
       $459 = ($458|0)==(0|0);
       do {
        if ($459) {
         $460 = ((($0)) + 20|0);
         $461 = HEAP32[$460>>2]|0;
         $462 = ((($0)) + 24|0);
         $463 = HEAP32[$462>>2]|0;
         $464 = ($461>>>0)<($463>>>0);
         if ($464) {
          $465 = ((($461)) + 1|0);
          HEAP32[$460>>2] = $465;
          $$pre$phi$i541Z2D = $460;$468 = $465;$469 = $463;
          label = 170;
         } else {
          $$pre$phi$i541Z2D = $460;$468 = $461;$469 = $463;
          label = 170;
         }
        } else {
         (_fgetc($458)|0);
         $$pre$i$i534 = HEAP32[$6>>2]|0;
         $466 = ($$pre$i$i534|0)==(0|0);
         if ($466) {
          $$phi$trans$insert$i536 = ((($0)) + 20|0);
          $$pre$i537 = HEAP32[$$phi$trans$insert$i536>>2]|0;
          $$phi$trans$insert3$i538 = ((($0)) + 24|0);
          $$pre4$i539 = HEAP32[$$phi$trans$insert3$i538>>2]|0;
          $$pre$phi$i541Z2D = $$phi$trans$insert$i536;$468 = $$pre$i537;$469 = $$pre4$i539;
          label = 170;
          break;
         }
         (_fgetc($$pre$i$i534)|0);
         $$pre1143 = HEAP32[$6>>2]|0;
         $471 = ($$pre1143|0)==(0|0);
         if ($471) {
          label = 173;
         } else {
          (_fgetc($$pre1143)|0);
          $$pre$i925 = HEAP32[$6>>2]|0;
          $478 = ($$pre$i925|0)==(0|0);
          if ($478) {
           $$phi$trans$insert1144 = ((($0)) + 20|0);
           $$pre1145 = HEAP32[$$phi$trans$insert1144>>2]|0;
           $$phi$trans$insert1146 = ((($0)) + 24|0);
           $$pre1147 = HEAP32[$$phi$trans$insert1146>>2]|0;
           $$pre$phi1273Z2D = $$phi$trans$insert1144;$480 = $$pre1145;$481 = $$pre1147;
           label = 177;
           break;
          }
          (_fgetc($$pre$i925)|0);
          $$pre1148 = HEAP32[$6>>2]|0;
          $483 = ($$pre1148|0)==(0|0);
          if ($483) {
           label = 180;
           break;
          }
          (_fgetc($$pre1148)|0);
          $$pre$i$i547 = HEAP32[$6>>2]|0;
          $490 = ($$pre$i$i547|0)==(0|0);
          if ($490) {
           $$phi$trans$insert$i549 = ((($0)) + 20|0);
           $$pre$i550 = HEAP32[$$phi$trans$insert$i549>>2]|0;
           $$phi$trans$insert3$i551 = ((($0)) + 24|0);
           $$pre4$i552 = HEAP32[$$phi$trans$insert3$i551>>2]|0;
           $$pre$phi$i554Z2D = $$phi$trans$insert$i549;$492 = $$pre$i550;$493 = $$pre4$i552;
           label = 184;
           break;
          }
          (_fgetc($$pre$i$i547)|0);
          $$pre1149 = HEAP32[$6>>2]|0;
          $495 = ($$pre1149|0)==(0|0);
          if ($495) {
           label = 187;
           break;
          }
          (_fgetc($$pre1149)|0);
          $$pre$i932 = HEAP32[$6>>2]|0;
          $502 = ($$pre$i932|0)==(0|0);
          if ($502) {
           $$phi$trans$insert1150 = ((($0)) + 20|0);
           $$pre1151 = HEAP32[$$phi$trans$insert1150>>2]|0;
           $$phi$trans$insert1152 = ((($0)) + 24|0);
           $$pre1153 = HEAP32[$$phi$trans$insert1152>>2]|0;
           $$pre$phi1275Z2D = $$phi$trans$insert1150;$504 = $$pre1151;$505 = $$pre1153;
           label = 191;
           break;
          }
          (_fgetc($$pre$i932)|0);
          $$pre1154 = HEAP32[$6>>2]|0;
          $507 = ($$pre1154|0)==(0|0);
          if ($507) {
           label = 194;
           break;
          }
          (_fgetc($$pre1154)|0);
          $$pre$i$i560 = HEAP32[$6>>2]|0;
          $514 = ($$pre$i$i560|0)==(0|0);
          if ($514) {
           $$phi$trans$insert$i562 = ((($0)) + 20|0);
           $$pre$i563 = HEAP32[$$phi$trans$insert$i562>>2]|0;
           $$phi$trans$insert3$i564 = ((($0)) + 24|0);
           $$pre4$i565 = HEAP32[$$phi$trans$insert3$i564>>2]|0;
           $$pre$phi$i567Z2D = $$phi$trans$insert$i562;$516 = $$pre$i563;$517 = $$pre4$i565;
           label = 198;
           break;
          }
          (_fgetc($$pre$i$i560)|0);
          $$pre1155 = HEAP32[$6>>2]|0;
          $519 = ($$pre1155|0)==(0|0);
          if ($519) {
           label = 201;
           break;
          }
          (_fgetc($$pre1155)|0);
          $$pre$i939 = HEAP32[$6>>2]|0;
          $526 = ($$pre$i939|0)==(0|0);
          if ($526) {
           $$phi$trans$insert1156 = ((($0)) + 20|0);
           $$pre1157 = HEAP32[$$phi$trans$insert1156>>2]|0;
           $$phi$trans$insert1158 = ((($0)) + 24|0);
           $$pre1159 = HEAP32[$$phi$trans$insert1158>>2]|0;
           $$pre$phi1277Z2D = $$phi$trans$insert1156;$528 = $$pre1157;$529 = $$pre1159;
           label = 205;
           break;
          }
          (_fgetc($$pre$i939)|0);
          $$pre1160 = HEAP32[$6>>2]|0;
          $531 = ($$pre1160|0)==(0|0);
          if ($531) {
           label = 208;
           break;
          }
          (_fgetc($$pre1160)|0);
          $$pre$i$i573 = HEAP32[$6>>2]|0;
          $538 = ($$pre$i$i573|0)==(0|0);
          if ($538) {
           $$phi$trans$insert$i575 = ((($0)) + 20|0);
           $$pre$i576 = HEAP32[$$phi$trans$insert$i575>>2]|0;
           $$phi$trans$insert3$i577 = ((($0)) + 24|0);
           $$pre4$i578 = HEAP32[$$phi$trans$insert3$i577>>2]|0;
           $$pre$phi$i580Z2D = $$phi$trans$insert$i575;$540 = $$pre$i576;$541 = $$pre4$i578;
           label = 212;
           break;
          }
          (_fgetc($$pre$i$i573)|0);
          $$pre1161 = HEAP32[$6>>2]|0;
          $543 = ($$pre1161|0)==(0|0);
          if ($543) {
           label = 215;
           break;
          }
          (_fgetc($$pre1161)|0);
          $$pre$i946 = HEAP32[$6>>2]|0;
          $550 = ($$pre$i946|0)==(0|0);
          if ($550) {
           $$phi$trans$insert1162 = ((($0)) + 20|0);
           $$pre1163 = HEAP32[$$phi$trans$insert1162>>2]|0;
           $$phi$trans$insert1164 = ((($0)) + 24|0);
           $$pre1165 = HEAP32[$$phi$trans$insert1164>>2]|0;
           $$pre$phi1279Z2D = $$phi$trans$insert1162;$552 = $$pre1163;$553 = $$pre1165;
           label = 219;
           break;
          }
          (_fgetc($$pre$i946)|0);
          $$pre1166 = HEAP32[$6>>2]|0;
          $555 = ($$pre1166|0)==(0|0);
          if ($555) {
           label = 222;
           break;
          }
          (_fgetc($$pre1166)|0);
          $$pre$i$i586 = HEAP32[$6>>2]|0;
          $562 = ($$pre$i$i586|0)==(0|0);
          if ($562) {
           $$phi$trans$insert$i588 = ((($0)) + 20|0);
           $$pre$i589 = HEAP32[$$phi$trans$insert$i588>>2]|0;
           $$phi$trans$insert3$i590 = ((($0)) + 24|0);
           $$pre4$i591 = HEAP32[$$phi$trans$insert3$i590>>2]|0;
           $$pre$phi$i593Z2D = $$phi$trans$insert$i588;$564 = $$pre$i589;$565 = $$pre4$i591;
           label = 226;
           break;
          }
          (_fgetc($$pre$i$i586)|0);
          $$pre1167 = HEAP32[$6>>2]|0;
          $567 = ($$pre1167|0)==(0|0);
          if ($567) {
           label = 229;
           break;
          }
          (_fgetc($$pre1167)|0);
          $$pre$i953 = HEAP32[$6>>2]|0;
          $574 = ($$pre$i953|0)==(0|0);
          if ($574) {
           $$phi$trans$insert1168 = ((($0)) + 20|0);
           $$pre1169 = HEAP32[$$phi$trans$insert1168>>2]|0;
           $$phi$trans$insert1170 = ((($0)) + 24|0);
           $$pre1171 = HEAP32[$$phi$trans$insert1170>>2]|0;
           $$pre$phi1281Z2D = $$phi$trans$insert1168;$576 = $$pre1169;$577 = $$pre1171;
           label = 234;
           break;
          } else {
           (_fgetc($$pre$i953)|0);
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 170) {
        $467 = ($468>>>0)<($469>>>0);
        if ($467) {
         $470 = ((($468)) + 1|0);
         HEAP32[$$pre$phi$i541Z2D>>2] = $470;
         label = 173;
        } else {
         label = 173;
        }
       }
       if ((label|0) == 173) {
        $472 = ((($0)) + 20|0);
        $473 = HEAP32[$472>>2]|0;
        $474 = ((($0)) + 24|0);
        $475 = HEAP32[$474>>2]|0;
        $476 = ($473>>>0)<($475>>>0);
        if ($476) {
         $477 = ((($473)) + 1|0);
         HEAP32[$472>>2] = $477;
         $$pre$phi1273Z2D = $472;$480 = $477;$481 = $475;
         label = 177;
        } else {
         $$pre$phi1273Z2D = $472;$480 = $473;$481 = $475;
         label = 177;
        }
       }
       if ((label|0) == 177) {
        $479 = ($480>>>0)<($481>>>0);
        if ($479) {
         $482 = ((($480)) + 1|0);
         HEAP32[$$pre$phi1273Z2D>>2] = $482;
         label = 180;
        } else {
         label = 180;
        }
       }
       if ((label|0) == 180) {
        $484 = ((($0)) + 20|0);
        $485 = HEAP32[$484>>2]|0;
        $486 = ((($0)) + 24|0);
        $487 = HEAP32[$486>>2]|0;
        $488 = ($485>>>0)<($487>>>0);
        if ($488) {
         $489 = ((($485)) + 1|0);
         HEAP32[$484>>2] = $489;
         $$pre$phi$i554Z2D = $484;$492 = $489;$493 = $487;
         label = 184;
        } else {
         $$pre$phi$i554Z2D = $484;$492 = $485;$493 = $487;
         label = 184;
        }
       }
       if ((label|0) == 184) {
        $491 = ($492>>>0)<($493>>>0);
        if ($491) {
         $494 = ((($492)) + 1|0);
         HEAP32[$$pre$phi$i554Z2D>>2] = $494;
         label = 187;
        } else {
         label = 187;
        }
       }
       if ((label|0) == 187) {
        $496 = ((($0)) + 20|0);
        $497 = HEAP32[$496>>2]|0;
        $498 = ((($0)) + 24|0);
        $499 = HEAP32[$498>>2]|0;
        $500 = ($497>>>0)<($499>>>0);
        if ($500) {
         $501 = ((($497)) + 1|0);
         HEAP32[$496>>2] = $501;
         $$pre$phi1275Z2D = $496;$504 = $501;$505 = $499;
         label = 191;
        } else {
         $$pre$phi1275Z2D = $496;$504 = $497;$505 = $499;
         label = 191;
        }
       }
       if ((label|0) == 191) {
        $503 = ($504>>>0)<($505>>>0);
        if ($503) {
         $506 = ((($504)) + 1|0);
         HEAP32[$$pre$phi1275Z2D>>2] = $506;
         label = 194;
        } else {
         label = 194;
        }
       }
       if ((label|0) == 194) {
        $508 = ((($0)) + 20|0);
        $509 = HEAP32[$508>>2]|0;
        $510 = ((($0)) + 24|0);
        $511 = HEAP32[$510>>2]|0;
        $512 = ($509>>>0)<($511>>>0);
        if ($512) {
         $513 = ((($509)) + 1|0);
         HEAP32[$508>>2] = $513;
         $$pre$phi$i567Z2D = $508;$516 = $513;$517 = $511;
         label = 198;
        } else {
         $$pre$phi$i567Z2D = $508;$516 = $509;$517 = $511;
         label = 198;
        }
       }
       if ((label|0) == 198) {
        $515 = ($516>>>0)<($517>>>0);
        if ($515) {
         $518 = ((($516)) + 1|0);
         HEAP32[$$pre$phi$i567Z2D>>2] = $518;
         label = 201;
        } else {
         label = 201;
        }
       }
       if ((label|0) == 201) {
        $520 = ((($0)) + 20|0);
        $521 = HEAP32[$520>>2]|0;
        $522 = ((($0)) + 24|0);
        $523 = HEAP32[$522>>2]|0;
        $524 = ($521>>>0)<($523>>>0);
        if ($524) {
         $525 = ((($521)) + 1|0);
         HEAP32[$520>>2] = $525;
         $$pre$phi1277Z2D = $520;$528 = $525;$529 = $523;
         label = 205;
        } else {
         $$pre$phi1277Z2D = $520;$528 = $521;$529 = $523;
         label = 205;
        }
       }
       if ((label|0) == 205) {
        $527 = ($528>>>0)<($529>>>0);
        if ($527) {
         $530 = ((($528)) + 1|0);
         HEAP32[$$pre$phi1277Z2D>>2] = $530;
         label = 208;
        } else {
         label = 208;
        }
       }
       if ((label|0) == 208) {
        $532 = ((($0)) + 20|0);
        $533 = HEAP32[$532>>2]|0;
        $534 = ((($0)) + 24|0);
        $535 = HEAP32[$534>>2]|0;
        $536 = ($533>>>0)<($535>>>0);
        if ($536) {
         $537 = ((($533)) + 1|0);
         HEAP32[$532>>2] = $537;
         $$pre$phi$i580Z2D = $532;$540 = $537;$541 = $535;
         label = 212;
        } else {
         $$pre$phi$i580Z2D = $532;$540 = $533;$541 = $535;
         label = 212;
        }
       }
       if ((label|0) == 212) {
        $539 = ($540>>>0)<($541>>>0);
        if ($539) {
         $542 = ((($540)) + 1|0);
         HEAP32[$$pre$phi$i580Z2D>>2] = $542;
         label = 215;
        } else {
         label = 215;
        }
       }
       if ((label|0) == 215) {
        $544 = ((($0)) + 20|0);
        $545 = HEAP32[$544>>2]|0;
        $546 = ((($0)) + 24|0);
        $547 = HEAP32[$546>>2]|0;
        $548 = ($545>>>0)<($547>>>0);
        if ($548) {
         $549 = ((($545)) + 1|0);
         HEAP32[$544>>2] = $549;
         $$pre$phi1279Z2D = $544;$552 = $549;$553 = $547;
         label = 219;
        } else {
         $$pre$phi1279Z2D = $544;$552 = $545;$553 = $547;
         label = 219;
        }
       }
       if ((label|0) == 219) {
        $551 = ($552>>>0)<($553>>>0);
        if ($551) {
         $554 = ((($552)) + 1|0);
         HEAP32[$$pre$phi1279Z2D>>2] = $554;
         label = 222;
        } else {
         label = 222;
        }
       }
       if ((label|0) == 222) {
        $556 = ((($0)) + 20|0);
        $557 = HEAP32[$556>>2]|0;
        $558 = ((($0)) + 24|0);
        $559 = HEAP32[$558>>2]|0;
        $560 = ($557>>>0)<($559>>>0);
        if ($560) {
         $561 = ((($557)) + 1|0);
         HEAP32[$556>>2] = $561;
         $$pre$phi$i593Z2D = $556;$564 = $561;$565 = $559;
         label = 226;
        } else {
         $$pre$phi$i593Z2D = $556;$564 = $557;$565 = $559;
         label = 226;
        }
       }
       if ((label|0) == 226) {
        $563 = ($564>>>0)<($565>>>0);
        if ($563) {
         $566 = ((($564)) + 1|0);
         HEAP32[$$pre$phi$i593Z2D>>2] = $566;
         label = 229;
        } else {
         label = 229;
        }
       }
       if ((label|0) == 229) {
        $568 = ((($0)) + 20|0);
        $569 = HEAP32[$568>>2]|0;
        $570 = ((($0)) + 24|0);
        $571 = HEAP32[$570>>2]|0;
        $572 = ($569>>>0)<($571>>>0);
        if ($572) {
         $573 = ((($569)) + 1|0);
         HEAP32[$568>>2] = $573;
         $$pre$phi1281Z2D = $568;$576 = $573;$577 = $571;
         label = 234;
        } else {
         $$pre$phi1281Z2D = $568;$576 = $569;$577 = $571;
         label = 234;
        }
       }
       if ((label|0) == 234) {
        $575 = ($576>>>0)<($577>>>0);
        if ($575) {
         $578 = ((($576)) + 1|0);
         HEAP32[$$pre$phi1281Z2D>>2] = $578;
        }
       }
       $579 = $187 | 16;
       $580 = ($579|0)==(56);
       L339: do {
        if ($580) {
         $581 = ($187|0)==(56);
         L341: do {
          if ($581) {
           $582 = HEAP32[$6>>2]|0;
           $583 = ($582|0)==(0|0);
           do {
            if ($583) {
             $584 = ((($0)) + 20|0);
             $585 = HEAP32[$584>>2]|0;
             $586 = ((($0)) + 24|0);
             $587 = HEAP32[$586>>2]|0;
             $588 = ($585>>>0)<($587>>>0);
             if (!($588)) {
              $$pre$phi$i606Z2D = $584;$592 = $585;$593 = $587;
              label = 243;
              break;
             }
             $589 = ((($585)) + 1|0);
             HEAP32[$584>>2] = $589;
             $$pre$phi$i606Z2D = $584;$592 = $589;$593 = $587;
             label = 243;
            } else {
             (_fgetc($582)|0);
             $$pre$i$i599 = HEAP32[$6>>2]|0;
             $590 = ($$pre$i$i599|0)==(0|0);
             if ($590) {
              $$phi$trans$insert$i601 = ((($0)) + 20|0);
              $$pre$i602 = HEAP32[$$phi$trans$insert$i601>>2]|0;
              $$phi$trans$insert3$i603 = ((($0)) + 24|0);
              $$pre4$i604 = HEAP32[$$phi$trans$insert3$i603>>2]|0;
              $$pre$phi$i606Z2D = $$phi$trans$insert$i601;$592 = $$pre$i602;$593 = $$pre4$i604;
              label = 243;
              break;
             }
             (_fgetc($$pre$i$i599)|0);
             $$pre1204 = HEAP32[$6>>2]|0;
             $595 = ($$pre1204|0)==(0|0);
             if ($595) {
              label = 246;
              break;
             }
             (_fgetc($$pre1204)|0);
             $$pre$i960 = HEAP32[$6>>2]|0;
             $602 = ($$pre$i960|0)==(0|0);
             if ($602) {
              $$phi$trans$insert1205 = ((($0)) + 20|0);
              $$pre1206 = HEAP32[$$phi$trans$insert1205>>2]|0;
              $$phi$trans$insert1207 = ((($0)) + 24|0);
              $$pre1208 = HEAP32[$$phi$trans$insert1207>>2]|0;
              $$pre$phi1283Z2D = $$phi$trans$insert1205;$604 = $$pre1206;$605 = $$pre1208;
              label = 250;
              break;
             }
             (_fgetc($$pre$i960)|0);
             $$pre1209 = HEAP32[$6>>2]|0;
             $607 = ($$pre1209|0)==(0|0);
             if ($607) {
              label = 253;
              break;
             }
             (_fgetc($$pre1209)|0);
             $$pre$i$i612 = HEAP32[$6>>2]|0;
             $614 = ($$pre$i$i612|0)==(0|0);
             if ($614) {
              $$phi$trans$insert$i614 = ((($0)) + 20|0);
              $$pre$i615 = HEAP32[$$phi$trans$insert$i614>>2]|0;
              $$phi$trans$insert3$i616 = ((($0)) + 24|0);
              $$pre4$i617 = HEAP32[$$phi$trans$insert3$i616>>2]|0;
              $$pre$phi$i619Z2D = $$phi$trans$insert$i614;$616 = $$pre$i615;$617 = $$pre4$i617;
              label = 257;
              break;
             }
             (_fgetc($$pre$i$i612)|0);
             $$pre1210 = HEAP32[$6>>2]|0;
             $619 = ($$pre1210|0)==(0|0);
             if ($619) {
              label = 260;
              break;
             }
             (_fgetc($$pre1210)|0);
             $$pre$i967 = HEAP32[$6>>2]|0;
             $626 = ($$pre$i967|0)==(0|0);
             if ($626) {
              $$phi$trans$insert1211 = ((($0)) + 20|0);
              $$pre1212 = HEAP32[$$phi$trans$insert1211>>2]|0;
              $$phi$trans$insert1213 = ((($0)) + 24|0);
              $$pre1214 = HEAP32[$$phi$trans$insert1213>>2]|0;
              $$pre$phi1285Z2D = $$phi$trans$insert1211;$628 = $$pre1212;$629 = $$pre1214;
              label = 264;
              break;
             }
             (_fgetc($$pre$i967)|0);
             $$pre1215 = HEAP32[$6>>2]|0;
             $631 = ($$pre1215|0)==(0|0);
             if ($631) {
              label = 267;
              break;
             }
             (_fgetc($$pre1215)|0);
             $$pre$i$i625 = HEAP32[$6>>2]|0;
             $638 = ($$pre$i$i625|0)==(0|0);
             if ($638) {
              $$phi$trans$insert$i627 = ((($0)) + 20|0);
              $$pre$i628 = HEAP32[$$phi$trans$insert$i627>>2]|0;
              $$phi$trans$insert3$i629 = ((($0)) + 24|0);
              $$pre4$i630 = HEAP32[$$phi$trans$insert3$i629>>2]|0;
              $$pre$phi$i632Z2D = $$phi$trans$insert$i627;$640 = $$pre$i628;$641 = $$pre4$i630;
              label = 271;
              break;
             }
             (_fgetc($$pre$i$i625)|0);
             $$pre1216 = HEAP32[$6>>2]|0;
             $643 = ($$pre1216|0)==(0|0);
             if ($643) {
              label = 274;
              break;
             }
             (_fgetc($$pre1216)|0);
             $$pre$i974 = HEAP32[$6>>2]|0;
             $650 = ($$pre$i974|0)==(0|0);
             if ($650) {
              $$phi$trans$insert1217 = ((($0)) + 20|0);
              $$pre1218 = HEAP32[$$phi$trans$insert1217>>2]|0;
              $$phi$trans$insert1219 = ((($0)) + 24|0);
              $$pre1220 = HEAP32[$$phi$trans$insert1219>>2]|0;
              $$pre$phi1287Z2D = $$phi$trans$insert1217;$652 = $$pre1218;$653 = $$pre1220;
              label = 278;
              break;
             }
             (_fgetc($$pre$i974)|0);
             $$pre1221 = HEAP32[$6>>2]|0;
             $655 = ($$pre1221|0)==(0|0);
             if ($655) {
              label = 281;
              break;
             }
             (_fgetc($$pre1221)|0);
             $$pre$i$i638 = HEAP32[$6>>2]|0;
             $662 = ($$pre$i$i638|0)==(0|0);
             if ($662) {
              $$phi$trans$insert$i640 = ((($0)) + 20|0);
              $$pre$i641 = HEAP32[$$phi$trans$insert$i640>>2]|0;
              $$phi$trans$insert3$i642 = ((($0)) + 24|0);
              $$pre4$i643 = HEAP32[$$phi$trans$insert3$i642>>2]|0;
              $$pre$phi$i645Z2D = $$phi$trans$insert$i640;$664 = $$pre$i641;$665 = $$pre4$i643;
              label = 285;
              break;
             }
             (_fgetc($$pre$i$i638)|0);
             $$pre1222 = HEAP32[$6>>2]|0;
             $667 = ($$pre1222|0)==(0|0);
             if ($667) {
              label = 288;
              break;
             }
             (_fgetc($$pre1222)|0);
             $$pre$i981 = HEAP32[$6>>2]|0;
             $674 = ($$pre$i981|0)==(0|0);
             if ($674) {
              $$phi$trans$insert1223 = ((($0)) + 20|0);
              $$pre1224 = HEAP32[$$phi$trans$insert1223>>2]|0;
              $$phi$trans$insert1225 = ((($0)) + 24|0);
              $$pre1226 = HEAP32[$$phi$trans$insert1225>>2]|0;
              $$pre$phi1289Z2D = $$phi$trans$insert1223;$676 = $$pre1224;$677 = $$pre1226;
              break;
             } else {
              (_fgetc($$pre$i981)|0);
              break L341;
             }
            }
           } while(0);
           do {
            if ((label|0) == 243) {
             $591 = ($592>>>0)<($593>>>0);
             if (!($591)) {
              label = 246;
              break;
             }
             $594 = ((($592)) + 1|0);
             HEAP32[$$pre$phi$i606Z2D>>2] = $594;
             label = 246;
            }
           } while(0);
           do {
            if ((label|0) == 246) {
             $596 = ((($0)) + 20|0);
             $597 = HEAP32[$596>>2]|0;
             $598 = ((($0)) + 24|0);
             $599 = HEAP32[$598>>2]|0;
             $600 = ($597>>>0)<($599>>>0);
             if (!($600)) {
              $$pre$phi1283Z2D = $596;$604 = $597;$605 = $599;
              label = 250;
              break;
             }
             $601 = ((($597)) + 1|0);
             HEAP32[$596>>2] = $601;
             $$pre$phi1283Z2D = $596;$604 = $601;$605 = $599;
             label = 250;
            }
           } while(0);
           do {
            if ((label|0) == 250) {
             $603 = ($604>>>0)<($605>>>0);
             if (!($603)) {
              label = 253;
              break;
             }
             $606 = ((($604)) + 1|0);
             HEAP32[$$pre$phi1283Z2D>>2] = $606;
             label = 253;
            }
           } while(0);
           do {
            if ((label|0) == 253) {
             $608 = ((($0)) + 20|0);
             $609 = HEAP32[$608>>2]|0;
             $610 = ((($0)) + 24|0);
             $611 = HEAP32[$610>>2]|0;
             $612 = ($609>>>0)<($611>>>0);
             if (!($612)) {
              $$pre$phi$i619Z2D = $608;$616 = $609;$617 = $611;
              label = 257;
              break;
             }
             $613 = ((($609)) + 1|0);
             HEAP32[$608>>2] = $613;
             $$pre$phi$i619Z2D = $608;$616 = $613;$617 = $611;
             label = 257;
            }
           } while(0);
           do {
            if ((label|0) == 257) {
             $615 = ($616>>>0)<($617>>>0);
             if (!($615)) {
              label = 260;
              break;
             }
             $618 = ((($616)) + 1|0);
             HEAP32[$$pre$phi$i619Z2D>>2] = $618;
             label = 260;
            }
           } while(0);
           do {
            if ((label|0) == 260) {
             $620 = ((($0)) + 20|0);
             $621 = HEAP32[$620>>2]|0;
             $622 = ((($0)) + 24|0);
             $623 = HEAP32[$622>>2]|0;
             $624 = ($621>>>0)<($623>>>0);
             if (!($624)) {
              $$pre$phi1285Z2D = $620;$628 = $621;$629 = $623;
              label = 264;
              break;
             }
             $625 = ((($621)) + 1|0);
             HEAP32[$620>>2] = $625;
             $$pre$phi1285Z2D = $620;$628 = $625;$629 = $623;
             label = 264;
            }
           } while(0);
           do {
            if ((label|0) == 264) {
             $627 = ($628>>>0)<($629>>>0);
             if (!($627)) {
              label = 267;
              break;
             }
             $630 = ((($628)) + 1|0);
             HEAP32[$$pre$phi1285Z2D>>2] = $630;
             label = 267;
            }
           } while(0);
           do {
            if ((label|0) == 267) {
             $632 = ((($0)) + 20|0);
             $633 = HEAP32[$632>>2]|0;
             $634 = ((($0)) + 24|0);
             $635 = HEAP32[$634>>2]|0;
             $636 = ($633>>>0)<($635>>>0);
             if (!($636)) {
              $$pre$phi$i632Z2D = $632;$640 = $633;$641 = $635;
              label = 271;
              break;
             }
             $637 = ((($633)) + 1|0);
             HEAP32[$632>>2] = $637;
             $$pre$phi$i632Z2D = $632;$640 = $637;$641 = $635;
             label = 271;
            }
           } while(0);
           do {
            if ((label|0) == 271) {
             $639 = ($640>>>0)<($641>>>0);
             if (!($639)) {
              label = 274;
              break;
             }
             $642 = ((($640)) + 1|0);
             HEAP32[$$pre$phi$i632Z2D>>2] = $642;
             label = 274;
            }
           } while(0);
           do {
            if ((label|0) == 274) {
             $644 = ((($0)) + 20|0);
             $645 = HEAP32[$644>>2]|0;
             $646 = ((($0)) + 24|0);
             $647 = HEAP32[$646>>2]|0;
             $648 = ($645>>>0)<($647>>>0);
             if (!($648)) {
              $$pre$phi1287Z2D = $644;$652 = $645;$653 = $647;
              label = 278;
              break;
             }
             $649 = ((($645)) + 1|0);
             HEAP32[$644>>2] = $649;
             $$pre$phi1287Z2D = $644;$652 = $649;$653 = $647;
             label = 278;
            }
           } while(0);
           do {
            if ((label|0) == 278) {
             $651 = ($652>>>0)<($653>>>0);
             if (!($651)) {
              label = 281;
              break;
             }
             $654 = ((($652)) + 1|0);
             HEAP32[$$pre$phi1287Z2D>>2] = $654;
             label = 281;
            }
           } while(0);
           do {
            if ((label|0) == 281) {
             $656 = ((($0)) + 20|0);
             $657 = HEAP32[$656>>2]|0;
             $658 = ((($0)) + 24|0);
             $659 = HEAP32[$658>>2]|0;
             $660 = ($657>>>0)<($659>>>0);
             if (!($660)) {
              $$pre$phi$i645Z2D = $656;$664 = $657;$665 = $659;
              label = 285;
              break;
             }
             $661 = ((($657)) + 1|0);
             HEAP32[$656>>2] = $661;
             $$pre$phi$i645Z2D = $656;$664 = $661;$665 = $659;
             label = 285;
            }
           } while(0);
           do {
            if ((label|0) == 285) {
             $663 = ($664>>>0)<($665>>>0);
             if (!($663)) {
              label = 288;
              break;
             }
             $666 = ((($664)) + 1|0);
             HEAP32[$$pre$phi$i645Z2D>>2] = $666;
             label = 288;
            }
           } while(0);
           do {
            if ((label|0) == 288) {
             $668 = ((($0)) + 20|0);
             $669 = HEAP32[$668>>2]|0;
             $670 = ((($0)) + 24|0);
             $671 = HEAP32[$670>>2]|0;
             $672 = ($669>>>0)<($671>>>0);
             if (!($672)) {
              $$pre$phi1289Z2D = $668;$676 = $669;$677 = $671;
              break;
             }
             $673 = ((($669)) + 1|0);
             HEAP32[$668>>2] = $673;
             $$pre$phi1289Z2D = $668;$676 = $673;$677 = $671;
            }
           } while(0);
           $675 = ($676>>>0)<($677>>>0);
           if (!($675)) {
            break;
           }
           $678 = ((($676)) + 1|0);
           HEAP32[$$pre$phi1289Z2D>>2] = $678;
          }
         } while(0);
         $679 = ($393|0)==(32);
         switch ($393|0) {
         case 16: case 32:  {
          break;
         }
         default: {
          $$0367 = 0;$$0369 = 0;$$0371 = 0;$$0373 = 0;
          break L339;
         }
         }
         switch ($454|0) {
         case 0:  {
          $$ = $679 ? 255 : 31;
          $$411 = $679 ? 65280 : 992;
          $$412 = $679 ? 16711680 : 31744;
          $$0398 = 0;$$1368 = $$412;$$1370 = $$411;$$1372 = $$;$$1374 = 0;
          break L207;
          break;
         }
         case 3:  {
          $680 = HEAP32[$6>>2]|0;
          $681 = ($680|0)==(0|0);
          do {
           if ($681) {
            $682 = ((($0)) + 20|0);
            $683 = HEAP32[$682>>2]|0;
            $684 = ((($0)) + 24|0);
            $685 = HEAP32[$684>>2]|0;
            $686 = ($683>>>0)<($685>>>0);
            if (!($686)) {
             $$0$i6$i$i659 = 0;$$pre$phi$i658Z2D = $682;$695 = $683;$696 = $685;
             label = 303;
             break;
            }
            $687 = ((($683)) + 1|0);
            HEAP32[$682>>2] = $687;
            $688 = HEAP8[$683>>0]|0;
            $689 = $688&255;
            $$0$i6$i$i659 = $689;$$pre$phi$i658Z2D = $682;$695 = $687;$696 = $685;
            label = 303;
           } else {
            $690 = (_fgetc($680)|0);
            $691 = ($690|0)==(-1);
            $692 = $691 ? 0 : $690;
            $$pre$i$i651 = HEAP32[$6>>2]|0;
            $693 = ($$pre$i$i651|0)==(0|0);
            if ($693) {
             $$phi$trans$insert$i653 = ((($0)) + 20|0);
             $$pre$i654 = HEAP32[$$phi$trans$insert$i653>>2]|0;
             $$phi$trans$insert3$i655 = ((($0)) + 24|0);
             $$pre4$i656 = HEAP32[$$phi$trans$insert3$i655>>2]|0;
             $$0$i6$i$i659 = $692;$$pre$phi$i658Z2D = $$phi$trans$insert$i653;$695 = $$pre$i654;$696 = $$pre4$i656;
             label = 303;
             break;
            }
            $702 = (_fgetc($$pre$i$i651)|0);
            $703 = ($702|0)==(-1);
            $$pre1227 = HEAP32[$6>>2]|0;
            $$op1337 = $702 << 8;
            $704 = $703 ? 0 : $$op1337;
            $705 = (($704) + ($692))|0;
            $706 = ($$pre1227|0)==(0|0);
            if ($706) {
             $1612 = $705;
             label = 307;
             break;
            }
            $715 = (_fgetc($$pre1227)|0);
            $716 = ($715|0)==(-1);
            $717 = $716 ? 0 : $715;
            $$pre$i988 = HEAP32[$6>>2]|0;
            $718 = ($$pre$i988|0)==(0|0);
            if ($718) {
             $$phi$trans$insert1228 = ((($0)) + 20|0);
             $$pre1229 = HEAP32[$$phi$trans$insert1228>>2]|0;
             $$phi$trans$insert1230 = ((($0)) + 24|0);
             $$pre1231 = HEAP32[$$phi$trans$insert1230>>2]|0;
             $$0$i6$i990 = $717;$$pre$phi1291Z2D = $$phi$trans$insert1228;$720 = $$pre1229;$721 = $$pre1231;$729 = $705;
             label = 311;
             break;
            }
            $730 = (_fgetc($$pre$i988)|0);
            $731 = ($730|0)==(-1);
            $$pre1232 = HEAP32[$6>>2]|0;
            $$op1338 = $730 << 8;
            $732 = $731 ? 0 : $$op1338;
            $733 = (($732) + ($717))|0;
            $734 = $733 << 16;
            $735 = (($705) + ($734))|0;
            $736 = ($$pre1232|0)==(0|0);
            if ($736) {
             $1613 = $735;
             label = 315;
             break;
            }
            $745 = (_fgetc($$pre1232)|0);
            $746 = ($745|0)==(-1);
            $747 = $746 ? 0 : $745;
            $$pre$i$i664 = HEAP32[$6>>2]|0;
            $748 = ($$pre$i$i664|0)==(0|0);
            if ($748) {
             $$phi$trans$insert$i666 = ((($0)) + 20|0);
             $$pre$i667 = HEAP32[$$phi$trans$insert$i666>>2]|0;
             $$phi$trans$insert3$i668 = ((($0)) + 24|0);
             $$pre4$i669 = HEAP32[$$phi$trans$insert3$i668>>2]|0;
             $$0$i6$i$i672 = $747;$$pre$phi$i671Z2D = $$phi$trans$insert$i666;$1614 = $735;$750 = $$pre$i667;$751 = $$pre4$i669;
             label = 319;
             break;
            }
            $757 = (_fgetc($$pre$i$i664)|0);
            $758 = ($757|0)==(-1);
            $$pre1233 = HEAP32[$6>>2]|0;
            $$op1339 = $757 << 8;
            $759 = $758 ? 0 : $$op1339;
            $760 = (($759) + ($747))|0;
            $761 = ($$pre1233|0)==(0|0);
            if ($761) {
             $1615 = $760;$1616 = $735;
             label = 323;
             break;
            }
            $770 = (_fgetc($$pre1233)|0);
            $771 = ($770|0)==(-1);
            $772 = $771 ? 0 : $770;
            $$pre$i995 = HEAP32[$6>>2]|0;
            $773 = ($$pre$i995|0)==(0|0);
            if ($773) {
             $$phi$trans$insert1234 = ((($0)) + 20|0);
             $$pre1235 = HEAP32[$$phi$trans$insert1234>>2]|0;
             $$phi$trans$insert1236 = ((($0)) + 24|0);
             $$pre1237 = HEAP32[$$phi$trans$insert1236>>2]|0;
             $$0$i6$i997 = $772;$$pre$phi1293Z2D = $$phi$trans$insert1234;$1617 = $735;$775 = $$pre1235;$776 = $$pre1237;$784 = $760;
             label = 327;
             break;
            }
            $785 = (_fgetc($$pre$i995)|0);
            $786 = ($785|0)==(-1);
            $$pre1238 = HEAP32[$6>>2]|0;
            $$op1340 = $785 << 8;
            $787 = $786 ? 0 : $$op1340;
            $788 = (($787) + ($772))|0;
            $789 = $788 << 16;
            $790 = (($760) + ($789))|0;
            $791 = ($$pre1238|0)==(0|0);
            if ($791) {
             $1618 = $790;$1619 = $735;
             label = 331;
             break;
            }
            $800 = (_fgetc($$pre1238)|0);
            $801 = ($800|0)==(-1);
            $802 = $801 ? 0 : $800;
            $$pre$i$i677 = HEAP32[$6>>2]|0;
            $803 = ($$pre$i$i677|0)==(0|0);
            if ($803) {
             $$phi$trans$insert$i679 = ((($0)) + 20|0);
             $$pre$i680 = HEAP32[$$phi$trans$insert$i679>>2]|0;
             $$phi$trans$insert3$i681 = ((($0)) + 24|0);
             $$pre4$i682 = HEAP32[$$phi$trans$insert3$i681>>2]|0;
             $$0$i6$i$i685 = $802;$$pre$phi$i684Z2D = $$phi$trans$insert$i679;$1620 = $790;$1621 = $735;$805 = $$pre$i680;$806 = $$pre4$i682;
             label = 335;
             break;
            }
            $812 = (_fgetc($$pre$i$i677)|0);
            $813 = ($812|0)==(-1);
            $$pre1239 = HEAP32[$6>>2]|0;
            $$op1341 = $812 << 8;
            $814 = $813 ? 0 : $$op1341;
            $815 = (($814) + ($802))|0;
            $816 = ($$pre1239|0)==(0|0);
            if ($816) {
             $1622 = $815;$1623 = $735;$1624 = $790;
             label = 339;
             break;
            }
            $825 = (_fgetc($$pre1239)|0);
            $826 = ($825|0)==(-1);
            $827 = $826 ? 0 : $825;
            $$pre$i1002 = HEAP32[$6>>2]|0;
            $828 = ($$pre$i1002|0)==(0|0);
            if ($828) {
             $$phi$trans$insert1240 = ((($0)) + 20|0);
             $$pre1241 = HEAP32[$$phi$trans$insert1240>>2]|0;
             $$phi$trans$insert1242 = ((($0)) + 24|0);
             $$pre1243 = HEAP32[$$phi$trans$insert1242>>2]|0;
             $$0$i6$i1004 = $827;$$pre$phi1295Z2D = $$phi$trans$insert1240;$1625 = $815;$1626 = $735;$1627 = $790;$833 = $$pre1241;$834 = $$pre1243;
             label = 344;
             break;
            } else {
             $829 = (_fgetc($$pre$i1002)|0);
             $830 = ($829|0)==(-1);
             $831 = $830 ? 0 : $829;
             $$0$i3$i1007 = $831;$$0$i5$i1006 = $827;$842 = $815;$844 = $735;$845 = $790;
             break;
            }
           }
          } while(0);
          if ((label|0) == 303) {
           $694 = ($695>>>0)<($696>>>0);
           if ($694) {
            $697 = ((($695)) + 1|0);
            HEAP32[$$pre$phi$i658Z2D>>2] = $697;
            $698 = HEAP8[$695>>0]|0;
            $699 = $698&255;
            $$0$i3$i$i662$ph = $699;
           } else {
            $$0$i3$i$i662$ph = 0;
           }
           $700 = $$0$i3$i$i662$ph << 8;
           $701 = (($700) + ($$0$i6$i$i659))|0;
           $1612 = $701;
           label = 307;
          }
          do {
           if ((label|0) == 307) {
            $707 = ((($0)) + 20|0);
            $708 = HEAP32[$707>>2]|0;
            $709 = ((($0)) + 24|0);
            $710 = HEAP32[$709>>2]|0;
            $711 = ($708>>>0)<($710>>>0);
            if (!($711)) {
             $$0$i6$i990 = 0;$$pre$phi1291Z2D = $707;$720 = $708;$721 = $710;$729 = $1612;
             label = 311;
             break;
            }
            $712 = ((($708)) + 1|0);
            HEAP32[$707>>2] = $712;
            $713 = HEAP8[$708>>0]|0;
            $714 = $713&255;
            $$0$i6$i990 = $714;$$pre$phi1291Z2D = $707;$720 = $712;$721 = $710;$729 = $1612;
            label = 311;
           }
          } while(0);
          if ((label|0) == 311) {
           $719 = ($720>>>0)<($721>>>0);
           if ($719) {
            $722 = ((($720)) + 1|0);
            HEAP32[$$pre$phi1291Z2D>>2] = $722;
            $723 = HEAP8[$720>>0]|0;
            $724 = $723&255;
            $$0$i3$i993$ph = $724;
           } else {
            $$0$i3$i993$ph = 0;
           }
           $725 = $$0$i3$i993$ph << 8;
           $726 = (($725) + ($$0$i6$i990))|0;
           $727 = $726 << 16;
           $728 = (($729) + ($727))|0;
           $1613 = $728;
           label = 315;
          }
          do {
           if ((label|0) == 315) {
            $737 = ((($0)) + 20|0);
            $738 = HEAP32[$737>>2]|0;
            $739 = ((($0)) + 24|0);
            $740 = HEAP32[$739>>2]|0;
            $741 = ($738>>>0)<($740>>>0);
            if (!($741)) {
             $$0$i6$i$i672 = 0;$$pre$phi$i671Z2D = $737;$1614 = $1613;$750 = $738;$751 = $740;
             label = 319;
             break;
            }
            $742 = ((($738)) + 1|0);
            HEAP32[$737>>2] = $742;
            $743 = HEAP8[$738>>0]|0;
            $744 = $743&255;
            $$0$i6$i$i672 = $744;$$pre$phi$i671Z2D = $737;$1614 = $1613;$750 = $742;$751 = $740;
            label = 319;
           }
          } while(0);
          if ((label|0) == 319) {
           $749 = ($750>>>0)<($751>>>0);
           if ($749) {
            $752 = ((($750)) + 1|0);
            HEAP32[$$pre$phi$i671Z2D>>2] = $752;
            $753 = HEAP8[$750>>0]|0;
            $754 = $753&255;
            $$0$i3$i$i675$ph = $754;
           } else {
            $$0$i3$i$i675$ph = 0;
           }
           $755 = $$0$i3$i$i675$ph << 8;
           $756 = (($755) + ($$0$i6$i$i672))|0;
           $1615 = $756;$1616 = $1614;
           label = 323;
          }
          do {
           if ((label|0) == 323) {
            $762 = ((($0)) + 20|0);
            $763 = HEAP32[$762>>2]|0;
            $764 = ((($0)) + 24|0);
            $765 = HEAP32[$764>>2]|0;
            $766 = ($763>>>0)<($765>>>0);
            if (!($766)) {
             $$0$i6$i997 = 0;$$pre$phi1293Z2D = $762;$1617 = $1616;$775 = $763;$776 = $765;$784 = $1615;
             label = 327;
             break;
            }
            $767 = ((($763)) + 1|0);
            HEAP32[$762>>2] = $767;
            $768 = HEAP8[$763>>0]|0;
            $769 = $768&255;
            $$0$i6$i997 = $769;$$pre$phi1293Z2D = $762;$1617 = $1616;$775 = $767;$776 = $765;$784 = $1615;
            label = 327;
           }
          } while(0);
          if ((label|0) == 327) {
           $774 = ($775>>>0)<($776>>>0);
           if ($774) {
            $777 = ((($775)) + 1|0);
            HEAP32[$$pre$phi1293Z2D>>2] = $777;
            $778 = HEAP8[$775>>0]|0;
            $779 = $778&255;
            $$0$i3$i1000$ph = $779;
           } else {
            $$0$i3$i1000$ph = 0;
           }
           $780 = $$0$i3$i1000$ph << 8;
           $781 = (($780) + ($$0$i6$i997))|0;
           $782 = $781 << 16;
           $783 = (($784) + ($782))|0;
           $1618 = $783;$1619 = $1617;
           label = 331;
          }
          do {
           if ((label|0) == 331) {
            $792 = ((($0)) + 20|0);
            $793 = HEAP32[$792>>2]|0;
            $794 = ((($0)) + 24|0);
            $795 = HEAP32[$794>>2]|0;
            $796 = ($793>>>0)<($795>>>0);
            if (!($796)) {
             $$0$i6$i$i685 = 0;$$pre$phi$i684Z2D = $792;$1620 = $1618;$1621 = $1619;$805 = $793;$806 = $795;
             label = 335;
             break;
            }
            $797 = ((($793)) + 1|0);
            HEAP32[$792>>2] = $797;
            $798 = HEAP8[$793>>0]|0;
            $799 = $798&255;
            $$0$i6$i$i685 = $799;$$pre$phi$i684Z2D = $792;$1620 = $1618;$1621 = $1619;$805 = $797;$806 = $795;
            label = 335;
           }
          } while(0);
          if ((label|0) == 335) {
           $804 = ($805>>>0)<($806>>>0);
           if ($804) {
            $807 = ((($805)) + 1|0);
            HEAP32[$$pre$phi$i684Z2D>>2] = $807;
            $808 = HEAP8[$805>>0]|0;
            $809 = $808&255;
            $$0$i3$i$i688$ph = $809;
           } else {
            $$0$i3$i$i688$ph = 0;
           }
           $810 = $$0$i3$i$i688$ph << 8;
           $811 = (($810) + ($$0$i6$i$i685))|0;
           $1622 = $811;$1623 = $1621;$1624 = $1620;
           label = 339;
          }
          do {
           if ((label|0) == 339) {
            $817 = ((($0)) + 20|0);
            $818 = HEAP32[$817>>2]|0;
            $819 = ((($0)) + 24|0);
            $820 = HEAP32[$819>>2]|0;
            $821 = ($818>>>0)<($820>>>0);
            if (!($821)) {
             $$0$i6$i1004 = 0;$$pre$phi1295Z2D = $817;$1625 = $1622;$1626 = $1623;$1627 = $1624;$833 = $818;$834 = $820;
             label = 344;
             break;
            }
            $822 = ((($818)) + 1|0);
            HEAP32[$817>>2] = $822;
            $823 = HEAP8[$818>>0]|0;
            $824 = $823&255;
            $$0$i6$i1004 = $824;$$pre$phi1295Z2D = $817;$1625 = $1622;$1626 = $1623;$1627 = $1624;$833 = $822;$834 = $820;
            label = 344;
           }
          } while(0);
          do {
           if ((label|0) == 344) {
            $832 = ($833>>>0)<($834>>>0);
            if (!($832)) {
             $$0$i3$i1007 = 0;$$0$i5$i1006 = $$0$i6$i1004;$842 = $1625;$844 = $1626;$845 = $1627;
             break;
            }
            $835 = ((($833)) + 1|0);
            HEAP32[$$pre$phi1295Z2D>>2] = $835;
            $836 = HEAP8[$833>>0]|0;
            $837 = $836&255;
            $$0$i3$i1007 = $837;$$0$i5$i1006 = $$0$i6$i1004;$842 = $1625;$844 = $1626;$845 = $1627;
           }
          } while(0);
          $838 = $$0$i3$i1007 << 8;
          $839 = (($838) + ($$0$i5$i1006))|0;
          $840 = $839 << 16;
          $841 = (($842) + ($840))|0;
          $843 = ($844|0)==($845|0);
          $846 = ($845|0)==($841|0);
          $or$cond = $843 & $846;
          if ($or$cond) {
           $$2 = 0;
          } else {
           $$0398 = 0;$$1368 = $844;$$1370 = $845;$$1372 = $841;$$1374 = 0;
           break L207;
          }
          STACKTOP = sp;return ($$2|0);
          break;
         }
         default: {
          $$2 = 0;
          STACKTOP = sp;return ($$2|0);
         }
         }
        } else {
         $847 = ($187|0)==(108);
         if (!($847)) {
          ___assert_fail((121670|0),(121322|0),2581,(121681|0));
          // unreachable;
         }
         $848 = HEAP32[$6>>2]|0;
         $849 = ($848|0)==(0|0);
         do {
          if ($849) {
           $850 = ((($0)) + 20|0);
           $851 = HEAP32[$850>>2]|0;
           $852 = ((($0)) + 24|0);
           $853 = HEAP32[$852>>2]|0;
           $854 = ($851>>>0)<($853>>>0);
           if (!($854)) {
            $$0$i6$i$i698 = 0;$$pre$phi$i697Z2D = $850;$863 = $851;$864 = $853;
            label = 354;
            break;
           }
           $855 = ((($851)) + 1|0);
           HEAP32[$850>>2] = $855;
           $856 = HEAP8[$851>>0]|0;
           $857 = $856&255;
           $$0$i6$i$i698 = $857;$$pre$phi$i697Z2D = $850;$863 = $855;$864 = $853;
           label = 354;
          } else {
           $858 = (_fgetc($848)|0);
           $859 = ($858|0)==(-1);
           $860 = $859 ? 0 : $858;
           $$pre$i$i690 = HEAP32[$6>>2]|0;
           $861 = ($$pre$i$i690|0)==(0|0);
           if ($861) {
            $$phi$trans$insert$i692 = ((($0)) + 20|0);
            $$pre$i693 = HEAP32[$$phi$trans$insert$i692>>2]|0;
            $$phi$trans$insert3$i694 = ((($0)) + 24|0);
            $$pre4$i695 = HEAP32[$$phi$trans$insert3$i694>>2]|0;
            $$0$i6$i$i698 = $860;$$pre$phi$i697Z2D = $$phi$trans$insert$i692;$863 = $$pre$i693;$864 = $$pre4$i695;
            label = 354;
            break;
           }
           $870 = (_fgetc($$pre$i$i690)|0);
           $871 = ($870|0)==(-1);
           $$pre1172 = HEAP32[$6>>2]|0;
           $$op1328 = $870 << 8;
           $872 = $871 ? 0 : $$op1328;
           $873 = (($872) + ($860))|0;
           $874 = ($$pre1172|0)==(0|0);
           if ($874) {
            $1628 = $873;
            label = 358;
            break;
           }
           $883 = (_fgetc($$pre1172)|0);
           $884 = ($883|0)==(-1);
           $885 = $884 ? 0 : $883;
           $$pre$i1009 = HEAP32[$6>>2]|0;
           $886 = ($$pre$i1009|0)==(0|0);
           if ($886) {
            $$phi$trans$insert1173 = ((($0)) + 20|0);
            $$pre1174 = HEAP32[$$phi$trans$insert1173>>2]|0;
            $$phi$trans$insert1175 = ((($0)) + 24|0);
            $$pre1176 = HEAP32[$$phi$trans$insert1175>>2]|0;
            $$0$i6$i1011 = $885;$$pre$phi1297Z2D = $$phi$trans$insert1173;$888 = $$pre1174;$889 = $$pre1176;$897 = $873;
            label = 362;
            break;
           }
           $898 = (_fgetc($$pre$i1009)|0);
           $899 = ($898|0)==(-1);
           $$pre1177 = HEAP32[$6>>2]|0;
           $$op1329 = $898 << 8;
           $900 = $899 ? 0 : $$op1329;
           $901 = (($900) + ($885))|0;
           $902 = $901 << 16;
           $903 = (($873) + ($902))|0;
           $904 = ($$pre1177|0)==(0|0);
           if ($904) {
            $1629 = $903;
            label = 366;
            break;
           }
           $913 = (_fgetc($$pre1177)|0);
           $914 = ($913|0)==(-1);
           $915 = $914 ? 0 : $913;
           $$pre$i$i703 = HEAP32[$6>>2]|0;
           $916 = ($$pre$i$i703|0)==(0|0);
           if ($916) {
            $$phi$trans$insert$i705 = ((($0)) + 20|0);
            $$pre$i706 = HEAP32[$$phi$trans$insert$i705>>2]|0;
            $$phi$trans$insert3$i707 = ((($0)) + 24|0);
            $$pre4$i708 = HEAP32[$$phi$trans$insert3$i707>>2]|0;
            $$0$i6$i$i711 = $915;$$pre$phi$i710Z2D = $$phi$trans$insert$i705;$1630 = $903;$918 = $$pre$i706;$919 = $$pre4$i708;
            label = 370;
            break;
           }
           $925 = (_fgetc($$pre$i$i703)|0);
           $926 = ($925|0)==(-1);
           $$pre1178 = HEAP32[$6>>2]|0;
           $$op1330 = $925 << 8;
           $927 = $926 ? 0 : $$op1330;
           $928 = (($927) + ($915))|0;
           $929 = ($$pre1178|0)==(0|0);
           if ($929) {
            $1631 = $928;$1632 = $903;
            label = 374;
            break;
           }
           $938 = (_fgetc($$pre1178)|0);
           $939 = ($938|0)==(-1);
           $940 = $939 ? 0 : $938;
           $$pre$i1016 = HEAP32[$6>>2]|0;
           $941 = ($$pre$i1016|0)==(0|0);
           if ($941) {
            $$phi$trans$insert1179 = ((($0)) + 20|0);
            $$pre1180 = HEAP32[$$phi$trans$insert1179>>2]|0;
            $$phi$trans$insert1181 = ((($0)) + 24|0);
            $$pre1182 = HEAP32[$$phi$trans$insert1181>>2]|0;
            $$0$i6$i1018 = $940;$$pre$phi1299Z2D = $$phi$trans$insert1179;$1633 = $903;$943 = $$pre1180;$944 = $$pre1182;$952 = $928;
            label = 378;
            break;
           }
           $953 = (_fgetc($$pre$i1016)|0);
           $954 = ($953|0)==(-1);
           $$pre1183 = HEAP32[$6>>2]|0;
           $$op1331 = $953 << 8;
           $955 = $954 ? 0 : $$op1331;
           $956 = (($955) + ($940))|0;
           $957 = $956 << 16;
           $958 = (($928) + ($957))|0;
           $959 = ($$pre1183|0)==(0|0);
           if ($959) {
            $1634 = $958;$1635 = $903;
            label = 382;
            break;
           }
           $968 = (_fgetc($$pre1183)|0);
           $969 = ($968|0)==(-1);
           $970 = $969 ? 0 : $968;
           $$pre$i$i716 = HEAP32[$6>>2]|0;
           $971 = ($$pre$i$i716|0)==(0|0);
           if ($971) {
            $$phi$trans$insert$i718 = ((($0)) + 20|0);
            $$pre$i719 = HEAP32[$$phi$trans$insert$i718>>2]|0;
            $$phi$trans$insert3$i720 = ((($0)) + 24|0);
            $$pre4$i721 = HEAP32[$$phi$trans$insert3$i720>>2]|0;
            $$0$i6$i$i724 = $970;$$pre$phi$i723Z2D = $$phi$trans$insert$i718;$1636 = $958;$1637 = $903;$973 = $$pre$i719;$974 = $$pre4$i721;
            label = 386;
            break;
           }
           $980 = (_fgetc($$pre$i$i716)|0);
           $981 = ($980|0)==(-1);
           $$pre1184 = HEAP32[$6>>2]|0;
           $$op1332 = $980 << 8;
           $982 = $981 ? 0 : $$op1332;
           $983 = (($982) + ($970))|0;
           $984 = ($$pre1184|0)==(0|0);
           if ($984) {
            $1638 = $983;$1639 = $903;$1640 = $958;
            label = 390;
            break;
           }
           $993 = (_fgetc($$pre1184)|0);
           $994 = ($993|0)==(-1);
           $995 = $994 ? 0 : $993;
           $$pre$i825 = HEAP32[$6>>2]|0;
           $996 = ($$pre$i825|0)==(0|0);
           if ($996) {
            $$phi$trans$insert1185 = ((($0)) + 20|0);
            $$pre1186 = HEAP32[$$phi$trans$insert1185>>2]|0;
            $$phi$trans$insert1187 = ((($0)) + 24|0);
            $$pre1188 = HEAP32[$$phi$trans$insert1187>>2]|0;
            $$0$i6$i827 = $995;$$pre$phi1301Z2D = $$phi$trans$insert1185;$1007 = $983;$1641 = $903;$1642 = $958;$998 = $$pre1186;$999 = $$pre1188;
            label = 394;
            break;
           }
           $1008 = (_fgetc($$pre$i825)|0);
           $1009 = ($1008|0)==(-1);
           $$pre1189 = HEAP32[$6>>2]|0;
           $$op1333 = $1008 << 8;
           $1010 = $1009 ? 0 : $$op1333;
           $1011 = (($1010) + ($995))|0;
           $1012 = $1011 << 16;
           $1013 = (($983) + ($1012))|0;
           $1014 = ($$pre1189|0)==(0|0);
           if ($1014) {
            $1643 = $1013;$1644 = $958;$1645 = $903;
            label = 398;
            break;
           }
           $1023 = (_fgetc($$pre1189)|0);
           $1024 = ($1023|0)==(-1);
           $1025 = $1024 ? 0 : $1023;
           $$pre$i$i729 = HEAP32[$6>>2]|0;
           $1026 = ($$pre$i$i729|0)==(0|0);
           if ($1026) {
            $$phi$trans$insert$i731 = ((($0)) + 20|0);
            $$pre$i732 = HEAP32[$$phi$trans$insert$i731>>2]|0;
            $$phi$trans$insert3$i733 = ((($0)) + 24|0);
            $$pre4$i734 = HEAP32[$$phi$trans$insert3$i733>>2]|0;
            $$0$i6$i$i737 = $1025;$$pre$phi$i736Z2D = $$phi$trans$insert$i731;$1028 = $$pre$i732;$1029 = $$pre4$i734;$1646 = $1013;$1647 = $958;$1648 = $903;
            label = 402;
            break;
           }
           $1035 = (_fgetc($$pre$i$i729)|0);
           $1036 = ($1035|0)==(-1);
           $$pre1190 = HEAP32[$6>>2]|0;
           $$op1334 = $1035 << 8;
           $1037 = $1036 ? 0 : $$op1334;
           $1038 = (($1037) + ($1025))|0;
           $1039 = ($$pre1190|0)==(0|0);
           if ($1039) {
            $1649 = $1038;$1650 = $903;$1651 = $958;$1652 = $1013;
            label = 406;
            break;
           }
           $1048 = (_fgetc($$pre1190)|0);
           $1049 = ($1048|0)==(-1);
           $1050 = $1049 ? 0 : $1048;
           $$pre$i807 = HEAP32[$6>>2]|0;
           $1051 = ($$pre$i807|0)==(0|0);
           if ($1051) {
            $$phi$trans$insert1191 = ((($0)) + 20|0);
            $$pre1192 = HEAP32[$$phi$trans$insert1191>>2]|0;
            $$phi$trans$insert1193 = ((($0)) + 24|0);
            $$pre1194 = HEAP32[$$phi$trans$insert1193>>2]|0;
            $$0$i6$i809 = $1050;$$pre$phi1303Z2D = $$phi$trans$insert1191;$1053 = $$pre1192;$1054 = $$pre1194;$1062 = $1038;$1653 = $903;$1654 = $958;$1655 = $1013;
            label = 410;
            break;
           }
           $1063 = (_fgetc($$pre$i807)|0);
           $1064 = ($1063|0)==(-1);
           $$pre1195 = HEAP32[$6>>2]|0;
           $$op1335 = $1063 << 8;
           $1065 = $1064 ? 0 : $$op1335;
           $1066 = (($1065) + ($1050))|0;
           $1067 = $1066 << 16;
           $1068 = (($1038) + ($1067))|0;
           $1069 = ($$pre1195|0)==(0|0);
           if ($1069) {
            $1656 = $1068;$1657 = $1013;$1658 = $958;$1659 = $903;
            label = 414;
            break;
           }
           (_fgetc($$pre1195)|0);
           $$pre$i$i742 = HEAP32[$6>>2]|0;
           $1076 = ($$pre$i$i742|0)==(0|0);
           if ($1076) {
            $$phi$trans$insert$i744 = ((($0)) + 20|0);
            $$pre$i745 = HEAP32[$$phi$trans$insert$i744>>2]|0;
            $$phi$trans$insert3$i746 = ((($0)) + 24|0);
            $$pre4$i747 = HEAP32[$$phi$trans$insert3$i746>>2]|0;
            $$pre$phi$i749Z2D = $$phi$trans$insert$i744;$1078 = $$pre$i745;$1079 = $$pre4$i747;$1660 = $1068;$1661 = $1013;$1662 = $958;$1663 = $903;
            label = 418;
            break;
           }
           (_fgetc($$pre$i$i742)|0);
           $$pre1196 = HEAP32[$6>>2]|0;
           $1081 = ($$pre1196|0)==(0|0);
           if ($1081) {
            $1664 = $903;$1665 = $958;$1666 = $1013;$1667 = $1068;
            label = 421;
            break;
           }
           (_fgetc($$pre1196)|0);
           $$pre$i789 = HEAP32[$6>>2]|0;
           $1088 = ($$pre$i789|0)==(0|0);
           if ($1088) {
            $$phi$trans$insert1197 = ((($0)) + 20|0);
            $$pre1198 = HEAP32[$$phi$trans$insert1197>>2]|0;
            $$phi$trans$insert1199 = ((($0)) + 24|0);
            $$pre1200 = HEAP32[$$phi$trans$insert1199>>2]|0;
            $$pre$phi1305Z2D = $$phi$trans$insert1197;$$pre$phi1306Z2D = $$phi$trans$insert1199;$1090 = $$pre1198;$1091 = $$pre1200;$1668 = $903;$1669 = $958;$1670 = $1013;$1671 = $1068;
            label = 426;
            break;
           } else {
            (_fgetc($$pre$i789)|0);
            $$pre1307 = ((($0)) + 20|0);
            $$pre1309 = ((($0)) + 24|0);
            $$pre$phi1308Z2D = $$pre1307;$$pre$phi1310Z2D = $$pre1309;$1672 = $903;$1673 = $958;$1674 = $1013;$1675 = $1068;
            break;
           }
          }
         } while(0);
         if ((label|0) == 354) {
          $862 = ($863>>>0)<($864>>>0);
          if ($862) {
           $865 = ((($863)) + 1|0);
           HEAP32[$$pre$phi$i697Z2D>>2] = $865;
           $866 = HEAP8[$863>>0]|0;
           $867 = $866&255;
           $$0$i3$i$i701$ph = $867;
          } else {
           $$0$i3$i$i701$ph = 0;
          }
          $868 = $$0$i3$i$i701$ph << 8;
          $869 = (($868) + ($$0$i6$i$i698))|0;
          $1628 = $869;
          label = 358;
         }
         do {
          if ((label|0) == 358) {
           $875 = ((($0)) + 20|0);
           $876 = HEAP32[$875>>2]|0;
           $877 = ((($0)) + 24|0);
           $878 = HEAP32[$877>>2]|0;
           $879 = ($876>>>0)<($878>>>0);
           if (!($879)) {
            $$0$i6$i1011 = 0;$$pre$phi1297Z2D = $875;$888 = $876;$889 = $878;$897 = $1628;
            label = 362;
            break;
           }
           $880 = ((($876)) + 1|0);
           HEAP32[$875>>2] = $880;
           $881 = HEAP8[$876>>0]|0;
           $882 = $881&255;
           $$0$i6$i1011 = $882;$$pre$phi1297Z2D = $875;$888 = $880;$889 = $878;$897 = $1628;
           label = 362;
          }
         } while(0);
         if ((label|0) == 362) {
          $887 = ($888>>>0)<($889>>>0);
          if ($887) {
           $890 = ((($888)) + 1|0);
           HEAP32[$$pre$phi1297Z2D>>2] = $890;
           $891 = HEAP8[$888>>0]|0;
           $892 = $891&255;
           $$0$i3$i1014$ph = $892;
          } else {
           $$0$i3$i1014$ph = 0;
          }
          $893 = $$0$i3$i1014$ph << 8;
          $894 = (($893) + ($$0$i6$i1011))|0;
          $895 = $894 << 16;
          $896 = (($897) + ($895))|0;
          $1629 = $896;
          label = 366;
         }
         do {
          if ((label|0) == 366) {
           $905 = ((($0)) + 20|0);
           $906 = HEAP32[$905>>2]|0;
           $907 = ((($0)) + 24|0);
           $908 = HEAP32[$907>>2]|0;
           $909 = ($906>>>0)<($908>>>0);
           if (!($909)) {
            $$0$i6$i$i711 = 0;$$pre$phi$i710Z2D = $905;$1630 = $1629;$918 = $906;$919 = $908;
            label = 370;
            break;
           }
           $910 = ((($906)) + 1|0);
           HEAP32[$905>>2] = $910;
           $911 = HEAP8[$906>>0]|0;
           $912 = $911&255;
           $$0$i6$i$i711 = $912;$$pre$phi$i710Z2D = $905;$1630 = $1629;$918 = $910;$919 = $908;
           label = 370;
          }
         } while(0);
         if ((label|0) == 370) {
          $917 = ($918>>>0)<($919>>>0);
          if ($917) {
           $920 = ((($918)) + 1|0);
           HEAP32[$$pre$phi$i710Z2D>>2] = $920;
           $921 = HEAP8[$918>>0]|0;
           $922 = $921&255;
           $$0$i3$i$i714$ph = $922;
          } else {
           $$0$i3$i$i714$ph = 0;
          }
          $923 = $$0$i3$i$i714$ph << 8;
          $924 = (($923) + ($$0$i6$i$i711))|0;
          $1631 = $924;$1632 = $1630;
          label = 374;
         }
         do {
          if ((label|0) == 374) {
           $930 = ((($0)) + 20|0);
           $931 = HEAP32[$930>>2]|0;
           $932 = ((($0)) + 24|0);
           $933 = HEAP32[$932>>2]|0;
           $934 = ($931>>>0)<($933>>>0);
           if (!($934)) {
            $$0$i6$i1018 = 0;$$pre$phi1299Z2D = $930;$1633 = $1632;$943 = $931;$944 = $933;$952 = $1631;
            label = 378;
            break;
           }
           $935 = ((($931)) + 1|0);
           HEAP32[$930>>2] = $935;
           $936 = HEAP8[$931>>0]|0;
           $937 = $936&255;
           $$0$i6$i1018 = $937;$$pre$phi1299Z2D = $930;$1633 = $1632;$943 = $935;$944 = $933;$952 = $1631;
           label = 378;
          }
         } while(0);
         if ((label|0) == 378) {
          $942 = ($943>>>0)<($944>>>0);
          if ($942) {
           $945 = ((($943)) + 1|0);
           HEAP32[$$pre$phi1299Z2D>>2] = $945;
           $946 = HEAP8[$943>>0]|0;
           $947 = $946&255;
           $$0$i3$i1021$ph = $947;
          } else {
           $$0$i3$i1021$ph = 0;
          }
          $948 = $$0$i3$i1021$ph << 8;
          $949 = (($948) + ($$0$i6$i1018))|0;
          $950 = $949 << 16;
          $951 = (($952) + ($950))|0;
          $1634 = $951;$1635 = $1633;
          label = 382;
         }
         do {
          if ((label|0) == 382) {
           $960 = ((($0)) + 20|0);
           $961 = HEAP32[$960>>2]|0;
           $962 = ((($0)) + 24|0);
           $963 = HEAP32[$962>>2]|0;
           $964 = ($961>>>0)<($963>>>0);
           if (!($964)) {
            $$0$i6$i$i724 = 0;$$pre$phi$i723Z2D = $960;$1636 = $1634;$1637 = $1635;$973 = $961;$974 = $963;
            label = 386;
            break;
           }
           $965 = ((($961)) + 1|0);
           HEAP32[$960>>2] = $965;
           $966 = HEAP8[$961>>0]|0;
           $967 = $966&255;
           $$0$i6$i$i724 = $967;$$pre$phi$i723Z2D = $960;$1636 = $1634;$1637 = $1635;$973 = $965;$974 = $963;
           label = 386;
          }
         } while(0);
         if ((label|0) == 386) {
          $972 = ($973>>>0)<($974>>>0);
          if ($972) {
           $975 = ((($973)) + 1|0);
           HEAP32[$$pre$phi$i723Z2D>>2] = $975;
           $976 = HEAP8[$973>>0]|0;
           $977 = $976&255;
           $$0$i3$i$i727$ph = $977;
          } else {
           $$0$i3$i$i727$ph = 0;
          }
          $978 = $$0$i3$i$i727$ph << 8;
          $979 = (($978) + ($$0$i6$i$i724))|0;
          $1638 = $979;$1639 = $1637;$1640 = $1636;
          label = 390;
         }
         do {
          if ((label|0) == 390) {
           $985 = ((($0)) + 20|0);
           $986 = HEAP32[$985>>2]|0;
           $987 = ((($0)) + 24|0);
           $988 = HEAP32[$987>>2]|0;
           $989 = ($986>>>0)<($988>>>0);
           if (!($989)) {
            $$0$i6$i827 = 0;$$pre$phi1301Z2D = $985;$1007 = $1638;$1641 = $1639;$1642 = $1640;$998 = $986;$999 = $988;
            label = 394;
            break;
           }
           $990 = ((($986)) + 1|0);
           HEAP32[$985>>2] = $990;
           $991 = HEAP8[$986>>0]|0;
           $992 = $991&255;
           $$0$i6$i827 = $992;$$pre$phi1301Z2D = $985;$1007 = $1638;$1641 = $1639;$1642 = $1640;$998 = $990;$999 = $988;
           label = 394;
          }
         } while(0);
         if ((label|0) == 394) {
          $997 = ($998>>>0)<($999>>>0);
          if ($997) {
           $1000 = ((($998)) + 1|0);
           HEAP32[$$pre$phi1301Z2D>>2] = $1000;
           $1001 = HEAP8[$998>>0]|0;
           $1002 = $1001&255;
           $$0$i3$i830$ph = $1002;
          } else {
           $$0$i3$i830$ph = 0;
          }
          $1003 = $$0$i3$i830$ph << 8;
          $1004 = (($1003) + ($$0$i6$i827))|0;
          $1005 = $1004 << 16;
          $1006 = (($1007) + ($1005))|0;
          $1643 = $1006;$1644 = $1642;$1645 = $1641;
          label = 398;
         }
         do {
          if ((label|0) == 398) {
           $1015 = ((($0)) + 20|0);
           $1016 = HEAP32[$1015>>2]|0;
           $1017 = ((($0)) + 24|0);
           $1018 = HEAP32[$1017>>2]|0;
           $1019 = ($1016>>>0)<($1018>>>0);
           if (!($1019)) {
            $$0$i6$i$i737 = 0;$$pre$phi$i736Z2D = $1015;$1028 = $1016;$1029 = $1018;$1646 = $1643;$1647 = $1644;$1648 = $1645;
            label = 402;
            break;
           }
           $1020 = ((($1016)) + 1|0);
           HEAP32[$1015>>2] = $1020;
           $1021 = HEAP8[$1016>>0]|0;
           $1022 = $1021&255;
           $$0$i6$i$i737 = $1022;$$pre$phi$i736Z2D = $1015;$1028 = $1020;$1029 = $1018;$1646 = $1643;$1647 = $1644;$1648 = $1645;
           label = 402;
          }
         } while(0);
         if ((label|0) == 402) {
          $1027 = ($1028>>>0)<($1029>>>0);
          if ($1027) {
           $1030 = ((($1028)) + 1|0);
           HEAP32[$$pre$phi$i736Z2D>>2] = $1030;
           $1031 = HEAP8[$1028>>0]|0;
           $1032 = $1031&255;
           $$0$i3$i$i740$ph = $1032;
          } else {
           $$0$i3$i$i740$ph = 0;
          }
          $1033 = $$0$i3$i$i740$ph << 8;
          $1034 = (($1033) + ($$0$i6$i$i737))|0;
          $1649 = $1034;$1650 = $1648;$1651 = $1647;$1652 = $1646;
          label = 406;
         }
         do {
          if ((label|0) == 406) {
           $1040 = ((($0)) + 20|0);
           $1041 = HEAP32[$1040>>2]|0;
           $1042 = ((($0)) + 24|0);
           $1043 = HEAP32[$1042>>2]|0;
           $1044 = ($1041>>>0)<($1043>>>0);
           if (!($1044)) {
            $$0$i6$i809 = 0;$$pre$phi1303Z2D = $1040;$1053 = $1041;$1054 = $1043;$1062 = $1649;$1653 = $1650;$1654 = $1651;$1655 = $1652;
            label = 410;
            break;
           }
           $1045 = ((($1041)) + 1|0);
           HEAP32[$1040>>2] = $1045;
           $1046 = HEAP8[$1041>>0]|0;
           $1047 = $1046&255;
           $$0$i6$i809 = $1047;$$pre$phi1303Z2D = $1040;$1053 = $1045;$1054 = $1043;$1062 = $1649;$1653 = $1650;$1654 = $1651;$1655 = $1652;
           label = 410;
          }
         } while(0);
         if ((label|0) == 410) {
          $1052 = ($1053>>>0)<($1054>>>0);
          if ($1052) {
           $1055 = ((($1053)) + 1|0);
           HEAP32[$$pre$phi1303Z2D>>2] = $1055;
           $1056 = HEAP8[$1053>>0]|0;
           $1057 = $1056&255;
           $$0$i3$i812$ph = $1057;
          } else {
           $$0$i3$i812$ph = 0;
          }
          $1058 = $$0$i3$i812$ph << 8;
          $1059 = (($1058) + ($$0$i6$i809))|0;
          $1060 = $1059 << 16;
          $1061 = (($1062) + ($1060))|0;
          $1656 = $1061;$1657 = $1655;$1658 = $1654;$1659 = $1653;
          label = 414;
         }
         do {
          if ((label|0) == 414) {
           $1070 = ((($0)) + 20|0);
           $1071 = HEAP32[$1070>>2]|0;
           $1072 = ((($0)) + 24|0);
           $1073 = HEAP32[$1072>>2]|0;
           $1074 = ($1071>>>0)<($1073>>>0);
           if (!($1074)) {
            $$pre$phi$i749Z2D = $1070;$1078 = $1071;$1079 = $1073;$1660 = $1656;$1661 = $1657;$1662 = $1658;$1663 = $1659;
            label = 418;
            break;
           }
           $1075 = ((($1071)) + 1|0);
           HEAP32[$1070>>2] = $1075;
           $$pre$phi$i749Z2D = $1070;$1078 = $1075;$1079 = $1073;$1660 = $1656;$1661 = $1657;$1662 = $1658;$1663 = $1659;
           label = 418;
          }
         } while(0);
         do {
          if ((label|0) == 418) {
           $1077 = ($1078>>>0)<($1079>>>0);
           if (!($1077)) {
            $1664 = $1663;$1665 = $1662;$1666 = $1661;$1667 = $1660;
            label = 421;
            break;
           }
           $1080 = ((($1078)) + 1|0);
           HEAP32[$$pre$phi$i749Z2D>>2] = $1080;
           $1664 = $1663;$1665 = $1662;$1666 = $1661;$1667 = $1660;
           label = 421;
          }
         } while(0);
         do {
          if ((label|0) == 421) {
           $1082 = ((($0)) + 20|0);
           $1083 = HEAP32[$1082>>2]|0;
           $1084 = ((($0)) + 24|0);
           $1085 = HEAP32[$1084>>2]|0;
           $1086 = ($1083>>>0)<($1085>>>0);
           if (!($1086)) {
            $$pre$phi1305Z2D = $1082;$$pre$phi1306Z2D = $1084;$1090 = $1083;$1091 = $1085;$1668 = $1664;$1669 = $1665;$1670 = $1666;$1671 = $1667;
            label = 426;
            break;
           }
           $1087 = ((($1083)) + 1|0);
           HEAP32[$1082>>2] = $1087;
           $$pre$phi1305Z2D = $1082;$$pre$phi1306Z2D = $1084;$1090 = $1087;$1091 = $1085;$1668 = $1664;$1669 = $1665;$1670 = $1666;$1671 = $1667;
           label = 426;
          }
         } while(0);
         do {
          if ((label|0) == 426) {
           $1089 = ($1090>>>0)<($1091>>>0);
           if (!($1089)) {
            $$pre$phi1308Z2D = $$pre$phi1305Z2D;$$pre$phi1310Z2D = $$pre$phi1306Z2D;$1672 = $1668;$1673 = $1669;$1674 = $1670;$1675 = $1671;
            break;
           }
           $1092 = ((($1090)) + 1|0);
           HEAP32[$$pre$phi1305Z2D>>2] = $1092;
           $$pre$phi1308Z2D = $$pre$phi1305Z2D;$$pre$phi1310Z2D = $$pre$phi1306Z2D;$1672 = $1668;$1673 = $1669;$1674 = $1670;$1675 = $1671;
          }
         } while(0);
         $$03991076 = 0;
         while(1) {
          $1093 = HEAP32[$6>>2]|0;
          $1094 = ($1093|0)==(0|0);
          do {
           if ($1094) {
            $1095 = HEAP32[$$pre$phi1308Z2D>>2]|0;
            $1096 = HEAP32[$$pre$phi1310Z2D>>2]|0;
            $1097 = ($1095>>>0)<($1096>>>0);
            if (!($1097)) {
             $1101 = $1095;$1102 = $1096;
             label = 434;
             break;
            }
            $1098 = ((($1095)) + 1|0);
            HEAP32[$$pre$phi1308Z2D>>2] = $1098;
            $1101 = $1098;$1102 = $1096;
            label = 434;
           } else {
            (_fgetc($1093)|0);
            $$pre$i$i755 = HEAP32[$6>>2]|0;
            $1099 = ($$pre$i$i755|0)==(0|0);
            if ($1099) {
             $$pre$i758 = HEAP32[$$pre$phi1308Z2D>>2]|0;
             $$pre4$i760 = HEAP32[$$pre$phi1310Z2D>>2]|0;
             $1101 = $$pre$i758;$1102 = $$pre4$i760;
             label = 434;
             break;
            }
            (_fgetc($$pre$i$i755)|0);
            $$pre1201 = HEAP32[$6>>2]|0;
            $1104 = ($$pre1201|0)==(0|0);
            if ($1104) {
             label = 437;
             break;
            }
            (_fgetc($$pre1201)|0);
            $$pre$i768 = HEAP32[$6>>2]|0;
            $1109 = ($$pre$i768|0)==(0|0);
            if ($1109) {
             $$pre1202 = HEAP32[$$pre$phi1308Z2D>>2]|0;
             $$pre1203 = HEAP32[$$pre$phi1310Z2D>>2]|0;
             $1111 = $$pre1202;$1112 = $$pre1203;
             label = 442;
             break;
            } else {
             (_fgetc($$pre$i768)|0);
             break;
            }
           }
          } while(0);
          do {
           if ((label|0) == 434) {
            label = 0;
            $1100 = ($1101>>>0)<($1102>>>0);
            if (!($1100)) {
             label = 437;
             break;
            }
            $1103 = ((($1101)) + 1|0);
            HEAP32[$$pre$phi1308Z2D>>2] = $1103;
            label = 437;
           }
          } while(0);
          do {
           if ((label|0) == 437) {
            label = 0;
            $1105 = HEAP32[$$pre$phi1308Z2D>>2]|0;
            $1106 = HEAP32[$$pre$phi1310Z2D>>2]|0;
            $1107 = ($1105>>>0)<($1106>>>0);
            if (!($1107)) {
             $1111 = $1105;$1112 = $1106;
             label = 442;
             break;
            }
            $1108 = ((($1105)) + 1|0);
            HEAP32[$$pre$phi1308Z2D>>2] = $1108;
            $1111 = $1108;$1112 = $1106;
            label = 442;
           }
          } while(0);
          do {
           if ((label|0) == 442) {
            label = 0;
            $1110 = ($1111>>>0)<($1112>>>0);
            if (!($1110)) {
             break;
            }
            $1113 = ((($1111)) + 1|0);
            HEAP32[$$pre$phi1308Z2D>>2] = $1113;
           }
          } while(0);
          $1114 = (($$03991076) + 1)|0;
          $exitcond1084 = ($1114|0)==(12);
          if ($exitcond1084) {
           $$0367 = $1672;$$0369 = $1673;$$0371 = $1674;$$0373 = $1675;
           break;
          } else {
           $$03991076 = $1114;
          }
         }
        }
       } while(0);
       $1115 = ($393|0)<(16);
       $1116 = (($401) + -14)|0;
       $1117 = (($1116) - ($187))|0;
       $1118 = $1117 >> 2;
       $spec$select = $1115 ? $1118 : 0;
       $$0398 = $spec$select;$$1368 = $$0367;$$1370 = $$0369;$$1372 = $$0371;$$1374 = $$0373;
      }
     } while(0);
     $1119 = ($$1374|0)!=(0);
     $1120 = $1119 ? 4 : 3;
     $1121 = ((($0)) + 8|0);
     HEAP32[$1121>>2] = $1120;
     $1122 = ($4|0)==(0);
     $1123 = ($4|0)>(2);
     $$413 = $1123 ? $4 : $1120;
     $1124 = HEAP32[$0>>2]|0;
     $1125 = Math_imul($1124, $$413)|0;
     $1126 = HEAP32[$395>>2]|0;
     $1127 = Math_imul($1125, $1126)|0;
     $1128 = (_malloc($1127)|0);
     $1129 = ($1128|0)==(0|0);
     if ($1129) {
      HEAP32[36596] = 121182;
      $$2 = 0;
      STACKTOP = sp;return ($$2|0);
     }
     $1130 = ($393|0)<(16);
     L650: do {
      if ($1130) {
       $1131 = ($$0398|0)==(0);
       $1132 = ($$0398|0)>(256);
       $or$cond16 = $1131 | $1132;
       if ($or$cond16) {
        _free($1128);
        HEAP32[36596] = 121560;
        $$2 = 0;
        STACKTOP = sp;return ($$2|0);
       }
       $1133 = ($$0398|0)>(0);
       if ($1133) {
        $1134 = ((($0)) + 20|0);
        $1135 = ((($0)) + 24|0);
        $$14001059 = 0;
        while(1) {
         $1136 = HEAP32[$6>>2]|0;
         $1137 = ($1136|0)==(0|0);
         do {
          if ($1137) {
           $1138 = HEAP32[$1134>>2]|0;
           $1139 = HEAP32[$1135>>2]|0;
           $1140 = ($1138>>>0)<($1139>>>0);
           if ($1140) {
            $1141 = ((($1138)) + 1|0);
            HEAP32[$1134>>2] = $1141;
            $1142 = HEAP8[$1138>>0]|0;
            $1143 = $1142&255;
            $$0$i775$ph = $1143;
           } else {
            $$0$i775$ph = 0;
           }
           $1144 = $$0$i775$ph&255;
           $1145 = (((($5) + ($$14001059<<2)|0)) + 2|0);
           HEAP8[$1145>>0] = $1144;
           label = 458;
          } else {
           $1146 = (_fgetc($1136)|0);
           $1147 = ($1146|0)==(-1);
           $$pre1251 = HEAP32[$6>>2]|0;
           $1148 = $1146&255;
           $1149 = $1147 ? 0 : $1148;
           $1150 = (((($5) + ($$14001059<<2)|0)) + 2|0);
           HEAP8[$1150>>0] = $1149;
           $1151 = ($$pre1251|0)==(0|0);
           if ($1151) {
            label = 458;
            break;
           }
           $1160 = (_fgetc($$pre1251)|0);
           $1161 = ($1160|0)==(-1);
           $$pre1252 = HEAP32[$6>>2]|0;
           $1162 = $1160&255;
           $1163 = $1161 ? 0 : $1162;
           $1164 = (((($5) + ($$14001059<<2)|0)) + 1|0);
           HEAP8[$1164>>0] = $1163;
           $1165 = ($$pre1252|0)==(0|0);
           if ($1165) {
            label = 463;
            break;
           }
           $1166 = (_fgetc($$pre1252)|0);
           $1167 = ($1166|0)==(-1);
           $1168 = $1167 ? 0 : $1166;
           $$0$i779 = $1168;
          }
         } while(0);
         if ((label|0) == 458) {
          label = 0;
          $1152 = HEAP32[$1134>>2]|0;
          $1153 = HEAP32[$1135>>2]|0;
          $1154 = ($1152>>>0)<($1153>>>0);
          if ($1154) {
           $1155 = ((($1152)) + 1|0);
           HEAP32[$1134>>2] = $1155;
           $1156 = HEAP8[$1152>>0]|0;
           $1157 = $1156&255;
           $$0$i777$ph = $1157;
          } else {
           $$0$i777$ph = 0;
          }
          $1158 = $$0$i777$ph&255;
          $1159 = (((($5) + ($$14001059<<2)|0)) + 1|0);
          HEAP8[$1159>>0] = $1158;
          label = 463;
         }
         do {
          if ((label|0) == 463) {
           label = 0;
           $1169 = HEAP32[$1134>>2]|0;
           $1170 = HEAP32[$1135>>2]|0;
           $1171 = ($1169>>>0)<($1170>>>0);
           if (!($1171)) {
            $$0$i779 = 0;
            break;
           }
           $1172 = ((($1169)) + 1|0);
           HEAP32[$1134>>2] = $1172;
           $1173 = HEAP8[$1169>>0]|0;
           $1174 = $1173&255;
           $$0$i779 = $1174;
          }
         } while(0);
         $1175 = $$0$i779&255;
         $1176 = (($5) + ($$14001059<<2)|0);
         HEAP8[$1176>>0] = $1175;
         do {
          if (!($189)) {
           $1177 = HEAP32[$6>>2]|0;
           $1178 = ($1177|0)==(0|0);
           if (!($1178)) {
            (_fgetc($1177)|0);
            break;
           }
           $1179 = HEAP32[$1134>>2]|0;
           $1180 = HEAP32[$1135>>2]|0;
           $1181 = ($1179>>>0)<($1180>>>0);
           if (!($1181)) {
            break;
           }
           $1182 = ((($1179)) + 1|0);
           HEAP32[$1134>>2] = $1182;
          }
         } while(0);
         $1183 = (((($5) + ($$14001059<<2)|0)) + 3|0);
         HEAP8[$1183>>0] = -1;
         $1184 = (($$14001059) + 1)|0;
         $exitcond1083 = ($1184|0)==($$0398|0);
         if ($exitcond1083) {
          break;
         } else {
          $$14001059 = $1184;
         }
        }
       }
       $1185 = (($401) + -14)|0;
       $1186 = (($1185) - ($187))|0;
       $1187 = $189 ? 3 : 4;
       $1188 = Math_imul($$0398, $1187)|0;
       $1189 = (($1186) - ($1188))|0;
       $1190 = HEAP32[$6>>2]|0;
       $1191 = ($1190|0)==(0|0);
       if ($1191) {
        $1192 = ((($0)) + 20|0);
        $1193 = HEAP32[$1192>>2]|0;
        $1194 = (($1193) + ($1189)|0);
        HEAP32[$1192>>2] = $1194;
       } else {
        (_fseek($1190,$1189,1)|0);
       }
       $1195 = ($393|0)==(4);
       do {
        if ($1195) {
         $1196 = HEAP32[$0>>2]|0;
         $1197 = (($1196) + 1)|0;
         $1198 = $1197 >>> 1;
         $$0409 = $1198;$1676 = $1196;
        } else {
         $1199 = ($393|0)==(8);
         if ($1199) {
          $1200 = HEAP32[$0>>2]|0;
          $$0409 = $1200;$1676 = $1200;
          break;
         }
         _free($1128);
         HEAP32[36596] = 121560;
         $$2 = 0;
         STACKTOP = sp;return ($$2|0);
        }
       } while(0);
       $1201 = (0 - ($$0409))|0;
       $1202 = $1201 & 3;
       $1203 = HEAP32[$395>>2]|0;
       $1204 = ($1203|0)>(0);
       if ($1204) {
        $1205 = ((($0)) + 20|0);
        $1206 = ((($0)) + 24|0);
        $1207 = ($$413|0)==(4);
        $1208 = ($393|0)==(8);
        $$03891056 = 0;$$04061055 = 0;$1210 = $1676;
        while(1) {
         $1209 = ($1210|0)>(0);
         L700: do {
          if ($1209) {
           $$13901049 = $$03891056;$$24011048 = 0;
           while(1) {
            $1211 = HEAP32[$6>>2]|0;
            $1212 = ($1211|0)==(0|0);
            do {
             if ($1212) {
              $1216 = HEAP32[$1205>>2]|0;
              $1217 = HEAP32[$1206>>2]|0;
              $1218 = ($1216>>>0)<($1217>>>0);
              if (!($1218)) {
               $$0$i783 = 0;
               break;
              }
              $1219 = ((($1216)) + 1|0);
              HEAP32[$1205>>2] = $1219;
              $1220 = HEAP8[$1216>>0]|0;
              $1221 = $1220&255;
              $$0$i783 = $1221;
             } else {
              $1213 = (_fgetc($1211)|0);
              $1214 = ($1213|0)==(-1);
              $1215 = $1214 ? 0 : $1213;
              $$0$i783 = $1215;
             }
            } while(0);
            $1222 = $$0$i783 & 15;
            $1223 = $$0$i783 >> 4;
            $$0388 = $1195 ? $1223 : $$0$i783;
            $$0387 = $1195 ? $1222 : 0;
            $1224 = (($5) + ($$0388<<2)|0);
            $1225 = HEAP8[$1224>>0]|0;
            $1226 = (($$13901049) + 1)|0;
            $1227 = (($1128) + ($$13901049)|0);
            HEAP8[$1227>>0] = $1225;
            $1228 = (((($5) + ($$0388<<2)|0)) + 1|0);
            $1229 = HEAP8[$1228>>0]|0;
            $1230 = (($$13901049) + 2)|0;
            $1231 = (($1128) + ($1226)|0);
            HEAP8[$1231>>0] = $1229;
            $1232 = (((($5) + ($$0388<<2)|0)) + 2|0);
            $1233 = HEAP8[$1232>>0]|0;
            $1234 = (($$13901049) + 3)|0;
            $1235 = (($1128) + ($1230)|0);
            HEAP8[$1235>>0] = $1233;
            if ($1207) {
             $1236 = (($1128) + ($1234)|0);
             $1237 = (($$13901049) + 4)|0;
             HEAP8[$1236>>0] = -1;
             $$2391 = $1237;
            } else {
             $$2391 = $1234;
            }
            $1238 = $$24011048 | 1;
            $1239 = HEAP32[$0>>2]|0;
            $1240 = ($1238|0)==($1239|0);
            if ($1240) {
             $$5394 = $$2391;
             break L700;
            }
            do {
             if ($1208) {
              $1241 = HEAP32[$6>>2]|0;
              $1242 = ($1241|0)==(0|0);
              if (!($1242)) {
               $1243 = (_fgetc($1241)|0);
               $1244 = ($1243|0)==(-1);
               $1245 = $1244 ? 0 : $1243;
               $1253 = $1245;
               break;
              }
              $1246 = HEAP32[$1205>>2]|0;
              $1247 = HEAP32[$1206>>2]|0;
              $1248 = ($1246>>>0)<($1247>>>0);
              if (!($1248)) {
               $1253 = 0;
               break;
              }
              $1249 = ((($1246)) + 1|0);
              HEAP32[$1205>>2] = $1249;
              $1250 = HEAP8[$1246>>0]|0;
              $1251 = $1250&255;
              $1253 = $1251;
             } else {
              $1253 = $$0387;
             }
            } while(0);
            $1252 = (($5) + ($1253<<2)|0);
            $1254 = HEAP8[$1252>>0]|0;
            $1255 = (($$2391) + 1)|0;
            $1256 = (($1128) + ($$2391)|0);
            HEAP8[$1256>>0] = $1254;
            $1257 = (((($5) + ($1253<<2)|0)) + 1|0);
            $1258 = HEAP8[$1257>>0]|0;
            $1259 = (($$2391) + 2)|0;
            $1260 = (($1128) + ($1255)|0);
            HEAP8[$1260>>0] = $1258;
            $1261 = (((($5) + ($1253<<2)|0)) + 2|0);
            $1262 = HEAP8[$1261>>0]|0;
            $1263 = (($$2391) + 3)|0;
            $1264 = (($1128) + ($1259)|0);
            HEAP8[$1264>>0] = $1262;
            if ($1207) {
             $1265 = (($1128) + ($1263)|0);
             $1266 = (($$2391) + 4)|0;
             HEAP8[$1265>>0] = -1;
             $$4393$ph = $1266;
            } else {
             $$4393$ph = $1263;
            }
            $1267 = (($$24011048) + 2)|0;
            $1268 = HEAP32[$0>>2]|0;
            $1269 = ($1267|0)<($1268|0);
            if ($1269) {
             $$13901049 = $$4393$ph;$$24011048 = $1267;
            } else {
             $$5394 = $$4393$ph;
             break;
            }
           }
          } else {
           $$5394 = $$03891056;
          }
         } while(0);
         $1270 = HEAP32[$6>>2]|0;
         $1271 = ($1270|0)==(0|0);
         if ($1271) {
          $1272 = HEAP32[$1205>>2]|0;
          $1273 = (($1272) + ($1202)|0);
          HEAP32[$1205>>2] = $1273;
         } else {
          (_fseek($1270,$1202,1)|0);
         }
         $1274 = (($$04061055) + 1)|0;
         $1275 = HEAP32[$395>>2]|0;
         $1276 = ($1274|0)<($1275|0);
         if (!($1276)) {
          $1573 = $1275;
          break L650;
         }
         $$pre1253 = HEAP32[$0>>2]|0;
         $$03891056 = $$5394;$$04061055 = $1274;$1210 = $$pre1253;
        }
       } else {
        $1573 = $1203;
       }
      } else {
       $1277 = (($401) + -14)|0;
       $1278 = (($1277) - ($187))|0;
       $1279 = HEAP32[$6>>2]|0;
       $1280 = ($1279|0)==(0|0);
       if ($1280) {
        $1281 = ((($0)) + 20|0);
        $1282 = HEAP32[$1281>>2]|0;
        $1283 = (($1282) + ($1278)|0);
        HEAP32[$1281>>2] = $1283;
       } else {
        (_fseek($1279,$1278,1)|0);
       }
       switch ($393|0) {
       case 24:  {
        $1288 = HEAP32[$0>>2]|0;
        $1289 = Math_imul($1288, -3)|0;
        $1290 = $1289 & 3;
        $$03751034 = 1;$$0382 = 0;$$0383 = 0;$$0384 = 0;$$0385 = 0;$$0386 = 0;$1566 = $1290;$1677 = 1;
        break;
       }
       case 16:  {
        $1284 = HEAP32[$0>>2]|0;
        $1285 = $1284 << 1;
        $1286 = (0 - ($1285))|0;
        $1287 = $1286 & 2;
        $$ph = $1287;
        label = 510;
        break;
       }
       case 32:  {
        $1291 = ($$1372|0)==(255);
        $1292 = ($$1370|0)==(65280);
        $or$cond18 = $1291 & $1292;
        $1293 = ($$1368|0)==(-16777216);
        $or$cond20 = $or$cond18 & $1293;
        $1294 = ($$1374|0)==(-16777216);
        $or$cond22 = $1294 & $or$cond20;
        if ($or$cond22) {
         $$03751034 = 2;$$0382 = 0;$$0383 = 0;$$0384 = 0;$$0385 = 0;$$0386 = 0;$1566 = 0;$1677 = 1;
        } else {
         $$ph = 0;
         label = 510;
        }
        break;
       }
       default: {
        $$ph = 0;
        label = 510;
       }
       }
       do {
        if ((label|0) == 510) {
         $1295 = ($$1368|0)!=(0);
         $1296 = ($$1370|0)!=(0);
         $or$cond24 = $1296 & $1295;
         $1297 = ($$1372|0)!=(0);
         $or$cond26 = $1297 & $or$cond24;
         if ($or$cond26) {
          $1298 = ($$1368>>>0)>(65535);
          $1299 = $$1368 >>> 16;
          $spec$select$i = $1298 ? $1299 : $$1368;
          $spec$select24$i = $1298 ? 16 : 0;
          $1300 = ($spec$select$i>>>0)>(255);
          $1301 = $spec$select24$i | 8;
          $1302 = $spec$select$i >>> 8;
          $$120$i = $1300 ? $1302 : $spec$select$i;
          $$1$i = $1300 ? $1301 : $spec$select24$i;
          $1303 = ($$120$i>>>0)>(15);
          $1304 = $$1$i | 4;
          $1305 = $$120$i >>> 4;
          $$221$i = $1303 ? $1305 : $$120$i;
          $$2$i = $1303 ? $1304 : $$1$i;
          $1306 = ($$221$i>>>0)>(3);
          $1307 = $$2$i | 2;
          $1308 = $$221$i >>> 2;
          $$322$i = $1306 ? $1308 : $$221$i;
          $$3$i = $1306 ? $1307 : $$2$i;
          $1309 = ($$322$i>>>0)>(1);
          $1310 = $1309&1;
          $spec$select25$i = (($$3$i) + -7)|0;
          $1311 = (($spec$select25$i) + ($1310))|0;
          $1312 = $$1368 & 1431655765;
          $1313 = $$1368 >>> 1;
          $1314 = $1313 & 1431655765;
          $1315 = (($1314) + ($1312))|0;
          $1316 = $1315 & 858993459;
          $1317 = $1315 >>> 2;
          $1318 = $1317 & 858993459;
          $1319 = (($1318) + ($1316))|0;
          $1320 = $1319 >>> 4;
          $1321 = (($1320) + ($1319))|0;
          $1322 = $1321 & 252645135;
          $1323 = $1322 >>> 8;
          $1324 = (($1323) + ($1322))|0;
          $1325 = $1324 >>> 16;
          $1326 = (($1325) + ($1324))|0;
          $1327 = $1326 & 63;
          $1328 = ($$1370>>>0)>(65535);
          $1329 = $$1370 >>> 16;
          $spec$select$i796 = $1328 ? $1329 : $$1370;
          $spec$select24$i797 = $1328 ? 16 : 0;
          $1330 = ($spec$select$i796>>>0)>(255);
          $1331 = $spec$select24$i797 | 8;
          $1332 = $spec$select$i796 >>> 8;
          $$120$i798 = $1330 ? $1332 : $spec$select$i796;
          $$1$i799 = $1330 ? $1331 : $spec$select24$i797;
          $1333 = ($$120$i798>>>0)>(15);
          $1334 = $$1$i799 | 4;
          $1335 = $$120$i798 >>> 4;
          $$221$i800 = $1333 ? $1335 : $$120$i798;
          $$2$i801 = $1333 ? $1334 : $$1$i799;
          $1336 = ($$221$i800>>>0)>(3);
          $1337 = $$2$i801 | 2;
          $1338 = $$221$i800 >>> 2;
          $$322$i802 = $1336 ? $1338 : $$221$i800;
          $$3$i803 = $1336 ? $1337 : $$2$i801;
          $1339 = ($$322$i802>>>0)>(1);
          $1340 = $1339&1;
          $spec$select25$i804 = (($$3$i803) + -7)|0;
          $1341 = (($spec$select25$i804) + ($1340))|0;
          $1342 = ($$1372>>>0)>(65535);
          $1343 = $$1372 >>> 16;
          $spec$select$i814 = $1342 ? $1343 : $$1372;
          $spec$select24$i815 = $1342 ? 16 : 0;
          $1344 = ($spec$select$i814>>>0)>(255);
          $1345 = $spec$select24$i815 | 8;
          $1346 = $spec$select$i814 >>> 8;
          $$120$i816 = $1344 ? $1346 : $spec$select$i814;
          $$1$i817 = $1344 ? $1345 : $spec$select24$i815;
          $1347 = ($$120$i816>>>0)>(15);
          $1348 = $$1$i817 | 4;
          $1349 = $$120$i816 >>> 4;
          $$221$i818 = $1347 ? $1349 : $$120$i816;
          $$2$i819 = $1347 ? $1348 : $$1$i817;
          $1350 = ($$221$i818>>>0)>(3);
          $1351 = $$2$i819 | 2;
          $1352 = $$221$i818 >>> 2;
          $$322$i820 = $1350 ? $1352 : $$221$i818;
          $$3$i821 = $1350 ? $1351 : $$2$i819;
          $1353 = ($$322$i820>>>0)>(1);
          $1354 = $1353&1;
          $spec$select25$i822 = (($$3$i821) + -7)|0;
          $1355 = (($spec$select25$i822) + ($1354))|0;
          $1356 = ($$1374|0)==(0);
          if ($1356) {
           $$03751034 = 0;$$0382 = $1327;$$0383 = -8;$$0384 = $1355;$$0385 = $1341;$$0386 = $1311;$1566 = $$ph;$1677 = 0;
           break;
          }
          $1357 = ($$1374>>>0)>(65535);
          $1358 = $$1374 >>> 16;
          $spec$select$i832 = $1357 ? $1358 : $$1374;
          $spec$select24$i833 = $1357 ? 16 : 0;
          $1359 = ($spec$select$i832>>>0)>(255);
          $1360 = $spec$select24$i833 | 8;
          $1361 = $spec$select$i832 >>> 8;
          $$120$i834 = $1359 ? $1361 : $spec$select$i832;
          $$1$i835 = $1359 ? $1360 : $spec$select24$i833;
          $1362 = ($$120$i834>>>0)>(15);
          $1363 = $$1$i835 | 4;
          $1364 = $$120$i834 >>> 4;
          $$221$i836 = $1362 ? $1364 : $$120$i834;
          $$2$i837 = $1362 ? $1363 : $$1$i835;
          $1365 = ($$221$i836>>>0)>(3);
          $1366 = $$2$i837 | 2;
          $1367 = $$221$i836 >>> 2;
          $$322$i838 = $1365 ? $1367 : $$221$i836;
          $$3$i839 = $1365 ? $1366 : $$2$i837;
          $1368 = ($$322$i838>>>0)>(1);
          $1369 = $1368&1;
          $spec$select25$i840 = (($$3$i839) + -7)|0;
          $phitmp = (($spec$select25$i840) + ($1369))|0;
          $$03751034 = 0;$$0382 = $1327;$$0383 = $phitmp;$$0384 = $1355;$$0385 = $1341;$$0386 = $1311;$1566 = $$ph;$1677 = 0;
          break;
         } else {
          HEAP32[36596] = 121560;
          $$2 = 0;
          STACKTOP = sp;return ($$2|0);
         }
        }
       } while(0);
       $1370 = HEAP32[$395>>2]|0;
       $1371 = ($1370|0)>(0);
       if ($1371) {
        $1372 = ((($0)) + 20|0);
        $1373 = ((($0)) + 24|0);
        $1374 = ($$03751034|0)==(2);
        $1375 = ($$413|0)==(4);
        $1376 = ($393|0)==(16);
        $1377 = ($$0386|0)<(0);
        $1378 = (0 - ($$0386))|0;
        $1379 = ($$0382>>>0)<(8);
        $1380 = ($$0385|0)<(0);
        $1381 = (0 - ($$0385))|0;
        $1382 = ($$0384|0)<(0);
        $1383 = (0 - ($$0384))|0;
        $1384 = ($$0383|0)<(0);
        $1385 = (0 - ($$0383))|0;
        $$03761074 = 0;$$14071073 = 0;
        while(1) {
         $1386 = HEAP32[$0>>2]|0;
         $1387 = ($1386|0)>(0);
         do {
          if ($1677) {
           if (!($1387)) {
            $$5 = $$03761074;
            break;
           }
           $$13771069 = $$03761074;$$34021068 = 0;
           while(1) {
            $1388 = HEAP32[$6>>2]|0;
            $1389 = ($1388|0)==(0|0);
            do {
             if ($1389) {
              $1390 = HEAP32[$1372>>2]|0;
              $1391 = HEAP32[$1373>>2]|0;
              $1392 = ($1390>>>0)<($1391>>>0);
              if ($1392) {
               $1393 = ((($1390)) + 1|0);
               HEAP32[$1372>>2] = $1393;
               $1394 = HEAP8[$1390>>0]|0;
               $1395 = $1394&255;
               $$0$i843$ph = $1395;
              } else {
               $$0$i843$ph = 0;
              }
              $1396 = $$0$i843$ph&255;
              $1397 = (($$13771069) + 2)|0;
              $1398 = (($1128) + ($1397)|0);
              HEAP8[$1398>>0] = $1396;
              label = 524;
             } else {
              $1399 = (_fgetc($1388)|0);
              $1400 = ($1399|0)==(-1);
              $$pre1249 = HEAP32[$6>>2]|0;
              $1401 = $1399&255;
              $1402 = $1400 ? 0 : $1401;
              $1403 = (($$13771069) + 2)|0;
              $1404 = (($1128) + ($1403)|0);
              HEAP8[$1404>>0] = $1402;
              $1405 = ($$pre1249|0)==(0|0);
              if ($1405) {
               label = 524;
               break;
              }
              $1415 = (_fgetc($$pre1249)|0);
              $1416 = ($1415|0)==(-1);
              $$pre1250 = HEAP32[$6>>2]|0;
              $1417 = $1415&255;
              $1418 = $1416 ? 0 : $1417;
              $1419 = (($$13771069) + 1)|0;
              $1420 = (($1128) + ($1419)|0);
              HEAP8[$1420>>0] = $1418;
              $1421 = ($$pre1250|0)==(0|0);
              if ($1421) {
               label = 529;
               break;
              }
              $1422 = (_fgetc($$pre1250)|0);
              $1423 = ($1422|0)==(-1);
              $1424 = $1423 ? 0 : $1422;
              $$0$i847 = $1424;
             }
            } while(0);
            if ((label|0) == 524) {
             label = 0;
             $1406 = HEAP32[$1372>>2]|0;
             $1407 = HEAP32[$1373>>2]|0;
             $1408 = ($1406>>>0)<($1407>>>0);
             if ($1408) {
              $1409 = ((($1406)) + 1|0);
              HEAP32[$1372>>2] = $1409;
              $1410 = HEAP8[$1406>>0]|0;
              $1411 = $1410&255;
              $$0$i845$ph = $1411;
             } else {
              $$0$i845$ph = 0;
             }
             $1412 = $$0$i845$ph&255;
             $1413 = (($$13771069) + 1)|0;
             $1414 = (($1128) + ($1413)|0);
             HEAP8[$1414>>0] = $1412;
             label = 529;
            }
            do {
             if ((label|0) == 529) {
              label = 0;
              $1425 = HEAP32[$1372>>2]|0;
              $1426 = HEAP32[$1373>>2]|0;
              $1427 = ($1425>>>0)<($1426>>>0);
              if (!($1427)) {
               $$0$i847 = 0;
               break;
              }
              $1428 = ((($1425)) + 1|0);
              HEAP32[$1372>>2] = $1428;
              $1429 = HEAP8[$1425>>0]|0;
              $1430 = $1429&255;
              $$0$i847 = $1430;
             }
            } while(0);
            $1431 = $$0$i847&255;
            $1432 = (($1128) + ($$13771069)|0);
            HEAP8[$1432>>0] = $1431;
            $1433 = (($$13771069) + 3)|0;
            do {
             if ($1374) {
              $1434 = HEAP32[$6>>2]|0;
              $1435 = ($1434|0)==(0|0);
              if (!($1435)) {
               $1436 = (_fgetc($1434)|0);
               $1437 = ($1436|0)==(-1);
               $1438 = $1437 ? 0 : $1436;
               $1448 = $1438;
               break;
              }
              $1439 = HEAP32[$1372>>2]|0;
              $1440 = HEAP32[$1373>>2]|0;
              $1441 = ($1439>>>0)<($1440>>>0);
              if (!($1441)) {
               $1448 = 0;
               break;
              }
              $1442 = ((($1439)) + 1|0);
              HEAP32[$1372>>2] = $1442;
              $1443 = HEAP8[$1439>>0]|0;
              $1444 = $1443&255;
              $1448 = $1444;
             } else {
              $1448 = 255;
             }
            } while(0);
            if ($1375) {
             $1445 = (($1128) + ($1433)|0);
             $1446 = (($$13771069) + 4)|0;
             $1447 = $1448&255;
             HEAP8[$1445>>0] = $1447;
             $$2378 = $1446;
            } else {
             $$2378 = $1433;
            }
            $1449 = (($$34021068) + 1)|0;
            $1450 = HEAP32[$0>>2]|0;
            $1451 = ($1449|0)<($1450|0);
            if ($1451) {
             $$13771069 = $$2378;$$34021068 = $1449;
            } else {
             $$5 = $$2378;
             break;
            }
           }
          } else {
           if (!($1387)) {
            $$5 = $$03761074;
            break;
           }
           $$31064 = $$03761074;$$44031063 = 0;
           while(1) {
            $1452 = HEAP32[$6>>2]|0;
            $1453 = ($1452|0)==(0|0);
            if ($1376) {
             do {
              if ($1453) {
               $1454 = HEAP32[$1372>>2]|0;
               $1455 = HEAP32[$1373>>2]|0;
               $1456 = ($1454>>>0)<($1455>>>0);
               if (!($1456)) {
                $$0$i6$i853 = 0;$1468 = $1454;$1469 = $1455;
                label = 548;
                break;
               }
               $1457 = ((($1454)) + 1|0);
               HEAP32[$1372>>2] = $1457;
               $1458 = HEAP8[$1454>>0]|0;
               $1459 = $1458&255;
               $$0$i6$i853 = $1459;$1468 = $1457;$1469 = $1455;
               label = 548;
              } else {
               $1460 = (_fgetc($1452)|0);
               $1461 = ($1460|0)==(-1);
               $1462 = $1461 ? 0 : $1460;
               $$pre$i851 = HEAP32[$6>>2]|0;
               $1463 = ($$pre$i851|0)==(0|0);
               if ($1463) {
                $$pre1247 = HEAP32[$1372>>2]|0;
                $$pre1248 = HEAP32[$1373>>2]|0;
                $$0$i6$i853 = $1462;$1468 = $$pre1247;$1469 = $$pre1248;
                label = 548;
                break;
               } else {
                $1464 = (_fgetc($$pre$i851)|0);
                $1465 = ($1464|0)==(-1);
                $1466 = $1465 ? 0 : $1464;
                $$0$i3$i856 = $1466;$$0$i5$i855 = $1462;
                break;
               }
              }
             } while(0);
             do {
              if ((label|0) == 548) {
               label = 0;
               $1467 = ($1468>>>0)<($1469>>>0);
               if (!($1467)) {
                $$0$i3$i856 = 0;$$0$i5$i855 = $$0$i6$i853;
                break;
               }
               $1470 = ((($1468)) + 1|0);
               HEAP32[$1372>>2] = $1470;
               $1471 = HEAP8[$1468>>0]|0;
               $1472 = $1471&255;
               $$0$i3$i856 = $1472;$$0$i5$i855 = $$0$i6$i853;
              }
             } while(0);
             $1473 = $$0$i3$i856 << 8;
             $$sink = $1473;$$sink1353 = $$0$i5$i855;
            } else {
             do {
              if ($1453) {
               $1474 = HEAP32[$1372>>2]|0;
               $1475 = HEAP32[$1373>>2]|0;
               $1476 = ($1474>>>0)<($1475>>>0);
               if (!($1476)) {
                $$0$i6$i$i866 = 0;$1485 = $1474;$1486 = $1475;
                label = 556;
                break;
               }
               $1477 = ((($1474)) + 1|0);
               HEAP32[$1372>>2] = $1477;
               $1478 = HEAP8[$1474>>0]|0;
               $1479 = $1478&255;
               $$0$i6$i$i866 = $1479;$1485 = $1477;$1486 = $1475;
               label = 556;
              } else {
               $1480 = (_fgetc($1452)|0);
               $1481 = ($1480|0)==(-1);
               $1482 = $1481 ? 0 : $1480;
               $$pre$i$i858 = HEAP32[$6>>2]|0;
               $1483 = ($$pre$i$i858|0)==(0|0);
               if ($1483) {
                $$pre$i861 = HEAP32[$1372>>2]|0;
                $$pre4$i863 = HEAP32[$1373>>2]|0;
                $$0$i6$i$i866 = $1482;$1485 = $$pre$i861;$1486 = $$pre4$i863;
                label = 556;
                break;
               }
               $1492 = (_fgetc($$pre$i$i858)|0);
               $1493 = ($1492|0)==(-1);
               $$pre1244 = HEAP32[$6>>2]|0;
               $$op1336 = $1492 << 8;
               $1494 = $1493 ? 0 : $$op1336;
               $1495 = (($1494) + ($1482))|0;
               $1496 = ($$pre1244|0)==(0|0);
               if ($1496) {
                $1678 = $1495;
                label = 560;
                break;
               }
               $1503 = (_fgetc($$pre1244)|0);
               $1504 = ($1503|0)==(-1);
               $1505 = $1504 ? 0 : $1503;
               $$pre$i871 = HEAP32[$6>>2]|0;
               $1506 = ($$pre$i871|0)==(0|0);
               if ($1506) {
                $$pre1245 = HEAP32[$1372>>2]|0;
                $$pre1246 = HEAP32[$1373>>2]|0;
                $$0$i6$i873 = $1505;$1511 = $$pre1245;$1512 = $$pre1246;$1679 = $1495;
                label = 565;
                break;
               } else {
                $1507 = (_fgetc($$pre$i871)|0);
                $1508 = ($1507|0)==(-1);
                $1509 = $1508 ? 0 : $1507;
                $$0$i3$i876 = $1509;$$0$i5$i875 = $1505;$1680 = $1495;
                break;
               }
              }
             } while(0);
             if ((label|0) == 556) {
              label = 0;
              $1484 = ($1485>>>0)<($1486>>>0);
              if ($1484) {
               $1487 = ((($1485)) + 1|0);
               HEAP32[$1372>>2] = $1487;
               $1488 = HEAP8[$1485>>0]|0;
               $1489 = $1488&255;
               $$0$i3$i$i869$ph = $1489;
              } else {
               $$0$i3$i$i869$ph = 0;
              }
              $1490 = $$0$i3$i$i869$ph << 8;
              $1491 = (($1490) + ($$0$i6$i$i866))|0;
              $1678 = $1491;
              label = 560;
             }
             do {
              if ((label|0) == 560) {
               label = 0;
               $1497 = HEAP32[$1372>>2]|0;
               $1498 = HEAP32[$1373>>2]|0;
               $1499 = ($1497>>>0)<($1498>>>0);
               if (!($1499)) {
                $$0$i6$i873 = 0;$1511 = $1497;$1512 = $1498;$1679 = $1678;
                label = 565;
                break;
               }
               $1500 = ((($1497)) + 1|0);
               HEAP32[$1372>>2] = $1500;
               $1501 = HEAP8[$1497>>0]|0;
               $1502 = $1501&255;
               $$0$i6$i873 = $1502;$1511 = $1500;$1512 = $1498;$1679 = $1678;
               label = 565;
              }
             } while(0);
             do {
              if ((label|0) == 565) {
               label = 0;
               $1510 = ($1511>>>0)<($1512>>>0);
               if (!($1510)) {
                $$0$i3$i876 = 0;$$0$i5$i875 = $$0$i6$i873;$1680 = $1679;
                break;
               }
               $1513 = ((($1511)) + 1|0);
               HEAP32[$1372>>2] = $1513;
               $1514 = HEAP8[$1511>>0]|0;
               $1515 = $1514&255;
               $$0$i3$i876 = $1515;$$0$i5$i875 = $$0$i6$i873;$1680 = $1679;
              }
             } while(0);
             $1516 = $$0$i3$i876 << 8;
             $1517 = (($1516) + ($$0$i5$i875))|0;
             $1518 = $1517 << 16;
             $$sink = $1680;$$sink1353 = $1518;
            }
            $1519 = (($$sink) + ($$sink1353))|0;
            $1520 = $1519 & $$1368;
            $1521 = $1520 << $1378;
            $1522 = $1520 >> $$0386;
            $$017$i = $1377 ? $1521 : $1522;
            if ($1379) {
             $$01618$i = $$017$i;$$019$i = $$0382;
             while(1) {
              $1523 = $$017$i >> $$019$i;
              $1524 = (($1523) + ($$01618$i))|0;
              $1525 = (($$019$i) + ($$0382))|0;
              $1526 = ($1525>>>0)<(8);
              if ($1526) {
               $$01618$i = $1524;$$019$i = $1525;
              } else {
               $$016$lcssa$i = $1524;
               break;
              }
             }
            } else {
             $$016$lcssa$i = $$017$i;
            }
            $1527 = $$016$lcssa$i&255;
            $1528 = (($$31064) + 1)|0;
            $1529 = (($1128) + ($$31064)|0);
            HEAP8[$1529>>0] = $1527;
            $1530 = $1519 & $$1370;
            $1531 = $1530 << $1381;
            $1532 = $1530 >> $$0385;
            $$017$i878 = $1380 ? $1531 : $1532;
            if ($1379) {
             $$01618$i881 = $$017$i878;$$019$i880 = $$0382;
             while(1) {
              $1533 = $$017$i878 >> $$019$i880;
              $1534 = (($1533) + ($$01618$i881))|0;
              $1535 = (($$019$i880) + ($$0382))|0;
              $1536 = ($1535>>>0)<(8);
              if ($1536) {
               $$01618$i881 = $1534;$$019$i880 = $1535;
              } else {
               $$016$lcssa$i882 = $1534;
               break;
              }
             }
            } else {
             $$016$lcssa$i882 = $$017$i878;
            }
            $1537 = $$016$lcssa$i882&255;
            $1538 = (($$31064) + 2)|0;
            $1539 = (($1128) + ($1528)|0);
            HEAP8[$1539>>0] = $1537;
            $1540 = $1519 & $$1372;
            $1541 = $1540 << $1383;
            $1542 = $1540 >> $$0384;
            $$017$i884 = $1382 ? $1541 : $1542;
            if ($1379) {
             $$01618$i887 = $$017$i884;$$019$i886 = $$0382;
             while(1) {
              $1543 = $$017$i884 >> $$019$i886;
              $1544 = (($1543) + ($$01618$i887))|0;
              $1545 = (($$019$i886) + ($$0382))|0;
              $1546 = ($1545>>>0)<(8);
              if ($1546) {
               $$01618$i887 = $1544;$$019$i886 = $1545;
              } else {
               $$016$lcssa$i888 = $1544;
               break;
              }
             }
            } else {
             $$016$lcssa$i888 = $$017$i884;
            }
            $1547 = $$016$lcssa$i888&255;
            $1548 = (($$31064) + 3)|0;
            $1549 = (($1128) + ($1538)|0);
            HEAP8[$1549>>0] = $1547;
            do {
             if ($1119) {
              $1550 = $1519 & $$1374;
              $1551 = $1550 << $1385;
              $1552 = $1550 >> $$0383;
              $$017$i890 = $1384 ? $1551 : $1552;
              if (!($1379)) {
               $1560 = $$017$i890;
               break;
              }
              $$01618$i893 = $$017$i890;$$019$i892 = $$0382;
              while(1) {
               $1553 = $$017$i890 >> $$019$i892;
               $1554 = (($1553) + ($$01618$i893))|0;
               $1555 = (($$019$i892) + ($$0382))|0;
               $1556 = ($1555>>>0)<(8);
               if ($1556) {
                $$01618$i893 = $1554;$$019$i892 = $1555;
               } else {
                $1560 = $1554;
                break;
               }
              }
             } else {
              $1560 = 255;
             }
            } while(0);
            if ($1375) {
             $1557 = (($1128) + ($1548)|0);
             $1558 = (($$31064) + 4)|0;
             $1559 = $1560&255;
             HEAP8[$1557>>0] = $1559;
             $$4 = $1558;
            } else {
             $$4 = $1548;
            }
            $1561 = (($$44031063) + 1)|0;
            $1562 = HEAP32[$0>>2]|0;
            $1563 = ($1561|0)<($1562|0);
            if ($1563) {
             $$31064 = $$4;$$44031063 = $1561;
            } else {
             $$5 = $$4;
             break;
            }
           }
          }
         } while(0);
         $1564 = HEAP32[$6>>2]|0;
         $1565 = ($1564|0)==(0|0);
         if ($1565) {
          $1567 = HEAP32[$1372>>2]|0;
          $1568 = (($1567) + ($1566)|0);
          HEAP32[$1372>>2] = $1568;
         } else {
          (_fseek($1564,$1566,1)|0);
         }
         $1569 = (($$14071073) + 1)|0;
         $1570 = HEAP32[$395>>2]|0;
         $1571 = ($1569|0)<($1570|0);
         if ($1571) {
          $$03761074 = $$5;$$14071073 = $1569;
         } else {
          $1573 = $1570;
          break;
         }
        }
       } else {
        $1573 = $1370;
       }
      }
     } while(0);
     $1572 = ($1573|0)>(1);
     $or$cond1322 = $397 & $1572;
     if ($or$cond1322) {
      $1574 = HEAP32[$0>>2]|0;
      $1575 = Math_imul($1574, $$413)|0;
      $1576 = ($1575|0)>(0);
      $1577 = $1573 >>> 1;
      if ($1576) {
       $$24081045$us = 0;
       while(1) {
        $1578 = Math_imul($1575, $$24081045$us)|0;
        $1579 = (($1128) + ($1578)|0);
        $1580 = $$24081045$us ^ -1;
        $1581 = (($1573) + ($1580))|0;
        $1582 = Math_imul($1575, $1581)|0;
        $1583 = (($1128) + ($1582)|0);
        $$54041044$us = 0;
        while(1) {
         $1584 = (($1579) + ($$54041044$us)|0);
         $1585 = HEAP8[$1584>>0]|0;
         $1586 = (($1583) + ($$54041044$us)|0);
         $1587 = HEAP8[$1586>>0]|0;
         HEAP8[$1584>>0] = $1587;
         HEAP8[$1586>>0] = $1585;
         $1588 = (($$54041044$us) + 1)|0;
         $exitcond = ($1588|0)==($1575|0);
         if ($exitcond) {
          break;
         } else {
          $$54041044$us = $1588;
         }
        }
        $1589 = (($$24081045$us) + 1)|0;
        $1590 = ($1589>>>0)<($1577>>>0);
        if ($1590) {
         $$24081045$us = $1589;
        } else {
         break;
        }
       }
      }
     }
     $1591 = ($$413|0)==($4|0);
     $or$cond416 = $1122 | $1591;
     if ($or$cond416) {
      $$0366 = $1128;
     } else {
      $1592 = HEAP32[$0>>2]|0;
      $1593 = (_convert_format($1128,$$413,$4,$1592,$1573)|0);
      $1594 = ($1593|0)==(0|0);
      if ($1594) {
       $$2 = 0;
       STACKTOP = sp;return ($$2|0);
      } else {
       $$0366 = $1593;
      }
     }
     $1595 = HEAP32[$0>>2]|0;
     HEAP32[$1>>2] = $1595;
     $1596 = HEAP32[$395>>2]|0;
     HEAP32[$2>>2] = $1596;
     $1597 = ($3|0)==(0|0);
     if ($1597) {
      $$2 = $$0366;
      STACKTOP = sp;return ($$2|0);
     }
     HEAP32[$3>>2] = $$413;
     $$2 = $$0366;
     STACKTOP = sp;return ($$2|0);
    }
   }
  }
 } while(0);
 HEAP32[36596] = 121560;
 $$2 = 0;
 STACKTOP = sp;return ($$2|0);
}
function _stbi_psd_test_file($0) {
 $0 = $0|0;
 var $$$i = 0, $$op$i = 0, $$op$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_ftell($0)|0);
 $2 = ($0|0)==(0|0);
 if ($2) {
  _llvm_trap();
  // unreachable;
 } else {
  $3 = (_fgetc($0)|0);
  $4 = ($3|0)==(-1);
  $$op$i$i$i = $3 << 8;
  $5 = $4 ? 0 : $$op$i$i$i;
  $6 = (_fgetc($0)|0);
  $7 = ($6|0)==(-1);
  $8 = $7 ? 0 : $6;
  $9 = (($8) + ($5))|0;
  $10 = (_fgetc($0)|0);
  $11 = ($10|0)==(-1);
  $$op$i = $10 << 8;
  $12 = $11 ? 0 : $$op$i;
  $13 = (_fgetc($0)|0);
  $14 = ($13|0)==(-1);
  $15 = $14 ? 0 : $13;
  $phitmp = $9 << 16;
  $16 = (($15) + ($12))|0;
  $17 = (($16) + ($phitmp))|0;
  $18 = ($17|0)==(943870035);
  $$$i = $18&1;
  (_fseek($0,$1,0)|0);
  return ($$$i|0);
 }
 return (0)|0;
}
function _psd_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$us = 0, $$0$i255$us = 0, $$0$i257$us = 0, $$0$i259$us = 0, $$0$i259$us$1 = 0, $$0$i259$us$2 = 0, $$0$i259$us$3 = 0, $$0$i293294$us439 = 0, $$0$i3$i = 0, $$0$i3$i$i$ph = 0, $$0$i3$i$i165$ph = 0, $$0$i3$i$i178$ph = 0, $$0$i3$i$i207$ph = 0, $$0$i3$i$i221$ph = 0, $$0$i3$i$i235$ph = 0, $$0$i3$i144 = 0, $$0$i3$i152 = 0, $$0$i3$i186 = 0, $$0$i3$i194 = 0, $$0$i3$i244 = 0;
 var $$0$i3$i252$ph = 0, $$0$i3$i267$ph = 0, $$0$i3$i275$ph = 0, $$0$i3$i283$ph = 0, $$0$i3$i291$ph = 0, $$0124 = 0, $$0125322$us = 0, $$0127 = 0, $$0128334$us = 0, $$0130321$us = 0, $$0133327$us = 0, $$0135331$us = 0, $$0305$us$1 = 0, $$0305$us$2 = 0, $$0305$us$3 = 0, $$1126332$us = 0, $$1131304$us$1 = 0, $$1131304$us$2 = 0, $$1131304$us$3 = 0, $$1134324$us = 0;
 var $$1136$us = 0, $$1303$us = 0, $$1303$us$1 = 0, $$1303$us$2 = 0, $$1303$us$3 = 0, $$2132302$us = 0, $$2132302$us$1 = 0, $$2132302$us$2 = 0, $$2132302$us$3 = 0, $$2328$us = 0, $$3325$us = 0, $$4$us = 0, $$op$i = 0, $$op$i$i = 0, $$op$i$i156 = 0, $$op$i$i169 = 0, $$op$i$i198 = 0, $$op$i$i212 = 0, $$op$i$i226 = 0, $$op$i142 = 0;
 var $$op$i150 = 0, $$op$i184 = 0, $$op$i192 = 0, $$op$i242 = 0, $$op$i250 = 0, $$op$i265 = 0, $$op$i273 = 0, $$op$i281 = 0, $$op$i289 = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert$i158 = 0, $$phi$trans$insert$i171 = 0, $$phi$trans$insert$i200 = 0, $$phi$trans$insert$i214 = 0, $$phi$trans$insert$i228 = 0, $$phi$trans$insert3$i = 0, $$phi$trans$insert3$i160 = 0, $$phi$trans$insert3$i173 = 0, $$phi$trans$insert3$i202 = 0;
 var $$phi$trans$insert3$i216 = 0, $$phi$trans$insert3$i230 = 0, $$phi$trans$insert360 = 0, $$phi$trans$insert362 = 0, $$phi$trans$insert364 = 0, $$phi$trans$insert367 = 0, $$phi$trans$insert369 = 0, $$phi$trans$insert372 = 0, $$phi$trans$insert374 = 0, $$phi$trans$insert378 = 0, $$phi$trans$insert380 = 0, $$phi$trans$insert383 = 0, $$phi$trans$insert385 = 0, $$phi$trans$insert387 = 0, $$phi$trans$insert389 = 0, $$phi$trans$insert392 = 0, $$phi$trans$insert394 = 0, $$phi$trans$insert399 = 0, $$phi$trans$insert401 = 0, $$phi$trans$insert406 = 0;
 var $$phi$trans$insert408 = 0, $$phi$trans$insert412 = 0, $$phi$trans$insert414 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i155 = 0, $$pre$i$i168 = 0, $$pre$i$i197 = 0, $$pre$i$i211 = 0, $$pre$i$i225 = 0, $$pre$i137 = 0, $$pre$i141 = 0, $$pre$i149 = 0, $$pre$i159 = 0, $$pre$i172 = 0, $$pre$i183 = 0, $$pre$i191 = 0, $$pre$i201 = 0, $$pre$i215 = 0;
 var $$pre$i229 = 0, $$pre$i241 = 0, $$pre$i249 = 0, $$pre$i264 = 0, $$pre$i272 = 0, $$pre$i280 = 0, $$pre$i288 = 0, $$pre$phi$i163Z2D = 0, $$pre$phi$i176Z2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$i219Z2D = 0, $$pre$phi$i233Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi417Z2D = 0, $$pre$phi419Z2D = 0, $$pre$phi421Z2D = 0, $$pre$phi423Z2D = 0, $$pre$phi425Z2D = 0, $$pre$phi427Z2D = 0, $$pre$phi429Z2D = 0;
 var $$pre$phi431Z2D = 0, $$pre$phi433Z2D = 0, $$pre$phi435Z2D = 0, $$pre$phi438Z2D = 0, $$pre$phiZ2D = 0, $$pre359 = 0, $$pre361 = 0, $$pre363 = 0, $$pre365 = 0, $$pre366 = 0, $$pre368 = 0, $$pre370 = 0, $$pre371 = 0, $$pre373 = 0, $$pre375 = 0, $$pre376 = 0, $$pre377 = 0, $$pre379 = 0, $$pre381 = 0, $$pre382 = 0;
 var $$pre384 = 0, $$pre386 = 0, $$pre388 = 0, $$pre390 = 0, $$pre391 = 0, $$pre393 = 0, $$pre395 = 0, $$pre396 = 0, $$pre397 = 0, $$pre398 = 0, $$pre4$i = 0, $$pre4$i161 = 0, $$pre4$i174 = 0, $$pre4$i203 = 0, $$pre4$i217 = 0, $$pre4$i231 = 0, $$pre400 = 0, $$pre402 = 0, $$pre403 = 0, $$pre404 = 0;
 var $$pre405 = 0, $$pre407 = 0, $$pre409 = 0, $$pre410 = 0, $$pre411 = 0, $$pre413 = 0, $$pre415 = 0, $$pre437 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0;
 var $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0;
 var $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0;
 var $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0;
 var $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0;
 var $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0;
 var $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0;
 var $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0;
 var $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0;
 var $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0;
 var $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0;
 var $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0;
 var $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0;
 var $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0;
 var $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0;
 var $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0;
 var $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0;
 var $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0;
 var $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0;
 var $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0;
 var $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0;
 var $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0;
 var $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0;
 var $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0;
 var $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0;
 var $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0;
 var $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$1 = 0, $exitcond$2 = 0, $exitcond$3 = 0, $exitcond346$1 = 0, $exitcond346$2 = 0, $exitcond346$3 = 0, $exitcond349 = 0, $exitcond353 = 0, $phitmp$i = 0, $phitmp$i$i = 0, $phitmp$i$i154 = 0, $phitmp$i$i167 = 0, $phitmp$i$i196 = 0, $phitmp$i$i210 = 0, $phitmp$i$i224 = 0;
 var $phitmp$i138 = 0, $phitmp$i146 = 0, $phitmp$i180 = 0, $phitmp$i188 = 0, $phitmp$i238 = 0, $phitmp$i246 = 0, $phitmp$i261 = 0, $phitmp$i269 = 0, $phitmp$i277 = 0, $phitmp$i285 = 0, $scevgep = 0, $scevgep350 = 0, $scevgep351 = 0, $scevgep352 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if ($7) {
   $8 = ((($0)) + 20|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ((($0)) + 24|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = ($9>>>0)<($11>>>0);
   if ($12) {
    $13 = ((($9)) + 1|0);
    HEAP32[$8>>2] = $13;
    $14 = HEAP8[$9>>0]|0;
    $15 = $14&255;
    $phitmp$i$i = $15 << 8;
    $$pre$phi$iZ2D = $8;$21 = $13;$22 = $11;$27 = $phitmp$i$i;
    label = 6;
   } else {
    $$pre$phi$iZ2D = $8;$21 = $9;$22 = $11;$27 = 0;
    label = 6;
   }
  } else {
   $16 = (_fgetc($6)|0);
   $17 = ($16|0)==(-1);
   $$pre$i$i = HEAP32[$5>>2]|0;
   $$op$i$i = $16 << 8;
   $18 = $17 ? 0 : $$op$i$i;
   $19 = ($$pre$i$i|0)==(0|0);
   if ($19) {
    $$phi$trans$insert$i = ((($0)) + 20|0);
    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $$phi$trans$insert3$i = ((($0)) + 24|0);
    $$pre4$i = HEAP32[$$phi$trans$insert3$i>>2]|0;
    $$pre$phi$iZ2D = $$phi$trans$insert$i;$21 = $$pre$i;$22 = $$pre4$i;$27 = $18;
    label = 6;
    break;
   }
   $29 = (_fgetc($$pre$i$i)|0);
   $30 = ($29|0)==(-1);
   $31 = $30 ? 0 : $29;
   $$pre = HEAP32[$5>>2]|0;
   $32 = (($31) + ($18))|0;
   $33 = $32 << 16;
   $34 = ($$pre|0)==(0|0);
   if ($34) {
    $638 = $33;
    label = 10;
   } else {
    $43 = (_fgetc($$pre)|0);
    $44 = ($43|0)==(-1);
    $$pre$i137 = HEAP32[$5>>2]|0;
    $$op$i = $43 << 8;
    $45 = $44 ? 0 : $$op$i;
    $46 = ($$pre$i137|0)==(0|0);
    if ($46) {
     $$phi$trans$insert = ((($0)) + 20|0);
     $$pre359 = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert360 = ((($0)) + 24|0);
     $$pre361 = HEAP32[$$phi$trans$insert360>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$51 = $$pre359;$52 = $$pre361;$639 = $33;$640 = $45;
     label = 15;
     break;
    } else {
     $47 = (_fgetc($$pre$i137)|0);
     $48 = ($47|0)==(-1);
     $49 = $48 ? 0 : $47;
     $$0$i3$i = $49;$57 = $33;$58 = $45;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 6) {
  $20 = ($21>>>0)<($22>>>0);
  if ($20) {
   $23 = ((($21)) + 1|0);
   HEAP32[$$pre$phi$iZ2D>>2] = $23;
   $24 = HEAP8[$21>>0]|0;
   $25 = $24&255;
   $$0$i3$i$i$ph = $25;
  } else {
   $$0$i3$i$i$ph = 0;
  }
  $26 = (($$0$i3$i$i$ph) + ($27))|0;
  $28 = $26 << 16;
  $638 = $28;
  label = 10;
 }
 if ((label|0) == 10) {
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($0)) + 24|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36>>>0)<($38>>>0);
  if ($39) {
   $40 = ((($36)) + 1|0);
   HEAP32[$35>>2] = $40;
   $41 = HEAP8[$36>>0]|0;
   $42 = $41&255;
   $phitmp$i = $42 << 8;
   $$pre$phiZ2D = $35;$51 = $40;$52 = $38;$639 = $638;$640 = $phitmp$i;
   label = 15;
  } else {
   $$pre$phiZ2D = $35;$51 = $36;$52 = $38;$639 = $638;$640 = 0;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $50 = ($51>>>0)<($52>>>0);
  if ($50) {
   $53 = ((($51)) + 1|0);
   HEAP32[$$pre$phiZ2D>>2] = $53;
   $54 = HEAP8[$51>>0]|0;
   $55 = $54&255;
   $$0$i3$i = $55;$57 = $639;$58 = $640;
  } else {
   $$0$i3$i = 0;$57 = $639;$58 = $640;
  }
 }
 $56 = (($58) + ($57))|0;
 $59 = (($56) + ($$0$i3$i))|0;
 $60 = ($59|0)==(943870035);
 if (!($60)) {
  HEAP32[36596] = 121369;
  $$0124 = 0;
  return ($$0124|0);
 }
 $61 = HEAP32[$5>>2]|0;
 $62 = ($61|0)==(0|0);
 do {
  if ($62) {
   $63 = ((($0)) + 20|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ((($0)) + 24|0);
   $66 = HEAP32[$65>>2]|0;
   $67 = ($64>>>0)<($66>>>0);
   if ($67) {
    $68 = ((($64)) + 1|0);
    HEAP32[$63>>2] = $68;
    $69 = HEAP8[$64>>0]|0;
    $70 = $69&255;
    $phitmp$i138 = $70 << 8;
    $$pre$phi417Z2D = $63;$641 = $phitmp$i138;$79 = $68;$80 = $66;
    label = 25;
   } else {
    $$pre$phi417Z2D = $63;$641 = 0;$79 = $64;$80 = $66;
    label = 25;
   }
  } else {
   $71 = (_fgetc($61)|0);
   $72 = ($71|0)==(-1);
   $$pre$i141 = HEAP32[$5>>2]|0;
   $$op$i142 = $71 << 8;
   $73 = $72 ? 0 : $$op$i142;
   $74 = ($$pre$i141|0)==(0|0);
   if ($74) {
    $$phi$trans$insert362 = ((($0)) + 20|0);
    $$pre363 = HEAP32[$$phi$trans$insert362>>2]|0;
    $$phi$trans$insert364 = ((($0)) + 24|0);
    $$pre365 = HEAP32[$$phi$trans$insert364>>2]|0;
    $$pre$phi417Z2D = $$phi$trans$insert362;$641 = $73;$79 = $$pre363;$80 = $$pre365;
    label = 25;
    break;
   } else {
    $75 = (_fgetc($$pre$i141)|0);
    $76 = ($75|0)==(-1);
    $77 = $76 ? 0 : $75;
    $$0$i3$i144 = $77;$85 = $73;
    break;
   }
  }
 } while(0);
 if ((label|0) == 25) {
  $78 = ($79>>>0)<($80>>>0);
  if ($78) {
   $81 = ((($79)) + 1|0);
   HEAP32[$$pre$phi417Z2D>>2] = $81;
   $82 = HEAP8[$79>>0]|0;
   $83 = $82&255;
   $$0$i3$i144 = $83;$85 = $641;
  } else {
   $$0$i3$i144 = 0;$85 = $641;
  }
 }
 $84 = (($$0$i3$i144) + ($85))|0;
 $86 = ($84|0)==(1);
 if (!($86)) {
  HEAP32[36596] = 121387;
  $$0124 = 0;
  return ($$0124|0);
 }
 $87 = HEAP32[$5>>2]|0;
 $88 = ($87|0)==(0|0);
 do {
  if ($88) {
   $89 = ((($0)) + 20|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($90)) + 6|0);
   HEAP32[$89>>2] = $91;
   label = 32;
  } else {
   (_fseek($87,6,1)|0);
   $$pre366 = HEAP32[$5>>2]|0;
   $92 = ($$pre366|0)==(0|0);
   if ($92) {
    label = 32;
   } else {
    $101 = (_fgetc($$pre366)|0);
    $102 = ($101|0)==(-1);
    $$pre$i149 = HEAP32[$5>>2]|0;
    $$op$i150 = $101 << 8;
    $103 = $102 ? 0 : $$op$i150;
    $104 = ($$pre$i149|0)==(0|0);
    if ($104) {
     $$phi$trans$insert367 = ((($0)) + 20|0);
     $$pre368 = HEAP32[$$phi$trans$insert367>>2]|0;
     $$phi$trans$insert369 = ((($0)) + 24|0);
     $$pre370 = HEAP32[$$phi$trans$insert369>>2]|0;
     $$pre$phi419Z2D = $$phi$trans$insert367;$109 = $$pre368;$110 = $$pre370;$642 = $103;
     label = 37;
     break;
    } else {
     $105 = (_fgetc($$pre$i149)|0);
     $106 = ($105|0)==(-1);
     $107 = $106 ? 0 : $105;
     $$0$i3$i152 = $107;$115 = $103;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 32) {
  $93 = ((($0)) + 20|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ((($0)) + 24|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = ($94>>>0)<($96>>>0);
  if ($97) {
   $98 = ((($94)) + 1|0);
   HEAP32[$93>>2] = $98;
   $99 = HEAP8[$94>>0]|0;
   $100 = $99&255;
   $phitmp$i146 = $100 << 8;
   $$pre$phi419Z2D = $93;$109 = $98;$110 = $96;$642 = $phitmp$i146;
   label = 37;
  } else {
   $$pre$phi419Z2D = $93;$109 = $94;$110 = $96;$642 = 0;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  $108 = ($109>>>0)<($110>>>0);
  if ($108) {
   $111 = ((($109)) + 1|0);
   HEAP32[$$pre$phi419Z2D>>2] = $111;
   $112 = HEAP8[$109>>0]|0;
   $113 = $112&255;
   $$0$i3$i152 = $113;$115 = $642;
  } else {
   $$0$i3$i152 = 0;$115 = $642;
  }
 }
 $114 = (($$0$i3$i152) + ($115))|0;
 $116 = ($114>>>0)>(16);
 if ($116) {
  HEAP32[36596] = 121420;
  $$0124 = 0;
  return ($$0124|0);
 }
 $117 = HEAP32[$5>>2]|0;
 $118 = ($117|0)==(0|0);
 do {
  if ($118) {
   $119 = ((($0)) + 20|0);
   $120 = HEAP32[$119>>2]|0;
   $121 = ((($0)) + 24|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ($120>>>0)<($122>>>0);
   if ($123) {
    $124 = ((($120)) + 1|0);
    HEAP32[$119>>2] = $124;
    $125 = HEAP8[$120>>0]|0;
    $126 = $125&255;
    $phitmp$i$i154 = $126 << 8;
    $$pre$phi$i163Z2D = $119;$132 = $124;$133 = $122;$138 = $phitmp$i$i154;
    label = 46;
   } else {
    $$pre$phi$i163Z2D = $119;$132 = $120;$133 = $122;$138 = 0;
    label = 46;
   }
  } else {
   $127 = (_fgetc($117)|0);
   $128 = ($127|0)==(-1);
   $$pre$i$i155 = HEAP32[$5>>2]|0;
   $$op$i$i156 = $127 << 8;
   $129 = $128 ? 0 : $$op$i$i156;
   $130 = ($$pre$i$i155|0)==(0|0);
   if ($130) {
    $$phi$trans$insert$i158 = ((($0)) + 20|0);
    $$pre$i159 = HEAP32[$$phi$trans$insert$i158>>2]|0;
    $$phi$trans$insert3$i160 = ((($0)) + 24|0);
    $$pre4$i161 = HEAP32[$$phi$trans$insert3$i160>>2]|0;
    $$pre$phi$i163Z2D = $$phi$trans$insert$i158;$132 = $$pre$i159;$133 = $$pre4$i161;$138 = $129;
    label = 46;
    break;
   }
   $140 = (_fgetc($$pre$i$i155)|0);
   $141 = ($140|0)==(-1);
   $142 = $141 ? 0 : $140;
   $$pre371 = HEAP32[$5>>2]|0;
   $143 = (($142) + ($129))|0;
   $144 = $143 << 16;
   $145 = ($$pre371|0)==(0|0);
   if ($145) {
    $643 = $144;
    label = 50;
   } else {
    $154 = (_fgetc($$pre371)|0);
    $155 = ($154|0)==(-1);
    $$pre$i264 = HEAP32[$5>>2]|0;
    $$op$i265 = $154 << 8;
    $156 = $155 ? 0 : $$op$i265;
    $157 = ($$pre$i264|0)==(0|0);
    if ($157) {
     $$phi$trans$insert372 = ((($0)) + 20|0);
     $$pre373 = HEAP32[$$phi$trans$insert372>>2]|0;
     $$phi$trans$insert374 = ((($0)) + 24|0);
     $$pre375 = HEAP32[$$phi$trans$insert374>>2]|0;
     $$pre$phi421Z2D = $$phi$trans$insert372;$159 = $$pre373;$160 = $$pre375;$165 = $144;$166 = $156;
     label = 54;
     break;
    }
    $168 = (_fgetc($$pre$i264)|0);
    $169 = ($168|0)==(-1);
    $170 = $169 ? 0 : $168;
    $$pre376 = HEAP32[$5>>2]|0;
    $171 = (($156) + ($144))|0;
    $172 = (($171) + ($170))|0;
    $173 = ($$pre376|0)==(0|0);
    if ($173) {
     $644 = $172;
     label = 58;
    } else {
     $182 = (_fgetc($$pre376)|0);
     $183 = ($182|0)==(-1);
     $$pre$i$i168 = HEAP32[$5>>2]|0;
     $$op$i$i169 = $182 << 8;
     $184 = $183 ? 0 : $$op$i$i169;
     $185 = ($$pre$i$i168|0)==(0|0);
     if ($185) {
      $$phi$trans$insert$i171 = ((($0)) + 20|0);
      $$pre$i172 = HEAP32[$$phi$trans$insert$i171>>2]|0;
      $$phi$trans$insert3$i173 = ((($0)) + 24|0);
      $$pre4$i174 = HEAP32[$$phi$trans$insert3$i173>>2]|0;
      $$pre$phi$i176Z2D = $$phi$trans$insert$i171;$187 = $$pre$i172;$188 = $$pre4$i174;$193 = $184;$645 = $172;
      label = 62;
      break;
     }
     $195 = (_fgetc($$pre$i$i168)|0);
     $196 = ($195|0)==(-1);
     $197 = $196 ? 0 : $195;
     $$pre377 = HEAP32[$5>>2]|0;
     $198 = (($197) + ($184))|0;
     $199 = $198 << 16;
     $200 = ($$pre377|0)==(0|0);
     if ($200) {
      $646 = $199;$647 = $172;
      label = 66;
     } else {
      $209 = (_fgetc($$pre377)|0);
      $210 = ($209|0)==(-1);
      $$pre$i272 = HEAP32[$5>>2]|0;
      $$op$i273 = $209 << 8;
      $211 = $210 ? 0 : $$op$i273;
      $212 = ($$pre$i272|0)==(0|0);
      if ($212) {
       $$phi$trans$insert378 = ((($0)) + 20|0);
       $$pre379 = HEAP32[$$phi$trans$insert378>>2]|0;
       $$phi$trans$insert380 = ((($0)) + 24|0);
       $$pre381 = HEAP32[$$phi$trans$insert380>>2]|0;
       $$pre$phi423Z2D = $$phi$trans$insert378;$214 = $$pre379;$215 = $$pre381;$220 = $199;$221 = $211;$648 = $172;
       label = 70;
       break;
      }
      $223 = (_fgetc($$pre$i272)|0);
      $224 = ($223|0)==(-1);
      $225 = $224 ? 0 : $223;
      $$pre382 = HEAP32[$5>>2]|0;
      $226 = (($211) + ($199))|0;
      $227 = (($226) + ($225))|0;
      $228 = ($$pre382|0)==(0|0);
      if ($228) {
       $649 = $227;$650 = $172;
       label = 74;
      } else {
       $237 = (_fgetc($$pre382)|0);
       $238 = ($237|0)==(-1);
       $$pre$i183 = HEAP32[$5>>2]|0;
       $$op$i184 = $237 << 8;
       $239 = $238 ? 0 : $$op$i184;
       $240 = ($$pre$i183|0)==(0|0);
       if ($240) {
        $$phi$trans$insert383 = ((($0)) + 20|0);
        $$pre384 = HEAP32[$$phi$trans$insert383>>2]|0;
        $$phi$trans$insert385 = ((($0)) + 24|0);
        $$pre386 = HEAP32[$$phi$trans$insert385>>2]|0;
        $$pre$phi425Z2D = $$phi$trans$insert383;$245 = $$pre384;$246 = $$pre386;$651 = $227;$652 = $172;$653 = $239;
        label = 79;
        break;
       } else {
        $241 = (_fgetc($$pre$i183)|0);
        $242 = ($241|0)==(-1);
        $243 = $242 ? 0 : $241;
        $$0$i3$i186 = $243;$251 = $239;$486 = $172;$488 = $227;
        break;
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 46) {
  $131 = ($132>>>0)<($133>>>0);
  if ($131) {
   $134 = ((($132)) + 1|0);
   HEAP32[$$pre$phi$i163Z2D>>2] = $134;
   $135 = HEAP8[$132>>0]|0;
   $136 = $135&255;
   $$0$i3$i$i165$ph = $136;
  } else {
   $$0$i3$i$i165$ph = 0;
  }
  $137 = (($$0$i3$i$i165$ph) + ($138))|0;
  $139 = $137 << 16;
  $643 = $139;
  label = 50;
 }
 if ((label|0) == 50) {
  $146 = ((($0)) + 20|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = ((($0)) + 24|0);
  $149 = HEAP32[$148>>2]|0;
  $150 = ($147>>>0)<($149>>>0);
  if ($150) {
   $151 = ((($147)) + 1|0);
   HEAP32[$146>>2] = $151;
   $152 = HEAP8[$147>>0]|0;
   $153 = $152&255;
   $phitmp$i261 = $153 << 8;
   $$pre$phi421Z2D = $146;$159 = $151;$160 = $149;$165 = $643;$166 = $phitmp$i261;
   label = 54;
  } else {
   $$pre$phi421Z2D = $146;$159 = $147;$160 = $149;$165 = $643;$166 = 0;
   label = 54;
  }
 }
 if ((label|0) == 54) {
  $158 = ($159>>>0)<($160>>>0);
  if ($158) {
   $161 = ((($159)) + 1|0);
   HEAP32[$$pre$phi421Z2D>>2] = $161;
   $162 = HEAP8[$159>>0]|0;
   $163 = $162&255;
   $$0$i3$i267$ph = $163;
  } else {
   $$0$i3$i267$ph = 0;
  }
  $164 = (($166) + ($165))|0;
  $167 = (($164) + ($$0$i3$i267$ph))|0;
  $644 = $167;
  label = 58;
 }
 if ((label|0) == 58) {
  $174 = ((($0)) + 20|0);
  $175 = HEAP32[$174>>2]|0;
  $176 = ((($0)) + 24|0);
  $177 = HEAP32[$176>>2]|0;
  $178 = ($175>>>0)<($177>>>0);
  if ($178) {
   $179 = ((($175)) + 1|0);
   HEAP32[$174>>2] = $179;
   $180 = HEAP8[$175>>0]|0;
   $181 = $180&255;
   $phitmp$i$i167 = $181 << 8;
   $$pre$phi$i176Z2D = $174;$187 = $179;$188 = $177;$193 = $phitmp$i$i167;$645 = $644;
   label = 62;
  } else {
   $$pre$phi$i176Z2D = $174;$187 = $175;$188 = $177;$193 = 0;$645 = $644;
   label = 62;
  }
 }
 if ((label|0) == 62) {
  $186 = ($187>>>0)<($188>>>0);
  if ($186) {
   $189 = ((($187)) + 1|0);
   HEAP32[$$pre$phi$i176Z2D>>2] = $189;
   $190 = HEAP8[$187>>0]|0;
   $191 = $190&255;
   $$0$i3$i$i178$ph = $191;
  } else {
   $$0$i3$i$i178$ph = 0;
  }
  $192 = (($$0$i3$i$i178$ph) + ($193))|0;
  $194 = $192 << 16;
  $646 = $194;$647 = $645;
  label = 66;
 }
 if ((label|0) == 66) {
  $201 = ((($0)) + 20|0);
  $202 = HEAP32[$201>>2]|0;
  $203 = ((($0)) + 24|0);
  $204 = HEAP32[$203>>2]|0;
  $205 = ($202>>>0)<($204>>>0);
  if ($205) {
   $206 = ((($202)) + 1|0);
   HEAP32[$201>>2] = $206;
   $207 = HEAP8[$202>>0]|0;
   $208 = $207&255;
   $phitmp$i269 = $208 << 8;
   $$pre$phi423Z2D = $201;$214 = $206;$215 = $204;$220 = $646;$221 = $phitmp$i269;$648 = $647;
   label = 70;
  } else {
   $$pre$phi423Z2D = $201;$214 = $202;$215 = $204;$220 = $646;$221 = 0;$648 = $647;
   label = 70;
  }
 }
 if ((label|0) == 70) {
  $213 = ($214>>>0)<($215>>>0);
  if ($213) {
   $216 = ((($214)) + 1|0);
   HEAP32[$$pre$phi423Z2D>>2] = $216;
   $217 = HEAP8[$214>>0]|0;
   $218 = $217&255;
   $$0$i3$i275$ph = $218;
  } else {
   $$0$i3$i275$ph = 0;
  }
  $219 = (($221) + ($220))|0;
  $222 = (($219) + ($$0$i3$i275$ph))|0;
  $649 = $222;$650 = $648;
  label = 74;
 }
 if ((label|0) == 74) {
  $229 = ((($0)) + 20|0);
  $230 = HEAP32[$229>>2]|0;
  $231 = ((($0)) + 24|0);
  $232 = HEAP32[$231>>2]|0;
  $233 = ($230>>>0)<($232>>>0);
  if ($233) {
   $234 = ((($230)) + 1|0);
   HEAP32[$229>>2] = $234;
   $235 = HEAP8[$230>>0]|0;
   $236 = $235&255;
   $phitmp$i180 = $236 << 8;
   $$pre$phi425Z2D = $229;$245 = $234;$246 = $232;$651 = $649;$652 = $650;$653 = $phitmp$i180;
   label = 79;
  } else {
   $$pre$phi425Z2D = $229;$245 = $230;$246 = $232;$651 = $649;$652 = $650;$653 = 0;
   label = 79;
  }
 }
 if ((label|0) == 79) {
  $244 = ($245>>>0)<($246>>>0);
  if ($244) {
   $247 = ((($245)) + 1|0);
   HEAP32[$$pre$phi425Z2D>>2] = $247;
   $248 = HEAP8[$245>>0]|0;
   $249 = $248&255;
   $$0$i3$i186 = $249;$251 = $653;$486 = $652;$488 = $651;
  } else {
   $$0$i3$i186 = 0;$251 = $653;$486 = $652;$488 = $651;
  }
 }
 $250 = (($$0$i3$i186) + ($251))|0;
 $252 = ($250|0)==(8);
 if (!($252)) {
  HEAP32[36596] = 121464;
  $$0124 = 0;
  return ($$0124|0);
 }
 $253 = HEAP32[$5>>2]|0;
 $254 = ($253|0)==(0|0);
 do {
  if ($254) {
   $255 = ((($0)) + 20|0);
   $256 = HEAP32[$255>>2]|0;
   $257 = ((($0)) + 24|0);
   $258 = HEAP32[$257>>2]|0;
   $259 = ($256>>>0)<($258>>>0);
   if ($259) {
    $260 = ((($256)) + 1|0);
    HEAP32[$255>>2] = $260;
    $261 = HEAP8[$256>>0]|0;
    $262 = $261&255;
    $phitmp$i188 = $262 << 8;
    $$pre$phi427Z2D = $255;$271 = $260;$272 = $258;$654 = $phitmp$i188;
    label = 89;
   } else {
    $$pre$phi427Z2D = $255;$271 = $256;$272 = $258;$654 = 0;
    label = 89;
   }
  } else {
   $263 = (_fgetc($253)|0);
   $264 = ($263|0)==(-1);
   $$pre$i191 = HEAP32[$5>>2]|0;
   $$op$i192 = $263 << 8;
   $265 = $264 ? 0 : $$op$i192;
   $266 = ($$pre$i191|0)==(0|0);
   if ($266) {
    $$phi$trans$insert387 = ((($0)) + 20|0);
    $$pre388 = HEAP32[$$phi$trans$insert387>>2]|0;
    $$phi$trans$insert389 = ((($0)) + 24|0);
    $$pre390 = HEAP32[$$phi$trans$insert389>>2]|0;
    $$pre$phi427Z2D = $$phi$trans$insert387;$271 = $$pre388;$272 = $$pre390;$654 = $265;
    label = 89;
    break;
   } else {
    $267 = (_fgetc($$pre$i191)|0);
    $268 = ($267|0)==(-1);
    $269 = $268 ? 0 : $267;
    $$0$i3$i194 = $269;$277 = $265;
    break;
   }
  }
 } while(0);
 if ((label|0) == 89) {
  $270 = ($271>>>0)<($272>>>0);
  if ($270) {
   $273 = ((($271)) + 1|0);
   HEAP32[$$pre$phi427Z2D>>2] = $273;
   $274 = HEAP8[$271>>0]|0;
   $275 = $274&255;
   $$0$i3$i194 = $275;$277 = $654;
  } else {
   $$0$i3$i194 = 0;$277 = $654;
  }
 }
 $276 = (($$0$i3$i194) + ($277))|0;
 $278 = ($276|0)==(3);
 if (!($278)) {
  HEAP32[36596] = 121491;
  $$0124 = 0;
  return ($$0124|0);
 }
 $279 = HEAP32[$5>>2]|0;
 $280 = ($279|0)==(0|0);
 do {
  if ($280) {
   $281 = ((($0)) + 20|0);
   $282 = HEAP32[$281>>2]|0;
   $283 = ((($0)) + 24|0);
   $284 = HEAP32[$283>>2]|0;
   $285 = ($282>>>0)<($284>>>0);
   if ($285) {
    $286 = ((($282)) + 1|0);
    HEAP32[$281>>2] = $286;
    $287 = HEAP8[$282>>0]|0;
    $288 = $287&255;
    $phitmp$i$i196 = $288 << 8;
    $$pre$phi$i205Z2D = $281;$294 = $286;$295 = $284;$300 = $phitmp$i$i196;
    label = 98;
   } else {
    $$pre$phi$i205Z2D = $281;$294 = $282;$295 = $284;$300 = 0;
    label = 98;
   }
  } else {
   $289 = (_fgetc($279)|0);
   $290 = ($289|0)==(-1);
   $$pre$i$i197 = HEAP32[$5>>2]|0;
   $$op$i$i198 = $289 << 8;
   $291 = $290 ? 0 : $$op$i$i198;
   $292 = ($$pre$i$i197|0)==(0|0);
   if ($292) {
    $$phi$trans$insert$i200 = ((($0)) + 20|0);
    $$pre$i201 = HEAP32[$$phi$trans$insert$i200>>2]|0;
    $$phi$trans$insert3$i202 = ((($0)) + 24|0);
    $$pre4$i203 = HEAP32[$$phi$trans$insert3$i202>>2]|0;
    $$pre$phi$i205Z2D = $$phi$trans$insert$i200;$294 = $$pre$i201;$295 = $$pre4$i203;$300 = $291;
    label = 98;
    break;
   }
   $302 = (_fgetc($$pre$i$i197)|0);
   $303 = ($302|0)==(-1);
   $304 = $303 ? 0 : $302;
   $$pre391 = HEAP32[$5>>2]|0;
   $305 = (($304) + ($291))|0;
   $306 = $305 << 16;
   $307 = ($$pre391|0)==(0|0);
   if ($307) {
    $655 = $306;
    label = 102;
   } else {
    $316 = (_fgetc($$pre391)|0);
    $317 = ($316|0)==(-1);
    $$pre$i280 = HEAP32[$5>>2]|0;
    $$op$i281 = $316 << 8;
    $318 = $317 ? 0 : $$op$i281;
    $319 = ($$pre$i280|0)==(0|0);
    if ($319) {
     $$phi$trans$insert392 = ((($0)) + 20|0);
     $$pre393 = HEAP32[$$phi$trans$insert392>>2]|0;
     $$phi$trans$insert394 = ((($0)) + 24|0);
     $$pre395 = HEAP32[$$phi$trans$insert394>>2]|0;
     $$pre$phi429Z2D = $$phi$trans$insert392;$321 = $$pre393;$322 = $$pre395;$327 = $306;$328 = $318;
     label = 106;
     break;
    }
    $330 = (_fgetc($$pre$i280)|0);
    $331 = ($330|0)==(-1);
    $332 = $331 ? 0 : $330;
    $$pre396 = HEAP32[$5>>2]|0;
    $333 = (($318) + ($306))|0;
    $334 = (($333) + ($332))|0;
    $335 = ($$pre396|0)==(0|0);
    if ($335) {
     $339 = $334;
     label = 110;
    } else {
     (_fseek($$pre396,$334,1)|0);
     $$pre397 = HEAP32[$5>>2]|0;
     $340 = ($$pre397|0)==(0|0);
     if ($340) {
      label = 112;
     } else {
      $349 = (_fgetc($$pre397)|0);
      $350 = ($349|0)==(-1);
      $$pre$i$i211 = HEAP32[$5>>2]|0;
      $$op$i$i212 = $349 << 8;
      $351 = $350 ? 0 : $$op$i$i212;
      $352 = ($$pre$i$i211|0)==(0|0);
      if ($352) {
       $$phi$trans$insert$i214 = ((($0)) + 20|0);
       $$pre$i215 = HEAP32[$$phi$trans$insert$i214>>2]|0;
       $$phi$trans$insert3$i216 = ((($0)) + 24|0);
       $$pre4$i217 = HEAP32[$$phi$trans$insert3$i216>>2]|0;
       $$pre$phi$i219Z2D = $$phi$trans$insert$i214;$354 = $$pre$i215;$355 = $$pre4$i217;$360 = $351;
       label = 116;
       break;
      }
      $362 = (_fgetc($$pre$i$i211)|0);
      $363 = ($362|0)==(-1);
      $364 = $363 ? 0 : $362;
      $$pre398 = HEAP32[$5>>2]|0;
      $365 = (($364) + ($351))|0;
      $366 = $365 << 16;
      $367 = ($$pre398|0)==(0|0);
      if ($367) {
       $656 = $366;
       label = 120;
      } else {
       $376 = (_fgetc($$pre398)|0);
       $377 = ($376|0)==(-1);
       $$pre$i288 = HEAP32[$5>>2]|0;
       $$op$i289 = $376 << 8;
       $378 = $377 ? 0 : $$op$i289;
       $379 = ($$pre$i288|0)==(0|0);
       if ($379) {
        $$phi$trans$insert399 = ((($0)) + 20|0);
        $$pre400 = HEAP32[$$phi$trans$insert399>>2]|0;
        $$phi$trans$insert401 = ((($0)) + 24|0);
        $$pre402 = HEAP32[$$phi$trans$insert401>>2]|0;
        $$pre$phi431Z2D = $$phi$trans$insert399;$381 = $$pre400;$382 = $$pre402;$387 = $366;$388 = $378;
        label = 124;
        break;
       }
       $390 = (_fgetc($$pre$i288)|0);
       $391 = ($390|0)==(-1);
       $392 = $391 ? 0 : $390;
       $$pre403 = HEAP32[$5>>2]|0;
       $393 = (($378) + ($366))|0;
       $394 = (($393) + ($392))|0;
       $395 = ($$pre403|0)==(0|0);
       if ($395) {
        $399 = $394;
        label = 128;
        break;
       }
       (_fseek($$pre403,$394,1)|0);
       $$pre404 = HEAP32[$5>>2]|0;
       $400 = ($$pre404|0)==(0|0);
       if ($400) {
        label = 130;
        break;
       }
       $409 = (_fgetc($$pre404)|0);
       $410 = ($409|0)==(-1);
       $$pre$i$i225 = HEAP32[$5>>2]|0;
       $$op$i$i226 = $409 << 8;
       $411 = $410 ? 0 : $$op$i$i226;
       $412 = ($$pre$i$i225|0)==(0|0);
       if ($412) {
        $$phi$trans$insert$i228 = ((($0)) + 20|0);
        $$pre$i229 = HEAP32[$$phi$trans$insert$i228>>2]|0;
        $$phi$trans$insert3$i230 = ((($0)) + 24|0);
        $$pre4$i231 = HEAP32[$$phi$trans$insert3$i230>>2]|0;
        $$pre$phi$i233Z2D = $$phi$trans$insert$i228;$414 = $$pre$i229;$415 = $$pre4$i231;$420 = $411;
        label = 134;
        break;
       }
       $422 = (_fgetc($$pre$i$i225)|0);
       $423 = ($422|0)==(-1);
       $424 = $423 ? 0 : $422;
       $$pre405 = HEAP32[$5>>2]|0;
       $425 = (($424) + ($411))|0;
       $426 = $425 << 16;
       $427 = ($$pre405|0)==(0|0);
       if ($427) {
        $657 = $426;
        label = 138;
        break;
       }
       $436 = (_fgetc($$pre405)|0);
       $437 = ($436|0)==(-1);
       $$pre$i249 = HEAP32[$5>>2]|0;
       $$op$i250 = $436 << 8;
       $438 = $437 ? 0 : $$op$i250;
       $439 = ($$pre$i249|0)==(0|0);
       if ($439) {
        $$phi$trans$insert406 = ((($0)) + 20|0);
        $$pre407 = HEAP32[$$phi$trans$insert406>>2]|0;
        $$phi$trans$insert408 = ((($0)) + 24|0);
        $$pre409 = HEAP32[$$phi$trans$insert408>>2]|0;
        $$pre$phi433Z2D = $$phi$trans$insert406;$441 = $$pre407;$442 = $$pre409;$447 = $426;$448 = $438;
        label = 142;
        break;
       }
       $450 = (_fgetc($$pre$i249)|0);
       $451 = ($450|0)==(-1);
       $452 = $451 ? 0 : $450;
       $$pre410 = HEAP32[$5>>2]|0;
       $453 = (($438) + ($426))|0;
       $454 = (($453) + ($452))|0;
       $455 = ($$pre410|0)==(0|0);
       if ($455) {
        $459 = $454;
        label = 146;
        break;
       }
       (_fseek($$pre410,$454,1)|0);
       $$pre411 = HEAP32[$5>>2]|0;
       $460 = ($$pre411|0)==(0|0);
       if ($460) {
        label = 148;
        break;
       }
       $469 = (_fgetc($$pre411)|0);
       $470 = ($469|0)==(-1);
       $$pre$i241 = HEAP32[$5>>2]|0;
       $$op$i242 = $469 << 8;
       $471 = $470 ? 0 : $$op$i242;
       $472 = ($$pre$i241|0)==(0|0);
       if ($472) {
        $$phi$trans$insert412 = ((($0)) + 20|0);
        $$pre413 = HEAP32[$$phi$trans$insert412>>2]|0;
        $$phi$trans$insert414 = ((($0)) + 24|0);
        $$pre415 = HEAP32[$$phi$trans$insert414>>2]|0;
        $$pre$phi435Z2D = $$phi$trans$insert412;$477 = $$pre413;$478 = $$pre415;$658 = $471;
        label = 153;
        break;
       } else {
        $473 = (_fgetc($$pre$i241)|0);
        $474 = ($473|0)==(-1);
        $475 = $474 ? 0 : $473;
        $$0$i3$i244 = $475;$483 = $471;
        break;
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 98) {
  $293 = ($294>>>0)<($295>>>0);
  if ($293) {
   $296 = ((($294)) + 1|0);
   HEAP32[$$pre$phi$i205Z2D>>2] = $296;
   $297 = HEAP8[$294>>0]|0;
   $298 = $297&255;
   $$0$i3$i$i207$ph = $298;
  } else {
   $$0$i3$i$i207$ph = 0;
  }
  $299 = (($$0$i3$i$i207$ph) + ($300))|0;
  $301 = $299 << 16;
  $655 = $301;
  label = 102;
 }
 if ((label|0) == 102) {
  $308 = ((($0)) + 20|0);
  $309 = HEAP32[$308>>2]|0;
  $310 = ((($0)) + 24|0);
  $311 = HEAP32[$310>>2]|0;
  $312 = ($309>>>0)<($311>>>0);
  if ($312) {
   $313 = ((($309)) + 1|0);
   HEAP32[$308>>2] = $313;
   $314 = HEAP8[$309>>0]|0;
   $315 = $314&255;
   $phitmp$i277 = $315 << 8;
   $$pre$phi429Z2D = $308;$321 = $313;$322 = $311;$327 = $655;$328 = $phitmp$i277;
   label = 106;
  } else {
   $$pre$phi429Z2D = $308;$321 = $309;$322 = $311;$327 = $655;$328 = 0;
   label = 106;
  }
 }
 if ((label|0) == 106) {
  $320 = ($321>>>0)<($322>>>0);
  if ($320) {
   $323 = ((($321)) + 1|0);
   HEAP32[$$pre$phi429Z2D>>2] = $323;
   $324 = HEAP8[$321>>0]|0;
   $325 = $324&255;
   $$0$i3$i283$ph = $325;
  } else {
   $$0$i3$i283$ph = 0;
  }
  $326 = (($328) + ($327))|0;
  $329 = (($326) + ($$0$i3$i283$ph))|0;
  $339 = $329;
  label = 110;
 }
 if ((label|0) == 110) {
  $336 = ((($0)) + 20|0);
  $337 = HEAP32[$336>>2]|0;
  $338 = (($337) + ($339)|0);
  HEAP32[$336>>2] = $338;
  label = 112;
 }
 if ((label|0) == 112) {
  $341 = ((($0)) + 20|0);
  $342 = HEAP32[$341>>2]|0;
  $343 = ((($0)) + 24|0);
  $344 = HEAP32[$343>>2]|0;
  $345 = ($342>>>0)<($344>>>0);
  if ($345) {
   $346 = ((($342)) + 1|0);
   HEAP32[$341>>2] = $346;
   $347 = HEAP8[$342>>0]|0;
   $348 = $347&255;
   $phitmp$i$i210 = $348 << 8;
   $$pre$phi$i219Z2D = $341;$354 = $346;$355 = $344;$360 = $phitmp$i$i210;
   label = 116;
  } else {
   $$pre$phi$i219Z2D = $341;$354 = $342;$355 = $344;$360 = 0;
   label = 116;
  }
 }
 if ((label|0) == 116) {
  $353 = ($354>>>0)<($355>>>0);
  if ($353) {
   $356 = ((($354)) + 1|0);
   HEAP32[$$pre$phi$i219Z2D>>2] = $356;
   $357 = HEAP8[$354>>0]|0;
   $358 = $357&255;
   $$0$i3$i$i221$ph = $358;
  } else {
   $$0$i3$i$i221$ph = 0;
  }
  $359 = (($$0$i3$i$i221$ph) + ($360))|0;
  $361 = $359 << 16;
  $656 = $361;
  label = 120;
 }
 if ((label|0) == 120) {
  $368 = ((($0)) + 20|0);
  $369 = HEAP32[$368>>2]|0;
  $370 = ((($0)) + 24|0);
  $371 = HEAP32[$370>>2]|0;
  $372 = ($369>>>0)<($371>>>0);
  if ($372) {
   $373 = ((($369)) + 1|0);
   HEAP32[$368>>2] = $373;
   $374 = HEAP8[$369>>0]|0;
   $375 = $374&255;
   $phitmp$i285 = $375 << 8;
   $$pre$phi431Z2D = $368;$381 = $373;$382 = $371;$387 = $656;$388 = $phitmp$i285;
   label = 124;
  } else {
   $$pre$phi431Z2D = $368;$381 = $369;$382 = $371;$387 = $656;$388 = 0;
   label = 124;
  }
 }
 if ((label|0) == 124) {
  $380 = ($381>>>0)<($382>>>0);
  if ($380) {
   $383 = ((($381)) + 1|0);
   HEAP32[$$pre$phi431Z2D>>2] = $383;
   $384 = HEAP8[$381>>0]|0;
   $385 = $384&255;
   $$0$i3$i291$ph = $385;
  } else {
   $$0$i3$i291$ph = 0;
  }
  $386 = (($388) + ($387))|0;
  $389 = (($386) + ($$0$i3$i291$ph))|0;
  $399 = $389;
  label = 128;
 }
 if ((label|0) == 128) {
  $396 = ((($0)) + 20|0);
  $397 = HEAP32[$396>>2]|0;
  $398 = (($397) + ($399)|0);
  HEAP32[$396>>2] = $398;
  label = 130;
 }
 if ((label|0) == 130) {
  $401 = ((($0)) + 20|0);
  $402 = HEAP32[$401>>2]|0;
  $403 = ((($0)) + 24|0);
  $404 = HEAP32[$403>>2]|0;
  $405 = ($402>>>0)<($404>>>0);
  if ($405) {
   $406 = ((($402)) + 1|0);
   HEAP32[$401>>2] = $406;
   $407 = HEAP8[$402>>0]|0;
   $408 = $407&255;
   $phitmp$i$i224 = $408 << 8;
   $$pre$phi$i233Z2D = $401;$414 = $406;$415 = $404;$420 = $phitmp$i$i224;
   label = 134;
  } else {
   $$pre$phi$i233Z2D = $401;$414 = $402;$415 = $404;$420 = 0;
   label = 134;
  }
 }
 if ((label|0) == 134) {
  $413 = ($414>>>0)<($415>>>0);
  if ($413) {
   $416 = ((($414)) + 1|0);
   HEAP32[$$pre$phi$i233Z2D>>2] = $416;
   $417 = HEAP8[$414>>0]|0;
   $418 = $417&255;
   $$0$i3$i$i235$ph = $418;
  } else {
   $$0$i3$i$i235$ph = 0;
  }
  $419 = (($$0$i3$i$i235$ph) + ($420))|0;
  $421 = $419 << 16;
  $657 = $421;
  label = 138;
 }
 if ((label|0) == 138) {
  $428 = ((($0)) + 20|0);
  $429 = HEAP32[$428>>2]|0;
  $430 = ((($0)) + 24|0);
  $431 = HEAP32[$430>>2]|0;
  $432 = ($429>>>0)<($431>>>0);
  if ($432) {
   $433 = ((($429)) + 1|0);
   HEAP32[$428>>2] = $433;
   $434 = HEAP8[$429>>0]|0;
   $435 = $434&255;
   $phitmp$i246 = $435 << 8;
   $$pre$phi433Z2D = $428;$441 = $433;$442 = $431;$447 = $657;$448 = $phitmp$i246;
   label = 142;
  } else {
   $$pre$phi433Z2D = $428;$441 = $429;$442 = $431;$447 = $657;$448 = 0;
   label = 142;
  }
 }
 if ((label|0) == 142) {
  $440 = ($441>>>0)<($442>>>0);
  if ($440) {
   $443 = ((($441)) + 1|0);
   HEAP32[$$pre$phi433Z2D>>2] = $443;
   $444 = HEAP8[$441>>0]|0;
   $445 = $444&255;
   $$0$i3$i252$ph = $445;
  } else {
   $$0$i3$i252$ph = 0;
  }
  $446 = (($448) + ($447))|0;
  $449 = (($446) + ($$0$i3$i252$ph))|0;
  $459 = $449;
  label = 146;
 }
 if ((label|0) == 146) {
  $456 = ((($0)) + 20|0);
  $457 = HEAP32[$456>>2]|0;
  $458 = (($457) + ($459)|0);
  HEAP32[$456>>2] = $458;
  label = 148;
 }
 if ((label|0) == 148) {
  $461 = ((($0)) + 20|0);
  $462 = HEAP32[$461>>2]|0;
  $463 = ((($0)) + 24|0);
  $464 = HEAP32[$463>>2]|0;
  $465 = ($462>>>0)<($464>>>0);
  if ($465) {
   $466 = ((($462)) + 1|0);
   HEAP32[$461>>2] = $466;
   $467 = HEAP8[$462>>0]|0;
   $468 = $467&255;
   $phitmp$i238 = $468 << 8;
   $$pre$phi435Z2D = $461;$477 = $466;$478 = $464;$658 = $phitmp$i238;
   label = 153;
  } else {
   $$pre$phi435Z2D = $461;$477 = $462;$478 = $464;$658 = 0;
   label = 153;
  }
 }
 if ((label|0) == 153) {
  $476 = ($477>>>0)<($478>>>0);
  if ($476) {
   $479 = ((($477)) + 1|0);
   HEAP32[$$pre$phi435Z2D>>2] = $479;
   $480 = HEAP8[$477>>0]|0;
   $481 = $480&255;
   $$0$i3$i244 = $481;$483 = $658;
  } else {
   $$0$i3$i244 = 0;$483 = $658;
  }
 }
 $482 = (($$0$i3$i244) + ($483))|0;
 $484 = ($482|0)>(1);
 if ($484) {
  HEAP32[36596] = 121522;
  $$0124 = 0;
  return ($$0124|0);
 }
 $485 = $486 << 2;
 $487 = Math_imul($485, $488)|0;
 $489 = (_malloc($487)|0);
 $490 = ($489|0)==(0|0);
 if ($490) {
  HEAP32[36596] = 121182;
  $$0124 = 0;
  return ($$0124|0);
 }
 $491 = Math_imul($488, $486)|0;
 $492 = ($482|0)==(0);
 L239: do {
  if ($492) {
   $562 = ($491|0)>(0);
   $563 = ((($0)) + 20|0);
   $564 = ((($0)) + 24|0);
   if ($562) {
    $$1303$us = $489;$$2132302$us = 0;
    while(1) {
     $565 = HEAP32[$5>>2]|0;
     $566 = ($565|0)==(0|0);
     if ($566) {
      $570 = HEAP32[$563>>2]|0;
      $571 = HEAP32[$564>>2]|0;
      $572 = ($570>>>0)<($571>>>0);
      if ($572) {
       $573 = ((($570)) + 1|0);
       HEAP32[$563>>2] = $573;
       $574 = HEAP8[$570>>0]|0;
       $575 = $574&255;
       $$0$i259$us = $575;
      } else {
       $$0$i259$us = 0;
      }
     } else {
      $567 = (_fgetc($565)|0);
      $568 = ($567|0)==(-1);
      $569 = $568 ? 0 : $567;
      $$0$i259$us = $569;
     }
     $576 = $$0$i259$us&255;
     HEAP8[$$1303$us>>0] = $576;
     $577 = ((($$1303$us)) + 4|0);
     $578 = (($$2132302$us) + 1)|0;
     $exitcond = ($578|0)==($491|0);
     if ($exitcond) {
      break;
     } else {
      $$1303$us = $577;$$2132302$us = $578;
     }
    }
    $579 = ((($489)) + 1|0);
    $580 = ($114|0)<(1);
    if ($580) {
     $$0305$us$1 = $579;$$1131304$us$1 = 0;
     while(1) {
      HEAP8[$$0305$us$1>>0] = 0;
      $600 = ((($$0305$us$1)) + 4|0);
      $601 = (($$1131304$us$1) + 1)|0;
      $exitcond346$1 = ($601|0)==($491|0);
      if ($exitcond346$1) {
       break;
      } else {
       $$0305$us$1 = $600;$$1131304$us$1 = $601;
      }
     }
    } else {
     $$1303$us$1 = $579;$$2132302$us$1 = 0;
     while(1) {
      $586 = HEAP32[$5>>2]|0;
      $587 = ($586|0)==(0|0);
      do {
       if ($587) {
        $591 = HEAP32[$563>>2]|0;
        $592 = HEAP32[$564>>2]|0;
        $593 = ($591>>>0)<($592>>>0);
        if (!($593)) {
         $$0$i259$us$1 = 0;
         break;
        }
        $594 = ((($591)) + 1|0);
        HEAP32[$563>>2] = $594;
        $595 = HEAP8[$591>>0]|0;
        $596 = $595&255;
        $$0$i259$us$1 = $596;
       } else {
        $588 = (_fgetc($586)|0);
        $589 = ($588|0)==(-1);
        $590 = $589 ? 0 : $588;
        $$0$i259$us$1 = $590;
       }
      } while(0);
      $597 = $$0$i259$us$1&255;
      HEAP8[$$1303$us$1>>0] = $597;
      $598 = ((($$1303$us$1)) + 4|0);
      $599 = (($$2132302$us$1) + 1)|0;
      $exitcond$1 = ($599|0)==($491|0);
      if ($exitcond$1) {
       break;
      } else {
       $$1303$us$1 = $598;$$2132302$us$1 = $599;
      }
     }
    }
    $602 = ((($489)) + 2|0);
    $603 = ($114|0)<(2);
    if ($603) {
     $$0305$us$2 = $602;$$1131304$us$2 = 0;
     while(1) {
      HEAP8[$$0305$us$2>>0] = 0;
      $618 = ((($$0305$us$2)) + 4|0);
      $619 = (($$1131304$us$2) + 1)|0;
      $exitcond346$2 = ($619|0)==($491|0);
      if ($exitcond346$2) {
       break;
      } else {
       $$0305$us$2 = $618;$$1131304$us$2 = $619;
      }
     }
    } else {
     $$1303$us$2 = $602;$$2132302$us$2 = 0;
     while(1) {
      $604 = HEAP32[$5>>2]|0;
      $605 = ($604|0)==(0|0);
      do {
       if ($605) {
        $609 = HEAP32[$563>>2]|0;
        $610 = HEAP32[$564>>2]|0;
        $611 = ($609>>>0)<($610>>>0);
        if (!($611)) {
         $$0$i259$us$2 = 0;
         break;
        }
        $612 = ((($609)) + 1|0);
        HEAP32[$563>>2] = $612;
        $613 = HEAP8[$609>>0]|0;
        $614 = $613&255;
        $$0$i259$us$2 = $614;
       } else {
        $606 = (_fgetc($604)|0);
        $607 = ($606|0)==(-1);
        $608 = $607 ? 0 : $606;
        $$0$i259$us$2 = $608;
       }
      } while(0);
      $615 = $$0$i259$us$2&255;
      HEAP8[$$1303$us$2>>0] = $615;
      $616 = ((($$1303$us$2)) + 4|0);
      $617 = (($$2132302$us$2) + 1)|0;
      $exitcond$2 = ($617|0)==($491|0);
      if ($exitcond$2) {
       break;
      } else {
       $$1303$us$2 = $616;$$2132302$us$2 = $617;
      }
     }
    }
    $620 = ((($489)) + 3|0);
    $621 = ($114|0)<(3);
    if ($621) {
     $$0305$us$3 = $620;$$1131304$us$3 = 0;
     while(1) {
      HEAP8[$$0305$us$3>>0] = -1;
      $636 = ((($$0305$us$3)) + 4|0);
      $637 = (($$1131304$us$3) + 1)|0;
      $exitcond346$3 = ($637|0)==($491|0);
      if ($exitcond346$3) {
       break L239;
      } else {
       $$0305$us$3 = $636;$$1131304$us$3 = $637;
      }
     }
    }
    $$1303$us$3 = $620;$$2132302$us$3 = 0;
    while(1) {
     $622 = HEAP32[$5>>2]|0;
     $623 = ($622|0)==(0|0);
     do {
      if ($623) {
       $627 = HEAP32[$563>>2]|0;
       $628 = HEAP32[$564>>2]|0;
       $629 = ($627>>>0)<($628>>>0);
       if (!($629)) {
        $$0$i259$us$3 = 0;
        break;
       }
       $630 = ((($627)) + 1|0);
       HEAP32[$563>>2] = $630;
       $631 = HEAP8[$627>>0]|0;
       $632 = $631&255;
       $$0$i259$us$3 = $632;
      } else {
       $624 = (_fgetc($622)|0);
       $625 = ($624|0)==(-1);
       $626 = $625 ? 0 : $624;
       $$0$i259$us$3 = $626;
      }
     } while(0);
     $633 = $$0$i259$us$3&255;
     HEAP8[$$1303$us$3>>0] = $633;
     $634 = ((($$1303$us$3)) + 4|0);
     $635 = (($$2132302$us$3) + 1)|0;
     $exitcond$3 = ($635|0)==($491|0);
     if ($exitcond$3) {
      break;
     } else {
      $$1303$us$3 = $634;$$2132302$us$3 = $635;
     }
    }
   }
  } else {
   $493 = $114 << 1;
   $494 = Math_imul($493, $486)|0;
   $495 = HEAP32[$5>>2]|0;
   $496 = ($495|0)==(0|0);
   if ($496) {
    $497 = ((($0)) + 20|0);
    $498 = HEAP32[$497>>2]|0;
    $499 = (($498) + ($494)|0);
    HEAP32[$497>>2] = $499;
    $$pre$phi438Z2D = $497;
   } else {
    (_fseek($495,$494,1)|0);
    $$pre437 = ((($0)) + 20|0);
    $$pre$phi438Z2D = $$pre437;
   }
   $500 = ($491|0)>(0);
   $501 = ((($0)) + 24|0);
   if ($500) {
    $$0128334$us = 0;
    while(1) {
     $502 = (($489) + ($$0128334$us)|0);
     $503 = ($$0128334$us|0)<($114|0);
     if ($503) {
      $$0135331$us = 0;$$1126332$us = $502;
      while(1) {
       $508 = HEAP32[$5>>2]|0;
       $509 = ($508|0)==(0|0);
       do {
        if ($509) {
         $512 = HEAP32[$$pre$phi438Z2D>>2]|0;
         $513 = HEAP32[$501>>2]|0;
         $514 = ($512>>>0)<($513>>>0);
         if (!($514)) {
          label = 181;
          break;
         }
         $515 = ((($512)) + 1|0);
         HEAP32[$$pre$phi438Z2D>>2] = $515;
         $516 = HEAP8[$512>>0]|0;
         $517 = $516&255;
         $$0$i$us = $517;
         label = 173;
        } else {
         $510 = (_fgetc($508)|0);
         $511 = ($510|0)==(-1);
         if ($511) {
          label = 181;
         } else {
          $$0$i$us = $510;
          label = 173;
         }
        }
       } while(0);
       do {
        if ((label|0) == 173) {
         label = 0;
         $518 = ($$0$i$us|0)==(128);
         if ($518) {
          $$1136$us = $$0135331$us;$$4$us = $$1126332$us;
          break;
         }
         $519 = ($$0$i$us|0)<(128);
         if ($519) {
          $540 = (($$0$i$us) + 1)|0;
          $541 = (($540) + ($$0135331$us))|0;
          $542 = ($540|0)==(0);
          if ($542) {
           $$1136$us = $541;$$4$us = $$1126332$us;
           break;
          } else {
           $$0$i293294$us439 = $$0$i$us;$659 = $541;$660 = $540;
           label = 193;
           break;
          }
         }
         $520 = $$0$i$us ^ 255;
         $521 = (($520) + 2)|0;
         $522 = HEAP32[$5>>2]|0;
         $523 = ($522|0)==(0|0);
         do {
          if ($523) {
           $527 = HEAP32[$$pre$phi438Z2D>>2]|0;
           $528 = HEAP32[$501>>2]|0;
           $529 = ($527>>>0)<($528>>>0);
           if (!($529)) {
            $$0$i257$us = 0;
            break;
           }
           $530 = ((($527)) + 1|0);
           HEAP32[$$pre$phi438Z2D>>2] = $530;
           $531 = HEAP8[$527>>0]|0;
           $532 = $531&255;
           $$0$i257$us = $532;
          } else {
           $524 = (_fgetc($522)|0);
           $525 = ($524|0)==(-1);
           $526 = $525 ? 0 : $524;
           $$0$i257$us = $526;
          }
         } while(0);
         $533 = (($521) + ($$0135331$us))|0;
         $534 = ($521|0)==(0);
         if ($534) {
          $$1136$us = $533;$$4$us = $$1126332$us;
          break;
         }
         $535 = $$0$i257$us&255;
         $559 = $520 << 2;
         $$1134324$us = $521;$$3325$us = $$1126332$us;
         while(1) {
          HEAP8[$$3325$us>>0] = $535;
          $536 = ((($$3325$us)) + 4|0);
          $537 = (($$1134324$us) + -1)|0;
          $538 = ($537|0)==(0);
          if ($538) {
           break;
          } else {
           $$1134324$us = $537;$$3325$us = $536;
          }
         }
         $scevgep = ((($$1126332$us)) + 8|0);
         $scevgep350 = (($scevgep) + ($559)|0);
         $$1136$us = $533;$$4$us = $scevgep350;
        }
        else if ((label|0) == 181) {
         label = 0;
         $539 = (($$0135331$us) + 1)|0;
         $$0$i293294$us439 = 0;$659 = $539;$660 = 1;
         label = 193;
        }
       } while(0);
       if ((label|0) == 193) {
        label = 0;
        $558 = $$0$i293294$us439 << 2;
        $$0133327$us = $660;$$2328$us = $$1126332$us;
        while(1) {
         $543 = HEAP32[$5>>2]|0;
         $544 = ($543|0)==(0|0);
         do {
          if ($544) {
           $548 = HEAP32[$$pre$phi438Z2D>>2]|0;
           $549 = HEAP32[$501>>2]|0;
           $550 = ($548>>>0)<($549>>>0);
           if (!($550)) {
            $$0$i255$us = 0;
            break;
           }
           $551 = ((($548)) + 1|0);
           HEAP32[$$pre$phi438Z2D>>2] = $551;
           $552 = HEAP8[$548>>0]|0;
           $553 = $552&255;
           $$0$i255$us = $553;
          } else {
           $545 = (_fgetc($543)|0);
           $546 = ($545|0)==(-1);
           $547 = $546 ? 0 : $545;
           $$0$i255$us = $547;
          }
         } while(0);
         $554 = $$0$i255$us&255;
         HEAP8[$$2328$us>>0] = $554;
         $555 = ((($$2328$us)) + 4|0);
         $556 = (($$0133327$us) + -1)|0;
         $557 = ($556|0)==(0);
         if ($557) {
          break;
         } else {
          $$0133327$us = $556;$$2328$us = $555;
         }
        }
        $scevgep351 = ((($$1126332$us)) + 4|0);
        $scevgep352 = (($scevgep351) + ($558)|0);
        $$1136$us = $659;$$4$us = $scevgep352;
       }
       $560 = ($$1136$us|0)<($491|0);
       if ($560) {
        $$0135331$us = $$1136$us;$$1126332$us = $$4$us;
       } else {
        break;
       }
      }
     } else {
      $561 = ($$0128334$us|0)==(3);
      $504 = $561 << 31 >> 31;
      $$0125322$us = $502;$$0130321$us = 0;
      while(1) {
       HEAP8[$$0125322$us>>0] = $504;
       $505 = ((($$0125322$us)) + 4|0);
       $506 = (($$0130321$us) + 1)|0;
       $exitcond349 = ($506|0)==($491|0);
       if ($exitcond349) {
        break;
       } else {
        $$0125322$us = $505;$$0130321$us = $506;
       }
      }
     }
     $507 = (($$0128334$us) + 1)|0;
     $exitcond353 = ($507|0)==(4);
     if ($exitcond353) {
      break;
     } else {
      $$0128334$us = $507;
     }
    }
   }
  }
 } while(0);
 $581 = $4 | 4;
 $582 = ($581|0)==(4);
 if ($582) {
  $$0127 = $489;
 } else {
  $583 = (_convert_format($489,4,$4,$488,$486)|0);
  $584 = ($583|0)==(0|0);
  if ($584) {
   $$0124 = 0;
   return ($$0124|0);
  } else {
   $$0127 = $583;
  }
 }
 $585 = ($3|0)==(0|0);
 if (!($585)) {
  HEAP32[$3>>2] = $114;
 }
 HEAP32[$2>>2] = $486;
 HEAP32[$1>>2] = $488;
 $$0124 = $$0127;
 return ($$0124|0);
}
function _dds_test($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$0$i = 0, $$0$i10 = 0, $$0$i3$i = 0, $$0$i3$i$i$ph = 0, $$0$i5$i = 0, $$0$i6 = 0, $$0$i6$i = 0, $$0$i6$i$i = 0, $$0$i8 = 0, $$op = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert16 = 0, $$phi$trans$insert3$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i5 = 0;
 var $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$pre15 = 0, $$pre17 = 0, $$pre4$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 do {
  if ($3) {
   $6 = ((($0)) + 20|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 24|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    HEAP32[$6>>2] = $11;
    $12 = HEAP8[$7>>0]|0;
    $13 = $12&255;
    $$0$i = $13;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $4 = (_fgetc($2)|0);
   $5 = ($4|0)==(-1);
   if ($5) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i = $4;
   }
  }
 } while(0);
 $14 = ($$0$i|0)==(68);
 if (!($14)) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[$1>>2]|0;
 $16 = ($15|0)==(0|0);
 do {
  if ($16) {
   $19 = ((($0)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($0)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = ($20>>>0)<($22>>>0);
   if ($23) {
    $24 = ((($20)) + 1|0);
    HEAP32[$19>>2] = $24;
    $25 = HEAP8[$20>>0]|0;
    $26 = $25&255;
    $$0$i6 = $26;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $17 = (_fgetc($15)|0);
   $18 = ($17|0)==(-1);
   if ($18) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i6 = $17;
   }
  }
 } while(0);
 $27 = ($$0$i6|0)==(68);
 if (!($27)) {
  $$0 = 0;
  return ($$0|0);
 }
 $28 = HEAP32[$1>>2]|0;
 $29 = ($28|0)==(0|0);
 do {
  if ($29) {
   $32 = ((($0)) + 20|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($0)) + 24|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($33>>>0)<($35>>>0);
   if ($36) {
    $37 = ((($33)) + 1|0);
    HEAP32[$32>>2] = $37;
    $38 = HEAP8[$33>>0]|0;
    $39 = $38&255;
    $$0$i8 = $39;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $30 = (_fgetc($28)|0);
   $31 = ($30|0)==(-1);
   if ($31) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i8 = $30;
   }
  }
 } while(0);
 $40 = ($$0$i8|0)==(83);
 if (!($40)) {
  $$0 = 0;
  return ($$0|0);
 }
 $41 = HEAP32[$1>>2]|0;
 $42 = ($41|0)==(0|0);
 do {
  if ($42) {
   $45 = ((($0)) + 20|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ((($0)) + 24|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = ($46>>>0)<($48>>>0);
   if ($49) {
    $50 = ((($46)) + 1|0);
    HEAP32[$45>>2] = $50;
    $51 = HEAP8[$46>>0]|0;
    $52 = $51&255;
    $$0$i10 = $52;
    break;
   } else {
    $$0 = 0;
    return ($$0|0);
   }
  } else {
   $43 = (_fgetc($41)|0);
   $44 = ($43|0)==(-1);
   if ($44) {
    $$0 = 0;
    return ($$0|0);
   } else {
    $$0$i10 = $43;
   }
  }
 } while(0);
 $53 = ($$0$i10|0)==(32);
 if (!($53)) {
  $$0 = 0;
  return ($$0|0);
 }
 $54 = HEAP32[$1>>2]|0;
 $55 = ($54|0)==(0|0);
 do {
  if ($55) {
   $56 = ((($0)) + 20|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = ((($0)) + 24|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ($57>>>0)<($59>>>0);
   if ($60) {
    $61 = ((($57)) + 1|0);
    HEAP32[$56>>2] = $61;
    $62 = HEAP8[$57>>0]|0;
    $63 = $62&255;
    $$0$i6$i$i = $63;$$pre$phi$iZ2D = $56;$69 = $61;$70 = $59;
    label = 26;
   } else {
    $$0$i6$i$i = 0;$$pre$phi$iZ2D = $56;$69 = $57;$70 = $59;
    label = 26;
   }
  } else {
   $64 = (_fgetc($54)|0);
   $65 = ($64|0)==(-1);
   $66 = $65 ? 0 : $64;
   $$pre$i$i = HEAP32[$1>>2]|0;
   $67 = ($$pre$i$i|0)==(0|0);
   if ($67) {
    $$phi$trans$insert$i = ((($0)) + 20|0);
    $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
    $$phi$trans$insert3$i = ((($0)) + 24|0);
    $$pre4$i = HEAP32[$$phi$trans$insert3$i>>2]|0;
    $$0$i6$i$i = $66;$$pre$phi$iZ2D = $$phi$trans$insert$i;$69 = $$pre$i;$70 = $$pre4$i;
    label = 26;
    break;
   }
   $75 = (_fgetc($$pre$i$i)|0);
   $76 = ($75|0)==(-1);
   $$pre = HEAP32[$1>>2]|0;
   $$op = $75 << 8;
   $77 = $76 ? 0 : $$op;
   $78 = (($77) + ($66))|0;
   $79 = ($$pre|0)==(0|0);
   if ($79) {
    $107 = $78;
    label = 30;
   } else {
    $88 = (_fgetc($$pre)|0);
    $89 = ($88|0)==(-1);
    $90 = $89 ? 0 : $88;
    $$pre$i5 = HEAP32[$1>>2]|0;
    $91 = ($$pre$i5|0)==(0|0);
    if ($91) {
     $$phi$trans$insert = ((($0)) + 20|0);
     $$pre15 = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert16 = ((($0)) + 24|0);
     $$pre17 = HEAP32[$$phi$trans$insert16>>2]|0;
     $$0$i6$i = $90;$$pre$phiZ2D = $$phi$trans$insert;$108 = $78;$96 = $$pre15;$97 = $$pre17;
     label = 35;
     break;
    } else {
     $92 = (_fgetc($$pre$i5)|0);
     $93 = ($92|0)==(-1);
     $94 = $93 ? 0 : $92;
     $$0$i3$i = $94;$$0$i5$i = $90;$105 = $78;
     break;
    }
   }
  }
 } while(0);
 if ((label|0) == 26) {
  $68 = ($69>>>0)<($70>>>0);
  if ($68) {
   $71 = ((($69)) + 1|0);
   HEAP32[$$pre$phi$iZ2D>>2] = $71;
   $72 = HEAP8[$69>>0]|0;
   $73 = $72&255;
   $phitmp = $73 << 8;
   $$0$i3$i$i$ph = $phitmp;
  } else {
   $$0$i3$i$i$ph = 0;
  }
  $74 = (($$0$i3$i$i$ph) + ($$0$i6$i$i))|0;
  $107 = $74;
  label = 30;
 }
 if ((label|0) == 30) {
  $80 = ((($0)) + 20|0);
  $81 = HEAP32[$80>>2]|0;
  $82 = ((($0)) + 24|0);
  $83 = HEAP32[$82>>2]|0;
  $84 = ($81>>>0)<($83>>>0);
  if ($84) {
   $85 = ((($81)) + 1|0);
   HEAP32[$80>>2] = $85;
   $86 = HEAP8[$81>>0]|0;
   $87 = $86&255;
   $$0$i6$i = $87;$$pre$phiZ2D = $80;$108 = $107;$96 = $85;$97 = $83;
   label = 35;
  } else {
   $$0$i6$i = 0;$$pre$phiZ2D = $80;$108 = $107;$96 = $81;$97 = $83;
   label = 35;
  }
 }
 if ((label|0) == 35) {
  $95 = ($96>>>0)<($97>>>0);
  if ($95) {
   $98 = ((($96)) + 1|0);
   HEAP32[$$pre$phiZ2D>>2] = $98;
   $99 = HEAP8[$96>>0]|0;
   $100 = $99&255;
   $$0$i3$i = $100;$$0$i5$i = $$0$i6$i;$105 = $108;
  } else {
   $$0$i3$i = 0;$$0$i5$i = $$0$i6$i;$105 = $108;
  }
 }
 $101 = $$0$i3$i << 8;
 $102 = (($101) + ($$0$i5$i))|0;
 $103 = $102 << 16;
 $104 = (($105) + ($103))|0;
 $106 = ($104|0)==(124);
 $$ = $106&1;
 $$0 = $$;
 return ($$0|0);
}
function _dds_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0163$i = 0, $$0164247$i$us = 0, $$0165242$i = 0, $$0211$us = 0, $$0213 = 0, $$0215 = 0, $$0216 = 0, $$0218251$us = 0, $$0220262 = 0, $$0222 = 0, $$0223255 = 0, $$11162189$i$us = 0, $$11176$i$us = 0, $$11176191$i$us = 0, $$11190$i$us = 0, $$1221248 = 0, $$1221248$us = 0, $$1224259 = 0, $$1226 = 0;
 var $$2246$us = 0, $$3244 = 0, $$4243 = 0, $$mask = 0, $$not237 = 0, $$off = 0, $$off227 = 0, $$op = 0, $$pre = 0, $$pre277 = 0, $$pre278 = 0, $$pre279 = 0, $$pre280 = 0, $$pre281 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $exitcond269 = 0, $exitcond270 = 0, $exitcond271 = 0, $exitcond274 = 0, $exitcond275 = 0, $exitcond276 = 0, $or$cond = 0, $scevgep = 0, $scevgep273 = 0, $spec$select228 = 0, $spec$select230$us = 0, $spec$store$select = 0, dest = 0, label = 0;
 var sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $5 = sp;
 $6 = sp + 64|0;
 $7 = sp + 72|0;
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $11 = ((($0)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  dest=$7; src=$12; stop=dest+128|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
  $13 = ((($12)) + 128|0);
  HEAP32[$11>>2] = $13;
 } else {
  (_fread($7,1,128,$9)|0);
 }
 $14 = HEAP32[$7>>2]|0;
 $15 = ($14|0)==(542327876);
 if (!($15)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ((($7)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(124);
 if (!($18)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $19 = ((($7)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 & 4103;
 $22 = ($21|0)==(4103);
 if (!($22)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = ((($7)) + 76|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = ($24|0)==(32);
 if (!($25)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $26 = ((($7)) + 80|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = $27 & 68;
 $29 = ($28|0)==(0);
 if ($29) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = ((($7)) + 108|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = $31 & 4096;
 $33 = ($32|0)==(0);
 if ($33) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $34 = ((($7)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 HEAP32[$0>>2] = $35;
 $36 = ((($7)) + 12|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($0)) + 4|0);
 HEAP32[$38>>2] = $37;
 $39 = ((($0)) + 8|0);
 HEAP32[$39>>2] = 4;
 $40 = $27 & 4;
 $41 = $31 & 4194304;
 $42 = ($41|0)!=(0);
 $43 = ((($7)) + 28|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ($44>>>0)>(1);
 $46 = $42 & $45;
 $47 = ((($7)) + 112|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = $48 >>> 9;
 $50 = ($35|0)==($37|0);
 $51 = $50&1;
 $52 = $49 & $51;
 $53 = (0 - ($52))|0;
 $54 = $53 & 5;
 $55 = (($54) + 1)|0;
 $56 = (($35) + 3)|0;
 $57 = $56 >>> 2;
 $58 = (($37) + 3)|0;
 $59 = $58 >>> 2;
 $60 = Math_imul($59, $57)|0;
 HEAP32[$1>>2] = $35;
 $61 = HEAP32[$38>>2]|0;
 HEAP32[$2>>2] = $61;
 $62 = HEAP32[$39>>2]|0;
 HEAP32[$3>>2] = $62;
 $63 = ($40|0)==(0);
 if ($63) {
  $172 = $27 & 1;
  $173 = (($172) + 3)|0;
  HEAP32[$39>>2] = $173;
  HEAP32[$3>>2] = $173;
  $174 = HEAP32[$0>>2]|0;
  $175 = HEAP32[$38>>2]|0;
  $176 = HEAP32[$39>>2]|0;
  $177 = Math_imul($174, $55)|0;
  $178 = Math_imul($177, $175)|0;
  $179 = Math_imul($178, $176)|0;
  $180 = (_malloc($179)|0);
  $181 = ((($0)) + 20|0);
  L25: do {
   if ($46) {
    $$1221248$us = 0;$183 = $175;$184 = $174;$187 = $176;
    while(1) {
     $182 = Math_imul($183, $184)|0;
     $185 = Math_imul($182, $$1221248$us)|0;
     $186 = Math_imul($185, $187)|0;
     $188 = (($180) + ($186)|0);
     $189 = Math_imul($182, $187)|0;
     $190 = HEAP32[$8>>2]|0;
     $191 = ($190|0)==(0|0);
     if ($191) {
      $192 = HEAP32[$181>>2]|0;
      _memcpy(($188|0),($192|0),($189|0))|0;
      $193 = (($192) + ($189)|0);
      HEAP32[$181>>2] = $193;
     } else {
      (_fread($188,1,$189,$190)|0);
     }
     $$2246$us = 1;
     while(1) {
      $194 = HEAP32[$0>>2]|0;
      $195 = $194 >>> $$2246$us;
      $196 = HEAP32[$38>>2]|0;
      $197 = $196 >>> $$2246$us;
      $198 = ($195|0)>(1);
      $spec$select230$us = $198 ? $195 : 1;
      $199 = ($197|0)>(1);
      $$0211$us = $199 ? $197 : 1;
      $200 = HEAP32[$39>>2]|0;
      $201 = Math_imul($spec$select230$us, $200)|0;
      $202 = Math_imul($201, $$0211$us)|0;
      $203 = HEAP32[$8>>2]|0;
      $204 = ($203|0)==(0|0);
      if ($204) {
       $205 = HEAP32[$181>>2]|0;
       $206 = (($205) + ($202)|0);
       HEAP32[$181>>2] = $206;
      } else {
       (_fseek($203,$202,1)|0);
      }
      $207 = (($$2246$us) + 1)|0;
      $exitcond269 = ($207|0)==($44|0);
      if ($exitcond269) {
       break;
      } else {
       $$2246$us = $207;
      }
     }
     $208 = (($$1221248$us) + 1)|0;
     $exitcond270 = ($208|0)==($55|0);
     if ($exitcond270) {
      break L25;
     }
     $$pre279 = HEAP32[$0>>2]|0;
     $$pre280 = HEAP32[$38>>2]|0;
     $$pre281 = HEAP32[$39>>2]|0;
     $$1221248$us = $208;$183 = $$pre280;$184 = $$pre279;$187 = $$pre281;
    }
   } else {
    $$1221248 = 0;$210 = $175;$211 = $174;$214 = $176;
    while(1) {
     $209 = Math_imul($210, $211)|0;
     $212 = Math_imul($209, $$1221248)|0;
     $213 = Math_imul($212, $214)|0;
     $215 = (($180) + ($213)|0);
     $216 = Math_imul($209, $214)|0;
     $217 = HEAP32[$8>>2]|0;
     $218 = ($217|0)==(0|0);
     if ($218) {
      $219 = HEAP32[$181>>2]|0;
      _memcpy(($215|0),($219|0),($216|0))|0;
      $220 = (($219) + ($216)|0);
      HEAP32[$181>>2] = $220;
     } else {
      (_fread($215,1,$216,$217)|0);
     }
     $221 = (($$1221248) + 1)|0;
     $exitcond271 = ($221|0)==($55|0);
     if ($exitcond271) {
      break L25;
     }
     $$pre = HEAP32[$0>>2]|0;
     $$pre277 = HEAP32[$38>>2]|0;
     $$pre278 = HEAP32[$39>>2]|0;
     $$1221248 = $221;$210 = $$pre277;$211 = $$pre;$214 = $$pre278;
    }
   }
  } while(0);
  $222 = ($179|0)>(0);
  if ($222) {
   $223 = HEAP32[$39>>2]|0;
   $$3244 = 0;
   while(1) {
    $224 = (($180) + ($$3244)|0);
    $225 = HEAP8[$224>>0]|0;
    $226 = (($$3244) + 2)|0;
    $227 = (($180) + ($226)|0);
    $228 = HEAP8[$227>>0]|0;
    HEAP8[$224>>0] = $228;
    HEAP8[$227>>0] = $225;
    $229 = (($223) + ($$3244))|0;
    $230 = ($229|0)<($179|0);
    if ($230) {
     $$3244 = $229;
    } else {
     $$0215 = $180;$$0222 = $179;
     break;
    }
   }
  } else {
   $$0215 = $180;$$0222 = $179;
  }
 } else {
  $64 = ((($7)) + 84|0);
  $65 = HEAP32[$64>>2]|0;
  $$off227 = (($65) + -822083584)|0;
  $66 = ($$off227>>>0)>(83886079);
  if ($66) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $67 = HEAP32[$0>>2]|0;
  $68 = HEAP32[$38>>2]|0;
  $69 = $55 << 2;
  $70 = Math_imul($69, $67)|0;
  $71 = Math_imul($70, $68)|0;
  $72 = (_malloc($71)|0);
  $73 = ($60|0)>(0);
  $$mask = $65 & -16777216;
  $74 = ($$mask|0)==(822083584);
  $75 = ($65>>>0)<(872415232);
  $76 = ((($0)) + 20|0);
  $spec$store$select = $74 ? 8 : 16;
  $$0220262 = 0;
  while(1) {
   if ($73) {
    $$0223255 = 0;
    while(1) {
     $77 = (($$0223255>>>0) / ($57>>>0))&-1;
     $78 = Math_imul($77, $57)|0;
     $79 = (($$0223255) - ($78))|0;
     $80 = $79 << 2;
     $81 = $77 << 2;
     $82 = HEAP32[$8>>2]|0;
     $83 = ($82|0)==(0|0);
     do {
      if ($74) {
       if ($83) {
        $84 = HEAP32[$76>>2]|0;
        $85 = $84;
        $86 = $85;
        $87 = HEAPU8[$86>>0]|(HEAPU8[$86+1>>0]<<8)|(HEAPU8[$86+2>>0]<<16)|(HEAPU8[$86+3>>0]<<24);
        $88 = (($85) + 4)|0;
        $89 = $88;
        $90 = HEAPU8[$89>>0]|(HEAPU8[$89+1>>0]<<8)|(HEAPU8[$89+2>>0]<<16)|(HEAPU8[$89+3>>0]<<24);
        $91 = $6;
        $92 = $91;
        HEAP32[$92>>2] = $87;
        $93 = (($91) + 4)|0;
        $94 = $93;
        HEAP32[$94>>2] = $90;
        $95 = ((($84)) + 8|0);
        HEAP32[$76>>2] = $95;
       } else {
        (_fread($6,1,8,$82)|0);
       }
       _stbi_decode_DXT1_block($5,$6);
      } else {
       if ($83) {
        $96 = HEAP32[$76>>2]|0;
        $97 = $96;
        $98 = $97;
        $99 = HEAPU8[$98>>0]|(HEAPU8[$98+1>>0]<<8)|(HEAPU8[$98+2>>0]<<16)|(HEAPU8[$98+3>>0]<<24);
        $100 = (($97) + 4)|0;
        $101 = $100;
        $102 = HEAPU8[$101>>0]|(HEAPU8[$101+1>>0]<<8)|(HEAPU8[$101+2>>0]<<16)|(HEAPU8[$101+3>>0]<<24);
        $103 = $6;
        $104 = $103;
        HEAP32[$104>>2] = $99;
        $105 = (($103) + 4)|0;
        $106 = $105;
        HEAP32[$106>>2] = $102;
        $107 = ((($96)) + 8|0);
        HEAP32[$76>>2] = $107;
       } else {
        (_fread($6,1,8,$82)|0);
       }
       if ($75) {
        _stbi_decode_DXT23_alpha_block($5,$6);
        $108 = HEAP32[$8>>2]|0;
        $109 = ($108|0)==(0|0);
        if ($109) {
         $110 = HEAP32[$76>>2]|0;
         $111 = $110;
         $112 = $111;
         $113 = HEAPU8[$112>>0]|(HEAPU8[$112+1>>0]<<8)|(HEAPU8[$112+2>>0]<<16)|(HEAPU8[$112+3>>0]<<24);
         $114 = (($111) + 4)|0;
         $115 = $114;
         $116 = HEAPU8[$115>>0]|(HEAPU8[$115+1>>0]<<8)|(HEAPU8[$115+2>>0]<<16)|(HEAPU8[$115+3>>0]<<24);
         $117 = $6;
         $118 = $117;
         HEAP32[$118>>2] = $113;
         $119 = (($117) + 4)|0;
         $120 = $119;
         HEAP32[$120>>2] = $116;
         $121 = ((($110)) + 8|0);
         HEAP32[$76>>2] = $121;
        } else {
         (_fread($6,1,8,$108)|0);
        }
        _stbi_decode_DXT_color_block($5,$6);
        break;
       } else {
        _stbi_decode_DXT45_alpha_block($5,$6);
        $122 = HEAP32[$8>>2]|0;
        $123 = ($122|0)==(0|0);
        if ($123) {
         $124 = HEAP32[$76>>2]|0;
         $125 = $124;
         $126 = $125;
         $127 = HEAPU8[$126>>0]|(HEAPU8[$126+1>>0]<<8)|(HEAPU8[$126+2>>0]<<16)|(HEAPU8[$126+3>>0]<<24);
         $128 = (($125) + 4)|0;
         $129 = $128;
         $130 = HEAPU8[$129>>0]|(HEAPU8[$129+1>>0]<<8)|(HEAPU8[$129+2>>0]<<16)|(HEAPU8[$129+3>>0]<<24);
         $131 = $6;
         $132 = $131;
         HEAP32[$132>>2] = $127;
         $133 = (($131) + 4)|0;
         $134 = $133;
         HEAP32[$134>>2] = $130;
         $135 = ((($124)) + 8|0);
         HEAP32[$76>>2] = $135;
        } else {
         (_fread($6,1,8,$122)|0);
        }
        _stbi_decode_DXT_color_block($5,$6);
        break;
       }
      }
     } while(0);
     $136 = HEAP32[$0>>2]|0;
     $137 = (($81) + 4)|0;
     $138 = HEAP32[$38>>2]|0;
     $139 = ($137>>>0)>($138>>>0);
     $140 = (($138) - ($81))|0;
     $$0216 = $139 ? $140 : 4;
     $141 = ($$0216|0)>(0);
     if ($141) {
      $142 = (($136) - ($80))|0;
      $143 = (($80) + 4)|0;
      $144 = ($143>>>0)>($136>>>0);
      $145 = Math_imul($136, $$0220262)|0;
      $146 = (($145) + ($81))|0;
      $$op = $142 << 2;
      $147 = $144 ? $$op : 16;
      $148 = ($147|0)>(0);
      if ($148) {
       $$0218251$us = 0;
       while(1) {
        $149 = $$0218251$us << 4;
        $scevgep273 = (($5) + ($149)|0);
        $150 = (($146) + ($$0218251$us))|0;
        $151 = Math_imul($150, $136)|0;
        $152 = (($151) + ($80))|0;
        $153 = $152 << 2;
        $scevgep = (($72) + ($153)|0);
        _memcpy(($scevgep|0),($scevgep273|0),($147|0))|0;
        $154 = (($$0218251$us) + 1)|0;
        $155 = ($154|0)<($$0216|0);
        if ($155) {
         $$0218251$us = $154;
        } else {
         break;
        }
       }
      }
     }
     $156 = (($$0223255) + 1)|0;
     $exitcond274 = ($156|0)==($60|0);
     if ($exitcond274) {
      break;
     } else {
      $$0223255 = $156;
     }
    }
   }
   if ($46) {
    $$1224259 = 1;
    while(1) {
     $157 = HEAP32[$0>>2]|0;
     $158 = (($$1224259) + 2)|0;
     $159 = $157 >>> $158;
     $160 = HEAP32[$38>>2]|0;
     $161 = $160 >>> $158;
     $162 = ($159|0)>(1);
     $spec$select228 = $162 ? $159 : 1;
     $163 = ($161|0)>(1);
     $$0213 = $163 ? $161 : 1;
     $164 = Math_imul($spec$select228, $spec$store$select)|0;
     $165 = Math_imul($164, $$0213)|0;
     $166 = HEAP32[$8>>2]|0;
     $167 = ($166|0)==(0|0);
     if ($167) {
      $168 = HEAP32[$76>>2]|0;
      $169 = (($168) + ($165)|0);
      HEAP32[$76>>2] = $169;
     } else {
      (_fseek($166,$165,1)|0);
     }
     $170 = (($$1224259) + 1)|0;
     $exitcond275 = ($170|0)==($44|0);
     if ($exitcond275) {
      break;
     } else {
      $$1224259 = $170;
     }
    }
   }
   $171 = (($$0220262) + 1)|0;
   $exitcond276 = ($171|0)==($55|0);
   if ($exitcond276) {
    $$0215 = $72;$$0222 = $71;
    break;
   } else {
    $$0220262 = $171;
   }
  }
 }
 $231 = HEAP32[$38>>2]|0;
 $232 = Math_imul($231, $55)|0;
 HEAP32[$38>>2] = $232;
 HEAP32[$2>>2] = $232;
 $233 = HEAP32[$39>>2]|0;
 $234 = ($233|0)==(4);
 $235 = ($$0222|0)>(3);
 $or$cond = $234 & $235;
 if ($or$cond) {
  $$4243 = 3;
  while(1) {
   $236 = (($$0215) + ($$4243)|0);
   $237 = HEAP8[$236>>0]|0;
   $238 = ($237<<24>>24)!=(-1);
   $239 = (($$4243) + 4)|0;
   $240 = ($239|0)<($$0222|0);
   $241 = $238 ^ 1;
   $242 = $240 & $241;
   if ($242) {
    $$4243 = $239;
   } else {
    break;
   }
  }
  $243 = $238&1;
  $$1226 = $243;
 } else {
  $$1226 = 0;
 }
 $$off = (($4) + -1)|0;
 $244 = ($$off>>>0)<(4);
 if ($244) {
  $245 = ($233|0)==($4|0);
  if ($245) {
   $$0 = $$0215;
   STACKTOP = sp;return ($$0|0);
  }
  $246 = HEAP32[$0>>2]|0;
  $247 = HEAP32[$38>>2]|0;
  $248 = (_convert_format($$0215,$233,$4,$246,$247)|0);
  $249 = HEAP32[$39>>2]|0;
  HEAP32[$3>>2] = $249;
  $$0 = $248;
  STACKTOP = sp;return ($$0|0);
 }
 $250 = ($$1226|0)!=(0);
 $$not237 = $234 ^ 1;
 $brmerge = $250 | $$not237;
 if ($brmerge) {
  $$0 = $$0215;
  STACKTOP = sp;return ($$0|0);
 }
 $251 = HEAP32[$0>>2]|0;
 $252 = HEAP32[$38>>2]|0;
 $253 = ($251*3)|0;
 $254 = Math_imul($253, $252)|0;
 $255 = (_malloc($254)|0);
 $256 = ($255|0)==(0|0);
 if ($256) {
  _free($$0215);
  HEAP32[36596] = 121182;
  $$0163$i = 0;
 } else {
  $257 = ($252|0)>(0);
  if ($257) {
   $$0165242$i = (($251) + -1)|0;
   $258 = ($$0165242$i|0)>(-1);
   if ($258) {
    $$0164247$i$us = 0;
    while(1) {
     $259 = Math_imul($$0164247$i$us, $251)|0;
     $260 = ($259*3)|0;
     $261 = (($255) + ($260)|0);
     $262 = $259 << 2;
     $263 = (($$0215) + ($262)|0);
     $$11162189$i$us = $263;$$11176191$i$us = $$0165242$i;$$11190$i$us = $261;
     while(1) {
      $264 = HEAP8[$$11162189$i$us>>0]|0;
      HEAP8[$$11190$i$us>>0] = $264;
      $265 = ((($$11162189$i$us)) + 1|0);
      $266 = HEAP8[$265>>0]|0;
      $267 = ((($$11190$i$us)) + 1|0);
      HEAP8[$267>>0] = $266;
      $268 = ((($$11162189$i$us)) + 2|0);
      $269 = HEAP8[$268>>0]|0;
      $270 = ((($$11190$i$us)) + 2|0);
      HEAP8[$270>>0] = $269;
      $271 = ((($$11162189$i$us)) + 4|0);
      $272 = ((($$11190$i$us)) + 3|0);
      $$11176$i$us = (($$11176191$i$us) + -1)|0;
      $273 = ($$11176$i$us|0)>(-1);
      if ($273) {
       $$11162189$i$us = $271;$$11176191$i$us = $$11176$i$us;$$11190$i$us = $272;
      } else {
       break;
      }
     }
     $274 = (($$0164247$i$us) + 1)|0;
     $exitcond = ($274|0)==($252|0);
     if ($exitcond) {
      break;
     } else {
      $$0164247$i$us = $274;
     }
    }
   }
  }
  _free($$0215);
  $$0163$i = $255;
 }
 HEAP32[$3>>2] = 3;
 $$0 = $$0163$i;
 STACKTOP = sp;return ($$0|0);
}
function _hdr_test($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$1 = 0, $$0$i$10 = 0, $$0$i$2 = 0, $$0$i$3 = 0, $$0$i$4 = 0, $$0$i$5 = 0, $$0$i$6 = 0, $$0$i$7 = 0, $$0$i$8 = 0, $$0$i$9 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = ((($0)) + 20|0);
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $10 = HEAP32[$2>>2]|0;
   $11 = HEAP32[$3>>2]|0;
   $12 = ($10>>>0)<($11>>>0);
   if ($12) {
    $13 = ((($10)) + 1|0);
    HEAP32[$2>>2] = $13;
    $14 = HEAP8[$10>>0]|0;
    $15 = $14&255;
    $$0$i = $15;
    break;
   } else {
    return 0;
   }
  } else {
   $8 = (_fgetc($4)|0);
   $9 = ($8|0)==(-1);
   if ($9) {
    return 0;
   } else {
    $$0$i = $8;
   }
  }
 } while(0);
 $16 = ($$0$i|0)==(35);
 if (!($16)) {
  return 0;
 }
 $6 = HEAP32[$1>>2]|0;
 $7 = ($6|0)==(0|0);
 do {
  if ($7) {
   $19 = HEAP32[$2>>2]|0;
   $20 = HEAP32[$3>>2]|0;
   $21 = ($19>>>0)<($20>>>0);
   if ($21) {
    $22 = ((($19)) + 1|0);
    HEAP32[$2>>2] = $22;
    $23 = HEAP8[$19>>0]|0;
    $24 = $23&255;
    $$0$i$1 = $24;
    break;
   } else {
    return 0;
   }
  } else {
   $17 = (_fgetc($6)|0);
   $18 = ($17|0)==(-1);
   if ($18) {
    return 0;
   } else {
    $$0$i$1 = $17;
   }
  }
 } while(0);
 $25 = ($$0$i$1|0)==(63);
 if (!($25)) {
  return 0;
 }
 $26 = HEAP32[$1>>2]|0;
 $27 = ($26|0)==(0|0);
 do {
  if ($27) {
   $30 = HEAP32[$2>>2]|0;
   $31 = HEAP32[$3>>2]|0;
   $32 = ($30>>>0)<($31>>>0);
   if ($32) {
    $33 = ((($30)) + 1|0);
    HEAP32[$2>>2] = $33;
    $34 = HEAP8[$30>>0]|0;
    $35 = $34&255;
    $$0$i$2 = $35;
    break;
   } else {
    return 0;
   }
  } else {
   $28 = (_fgetc($26)|0);
   $29 = ($28|0)==(-1);
   if ($29) {
    return 0;
   } else {
    $$0$i$2 = $28;
   }
  }
 } while(0);
 $36 = ($$0$i$2|0)==(82);
 if (!($36)) {
  return 0;
 }
 $37 = HEAP32[$1>>2]|0;
 $38 = ($37|0)==(0|0);
 do {
  if ($38) {
   $41 = HEAP32[$2>>2]|0;
   $42 = HEAP32[$3>>2]|0;
   $43 = ($41>>>0)<($42>>>0);
   if ($43) {
    $44 = ((($41)) + 1|0);
    HEAP32[$2>>2] = $44;
    $45 = HEAP8[$41>>0]|0;
    $46 = $45&255;
    $$0$i$3 = $46;
    break;
   } else {
    return 0;
   }
  } else {
   $39 = (_fgetc($37)|0);
   $40 = ($39|0)==(-1);
   if ($40) {
    return 0;
   } else {
    $$0$i$3 = $39;
   }
  }
 } while(0);
 $47 = ($$0$i$3|0)==(65);
 if (!($47)) {
  return 0;
 }
 $48 = HEAP32[$1>>2]|0;
 $49 = ($48|0)==(0|0);
 do {
  if ($49) {
   $52 = HEAP32[$2>>2]|0;
   $53 = HEAP32[$3>>2]|0;
   $54 = ($52>>>0)<($53>>>0);
   if ($54) {
    $55 = ((($52)) + 1|0);
    HEAP32[$2>>2] = $55;
    $56 = HEAP8[$52>>0]|0;
    $57 = $56&255;
    $$0$i$4 = $57;
    break;
   } else {
    return 0;
   }
  } else {
   $50 = (_fgetc($48)|0);
   $51 = ($50|0)==(-1);
   if ($51) {
    return 0;
   } else {
    $$0$i$4 = $50;
   }
  }
 } while(0);
 $58 = ($$0$i$4|0)==(68);
 if (!($58)) {
  return 0;
 }
 $59 = HEAP32[$1>>2]|0;
 $60 = ($59|0)==(0|0);
 do {
  if ($60) {
   $63 = HEAP32[$2>>2]|0;
   $64 = HEAP32[$3>>2]|0;
   $65 = ($63>>>0)<($64>>>0);
   if ($65) {
    $66 = ((($63)) + 1|0);
    HEAP32[$2>>2] = $66;
    $67 = HEAP8[$63>>0]|0;
    $68 = $67&255;
    $$0$i$5 = $68;
    break;
   } else {
    return 0;
   }
  } else {
   $61 = (_fgetc($59)|0);
   $62 = ($61|0)==(-1);
   if ($62) {
    return 0;
   } else {
    $$0$i$5 = $61;
   }
  }
 } while(0);
 $69 = ($$0$i$5|0)==(73);
 if (!($69)) {
  return 0;
 }
 $70 = HEAP32[$1>>2]|0;
 $71 = ($70|0)==(0|0);
 do {
  if ($71) {
   $74 = HEAP32[$2>>2]|0;
   $75 = HEAP32[$3>>2]|0;
   $76 = ($74>>>0)<($75>>>0);
   if ($76) {
    $77 = ((($74)) + 1|0);
    HEAP32[$2>>2] = $77;
    $78 = HEAP8[$74>>0]|0;
    $79 = $78&255;
    $$0$i$6 = $79;
    break;
   } else {
    return 0;
   }
  } else {
   $72 = (_fgetc($70)|0);
   $73 = ($72|0)==(-1);
   if ($73) {
    return 0;
   } else {
    $$0$i$6 = $72;
   }
  }
 } while(0);
 $80 = ($$0$i$6|0)==(65);
 if (!($80)) {
  return 0;
 }
 $81 = HEAP32[$1>>2]|0;
 $82 = ($81|0)==(0|0);
 do {
  if ($82) {
   $85 = HEAP32[$2>>2]|0;
   $86 = HEAP32[$3>>2]|0;
   $87 = ($85>>>0)<($86>>>0);
   if ($87) {
    $88 = ((($85)) + 1|0);
    HEAP32[$2>>2] = $88;
    $89 = HEAP8[$85>>0]|0;
    $90 = $89&255;
    $$0$i$7 = $90;
    break;
   } else {
    return 0;
   }
  } else {
   $83 = (_fgetc($81)|0);
   $84 = ($83|0)==(-1);
   if ($84) {
    return 0;
   } else {
    $$0$i$7 = $83;
   }
  }
 } while(0);
 $91 = ($$0$i$7|0)==(78);
 if (!($91)) {
  return 0;
 }
 $92 = HEAP32[$1>>2]|0;
 $93 = ($92|0)==(0|0);
 do {
  if ($93) {
   $96 = HEAP32[$2>>2]|0;
   $97 = HEAP32[$3>>2]|0;
   $98 = ($96>>>0)<($97>>>0);
   if ($98) {
    $99 = ((($96)) + 1|0);
    HEAP32[$2>>2] = $99;
    $100 = HEAP8[$96>>0]|0;
    $101 = $100&255;
    $$0$i$8 = $101;
    break;
   } else {
    return 0;
   }
  } else {
   $94 = (_fgetc($92)|0);
   $95 = ($94|0)==(-1);
   if ($95) {
    return 0;
   } else {
    $$0$i$8 = $94;
   }
  }
 } while(0);
 $102 = ($$0$i$8|0)==(67);
 if (!($102)) {
  return 0;
 }
 $103 = HEAP32[$1>>2]|0;
 $104 = ($103|0)==(0|0);
 do {
  if ($104) {
   $107 = HEAP32[$2>>2]|0;
   $108 = HEAP32[$3>>2]|0;
   $109 = ($107>>>0)<($108>>>0);
   if ($109) {
    $110 = ((($107)) + 1|0);
    HEAP32[$2>>2] = $110;
    $111 = HEAP8[$107>>0]|0;
    $112 = $111&255;
    $$0$i$9 = $112;
    break;
   } else {
    return 0;
   }
  } else {
   $105 = (_fgetc($103)|0);
   $106 = ($105|0)==(-1);
   if (!($106)) {
    $$0$i$9 = $105;
    break;
   }
   return 0;
  }
 } while(0);
 $113 = ($$0$i$9|0)==(69);
 if (!($113)) {
  return 0;
 }
 $114 = HEAP32[$1>>2]|0;
 $115 = ($114|0)==(0|0);
 if (!($115)) {
  $116 = (_fgetc($114)|0);
  $117 = ($116|0)==(-1);
  if ($117) {
   return 0;
  } else {
   $$0$i$10 = $116;
   $124 = ($$0$i$10|0)==(10);
   $spec$select = $124&1;
   return ($spec$select|0);
  }
 }
 $118 = HEAP32[$2>>2]|0;
 $119 = HEAP32[$3>>2]|0;
 $120 = ($118>>>0)<($119>>>0);
 if (!($120)) {
  return 0;
 }
 $121 = ((($118)) + 1|0);
 HEAP32[$2>>2] = $121;
 $122 = HEAP8[$118>>0]|0;
 $123 = $122&255;
 $$0$i$10 = $123;
 $124 = ($$0$i$10|0)==(10);
 $spec$select = $124&1;
 return ($spec$select|0);
}
function _hdr_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i$us = 0, $$0$i130$us = 0, $$0$i132$us = 0, $$0$i134211213 = 0, $$0$i134211214 = 0, $$0$i134212 = 0, $$0$i136215 = 0, $$0$i136216 = 0, $$0$i138 = 0, $$0$i140 = 0, $$0$i143 = 0, $$0115 = 0, $$0117165$us = 0, $$0118 = 0, $$0120 = 0, $$0124182 = 0, $$0126$lcssa = 0, $$0126171 = 0, $$0159$us = 0, $$1119 = 0;
 var $$1121 = 0, $$1127 = 0, $$1157$us = 0, $$2 = 0, $$2122162$us = 0, $$3123158$us = 0, $$3172 = 0, $$4156$us = 0, $$5$us = 0, $$6167 = 0, $$6167$us = 0, $$lcssa155 = 0, $$off = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi210Z2D = 0, $$pre206 = 0, $$pre207 = 0, $$pre209 = 0, $10 = 0;
 var $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0;
 var $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0;
 var $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0;
 var $155 = 0, $156 = 0.0, $157 = Math_fround(0), $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = Math_fround(0), $164 = Math_fround(0), $165 = Math_fround(0), $166 = Math_fround(0), $167 = Math_fround(0), $168 = Math_fround(0), $169 = Math_fround(0), $17 = 0, $170 = 0, $171 = Math_fround(0), $172 = Math_fround(0);
 var $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0;
 var $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0;
 var $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0;
 var $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0;
 var $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0.0, $263 = Math_fround(0);
 var $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = Math_fround(0), $275 = Math_fround(0), $276 = Math_fround(0), $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0;
 var $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0.0, $295 = Math_fround(0), $296 = 0, $297 = Math_fround(0), $298 = Math_fround(0), $299 = 0, $30 = 0;
 var $300 = 0, $301 = Math_fround(0), $302 = Math_fround(0), $303 = 0, $304 = 0, $305 = 0, $306 = Math_fround(0), $307 = Math_fround(0), $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0.0, $62 = Math_fround(0), $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = Math_fround(0), $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = 0, $8 = 0, $80 = 0, $81 = Math_fround(0), $82 = Math_fround(0), $83 = 0, $84 = 0, $85 = 0, $86 = Math_fround(0), $87 = Math_fround(0), $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond202 = 0, $exitcond203 = 0, $exitcond204 = 0, $exitcond205 = 0, $or$cond = 0, $or$cond3$not = 0, $spec$select = 0, $spec$select128 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $5 = sp;
 $6 = sp + 1028|0;
 $7 = sp + 1024|0;
 $8 = (_hdr_gettoken($0,$5)|0);
 $9 = (_strcmp($8,121196)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  HEAP32[36596] = 121207;
  $$0115 = 0;
  STACKTOP = sp;return ($$0115|0);
 }
 $11 = (_hdr_gettoken($0,$5)|0);
 HEAP32[$6>>2] = $11;
 $12 = HEAP8[$11>>0]|0;
 $13 = ($12<<24>>24)==(0);
 if (!($13)) {
  $$0124182 = 0;$14 = $5;
  while(1) {
   $15 = (_strcmp($14,121225)|0);
   $16 = ($15|0)==(0);
   $spec$select = $16 ? 1 : $$0124182;
   $17 = (_hdr_gettoken($0,$5)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = ($18<<24>>24)==(0);
   if ($19) {
    break;
   } else {
    $$0124182 = $spec$select;$14 = $5;
   }
  }
  HEAP32[$6>>2] = $17;
  $20 = ($spec$select|0)==(0);
  if (!($20)) {
   $21 = (_hdr_gettoken($0,$5)|0);
   HEAP32[$6>>2] = $21;
   $22 = (_strncmp($21,121271,3)|0);
   $23 = ($22|0)==(0);
   if (!($23)) {
    HEAP32[36596] = 121248;
    $$0115 = 0;
    STACKTOP = sp;return ($$0115|0);
   }
   $24 = ((($5)) + 3|0);
   HEAP32[$6>>2] = $24;
   $25 = (_strtol($24,$6,10)|0);
   $26 = HEAP32[$6>>2]|0;
   $27 = HEAP8[$26>>0]|0;
   $28 = ($27<<24>>24)==(32);
   if ($28) {
    $30 = $26;
    while(1) {
     $29 = ((($30)) + 1|0);
     $31 = HEAP8[$29>>0]|0;
     $32 = ($31<<24>>24)==(32);
     if ($32) {
      $30 = $29;
     } else {
      break;
     }
    }
    HEAP32[$6>>2] = $29;
    $$lcssa155 = $29;
   } else {
    $$lcssa155 = $26;
   }
   $33 = (_strncmp($$lcssa155,121275,3)|0);
   $34 = ($33|0)==(0);
   if (!($34)) {
    HEAP32[36596] = 121248;
    $$0115 = 0;
    STACKTOP = sp;return ($$0115|0);
   }
   $35 = ((($$lcssa155)) + 3|0);
   HEAP32[$6>>2] = $35;
   $36 = (_strtol($35,0,10)|0);
   HEAP32[$1>>2] = $36;
   HEAP32[$2>>2] = $25;
   HEAP32[$3>>2] = 3;
   $37 = ($4|0)==(0);
   $spec$select128 = $37 ? 3 : $4;
   $38 = Math_imul($36, $spec$select128)|0;
   $39 = $38 << 2;
   $40 = Math_imul($39, $25)|0;
   $41 = (_malloc($40)|0);
   $$off = (($36) + -8)|0;
   $42 = ($$off>>>0)>(32759);
   L25: do {
    if ($42) {
     $$0118 = 0;
     label = 17;
    } else {
     $97 = ($25|0)>(0);
     L27: do {
      if ($97) {
       $98 = ((($0)) + 16|0);
       $99 = ((($0)) + 20|0);
       $100 = ((($0)) + 24|0);
       $101 = $36 << 2;
       $102 = ($spec$select128|0)<(3);
       $$0126171 = 0;$$3172 = 0;
       while(1) {
        $103 = HEAP32[$98>>2]|0;
        $104 = ($103|0)==(0|0);
        if ($104) {
         $105 = HEAP32[$99>>2]|0;
         $106 = HEAP32[$100>>2]|0;
         $107 = ($105>>>0)<($106>>>0);
         if ($107) {
          $108 = ((($105)) + 1|0);
          HEAP32[$99>>2] = $108;
          $109 = HEAP8[$105>>0]|0;
          $110 = $109&255;
          $$0$i134212 = $110;
          label = 43;
         } else {
          $$0$i134212 = 0;
          label = 43;
         }
        } else {
         $111 = (_fgetc($103)|0);
         $112 = ($111|0)==(-1);
         $113 = $112 ? 0 : $111;
         $$pre = HEAP32[$98>>2]|0;
         $114 = ($$pre|0)==(0|0);
         if ($114) {
          $$0$i134212 = $113;
          label = 43;
         } else {
          $121 = (_fgetc($$pre)|0);
          $122 = ($121|0)==(-1);
          $123 = $122 ? 0 : $121;
          $$pre206 = HEAP32[$98>>2]|0;
          $124 = ($$pre206|0)==(0|0);
          if ($124) {
           $$0$i134211214 = $113;$$0$i136216 = $123;
           label = 47;
          } else {
           $125 = (_fgetc($$pre206)|0);
           $126 = ($125|0)==(-1);
           $127 = $126 ? 0 : $125;
           $$0$i134211213 = $113;$$0$i136215 = $123;$$0$i138 = $127;
          }
         }
        }
        if ((label|0) == 43) {
         label = 0;
         $115 = HEAP32[$99>>2]|0;
         $116 = HEAP32[$100>>2]|0;
         $117 = ($115>>>0)<($116>>>0);
         if ($117) {
          $118 = ((($115)) + 1|0);
          HEAP32[$99>>2] = $118;
          $119 = HEAP8[$115>>0]|0;
          $120 = $119&255;
          $$0$i134211214 = $$0$i134212;$$0$i136216 = $120;
          label = 47;
         } else {
          $$0$i134211214 = $$0$i134212;$$0$i136216 = 0;
          label = 47;
         }
        }
        if ((label|0) == 47) {
         label = 0;
         $128 = HEAP32[$99>>2]|0;
         $129 = HEAP32[$100>>2]|0;
         $130 = ($128>>>0)<($129>>>0);
         if ($130) {
          $131 = ((($128)) + 1|0);
          HEAP32[$99>>2] = $131;
          $132 = HEAP8[$128>>0]|0;
          $133 = $132&255;
          $$0$i134211213 = $$0$i134211214;$$0$i136215 = $$0$i136216;$$0$i138 = $133;
         } else {
          $$0$i134211213 = $$0$i134211214;$$0$i136215 = $$0$i136216;$$0$i138 = 0;
         }
        }
        $134 = ($$0$i134211213|0)==(2);
        $135 = ($$0$i136215|0)==(2);
        $or$cond3$not = $134 & $135;
        $136 = $$0$i138 & 128;
        $137 = ($136|0)==(0);
        $or$cond = $or$cond3$not & $137;
        if (!($or$cond)) {
         break;
        }
        $180 = $$0$i138 << 8;
        $181 = HEAP32[$98>>2]|0;
        $182 = ($181|0)==(0|0);
        if ($182) {
         $186 = HEAP32[$99>>2]|0;
         $187 = HEAP32[$100>>2]|0;
         $188 = ($186>>>0)<($187>>>0);
         if ($188) {
          $189 = ((($186)) + 1|0);
          HEAP32[$99>>2] = $189;
          $190 = HEAP8[$186>>0]|0;
          $191 = $190&255;
          $$0$i143 = $191;
         } else {
          $$0$i143 = 0;
         }
        } else {
         $183 = (_fgetc($181)|0);
         $184 = ($183|0)==(-1);
         $185 = $184 ? 0 : $183;
         $$0$i143 = $185;
        }
        $192 = $$0$i143 | $180;
        $193 = ($192|0)==($36|0);
        if (!($193)) {
         label = 72;
         break;
        }
        $194 = ($$0126171|0)==(0|0);
        if ($194) {
         $195 = (_malloc($101)|0);
         $$1127 = $195;
        } else {
         $$1127 = $$0126171;
        }
        $$0117165$us = 0;
        while(1) {
         $$2122162$us = 0;
         while(1) {
          $196 = HEAP32[$98>>2]|0;
          $197 = ($196|0)==(0|0);
          do {
           if ($197) {
            $201 = HEAP32[$99>>2]|0;
            $202 = HEAP32[$100>>2]|0;
            $203 = ($201>>>0)<($202>>>0);
            if (!($203)) {
             $$5$us = $$2122162$us;
             break;
            }
            $204 = ((($201)) + 1|0);
            HEAP32[$99>>2] = $204;
            $205 = HEAP8[$201>>0]|0;
            $206 = $205&255;
            $$0$i132$us = $206;
            label = 81;
           } else {
            $198 = (_fgetc($196)|0);
            $199 = ($198|0)==(-1);
            $200 = $199 ? 0 : $198;
            $$0$i132$us = $200;
            label = 81;
           }
          } while(0);
          do {
           if ((label|0) == 81) {
            label = 0;
            $207 = $$0$i132$us & 255;
            $208 = ($207>>>0)>(128);
            if ($208) {
             $227 = HEAP32[$98>>2]|0;
             $228 = ($227|0)==(0|0);
             do {
              if ($228) {
               $232 = HEAP32[$99>>2]|0;
               $233 = HEAP32[$100>>2]|0;
               $234 = ($232>>>0)<($233>>>0);
               if (!($234)) {
                $$0$i130$us = 0;
                break;
               }
               $235 = ((($232)) + 1|0);
               HEAP32[$99>>2] = $235;
               $236 = HEAP8[$232>>0]|0;
               $237 = $236&255;
               $$0$i130$us = $237;
              } else {
               $229 = (_fgetc($227)|0);
               $230 = ($229|0)==(-1);
               $231 = $230 ? 0 : $229;
               $$0$i130$us = $231;
              }
             } while(0);
             $238 = $$0$i130$us&255;
             $239 = (($$0$i132$us) + 128)|0;
             $240 = $239 & 255;
             $241 = ($240|0)==(0);
             if ($241) {
              $$5$us = $$2122162$us;
              break;
             }
             $$0159$us = 0;$$3123158$us = $$2122162$us;
             while(1) {
              $245 = (($$3123158$us) + 1)|0;
              $246 = $$3123158$us << 2;
              $247 = (($246) + ($$0117165$us))|0;
              $248 = (($$1127) + ($247)|0);
              HEAP8[$248>>0] = $238;
              $249 = (($$0159$us) + 1)|0;
              $exitcond202 = ($249|0)==($240|0);
              if ($exitcond202) {
               break;
              } else {
               $$0159$us = $249;$$3123158$us = $245;
              }
             }
             $242 = (($$2122162$us) + ($240))|0;
             $$5$us = $242;
             break;
            } else {
             $209 = ($207|0)==(0);
             if ($209) {
              $$5$us = $$2122162$us;
              break;
             }
             $$1157$us = 0;$$4156$us = $$2122162$us;
             while(1) {
              $210 = HEAP32[$98>>2]|0;
              $211 = ($210|0)==(0|0);
              do {
               if ($211) {
                $215 = HEAP32[$99>>2]|0;
                $216 = HEAP32[$100>>2]|0;
                $217 = ($215>>>0)<($216>>>0);
                if (!($217)) {
                 $$0$i$us = 0;
                 break;
                }
                $218 = ((($215)) + 1|0);
                HEAP32[$99>>2] = $218;
                $219 = HEAP8[$215>>0]|0;
                $220 = $219&255;
                $$0$i$us = $220;
               } else {
                $212 = (_fgetc($210)|0);
                $213 = ($212|0)==(-1);
                $214 = $213 ? 0 : $212;
                $$0$i$us = $214;
               }
              } while(0);
              $221 = $$0$i$us&255;
              $222 = (($$4156$us) + 1)|0;
              $223 = $$4156$us << 2;
              $224 = (($223) + ($$0117165$us))|0;
              $225 = (($$1127) + ($224)|0);
              HEAP8[$225>>0] = $221;
              $226 = (($$1157$us) + 1)|0;
              $exitcond = ($226|0)==($207|0);
              if ($exitcond) {
               break;
              } else {
               $$1157$us = $226;$$4156$us = $222;
              }
             }
             $243 = (($207) + ($$2122162$us))|0;
             $$5$us = $243;
             break;
            }
           }
          } while(0);
          $244 = ($$5$us|0)<($36|0);
          if ($244) {
           $$2122162$us = $$5$us;
          } else {
           break;
          }
         }
         $250 = (($$0117165$us) + 1)|0;
         $exitcond203 = ($250|0)==(4);
         if ($exitcond203) {
          break;
         } else {
          $$0117165$us = $250;
         }
        }
        $251 = Math_imul($$3172, $36)|0;
        if ($102) {
         $$6167$us = 0;
         while(1) {
          $252 = (($$6167$us) + ($251))|0;
          $253 = Math_imul($252, $spec$select128)|0;
          $254 = (($41) + ($253<<2)|0);
          $255 = $$6167$us << 2;
          $256 = (($$1127) + ($255)|0);
          $257 = ((($256)) + 3|0);
          $258 = HEAP8[$257>>0]|0;
          $259 = ($258<<24>>24)==(0);
          L92: do {
           if ($259) {
            switch ($spec$select128|0) {
            case 4:  {
             $280 = ((($254)) + 12|0);
             HEAPF32[$280>>2] = Math_fround(1.0);
             label = 111;
             break;
            }
            case 3:  {
             label = 111;
             break;
            }
            case 2:  {
             $279 = ((($254)) + 4|0);
             HEAPF32[$279>>2] = Math_fround(1.0);
             label = 109;
             break;
            }
            case 1:  {
             label = 109;
             break;
            }
            default: {
             break L92;
            }
            }
            if ((label|0) == 109) {
             label = 0;
             HEAPF32[$254>>2] = Math_fround(0.0);
             break;
            }
            else if ((label|0) == 111) {
             label = 0;
             $281 = ((($254)) + 8|0);
             HEAPF32[$281>>2] = Math_fround(0.0);
             $282 = ((($254)) + 4|0);
             HEAPF32[$282>>2] = Math_fround(0.0);
             HEAPF32[$254>>2] = Math_fround(0.0);
             break;
            }
           } else {
            $260 = $258&255;
            $261 = (($260) + -136)|0;
            $262 = (+_ldexp(1.0,$261));
            $263 = Math_fround($262);
            $264 = HEAP8[$256>>0]|0;
            $265 = $264&255;
            $266 = ((($256)) + 1|0);
            $267 = HEAP8[$266>>0]|0;
            $268 = $267&255;
            $269 = (($268) + ($265))|0;
            $270 = ((($256)) + 2|0);
            $271 = HEAP8[$270>>0]|0;
            $272 = $271&255;
            $273 = (($269) + ($272))|0;
            $274 = (Math_fround(($273|0)));
            $275 = Math_fround($263 * $274);
            $276 = Math_fround($275 / Math_fround(3.0));
            HEAPF32[$254>>2] = $276;
            switch ($spec$select128|0) {
            case 2:  {
             $278 = ((($254)) + 4|0);
             HEAPF32[$278>>2] = Math_fround(1.0);
             break L92;
             break;
            }
            case 4:  {
             $277 = ((($254)) + 12|0);
             HEAPF32[$277>>2] = Math_fround(1.0);
             break L92;
             break;
            }
            default: {
             break L92;
            }
            }
           }
          } while(0);
          $283 = (($$6167$us) + 1)|0;
          $exitcond205 = ($283|0)==($36|0);
          if ($exitcond205) {
           break;
          } else {
           $$6167$us = $283;
          }
         }
        } else {
         $$6167 = 0;
         while(1) {
          $284 = (($$6167) + ($251))|0;
          $285 = Math_imul($284, $spec$select128)|0;
          $286 = (($41) + ($285<<2)|0);
          $287 = $$6167 << 2;
          $288 = (($$1127) + ($287)|0);
          $289 = ((($288)) + 3|0);
          $290 = HEAP8[$289>>0]|0;
          $291 = ($290<<24>>24)==(0);
          L108: do {
           if ($291) {
            switch ($spec$select128|0) {
            case 4:  {
             $310 = ((($286)) + 12|0);
             HEAPF32[$310>>2] = Math_fround(1.0);
             label = 119;
             break;
            }
            case 3:  {
             label = 119;
             break;
            }
            case 2:  {
             $313 = ((($286)) + 4|0);
             HEAPF32[$313>>2] = Math_fround(1.0);
             label = 121;
             break;
            }
            case 1:  {
             label = 121;
             break;
            }
            default: {
             break L108;
            }
            }
            if ((label|0) == 119) {
             label = 0;
             $311 = ((($286)) + 8|0);
             HEAPF32[$311>>2] = Math_fround(0.0);
             $312 = ((($286)) + 4|0);
             HEAPF32[$312>>2] = Math_fround(0.0);
             HEAPF32[$286>>2] = Math_fround(0.0);
             break;
            }
            else if ((label|0) == 121) {
             label = 0;
             HEAPF32[$286>>2] = Math_fround(0.0);
             break;
            }
           } else {
            $292 = $290&255;
            $293 = (($292) + -136)|0;
            $294 = (+_ldexp(1.0,$293));
            $295 = Math_fround($294);
            $296 = HEAP8[$288>>0]|0;
            $297 = (Math_fround(($296&255)));
            $298 = Math_fround($295 * $297);
            HEAPF32[$286>>2] = $298;
            $299 = ((($288)) + 1|0);
            $300 = HEAP8[$299>>0]|0;
            $301 = (Math_fround(($300&255)));
            $302 = Math_fround($295 * $301);
            $303 = ((($286)) + 4|0);
            HEAPF32[$303>>2] = $302;
            $304 = ((($288)) + 2|0);
            $305 = HEAP8[$304>>0]|0;
            $306 = (Math_fround(($305&255)));
            $307 = Math_fround($295 * $306);
            $308 = ((($286)) + 8|0);
            HEAPF32[$308>>2] = $307;
            switch ($spec$select128|0) {
            case 2:  {
             HEAPF32[$303>>2] = Math_fround(1.0);
             break L108;
             break;
            }
            case 4:  {
             $309 = ((($286)) + 12|0);
             HEAPF32[$309>>2] = Math_fround(1.0);
             break L108;
             break;
            }
            default: {
             break L108;
            }
            }
           }
          } while(0);
          $314 = (($$6167) + 1)|0;
          $exitcond204 = ($314|0)==($36|0);
          if ($exitcond204) {
           break;
          } else {
           $$6167 = $314;
          }
         }
        }
        $315 = (($$3172) + 1)|0;
        $316 = ($315|0)<($25|0);
        if ($316) {
         $$0126171 = $$1127;$$3172 = $315;
        } else {
         $$0126$lcssa = $$1127;
         break L27;
        }
       }
       if ((label|0) == 72) {
        _free($41);
        _free($$0126171);
        HEAP32[36596] = 121279;
        $$0115 = 0;
        STACKTOP = sp;return ($$0115|0);
       }
       $138 = $$0$i134211213&255;
       $139 = $$0$i136215&255;
       $140 = $$0$i138&255;
       $141 = HEAP32[$98>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $146 = HEAP32[$99>>2]|0;
        $147 = HEAP32[$100>>2]|0;
        $148 = ($146>>>0)<($147>>>0);
        if ($148) {
         $149 = ((($146)) + 1|0);
         HEAP32[$99>>2] = $149;
         $150 = HEAP8[$146>>0]|0;
         $151 = $150&255;
         $$0$i140 = $151;
        } else {
         $$0$i140 = 0;
        }
       } else {
        $143 = (_fgetc($141)|0);
        $144 = ($143|0)==(-1);
        $145 = $144 ? 0 : $143;
        $$0$i140 = $145;
       }
       $152 = $$0$i140&255;
       $153 = ($152<<24>>24)==(0);
       L131: do {
        if ($153) {
         switch ($spec$select128|0) {
         case 4:  {
          $176 = ((($41)) + 12|0);
          HEAPF32[$176>>2] = Math_fround(1.0);
          label = 63;
          break;
         }
         case 3:  {
          label = 63;
          break;
         }
         case 2:  {
          $179 = ((($41)) + 4|0);
          HEAPF32[$179>>2] = Math_fround(1.0);
          label = 65;
          break;
         }
         case 1:  {
          label = 65;
          break;
         }
         default: {
          break L131;
         }
         }
         if ((label|0) == 63) {
          $177 = ((($41)) + 8|0);
          HEAPF32[$177>>2] = Math_fround(0.0);
          $178 = ((($41)) + 4|0);
          HEAPF32[$178>>2] = Math_fround(0.0);
          HEAPF32[$41>>2] = Math_fround(0.0);
          break;
         }
         else if ((label|0) == 65) {
          HEAPF32[$41>>2] = Math_fround(0.0);
          break;
         }
        } else {
         $154 = $$0$i140 & 255;
         $155 = (($154) + -136)|0;
         $156 = (+_ldexp(1.0,$155));
         $157 = Math_fround($156);
         if ($102) {
          $158 = $$0$i134211213 & 255;
          $159 = $$0$i136215 & 255;
          $160 = (($159) + ($158))|0;
          $161 = $$0$i138 & 255;
          $162 = (($160) + ($161))|0;
          $163 = (Math_fround(($162|0)));
          $164 = Math_fround($163 * $157);
          $165 = Math_fround($164 / Math_fround(3.0));
          HEAPF32[$41>>2] = $165;
         } else {
          $166 = (Math_fround(($138&255)));
          $167 = Math_fround($166 * $157);
          HEAPF32[$41>>2] = $167;
          $168 = (Math_fround(($139&255)));
          $169 = Math_fround($168 * $157);
          $170 = ((($41)) + 4|0);
          HEAPF32[$170>>2] = $169;
          $171 = (Math_fround(($140&255)));
          $172 = Math_fround($171 * $157);
          $173 = ((($41)) + 8|0);
          HEAPF32[$173>>2] = $172;
         }
         switch ($spec$select128|0) {
         case 2:  {
          $174 = ((($41)) + 4|0);
          HEAPF32[$174>>2] = Math_fround(1.0);
          break L131;
          break;
         }
         case 4:  {
          $175 = ((($41)) + 12|0);
          HEAPF32[$175>>2] = Math_fround(1.0);
          break L131;
          break;
         }
         default: {
          break L131;
         }
         }
        }
       } while(0);
       _free($$0126171);
       $$1121 = 1;$$2 = 0;$$pre$phi210Z2D = $98;
       label = 20;
       break L25;
      } else {
       $$0126$lcssa = 0;
      }
     } while(0);
     _free($$0126$lcssa);
     $$0115 = $41;
     STACKTOP = sp;return ($$0115|0);
    }
   } while(0);
   while(1) {
    if ((label|0) == 17) {
     label = 0;
     $43 = ($$0118|0)<($25|0);
     if ($43) {
      $$0120 = 0;$$1119 = $$0118;
     } else {
      $$0115 = $41;
      break;
     }
    }
    else if ((label|0) == 20) {
     label = 0;
     $45 = HEAP32[$$pre$phi210Z2D>>2]|0;
     $46 = ($45|0)==(0|0);
     if ($46) {
      $47 = ((($0)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = HEAPU8[$48>>0]|(HEAPU8[$48+1>>0]<<8)|(HEAPU8[$48+2>>0]<<16)|(HEAPU8[$48+3>>0]<<24);
      HEAP32[$7>>2] = $49;
      $50 = ((($48)) + 4|0);
      HEAP32[$47>>2] = $50;
      $51 = $49 >>> 24;
      $52 = $51&255;
      $58 = $52;
     } else {
      (_fread($7,1,4,$45)|0);
      $$phi$trans$insert = ((($7)) + 3|0);
      $$pre207 = HEAP8[$$phi$trans$insert>>0]|0;
      $58 = $$pre207;
     }
     $53 = Math_imul($38, $$2)|0;
     $54 = (($41) + ($53<<2)|0);
     $55 = Math_imul($$1121, $spec$select128)|0;
     $56 = (($54) + ($55<<2)|0);
     $57 = ($58<<24>>24)==(0);
     L157: do {
      if ($57) {
       switch ($spec$select128|0) {
       case 4:  {
        $91 = ((($56)) + 12|0);
        HEAPF32[$91>>2] = Math_fround(1.0);
        label = 32;
        break;
       }
       case 3:  {
        label = 32;
        break;
       }
       case 2:  {
        $94 = ((($56)) + 4|0);
        HEAPF32[$94>>2] = Math_fround(1.0);
        label = 34;
        break;
       }
       case 1:  {
        label = 34;
        break;
       }
       default: {
        break L157;
       }
       }
       if ((label|0) == 32) {
        label = 0;
        $92 = ((($56)) + 8|0);
        HEAPF32[$92>>2] = Math_fround(0.0);
        $93 = ((($56)) + 4|0);
        HEAPF32[$93>>2] = Math_fround(0.0);
        HEAPF32[$56>>2] = Math_fround(0.0);
        break;
       }
       else if ((label|0) == 34) {
        label = 0;
        HEAPF32[$56>>2] = Math_fround(0.0);
        break;
       }
      } else {
       $59 = $58&255;
       $60 = (($59) + -136)|0;
       $61 = (+_ldexp(1.0,$60));
       $62 = Math_fround($61);
       $63 = ($spec$select128|0)<(3);
       $64 = HEAP8[$7>>0]|0;
       if ($63) {
        $65 = $64&255;
        $66 = ((($7)) + 1|0);
        $67 = HEAP8[$66>>0]|0;
        $68 = $67&255;
        $69 = (($68) + ($65))|0;
        $70 = ((($7)) + 2|0);
        $71 = HEAP8[$70>>0]|0;
        $72 = $71&255;
        $73 = (($69) + ($72))|0;
        $74 = (Math_fround(($73|0)));
        $75 = Math_fround($62 * $74);
        $76 = Math_fround($75 / Math_fround(3.0));
        HEAPF32[$56>>2] = $76;
       } else {
        $77 = (Math_fround(($64&255)));
        $78 = Math_fround($62 * $77);
        HEAPF32[$56>>2] = $78;
        $79 = ((($7)) + 1|0);
        $80 = HEAP8[$79>>0]|0;
        $81 = (Math_fround(($80&255)));
        $82 = Math_fround($62 * $81);
        $83 = ((($56)) + 4|0);
        HEAPF32[$83>>2] = $82;
        $84 = ((($7)) + 2|0);
        $85 = HEAP8[$84>>0]|0;
        $86 = (Math_fround(($85&255)));
        $87 = Math_fround($62 * $86);
        $88 = ((($56)) + 8|0);
        HEAPF32[$88>>2] = $87;
       }
       switch ($spec$select128|0) {
       case 2:  {
        $89 = ((($56)) + 4|0);
        HEAPF32[$89>>2] = Math_fround(1.0);
        break L157;
        break;
       }
       case 4:  {
        $90 = ((($56)) + 12|0);
        HEAPF32[$90>>2] = Math_fround(1.0);
        break L157;
        break;
       }
       default: {
        break L157;
       }
       }
      }
     } while(0);
     $95 = (($$1121) + 1)|0;
     $$0120 = $95;$$1119 = $$2;
    }
    $44 = ($$0120|0)<($36|0);
    if ($44) {
     $$pre209 = ((($0)) + 16|0);
     $$1121 = $$0120;$$2 = $$1119;$$pre$phi210Z2D = $$pre209;
     label = 20;
     continue;
    } else {
     $96 = (($$1119) + 1)|0;
     $$0118 = $96;
     label = 17;
     continue;
    }
   }
   STACKTOP = sp;return ($$0115|0);
  }
 }
 HEAP32[36596] = 121248;
 $$0115 = 0;
 STACKTOP = sp;return ($$0115|0);
}
function _hdr_to_ldr($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = Math_fround(0), $$0$us = Math_fround(0), $$051$us = Math_fround(0), $$053 = 0, $$054 = 0, $$05557$us = 0, $$05658 = 0, $$05658$us = 0, $$1 = Math_fround(0), $$1$us = Math_fround(0), $$152$us = Math_fround(0), $10 = 0, $11 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = Math_fround(0), $17 = Math_fround(0), $18 = Math_fround(0);
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = 0.0, $30 = 0.0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;
 var $exitcond63 = 0, $exitcond64 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = Math_imul($4, $3)|0;
 $6 = (_malloc($5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  _free($0);
  HEAP32[36596] = 121182;
  $$053 = 0;
  return ($$053|0);
 }
 $8 = $3 & 1;
 $sext = (($3) + -1)|0;
 $$054 = (($sext) + ($8))|0;
 $9 = ($4|0)>(0);
 L5: do {
  if ($9) {
   $10 = ($$054|0)>(0);
   $11 = +Math_fround(0.454545438);
   if (!($10)) {
    $40 = ($3|0)>(0);
    $$05658 = 0;
    while(1) {
     if ($40) {
      $41 = Math_imul($$05658, $3)|0;
      $42 = (($0) + ($41<<2)|0);
      $43 = Math_fround(HEAPF32[$42>>2]);
      $44 = Math_fround($43 * Math_fround(255.0));
      $45 = Math_fround($44 + Math_fround(0.5));
      $46 = $45 < Math_fround(0.0);
      $$0 = $46 ? Math_fround(0.0) : $45;
      $47 = $$0 > Math_fround(255.0);
      $$1 = $47 ? Math_fround(255.0) : $$0;
      $48 = (~~(($$1)));
      $49 = $48&255;
      $50 = (($6) + ($41)|0);
      HEAP8[$50>>0] = $49;
     }
     $51 = (($$05658) + 1)|0;
     $exitcond64 = ($51|0)==($4|0);
     if ($exitcond64) {
      break L5;
     } else {
      $$05658 = $51;
     }
    }
   }
   $12 = ($$054|0)<($3|0);
   $$05658$us = 0;
   while(1) {
    $13 = Math_imul($$05658$us, $3)|0;
    $$05557$us = 0;
    while(1) {
     $25 = (($$05557$us) + ($13))|0;
     $26 = (($0) + ($25<<2)|0);
     $27 = Math_fround(HEAPF32[$26>>2]);
     $28 = Math_fround($27 * Math_fround(1.0));
     $29 = +$28;
     $30 = (+_pow($29,$11));
     $31 = Math_fround($30);
     $32 = Math_fround($31 * Math_fround(255.0));
     $33 = Math_fround($32 + Math_fround(0.5));
     $34 = $33 < Math_fround(0.0);
     $$051$us = $34 ? Math_fround(0.0) : $33;
     $35 = $$051$us > Math_fround(255.0);
     $$152$us = $35 ? Math_fround(255.0) : $$051$us;
     $36 = (~~(($$152$us)));
     $37 = $36&255;
     $38 = (($6) + ($25)|0);
     HEAP8[$38>>0] = $37;
     $39 = (($$05557$us) + 1)|0;
     $exitcond = ($39|0)==($$054|0);
     if ($exitcond) {
      break;
     } else {
      $$05557$us = $39;
     }
    }
    if ($12) {
     $14 = (($$054) + ($13))|0;
     $15 = (($0) + ($14<<2)|0);
     $16 = Math_fround(HEAPF32[$15>>2]);
     $17 = Math_fround($16 * Math_fround(255.0));
     $18 = Math_fround($17 + Math_fround(0.5));
     $19 = $18 < Math_fround(0.0);
     $$0$us = $19 ? Math_fround(0.0) : $18;
     $20 = $$0$us > Math_fround(255.0);
     $$1$us = $20 ? Math_fround(255.0) : $$0$us;
     $21 = (~~(($$1$us)));
     $22 = $21&255;
     $23 = (($6) + ($14)|0);
     HEAP8[$23>>0] = $22;
    }
    $24 = (($$05658$us) + 1)|0;
    $exitcond63 = ($24|0)==($4|0);
    if ($exitcond63) {
     break;
    } else {
     $$05658$us = $24;
    }
   }
  }
 } while(0);
 _free($0);
 $$053 = $6;
 return ($$053|0);
}
function _tga_test($0) {
 $0 = $0|0;
 var $$0$i$i38 = 0, $$0$i$i40 = 0, $$0$i3$i72 = 0, $$0$i3$i80 = 0, $$0$i82 = 0, $$op$i70 = 0, $$op$i78 = 0, $$phi$trans$insert = 0, $$phi$trans$insert101 = 0, $$phi$trans$insert104 = 0, $$phi$trans$insert106 = 0, $$phi$trans$insert108 = 0, $$phi$trans$insert110 = 0, $$phi$trans$insert85 = 0, $$phi$trans$insert88 = 0, $$phi$trans$insert90 = 0, $$phi$trans$insert94 = 0, $$phi$trans$insert96 = 0, $$phi$trans$insert99 = 0, $$pre = 0;
 var $$pre$i = 0, $$pre$i45 = 0, $$pre$i53 = 0, $$pre$i61 = 0, $$pre$i69 = 0, $$pre$i77 = 0, $$pre$phi113Z2D = 0, $$pre$phi115Z2D = 0, $$pre$phi117Z2D = 0, $$pre$phi119Z2D = 0, $$pre$phi121Z2D = 0, $$pre$phiZ2D = 0, $$pre100 = 0, $$pre102 = 0, $$pre103 = 0, $$pre105 = 0, $$pre107 = 0, $$pre109 = 0, $$pre111 = 0, $$pre84 = 0;
 var $$pre86 = 0, $$pre87 = 0, $$pre89 = 0, $$pre91 = 0, $$pre92 = 0, $$pre93 = 0, $$pre95 = 0, $$pre97 = 0, $$pre98 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0;
 var $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0;
 var $163 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp$i66 = 0, $phitmp$i74 = 0, $spec$select = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $4 = ((($0)) + 20|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 24|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($5)) + 1|0);
   HEAP32[$4>>2] = $9;
   label = 6;
  } else {
   label = 6;
  }
 } else {
  (_fgetc($2)|0);
  $$pre = HEAP32[$1>>2]|0;
  $10 = ($$pre|0)==(0|0);
  if ($10) {
   label = 6;
  } else {
   $11 = (_fgetc($$pre)|0);
   $12 = ($11|0)==(-1);
   $13 = $12 ? 0 : $11;
   $$0$i$i38 = $13;
  }
 }
 if ((label|0) == 6) {
  $14 = ((($0)) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($0)) + 24|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ($15>>>0)<($17>>>0);
  if ($18) {
   $19 = ((($15)) + 1|0);
   HEAP32[$14>>2] = $19;
   $20 = HEAP8[$15>>0]|0;
   $21 = $20&255;
   $$0$i$i38 = $21;
  } else {
   $$0$i$i38 = 0;
  }
 }
 $22 = $$0$i$i38&255;
 $23 = ($22&255)>(1);
 if ($23) {
  return 0;
 }
 $24 = HEAP32[$1>>2]|0;
 $25 = ($24|0)==(0|0);
 if ($25) {
  $29 = ((($0)) + 20|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($0)) + 24|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ($30>>>0)<($32>>>0);
  if ($33) {
   $34 = ((($30)) + 1|0);
   HEAP32[$29>>2] = $34;
   $35 = HEAP8[$30>>0]|0;
   $36 = $35&255;
   $$0$i$i40 = $36;
  } else {
   $$0$i$i40 = 0;
  }
 } else {
  $26 = (_fgetc($24)|0);
  $27 = ($26|0)==(-1);
  $28 = $27 ? 0 : $26;
  $$0$i$i40 = $28;
 }
 $37 = $$0$i$i40&255;
 switch ($37<<24>>24) {
 case 1: case 2: case 3: case 9: case 10: case 11:  {
  break;
 }
 default: {
  return 0;
 }
 }
 $38 = HEAP32[$1>>2]|0;
 $39 = ($38|0)==(0|0);
 do {
  if ($39) {
   $40 = ((($0)) + 20|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = ((($0)) + 24|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($41>>>0)<($43>>>0);
   if ($44) {
    $45 = ((($41)) + 1|0);
    HEAP32[$40>>2] = $45;
    $$pre$phiZ2D = $40;$48 = $45;$49 = $43;
    label = 19;
   } else {
    $$pre$phiZ2D = $40;$48 = $41;$49 = $43;
    label = 19;
   }
  } else {
   (_fgetc($38)|0);
   $$pre$i = HEAP32[$1>>2]|0;
   $46 = ($$pre$i|0)==(0|0);
   if ($46) {
    $$phi$trans$insert = ((($0)) + 20|0);
    $$pre84 = HEAP32[$$phi$trans$insert>>2]|0;
    $$phi$trans$insert85 = ((($0)) + 24|0);
    $$pre86 = HEAP32[$$phi$trans$insert85>>2]|0;
    $$pre$phiZ2D = $$phi$trans$insert;$48 = $$pre84;$49 = $$pre86;
    label = 19;
    break;
   }
   (_fgetc($$pre$i)|0);
   $$pre87 = HEAP32[$1>>2]|0;
   $51 = ($$pre87|0)==(0|0);
   if ($51) {
    label = 22;
   } else {
    (_fgetc($$pre87)|0);
    $$pre$i45 = HEAP32[$1>>2]|0;
    $58 = ($$pre$i45|0)==(0|0);
    if ($58) {
     $$phi$trans$insert88 = ((($0)) + 20|0);
     $$pre89 = HEAP32[$$phi$trans$insert88>>2]|0;
     $$phi$trans$insert90 = ((($0)) + 24|0);
     $$pre91 = HEAP32[$$phi$trans$insert90>>2]|0;
     $$pre$phi113Z2D = $$phi$trans$insert88;$60 = $$pre89;$61 = $$pre91;
     label = 26;
     break;
    }
    (_fgetc($$pre$i45)|0);
    $$pre92 = HEAP32[$1>>2]|0;
    $63 = ($$pre92|0)==(0|0);
    if ($63) {
     label = 29;
    } else {
     (_fgetc($$pre92)|0);
     $$pre93 = HEAP32[$1>>2]|0;
     $70 = ($$pre93|0)==(0|0);
     if ($70) {
      label = 32;
     } else {
      (_fgetc($$pre93)|0);
      $$pre$i53 = HEAP32[$1>>2]|0;
      $77 = ($$pre$i53|0)==(0|0);
      if ($77) {
       $$phi$trans$insert94 = ((($0)) + 20|0);
       $$pre95 = HEAP32[$$phi$trans$insert94>>2]|0;
       $$phi$trans$insert96 = ((($0)) + 24|0);
       $$pre97 = HEAP32[$$phi$trans$insert96>>2]|0;
       $$pre$phi115Z2D = $$phi$trans$insert94;$79 = $$pre95;$80 = $$pre97;
       label = 36;
       break;
      }
      (_fgetc($$pre$i53)|0);
      $$pre98 = HEAP32[$1>>2]|0;
      $82 = ($$pre98|0)==(0|0);
      if ($82) {
       label = 39;
      } else {
       (_fgetc($$pre98)|0);
       $$pre$i61 = HEAP32[$1>>2]|0;
       $89 = ($$pre$i61|0)==(0|0);
       if ($89) {
        $$phi$trans$insert99 = ((($0)) + 20|0);
        $$pre100 = HEAP32[$$phi$trans$insert99>>2]|0;
        $$phi$trans$insert101 = ((($0)) + 24|0);
        $$pre102 = HEAP32[$$phi$trans$insert101>>2]|0;
        $$pre$phi117Z2D = $$phi$trans$insert99;$91 = $$pre100;$92 = $$pre102;
        label = 43;
        break;
       }
       (_fgetc($$pre$i61)|0);
       $$pre103 = HEAP32[$1>>2]|0;
       $94 = ($$pre103|0)==(0|0);
       if ($94) {
        label = 46;
       } else {
        $103 = (_fgetc($$pre103)|0);
        $104 = ($103|0)==(-1);
        $$pre$i69 = HEAP32[$1>>2]|0;
        $$op$i70 = $103 << 8;
        $105 = $104 ? 0 : $$op$i70;
        $106 = ($$pre$i69|0)==(0|0);
        if ($106) {
         $$phi$trans$insert104 = ((($0)) + 20|0);
         $$pre105 = HEAP32[$$phi$trans$insert104>>2]|0;
         $$phi$trans$insert106 = ((($0)) + 24|0);
         $$pre107 = HEAP32[$$phi$trans$insert106>>2]|0;
         $$pre$phi119Z2D = $$phi$trans$insert104;$111 = $$pre105;$112 = $$pre107;$162 = $105;
         label = 51;
         break;
        } else {
         $107 = (_fgetc($$pre$i69)|0);
         $108 = ($107|0)==(-1);
         $109 = $108 ? 0 : $107;
         $$0$i3$i72 = $109;$117 = $105;
         break;
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 19) {
  $47 = ($48>>>0)<($49>>>0);
  if ($47) {
   $50 = ((($48)) + 1|0);
   HEAP32[$$pre$phiZ2D>>2] = $50;
   label = 22;
  } else {
   label = 22;
  }
 }
 if ((label|0) == 22) {
  $52 = ((($0)) + 20|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ((($0)) + 24|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ($53>>>0)<($55>>>0);
  if ($56) {
   $57 = ((($53)) + 1|0);
   HEAP32[$52>>2] = $57;
   $$pre$phi113Z2D = $52;$60 = $57;$61 = $55;
   label = 26;
  } else {
   $$pre$phi113Z2D = $52;$60 = $53;$61 = $55;
   label = 26;
  }
 }
 if ((label|0) == 26) {
  $59 = ($60>>>0)<($61>>>0);
  if ($59) {
   $62 = ((($60)) + 1|0);
   HEAP32[$$pre$phi113Z2D>>2] = $62;
   label = 29;
  } else {
   label = 29;
  }
 }
 if ((label|0) == 29) {
  $64 = ((($0)) + 20|0);
  $65 = HEAP32[$64>>2]|0;
  $66 = ((($0)) + 24|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($65>>>0)<($67>>>0);
  if ($68) {
   $69 = ((($65)) + 1|0);
   HEAP32[$64>>2] = $69;
   label = 32;
  } else {
   label = 32;
  }
 }
 if ((label|0) == 32) {
  $71 = ((($0)) + 20|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ((($0)) + 24|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($72>>>0)<($74>>>0);
  if ($75) {
   $76 = ((($72)) + 1|0);
   HEAP32[$71>>2] = $76;
   $$pre$phi115Z2D = $71;$79 = $76;$80 = $74;
   label = 36;
  } else {
   $$pre$phi115Z2D = $71;$79 = $72;$80 = $74;
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $78 = ($79>>>0)<($80>>>0);
  if ($78) {
   $81 = ((($79)) + 1|0);
   HEAP32[$$pre$phi115Z2D>>2] = $81;
   label = 39;
  } else {
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $83 = ((($0)) + 20|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = ((($0)) + 24|0);
  $86 = HEAP32[$85>>2]|0;
  $87 = ($84>>>0)<($86>>>0);
  if ($87) {
   $88 = ((($84)) + 1|0);
   HEAP32[$83>>2] = $88;
   $$pre$phi117Z2D = $83;$91 = $88;$92 = $86;
   label = 43;
  } else {
   $$pre$phi117Z2D = $83;$91 = $84;$92 = $86;
   label = 43;
  }
 }
 if ((label|0) == 43) {
  $90 = ($91>>>0)<($92>>>0);
  if ($90) {
   $93 = ((($91)) + 1|0);
   HEAP32[$$pre$phi117Z2D>>2] = $93;
   label = 46;
  } else {
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $95 = ((($0)) + 20|0);
  $96 = HEAP32[$95>>2]|0;
  $97 = ((($0)) + 24|0);
  $98 = HEAP32[$97>>2]|0;
  $99 = ($96>>>0)<($98>>>0);
  if ($99) {
   $100 = ((($96)) + 1|0);
   HEAP32[$95>>2] = $100;
   $101 = HEAP8[$96>>0]|0;
   $102 = $101&255;
   $phitmp$i66 = $102 << 8;
   $$pre$phi119Z2D = $95;$111 = $100;$112 = $98;$162 = $phitmp$i66;
   label = 51;
  } else {
   $$pre$phi119Z2D = $95;$111 = $96;$112 = $98;$162 = 0;
   label = 51;
  }
 }
 if ((label|0) == 51) {
  $110 = ($111>>>0)<($112>>>0);
  if ($110) {
   $113 = ((($111)) + 1|0);
   HEAP32[$$pre$phi119Z2D>>2] = $113;
   $114 = HEAP8[$111>>0]|0;
   $115 = $114&255;
   $$0$i3$i72 = $115;$117 = $162;
  } else {
   $$0$i3$i72 = 0;$117 = $162;
  }
 }
 $116 = (($$0$i3$i72) + ($117))|0;
 $118 = ($116|0)<(1);
 if ($118) {
  return 0;
 }
 $119 = HEAP32[$1>>2]|0;
 $120 = ($119|0)==(0|0);
 do {
  if ($120) {
   $121 = ((($0)) + 20|0);
   $122 = HEAP32[$121>>2]|0;
   $123 = ((($0)) + 24|0);
   $124 = HEAP32[$123>>2]|0;
   $125 = ($122>>>0)<($124>>>0);
   if ($125) {
    $126 = ((($122)) + 1|0);
    HEAP32[$121>>2] = $126;
    $127 = HEAP8[$122>>0]|0;
    $128 = $127&255;
    $phitmp$i74 = $128 << 8;
    $$pre$phi121Z2D = $121;$137 = $126;$138 = $124;$163 = $phitmp$i74;
    label = 60;
   } else {
    $$pre$phi121Z2D = $121;$137 = $122;$138 = $124;$163 = 0;
    label = 60;
   }
  } else {
   $129 = (_fgetc($119)|0);
   $130 = ($129|0)==(-1);
   $$pre$i77 = HEAP32[$1>>2]|0;
   $$op$i78 = $129 << 8;
   $131 = $130 ? 0 : $$op$i78;
   $132 = ($$pre$i77|0)==(0|0);
   if ($132) {
    $$phi$trans$insert108 = ((($0)) + 20|0);
    $$pre109 = HEAP32[$$phi$trans$insert108>>2]|0;
    $$phi$trans$insert110 = ((($0)) + 24|0);
    $$pre111 = HEAP32[$$phi$trans$insert110>>2]|0;
    $$pre$phi121Z2D = $$phi$trans$insert108;$137 = $$pre109;$138 = $$pre111;$163 = $131;
    label = 60;
    break;
   } else {
    $133 = (_fgetc($$pre$i77)|0);
    $134 = ($133|0)==(-1);
    $135 = $134 ? 0 : $133;
    $$0$i3$i80 = $135;$143 = $131;
    break;
   }
  }
 } while(0);
 if ((label|0) == 60) {
  $136 = ($137>>>0)<($138>>>0);
  if ($136) {
   $139 = ((($137)) + 1|0);
   HEAP32[$$pre$phi121Z2D>>2] = $139;
   $140 = HEAP8[$137>>0]|0;
   $141 = $140&255;
   $$0$i3$i80 = $141;$143 = $163;
  } else {
   $$0$i3$i80 = 0;$143 = $163;
  }
 }
 $142 = (($$0$i3$i80) + ($143))|0;
 $144 = ($142|0)<(1);
 if ($144) {
  return 0;
 }
 $145 = HEAP32[$1>>2]|0;
 $146 = ($145|0)==(0|0);
 if (!($146)) {
  $147 = (_fgetc($145)|0);
  $148 = ($147|0)==(-1);
  $149 = $148 ? 0 : $147;
  $$0$i82 = $149;
  $158 = (($$0$i82) + -8)|0;
  $159 = $158 >>> 3;
  $160 = $158 << 29;
  $161 = $159 | $160;
  $switch = ($161>>>0)<(4);
  $spec$select = $switch&1;
  return ($spec$select|0);
 }
 $150 = ((($0)) + 20|0);
 $151 = HEAP32[$150>>2]|0;
 $152 = ((($0)) + 24|0);
 $153 = HEAP32[$152>>2]|0;
 $154 = ($151>>>0)<($153>>>0);
 if (!($154)) {
  $$0$i82 = 0;
  $158 = (($$0$i82) + -8)|0;
  $159 = $158 >>> 3;
  $160 = $158 << 29;
  $161 = $159 | $160;
  $switch = ($161>>>0)<(4);
  $spec$select = $switch&1;
  return ($spec$select|0);
 }
 $155 = ((($151)) + 1|0);
 HEAP32[$150>>2] = $155;
 $156 = HEAP8[$151>>0]|0;
 $157 = $156&255;
 $$0$i82 = $157;
 $158 = (($$0$i82) + -8)|0;
 $159 = $158 >>> 3;
 $160 = $158 << 29;
 $161 = $159 | $160;
 $switch = ($161>>>0)<(4);
 $spec$select = $switch&1;
 return ($spec$select|0);
}
function _tga_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i$i239$ph = 0, $$0$i$i241$ph = 0, $$0$i$i281$ph = 0, $$0$i$i284 = 0, $$0$i$i288 = 0, $$0$i$i291 = 0, $$0$i$i294 = 0, $$0$i3$i$ph = 0, $$0$i3$i248$ph = 0, $$0$i3$i272$ph = 0, $$0$i3$i279$ph = 0, $$0$i6$i = 0, $$0$i6$i245 = 0, $$0$i6$i269 = 0, $$0$i6$i276 = 0, $$0219305$us = 0, $$0220304$us = 0, $$0221 = 0, $$0222321 = 0;
 var $$0223320 = 0, $$0225319 = 0, $$0230314 = 0, $$0232 = 0, $$0233$off = 0, $$1224299 = 0, $$1224300 = 0, $$1226297 = 0, $$1226298 = 0, $$1228309 = 0, $$1231303$us = 0, $$2229306 = 0, $$2229306$us = 0, $$off = 0, $$op = 0, $$op376 = 0, $$op377 = 0, $$op378 = 0, $$op379 = 0, $$op380 = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert334 = 0, $$phi$trans$insert337 = 0, $$phi$trans$insert339 = 0, $$phi$trans$insert343 = 0, $$phi$trans$insert345 = 0, $$phi$trans$insert348 = 0, $$phi$trans$insert350 = 0, $$phi$trans$insert353 = 0, $$phi$trans$insert355 = 0, $$phi$trans$insert358 = 0, $$phi$trans$insert360 = 0, $$pre = 0, $$pre$i = 0, $$pre$i243 = 0, $$pre$i253 = 0, $$pre$i260 = 0, $$pre$i267 = 0, $$pre$i274 = 0, $$pre$phi365Z2D = 0;
 var $$pre$phi367Z2D = 0, $$pre$phi369Z2D = 0, $$pre$phi371Z2D = 0, $$pre$phi373Z2D = 0, $$pre$phiZ2D = 0, $$pre331 = 0, $$pre332 = 0, $$pre333 = 0, $$pre335 = 0, $$pre336 = 0, $$pre338 = 0, $$pre340 = 0, $$pre341 = 0, $$pre342 = 0, $$pre344 = 0, $$pre346 = 0, $$pre347 = 0, $$pre349 = 0, $$pre351 = 0, $$pre352 = 0;
 var $$pre354 = 0, $$pre356 = 0, $$pre357 = 0, $$pre359 = 0, $$pre361 = 0, $$pre362 = 0, $$pre363 = 0, $$sink382 = 0, $$sroa$0$0315 = 0, $$sroa$0$2 = 0, $$sroa$11$0316 = 0, $$sroa$11$2 = 0, $$sroa$19$0317 = 0, $$sroa$19$2 = 0, $$sroa$27$0318 = 0, $$sroa$27$2 = 0, $$sroa$27$2$sink = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0;
 var $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond330 = 0, $or$cond = 0, $or$cond324 = 0, $phitmp = 0, $scevgep = 0, $smax = 0, $spec$select236 = 0, $spec$select237 = 0, $spec$store$select = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $5 = sp;
 $6 = ((($0)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 do {
  if ($8) {
   $9 = ((($0)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ((($0)) + 24|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($10>>>0)<($12>>>0);
   if ($13) {
    $14 = ((($10)) + 1|0);
    HEAP32[$9>>2] = $14;
    $15 = HEAP8[$10>>0]|0;
    $16 = $15&255;
    $389 = $16;
    label = 5;
   } else {
    $389 = 0;
    label = 5;
   }
  } else {
   $17 = (_fgetc($7)|0);
   $18 = ($17|0)==(-1);
   $$pre = HEAP32[$6>>2]|0;
   $$op = $17 & 255;
   $19 = $18 ? 0 : $$op;
   $20 = ($$pre|0)==(0|0);
   if ($20) {
    $389 = $19;
    label = 5;
   } else {
    $30 = (_fgetc($$pre)|0);
    $31 = ($30|0)==(-1);
    $$pre331 = HEAP32[$6>>2]|0;
    $32 = $30&255;
    $33 = $31 ? 0 : $32;
    $34 = ($$pre331|0)==(0|0);
    if ($34) {
     $390 = $33;$391 = $19;
     label = 9;
    } else {
     $44 = (_fgetc($$pre331)|0);
     $45 = ($44|0)==(-1);
     $46 = $45 ? 0 : $44;
     $$pre332 = HEAP32[$6>>2]|0;
     $47 = $46&255;
     $48 = $46 & 255;
     $49 = ($$pre332|0)==(0|0);
     if ($49) {
      $392 = $48;$393 = $47;$394 = $19;$395 = $33;
      label = 13;
     } else {
      $58 = (_fgetc($$pre332)|0);
      $59 = ($58|0)==(-1);
      $60 = $59 ? 0 : $58;
      $$pre$i = HEAP32[$6>>2]|0;
      $61 = ($$pre$i|0)==(0|0);
      if ($61) {
       $$phi$trans$insert = ((($0)) + 20|0);
       $$pre333 = HEAP32[$$phi$trans$insert>>2]|0;
       $$phi$trans$insert334 = ((($0)) + 24|0);
       $$pre335 = HEAP32[$$phi$trans$insert334>>2]|0;
       $$0$i6$i = $60;$$pre$phiZ2D = $$phi$trans$insert;$396 = $48;$397 = $47;$398 = $19;$399 = $33;$63 = $$pre333;$64 = $$pre335;
       label = 17;
       break;
      }
      $70 = (_fgetc($$pre$i)|0);
      $71 = ($70|0)==(-1);
      $$pre336 = HEAP32[$6>>2]|0;
      $$op376 = $70 << 8;
      $72 = $71 ? 0 : $$op376;
      $73 = (($72) + ($60))|0;
      $74 = ($$pre336|0)==(0|0);
      if ($74) {
       $400 = $73;$401 = $33;$402 = $19;$403 = $47;$404 = $48;
       label = 21;
      } else {
       $83 = (_fgetc($$pre336)|0);
       $84 = ($83|0)==(-1);
       $85 = $84 ? 0 : $83;
       $$pre$i243 = HEAP32[$6>>2]|0;
       $86 = ($$pre$i243|0)==(0|0);
       if ($86) {
        $$phi$trans$insert337 = ((($0)) + 20|0);
        $$pre338 = HEAP32[$$phi$trans$insert337>>2]|0;
        $$phi$trans$insert339 = ((($0)) + 24|0);
        $$pre340 = HEAP32[$$phi$trans$insert339>>2]|0;
        $$0$i6$i245 = $85;$$pre$phi365Z2D = $$phi$trans$insert337;$405 = $73;$406 = $33;$407 = $19;$408 = $47;$409 = $48;$88 = $$pre338;$89 = $$pre340;
        label = 25;
        break;
       }
       $95 = (_fgetc($$pre$i243)|0);
       $96 = ($95|0)==(-1);
       $$pre341 = HEAP32[$6>>2]|0;
       $$op377 = $95 << 8;
       $97 = $96 ? 0 : $$op377;
       $98 = (($97) + ($85))|0;
       $99 = ($$pre341|0)==(0|0);
       if ($99) {
        $410 = $98;$411 = $48;$412 = $47;$413 = $19;$414 = $33;$415 = $73;
        label = 29;
       } else {
        $108 = (_fgetc($$pre341)|0);
        $109 = ($108|0)==(-1);
        $$pre342 = HEAP32[$6>>2]|0;
        $$op378 = $108 & 255;
        $110 = $109 ? 0 : $$op378;
        $111 = ($$pre342|0)==(0|0);
        if ($111) {
         $416 = $110;$417 = $73;$418 = $33;$419 = $19;$420 = $47;$421 = $48;$422 = $98;
         label = 32;
        } else {
         (_fgetc($$pre342)|0);
         $$pre$i253 = HEAP32[$6>>2]|0;
         $118 = ($$pre$i253|0)==(0|0);
         if ($118) {
          $$phi$trans$insert343 = ((($0)) + 20|0);
          $$pre344 = HEAP32[$$phi$trans$insert343>>2]|0;
          $$phi$trans$insert345 = ((($0)) + 24|0);
          $$pre346 = HEAP32[$$phi$trans$insert345>>2]|0;
          $$pre$phi367Z2D = $$phi$trans$insert343;$120 = $$pre344;$121 = $$pre346;$423 = $110;$424 = $73;$425 = $33;$426 = $19;$427 = $47;$428 = $48;$429 = $98;
          label = 36;
          break;
         }
         (_fgetc($$pre$i253)|0);
         $$pre347 = HEAP32[$6>>2]|0;
         $123 = ($$pre347|0)==(0|0);
         if ($123) {
          $430 = $98;$431 = $48;$432 = $47;$433 = $19;$434 = $33;$435 = $73;$436 = $110;
          label = 39;
         } else {
          (_fgetc($$pre347)|0);
          $$pre$i260 = HEAP32[$6>>2]|0;
          $130 = ($$pre$i260|0)==(0|0);
          if ($130) {
           $$phi$trans$insert348 = ((($0)) + 20|0);
           $$pre349 = HEAP32[$$phi$trans$insert348>>2]|0;
           $$phi$trans$insert350 = ((($0)) + 24|0);
           $$pre351 = HEAP32[$$phi$trans$insert350>>2]|0;
           $$pre$phi369Z2D = $$phi$trans$insert348;$132 = $$pre349;$133 = $$pre351;$437 = $98;$438 = $48;$439 = $47;$440 = $19;$441 = $33;$442 = $73;$443 = $110;
           label = 43;
           break;
          }
          (_fgetc($$pre$i260)|0);
          $$pre352 = HEAP32[$6>>2]|0;
          $135 = ($$pre352|0)==(0|0);
          if ($135) {
           $444 = $110;$445 = $73;$446 = $33;$447 = $19;$448 = $47;$449 = $48;$450 = $98;
           label = 46;
          } else {
           $144 = (_fgetc($$pre352)|0);
           $145 = ($144|0)==(-1);
           $146 = $145 ? 0 : $144;
           $$pre$i267 = HEAP32[$6>>2]|0;
           $147 = ($$pre$i267|0)==(0|0);
           if ($147) {
            $$phi$trans$insert353 = ((($0)) + 20|0);
            $$pre354 = HEAP32[$$phi$trans$insert353>>2]|0;
            $$phi$trans$insert355 = ((($0)) + 24|0);
            $$pre356 = HEAP32[$$phi$trans$insert355>>2]|0;
            $$0$i6$i269 = $146;$$pre$phi371Z2D = $$phi$trans$insert353;$149 = $$pre354;$150 = $$pre356;$451 = $110;$452 = $73;$453 = $33;$454 = $19;$455 = $47;$456 = $48;$457 = $98;
            label = 50;
            break;
           }
           $156 = (_fgetc($$pre$i267)|0);
           $157 = ($156|0)==(-1);
           $$pre357 = HEAP32[$6>>2]|0;
           $$op379 = $156 << 8;
           $158 = $157 ? 0 : $$op379;
           $159 = (($158) + ($146))|0;
           $160 = ($$pre357|0)==(0|0);
           if ($160) {
            $458 = $159;$459 = $98;$460 = $48;$461 = $47;$462 = $19;$463 = $33;$464 = $73;$465 = $110;
            label = 54;
           } else {
            $169 = (_fgetc($$pre357)|0);
            $170 = ($169|0)==(-1);
            $171 = $170 ? 0 : $169;
            $$pre$i274 = HEAP32[$6>>2]|0;
            $172 = ($$pre$i274|0)==(0|0);
            if ($172) {
             $$phi$trans$insert358 = ((($0)) + 20|0);
             $$pre359 = HEAP32[$$phi$trans$insert358>>2]|0;
             $$phi$trans$insert360 = ((($0)) + 24|0);
             $$pre361 = HEAP32[$$phi$trans$insert360>>2]|0;
             $$0$i6$i276 = $171;$$pre$phi373Z2D = $$phi$trans$insert358;$174 = $$pre359;$175 = $$pre361;$466 = $159;$467 = $98;$468 = $48;$469 = $47;$470 = $19;$471 = $33;$472 = $73;$473 = $110;
             label = 58;
             break;
            }
            $180 = (_fgetc($$pre$i274)|0);
            $181 = ($180|0)==(-1);
            $$pre362 = HEAP32[$6>>2]|0;
            $$op380 = $180 << 8;
            $182 = $181 ? 0 : $$op380;
            $183 = (($182) + ($171))|0;
            $184 = ($$pre362|0)==(0|0);
            if ($184) {
             $474 = $183;$475 = $110;$476 = $73;$477 = $33;$478 = $19;$479 = $47;$480 = $48;$481 = $98;$482 = $159;
             label = 62;
            } else {
             $194 = (_fgetc($$pre362)|0);
             $195 = ($194|0)==(-1);
             $196 = $195 ? 0 : $194;
             $$pre363 = HEAP32[$6>>2]|0;
             $197 = $196&255;
             $198 = $196 & 255;
             $199 = ($$pre363|0)==(0|0);
             if ($199) {
              $483 = $198;$484 = $197;$485 = $159;$486 = $98;$487 = $48;$488 = $47;$489 = $19;$490 = $33;$491 = $73;$492 = $110;$493 = $183;
              label = 67;
             } else {
              $200 = (_fgetc($$pre363)|0);
              $201 = ($200|0)==(-1);
              $202 = $201 ? 0 : $200;
              $$0$i$i284 = $202;$212 = $47;$214 = $48;$216 = $159;$218 = $183;$222 = $197;$227 = $33;$228 = $198;$229 = $110;$237 = $19;$243 = $73;$248 = $98;
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $21 = ((($0)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($0)) + 24|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($22>>>0)<($24>>>0);
  if ($25) {
   $26 = ((($22)) + 1|0);
   HEAP32[$21>>2] = $26;
   $27 = HEAP8[$22>>0]|0;
   $28 = $27&255;
   $$0$i$i239$ph = $28;
  } else {
   $$0$i$i239$ph = 0;
  }
  $29 = $$0$i$i239$ph&255;
  $390 = $29;$391 = $389;
  label = 9;
 }
 if ((label|0) == 9) {
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($0)) + 24|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($36>>>0)<($38>>>0);
  if ($39) {
   $40 = ((($36)) + 1|0);
   HEAP32[$35>>2] = $40;
   $41 = HEAP8[$36>>0]|0;
   $42 = $41&255;
   $$0$i$i241$ph = $42;
  } else {
   $$0$i$i241$ph = 0;
  }
  $43 = $$0$i$i241$ph&255;
  $392 = $$0$i$i241$ph;$393 = $43;$394 = $391;$395 = $390;
  label = 13;
 }
 if ((label|0) == 13) {
  $50 = ((($0)) + 20|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($0)) + 24|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ($51>>>0)<($53>>>0);
  if ($54) {
   $55 = ((($51)) + 1|0);
   HEAP32[$50>>2] = $55;
   $56 = HEAP8[$51>>0]|0;
   $57 = $56&255;
   $$0$i6$i = $57;$$pre$phiZ2D = $50;$396 = $392;$397 = $393;$398 = $394;$399 = $395;$63 = $55;$64 = $53;
   label = 17;
  } else {
   $$0$i6$i = 0;$$pre$phiZ2D = $50;$396 = $392;$397 = $393;$398 = $394;$399 = $395;$63 = $51;$64 = $53;
   label = 17;
  }
 }
 if ((label|0) == 17) {
  $62 = ($63>>>0)<($64>>>0);
  if ($62) {
   $65 = ((($63)) + 1|0);
   HEAP32[$$pre$phiZ2D>>2] = $65;
   $66 = HEAP8[$63>>0]|0;
   $67 = $66&255;
   $$0$i3$i$ph = $67;
  } else {
   $$0$i3$i$ph = 0;
  }
  $68 = $$0$i3$i$ph << 8;
  $69 = (($68) + ($$0$i6$i))|0;
  $400 = $69;$401 = $399;$402 = $398;$403 = $397;$404 = $396;
  label = 21;
 }
 if ((label|0) == 21) {
  $75 = ((($0)) + 20|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($0)) + 24|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = ($76>>>0)<($78>>>0);
  if ($79) {
   $80 = ((($76)) + 1|0);
   HEAP32[$75>>2] = $80;
   $81 = HEAP8[$76>>0]|0;
   $82 = $81&255;
   $$0$i6$i245 = $82;$$pre$phi365Z2D = $75;$405 = $400;$406 = $401;$407 = $402;$408 = $403;$409 = $404;$88 = $80;$89 = $78;
   label = 25;
  } else {
   $$0$i6$i245 = 0;$$pre$phi365Z2D = $75;$405 = $400;$406 = $401;$407 = $402;$408 = $403;$409 = $404;$88 = $76;$89 = $78;
   label = 25;
  }
 }
 if ((label|0) == 25) {
  $87 = ($88>>>0)<($89>>>0);
  if ($87) {
   $90 = ((($88)) + 1|0);
   HEAP32[$$pre$phi365Z2D>>2] = $90;
   $91 = HEAP8[$88>>0]|0;
   $92 = $91&255;
   $$0$i3$i248$ph = $92;
  } else {
   $$0$i3$i248$ph = 0;
  }
  $93 = $$0$i3$i248$ph << 8;
  $94 = (($93) + ($$0$i6$i245))|0;
  $410 = $94;$411 = $409;$412 = $408;$413 = $407;$414 = $406;$415 = $405;
  label = 29;
 }
 if ((label|0) == 29) {
  $100 = ((($0)) + 20|0);
  $101 = HEAP32[$100>>2]|0;
  $102 = ((($0)) + 24|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ($101>>>0)<($103>>>0);
  if ($104) {
   $105 = ((($101)) + 1|0);
   HEAP32[$100>>2] = $105;
   $106 = HEAP8[$101>>0]|0;
   $107 = $106&255;
   $416 = $107;$417 = $415;$418 = $414;$419 = $413;$420 = $412;$421 = $411;$422 = $410;
   label = 32;
  } else {
   $416 = 0;$417 = $415;$418 = $414;$419 = $413;$420 = $412;$421 = $411;$422 = $410;
   label = 32;
  }
 }
 if ((label|0) == 32) {
  $112 = ((($0)) + 20|0);
  $113 = HEAP32[$112>>2]|0;
  $114 = ((($0)) + 24|0);
  $115 = HEAP32[$114>>2]|0;
  $116 = ($113>>>0)<($115>>>0);
  if ($116) {
   $117 = ((($113)) + 1|0);
   HEAP32[$112>>2] = $117;
   $$pre$phi367Z2D = $112;$120 = $117;$121 = $115;$423 = $416;$424 = $417;$425 = $418;$426 = $419;$427 = $420;$428 = $421;$429 = $422;
   label = 36;
  } else {
   $$pre$phi367Z2D = $112;$120 = $113;$121 = $115;$423 = $416;$424 = $417;$425 = $418;$426 = $419;$427 = $420;$428 = $421;$429 = $422;
   label = 36;
  }
 }
 if ((label|0) == 36) {
  $119 = ($120>>>0)<($121>>>0);
  if ($119) {
   $122 = ((($120)) + 1|0);
   HEAP32[$$pre$phi367Z2D>>2] = $122;
   $430 = $429;$431 = $428;$432 = $427;$433 = $426;$434 = $425;$435 = $424;$436 = $423;
   label = 39;
  } else {
   $430 = $429;$431 = $428;$432 = $427;$433 = $426;$434 = $425;$435 = $424;$436 = $423;
   label = 39;
  }
 }
 if ((label|0) == 39) {
  $124 = ((($0)) + 20|0);
  $125 = HEAP32[$124>>2]|0;
  $126 = ((($0)) + 24|0);
  $127 = HEAP32[$126>>2]|0;
  $128 = ($125>>>0)<($127>>>0);
  if ($128) {
   $129 = ((($125)) + 1|0);
   HEAP32[$124>>2] = $129;
   $$pre$phi369Z2D = $124;$132 = $129;$133 = $127;$437 = $430;$438 = $431;$439 = $432;$440 = $433;$441 = $434;$442 = $435;$443 = $436;
   label = 43;
  } else {
   $$pre$phi369Z2D = $124;$132 = $125;$133 = $127;$437 = $430;$438 = $431;$439 = $432;$440 = $433;$441 = $434;$442 = $435;$443 = $436;
   label = 43;
  }
 }
 if ((label|0) == 43) {
  $131 = ($132>>>0)<($133>>>0);
  if ($131) {
   $134 = ((($132)) + 1|0);
   HEAP32[$$pre$phi369Z2D>>2] = $134;
   $444 = $443;$445 = $442;$446 = $441;$447 = $440;$448 = $439;$449 = $438;$450 = $437;
   label = 46;
  } else {
   $444 = $443;$445 = $442;$446 = $441;$447 = $440;$448 = $439;$449 = $438;$450 = $437;
   label = 46;
  }
 }
 if ((label|0) == 46) {
  $136 = ((($0)) + 20|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = ((($0)) + 24|0);
  $139 = HEAP32[$138>>2]|0;
  $140 = ($137>>>0)<($139>>>0);
  if ($140) {
   $141 = ((($137)) + 1|0);
   HEAP32[$136>>2] = $141;
   $142 = HEAP8[$137>>0]|0;
   $143 = $142&255;
   $$0$i6$i269 = $143;$$pre$phi371Z2D = $136;$149 = $141;$150 = $139;$451 = $444;$452 = $445;$453 = $446;$454 = $447;$455 = $448;$456 = $449;$457 = $450;
   label = 50;
  } else {
   $$0$i6$i269 = 0;$$pre$phi371Z2D = $136;$149 = $137;$150 = $139;$451 = $444;$452 = $445;$453 = $446;$454 = $447;$455 = $448;$456 = $449;$457 = $450;
   label = 50;
  }
 }
 if ((label|0) == 50) {
  $148 = ($149>>>0)<($150>>>0);
  if ($148) {
   $151 = ((($149)) + 1|0);
   HEAP32[$$pre$phi371Z2D>>2] = $151;
   $152 = HEAP8[$149>>0]|0;
   $153 = $152&255;
   $$0$i3$i272$ph = $153;
  } else {
   $$0$i3$i272$ph = 0;
  }
  $154 = $$0$i3$i272$ph << 8;
  $155 = (($154) + ($$0$i6$i269))|0;
  $458 = $155;$459 = $457;$460 = $456;$461 = $455;$462 = $454;$463 = $453;$464 = $452;$465 = $451;
  label = 54;
 }
 if ((label|0) == 54) {
  $161 = ((($0)) + 20|0);
  $162 = HEAP32[$161>>2]|0;
  $163 = ((($0)) + 24|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = ($162>>>0)<($164>>>0);
  if ($165) {
   $166 = ((($162)) + 1|0);
   HEAP32[$161>>2] = $166;
   $167 = HEAP8[$162>>0]|0;
   $168 = $167&255;
   $$0$i6$i276 = $168;$$pre$phi373Z2D = $161;$174 = $166;$175 = $164;$466 = $458;$467 = $459;$468 = $460;$469 = $461;$470 = $462;$471 = $463;$472 = $464;$473 = $465;
   label = 58;
  } else {
   $$0$i6$i276 = 0;$$pre$phi373Z2D = $161;$174 = $162;$175 = $164;$466 = $458;$467 = $459;$468 = $460;$469 = $461;$470 = $462;$471 = $463;$472 = $464;$473 = $465;
   label = 58;
  }
 }
 if ((label|0) == 58) {
  $173 = ($174>>>0)<($175>>>0);
  if ($173) {
   $176 = ((($174)) + 1|0);
   HEAP32[$$pre$phi373Z2D>>2] = $176;
   $177 = HEAP8[$174>>0]|0;
   $178 = $177&255;
   $phitmp = $178 << 8;
   $$0$i3$i279$ph = $phitmp;
  } else {
   $$0$i3$i279$ph = 0;
  }
  $179 = (($$0$i3$i279$ph) + ($$0$i6$i276))|0;
  $474 = $179;$475 = $473;$476 = $472;$477 = $471;$478 = $470;$479 = $469;$480 = $468;$481 = $467;$482 = $466;
  label = 62;
 }
 if ((label|0) == 62) {
  $185 = ((($0)) + 20|0);
  $186 = HEAP32[$185>>2]|0;
  $187 = ((($0)) + 24|0);
  $188 = HEAP32[$187>>2]|0;
  $189 = ($186>>>0)<($188>>>0);
  if ($189) {
   $190 = ((($186)) + 1|0);
   HEAP32[$185>>2] = $190;
   $191 = HEAP8[$186>>0]|0;
   $192 = $191&255;
   $$0$i$i281$ph = $192;
  } else {
   $$0$i$i281$ph = 0;
  }
  $193 = $$0$i$i281$ph&255;
  $483 = $$0$i$i281$ph;$484 = $193;$485 = $482;$486 = $481;$487 = $480;$488 = $479;$489 = $478;$490 = $477;$491 = $476;$492 = $475;$493 = $474;
  label = 67;
 }
 if ((label|0) == 67) {
  $203 = ((($0)) + 20|0);
  $204 = HEAP32[$203>>2]|0;
  $205 = ((($0)) + 24|0);
  $206 = HEAP32[$205>>2]|0;
  $207 = ($204>>>0)<($206>>>0);
  if ($207) {
   $208 = ((($204)) + 1|0);
   HEAP32[$203>>2] = $208;
   $209 = HEAP8[$204>>0]|0;
   $210 = $209&255;
   $$0$i$i284 = $210;$212 = $488;$214 = $487;$216 = $485;$218 = $493;$222 = $484;$227 = $490;$228 = $483;$229 = $492;$237 = $489;$243 = $491;$248 = $486;
  } else {
   $$0$i$i284 = 0;$212 = $488;$214 = $487;$216 = $485;$218 = $493;$222 = $484;$227 = $490;$228 = $483;$229 = $492;$237 = $489;$243 = $491;$248 = $486;
  }
 }
 $211 = ($212&255)>(7);
 $213 = (($214) + -8)|0;
 $spec$select236 = $211 ? $213 : $214;
 $215 = ($216|0)<(1);
 $217 = ($218|0)<(1);
 $or$cond = $215 | $217;
 $$0233$off = (($spec$select236) + -1)|0;
 $219 = ($$0233$off>>>0)>(2);
 $220 = $219 | $or$cond;
 if ($220) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $221 = (($222) + -8)<<24>>24;
 $223 = ($221&255) >>> 3;
 $224 = ($221 << 5)&255;
 $225 = $223 | $224;
 $switch = ($225&255)<(4);
 if (!($switch)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $226 = ($227<<24>>24)!=(0);
 $spec$select237 = $226 ? $229 : $228;
 HEAP32[$1>>2] = $216;
 HEAP32[$2>>2] = $218;
 $$off = (($4) + -1)|0;
 $230 = ($$off>>>0)>(3);
 $231 = $spec$select237 >>> 3;
 $$0221 = $230 ? $231 : $4;
 HEAP32[$3>>2] = $231;
 $232 = Math_imul($218, $216)|0;
 $233 = Math_imul($$0221, $232)|0;
 $234 = (_malloc($233)|0);
 $235 = HEAP32[$6>>2]|0;
 $236 = ($235|0)==(0|0);
 if ($236) {
  $238 = ((($0)) + 20|0);
  $239 = HEAP32[$238>>2]|0;
  $240 = (($239) + ($237)|0);
  HEAP32[$238>>2] = $240;
 } else {
  (_fseek($235,$237,1)|0);
 }
 do {
  if ($226) {
   $241 = HEAP32[$6>>2]|0;
   $242 = ($241|0)==(0|0);
   if ($242) {
    $244 = ((($0)) + 20|0);
    $245 = HEAP32[$244>>2]|0;
    $246 = (($245) + ($243)|0);
    HEAP32[$244>>2] = $246;
   } else {
    (_fseek($241,$243,1)|0);
   }
   $247 = Math_imul($229, $248)|0;
   $249 = (($247|0) / 8)&-1;
   $250 = (_malloc($249)|0);
   $251 = HEAP32[$6>>2]|0;
   $252 = ($251|0)==(0|0);
   if ($252) {
    $253 = ((($0)) + 20|0);
    $254 = HEAP32[$253>>2]|0;
    _memcpy(($250|0),($254|0),($249|0))|0;
    $255 = (($254) + ($249)|0);
    HEAP32[$253>>2] = $255;
    $$0232 = $250;
    break;
   } else {
    (_fread($250,1,$249,$251)|0);
    $$0232 = $250;
    break;
   }
  } else {
   $$0232 = 0;
  }
 } while(0);
 $256 = ($232|0)>(0);
 L120: do {
  if ($256) {
   $257 = (($spec$select237) + -8)|0;
   $258 = $257 >>> 3;
   $259 = $257 << 29;
   $260 = $258 | $259;
   $261 = ($spec$select237|0)==(0);
   $262 = ((($0)) + 20|0);
   $263 = ((($0)) + 24|0);
   $264 = ((($5)) + 1|0);
   $265 = ((($5)) + 2|0);
   $266 = ((($5)) + 3|0);
   $267 = ($spec$select237>>>0)>(8);
   $smax = $267 ? $spec$select237 : 8;
   $268 = (($smax) + -1)|0;
   $269 = $268 >>> 3;
   $270 = (($269) + 1)|0;
   $$0222321 = 1;$$0223320 = 0;$$0225319 = 0;$$0230314 = 0;$$sroa$0$0315 = 0;$$sroa$11$0316 = 0;$$sroa$19$0317 = 0;$$sroa$27$0318 = 0;
   while(1) {
    do {
     if ($211) {
      $271 = ($$0225319|0)==(0);
      if (!($271)) {
       $287 = ($$0223320|0)==(0);
       if ($287) {
        $$1224299 = 0;$$1226297 = $$0225319;
        label = 92;
        break;
       }
       $288 = ($$0222321|0)==(0);
       if ($288) {
        $$1224300 = $$0223320;$$1226298 = $$0225319;$$sroa$0$2 = $$sroa$0$0315;$$sroa$11$2 = $$sroa$11$0316;$$sroa$19$2 = $$sroa$19$0317;$$sroa$27$2 = $$sroa$27$0318;
        break;
       } else {
        $$1224299 = $$0223320;$$1226297 = $$0225319;
        label = 92;
        break;
       }
      }
      $272 = HEAP32[$6>>2]|0;
      $273 = ($272|0)==(0|0);
      if ($273) {
       $277 = HEAP32[$262>>2]|0;
       $278 = HEAP32[$263>>2]|0;
       $279 = ($277>>>0)<($278>>>0);
       if ($279) {
        $280 = ((($277)) + 1|0);
        HEAP32[$262>>2] = $280;
        $281 = HEAP8[$277>>0]|0;
        $282 = $281&255;
        $$0$i$i288 = $282;
       } else {
        $$0$i$i288 = 0;
       }
      } else {
       $274 = (_fgetc($272)|0);
       $275 = ($274|0)==(-1);
       $276 = $275 ? 0 : $274;
       $$0$i$i288 = $276;
      }
      $283 = $$0$i$i288 & 127;
      $284 = (($283) + 1)|0;
      $285 = $$0$i$i288 >>> 7;
      $286 = $285 & 1;
      $$1224299 = $286;$$1226297 = $284;
      label = 92;
     } else {
      $$1224299 = $$0223320;$$1226297 = $$0225319;
      label = 92;
     }
    } while(0);
    L135: do {
     if ((label|0) == 92) {
      label = 0;
      if ($226) {
       $289 = HEAP32[$6>>2]|0;
       $290 = ($289|0)==(0|0);
       if ($290) {
        $294 = HEAP32[$262>>2]|0;
        $295 = HEAP32[$263>>2]|0;
        $296 = ($294>>>0)<($295>>>0);
        if ($296) {
         $297 = ((($294)) + 1|0);
         HEAP32[$262>>2] = $297;
         $298 = HEAP8[$294>>0]|0;
         $299 = $298&255;
         $$0$i$i291 = $299;
        } else {
         $$0$i$i291 = 0;
        }
       } else {
        $291 = (_fgetc($289)|0);
        $292 = ($291|0)==(-1);
        $293 = $292 ? 0 : $291;
        $$0$i$i291 = $293;
       }
       $300 = $$0$i$i291 & 255;
       if (!($261)) {
        $301 = ($248|0)>($300|0);
        $spec$store$select = $301 ? $300 : 0;
        $302 = Math_imul($spec$store$select, $231)|0;
        $scevgep = (($$0232) + ($302)|0);
        _memcpy(($5|0),($scevgep|0),($270|0))|0;
       }
      } else {
       if (!($261)) {
        $$1228309 = 0;
        while(1) {
         $303 = HEAP32[$6>>2]|0;
         $304 = ($303|0)==(0|0);
         if ($304) {
          $308 = HEAP32[$262>>2]|0;
          $309 = HEAP32[$263>>2]|0;
          $310 = ($308>>>0)<($309>>>0);
          if ($310) {
           $311 = ((($308)) + 1|0);
           HEAP32[$262>>2] = $311;
           $312 = HEAP8[$308>>0]|0;
           $313 = $312&255;
           $$0$i$i294 = $313;
          } else {
           $$0$i$i294 = 0;
          }
         } else {
          $305 = (_fgetc($303)|0);
          $306 = ($305|0)==(-1);
          $307 = $306 ? 0 : $305;
          $$0$i$i294 = $307;
         }
         $314 = $$0$i$i294&255;
         $315 = (($5) + ($$1228309)|0);
         HEAP8[$315>>0] = $314;
         $316 = (($$1228309) + 1)|0;
         $exitcond = ($316|0)==($270|0);
         if ($exitcond) {
          break;
         } else {
          $$1228309 = $316;
         }
        }
       }
      }
      switch ($260|0) {
      case 0:  {
       $317 = HEAP8[$5>>0]|0;
       $$1224300 = $$1224299;$$1226298 = $$1226297;$$sroa$0$2 = $317;$$sroa$11$2 = $317;$$sroa$19$2 = $317;$$sroa$27$2 = -1;
       break L135;
       break;
      }
      case 1:  {
       $318 = HEAP8[$5>>0]|0;
       $319 = HEAP8[$264>>0]|0;
       $$1224300 = $$1224299;$$1226298 = $$1226297;$$sroa$0$2 = $318;$$sroa$11$2 = $318;$$sroa$19$2 = $318;$$sroa$27$2 = $319;
       break L135;
       break;
      }
      case 2:  {
       $320 = HEAP8[$265>>0]|0;
       $321 = HEAP8[$264>>0]|0;
       $322 = HEAP8[$5>>0]|0;
       $$1224300 = $$1224299;$$1226298 = $$1226297;$$sroa$0$2 = $320;$$sroa$11$2 = $321;$$sroa$19$2 = $322;$$sroa$27$2 = -1;
       break L135;
       break;
      }
      case 3:  {
       $323 = HEAP8[$265>>0]|0;
       $324 = HEAP8[$264>>0]|0;
       $325 = HEAP8[$5>>0]|0;
       $326 = HEAP8[$266>>0]|0;
       $$1224300 = $$1224299;$$1226298 = $$1226297;$$sroa$0$2 = $323;$$sroa$11$2 = $324;$$sroa$19$2 = $325;$$sroa$27$2 = $326;
       break L135;
       break;
      }
      default: {
       $$1224300 = $$1224299;$$1226298 = $$1226297;$$sroa$0$2 = $$sroa$0$0315;$$sroa$11$2 = $$sroa$11$0316;$$sroa$19$2 = $$sroa$19$0317;$$sroa$27$2 = $$sroa$27$0318;
       break L135;
      }
      }
     }
    } while(0);
    switch ($$0221|0) {
    case 1:  {
     $327 = $$sroa$0$2&255;
     $328 = $$sroa$11$2&255;
     $329 = $$sroa$19$2&255;
     $330 = ($327*77)|0;
     $331 = ($328*150)|0;
     $332 = (($331) + ($330))|0;
     $333 = ($329*29)|0;
     $334 = (($332) + ($333))|0;
     $335 = $334 >>> 8;
     $336 = $335&255;
     $$sink382 = $$0230314;$$sroa$27$2$sink = $336;
     label = 116;
     break;
    }
    case 2:  {
     $337 = $$sroa$0$2&255;
     $338 = $$sroa$11$2&255;
     $339 = $$sroa$19$2&255;
     $340 = ($337*77)|0;
     $341 = ($338*150)|0;
     $342 = (($341) + ($340))|0;
     $343 = ($339*29)|0;
     $344 = (($342) + ($343))|0;
     $345 = $344 >>> 8;
     $346 = $345&255;
     $347 = $$0230314 << 1;
     $348 = (($234) + ($347)|0);
     HEAP8[$348>>0] = $346;
     $349 = $347 | 1;
     $$sink382 = $349;$$sroa$27$2$sink = $$sroa$27$2;
     label = 116;
     break;
    }
    case 3:  {
     $350 = ($$0230314*3)|0;
     $351 = (($234) + ($350)|0);
     HEAP8[$351>>0] = $$sroa$0$2;
     $352 = (($350) + 1)|0;
     $353 = (($234) + ($352)|0);
     HEAP8[$353>>0] = $$sroa$11$2;
     $354 = (($350) + 2)|0;
     $$sink382 = $354;$$sroa$27$2$sink = $$sroa$19$2;
     label = 116;
     break;
    }
    case 4:  {
     $355 = $$0230314 << 2;
     $356 = (($234) + ($355)|0);
     HEAP8[$356>>0] = $$sroa$0$2;
     $357 = $355 | 1;
     $358 = (($234) + ($357)|0);
     HEAP8[$358>>0] = $$sroa$11$2;
     $359 = $355 | 2;
     $360 = (($234) + ($359)|0);
     HEAP8[$360>>0] = $$sroa$19$2;
     $361 = $355 | 3;
     $$sink382 = $361;$$sroa$27$2$sink = $$sroa$27$2;
     label = 116;
     break;
    }
    default: {
    }
    }
    if ((label|0) == 116) {
     label = 0;
     $362 = (($234) + ($$sink382)|0);
     HEAP8[$362>>0] = $$sroa$27$2$sink;
    }
    $363 = (($$1226298) + -1)|0;
    $364 = (($$0230314) + 1)|0;
    $exitcond330 = ($364|0)==($232|0);
    if ($exitcond330) {
     break L120;
    } else {
     $$0222321 = 0;$$0223320 = $$1224300;$$0225319 = $363;$$0230314 = $364;$$sroa$0$0315 = $$sroa$0$2;$$sroa$11$0316 = $$sroa$11$2;$$sroa$19$0317 = $$sroa$19$2;$$sroa$27$0318 = $$sroa$27$2;
    }
   }
  }
 } while(0);
 $365 = $$0$i$i284 & 32;
 $366 = ($365|0)==(0);
 $367 = ($218|0)>(0);
 $or$cond324 = $366 & $367;
 L170: do {
  if ($or$cond324) {
   $368 = Math_imul($$0221, $216)|0;
   $369 = (($218) + -1)|0;
   $370 = ($368|0)>(0);
   if (!($370)) {
    $$2229306 = 0;
    while(1) {
     $385 = (($$2229306) + 1)|0;
     $386 = $385 << 1;
     $387 = ($386|0)<($218|0);
     if ($387) {
      $$2229306 = $385;
     } else {
      break L170;
     }
    }
   }
   $$2229306$us = 0;
   while(1) {
    $371 = Math_imul($368, $$2229306$us)|0;
    $372 = (($369) - ($$2229306$us))|0;
    $373 = Math_imul($368, $372)|0;
    $$0219305$us = $373;$$0220304$us = $371;$$1231303$us = $368;
    while(1) {
     $374 = (($234) + ($$0220304$us)|0);
     $375 = HEAP8[$374>>0]|0;
     $376 = (($234) + ($$0219305$us)|0);
     $377 = HEAP8[$376>>0]|0;
     HEAP8[$374>>0] = $377;
     HEAP8[$376>>0] = $375;
     $378 = (($$0220304$us) + 1)|0;
     $379 = (($$0219305$us) + 1)|0;
     $380 = (($$1231303$us) + -1)|0;
     $381 = ($$1231303$us|0)>(1);
     if ($381) {
      $$0219305$us = $379;$$0220304$us = $378;$$1231303$us = $380;
     } else {
      break;
     }
    }
    $382 = (($$2229306$us) + 1)|0;
    $383 = $382 << 1;
    $384 = ($383|0)<($218|0);
    if ($384) {
     $$2229306$us = $382;
    } else {
     break;
    }
   }
  }
 } while(0);
 $388 = ($$0232|0)==(0|0);
 if ($388) {
  $$0 = $234;
  STACKTOP = sp;return ($$0|0);
 }
 _free($$0232);
 $$0 = $234;
 STACKTOP = sp;return ($$0|0);
}
function _hdr_gettoken($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i14 = 0, $$0$i16 = 0, $$0$i19 = 0, $$0$in = 0, $$0$in$be = 0, $$013 = 0, $$1 = 0, $$pre = 0, $$pre$phi26Z2D = 0, $$pre$phiZ2D = 0, $$pre25 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext$mask = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $8 = ((($0)) + 20|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ((($0)) + 24|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($9>>>0)<($11>>>0);
  if ($12) {
   $13 = ((($9)) + 1|0);
   HEAP32[$8>>2] = $13;
   $14 = HEAP8[$9>>0]|0;
   $15 = $14&255;
   $$0$i19 = $15;$$pre$phi26Z2D = $10;$$pre$phiZ2D = $8;
  } else {
   $$0$i19 = 0;$$pre$phi26Z2D = $10;$$pre$phiZ2D = $8;
  }
 } else {
  $5 = (_fgetc($3)|0);
  $6 = ($5|0)==(-1);
  $7 = $6 ? 0 : $5;
  $$pre = ((($0)) + 20|0);
  $$pre25 = ((($0)) + 24|0);
  $$0$i19 = $7;$$pre$phi26Z2D = $$pre25;$$pre$phiZ2D = $$pre;
 }
 $$0$in = $$0$i19;$$013 = 0;
 while(1) {
  $16 = HEAP32[$2>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $19 = HEAP32[$$pre$phiZ2D>>2]|0;
   $20 = HEAP32[$$pre$phi26Z2D>>2]|0;
   $21 = ($19>>>0)>=($20>>>0);
   $22 = $21&1;
   $$0$i = $22;
  } else {
   $18 = (_feof($16)|0);
   $$0$i = $18;
  }
  $23 = ($$0$i|0)==(0);
  $sext$mask = $$0$in & 255;
  $24 = ($sext$mask|0)!=(10);
  $25 = $24 & $23;
  if (!($25)) {
   $$1 = $$013;
   label = 27;
   break;
  }
  $$0 = $$0$in&255;
  $26 = (($$013) + 1)|0;
  $27 = (($1) + ($$013)|0);
  HEAP8[$27>>0] = $$0;
  $28 = ($26|0)==(1023);
  if ($28) {
   break;
  }
  $48 = HEAP32[$2>>2]|0;
  $49 = ($48|0)==(0|0);
  if ($49) {
   $53 = HEAP32[$$pre$phiZ2D>>2]|0;
   $54 = HEAP32[$$pre$phi26Z2D>>2]|0;
   $55 = ($53>>>0)<($54>>>0);
   if ($55) {
    $56 = ((($53)) + 1|0);
    HEAP32[$$pre$phiZ2D>>2] = $56;
    $57 = HEAP8[$53>>0]|0;
    $58 = $57&255;
    $$0$in$be = $58;
   } else {
    $$0$in$be = 0;
   }
  } else {
   $50 = (_fgetc($48)|0);
   $51 = ($50|0)==(-1);
   $52 = $51 ? 0 : $50;
   $$0$in$be = $52;
  }
  $$0$in = $$0$in$be;$$013 = $26;
 }
 if ((label|0) == 27) {
  $59 = (($1) + ($$1)|0);
  HEAP8[$59>>0] = 0;
  return ($1|0);
 }
 while(1) {
  $29 = HEAP32[$2>>2]|0;
  $30 = ($29|0)==(0|0);
  if ($30) {
   $32 = HEAP32[$$pre$phiZ2D>>2]|0;
   $33 = HEAP32[$$pre$phi26Z2D>>2]|0;
   $34 = ($32>>>0)>=($33>>>0);
   $35 = $34&1;
   $$0$i14 = $35;
  } else {
   $31 = (_feof($29)|0);
   $$0$i14 = $31;
  }
  $36 = ($$0$i14|0)==(0);
  if (!($36)) {
   $$1 = 1023;
   label = 27;
   break;
  }
  $37 = HEAP32[$2>>2]|0;
  $38 = ($37|0)==(0|0);
  if ($38) {
   $41 = HEAP32[$$pre$phiZ2D>>2]|0;
   $42 = HEAP32[$$pre$phi26Z2D>>2]|0;
   $43 = ($41>>>0)<($42>>>0);
   if ($43) {
    $44 = ((($41)) + 1|0);
    HEAP32[$$pre$phiZ2D>>2] = $44;
    $45 = HEAP8[$41>>0]|0;
    $46 = $45&255;
    $$0$i16 = $46;
    label = 21;
   }
  } else {
   $39 = (_fgetc($37)|0);
   $40 = ($39|0)==(-1);
   if (!($40)) {
    $$0$i16 = $39;
    label = 21;
   }
  }
  if ((label|0) == 21) {
   label = 0;
   $47 = ($$0$i16|0)==(10);
   if ($47) {
    $$1 = 1023;
    label = 27;
    break;
   }
  }
 }
 if ((label|0) == 27) {
  $59 = (($1) + ($$1)|0);
  HEAP8[$59>>0] = 0;
  return ($1|0);
 }
 return (0)|0;
}
function _stbi_decode_DXT1_block($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03445 = 0, $$046 = 0, $$sink = 0, $$sink47 = 0, $$sink48 = 0, $$sink49 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3&255;
 $5 = ((($1)) + 1|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = $7 << 8;
 $9 = $8 | $4;
 $10 = ((($1)) + 2|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = ((($1)) + 3|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = $15 << 8;
 $17 = $16 | $12;
 $18 = $7 >>> 3;
 $19 = ($18*255)|0;
 $20 = (($19) + 16)|0;
 $21 = $20 >>> 5;
 $22 = (($21) + ($20))|0;
 $23 = $22 >>> 5;
 $24 = $9 >>> 5;
 $25 = $24 & 63;
 $26 = ($25*255)|0;
 $27 = (($26) + 32)|0;
 $28 = $27 >>> 6;
 $29 = (($28) + ($27))|0;
 $30 = $29 >>> 6;
 $31 = $4 & 31;
 $32 = ($31*255)|0;
 $33 = (($32) + 16)|0;
 $34 = $33 >>> 5;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 5;
 $37 = $23&255;
 HEAP8[$2>>0] = $37;
 $38 = $30&255;
 $39 = ((($2)) + 1|0);
 HEAP8[$39>>0] = $38;
 $40 = $36&255;
 $41 = ((($2)) + 2|0);
 HEAP8[$41>>0] = $40;
 $42 = ((($2)) + 3|0);
 HEAP8[$42>>0] = -1;
 $43 = $15 >>> 3;
 $44 = ($43*255)|0;
 $45 = (($44) + 16)|0;
 $46 = $45 >>> 5;
 $47 = (($46) + ($45))|0;
 $48 = $47 >>> 5;
 $49 = $17 >>> 5;
 $50 = $49 & 63;
 $51 = ($50*255)|0;
 $52 = (($51) + 32)|0;
 $53 = $52 >>> 6;
 $54 = (($53) + ($52))|0;
 $55 = $54 >>> 6;
 $56 = $12 & 31;
 $57 = ($56*255)|0;
 $58 = (($57) + 16)|0;
 $59 = $58 >>> 5;
 $60 = (($59) + ($58))|0;
 $61 = $60 >>> 5;
 $62 = $48&255;
 $63 = ((($2)) + 4|0);
 HEAP8[$63>>0] = $62;
 $64 = $55&255;
 $65 = ((($2)) + 5|0);
 HEAP8[$65>>0] = $64;
 $66 = $61&255;
 $67 = ((($2)) + 6|0);
 HEAP8[$67>>0] = $66;
 $68 = ((($2)) + 7|0);
 HEAP8[$68>>0] = -1;
 $69 = ($9>>>0)>($17>>>0);
 $70 = $23 & 255;
 if ($69) {
  $71 = $70 << 1;
  $72 = $48 & 255;
  $73 = (($72) + ($71))|0;
  $74 = (($73>>>0) / 3)&-1;
  $75 = $74&255;
  $76 = ((($2)) + 8|0);
  HEAP8[$76>>0] = $75;
  $77 = $30 & 255;
  $78 = $77 << 1;
  $79 = $55 & 255;
  $80 = (($79) + ($78))|0;
  $81 = (($80>>>0) / 3)&-1;
  $82 = $81&255;
  $83 = ((($2)) + 9|0);
  HEAP8[$83>>0] = $82;
  $84 = $36 & 255;
  $85 = $84 << 1;
  $86 = $61 & 255;
  $87 = (($86) + ($85))|0;
  $88 = (($87>>>0) / 3)&-1;
  $89 = $88&255;
  $90 = ((($2)) + 10|0);
  HEAP8[$90>>0] = $89;
  $91 = $72 << 1;
  $92 = (($91) + ($70))|0;
  $93 = (($92>>>0) / 3)&-1;
  $94 = $93&255;
  $95 = $79 << 1;
  $96 = (($95) + ($77))|0;
  $97 = (($96>>>0) / 3)&-1;
  $98 = $97&255;
  $99 = $86 << 1;
  $100 = (($99) + ($84))|0;
  $101 = (($100>>>0) / 3)&-1;
  $102 = $101&255;
  $$sink = -1;$$sink47 = $102;$$sink48 = $98;$$sink49 = $94;
 } else {
  $103 = $48 & 255;
  $104 = (($103) + ($70))|0;
  $105 = $104 >>> 1;
  $106 = $105&255;
  $107 = ((($2)) + 8|0);
  HEAP8[$107>>0] = $106;
  $108 = $30 & 255;
  $109 = $55 & 255;
  $110 = (($109) + ($108))|0;
  $111 = $110 >>> 1;
  $112 = $111&255;
  $113 = ((($2)) + 9|0);
  HEAP8[$113>>0] = $112;
  $114 = $36 & 255;
  $115 = $61 & 255;
  $116 = (($115) + ($114))|0;
  $117 = $116 >>> 1;
  $118 = $117&255;
  $119 = ((($2)) + 10|0);
  HEAP8[$119>>0] = $118;
  $$sink = 0;$$sink47 = 0;$$sink48 = 0;$$sink49 = 0;
 }
 $120 = ((($2)) + 11|0);
 HEAP8[$120>>0] = -1;
 $121 = ((($2)) + 12|0);
 HEAP8[$121>>0] = $$sink49;
 $122 = ((($2)) + 13|0);
 HEAP8[$122>>0] = $$sink48;
 $123 = ((($2)) + 14|0);
 HEAP8[$123>>0] = $$sink47;
 $124 = ((($2)) + 15|0);
 HEAP8[$124>>0] = $$sink;
 $$03445 = 0;$$046 = 32;
 while(1) {
  $125 = $$046 >>> 3;
  $126 = (($1) + ($125)|0);
  $127 = HEAP8[$126>>0]|0;
  $128 = $127&255;
  $129 = $$046 & 6;
  $130 = $128 >>> $129;
  $131 = $130 << 2;
  $132 = $131 & 12;
  $133 = (($$046) + 2)|0;
  $134 = (($2) + ($132)|0);
  $135 = HEAP8[$134>>0]|0;
  $136 = (($0) + ($$03445)|0);
  HEAP8[$136>>0] = $135;
  $137 = $132 | 1;
  $138 = (($2) + ($137)|0);
  $139 = HEAP8[$138>>0]|0;
  $140 = $$03445 | 1;
  $141 = (($0) + ($140)|0);
  HEAP8[$141>>0] = $139;
  $142 = $132 | 2;
  $143 = (($2) + ($142)|0);
  $144 = HEAP8[$143>>0]|0;
  $145 = $$03445 | 2;
  $146 = (($0) + ($145)|0);
  HEAP8[$146>>0] = $144;
  $147 = $132 | 3;
  $148 = (($2) + ($147)|0);
  $149 = HEAP8[$148>>0]|0;
  $150 = $$03445 | 3;
  $151 = (($0) + ($150)|0);
  HEAP8[$151>>0] = $149;
  $152 = (($$03445) + 4)|0;
  $153 = ($152>>>0)<(64);
  if ($153) {
   $$03445 = $152;$$046 = $133;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _stbi_decode_DXT23_alpha_block($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0;
 var $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 & 15;
 $4 = $3&255;
 $5 = ($4*255)|0;
 $6 = (($5) + 8)|0;
 $7 = $6 >>> 4;
 $8 = (($7) + ($6))|0;
 $9 = $8 >>> 4;
 $10 = $9&255;
 $11 = ((($0)) + 3|0);
 HEAP8[$11>>0] = $10;
 $12 = HEAP8[$1>>0]|0;
 $13 = $12&255;
 $14 = $13 >>> 4;
 $15 = ($14*255)|0;
 $16 = (($15) + 8)|0;
 $17 = $16 >>> 4;
 $18 = (($17) + ($16))|0;
 $19 = $18 >>> 4;
 $20 = $19&255;
 $21 = ((($0)) + 7|0);
 HEAP8[$21>>0] = $20;
 $22 = ((($1)) + 1|0);
 $23 = HEAP8[$22>>0]|0;
 $24 = $23 & 15;
 $25 = $24&255;
 $26 = ($25*255)|0;
 $27 = (($26) + 8)|0;
 $28 = $27 >>> 4;
 $29 = (($28) + ($27))|0;
 $30 = $29 >>> 4;
 $31 = $30&255;
 $32 = ((($0)) + 11|0);
 HEAP8[$32>>0] = $31;
 $33 = HEAP8[$22>>0]|0;
 $34 = $33&255;
 $35 = $34 >>> 4;
 $36 = ($35*255)|0;
 $37 = (($36) + 8)|0;
 $38 = $37 >>> 4;
 $39 = (($38) + ($37))|0;
 $40 = $39 >>> 4;
 $41 = $40&255;
 $42 = ((($0)) + 15|0);
 HEAP8[$42>>0] = $41;
 $43 = ((($1)) + 2|0);
 $44 = HEAP8[$43>>0]|0;
 $45 = $44 & 15;
 $46 = $45&255;
 $47 = ($46*255)|0;
 $48 = (($47) + 8)|0;
 $49 = $48 >>> 4;
 $50 = (($49) + ($48))|0;
 $51 = $50 >>> 4;
 $52 = $51&255;
 $53 = ((($0)) + 19|0);
 HEAP8[$53>>0] = $52;
 $54 = HEAP8[$43>>0]|0;
 $55 = $54&255;
 $56 = $55 >>> 4;
 $57 = ($56*255)|0;
 $58 = (($57) + 8)|0;
 $59 = $58 >>> 4;
 $60 = (($59) + ($58))|0;
 $61 = $60 >>> 4;
 $62 = $61&255;
 $63 = ((($0)) + 23|0);
 HEAP8[$63>>0] = $62;
 $64 = ((($1)) + 3|0);
 $65 = HEAP8[$64>>0]|0;
 $66 = $65 & 15;
 $67 = $66&255;
 $68 = ($67*255)|0;
 $69 = (($68) + 8)|0;
 $70 = $69 >>> 4;
 $71 = (($70) + ($69))|0;
 $72 = $71 >>> 4;
 $73 = $72&255;
 $74 = ((($0)) + 27|0);
 HEAP8[$74>>0] = $73;
 $75 = HEAP8[$64>>0]|0;
 $76 = $75&255;
 $77 = $76 >>> 4;
 $78 = ($77*255)|0;
 $79 = (($78) + 8)|0;
 $80 = $79 >>> 4;
 $81 = (($80) + ($79))|0;
 $82 = $81 >>> 4;
 $83 = $82&255;
 $84 = ((($0)) + 31|0);
 HEAP8[$84>>0] = $83;
 $85 = ((($1)) + 4|0);
 $86 = HEAP8[$85>>0]|0;
 $87 = $86 & 15;
 $88 = $87&255;
 $89 = ($88*255)|0;
 $90 = (($89) + 8)|0;
 $91 = $90 >>> 4;
 $92 = (($91) + ($90))|0;
 $93 = $92 >>> 4;
 $94 = $93&255;
 $95 = ((($0)) + 35|0);
 HEAP8[$95>>0] = $94;
 $96 = HEAP8[$85>>0]|0;
 $97 = $96&255;
 $98 = $97 >>> 4;
 $99 = ($98*255)|0;
 $100 = (($99) + 8)|0;
 $101 = $100 >>> 4;
 $102 = (($101) + ($100))|0;
 $103 = $102 >>> 4;
 $104 = $103&255;
 $105 = ((($0)) + 39|0);
 HEAP8[$105>>0] = $104;
 $106 = ((($1)) + 5|0);
 $107 = HEAP8[$106>>0]|0;
 $108 = $107 & 15;
 $109 = $108&255;
 $110 = ($109*255)|0;
 $111 = (($110) + 8)|0;
 $112 = $111 >>> 4;
 $113 = (($112) + ($111))|0;
 $114 = $113 >>> 4;
 $115 = $114&255;
 $116 = ((($0)) + 43|0);
 HEAP8[$116>>0] = $115;
 $117 = HEAP8[$106>>0]|0;
 $118 = $117&255;
 $119 = $118 >>> 4;
 $120 = ($119*255)|0;
 $121 = (($120) + 8)|0;
 $122 = $121 >>> 4;
 $123 = (($122) + ($121))|0;
 $124 = $123 >>> 4;
 $125 = $124&255;
 $126 = ((($0)) + 47|0);
 HEAP8[$126>>0] = $125;
 $127 = ((($1)) + 6|0);
 $128 = HEAP8[$127>>0]|0;
 $129 = $128 & 15;
 $130 = $129&255;
 $131 = ($130*255)|0;
 $132 = (($131) + 8)|0;
 $133 = $132 >>> 4;
 $134 = (($133) + ($132))|0;
 $135 = $134 >>> 4;
 $136 = $135&255;
 $137 = ((($0)) + 51|0);
 HEAP8[$137>>0] = $136;
 $138 = HEAP8[$127>>0]|0;
 $139 = $138&255;
 $140 = $139 >>> 4;
 $141 = ($140*255)|0;
 $142 = (($141) + 8)|0;
 $143 = $142 >>> 4;
 $144 = (($143) + ($142))|0;
 $145 = $144 >>> 4;
 $146 = $145&255;
 $147 = ((($0)) + 55|0);
 HEAP8[$147>>0] = $146;
 $148 = ((($1)) + 7|0);
 $149 = HEAP8[$148>>0]|0;
 $150 = $149 & 15;
 $151 = $150&255;
 $152 = ($151*255)|0;
 $153 = (($152) + 8)|0;
 $154 = $153 >>> 4;
 $155 = (($154) + ($153))|0;
 $156 = $155 >>> 4;
 $157 = $156&255;
 $158 = ((($0)) + 59|0);
 HEAP8[$158>>0] = $157;
 $159 = HEAP8[$148>>0]|0;
 $160 = $159&255;
 $161 = $160 >>> 4;
 $162 = ($161*255)|0;
 $163 = (($162) + 8)|0;
 $164 = $163 >>> 4;
 $165 = (($164) + ($163))|0;
 $166 = $165 >>> 4;
 $167 = $166&255;
 $168 = ((($0)) + 63|0);
 HEAP8[$168>>0] = $167;
 return;
}
function _stbi_decode_DXT_color_block($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0;
 var $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0;
 var $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0;
 var $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0;
 var $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0;
 var $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0;
 var $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $mulconv = 0, $mulconv42 = 0, $mulconv43 = 0, $mulconv44 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3&255;
 $5 = ((($1)) + 1|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6&255;
 $8 = $7 << 8;
 $9 = $8 | $4;
 $10 = ((($1)) + 2|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11&255;
 $13 = ((($1)) + 3|0);
 $14 = HEAP8[$13>>0]|0;
 $15 = $14&255;
 $16 = $15 << 8;
 $17 = $16 | $12;
 $18 = $7 >>> 3;
 $19 = ($18*255)|0;
 $20 = (($19) + 16)|0;
 $21 = $20 >>> 5;
 $22 = (($21) + ($20))|0;
 $23 = $22 >>> 5;
 $24 = $9 >>> 5;
 $25 = $24 & 63;
 $26 = ($25*255)|0;
 $27 = (($26) + 32)|0;
 $28 = $27 >>> 6;
 $29 = (($28) + ($27))|0;
 $30 = $29 >>> 6;
 $31 = $4 & 31;
 $32 = ($31*255)|0;
 $33 = (($32) + 16)|0;
 $34 = $33 >>> 5;
 $35 = (($34) + ($33))|0;
 $36 = $35 >>> 5;
 $37 = $23&255;
 HEAP8[$2>>0] = $37;
 $38 = $30&255;
 $39 = ((($2)) + 1|0);
 HEAP8[$39>>0] = $38;
 $40 = $36&255;
 $41 = ((($2)) + 2|0);
 HEAP8[$41>>0] = $40;
 $42 = $15 >>> 3;
 $43 = ($42*255)|0;
 $44 = (($43) + 16)|0;
 $45 = $44 >>> 5;
 $46 = (($45) + ($44))|0;
 $47 = $46 >>> 5;
 $48 = $17 >>> 5;
 $49 = $48 & 63;
 $50 = ($49*255)|0;
 $51 = (($50) + 32)|0;
 $52 = $51 >>> 6;
 $53 = (($52) + ($51))|0;
 $54 = $53 >>> 6;
 $55 = $12 & 31;
 $56 = ($55*255)|0;
 $57 = (($56) + 16)|0;
 $58 = $57 >>> 5;
 $59 = (($58) + ($57))|0;
 $60 = $59 >>> 5;
 $61 = $47&255;
 $62 = ((($2)) + 3|0);
 HEAP8[$62>>0] = $61;
 $63 = $54&255;
 $64 = ((($2)) + 4|0);
 HEAP8[$64>>0] = $63;
 $65 = $60&255;
 $66 = ((($2)) + 5|0);
 HEAP8[$66>>0] = $65;
 $67 = $23 & 255;
 $68 = $67 << 1;
 $69 = $47 & 255;
 $70 = (($69) + ($68))|0;
 $71 = (($70>>>0) / 3)&-1;
 $72 = $71&255;
 $73 = ((($2)) + 6|0);
 HEAP8[$73>>0] = $72;
 $74 = $30 & 255;
 $75 = $74 << 1;
 $76 = $54 & 255;
 $77 = (($76) + ($75))|0;
 $78 = (($77>>>0) / 3)&-1;
 $79 = $78&255;
 $80 = ((($2)) + 7|0);
 HEAP8[$80>>0] = $79;
 $81 = $36 & 255;
 $82 = $81 << 1;
 $83 = $60 & 255;
 $84 = (($83) + ($82))|0;
 $85 = (($84>>>0) / 3)&-1;
 $86 = $85&255;
 $87 = ((($2)) + 8|0);
 HEAP8[$87>>0] = $86;
 $88 = $69 << 1;
 $89 = (($88) + ($67))|0;
 $90 = (($89>>>0) / 3)&-1;
 $91 = $90&255;
 $92 = ((($2)) + 9|0);
 HEAP8[$92>>0] = $91;
 $93 = $76 << 1;
 $94 = (($93) + ($74))|0;
 $95 = (($94>>>0) / 3)&-1;
 $96 = $95&255;
 $97 = ((($2)) + 10|0);
 HEAP8[$97>>0] = $96;
 $98 = $83 << 1;
 $99 = (($98) + ($81))|0;
 $100 = (($99>>>0) / 3)&-1;
 $101 = $100&255;
 $102 = ((($2)) + 11|0);
 HEAP8[$102>>0] = $101;
 $103 = ((($1)) + 4|0);
 $104 = HEAP8[$103>>0]|0;
 $105 = $104 & 3;
 $mulconv = ($105*3)|0;
 $106 = $mulconv&255;
 $107 = (($2) + ($106)|0);
 $108 = HEAP8[$107>>0]|0;
 HEAP8[$0>>0] = $108;
 $109 = (($106) + 1)|0;
 $110 = (($2) + ($109)|0);
 $111 = HEAP8[$110>>0]|0;
 $112 = ((($0)) + 1|0);
 HEAP8[$112>>0] = $111;
 $113 = (($106) + 2)|0;
 $114 = (($2) + ($113)|0);
 $115 = HEAP8[$114>>0]|0;
 $116 = ((($0)) + 2|0);
 HEAP8[$116>>0] = $115;
 $117 = HEAP8[$103>>0]|0;
 $118 = $117&255;
 $119 = $118 >>> 2;
 $120 = $119 & 3;
 $121 = ($120*3)|0;
 $122 = (($2) + ($121)|0);
 $123 = HEAP8[$122>>0]|0;
 $124 = ((($0)) + 4|0);
 HEAP8[$124>>0] = $123;
 $125 = (($121) + 1)|0;
 $126 = (($2) + ($125)|0);
 $127 = HEAP8[$126>>0]|0;
 $128 = ((($0)) + 5|0);
 HEAP8[$128>>0] = $127;
 $129 = (($121) + 2)|0;
 $130 = (($2) + ($129)|0);
 $131 = HEAP8[$130>>0]|0;
 $132 = ((($0)) + 6|0);
 HEAP8[$132>>0] = $131;
 $133 = HEAP8[$103>>0]|0;
 $134 = $133&255;
 $135 = $134 >>> 4;
 $136 = $135 & 3;
 $137 = ($136*3)|0;
 $138 = (($2) + ($137)|0);
 $139 = HEAP8[$138>>0]|0;
 $140 = ((($0)) + 8|0);
 HEAP8[$140>>0] = $139;
 $141 = (($137) + 1)|0;
 $142 = (($2) + ($141)|0);
 $143 = HEAP8[$142>>0]|0;
 $144 = ((($0)) + 9|0);
 HEAP8[$144>>0] = $143;
 $145 = (($137) + 2)|0;
 $146 = (($2) + ($145)|0);
 $147 = HEAP8[$146>>0]|0;
 $148 = ((($0)) + 10|0);
 HEAP8[$148>>0] = $147;
 $149 = HEAP8[$103>>0]|0;
 $150 = $149&255;
 $151 = $150 >>> 6;
 $152 = ($151*3)|0;
 $153 = (($2) + ($152)|0);
 $154 = HEAP8[$153>>0]|0;
 $155 = ((($0)) + 12|0);
 HEAP8[$155>>0] = $154;
 $156 = (($152) + 1)|0;
 $157 = (($2) + ($156)|0);
 $158 = HEAP8[$157>>0]|0;
 $159 = ((($0)) + 13|0);
 HEAP8[$159>>0] = $158;
 $160 = (($152) + 2)|0;
 $161 = (($2) + ($160)|0);
 $162 = HEAP8[$161>>0]|0;
 $163 = ((($0)) + 14|0);
 HEAP8[$163>>0] = $162;
 $164 = ((($1)) + 5|0);
 $165 = HEAP8[$164>>0]|0;
 $166 = $165 & 3;
 $mulconv42 = ($166*3)|0;
 $167 = $mulconv42&255;
 $168 = (($2) + ($167)|0);
 $169 = HEAP8[$168>>0]|0;
 $170 = ((($0)) + 16|0);
 HEAP8[$170>>0] = $169;
 $171 = (($167) + 1)|0;
 $172 = (($2) + ($171)|0);
 $173 = HEAP8[$172>>0]|0;
 $174 = ((($0)) + 17|0);
 HEAP8[$174>>0] = $173;
 $175 = (($167) + 2)|0;
 $176 = (($2) + ($175)|0);
 $177 = HEAP8[$176>>0]|0;
 $178 = ((($0)) + 18|0);
 HEAP8[$178>>0] = $177;
 $179 = HEAP8[$164>>0]|0;
 $180 = $179&255;
 $181 = $180 >>> 2;
 $182 = $181 & 3;
 $183 = ($182*3)|0;
 $184 = (($2) + ($183)|0);
 $185 = HEAP8[$184>>0]|0;
 $186 = ((($0)) + 20|0);
 HEAP8[$186>>0] = $185;
 $187 = (($183) + 1)|0;
 $188 = (($2) + ($187)|0);
 $189 = HEAP8[$188>>0]|0;
 $190 = ((($0)) + 21|0);
 HEAP8[$190>>0] = $189;
 $191 = (($183) + 2)|0;
 $192 = (($2) + ($191)|0);
 $193 = HEAP8[$192>>0]|0;
 $194 = ((($0)) + 22|0);
 HEAP8[$194>>0] = $193;
 $195 = HEAP8[$164>>0]|0;
 $196 = $195&255;
 $197 = $196 >>> 4;
 $198 = $197 & 3;
 $199 = ($198*3)|0;
 $200 = (($2) + ($199)|0);
 $201 = HEAP8[$200>>0]|0;
 $202 = ((($0)) + 24|0);
 HEAP8[$202>>0] = $201;
 $203 = (($199) + 1)|0;
 $204 = (($2) + ($203)|0);
 $205 = HEAP8[$204>>0]|0;
 $206 = ((($0)) + 25|0);
 HEAP8[$206>>0] = $205;
 $207 = (($199) + 2)|0;
 $208 = (($2) + ($207)|0);
 $209 = HEAP8[$208>>0]|0;
 $210 = ((($0)) + 26|0);
 HEAP8[$210>>0] = $209;
 $211 = HEAP8[$164>>0]|0;
 $212 = $211&255;
 $213 = $212 >>> 6;
 $214 = ($213*3)|0;
 $215 = (($2) + ($214)|0);
 $216 = HEAP8[$215>>0]|0;
 $217 = ((($0)) + 28|0);
 HEAP8[$217>>0] = $216;
 $218 = (($214) + 1)|0;
 $219 = (($2) + ($218)|0);
 $220 = HEAP8[$219>>0]|0;
 $221 = ((($0)) + 29|0);
 HEAP8[$221>>0] = $220;
 $222 = (($214) + 2)|0;
 $223 = (($2) + ($222)|0);
 $224 = HEAP8[$223>>0]|0;
 $225 = ((($0)) + 30|0);
 HEAP8[$225>>0] = $224;
 $226 = ((($1)) + 6|0);
 $227 = HEAP8[$226>>0]|0;
 $228 = $227 & 3;
 $mulconv43 = ($228*3)|0;
 $229 = $mulconv43&255;
 $230 = (($2) + ($229)|0);
 $231 = HEAP8[$230>>0]|0;
 $232 = ((($0)) + 32|0);
 HEAP8[$232>>0] = $231;
 $233 = (($229) + 1)|0;
 $234 = (($2) + ($233)|0);
 $235 = HEAP8[$234>>0]|0;
 $236 = ((($0)) + 33|0);
 HEAP8[$236>>0] = $235;
 $237 = (($229) + 2)|0;
 $238 = (($2) + ($237)|0);
 $239 = HEAP8[$238>>0]|0;
 $240 = ((($0)) + 34|0);
 HEAP8[$240>>0] = $239;
 $241 = HEAP8[$226>>0]|0;
 $242 = $241&255;
 $243 = $242 >>> 2;
 $244 = $243 & 3;
 $245 = ($244*3)|0;
 $246 = (($2) + ($245)|0);
 $247 = HEAP8[$246>>0]|0;
 $248 = ((($0)) + 36|0);
 HEAP8[$248>>0] = $247;
 $249 = (($245) + 1)|0;
 $250 = (($2) + ($249)|0);
 $251 = HEAP8[$250>>0]|0;
 $252 = ((($0)) + 37|0);
 HEAP8[$252>>0] = $251;
 $253 = (($245) + 2)|0;
 $254 = (($2) + ($253)|0);
 $255 = HEAP8[$254>>0]|0;
 $256 = ((($0)) + 38|0);
 HEAP8[$256>>0] = $255;
 $257 = HEAP8[$226>>0]|0;
 $258 = $257&255;
 $259 = $258 >>> 4;
 $260 = $259 & 3;
 $261 = ($260*3)|0;
 $262 = (($2) + ($261)|0);
 $263 = HEAP8[$262>>0]|0;
 $264 = ((($0)) + 40|0);
 HEAP8[$264>>0] = $263;
 $265 = (($261) + 1)|0;
 $266 = (($2) + ($265)|0);
 $267 = HEAP8[$266>>0]|0;
 $268 = ((($0)) + 41|0);
 HEAP8[$268>>0] = $267;
 $269 = (($261) + 2)|0;
 $270 = (($2) + ($269)|0);
 $271 = HEAP8[$270>>0]|0;
 $272 = ((($0)) + 42|0);
 HEAP8[$272>>0] = $271;
 $273 = HEAP8[$226>>0]|0;
 $274 = $273&255;
 $275 = $274 >>> 6;
 $276 = ($275*3)|0;
 $277 = (($2) + ($276)|0);
 $278 = HEAP8[$277>>0]|0;
 $279 = ((($0)) + 44|0);
 HEAP8[$279>>0] = $278;
 $280 = (($276) + 1)|0;
 $281 = (($2) + ($280)|0);
 $282 = HEAP8[$281>>0]|0;
 $283 = ((($0)) + 45|0);
 HEAP8[$283>>0] = $282;
 $284 = (($276) + 2)|0;
 $285 = (($2) + ($284)|0);
 $286 = HEAP8[$285>>0]|0;
 $287 = ((($0)) + 46|0);
 HEAP8[$287>>0] = $286;
 $288 = ((($1)) + 7|0);
 $289 = HEAP8[$288>>0]|0;
 $290 = $289 & 3;
 $mulconv44 = ($290*3)|0;
 $291 = $mulconv44&255;
 $292 = (($2) + ($291)|0);
 $293 = HEAP8[$292>>0]|0;
 $294 = ((($0)) + 48|0);
 HEAP8[$294>>0] = $293;
 $295 = (($291) + 1)|0;
 $296 = (($2) + ($295)|0);
 $297 = HEAP8[$296>>0]|0;
 $298 = ((($0)) + 49|0);
 HEAP8[$298>>0] = $297;
 $299 = (($291) + 2)|0;
 $300 = (($2) + ($299)|0);
 $301 = HEAP8[$300>>0]|0;
 $302 = ((($0)) + 50|0);
 HEAP8[$302>>0] = $301;
 $303 = HEAP8[$288>>0]|0;
 $304 = $303&255;
 $305 = $304 >>> 2;
 $306 = $305 & 3;
 $307 = ($306*3)|0;
 $308 = (($2) + ($307)|0);
 $309 = HEAP8[$308>>0]|0;
 $310 = ((($0)) + 52|0);
 HEAP8[$310>>0] = $309;
 $311 = (($307) + 1)|0;
 $312 = (($2) + ($311)|0);
 $313 = HEAP8[$312>>0]|0;
 $314 = ((($0)) + 53|0);
 HEAP8[$314>>0] = $313;
 $315 = (($307) + 2)|0;
 $316 = (($2) + ($315)|0);
 $317 = HEAP8[$316>>0]|0;
 $318 = ((($0)) + 54|0);
 HEAP8[$318>>0] = $317;
 $319 = HEAP8[$288>>0]|0;
 $320 = $319&255;
 $321 = $320 >>> 4;
 $322 = $321 & 3;
 $323 = ($322*3)|0;
 $324 = (($2) + ($323)|0);
 $325 = HEAP8[$324>>0]|0;
 $326 = ((($0)) + 56|0);
 HEAP8[$326>>0] = $325;
 $327 = (($323) + 1)|0;
 $328 = (($2) + ($327)|0);
 $329 = HEAP8[$328>>0]|0;
 $330 = ((($0)) + 57|0);
 HEAP8[$330>>0] = $329;
 $331 = (($323) + 2)|0;
 $332 = (($2) + ($331)|0);
 $333 = HEAP8[$332>>0]|0;
 $334 = ((($0)) + 58|0);
 HEAP8[$334>>0] = $333;
 $335 = HEAP8[$288>>0]|0;
 $336 = $335&255;
 $337 = $336 >>> 6;
 $338 = ($337*3)|0;
 $339 = (($2) + ($338)|0);
 $340 = HEAP8[$339>>0]|0;
 $341 = ((($0)) + 60|0);
 HEAP8[$341>>0] = $340;
 $342 = (($338) + 1)|0;
 $343 = (($2) + ($342)|0);
 $344 = HEAP8[$343>>0]|0;
 $345 = ((($0)) + 61|0);
 HEAP8[$345>>0] = $344;
 $346 = (($338) + 2)|0;
 $347 = (($2) + ($346)|0);
 $348 = HEAP8[$347>>0]|0;
 $349 = ((($0)) + 62|0);
 HEAP8[$349>>0] = $348;
 STACKTOP = sp;return;
}
function _stbi_decode_DXT45_alpha_block($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03132 = 0, $$033 = 0, $$sink = 0, $$sink34 = 0, $$sink35 = 0, $$sink35$in = 0, $$sink36 = 0, $$sink36$in = 0, $$sink37 = 0, $$sink37$in = 0, $$sink38 = 0, $$sink38$in = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 HEAP8[$2>>0] = $3;
 $4 = ((($1)) + 1|0);
 $5 = HEAP8[$4>>0]|0;
 $6 = ((($2)) + 1|0);
 HEAP8[$6>>0] = $5;
 $7 = $3&255;
 $8 = $5&255;
 $9 = ($3&255)>($5&255);
 if ($9) {
  $10 = ($7*6)|0;
  $11 = (($10) + ($8))|0;
  $12 = (($11>>>0) / 7)&-1;
  $13 = ($7*5)|0;
  $14 = $8 << 1;
  $15 = (($14) + ($13))|0;
  $16 = (($15>>>0) / 7)&-1;
  $17 = $7 << 2;
  $18 = ($8*3)|0;
  $19 = (($18) + ($17))|0;
  $20 = (($19>>>0) / 7)&-1;
  $21 = ($7*3)|0;
  $22 = $8 << 2;
  $23 = (($22) + ($21))|0;
  $24 = (($23>>>0) / 7)&-1;
  $25 = $7 << 1;
  $26 = ($8*5)|0;
  $27 = (($26) + ($25))|0;
  $28 = (($27>>>0) / 7)&-1;
  $29 = $28&255;
  $30 = ($8*6)|0;
  $31 = (($30) + ($7))|0;
  $32 = (($31>>>0) / 7)&-1;
  $33 = $32&255;
  $$sink = $33;$$sink34 = $29;$$sink35$in = $24;$$sink36$in = $20;$$sink37$in = $16;$$sink38$in = $12;
 } else {
  $34 = $7 << 2;
  $35 = (($34) + ($8))|0;
  $36 = (($35>>>0) / 5)&-1;
  $37 = ($7*3)|0;
  $38 = $8 << 1;
  $39 = (($38) + ($37))|0;
  $40 = (($39>>>0) / 5)&-1;
  $41 = $7 << 1;
  $42 = ($8*3)|0;
  $43 = (($42) + ($41))|0;
  $44 = (($43>>>0) / 5)&-1;
  $45 = $8 << 2;
  $46 = (($45) + ($7))|0;
  $47 = (($46>>>0) / 5)&-1;
  $$sink = -1;$$sink34 = 0;$$sink35$in = $47;$$sink36$in = $44;$$sink37$in = $40;$$sink38$in = $36;
 }
 $$sink35 = $$sink35$in&255;
 $$sink36 = $$sink36$in&255;
 $$sink37 = $$sink37$in&255;
 $$sink38 = $$sink38$in&255;
 $48 = ((($2)) + 2|0);
 HEAP8[$48>>0] = $$sink38;
 $49 = ((($2)) + 3|0);
 HEAP8[$49>>0] = $$sink37;
 $50 = ((($2)) + 4|0);
 HEAP8[$50>>0] = $$sink36;
 $51 = ((($2)) + 5|0);
 HEAP8[$51>>0] = $$sink35;
 $52 = ((($2)) + 6|0);
 HEAP8[$52>>0] = $$sink34;
 $53 = ((($2)) + 7|0);
 HEAP8[$53>>0] = $$sink;
 $$03132 = 16;$$033 = 3;
 while(1) {
  $54 = $$03132 >>> 3;
  $55 = (($1) + ($54)|0);
  $56 = HEAP8[$55>>0]|0;
  $57 = $56&255;
  $58 = $$03132 & 7;
  $59 = $57 >>> $58;
  $60 = $59 & 1;
  $61 = (($$03132) + 1)|0;
  $62 = $61 >>> 3;
  $63 = (($1) + ($62)|0);
  $64 = HEAP8[$63>>0]|0;
  $65 = $64&255;
  $66 = $61 & 7;
  $67 = $65 >>> $66;
  $68 = $67 << 1;
  $69 = $68 & 2;
  $70 = $69 | $60;
  $71 = (($$03132) + 2)|0;
  $72 = $71 >>> 3;
  $73 = (($1) + ($72)|0);
  $74 = HEAP8[$73>>0]|0;
  $75 = $74&255;
  $76 = $71 & 7;
  $77 = $75 >>> $76;
  $78 = $77 << 2;
  $79 = $78 & 4;
  $80 = $70 | $79;
  $81 = (($$03132) + 3)|0;
  $82 = (($2) + ($80)|0);
  $83 = HEAP8[$82>>0]|0;
  $84 = (($0) + ($$033)|0);
  HEAP8[$84>>0] = $83;
  $85 = (($$033) + 4)|0;
  $86 = ($85>>>0)<(64);
  if ($86) {
   $$03132 = $81;$$033 = $85;
  } else {
   break;
  }
 }
 STACKTOP = sp;return;
}
function _convert_format($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0151243 = 0, $$0163 = 0, $$0164247 = 0, $$0165 = 0, $$0165242 = 0, $$0165245 = 0, $$0244 = 0, $$10161193 = 0, $$10175 = 0, $$10175195 = 0, $$10194 = 0, $$11162189 = 0, $$11176 = 0, $$11176191 = 0, $$11190 = 0, $$1152238 = 0, $$1166 = 0, $$1166240 = 0, $$1239 = 0, $$2153233 = 0;
 var $$2167 = 0, $$2167235 = 0, $$2234 = 0, $$3154228 = 0, $$3168 = 0, $$3168230 = 0, $$3229 = 0, $$4155223 = 0, $$4169 = 0, $$4169225 = 0, $$4224 = 0, $$5156218 = 0, $$5170 = 0, $$5170220 = 0, $$5219 = 0, $$6157213 = 0, $$6171 = 0, $$6171215 = 0, $$6214 = 0, $$7158208 = 0;
 var $$7172 = 0, $$7172210 = 0, $$7209 = 0, $$8159203 = 0, $$8173 = 0, $$8173205 = 0, $$8204 = 0, $$9160198 = 0, $$9174 = 0, $$9174200 = 0, $$9199 = 0, $$off = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==($1|0);
 if ($5) {
  $$0163 = $0;
  return ($$0163|0);
 }
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(4);
 if (!($6)) {
  ___assert_fail((121291|0),(121322|0),476,(121352|0));
  // unreachable;
 }
 $7 = Math_imul($3, $2)|0;
 $8 = Math_imul($7, $4)|0;
 $9 = (_malloc($8)|0);
 $10 = ($9|0)==(0|0);
 if ($10) {
  _free($0);
  HEAP32[36596] = 121182;
  $$0163 = 0;
  return ($$0163|0);
 }
 $11 = ($4|0)>(0);
 L11: do {
  if ($11) {
   $12 = $1 << 3;
   $13 = (($12) + ($2))|0;
   $$0165242 = (($3) + -1)|0;
   $14 = ($$0165242|0)>(-1);
   $$0164247 = 0;
   L13: while(1) {
    $15 = Math_imul($$0164247, $3)|0;
    $16 = Math_imul($15, $1)|0;
    $17 = (($0) + ($16)|0);
    $18 = Math_imul($15, $2)|0;
    $19 = (($9) + ($18)|0);
    do {
     switch ($13|0) {
     case 10:  {
      if ($14) {
       $$0151243 = $17;$$0165245 = $$0165242;$$0244 = $19;
       while(1) {
        $20 = HEAP8[$$0151243>>0]|0;
        HEAP8[$$0244>>0] = $20;
        $21 = ((($$0244)) + 1|0);
        HEAP8[$21>>0] = -1;
        $22 = ((($$0151243)) + 1|0);
        $23 = ((($$0244)) + 2|0);
        $$0165 = (($$0165245) + -1)|0;
        $24 = ($$0165|0)>(-1);
        if ($24) {
         $$0151243 = $22;$$0165245 = $$0165;$$0244 = $23;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 11:  {
      if ($14) {
       $$1152238 = $17;$$1166240 = $$0165242;$$1239 = $19;
       while(1) {
        $25 = HEAP8[$$1152238>>0]|0;
        $26 = ((($$1239)) + 2|0);
        HEAP8[$26>>0] = $25;
        $27 = ((($$1239)) + 1|0);
        HEAP8[$27>>0] = $25;
        HEAP8[$$1239>>0] = $25;
        $28 = ((($$1152238)) + 1|0);
        $29 = ((($$1239)) + 3|0);
        $$1166 = (($$1166240) + -1)|0;
        $30 = ($$1166|0)>(-1);
        if ($30) {
         $$1152238 = $28;$$1166240 = $$1166;$$1239 = $29;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 12:  {
      if ($14) {
       $$2153233 = $17;$$2167235 = $$0165242;$$2234 = $19;
       while(1) {
        $31 = HEAP8[$$2153233>>0]|0;
        $32 = ((($$2234)) + 2|0);
        HEAP8[$32>>0] = $31;
        $33 = ((($$2234)) + 1|0);
        HEAP8[$33>>0] = $31;
        HEAP8[$$2234>>0] = $31;
        $34 = ((($$2234)) + 3|0);
        HEAP8[$34>>0] = -1;
        $35 = ((($$2153233)) + 1|0);
        $36 = ((($$2234)) + 4|0);
        $$2167 = (($$2167235) + -1)|0;
        $37 = ($$2167|0)>(-1);
        if ($37) {
         $$2153233 = $35;$$2167235 = $$2167;$$2234 = $36;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 17:  {
      if ($14) {
       $$3154228 = $17;$$3168230 = $$0165242;$$3229 = $19;
       while(1) {
        $38 = HEAP8[$$3154228>>0]|0;
        HEAP8[$$3229>>0] = $38;
        $39 = ((($$3154228)) + 2|0);
        $40 = ((($$3229)) + 1|0);
        $$3168 = (($$3168230) + -1)|0;
        $41 = ($$3168|0)>(-1);
        if ($41) {
         $$3154228 = $39;$$3168230 = $$3168;$$3229 = $40;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 19:  {
      if ($14) {
       $$4155223 = $17;$$4169225 = $$0165242;$$4224 = $19;
       while(1) {
        $42 = HEAP8[$$4155223>>0]|0;
        $43 = ((($$4224)) + 2|0);
        HEAP8[$43>>0] = $42;
        $44 = ((($$4224)) + 1|0);
        HEAP8[$44>>0] = $42;
        HEAP8[$$4224>>0] = $42;
        $45 = ((($$4155223)) + 2|0);
        $46 = ((($$4224)) + 3|0);
        $$4169 = (($$4169225) + -1)|0;
        $47 = ($$4169|0)>(-1);
        if ($47) {
         $$4155223 = $45;$$4169225 = $$4169;$$4224 = $46;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 20:  {
      if ($14) {
       $$5156218 = $17;$$5170220 = $$0165242;$$5219 = $19;
       while(1) {
        $48 = HEAP8[$$5156218>>0]|0;
        $49 = ((($$5219)) + 2|0);
        HEAP8[$49>>0] = $48;
        $50 = ((($$5219)) + 1|0);
        HEAP8[$50>>0] = $48;
        HEAP8[$$5219>>0] = $48;
        $51 = ((($$5156218)) + 1|0);
        $52 = HEAP8[$51>>0]|0;
        $53 = ((($$5219)) + 3|0);
        HEAP8[$53>>0] = $52;
        $54 = ((($$5156218)) + 2|0);
        $55 = ((($$5219)) + 4|0);
        $$5170 = (($$5170220) + -1)|0;
        $56 = ($$5170|0)>(-1);
        if ($56) {
         $$5156218 = $54;$$5170220 = $$5170;$$5219 = $55;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 28:  {
      if ($14) {
       $$6157213 = $17;$$6171215 = $$0165242;$$6214 = $19;
       while(1) {
        $57 = HEAP8[$$6157213>>0]|0;
        HEAP8[$$6214>>0] = $57;
        $58 = ((($$6157213)) + 1|0);
        $59 = HEAP8[$58>>0]|0;
        $60 = ((($$6214)) + 1|0);
        HEAP8[$60>>0] = $59;
        $61 = ((($$6157213)) + 2|0);
        $62 = HEAP8[$61>>0]|0;
        $63 = ((($$6214)) + 2|0);
        HEAP8[$63>>0] = $62;
        $64 = ((($$6214)) + 3|0);
        HEAP8[$64>>0] = -1;
        $65 = ((($$6157213)) + 3|0);
        $66 = ((($$6214)) + 4|0);
        $$6171 = (($$6171215) + -1)|0;
        $67 = ($$6171|0)>(-1);
        if ($67) {
         $$6157213 = $65;$$6171215 = $$6171;$$6214 = $66;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 25:  {
      if ($14) {
       $$7158208 = $17;$$7172210 = $$0165242;$$7209 = $19;
       while(1) {
        $68 = HEAP8[$$7158208>>0]|0;
        $69 = $68&255;
        $70 = ((($$7158208)) + 1|0);
        $71 = HEAP8[$70>>0]|0;
        $72 = $71&255;
        $73 = ((($$7158208)) + 2|0);
        $74 = HEAP8[$73>>0]|0;
        $75 = $74&255;
        $76 = ($69*77)|0;
        $77 = ($72*150)|0;
        $78 = (($77) + ($76))|0;
        $79 = ($75*29)|0;
        $80 = (($78) + ($79))|0;
        $81 = $80 >>> 8;
        $82 = $81&255;
        HEAP8[$$7209>>0] = $82;
        $83 = ((($$7158208)) + 3|0);
        $84 = ((($$7209)) + 1|0);
        $$7172 = (($$7172210) + -1)|0;
        $85 = ($$7172|0)>(-1);
        if ($85) {
         $$7158208 = $83;$$7172210 = $$7172;$$7209 = $84;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 26:  {
      if ($14) {
       $$8159203 = $17;$$8173205 = $$0165242;$$8204 = $19;
       while(1) {
        $86 = HEAP8[$$8159203>>0]|0;
        $87 = $86&255;
        $88 = ((($$8159203)) + 1|0);
        $89 = HEAP8[$88>>0]|0;
        $90 = $89&255;
        $91 = ((($$8159203)) + 2|0);
        $92 = HEAP8[$91>>0]|0;
        $93 = $92&255;
        $94 = ($87*77)|0;
        $95 = ($90*150)|0;
        $96 = (($95) + ($94))|0;
        $97 = ($93*29)|0;
        $98 = (($96) + ($97))|0;
        $99 = $98 >>> 8;
        $100 = $99&255;
        HEAP8[$$8204>>0] = $100;
        $101 = ((($$8204)) + 1|0);
        HEAP8[$101>>0] = -1;
        $102 = ((($$8159203)) + 3|0);
        $103 = ((($$8204)) + 2|0);
        $$8173 = (($$8173205) + -1)|0;
        $104 = ($$8173|0)>(-1);
        if ($104) {
         $$8159203 = $102;$$8173205 = $$8173;$$8204 = $103;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 33:  {
      if ($14) {
       $$9160198 = $17;$$9174200 = $$0165242;$$9199 = $19;
       while(1) {
        $105 = HEAP8[$$9160198>>0]|0;
        $106 = $105&255;
        $107 = ((($$9160198)) + 1|0);
        $108 = HEAP8[$107>>0]|0;
        $109 = $108&255;
        $110 = ((($$9160198)) + 2|0);
        $111 = HEAP8[$110>>0]|0;
        $112 = $111&255;
        $113 = ($106*77)|0;
        $114 = ($109*150)|0;
        $115 = (($114) + ($113))|0;
        $116 = ($112*29)|0;
        $117 = (($115) + ($116))|0;
        $118 = $117 >>> 8;
        $119 = $118&255;
        HEAP8[$$9199>>0] = $119;
        $120 = ((($$9160198)) + 4|0);
        $121 = ((($$9199)) + 1|0);
        $$9174 = (($$9174200) + -1)|0;
        $122 = ($$9174|0)>(-1);
        if ($122) {
         $$9160198 = $120;$$9174200 = $$9174;$$9199 = $121;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 34:  {
      if ($14) {
       $$10161193 = $17;$$10175195 = $$0165242;$$10194 = $19;
       while(1) {
        $123 = HEAP8[$$10161193>>0]|0;
        $124 = $123&255;
        $125 = ((($$10161193)) + 1|0);
        $126 = HEAP8[$125>>0]|0;
        $127 = $126&255;
        $128 = ((($$10161193)) + 2|0);
        $129 = HEAP8[$128>>0]|0;
        $130 = $129&255;
        $131 = ($124*77)|0;
        $132 = ($127*150)|0;
        $133 = (($132) + ($131))|0;
        $134 = ($130*29)|0;
        $135 = (($133) + ($134))|0;
        $136 = $135 >>> 8;
        $137 = $136&255;
        HEAP8[$$10194>>0] = $137;
        $138 = ((($$10161193)) + 3|0);
        $139 = HEAP8[$138>>0]|0;
        $140 = ((($$10194)) + 1|0);
        HEAP8[$140>>0] = $139;
        $141 = ((($$10161193)) + 4|0);
        $142 = ((($$10194)) + 2|0);
        $$10175 = (($$10175195) + -1)|0;
        $143 = ($$10175|0)>(-1);
        if ($143) {
         $$10161193 = $141;$$10175195 = $$10175;$$10194 = $142;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 35:  {
      if ($14) {
       $$11162189 = $17;$$11176191 = $$0165242;$$11190 = $19;
       while(1) {
        $144 = HEAP8[$$11162189>>0]|0;
        HEAP8[$$11190>>0] = $144;
        $145 = ((($$11162189)) + 1|0);
        $146 = HEAP8[$145>>0]|0;
        $147 = ((($$11190)) + 1|0);
        HEAP8[$147>>0] = $146;
        $148 = ((($$11162189)) + 2|0);
        $149 = HEAP8[$148>>0]|0;
        $150 = ((($$11190)) + 2|0);
        HEAP8[$150>>0] = $149;
        $151 = ((($$11162189)) + 4|0);
        $152 = ((($$11190)) + 3|0);
        $$11176 = (($$11176191) + -1)|0;
        $153 = ($$11176|0)>(-1);
        if ($153) {
         $$11162189 = $151;$$11176191 = $$11176;$$11190 = $152;
        } else {
         break;
        }
       }
      }
      break;
     }
     default: {
      break L13;
     }
     }
    } while(0);
    $154 = (($$0164247) + 1)|0;
    $155 = ($154|0)<($4|0);
    if ($155) {
     $$0164247 = $154;
    } else {
     break L11;
    }
   }
   ___assert_fail((121367|0),(121322|0),505,(121352|0));
   // unreachable;
  }
 } while(0);
 _free($0);
 $$0163 = $9;
 return ($$0163|0);
}
function _do_zlib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i29$i = 0, $$0$i$i$i$i42$i = 0, $$0$i$i$i24$i = 0, $$0$i$i$i58$i$i = 0, $$0$i$i$i63$i$i = 0, $$0$i$i$i69$i$i = 0, $$0$i$i$i75$i$i = 0, $$0$i$i$i81$i$i = 0, $$0$i$i$i87$i$i = 0, $$0$i$i$i93$i$i = 0, $$0$i$i19$i = 0, $$0$i$i34$i = 0, $$0$i12$i$i = 0, $$0$i18$i = 0, $$0$i34$i$i = 0, $$0$i52$i$i = 0;
 var $$0$lcssa$i$i = 0, $$038$i$i = 0, $$046$i$i = 0, $$04769$i98$i = 0, $$058121$i$i = 0, $$059120$i$i = 0, $$1$i$i = 0, $$137$i$i = 0, $$lcssa$i$i = 0, $$pr$i = 0, $$pr$i$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$pre$i = 0, $$pre$i$i57$i$i = 0, $$pre$i$i74$i$i = 0, $$pre$i$i80$i$i = 0, $$pre$i$i86$i$i = 0, $$pre$i$i92$i$i = 0;
 var $$pre$i32$i = 0, $$pre$phi126$iZ2D = 0, $$pre125$i = 0, $$pre53$i$i = 0, $$pre54$i$i = 0, $$promoted$i$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0;
 var $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0;
 var $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0;
 var $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0;
 var $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0;
 var $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0;
 var $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0;
 var $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0;
 var $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0;
 var $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0;
 var $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0;
 var $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond51$i$i = 0, $smax$i$i = 0, $trunc$i = 0, $trunc$i$clear = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 496|0;
 $5 = sp + 32|0;
 $6 = sp;
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $1;
 $8 = ((($0)) + 16|0);
 HEAP32[$8>>2] = $1;
 $9 = (($1) + ($2)|0);
 $10 = ((($0)) + 24|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($0)) + 28|0);
 HEAP32[$11>>2] = $3;
 $12 = ($4|0)==(0);
 if ($12) {
  $$pre125$i = ((($0)) + 4|0);
  $$pre$phi126$iZ2D = $$pre125$i;
 } else {
  $13 = HEAP32[$0>>2]|0;
  $14 = ((($0)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($13>>>0)<($15>>>0);
  if ($16) {
   $17 = ((($13)) + 1|0);
   HEAP32[$0>>2] = $17;
   $18 = HEAP8[$13>>0]|0;
   $19 = $18&255;
   $$0$i$i$i = $19;$22 = $17;
  } else {
   $$0$i$i$i = 0;$22 = $13;
  }
  $20 = $$0$i$i$i & 15;
  $21 = ($22>>>0)<($15>>>0);
  if ($21) {
   $23 = ((($22)) + 1|0);
   HEAP32[$0>>2] = $23;
   $24 = HEAP8[$22>>0]|0;
   $25 = $24&255;
   $$0$i12$i$i = $25;
  } else {
   $$0$i12$i$i = 0;
  }
  $26 = $$0$i$i$i << 8;
  $27 = $$0$i12$i$i | $26;
  $28 = (($27>>>0) % 31)&-1;
  $29 = ($28|0)==(0);
  if (!($29)) {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
  $30 = $$0$i12$i$i & 32;
  $31 = ($30|0)==(0);
  if (!($31)) {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
  $32 = ($20|0)==(8);
  if ($32) {
   $$pre$phi126$iZ2D = $14;
  } else {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
 }
 $33 = ((($0)) + 8|0);
 HEAP32[$33>>2] = 0;
 $34 = ((($0)) + 12|0);
 HEAP32[$34>>2] = 0;
 $35 = ((($0)) + 32|0);
 $36 = ((($0)) + 2052|0);
 $37 = ((($5)) + 1|0);
 $38 = ((($5)) + 3|0);
 $39 = ((($5)) + 2|0);
 $$pre$i$i$i = 0;$41 = 0;
 L21: while(1) {
  $40 = ($41|0)<(1);
  if ($40) {
   $43 = $41;$45 = $$pre$i$i$i;
   while(1) {
    $42 = 1 << $43;
    $44 = ($45>>>0)<($42>>>0);
    if (!($44)) {
     label = 18;
     break L21;
    }
    $46 = HEAP32[$0>>2]|0;
    $47 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
    $48 = ($46>>>0)<($47>>>0);
    if ($48) {
     $49 = ((($46)) + 1|0);
     HEAP32[$0>>2] = $49;
     $50 = HEAP8[$46>>0]|0;
     $51 = $50&255;
     $$0$i$i$i$i = $51;
    } else {
     $$0$i$i$i$i = 0;
    }
    $52 = $$0$i$i$i$i << $43;
    $53 = $52 | $45;
    HEAP32[$34>>2] = $53;
    $54 = (($43) + 8)|0;
    HEAP32[$33>>2] = $54;
    $55 = ($43|0)<(17);
    if ($55) {
     $43 = $54;$45 = $53;
    } else {
     $57 = $53;$60 = $54;
     break;
    }
   }
  } else {
   $57 = $$pre$i$i$i;$60 = $41;
  }
  $56 = $57 & 1;
  $58 = $57 >>> 1;
  HEAP32[$34>>2] = $58;
  $59 = (($60) + -1)|0;
  HEAP32[$33>>2] = $59;
  $61 = ($60|0)<(3);
  if ($61) {
   $63 = $59;$65 = $58;
   while(1) {
    $62 = 1 << $63;
    $64 = ($65>>>0)<($62>>>0);
    if (!($64)) {
     label = 25;
     break L21;
    }
    $66 = HEAP32[$0>>2]|0;
    $67 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
    $68 = ($66>>>0)<($67>>>0);
    if ($68) {
     $69 = ((($66)) + 1|0);
     HEAP32[$0>>2] = $69;
     $70 = HEAP8[$66>>0]|0;
     $71 = $70&255;
     $$0$i$i$i24$i = $71;
    } else {
     $$0$i$i$i24$i = 0;
    }
    $72 = $$0$i$i$i24$i << $63;
    $73 = $72 | $65;
    HEAP32[$34>>2] = $73;
    $74 = (($63) + 8)|0;
    HEAP32[$33>>2] = $74;
    $75 = ($63|0)<(17);
    if ($75) {
     $63 = $74;$65 = $73;
    } else {
     $77 = $73;$79 = $74;
     break;
    }
   }
  } else {
   $77 = $58;$79 = $59;
  }
  $76 = $77 >>> 2;
  HEAP32[$34>>2] = $76;
  $78 = (($79) + -2)|0;
  HEAP32[$33>>2] = $78;
  $trunc$i = $77&255;
  $trunc$i$clear = $trunc$i & 3;
  switch ($trunc$i$clear<<24>>24) {
  case 3:  {
   $$0$i = 0;
   label = 182;
   break L21;
   break;
  }
  case 0:  {
   $80 = $78 & 7;
   $81 = ($80|0)==(0);
   if ($81) {
    $$pr$i$i = $78;$$promoted$i$i = $76;
   } else {
    $82 = ($78|0)<($80|0);
    if ($82) {
     $84 = $78;$86 = $76;
     while(1) {
      $83 = 1 << $84;
      $85 = ($86>>>0)<($83>>>0);
      if (!($85)) {
       label = 34;
       break L21;
      }
      $87 = HEAP32[$0>>2]|0;
      $88 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
      $89 = ($87>>>0)<($88>>>0);
      if ($89) {
       $90 = ((($87)) + 1|0);
       HEAP32[$0>>2] = $90;
       $91 = HEAP8[$87>>0]|0;
       $92 = $91&255;
       $$0$i$i$i$i29$i = $92;
      } else {
       $$0$i$i$i$i29$i = 0;
      }
      $93 = $$0$i$i$i$i29$i << $84;
      $94 = $93 | $86;
      HEAP32[$34>>2] = $94;
      $95 = (($84) + 8)|0;
      HEAP32[$33>>2] = $95;
      $96 = ($84|0)<(17);
      if ($96) {
       $84 = $95;$86 = $94;
      } else {
       $100 = $95;$98 = $94;
       break;
      }
     }
    } else {
     $100 = $78;$98 = $76;
    }
    $97 = $98 >>> $80;
    HEAP32[$34>>2] = $97;
    $99 = (($100) - ($80))|0;
    HEAP32[$33>>2] = $99;
    $$pr$i$i = $99;$$promoted$i$i = $97;
   }
   $101 = ($$pr$i$i|0)>(0);
   if ($101) {
    $102 = $$pr$i$i ^ -1;
    $103 = ($102|0)>(-9);
    $smax$i$i = $103 ? $102 : -9;
    $104 = (($$pr$i$i) + 8)|0;
    $105 = (($104) + ($smax$i$i))|0;
    $106 = $105 >>> 3;
    $107 = (($106) + 1)|0;
    $$038$i$i = 0;$109 = $$promoted$i$i;
    while(1) {
     $108 = $109&255;
     $110 = (($$038$i$i) + 1)|0;
     $111 = (($5) + ($$038$i$i)|0);
     HEAP8[$111>>0] = $108;
     $112 = $109 >>> 8;
     $exitcond51$i$i = ($110|0)==($107|0);
     if ($exitcond51$i$i) {
      break;
     } else {
      $$038$i$i = $110;$109 = $112;
     }
    }
    $113 = $105 & -8;
    $114 = (($$pr$i$i) + -8)|0;
    $115 = (($114) - ($113))|0;
    HEAP32[$34>>2] = $112;
    HEAP32[$33>>2] = $115;
    $$0$lcssa$i$i = $107;$$lcssa$i$i = $115;
   } else {
    $$0$lcssa$i$i = 0;$$lcssa$i$i = $$pr$i$i;
   }
   $116 = ($$lcssa$i$i|0)==(0);
   if (!($116)) {
    label = 44;
    break L21;
   }
   $117 = ($$0$lcssa$i$i>>>0)<(4);
   if ($117) {
    $$pre$i32$i = HEAP32[$0>>2]|0;
    $$pre53$i$i = HEAP32[$$pre$phi126$iZ2D>>2]|0;
    $$137$i$i = $$0$lcssa$i$i;$119 = $$pre$i32$i;
    while(1) {
     $118 = ($119>>>0)<($$pre53$i$i>>>0);
     if ($118) {
      $120 = ((($119)) + 1|0);
      HEAP32[$0>>2] = $120;
      $121 = HEAP8[$119>>0]|0;
      $122 = $121&255;
      $$0$i$i34$i = $122;$483 = $120;
     } else {
      $$0$i$i34$i = 0;$483 = $119;
     }
     $123 = $$0$i$i34$i&255;
     $124 = (($$137$i$i) + 1)|0;
     $125 = (($5) + ($$137$i$i)|0);
     HEAP8[$125>>0] = $123;
     $exitcond$i$i = ($124|0)==(4);
     if ($exitcond$i$i) {
      break;
     } else {
      $$137$i$i = $124;$119 = $483;
     }
    }
   }
   $126 = HEAP8[$37>>0]|0;
   $127 = $126&255;
   $128 = $127 << 8;
   $129 = HEAP8[$5>>0]|0;
   $130 = $129&255;
   $131 = $128 | $130;
   $132 = HEAP8[$38>>0]|0;
   $133 = $132&255;
   $134 = $133 << 8;
   $135 = HEAP8[$39>>0]|0;
   $136 = $135&255;
   $137 = $134 | $136;
   $138 = $131 ^ 65535;
   $139 = ($137|0)==($138|0);
   if (!($139)) {
    $$sink = 121715;
    label = 58;
    break L21;
   }
   $140 = HEAP32[$0>>2]|0;
   $141 = (($140) + ($131)|0);
   $142 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
   $143 = ($141>>>0)>($142>>>0);
   if ($143) {
    $$sink = 121715;
    label = 58;
    break L21;
   }
   $144 = HEAP32[$8>>2]|0;
   $145 = (($144) + ($131)|0);
   $146 = HEAP32[$10>>2]|0;
   $147 = ($145>>>0)>($146>>>0);
   $148 = $144;
   $149 = $146;
   if ($147) {
    $150 = HEAP32[$11>>2]|0;
    $151 = ($150|0)==(0);
    if ($151) {
     $$sink = 121715;
     label = 58;
     break L21;
    }
    $152 = HEAP32[$7>>2]|0;
    $153 = (($148) - ($152))|0;
    $154 = (($149) - ($152))|0;
    $155 = (($153) + ($131))|0;
    $$0$i34$i$i = $154;
    while(1) {
     $156 = ($155|0)>($$0$i34$i$i|0);
     $157 = $$0$i34$i$i << 1;
     if ($156) {
      $$0$i34$i$i = $157;
     } else {
      break;
     }
    }
    $158 = $152;
    $159 = (_realloc($158,$$0$i34$i$i)|0);
    $160 = ($159|0)==(0|0);
    if ($160) {
     $$sink = 121182;
     label = 58;
     break L21;
    }
    HEAP32[$7>>2] = $159;
    $161 = (($159) + ($153)|0);
    HEAP32[$8>>2] = $161;
    $162 = (($159) + ($$0$i34$i$i)|0);
    HEAP32[$10>>2] = $162;
    $$pre54$i$i = HEAP32[$0>>2]|0;
    $163 = $161;$164 = $$pre54$i$i;
   } else {
    $163 = $144;$164 = $140;
   }
   _memcpy(($163|0),($164|0),($131|0))|0;
   $165 = HEAP32[$0>>2]|0;
   $166 = (($165) + ($131)|0);
   HEAP32[$0>>2] = $166;
   $167 = HEAP32[$8>>2]|0;
   $168 = (($167) + ($131)|0);
   HEAP32[$8>>2] = $168;
   break;
  }
  case 1:  {
   $169 = HEAP8[(143471)>>0]|0;
   $170 = ($169<<24>>24)==(0);
   if ($170) {
    _memset((143472|0),8,144)|0;
    dest=(143616); stop=dest+112|0; do { HEAP32[dest>>2]=151587081|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
    ;HEAP32[(143728)>>2]=117901063|0;HEAP32[(143728)+4>>2]=117901063|0;HEAP32[(143728)+8>>2]=117901063|0;HEAP32[(143728)+12>>2]=117901063|0;HEAP32[(143728)+16>>2]=117901063|0;HEAP32[(143728)+20>>2]=117901063|0;
    $171 = (143752);
    $172 = $171;
    HEAP32[$172>>2] = 134744072;
    $173 = (($171) + 4)|0;
    $174 = $173;
    HEAP32[$174>>2] = 134744072;
    ;HEAP32[143440>>2]=84215045|0;HEAP32[143440+4>>2]=84215045|0;HEAP32[143440+8>>2]=84215045|0;HEAP32[143440+12>>2]=84215045|0;HEAP32[143440+16>>2]=84215045|0;HEAP32[143440+20>>2]=84215045|0;HEAP32[143440+24>>2]=84215045|0;HEAP32[143440+28>>2]=84215045|0;
   }
   $175 = (_zbuild_huffman($35,143472,288)|0);
   $176 = ($175|0)==(0);
   if ($176) {
    $$0$i = 0;
    label = 182;
    break L21;
   }
   $177 = (_zbuild_huffman($36,143440,32)|0);
   $178 = ($177|0)==(0);
   if ($178) {
    $$0$i = 0;
    label = 182;
    break L21;
   } else {
    label = 132;
   }
   break;
  }
  default: {
   $179 = ($79|0)<(7);
   if ($179) {
    $181 = $78;$183 = $76;
    while(1) {
     $180 = 1 << $181;
     $182 = ($183>>>0)<($180>>>0);
     if (!($182)) {
      label = 67;
      break L21;
     }
     $184 = HEAP32[$0>>2]|0;
     $185 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
     $186 = ($184>>>0)<($185>>>0);
     if ($186) {
      $187 = ((($184)) + 1|0);
      HEAP32[$0>>2] = $187;
      $188 = HEAP8[$184>>0]|0;
      $189 = $188&255;
      $$0$i$i$i$i42$i = $189;
     } else {
      $$0$i$i$i$i42$i = 0;
     }
     $190 = $$0$i$i$i$i42$i << $181;
     $191 = $190 | $183;
     HEAP32[$34>>2] = $191;
     $192 = (($181) + 8)|0;
     HEAP32[$33>>2] = $192;
     $193 = ($181|0)<(17);
     if ($193) {
      $181 = $192;$183 = $191;
     } else {
      $195 = $191;$198 = $192;
      break;
     }
    }
   } else {
    $195 = $76;$198 = $78;
   }
   $194 = $195 & 31;
   $196 = $195 >>> 5;
   HEAP32[$34>>2] = $196;
   $197 = (($198) + -5)|0;
   HEAP32[$33>>2] = $197;
   $199 = (($194) + 257)|0;
   $200 = ($198|0)<(10);
   if ($200) {
    $202 = $197;$204 = $196;
    while(1) {
     $201 = 1 << $202;
     $203 = ($204>>>0)<($201>>>0);
     if (!($203)) {
      label = 74;
      break L21;
     }
     $205 = HEAP32[$0>>2]|0;
     $206 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
     $207 = ($205>>>0)<($206>>>0);
     if ($207) {
      $208 = ((($205)) + 1|0);
      HEAP32[$0>>2] = $208;
      $209 = HEAP8[$205>>0]|0;
      $210 = $209&255;
      $$0$i$i$i63$i$i = $210;
     } else {
      $$0$i$i$i63$i$i = 0;
     }
     $211 = $$0$i$i$i63$i$i << $202;
     $212 = $211 | $204;
     HEAP32[$34>>2] = $212;
     $213 = (($202) + 8)|0;
     HEAP32[$33>>2] = $213;
     $214 = ($202|0)<(17);
     if ($214) {
      $202 = $213;$204 = $212;
     } else {
      $216 = $212;$219 = $213;
      break;
     }
    }
   } else {
    $216 = $196;$219 = $197;
   }
   $215 = $216 & 31;
   $217 = $216 >>> 5;
   HEAP32[$34>>2] = $217;
   $218 = (($219) + -5)|0;
   HEAP32[$33>>2] = $218;
   $220 = (($215) + 1)|0;
   $221 = ($219|0)<(9);
   if ($221) {
    $223 = $218;$225 = $217;
    while(1) {
     $222 = 1 << $223;
     $224 = ($225>>>0)<($222>>>0);
     if (!($224)) {
      label = 81;
      break L21;
     }
     $226 = HEAP32[$0>>2]|0;
     $227 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
     $228 = ($226>>>0)<($227>>>0);
     if ($228) {
      $229 = ((($226)) + 1|0);
      HEAP32[$0>>2] = $229;
      $230 = HEAP8[$226>>0]|0;
      $231 = $230&255;
      $$0$i$i$i69$i$i = $231;
     } else {
      $$0$i$i$i69$i$i = 0;
     }
     $232 = $$0$i$i$i69$i$i << $223;
     $233 = $232 | $225;
     HEAP32[$34>>2] = $233;
     $234 = (($223) + 8)|0;
     HEAP32[$33>>2] = $234;
     $235 = ($223|0)<(17);
     if ($235) {
      $223 = $234;$225 = $233;
     } else {
      $237 = $233;$240 = $234;
      break;
     }
    }
   } else {
    $237 = $217;$240 = $218;
   }
   $236 = $237 & 15;
   $238 = $237 >>> 4;
   HEAP32[$34>>2] = $238;
   $239 = (($240) + -4)|0;
   HEAP32[$33>>2] = $239;
   $241 = (($236) + 4)|0;
   ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;HEAP16[$6+16>>1]=0|0;HEAP8[$6+18>>0]=0|0;
   $$058121$i$i = 0;$$pre$i$i74$i$i = $238;$243 = $239;
   while(1) {
    $242 = ($243|0)<(3);
    if ($242) {
     $245 = $243;$247 = $$pre$i$i74$i$i;
     while(1) {
      $244 = 1 << $245;
      $246 = ($247>>>0)<($244>>>0);
      if (!($246)) {
       label = 89;
       break L21;
      }
      $248 = HEAP32[$0>>2]|0;
      $249 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
      $250 = ($248>>>0)<($249>>>0);
      if ($250) {
       $251 = ((($248)) + 1|0);
       HEAP32[$0>>2] = $251;
       $252 = HEAP8[$248>>0]|0;
       $253 = $252&255;
       $$0$i$i$i75$i$i = $253;
      } else {
       $$0$i$i$i75$i$i = 0;
      }
      $254 = $$0$i$i$i75$i$i << $245;
      $255 = $254 | $247;
      HEAP32[$34>>2] = $255;
      $256 = (($245) + 8)|0;
      HEAP32[$33>>2] = $256;
      $257 = ($245|0)<(17);
      if ($257) {
       $245 = $256;$247 = $255;
      } else {
       $259 = $255;$262 = $256;
       break;
      }
     }
    } else {
     $259 = $$pre$i$i74$i$i;$262 = $243;
    }
    $258 = $259 & 7;
    $260 = $259 >>> 3;
    HEAP32[$34>>2] = $260;
    $261 = (($262) + -3)|0;
    HEAP32[$33>>2] = $261;
    $263 = $258&255;
    $264 = (1024 + ($$058121$i$i)|0);
    $265 = HEAP8[$264>>0]|0;
    $266 = $265&255;
    $267 = (($6) + ($266)|0);
    HEAP8[$267>>0] = $263;
    $268 = (($$058121$i$i) + 1)|0;
    $269 = ($268>>>0)<($241>>>0);
    if ($269) {
     $$058121$i$i = $268;$$pre$i$i74$i$i = $260;$243 = $261;
    } else {
     break;
    }
   }
   $270 = (_zbuild_huffman(146388,$6,19)|0);
   $271 = ($270|0)==(0);
   if ($271) {
    break L21;
   }
   $272 = (($220) + ($199))|0;
   $$059120$i$i = 0;
   while(1) {
    $273 = (_zhuffman_decode($0,146388)|0);
    $274 = ($273>>>0)<(19);
    if (!($274)) {
     label = 97;
     break L21;
    }
    $275 = ($273|0)<(16);
    L86: do {
     if ($275) {
      $276 = $273&255;
      $277 = (($$059120$i$i) + 1)|0;
      $278 = (($5) + ($$059120$i$i)|0);
      HEAP8[$278>>0] = $276;
      $$1$i$i = $277;
     } else {
      switch ($273|0) {
      case 16:  {
       $279 = HEAP32[$33>>2]|0;
       $280 = ($279|0)<(2);
       $$pre$i$i80$i$i = HEAP32[$34>>2]|0;
       if ($280) {
        $282 = $279;$284 = $$pre$i$i80$i$i;
        while(1) {
         $281 = 1 << $282;
         $283 = ($284>>>0)<($281>>>0);
         if (!($283)) {
          label = 104;
          break L21;
         }
         $285 = HEAP32[$0>>2]|0;
         $286 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
         $287 = ($285>>>0)<($286>>>0);
         if ($287) {
          $288 = ((($285)) + 1|0);
          HEAP32[$0>>2] = $288;
          $289 = HEAP8[$285>>0]|0;
          $290 = $289&255;
          $$0$i$i$i81$i$i = $290;
         } else {
          $$0$i$i$i81$i$i = 0;
         }
         $291 = $$0$i$i$i81$i$i << $282;
         $292 = $291 | $284;
         HEAP32[$34>>2] = $292;
         $293 = (($282) + 8)|0;
         HEAP32[$33>>2] = $293;
         $294 = ($282|0)<(17);
         if ($294) {
          $282 = $293;$284 = $292;
         } else {
          $296 = $292;$299 = $293;
          break;
         }
        }
       } else {
        $296 = $$pre$i$i80$i$i;$299 = $279;
       }
       $295 = $296 & 3;
       $297 = $296 >>> 2;
       HEAP32[$34>>2] = $297;
       $298 = (($299) + -2)|0;
       HEAP32[$33>>2] = $298;
       $300 = (($295) + 3)|0;
       $301 = (($5) + ($$059120$i$i)|0);
       $302 = (($$059120$i$i) + -1)|0;
       $303 = (($5) + ($302)|0);
       $304 = HEAP8[$303>>0]|0;
       _memset(($301|0),($304|0),($300|0))|0;
       $305 = (($300) + ($$059120$i$i))|0;
       $$1$i$i = $305;
       break L86;
       break;
      }
      case 17:  {
       $306 = HEAP32[$33>>2]|0;
       $307 = ($306|0)<(3);
       $$pre$i$i86$i$i = HEAP32[$34>>2]|0;
       if ($307) {
        $309 = $306;$311 = $$pre$i$i86$i$i;
        while(1) {
         $308 = 1 << $309;
         $310 = ($311>>>0)<($308>>>0);
         if (!($310)) {
          label = 112;
          break L21;
         }
         $312 = HEAP32[$0>>2]|0;
         $313 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
         $314 = ($312>>>0)<($313>>>0);
         if ($314) {
          $315 = ((($312)) + 1|0);
          HEAP32[$0>>2] = $315;
          $316 = HEAP8[$312>>0]|0;
          $317 = $316&255;
          $$0$i$i$i87$i$i = $317;
         } else {
          $$0$i$i$i87$i$i = 0;
         }
         $318 = $$0$i$i$i87$i$i << $309;
         $319 = $318 | $311;
         HEAP32[$34>>2] = $319;
         $320 = (($309) + 8)|0;
         HEAP32[$33>>2] = $320;
         $321 = ($309|0)<(17);
         if ($321) {
          $309 = $320;$311 = $319;
         } else {
          $323 = $319;$326 = $320;
          break;
         }
        }
       } else {
        $323 = $$pre$i$i86$i$i;$326 = $306;
       }
       $322 = $323 & 7;
       $324 = $323 >>> 3;
       HEAP32[$34>>2] = $324;
       $325 = (($326) + -3)|0;
       HEAP32[$33>>2] = $325;
       $327 = (($322) + 3)|0;
       $328 = (($5) + ($$059120$i$i)|0);
       _memset(($328|0),0,($327|0))|0;
       $329 = (($327) + ($$059120$i$i))|0;
       $$1$i$i = $329;
       break L86;
       break;
      }
      case 18:  {
       $330 = HEAP32[$33>>2]|0;
       $331 = ($330|0)<(7);
       $$pre$i$i92$i$i = HEAP32[$34>>2]|0;
       if ($331) {
        $333 = $330;$335 = $$pre$i$i92$i$i;
        while(1) {
         $332 = 1 << $333;
         $334 = ($335>>>0)<($332>>>0);
         if (!($334)) {
          label = 121;
          break L21;
         }
         $336 = HEAP32[$0>>2]|0;
         $337 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
         $338 = ($336>>>0)<($337>>>0);
         if ($338) {
          $339 = ((($336)) + 1|0);
          HEAP32[$0>>2] = $339;
          $340 = HEAP8[$336>>0]|0;
          $341 = $340&255;
          $$0$i$i$i93$i$i = $341;
         } else {
          $$0$i$i$i93$i$i = 0;
         }
         $342 = $$0$i$i$i93$i$i << $333;
         $343 = $342 | $335;
         HEAP32[$34>>2] = $343;
         $344 = (($333) + 8)|0;
         HEAP32[$33>>2] = $344;
         $345 = ($333|0)<(17);
         if ($345) {
          $333 = $344;$335 = $343;
         } else {
          $347 = $343;$350 = $344;
          break;
         }
        }
       } else {
        $347 = $$pre$i$i92$i$i;$350 = $330;
       }
       $346 = $347 & 127;
       $348 = $347 >>> 7;
       HEAP32[$34>>2] = $348;
       $349 = (($350) + -7)|0;
       HEAP32[$33>>2] = $349;
       $351 = (($346) + 11)|0;
       $352 = (($5) + ($$059120$i$i)|0);
       _memset(($352|0),0,($351|0))|0;
       $353 = (($351) + ($$059120$i$i))|0;
       $$1$i$i = $353;
       break L86;
       break;
      }
      default: {
       label = 117;
       break L21;
      }
      }
     }
    } while(0);
    $354 = ($$1$i$i|0)<($272|0);
    if ($354) {
     $$059120$i$i = $$1$i$i;
    } else {
     break;
    }
   }
   $355 = ($$1$i$i|0)==($272|0);
   if (!($355)) {
    label = 128;
    break L21;
   }
   $356 = (_zbuild_huffman($35,$5,$199)|0);
   $357 = ($356|0)==(0);
   if ($357) {
    break L21;
   }
   $358 = (($5) + ($199)|0);
   $359 = (_zbuild_huffman($36,$358,$220)|0);
   $360 = ($359|0)==(0);
   if ($360) {
    $$0$i = 0;
    label = 182;
    break L21;
   } else {
    label = 132;
   }
  }
  }
  L167: do {
   if ((label|0) == 132) {
    label = 0;
    while(1) {
     $361 = (_zhuffman_decode($0,$35)|0);
     $362 = ($361|0)<(256);
     if ($362) {
      $363 = ($361|0)<(0);
      if ($363) {
       label = 135;
       break L21;
      }
      $364 = HEAP32[$8>>2]|0;
      $365 = HEAP32[$10>>2]|0;
      $366 = ($364>>>0)<($365>>>0);
      $367 = $364;
      $368 = $365;
      if ($366) {
       $383 = $364;
      } else {
       $369 = HEAP32[$11>>2]|0;
       $370 = ($369|0)==(0);
       if ($370) {
        label = 138;
        break L21;
       }
       $371 = HEAP32[$7>>2]|0;
       $372 = (($367) - ($371))|0;
       $373 = (($368) - ($371))|0;
       $$0$i52$i$i = $373;
       while(1) {
        $374 = ($372|0)<($$0$i52$i$i|0);
        $375 = $$0$i52$i$i << 1;
        if ($374) {
         break;
        } else {
         $$0$i52$i$i = $375;
        }
       }
       $376 = $371;
       $377 = (_realloc($376,$$0$i52$i$i)|0);
       $378 = ($377|0)==(0|0);
       if ($378) {
        label = 142;
        break L21;
       }
       HEAP32[$7>>2] = $377;
       $379 = (($377) + ($372)|0);
       HEAP32[$8>>2] = $379;
       $380 = (($377) + ($$0$i52$i$i)|0);
       HEAP32[$10>>2] = $380;
       $383 = $379;
      }
      $381 = $361&255;
      $382 = ((($383)) + 1|0);
      HEAP32[$8>>2] = $382;
      HEAP8[$383>>0] = $381;
     } else {
      $384 = ($361|0)==(256);
      if ($384) {
       break L167;
      }
      $385 = (($361) + -257)|0;
      $386 = (1056 + ($385<<2)|0);
      $387 = HEAP32[$386>>2]|0;
      $388 = (($361) + -265)|0;
      $389 = ($388>>>0)<(20);
      if ($389) {
       $390 = (1184 + ($385<<2)|0);
       $391 = HEAP32[$390>>2]|0;
       $392 = HEAP32[$33>>2]|0;
       $393 = ($392|0)<($391|0);
       $$pre$i$i$i$i = HEAP32[$34>>2]|0;
       if ($393) {
        $395 = $392;$397 = $$pre$i$i$i$i;
        while(1) {
         $394 = 1 << $395;
         $396 = ($397>>>0)<($394>>>0);
         if (!($396)) {
          label = 150;
          break L21;
         }
         $398 = HEAP32[$0>>2]|0;
         $399 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
         $400 = ($398>>>0)<($399>>>0);
         if ($400) {
          $401 = ((($398)) + 1|0);
          HEAP32[$0>>2] = $401;
          $402 = HEAP8[$398>>0]|0;
          $403 = $402&255;
          $$0$i$i$i$i$i = $403;
         } else {
          $$0$i$i$i$i$i = 0;
         }
         $404 = $$0$i$i$i$i$i << $395;
         $405 = $404 | $397;
         HEAP32[$34>>2] = $405;
         $406 = (($395) + 8)|0;
         HEAP32[$33>>2] = $406;
         $407 = ($395|0)<(17);
         if ($407) {
          $395 = $406;$397 = $405;
         } else {
          $411 = $405;$414 = $406;
          break;
         }
        }
       } else {
        $411 = $$pre$i$i$i$i;$414 = $392;
       }
       $408 = 1 << $391;
       $409 = (($408) + -1)|0;
       $410 = $411 & $409;
       $412 = $411 >>> $391;
       HEAP32[$34>>2] = $412;
       $413 = (($414) - ($391))|0;
       HEAP32[$33>>2] = $413;
       $415 = (($410) + ($387))|0;
       $$046$i$i = $415;
      } else {
       $$046$i$i = $387;
      }
      $416 = (_zhuffman_decode($0,$36)|0);
      $417 = ($416|0)<(0);
      if ($417) {
       label = 156;
       break L21;
      }
      $418 = (1312 + ($416<<2)|0);
      $419 = HEAP32[$418>>2]|0;
      $420 = (($416) + -4)|0;
      $421 = ($420>>>0)<(26);
      if ($421) {
       $422 = (1440 + ($416<<2)|0);
       $423 = HEAP32[$422>>2]|0;
       $424 = HEAP32[$33>>2]|0;
       $425 = ($424|0)<($423|0);
       $$pre$i$i57$i$i = HEAP32[$34>>2]|0;
       if ($425) {
        $427 = $424;$429 = $$pre$i$i57$i$i;
        while(1) {
         $426 = 1 << $427;
         $428 = ($429>>>0)<($426>>>0);
         if (!($428)) {
          label = 161;
          break L21;
         }
         $430 = HEAP32[$0>>2]|0;
         $431 = HEAP32[$$pre$phi126$iZ2D>>2]|0;
         $432 = ($430>>>0)<($431>>>0);
         if ($432) {
          $433 = ((($430)) + 1|0);
          HEAP32[$0>>2] = $433;
          $434 = HEAP8[$430>>0]|0;
          $435 = $434&255;
          $$0$i$i$i58$i$i = $435;
         } else {
          $$0$i$i$i58$i$i = 0;
         }
         $436 = $$0$i$i$i58$i$i << $427;
         $437 = $436 | $429;
         HEAP32[$34>>2] = $437;
         $438 = (($427) + 8)|0;
         HEAP32[$33>>2] = $438;
         $439 = ($427|0)<(17);
         if ($439) {
          $427 = $438;$429 = $437;
         } else {
          $443 = $437;$446 = $438;
          break;
         }
        }
       } else {
        $443 = $$pre$i$i57$i$i;$446 = $424;
       }
       $440 = 1 << $423;
       $441 = (($440) + -1)|0;
       $442 = $443 & $441;
       $444 = $443 >>> $423;
       HEAP32[$34>>2] = $444;
       $445 = (($446) - ($423))|0;
       HEAP32[$33>>2] = $445;
       $447 = (($442) + ($419))|0;
       $$0$i18$i = $447;
      } else {
       $$0$i18$i = $419;
      }
      $448 = HEAP32[$8>>2]|0;
      $449 = HEAP32[$7>>2]|0;
      $450 = $448;
      $451 = (($450) - ($449))|0;
      $452 = ($451|0)<($$0$i18$i|0);
      if ($452) {
       label = 167;
       break L21;
      }
      $453 = (($448) + ($$046$i$i)|0);
      $454 = HEAP32[$10>>2]|0;
      $455 = ($453>>>0)>($454>>>0);
      $456 = $454;
      if ($455) {
       $457 = HEAP32[$11>>2]|0;
       $458 = ($457|0)==(0);
       if ($458) {
        label = 170;
        break L21;
       }
       $459 = (($456) - ($449))|0;
       $460 = (($451) + ($$046$i$i))|0;
       $$0$i$i19$i = $459;
       while(1) {
        $461 = ($460|0)>($$0$i$i19$i|0);
        $462 = $$0$i$i19$i << 1;
        if ($461) {
         $$0$i$i19$i = $462;
        } else {
         break;
        }
       }
       $463 = $449;
       $464 = (_realloc($463,$$0$i$i19$i)|0);
       $465 = ($464|0)==(0|0);
       if ($465) {
        label = 174;
        break L21;
       }
       HEAP32[$7>>2] = $464;
       $466 = (($464) + ($451)|0);
       HEAP32[$8>>2] = $466;
       $467 = (($464) + ($$0$i$i19$i)|0);
       HEAP32[$10>>2] = $467;
       $471 = $466;
      } else {
       $471 = $448;
      }
      $468 = ($$046$i$i|0)==(0);
      if (!($468)) {
       $469 = (0 - ($$0$i18$i))|0;
       $470 = (($471) + ($469)|0);
       $472 = (($$046$i$i) + -1)|0;
       $473 = HEAP8[$470>>0]|0;
       $474 = ((($471)) + 1|0);
       HEAP32[$8>>2] = $474;
       HEAP8[$471>>0] = $473;
       $475 = ($472|0)==(0);
       if (!($475)) {
        $$04769$i98$i = $470;$478 = $472;
        while(1) {
         $476 = ((($$04769$i98$i)) + 1|0);
         $$pre$i$i = HEAP32[$8>>2]|0;
         $477 = (($478) + -1)|0;
         $479 = HEAP8[$476>>0]|0;
         $480 = ((($$pre$i$i)) + 1|0);
         HEAP32[$8>>2] = $480;
         HEAP8[$$pre$i$i>>0] = $479;
         $481 = ($477|0)==(0);
         if ($481) {
          break;
         } else {
          $$04769$i98$i = $476;$478 = $477;
         }
        }
       }
      }
     }
    }
   }
  } while(0);
  $482 = ($56|0)==(0);
  if (!($482)) {
   $$0$i = 1;
   label = 182;
   break;
  }
  $$pr$i = HEAP32[$33>>2]|0;
  $$pre$i$i$pre$i = HEAP32[$34>>2]|0;
  $$pre$i$i$i = $$pre$i$i$pre$i;$41 = $$pr$i;
 }
 switch (label|0) {
  case 18: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 25: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 34: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 44: {
   ___assert_fail((122057|0),(121322|0),1874,(122074|0));
   // unreachable;
   break;
  }
  case 58: {
   HEAP32[36596] = $$sink;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 67: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 74: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 81: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 89: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 97: {
   ___assert_fail((122099|0),(121322|0),1837,(122116|0));
   // unreachable;
   break;
  }
  case 104: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 112: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 117: {
   ___assert_fail((122138|0),(121322|0),1849,(122116|0));
   // unreachable;
   break;
  }
  case 121: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 128: {
   HEAP32[36596] = 121715;
   break;
  }
  case 135: {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 138: {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 142: {
   HEAP32[36596] = 121182;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 150: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 156: {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 161: {
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
   break;
  }
  case 167: {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 170: {
   HEAP32[36596] = 121715;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 174: {
   HEAP32[36596] = 121182;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 182: {
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
 }
 $$0$i = 0;
 STACKTOP = sp;return ($$0$i|0);
}
function _zbuild_huffman($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$071 = 0, $$07284 = 0, $$0748092 = 0, $$077 = 0, $$28291 = 0, $$378 = 0, $$phi$trans$insert = 0, $$phi$trans$insert88 = 0, $$pre = 0, $$pre89 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond86 = 0, $or$cond = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $3 = sp + 80|0;
 $4 = sp;
 dest=$4; stop=dest+68|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 _memset(($0|0),-1,1024)|0;
 $5 = ($2|0)>(0);
 if ($5) {
  $$07284 = 0;
  while(1) {
   $6 = (($1) + ($$07284)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $9 = (($4) + ($8<<2)|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($10) + 1)|0;
   HEAP32[$9>>2] = $11;
   $12 = (($$07284) + 1)|0;
   $exitcond86 = ($12|0)==($2|0);
   if ($exitcond86) {
    break;
   } else {
    $$07284 = $12;
   }
  }
  $$phi$trans$insert = ((($4)) + 4|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  HEAP32[$4>>2] = 0;
  $13 = ($$pre|0)>(2);
  if (!($13)) {
   $126 = $$pre;
   label = 6;
  }
 } else {
  HEAP32[$4>>2] = 0;
  $126 = 0;
  label = 6;
 }
 if ((label|0) == 6) {
  $14 = ((($4)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($15|0)>(4);
  if (!($16)) {
   $83 = ((($4)) + 12|0);
   $84 = HEAP32[$83>>2]|0;
   $85 = ($84|0)>(8);
   if (!($85)) {
    $86 = ((($4)) + 16|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = ($87|0)>(16);
    if (!($88)) {
     $89 = ((($4)) + 20|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ($90|0)>(32);
     if (!($91)) {
      $92 = ((($4)) + 24|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = ($93|0)>(64);
      if (!($94)) {
       $95 = ((($4)) + 28|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ($96|0)>(128);
       if (!($97)) {
        $98 = ((($4)) + 32|0);
        $99 = HEAP32[$98>>2]|0;
        $100 = ($99|0)>(256);
        if (!($100)) {
         $101 = ((($4)) + 36|0);
         $102 = HEAP32[$101>>2]|0;
         $103 = ($102|0)>(512);
         if (!($103)) {
          $104 = ((($4)) + 40|0);
          $105 = HEAP32[$104>>2]|0;
          $106 = ($105|0)>(1024);
          if (!($106)) {
           $107 = ((($4)) + 44|0);
           $108 = HEAP32[$107>>2]|0;
           $109 = ($108|0)>(2048);
           if (!($109)) {
            $110 = ((($4)) + 48|0);
            $111 = HEAP32[$110>>2]|0;
            $112 = ($111|0)>(4096);
            if (!($112)) {
             $113 = ((($4)) + 52|0);
             $114 = HEAP32[$113>>2]|0;
             $115 = ($114|0)>(8192);
             if (!($115)) {
              $116 = ((($4)) + 56|0);
              $117 = HEAP32[$116>>2]|0;
              $118 = ($117|0)>(16384);
              if (!($118)) {
               $119 = ((($4)) + 60|0);
               $120 = HEAP32[$119>>2]|0;
               $121 = ($120|0)>(32768);
               if (!($121)) {
                $122 = ((($3)) + 4|0);
                HEAP32[$122>>2] = 0;
                $123 = ((($0)) + 1026|0);
                HEAP16[$123>>1] = 0;
                $124 = ((($0)) + 1126|0);
                HEAP16[$124>>1] = 0;
                $125 = ($126|0)>(2);
                L23: do {
                 if (!($125)) {
                  $$0748092 = 0;$$28291 = 1;$19 = $126;$24 = $126;
                  while(1) {
                   $17 = (16 - ($$28291))|0;
                   $18 = $19 << $17;
                   $20 = (((($0)) + 1056|0) + ($$28291<<2)|0);
                   HEAP32[$20>>2] = $18;
                   $21 = (($$28291) + 1)|0;
                   $22 = ($21>>>0)<(16);
                   if (!($22)) {
                    break;
                   }
                   $23 = (($24) + ($$0748092))|0;
                   $25 = $19 << 1;
                   $$phi$trans$insert88 = (($4) + ($21<<2)|0);
                   $$pre89 = HEAP32[$$phi$trans$insert88>>2]|0;
                   $26 = (($3) + ($21<<2)|0);
                   HEAP32[$26>>2] = $25;
                   $27 = $25&65535;
                   $28 = (((($0)) + 1024|0) + ($21<<1)|0);
                   HEAP16[$28>>1] = $27;
                   $29 = $23&65535;
                   $30 = (((($0)) + 1124|0) + ($21<<1)|0);
                   HEAP16[$30>>1] = $29;
                   $31 = (($$pre89) + ($25))|0;
                   $32 = ($$pre89|0)!=(0);
                   $33 = 2 << $$28291;
                   $34 = ($31|0)>($33|0);
                   $or$cond = $32 & $34;
                   if ($or$cond) {
                    break L23;
                   } else {
                    $$0748092 = $23;$$28291 = $21;$19 = $31;$24 = $$pre89;
                   }
                  }
                  $35 = ((($0)) + 1120|0);
                  HEAP32[$35>>2] = 65536;
                  if (!($5)) {
                   $$071 = 1;
                   STACKTOP = sp;return ($$071|0);
                  }
                  $$378 = 0;
                  while(1) {
                   $36 = (($1) + ($$378)|0);
                   $37 = HEAP8[$36>>0]|0;
                   $38 = $37&255;
                   $39 = ($37<<24>>24)==(0);
                   if (!($39)) {
                    $40 = (($3) + ($38<<2)|0);
                    $41 = HEAP32[$40>>2]|0;
                    $42 = (((($0)) + 1024|0) + ($38<<1)|0);
                    $43 = HEAP16[$42>>1]|0;
                    $44 = $43&65535;
                    $45 = (($41) - ($44))|0;
                    $46 = (((($0)) + 1124|0) + ($38<<1)|0);
                    $47 = HEAP16[$46>>1]|0;
                    $48 = $47&65535;
                    $49 = (($45) + ($48))|0;
                    $50 = (((($0)) + 1156|0) + ($49)|0);
                    HEAP8[$50>>0] = $37;
                    $51 = $$378&65535;
                    $52 = (((($0)) + 1444|0) + ($49<<1)|0);
                    HEAP16[$52>>1] = $51;
                    $53 = ($37&255)<(10);
                    do {
                     if ($53) {
                      $54 = $41 >>> 1;
                      $55 = $54 & 21845;
                      $56 = $41 << 1;
                      $57 = $56 & 43690;
                      $58 = $55 | $57;
                      $59 = $58 >>> 2;
                      $60 = $59 & 13107;
                      $61 = $58 << 2;
                      $62 = $61 & 52428;
                      $63 = $60 | $62;
                      $64 = $63 >>> 4;
                      $65 = $64 & 3855;
                      $66 = $63 << 4;
                      $67 = $66 & 61680;
                      $68 = $65 | $67;
                      $69 = $68 >>> 8;
                      $70 = $68 << 8;
                      $71 = $70 & 65280;
                      $72 = $71 | $69;
                      $73 = (16 - ($38))|0;
                      $74 = $72 >>> $73;
                      $75 = ($74|0)<(512);
                      if (!($75)) {
                       break;
                      }
                      $76 = $49&65535;
                      $77 = 1 << $38;
                      $$077 = $74;
                      while(1) {
                       $78 = (($0) + ($$077<<1)|0);
                       HEAP16[$78>>1] = $76;
                       $79 = (($$077) + ($77))|0;
                       $80 = ($79|0)<(512);
                       if ($80) {
                        $$077 = $79;
                       } else {
                        break;
                       }
                      }
                     }
                    } while(0);
                    $81 = (($41) + 1)|0;
                    HEAP32[$40>>2] = $81;
                   }
                   $82 = (($$378) + 1)|0;
                   $exitcond = ($82|0)==($2|0);
                   if ($exitcond) {
                    $$071 = 1;
                    break;
                   } else {
                    $$378 = $82;
                   }
                  }
                  STACKTOP = sp;return ($$071|0);
                 }
                } while(0);
                HEAP32[36596] = 121129;
                $$071 = 0;
                STACKTOP = sp;return ($$071|0);
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 }
 ___assert_fail((122178|0),(121322|0),1651,(122199|0));
 // unreachable;
 return (0)|0;
}
function _zhuffman_decode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$038 = 0, $$038$sink44 = 0, $$pre = 0, $$pre$i = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(16);
 $5 = ((($0)) + 12|0);
 L1: do {
  if ($4) {
   $6 = ((($0)) + 4|0);
   $$pre$i = HEAP32[$5>>2]|0;
   $10 = $$pre$i;$8 = $3;
   while(1) {
    $7 = 1 << $8;
    $9 = ($10>>>0)<($7>>>0);
    if (!($9)) {
     break;
    }
    $11 = HEAP32[$0>>2]|0;
    $12 = HEAP32[$6>>2]|0;
    $13 = ($11>>>0)<($12>>>0);
    if ($13) {
     $14 = ((($11)) + 1|0);
     HEAP32[$0>>2] = $14;
     $15 = HEAP8[$11>>0]|0;
     $16 = $15&255;
     $$0$i$i = $16;
    } else {
     $$0$i$i = 0;
    }
    $17 = $$0$i$i << $8;
    $18 = $17 | $10;
    HEAP32[$5>>2] = $18;
    $19 = (($8) + 8)|0;
    HEAP32[$2>>2] = $19;
    $20 = ($8|0)<(17);
    if ($20) {
     $10 = $18;$8 = $19;
    } else {
     $22 = $18;$70 = $19;
     break L1;
    }
   }
   ___assert_fail((122010|0),(121322|0),1713,(122047|0));
   // unreachable;
  } else {
   $$pre = HEAP32[$5>>2]|0;
   $22 = $$pre;$70 = $3;
  }
 } while(0);
 $21 = $22 & 511;
 $23 = (($1) + ($21<<1)|0);
 $24 = HEAP16[$23>>1]|0;
 $25 = $24&65535;
 $26 = ($24<<16>>16)==(-1);
 if ($26) {
  $30 = $22 >>> 1;
  $31 = $30 & 21845;
  $32 = $22 << 1;
  $33 = $32 & 43690;
  $34 = $31 | $33;
  $35 = $34 >>> 2;
  $36 = $35 & 13107;
  $37 = $34 << 2;
  $38 = $37 & 52428;
  $39 = $36 | $38;
  $40 = $39 >>> 4;
  $41 = $40 & 3855;
  $42 = $39 << 4;
  $43 = $42 & 61680;
  $44 = $41 | $43;
  $45 = $44 >>> 8;
  $46 = $44 << 8;
  $47 = $46 & 65280;
  $48 = $47 | $45;
  $$038 = 10;
  while(1) {
   $49 = (((($1)) + 1056|0) + ($$038<<2)|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($48|0)<($50|0);
   $52 = (($$038) + 1)|0;
   if ($51) {
    break;
   } else {
    $$038 = $52;
   }
  }
  $53 = ($$038|0)==(16);
  if ($53) {
   $$0 = -1;
   return ($$0|0);
  }
  $54 = (16 - ($$038))|0;
  $55 = $48 >>> $54;
  $56 = (((($1)) + 1024|0) + ($$038<<1)|0);
  $57 = HEAP16[$56>>1]|0;
  $58 = $57&65535;
  $59 = (($55) - ($58))|0;
  $60 = (((($1)) + 1124|0) + ($$038<<1)|0);
  $61 = HEAP16[$60>>1]|0;
  $62 = $61&65535;
  $63 = (($59) + ($62))|0;
  $64 = (((($1)) + 1156|0) + ($63)|0);
  $65 = HEAP8[$64>>0]|0;
  $66 = $65&255;
  $67 = ($$038|0)==($66|0);
  if ($67) {
   $$038$sink44 = $$038;$$sink = $63;
  } else {
   ___assert_fail((122146|0),(121322|0),1750,(122162|0));
   // unreachable;
  }
 } else {
  $27 = (((($1)) + 1156|0) + ($25)|0);
  $28 = HEAP8[$27>>0]|0;
  $29 = $28&255;
  $$038$sink44 = $29;$$sink = $25;
 }
 $68 = $22 >>> $$038$sink44;
 HEAP32[$5>>2] = $68;
 $69 = (($70) - ($$038$sink44))|0;
 HEAP32[$2>>2] = $69;
 $71 = (((($1)) + 1444|0) + ($$sink<<1)|0);
 $72 = HEAP16[$71>>1]|0;
 $73 = $72&65535;
 $$0 = $73;
 return ($$0|0);
}
function _decode_jpeg_header($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i16 = 0, $$0$i$i$i22 = 0, $$0$i$i$i28 = 0, $$0$i$i9$i = 0, $$0$i$i9$i18 = 0, $$0$i$i9$i24 = 0, $$0$i$i9$i30 = 0, $$0$i161$i = 0, $$0$i181$i = 0, $$0$i183$i = 0, $$0$i3$i$i = 0, $$0$i3$i169$i = 0, $$0$i3$i177$i = 0, $$015 = 0, $$0154$lcssa$i = 0, $$0154206$i = 0, $$0155$lcssa$i = 0;
 var $$0155205$i = 0, $$0157216$i = 0, $$046 = 0, $$08$i20 = 0, $$08$i26$ph$sink = 0, $$1$i = 0, $$1158211$i = 0, $$2204$i = 0, $$3201$i = 0, $$4200$i = 0, $$4200$in$i = 0, $$lcssa$i = 0, $$op$i$i = 0, $$op$i167$i = 0, $$op$i175$i = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i166$i = 0, $$pre$i174$i = 0, $$pre229$i = 0;
 var $$pre231$i = 0, $$pre233$i = 0, $$pre235$i = 0, $$pre237$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0;
 var $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0;
 var $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0;
 var $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0;
 var $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0;
 var $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0;
 var $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0;
 var $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0;
 var $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond$i = 0, $exitcond227$i = 0, $or$cond$i = 0, $or$cond159$i = 0, $phitmp$i$i = 0, $phitmp$i163$i = 0, $phitmp$i171$i = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 13980|0);
 HEAP8[$2>>0] = -1;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $9 = ((($0)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ((($0)) + 24|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($10>>>0)<($12>>>0);
  if ($13) {
   $14 = ((($10)) + 1|0);
   HEAP32[$9>>2] = $14;
   $15 = HEAP8[$10>>0]|0;
   $16 = $15&255;
   $$0$i$i$i = $16;
  } else {
   $$0$i$i$i = 0;
  }
 } else {
  $6 = (_fgetc($4)|0);
  $7 = ($6|0)==(-1);
  $8 = $7 ? 0 : $6;
  $$0$i$i$i = $8;
 }
 $17 = $$0$i$i$i&255;
 $18 = ($17<<24>>24)==(-1);
 L6: do {
  if ($18) {
   $19 = ((($0)) + 20|0);
   $20 = ((($0)) + 24|0);
   L8: while(1) {
    $21 = HEAP32[$3>>2]|0;
    $22 = ($21|0)==(0|0);
    if ($22) {
     $26 = HEAP32[$19>>2]|0;
     $27 = HEAP32[$20>>2]|0;
     $28 = ($26>>>0)<($27>>>0);
     if ($28) {
      $29 = ((($26)) + 1|0);
      HEAP32[$19>>2] = $29;
      $30 = HEAP8[$26>>0]|0;
      $31 = $30&255;
      $$0$i$i9$i = $31;
     } else {
      $$0$i$i9$i = 0;
     }
    } else {
     $23 = (_fgetc($21)|0);
     $24 = ($23|0)==(-1);
     $25 = $24 ? 0 : $23;
     $$0$i$i9$i = $25;
    }
    $32 = $$0$i$i9$i&255;
    switch ($32<<24>>24) {
    case -1:  {
     break;
    }
    case -40:  {
     break L8;
     break;
    }
    default: {
     break L6;
    }
    }
   }
   $33 = ($1|0)==(1);
   if ($33) {
    $$015 = 1;
    return ($$015|0);
   }
   $34 = HEAP8[$2>>0]|0;
   $35 = ($34<<24>>24)==(-1);
   if ($35) {
    $36 = HEAP32[$3>>2]|0;
    $37 = ($36|0)==(0|0);
    if ($37) {
     $41 = HEAP32[$19>>2]|0;
     $42 = HEAP32[$20>>2]|0;
     $43 = ($41>>>0)<($42>>>0);
     if ($43) {
      $44 = ((($41)) + 1|0);
      HEAP32[$19>>2] = $44;
      $45 = HEAP8[$41>>0]|0;
      $46 = $45&255;
      $$0$i$i$i16 = $46;
     } else {
      $$0$i$i$i16 = 0;
     }
    } else {
     $38 = (_fgetc($36)|0);
     $39 = ($38|0)==(-1);
     $40 = $39 ? 0 : $38;
     $$0$i$i$i16 = $40;
    }
    $47 = $$0$i$i$i16&255;
    $48 = ($47<<24>>24)==(-1);
    if ($48) {
     while(1) {
      $49 = HEAP32[$3>>2]|0;
      $50 = ($49|0)==(0|0);
      if ($50) {
       $54 = HEAP32[$19>>2]|0;
       $55 = HEAP32[$20>>2]|0;
       $56 = ($54>>>0)<($55>>>0);
       if ($56) {
        $57 = ((($54)) + 1|0);
        HEAP32[$19>>2] = $57;
        $58 = HEAP8[$54>>0]|0;
        $59 = $58&255;
        $$0$i$i9$i18 = $59;
       } else {
        $$0$i$i9$i18 = 0;
       }
      } else {
       $51 = (_fgetc($49)|0);
       $52 = ($51|0)==(-1);
       $53 = $52 ? 0 : $51;
       $$0$i$i9$i18 = $53;
      }
      $60 = $$0$i$i9$i18&255;
      $61 = ($60<<24>>24)==(-1);
      if (!($61)) {
       $$08$i20 = $60;
       break;
      }
     }
    } else {
     $$08$i20 = -1;
    }
   } else {
    HEAP8[$2>>0] = -1;
    $$08$i20 = $34;
   }
   $62 = $$08$i20&255;
   $63 = $62 | 1;
   $64 = ($63|0)==(193);
   L36: do {
    if (!($64)) {
     $$046 = $62;
     L38: while(1) {
      $65 = (_process_marker($0,$$046)|0);
      $66 = ($65|0)==(0);
      if ($66) {
       $$015 = 0;
       label = 149;
       break;
      }
      $67 = HEAP8[$2>>0]|0;
      $68 = ($67<<24>>24)==(-1);
      L41: do {
       if ($68) {
        $69 = HEAP32[$3>>2]|0;
        $70 = ($69|0)==(0|0);
        if ($70) {
         $74 = HEAP32[$19>>2]|0;
         $75 = HEAP32[$20>>2]|0;
         $76 = ($74>>>0)<($75>>>0);
         if ($76) {
          $77 = ((($74)) + 1|0);
          HEAP32[$19>>2] = $77;
          $78 = HEAP8[$74>>0]|0;
          $79 = $78&255;
          $$0$i$i$i22 = $79;
         } else {
          $$0$i$i$i22 = 0;
         }
        } else {
         $71 = (_fgetc($69)|0);
         $72 = ($71|0)==(-1);
         $73 = $72 ? 0 : $71;
         $$0$i$i$i22 = $73;
        }
        $80 = $$0$i$i$i22&255;
        $81 = ($80<<24>>24)==(-1);
        if ($81) {
         while(1) {
          $82 = HEAP32[$3>>2]|0;
          $83 = ($82|0)==(0|0);
          if ($83) {
           $87 = HEAP32[$19>>2]|0;
           $88 = HEAP32[$20>>2]|0;
           $89 = ($87>>>0)<($88>>>0);
           if ($89) {
            $90 = ((($87)) + 1|0);
            HEAP32[$19>>2] = $90;
            $91 = HEAP8[$87>>0]|0;
            $92 = $91&255;
            $$0$i$i9$i24 = $92;
           } else {
            $$0$i$i9$i24 = 0;
           }
          } else {
           $84 = (_fgetc($82)|0);
           $85 = ($84|0)==(-1);
           $86 = $85 ? 0 : $84;
           $$0$i$i9$i24 = $86;
          }
          $93 = $$0$i$i9$i24&255;
          $94 = ($93<<24>>24)==(-1);
          if (!($94)) {
           $$08$i26$ph$sink = $93;
           break L41;
          }
         }
        }
        while(1) {
         $95 = HEAP32[$3>>2]|0;
         $96 = ($95|0)==(0|0);
         if ($96) {
          $98 = HEAP32[$19>>2]|0;
          $99 = HEAP32[$20>>2]|0;
          $100 = ($98>>>0)>=($99>>>0);
          $101 = $100&1;
          $$0$i = $101;
         } else {
          $97 = (_feof($95)|0);
          $$0$i = $97;
         }
         $102 = ($$0$i|0)==(0);
         if (!($102)) {
          break L38;
         }
         $103 = HEAP8[$2>>0]|0;
         $104 = ($103<<24>>24)==(-1);
         if (!($104)) {
          label = 50;
          break;
         }
         $105 = HEAP32[$3>>2]|0;
         $106 = ($105|0)==(0|0);
         if ($106) {
          $110 = HEAP32[$19>>2]|0;
          $111 = HEAP32[$20>>2]|0;
          $112 = ($110>>>0)<($111>>>0);
          if ($112) {
           $113 = ((($110)) + 1|0);
           HEAP32[$19>>2] = $113;
           $114 = HEAP8[$110>>0]|0;
           $115 = $114&255;
           $$0$i$i$i28 = $115;
          } else {
           $$0$i$i$i28 = 0;
          }
         } else {
          $107 = (_fgetc($105)|0);
          $108 = ($107|0)==(-1);
          $109 = $108 ? 0 : $107;
          $$0$i$i$i28 = $109;
         }
         $116 = $$0$i$i$i28&255;
         $117 = ($116<<24>>24)==(-1);
         if ($117) {
          break;
         }
        }
        if ((label|0) == 50) {
         label = 0;
         HEAP8[$2>>0] = -1;
         $$08$i26$ph$sink = $103;
         break;
        }
        while(1) {
         $118 = HEAP32[$3>>2]|0;
         $119 = ($118|0)==(0|0);
         if ($119) {
          $123 = HEAP32[$19>>2]|0;
          $124 = HEAP32[$20>>2]|0;
          $125 = ($123>>>0)<($124>>>0);
          if ($125) {
           $126 = ((($123)) + 1|0);
           HEAP32[$19>>2] = $126;
           $127 = HEAP8[$123>>0]|0;
           $128 = $127&255;
           $$0$i$i9$i30 = $128;
          } else {
           $$0$i$i9$i30 = 0;
          }
         } else {
          $120 = (_fgetc($118)|0);
          $121 = ($120|0)==(-1);
          $122 = $121 ? 0 : $120;
          $$0$i$i9$i30 = $122;
         }
         $129 = $$0$i$i9$i30&255;
         $130 = ($129<<24>>24)==(-1);
         if (!($130)) {
          $$08$i26$ph$sink = $129;
          break;
         }
        }
       } else {
        HEAP8[$2>>0] = -1;
        $$08$i26$ph$sink = $67;
       }
      } while(0);
      $131 = $$08$i26$ph$sink&255;
      $132 = $131 | 1;
      $133 = ($132|0)==(193);
      if ($133) {
       break L36;
      } else {
       $$046 = $131;
      }
     }
     if ((label|0) == 149) {
      return ($$015|0);
     }
     HEAP32[36596] = 121129;
     $$015 = 0;
     return ($$015|0);
    }
   } while(0);
   $134 = HEAP32[$3>>2]|0;
   $135 = ($134|0)==(0|0);
   do {
    if ($135) {
     $136 = HEAP32[$19>>2]|0;
     $137 = HEAP32[$20>>2]|0;
     $138 = ($136>>>0)<($137>>>0);
     if ($138) {
      $139 = ((($136)) + 1|0);
      HEAP32[$19>>2] = $139;
      $140 = HEAP8[$136>>0]|0;
      $141 = $140&255;
      $phitmp$i$i = $141 << 8;
      $150 = $139;$151 = $137;$356 = $phitmp$i$i;
      label = 69;
     } else {
      $150 = $136;$151 = $137;$356 = 0;
      label = 69;
     }
    } else {
     $142 = (_fgetc($134)|0);
     $143 = ($142|0)==(-1);
     $$pre$i$i = HEAP32[$3>>2]|0;
     $$op$i$i = $142 << 8;
     $144 = $143 ? 0 : $$op$i$i;
     $145 = ($$pre$i$i|0)==(0|0);
     if ($145) {
      $$pre$i = HEAP32[$19>>2]|0;
      $$pre229$i = HEAP32[$20>>2]|0;
      $150 = $$pre$i;$151 = $$pre229$i;$356 = $144;
      label = 69;
      break;
     } else {
      $146 = (_fgetc($$pre$i$i)|0);
      $147 = ($146|0)==(-1);
      $148 = $147 ? 0 : $146;
      $$0$i3$i$i = $148;$156 = $144;
      break;
     }
    }
   } while(0);
   if ((label|0) == 69) {
    $149 = ($150>>>0)<($151>>>0);
    if ($149) {
     $152 = ((($150)) + 1|0);
     HEAP32[$19>>2] = $152;
     $153 = HEAP8[$150>>0]|0;
     $154 = $153&255;
     $$0$i3$i$i = $154;$156 = $356;
    } else {
     $$0$i3$i$i = 0;$156 = $356;
    }
   }
   $155 = (($$0$i3$i$i) + ($156))|0;
   $157 = ($155|0)<(11);
   if ($157) {
    HEAP32[36596] = 121129;
    $$015 = 0;
    return ($$015|0);
   }
   $158 = HEAP32[$3>>2]|0;
   $159 = ($158|0)==(0|0);
   if ($159) {
    $162 = HEAP32[$19>>2]|0;
    $163 = HEAP32[$20>>2]|0;
    $164 = ($162>>>0)<($163>>>0);
    if ($164) {
     $165 = ((($162)) + 1|0);
     HEAP32[$19>>2] = $165;
     $166 = HEAP8[$162>>0]|0;
     $167 = $166&255;
     $$0$i$i = $167;
     label = 77;
    }
   } else {
    $160 = (_fgetc($158)|0);
    $161 = ($160|0)==(-1);
    if (!($161)) {
     $$0$i$i = $160;
     label = 77;
    }
   }
   if ((label|0) == 77) {
    $168 = ($$0$i$i|0)==(8);
    if ($168) {
     $169 = HEAP32[$3>>2]|0;
     $170 = ($169|0)==(0|0);
     do {
      if ($170) {
       $171 = HEAP32[$19>>2]|0;
       $172 = HEAP32[$20>>2]|0;
       $173 = ($171>>>0)<($172>>>0);
       if ($173) {
        $174 = ((($171)) + 1|0);
        HEAP32[$19>>2] = $174;
        $175 = HEAP8[$171>>0]|0;
        $176 = $175&255;
        $phitmp$i163$i = $176 << 8;
        $185 = $174;$186 = $172;$357 = $phitmp$i163$i;
        label = 85;
       } else {
        $185 = $171;$186 = $172;$357 = 0;
        label = 85;
       }
      } else {
       $177 = (_fgetc($169)|0);
       $178 = ($177|0)==(-1);
       $$pre$i166$i = HEAP32[$3>>2]|0;
       $$op$i167$i = $177 << 8;
       $179 = $178 ? 0 : $$op$i167$i;
       $180 = ($$pre$i166$i|0)==(0|0);
       if ($180) {
        $$pre231$i = HEAP32[$19>>2]|0;
        $$pre233$i = HEAP32[$20>>2]|0;
        $185 = $$pre231$i;$186 = $$pre233$i;$357 = $179;
        label = 85;
        break;
       } else {
        $181 = (_fgetc($$pre$i166$i)|0);
        $182 = ($181|0)==(-1);
        $183 = $182 ? 0 : $181;
        $$0$i3$i169$i = $183;$191 = $179;
        break;
       }
      }
     } while(0);
     if ((label|0) == 85) {
      $184 = ($185>>>0)<($186>>>0);
      if ($184) {
       $187 = ((($185)) + 1|0);
       HEAP32[$19>>2] = $187;
       $188 = HEAP8[$185>>0]|0;
       $189 = $188&255;
       $$0$i3$i169$i = $189;$191 = $357;
      } else {
       $$0$i3$i169$i = 0;$191 = $357;
      }
     }
     $190 = (($$0$i3$i169$i) + ($191))|0;
     $192 = ((($0)) + 4|0);
     HEAP32[$192>>2] = $190;
     $193 = ($190|0)==(0);
     if ($193) {
      HEAP32[36596] = 122385;
      $$015 = 0;
      return ($$015|0);
     }
     $194 = HEAP32[$3>>2]|0;
     $195 = ($194|0)==(0|0);
     do {
      if ($195) {
       $196 = HEAP32[$19>>2]|0;
       $197 = HEAP32[$20>>2]|0;
       $198 = ($196>>>0)<($197>>>0);
       if ($198) {
        $199 = ((($196)) + 1|0);
        HEAP32[$19>>2] = $199;
        $200 = HEAP8[$196>>0]|0;
        $201 = $200&255;
        $phitmp$i171$i = $201 << 8;
        $210 = $199;$211 = $197;$358 = $phitmp$i171$i;
        label = 95;
       } else {
        $210 = $196;$211 = $197;$358 = 0;
        label = 95;
       }
      } else {
       $202 = (_fgetc($194)|0);
       $203 = ($202|0)==(-1);
       $$pre$i174$i = HEAP32[$3>>2]|0;
       $$op$i175$i = $202 << 8;
       $204 = $203 ? 0 : $$op$i175$i;
       $205 = ($$pre$i174$i|0)==(0|0);
       if ($205) {
        $$pre235$i = HEAP32[$19>>2]|0;
        $$pre237$i = HEAP32[$20>>2]|0;
        $210 = $$pre235$i;$211 = $$pre237$i;$358 = $204;
        label = 95;
        break;
       } else {
        $206 = (_fgetc($$pre$i174$i)|0);
        $207 = ($206|0)==(-1);
        $208 = $207 ? 0 : $206;
        $$0$i3$i177$i = $208;$216 = $204;
        break;
       }
      }
     } while(0);
     if ((label|0) == 95) {
      $209 = ($210>>>0)<($211>>>0);
      if ($209) {
       $212 = ((($210)) + 1|0);
       HEAP32[$19>>2] = $212;
       $213 = HEAP8[$210>>0]|0;
       $214 = $213&255;
       $$0$i3$i177$i = $214;$216 = $358;
      } else {
       $$0$i3$i177$i = 0;$216 = $358;
      }
     }
     $215 = (($$0$i3$i177$i) + ($216))|0;
     HEAP32[$0>>2] = $215;
     $217 = ($215|0)==(0);
     if ($217) {
      HEAP32[36596] = 121129;
      $$015 = 0;
      return ($$015|0);
     }
     $218 = HEAP32[$3>>2]|0;
     $219 = ($218|0)==(0|0);
     if ($219) {
      $223 = HEAP32[$19>>2]|0;
      $224 = HEAP32[$20>>2]|0;
      $225 = ($223>>>0)<($224>>>0);
      if ($225) {
       $226 = ((($223)) + 1|0);
       HEAP32[$19>>2] = $226;
       $227 = HEAP8[$223>>0]|0;
       $228 = $227&255;
       $230 = $228;
       label = 103;
      }
     } else {
      $220 = (_fgetc($218)|0);
      $221 = ($220|0)==(-1);
      $222 = $221 ? 0 : $220;
      $230 = $222;
      label = 103;
     }
     if ((label|0) == 103) {
      $229 = $230 | 2;
      $231 = ($229|0)==(3);
      if ($231) {
       $232 = ((($0)) + 8|0);
       HEAP32[$232>>2] = $230;
       $233 = ($230|0)>(0);
       if ($233) {
        $$0157216$i = 0;
        while(1) {
         $234 = (((((($0)) + 13748|0) + (($$0157216$i*56)|0)|0)) + 44|0);
         HEAP32[$234>>2] = 0;
         $235 = (((((($0)) + 13748|0) + (($$0157216$i*56)|0)|0)) + 52|0);
         HEAP32[$235>>2] = 0;
         $236 = (($$0157216$i) + 1)|0;
         $exitcond227$i = ($236|0)==($230|0);
         if ($exitcond227$i) {
          break;
         } else {
          $$0157216$i = $236;
         }
        }
       }
       $237 = ($230*3)|0;
       $238 = (($237) + 8)|0;
       $239 = ($155|0)==($238|0);
       if (!($239)) {
        HEAP32[36596] = 121129;
        $$015 = 0;
        return ($$015|0);
       }
       L156: do {
        if ($233) {
         $$1158211$i = 0;
         while(1) {
          $240 = HEAP32[$3>>2]|0;
          $241 = ($240|0)==(0|0);
          do {
           if ($241) {
            $245 = HEAP32[$19>>2]|0;
            $246 = HEAP32[$20>>2]|0;
            $247 = ($245>>>0)<($246>>>0);
            if (!($247)) {
             $$0$i183$i = 0;
             break;
            }
            $248 = ((($245)) + 1|0);
            HEAP32[$19>>2] = $248;
            $249 = HEAP8[$245>>0]|0;
            $250 = $249&255;
            $$0$i183$i = $250;
           } else {
            $242 = (_fgetc($240)|0);
            $243 = ($242|0)==(-1);
            $244 = $243 ? 0 : $242;
            $$0$i183$i = $244;
           }
          } while(0);
          $251 = (((($0)) + 13748|0) + (($$1158211$i*56)|0)|0);
          HEAP32[$251>>2] = $$0$i183$i;
          $252 = (($$1158211$i) + 1)|0;
          $253 = ($$0$i183$i|0)==($252|0);
          $254 = ($$0$i183$i|0)==($$1158211$i|0);
          $or$cond$i = $253 | $254;
          if (!($or$cond$i)) {
           label = 117;
           break;
          }
          $255 = HEAP32[$3>>2]|0;
          $256 = ($255|0)==(0|0);
          if ($256) {
           $260 = HEAP32[$19>>2]|0;
           $261 = HEAP32[$20>>2]|0;
           $262 = ($260>>>0)<($261>>>0);
           if (!($262)) {
            label = 121;
            break;
           }
           $264 = ((($260)) + 1|0);
           HEAP32[$19>>2] = $264;
           $265 = HEAP8[$260>>0]|0;
           $266 = $265&255;
           $$0$i181$i = $266;
          } else {
           $257 = (_fgetc($255)|0);
           $258 = ($257|0)==(-1);
           $259 = $258 ? 0 : $257;
           $$0$i181$i = $259;
          }
          $267 = $$0$i181$i >> 4;
          $268 = (((((($0)) + 13748|0) + (($$1158211$i*56)|0)|0)) + 4|0);
          HEAP32[$268>>2] = $267;
          $269 = ($267|0)==(0);
          $270 = ($$0$i181$i|0)>(79);
          $or$cond159$i = $270 | $269;
          if ($or$cond159$i) {
           break;
          }
          $271 = $$0$i181$i & 15;
          $272 = (((((($0)) + 13748|0) + (($$1158211$i*56)|0)|0)) + 8|0);
          HEAP32[$272>>2] = $271;
          $273 = (($271) + -1)|0;
          $274 = ($273>>>0)>(3);
          if ($274) {
           label = 126;
           break;
          }
          $275 = HEAP32[$3>>2]|0;
          $276 = ($275|0)==(0|0);
          do {
           if ($276) {
            $279 = HEAP32[$19>>2]|0;
            $280 = HEAP32[$20>>2]|0;
            $281 = ($279>>>0)<($280>>>0);
            if (!($281)) {
             label = 131;
             break;
            }
            $282 = ((($279)) + 1|0);
            HEAP32[$19>>2] = $282;
            $283 = HEAP8[$279>>0]|0;
            $284 = $283&255;
            $$0$i161$i = $284;
            label = 132;
           } else {
            $277 = (_fgetc($275)|0);
            $278 = ($277|0)==(-1);
            if ($278) {
             label = 131;
            } else {
             $$0$i161$i = $277;
             label = 132;
            }
           }
          } while(0);
          if ((label|0) == 131) {
           label = 0;
           $285 = (((((($0)) + 13748|0) + (($$1158211$i*56)|0)|0)) + 12|0);
           HEAP32[$285>>2] = 0;
          }
          else if ((label|0) == 132) {
           label = 0;
           $286 = (((((($0)) + 13748|0) + (($$1158211$i*56)|0)|0)) + 12|0);
           HEAP32[$286>>2] = $$0$i161$i;
           $287 = ($$0$i161$i|0)>(3);
           if ($287) {
            label = 133;
            break;
           }
          }
          $288 = HEAP32[$232>>2]|0;
          $289 = ($252|0)<($288|0);
          if ($289) {
           $$1158211$i = $252;
          } else {
           $$lcssa$i = $288;
           break L156;
          }
         }
         if ((label|0) == 117) {
          HEAP32[36596] = 121129;
          $$015 = 0;
          return ($$015|0);
         }
         else if ((label|0) == 121) {
          $263 = (((((($0)) + 13748|0) + (($$1158211$i*56)|0)|0)) + 4|0);
          HEAP32[$263>>2] = 0;
         }
         else if ((label|0) == 126) {
          HEAP32[36596] = 121129;
          $$015 = 0;
          return ($$015|0);
         }
         else if ((label|0) == 133) {
          HEAP32[36596] = 121129;
          $$015 = 0;
          return ($$015|0);
         }
         HEAP32[36596] = 121129;
         $$015 = 0;
         return ($$015|0);
        } else {
         $$lcssa$i = $230;
        }
       } while(0);
       $290 = ($1|0)==(0);
       if (!($290)) {
        $$015 = 1;
        return ($$015|0);
       }
       $291 = HEAP32[$0>>2]|0;
       $292 = (1073741824 / ($291>>>0))&-1;
       $293 = (($292>>>0) / ($$lcssa$i>>>0))&-1;
       $294 = HEAP32[$192>>2]|0;
       $295 = ($293>>>0)<($294>>>0);
       if ($295) {
        HEAP32[36596] = 121820;
        $$015 = 0;
        return ($$015|0);
       }
       $296 = ($$lcssa$i|0)>(0);
       if ($296) {
        $$0154206$i = 1;$$0155205$i = 1;$$2204$i = 0;
        while(1) {
         $297 = (((((($0)) + 13748|0) + (($$2204$i*56)|0)|0)) + 4|0);
         $298 = HEAP32[$297>>2]|0;
         $299 = ($298|0)>($$0155205$i|0);
         $spec$select$i = $299 ? $298 : $$0155205$i;
         $300 = (((((($0)) + 13748|0) + (($$2204$i*56)|0)|0)) + 8|0);
         $301 = HEAP32[$300>>2]|0;
         $302 = ($301|0)>($$0154206$i|0);
         $$1$i = $302 ? $301 : $$0154206$i;
         $303 = (($$2204$i) + 1)|0;
         $exitcond$i = ($303|0)==($$lcssa$i|0);
         if ($exitcond$i) {
          $$0154$lcssa$i = $$1$i;$$0155$lcssa$i = $spec$select$i;
          break;
         } else {
          $$0154206$i = $$1$i;$$0155205$i = $spec$select$i;$$2204$i = $303;
         }
        }
       } else {
        $$0154$lcssa$i = 1;$$0155$lcssa$i = 1;
       }
       $304 = ((($0)) + 13724|0);
       HEAP32[$304>>2] = $$0155$lcssa$i;
       $305 = ((($0)) + 13728|0);
       HEAP32[$305>>2] = $$0154$lcssa$i;
       $306 = $$0155$lcssa$i << 3;
       $307 = ((($0)) + 13740|0);
       HEAP32[$307>>2] = $306;
       $308 = $$0154$lcssa$i << 3;
       $309 = ((($0)) + 13744|0);
       HEAP32[$309>>2] = $308;
       $310 = (($291) + -1)|0;
       $311 = (($310) + ($306))|0;
       $312 = (($311>>>0) / ($306>>>0))&-1;
       $313 = ((($0)) + 13732|0);
       HEAP32[$313>>2] = $312;
       $314 = (($294) + -1)|0;
       $315 = (($314) + ($308))|0;
       $316 = (($315>>>0) / ($308>>>0))&-1;
       $317 = ((($0)) + 13736|0);
       HEAP32[$317>>2] = $316;
       if (!($296)) {
        $$015 = 1;
        return ($$015|0);
       }
       $318 = (($$0155$lcssa$i) + -1)|0;
       $319 = (($$0154$lcssa$i) + -1)|0;
       $320 = $312 << 3;
       $321 = $316 << 3;
       $$3201$i = 0;
       while(1) {
        $322 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 4|0);
        $323 = HEAP32[$322>>2]|0;
        $324 = Math_imul($323, $291)|0;
        $325 = (($318) + ($324))|0;
        $326 = (($325>>>0) / ($$0155$lcssa$i>>>0))&-1;
        $327 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 28|0);
        HEAP32[$327>>2] = $326;
        $328 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 8|0);
        $329 = HEAP32[$328>>2]|0;
        $330 = Math_imul($329, $294)|0;
        $331 = (($319) + ($330))|0;
        $332 = (($331>>>0) / ($$0154$lcssa$i>>>0))&-1;
        $333 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 32|0);
        HEAP32[$333>>2] = $332;
        $334 = Math_imul($323, $320)|0;
        $335 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 36|0);
        HEAP32[$335>>2] = $334;
        $336 = Math_imul($329, $321)|0;
        $337 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 40|0);
        HEAP32[$337>>2] = $336;
        $338 = Math_imul($336, $334)|0;
        $339 = $338 | 15;
        $340 = (_malloc($339)|0);
        $341 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 48|0);
        HEAP32[$341>>2] = $340;
        $342 = ($340|0)==(0|0);
        if ($342) {
         break;
        }
        $348 = $340;
        $349 = (($348) + 15)|0;
        $350 = $349 & -16;
        $351 = $350;
        $352 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 44|0);
        HEAP32[$352>>2] = $351;
        $353 = (((((($0)) + 13748|0) + (($$3201$i*56)|0)|0)) + 52|0);
        HEAP32[$353>>2] = 0;
        $354 = (($$3201$i) + 1)|0;
        $355 = ($354|0)<($$lcssa$i|0);
        if ($355) {
         $$3201$i = $354;
        } else {
         $$015 = 1;
         label = 149;
         break;
        }
       }
       if ((label|0) == 149) {
        return ($$015|0);
       }
       $343 = ($$3201$i|0)==(0);
       if (!($343)) {
        $$4200$in$i = $$3201$i;
        while(1) {
         $$4200$i = (($$4200$in$i) + -1)|0;
         $344 = (((((($0)) + 13748|0) + (($$4200$i*56)|0)|0)) + 48|0);
         $345 = HEAP32[$344>>2]|0;
         _free($345);
         $346 = (((((($0)) + 13748|0) + (($$4200$i*56)|0)|0)) + 44|0);
         HEAP32[$346>>2] = 0;
         $347 = ($$4200$in$i|0)>(1);
         if ($347) {
          $$4200$in$i = $$4200$i;
         } else {
          break;
         }
        }
       }
       HEAP32[36596] = 121182;
       $$015 = 0;
       return ($$015|0);
      }
     }
     HEAP32[36596] = 121129;
     $$015 = 0;
     return ($$015|0);
    }
   }
   HEAP32[36596] = 122347;
   $$015 = 0;
   return ($$015|0);
  }
 } while(0);
 HEAP32[36596] = 121129;
 $$015 = 0;
 return ($$015|0);
}
function _decode_block($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i55 = 0, $$044 = 0, $$2 = 0, $$24659 = 0, $$pre = 0, $$pre$i$pre = 0, $$pre$i49$pre = 0, $$pre$phi63Z2D = 0, $$pre$phi65Z2D = 0, $$pre$phiZ2D = 0, $$pre62 = 0, $$pre64 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $spec$select$i = 0, $spec$select$i50 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $5 = (_decode($0,$2)|0);
 $6 = ($5|0)<(0);
 if ($6) {
  HEAP32[36596] = 121129;
  $$2 = 0;
  return ($$2|0);
 }
 dest=$1; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $7 = ($5|0)==(0);
 if ($7) {
  $$pre = ((($0)) + 13976|0);
  $$pre62 = ((($0)) + 13972|0);
  $$pre$phi63Z2D = $$pre62;$$pre$phiZ2D = $$pre;$66 = 0;
 } else {
  $8 = (($5) + -1)|0;
  $9 = 1 << $8;
  $10 = ((($0)) + 13976|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)<($5|0);
  L8: do {
   if ($12) {
    $13 = ((($0)) + 13984|0);
    $14 = ((($0)) + 16|0);
    $15 = ((($0)) + 13972|0);
    $16 = ((($0)) + 20|0);
    $17 = ((($0)) + 24|0);
    L10: while(1) {
     $18 = HEAP32[$13>>2]|0;
     $19 = ($18|0)==(0);
     do {
      if ($19) {
       $20 = HEAP32[$14>>2]|0;
       $21 = ($20|0)==(0|0);
       if ($21) {
        $24 = HEAP32[$16>>2]|0;
        $25 = HEAP32[$17>>2]|0;
        $26 = ($24>>>0)<($25>>>0);
        if (!($26)) {
         $48 = 0;
         break;
        }
        $27 = ((($24)) + 1|0);
        HEAP32[$16>>2] = $27;
        $28 = HEAP8[$24>>0]|0;
        $29 = $28&255;
        $31 = $29;
       } else {
        $22 = (_fgetc($20)|0);
        $23 = ($22|0)==(-1);
        if ($23) {
         $48 = 0;
         break;
        } else {
         $31 = $22;
        }
       }
       $30 = ($31|0)==(255);
       if ($30) {
        $32 = HEAP32[$14>>2]|0;
        $33 = ($32|0)==(0|0);
        if ($33) {
         $36 = HEAP32[$16>>2]|0;
         $37 = HEAP32[$17>>2]|0;
         $38 = ($36>>>0)<($37>>>0);
         if (!($38)) {
          $48 = 255;
          break;
         }
         $39 = ((($36)) + 1|0);
         HEAP32[$16>>2] = $39;
         $40 = HEAP8[$36>>0]|0;
         $41 = $40&255;
         $$0$i55 = $41;
        } else {
         $34 = (_fgetc($32)|0);
         $35 = ($34|0)==(-1);
         if ($35) {
          $48 = 255;
          break;
         } else {
          $$0$i55 = $34;
         }
        }
        $42 = ($$0$i55|0)==(0);
        if ($42) {
         $48 = 255;
        } else {
         break L10;
        }
       } else {
        $48 = $31;
       }
      } else {
       $48 = 0;
      }
     } while(0);
     $45 = HEAP32[$15>>2]|0;
     $46 = $45 << 8;
     $47 = $46 | $48;
     HEAP32[$15>>2] = $47;
     $49 = HEAP32[$10>>2]|0;
     $50 = (($49) + 8)|0;
     HEAP32[$10>>2] = $50;
     $51 = ($49|0)<(17);
     if (!($51)) {
      $$pre$phi65Z2D = $15;$54 = $50;
      break L8;
     }
    }
    $43 = $$0$i55&255;
    $44 = ((($0)) + 13980|0);
    HEAP8[$44>>0] = $43;
    HEAP32[$13>>2] = 1;
    $$pre$i49$pre = HEAP32[$10>>2]|0;
    $$pre$phi65Z2D = $15;$54 = $$pre$i49$pre;
   } else {
    $$pre64 = ((($0)) + 13972|0);
    $$pre$phi65Z2D = $$pre64;$54 = $11;
   }
  } while(0);
  $52 = HEAP32[$$pre$phi65Z2D>>2]|0;
  $53 = (($54) - ($5))|0;
  $55 = $52 >>> $53;
  $56 = (1648 + ($5<<2)|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = $55 & $57;
  HEAP32[$10>>2] = $53;
  $59 = ($58>>>0)<($9>>>0);
  $60 = -1 << $5;
  $61 = (($60) + 1)|0;
  $62 = $59 ? $61 : 0;
  $spec$select$i50 = (($62) + ($58))|0;
  $$pre$phi63Z2D = $$pre$phi65Z2D;$$pre$phiZ2D = $10;$66 = $spec$select$i50;
 }
 $63 = (((((($0)) + 13748|0) + (($4*56)|0)|0)) + 24|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($64) + ($66))|0;
 HEAP32[$63>>2] = $65;
 $67 = $65&65535;
 HEAP16[$1>>1] = $67;
 $68 = ((($0)) + 13984|0);
 $69 = ((($0)) + 16|0);
 $70 = ((($0)) + 20|0);
 $71 = ((($0)) + 24|0);
 $72 = ((($0)) + 13980|0);
 $$044 = 1;
 while(1) {
  $73 = (_decode($0,$3)|0);
  $74 = ($73|0)<(0);
  if ($74) {
   label = 24;
   break;
  }
  $75 = $73 & 15;
  $76 = ($75|0)==(0);
  if ($76) {
   $133 = ($73|0)==(240);
   $134 = (($$044) + 16)|0;
   if ($133) {
    $$24659 = $134;
   } else {
    $$2 = 1;
    label = 44;
    break;
   }
  } else {
   $77 = $73 >>> 4;
   $78 = (($77) + ($$044))|0;
   $79 = (($75) + -1)|0;
   $80 = 1 << $79;
   $81 = HEAP32[$$pre$phiZ2D>>2]|0;
   $82 = ($81|0)<($75|0);
   L36: do {
    if ($82) {
     L38: while(1) {
      $83 = HEAP32[$68>>2]|0;
      $84 = ($83|0)==(0);
      do {
       if ($84) {
        $85 = HEAP32[$69>>2]|0;
        $86 = ($85|0)==(0|0);
        if ($86) {
         $89 = HEAP32[$70>>2]|0;
         $90 = HEAP32[$71>>2]|0;
         $91 = ($89>>>0)<($90>>>0);
         if (!($91)) {
          $112 = 0;
          break;
         }
         $92 = ((($89)) + 1|0);
         HEAP32[$70>>2] = $92;
         $93 = HEAP8[$89>>0]|0;
         $94 = $93&255;
         $96 = $94;
        } else {
         $87 = (_fgetc($85)|0);
         $88 = ($87|0)==(-1);
         if ($88) {
          $112 = 0;
          break;
         } else {
          $96 = $87;
         }
        }
        $95 = ($96|0)==(255);
        if ($95) {
         $97 = HEAP32[$69>>2]|0;
         $98 = ($97|0)==(0|0);
         if ($98) {
          $101 = HEAP32[$70>>2]|0;
          $102 = HEAP32[$71>>2]|0;
          $103 = ($101>>>0)<($102>>>0);
          if (!($103)) {
           $112 = 255;
           break;
          }
          $104 = ((($101)) + 1|0);
          HEAP32[$70>>2] = $104;
          $105 = HEAP8[$101>>0]|0;
          $106 = $105&255;
          $$0$i = $106;
         } else {
          $99 = (_fgetc($97)|0);
          $100 = ($99|0)==(-1);
          if ($100) {
           $112 = 255;
           break;
          } else {
           $$0$i = $99;
          }
         }
         $107 = ($$0$i|0)==(0);
         if ($107) {
          $112 = 255;
         } else {
          break L38;
         }
        } else {
         $112 = $96;
        }
       } else {
        $112 = 0;
       }
      } while(0);
      $109 = HEAP32[$$pre$phi63Z2D>>2]|0;
      $110 = $109 << 8;
      $111 = $110 | $112;
      HEAP32[$$pre$phi63Z2D>>2] = $111;
      $113 = HEAP32[$$pre$phiZ2D>>2]|0;
      $114 = (($113) + 8)|0;
      HEAP32[$$pre$phiZ2D>>2] = $114;
      $115 = ($113|0)<(17);
      if (!($115)) {
       $118 = $114;
       break L36;
      }
     }
     $108 = $$0$i&255;
     HEAP8[$72>>0] = $108;
     HEAP32[$68>>2] = 1;
     $$pre$i$pre = HEAP32[$$pre$phiZ2D>>2]|0;
     $118 = $$pre$i$pre;
    } else {
     $118 = $81;
    }
   } while(0);
   $116 = HEAP32[$$pre$phi63Z2D>>2]|0;
   $117 = (($118) - ($75))|0;
   $119 = $116 >>> $117;
   $120 = (1648 + ($75<<2)|0);
   $121 = HEAP32[$120>>2]|0;
   $122 = $119 & $121;
   HEAP32[$$pre$phiZ2D>>2] = $117;
   $123 = ($122>>>0)<($80>>>0);
   $124 = -1 << $75;
   $125 = (($124) + 1)|0;
   $126 = $123 ? $125 : 0;
   $spec$select$i = (($126) + ($122))|0;
   $127 = $spec$select$i&65535;
   $128 = (($78) + 1)|0;
   $129 = (1568 + ($78)|0);
   $130 = HEAP8[$129>>0]|0;
   $131 = $130&255;
   $132 = (($1) + ($131<<1)|0);
   HEAP16[$132>>1] = $127;
   $$24659 = $128;
  }
  $135 = ($$24659|0)<(64);
  if ($135) {
   $$044 = $$24659;
  } else {
   $$2 = 1;
   label = 44;
   break;
  }
 }
 if ((label|0) == 24) {
  HEAP32[36596] = 121129;
  $$2 = 0;
  return ($$2|0);
 }
 else if ((label|0) == 44) {
  return ($$2|0);
 }
 return (0)|0;
}
function _idct_block($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0273299 = 0, $$0275292 = 0, $$0276297 = 0, $$0277295 = 0, $$0301 = 0, $$1274293 = 0, $$1294 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0;
 var $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0;
 var $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0;
 var $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0;
 var $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond302 = 0, $spec$select$i = 0, $spec$select$i278 = 0, $spec$select$i280 = 0, $spec$select$i282 = 0, $spec$select$i284 = 0, $spec$select$i286 = 0, $spec$select$i288 = 0, $spec$select$i290 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $4 = sp;
 $$0273299 = $4;$$0276297 = $3;$$0277295 = $2;$$0301 = 0;
 while(1) {
  $5 = ((($$0277295)) + 16|0);
  $6 = HEAP16[$5>>1]|0;
  $7 = ((($$0277295)) + 32|0);
  $8 = HEAP16[$7>>1]|0;
  $9 = $6 | $8;
  $10 = ($9<<16>>16)==(0);
  if ($10) {
   $11 = ((($$0277295)) + 48|0);
   $12 = HEAP16[$11>>1]|0;
   $13 = ($12<<16>>16)==(0);
   if ($13) {
    $14 = ((($$0277295)) + 64|0);
    $15 = HEAP16[$14>>1]|0;
    $16 = ($15<<16>>16)==(0);
    if ($16) {
     $17 = ((($$0277295)) + 80|0);
     $18 = HEAP16[$17>>1]|0;
     $19 = ($18<<16>>16)==(0);
     if ($19) {
      $20 = ((($$0277295)) + 96|0);
      $21 = HEAP16[$20>>1]|0;
      $22 = ($21<<16>>16)==(0);
      if ($22) {
       $23 = ((($$0277295)) + 112|0);
       $24 = HEAP16[$23>>1]|0;
       $25 = ($24<<16>>16)==(0);
       if ($25) {
        $26 = HEAP16[$$0277295>>1]|0;
        $27 = $26 << 16 >> 16;
        $28 = HEAP8[$$0276297>>0]|0;
        $29 = $28&255;
        $30 = $27 << 2;
        $31 = Math_imul($30, $29)|0;
        $32 = ((($$0273299)) + 224|0);
        HEAP32[$32>>2] = $31;
        $33 = ((($$0273299)) + 192|0);
        HEAP32[$33>>2] = $31;
        $34 = ((($$0273299)) + 160|0);
        HEAP32[$34>>2] = $31;
        $35 = ((($$0273299)) + 128|0);
        HEAP32[$35>>2] = $31;
        $36 = ((($$0273299)) + 96|0);
        HEAP32[$36>>2] = $31;
        $37 = ((($$0273299)) + 64|0);
        HEAP32[$37>>2] = $31;
        $38 = ((($$0273299)) + 32|0);
        HEAP32[$38>>2] = $31;
        HEAP32[$$0273299>>2] = $31;
       } else {
        $40 = 0;
        label = 9;
       }
      } else {
       $40 = 0;
       label = 9;
      }
     } else {
      $40 = 0;
      label = 9;
     }
    } else {
     $40 = 0;
     label = 9;
    }
   } else {
    $40 = 0;
    label = 9;
   }
  } else {
   $40 = $8;
   label = 9;
  }
  if ((label|0) == 9) {
   label = 0;
   $39 = $40 << 16 >> 16;
   $41 = ((($$0276297)) + 16|0);
   $42 = HEAP8[$41>>0]|0;
   $43 = $42&255;
   $44 = Math_imul($43, $39)|0;
   $45 = ((($$0277295)) + 96|0);
   $46 = HEAP16[$45>>1]|0;
   $47 = $46 << 16 >> 16;
   $48 = ((($$0276297)) + 48|0);
   $49 = HEAP8[$48>>0]|0;
   $50 = $49&255;
   $51 = Math_imul($50, $47)|0;
   $52 = (($51) + ($44))|0;
   $53 = ($52*2217)|0;
   $54 = Math_imul($51, -7567)|0;
   $55 = (($53) + ($54))|0;
   $56 = ($44*3135)|0;
   $57 = (($53) + ($56))|0;
   $58 = HEAP16[$$0277295>>1]|0;
   $59 = $58 << 16 >> 16;
   $60 = HEAP8[$$0276297>>0]|0;
   $61 = $60&255;
   $62 = Math_imul($61, $59)|0;
   $63 = ((($$0277295)) + 64|0);
   $64 = HEAP16[$63>>1]|0;
   $65 = $64 << 16 >> 16;
   $66 = ((($$0276297)) + 32|0);
   $67 = HEAP8[$66>>0]|0;
   $68 = $67&255;
   $69 = Math_imul($68, $65)|0;
   $70 = (($69) + ($62))|0;
   $71 = $70 << 12;
   $72 = (($62) - ($69))|0;
   $73 = $72 << 12;
   $74 = (($71) - ($57))|0;
   $75 = (($73) - ($55))|0;
   $76 = ((($$0277295)) + 112|0);
   $77 = HEAP16[$76>>1]|0;
   $78 = $77 << 16 >> 16;
   $79 = ((($$0276297)) + 56|0);
   $80 = HEAP8[$79>>0]|0;
   $81 = $80&255;
   $82 = Math_imul($81, $78)|0;
   $83 = ((($$0277295)) + 80|0);
   $84 = HEAP16[$83>>1]|0;
   $85 = $84 << 16 >> 16;
   $86 = ((($$0276297)) + 40|0);
   $87 = HEAP8[$86>>0]|0;
   $88 = $87&255;
   $89 = Math_imul($88, $85)|0;
   $90 = ((($$0277295)) + 48|0);
   $91 = HEAP16[$90>>1]|0;
   $92 = $91 << 16 >> 16;
   $93 = ((($$0276297)) + 24|0);
   $94 = HEAP8[$93>>0]|0;
   $95 = $94&255;
   $96 = Math_imul($95, $92)|0;
   $97 = $6 << 16 >> 16;
   $98 = ((($$0276297)) + 8|0);
   $99 = HEAP8[$98>>0]|0;
   $100 = $99&255;
   $101 = Math_imul($100, $97)|0;
   $102 = (($96) + ($82))|0;
   $103 = (($101) + ($89))|0;
   $104 = (($101) + ($82))|0;
   $105 = (($96) + ($89))|0;
   $106 = (($103) + ($102))|0;
   $107 = ($106*4816)|0;
   $108 = ($82*1223)|0;
   $109 = ($89*8410)|0;
   $110 = ($96*12586)|0;
   $111 = ($101*6149)|0;
   $112 = Math_imul($104, -3685)|0;
   $113 = (($107) + ($112))|0;
   $114 = Math_imul($105, -10497)|0;
   $115 = (($107) + ($114))|0;
   $116 = Math_imul($102, -8034)|0;
   $117 = Math_imul($103, -1597)|0;
   $118 = (($117) + ($111))|0;
   $119 = (($118) + ($113))|0;
   $120 = (($116) + ($110))|0;
   $121 = (($120) + ($115))|0;
   $122 = (($117) + ($109))|0;
   $123 = (($122) + ($115))|0;
   $124 = (($116) + ($108))|0;
   $125 = (($124) + ($113))|0;
   $126 = (($57) + 512)|0;
   $127 = (($126) + ($71))|0;
   $128 = (($55) + 512)|0;
   $129 = (($128) + ($73))|0;
   $130 = (($75) + 512)|0;
   $131 = (($74) + 512)|0;
   $132 = (($119) + ($127))|0;
   $133 = $132 >> 10;
   HEAP32[$$0273299>>2] = $133;
   $134 = (($127) - ($119))|0;
   $135 = $134 >> 10;
   $136 = ((($$0273299)) + 224|0);
   HEAP32[$136>>2] = $135;
   $137 = (($121) + ($129))|0;
   $138 = $137 >> 10;
   $139 = ((($$0273299)) + 32|0);
   HEAP32[$139>>2] = $138;
   $140 = (($129) - ($121))|0;
   $141 = $140 >> 10;
   $142 = ((($$0273299)) + 192|0);
   HEAP32[$142>>2] = $141;
   $143 = (($123) + ($130))|0;
   $144 = $143 >> 10;
   $145 = ((($$0273299)) + 64|0);
   HEAP32[$145>>2] = $144;
   $146 = (($130) - ($123))|0;
   $147 = $146 >> 10;
   $148 = ((($$0273299)) + 160|0);
   HEAP32[$148>>2] = $147;
   $149 = (($125) + ($131))|0;
   $150 = $149 >> 10;
   $151 = ((($$0273299)) + 96|0);
   HEAP32[$151>>2] = $150;
   $152 = (($131) - ($125))|0;
   $153 = $152 >> 10;
   $154 = ((($$0273299)) + 128|0);
   HEAP32[$154>>2] = $153;
  }
  $155 = (($$0301) + 1)|0;
  $156 = ((($$0277295)) + 2|0);
  $157 = ((($$0276297)) + 1|0);
  $158 = ((($$0273299)) + 4|0);
  $exitcond302 = ($155|0)==(8);
  if ($exitcond302) {
   break;
  } else {
   $$0273299 = $158;$$0276297 = $157;$$0277295 = $156;$$0301 = $155;
  }
 }
 $$0275292 = $0;$$1274293 = $4;$$1294 = 0;
 while(1) {
  $159 = ((($$1274293)) + 8|0);
  $160 = HEAP32[$159>>2]|0;
  $161 = ((($$1274293)) + 24|0);
  $162 = HEAP32[$161>>2]|0;
  $163 = (($162) + ($160))|0;
  $164 = ($163*2217)|0;
  $165 = Math_imul($162, -7567)|0;
  $166 = (($164) + ($165))|0;
  $167 = ($160*3135)|0;
  $168 = (($164) + ($167))|0;
  $169 = HEAP32[$$1274293>>2]|0;
  $170 = ((($$1274293)) + 16|0);
  $171 = HEAP32[$170>>2]|0;
  $172 = (($171) + ($169))|0;
  $173 = $172 << 12;
  $174 = (($169) - ($171))|0;
  $175 = $174 << 12;
  $176 = (($173) - ($168))|0;
  $177 = (($175) - ($166))|0;
  $178 = ((($$1274293)) + 28|0);
  $179 = HEAP32[$178>>2]|0;
  $180 = ((($$1274293)) + 20|0);
  $181 = HEAP32[$180>>2]|0;
  $182 = ((($$1274293)) + 12|0);
  $183 = HEAP32[$182>>2]|0;
  $184 = ((($$1274293)) + 4|0);
  $185 = HEAP32[$184>>2]|0;
  $186 = (($183) + ($179))|0;
  $187 = (($185) + ($181))|0;
  $188 = (($185) + ($179))|0;
  $189 = (($183) + ($181))|0;
  $190 = (($187) + ($186))|0;
  $191 = ($190*4816)|0;
  $192 = ($179*1223)|0;
  $193 = ($181*8410)|0;
  $194 = ($183*12586)|0;
  $195 = ($185*6149)|0;
  $196 = Math_imul($188, -3685)|0;
  $197 = (($191) + ($196))|0;
  $198 = Math_imul($189, -10497)|0;
  $199 = (($191) + ($198))|0;
  $200 = Math_imul($186, -8034)|0;
  $201 = Math_imul($187, -1597)|0;
  $202 = (($201) + ($195))|0;
  $203 = (($202) + ($197))|0;
  $204 = (($200) + ($194))|0;
  $205 = (($204) + ($199))|0;
  $206 = (($201) + ($193))|0;
  $207 = (($206) + ($199))|0;
  $208 = (($200) + ($192))|0;
  $209 = (($208) + ($197))|0;
  $210 = (($168) + 65536)|0;
  $211 = (($210) + ($173))|0;
  $212 = (($166) + 65536)|0;
  $213 = (($212) + ($175))|0;
  $214 = (($177) + 65536)|0;
  $215 = (($176) + 65536)|0;
  $216 = (($203) + ($211))|0;
  $217 = $216 >> 17;
  $218 = (($217) + 128)|0;
  $219 = ($218>>>0)>(255);
  $220 = ($216|0)>(-16777217);
  $spec$select$i = $220 << 31 >> 31;
  $221 = $218&255;
  $222 = $219 ? $spec$select$i : $221;
  HEAP8[$$0275292>>0] = $222;
  $223 = (($211) - ($203))|0;
  $224 = $223 >> 17;
  $225 = (($224) + 128)|0;
  $226 = ($225>>>0)>(255);
  $227 = ($223|0)>(-16777217);
  $spec$select$i290 = $227 << 31 >> 31;
  $228 = $225&255;
  $229 = $226 ? $spec$select$i290 : $228;
  $230 = ((($$0275292)) + 7|0);
  HEAP8[$230>>0] = $229;
  $231 = (($205) + ($213))|0;
  $232 = $231 >> 17;
  $233 = (($232) + 128)|0;
  $234 = ($233>>>0)>(255);
  $235 = ($231|0)>(-16777217);
  $spec$select$i288 = $235 << 31 >> 31;
  $236 = $233&255;
  $237 = $234 ? $spec$select$i288 : $236;
  $238 = ((($$0275292)) + 1|0);
  HEAP8[$238>>0] = $237;
  $239 = (($213) - ($205))|0;
  $240 = $239 >> 17;
  $241 = (($240) + 128)|0;
  $242 = ($241>>>0)>(255);
  $243 = ($239|0)>(-16777217);
  $spec$select$i286 = $243 << 31 >> 31;
  $244 = $241&255;
  $245 = $242 ? $spec$select$i286 : $244;
  $246 = ((($$0275292)) + 6|0);
  HEAP8[$246>>0] = $245;
  $247 = (($207) + ($214))|0;
  $248 = $247 >> 17;
  $249 = (($248) + 128)|0;
  $250 = ($249>>>0)>(255);
  $251 = ($247|0)>(-16777217);
  $spec$select$i284 = $251 << 31 >> 31;
  $252 = $249&255;
  $253 = $250 ? $spec$select$i284 : $252;
  $254 = ((($$0275292)) + 2|0);
  HEAP8[$254>>0] = $253;
  $255 = (($214) - ($207))|0;
  $256 = $255 >> 17;
  $257 = (($256) + 128)|0;
  $258 = ($257>>>0)>(255);
  $259 = ($255|0)>(-16777217);
  $spec$select$i282 = $259 << 31 >> 31;
  $260 = $257&255;
  $261 = $258 ? $spec$select$i282 : $260;
  $262 = ((($$0275292)) + 5|0);
  HEAP8[$262>>0] = $261;
  $263 = (($209) + ($215))|0;
  $264 = $263 >> 17;
  $265 = (($264) + 128)|0;
  $266 = ($265>>>0)>(255);
  $267 = ($263|0)>(-16777217);
  $spec$select$i280 = $267 << 31 >> 31;
  $268 = $265&255;
  $269 = $266 ? $spec$select$i280 : $268;
  $270 = ((($$0275292)) + 3|0);
  HEAP8[$270>>0] = $269;
  $271 = (($215) - ($209))|0;
  $272 = $271 >> 17;
  $273 = (($272) + 128)|0;
  $274 = ($273>>>0)>(255);
  $275 = ($271|0)>(-16777217);
  $spec$select$i278 = $275 << 31 >> 31;
  $276 = $273&255;
  $277 = $274 ? $spec$select$i278 : $276;
  $278 = ((($$0275292)) + 4|0);
  HEAP8[$278>>0] = $277;
  $279 = (($$1294) + 1)|0;
  $280 = ((($$1274293)) + 32|0);
  $281 = (($$0275292) + ($1)|0);
  $exitcond = ($279|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$0275292 = $281;$$1274293 = $280;$$1294 = $279;
  }
 }
 STACKTOP = sp;return;
}
function _process_marker($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i132 = 0, $$0$i128 = 0, $$0$i130 = 0, $$0$i3$i$ph = 0, $$0$i3$i101 = 0, $$0$i3$i109 = 0, $$0$i3$i117 = 0, $$0$i3$i126 = 0, $$084$lcssa = 0, $$084144 = 0, $$090146 = 0, $$091145 = 0, $$093 = 0, $$094143 = 0, $$192147 = 0, $$286$lcssa = 0, $$286151 = 0, $$4 = 0;
 var $$4$shrunk = 0, $$op$i = 0, $$op$i107 = 0, $$op$i115 = 0, $$op$i124 = 0, $$op$i99 = 0, $$phi$trans$insert = 0, $$phi$trans$insert159 = 0, $$phi$trans$insert161 = 0, $$phi$trans$insert163 = 0, $$phi$trans$insert165 = 0, $$phi$trans$insert167 = 0, $$phi$trans$insert169 = 0, $$phi$trans$insert171 = 0, $$phi$trans$insert173 = 0, $$phi$trans$insert175 = 0, $$pre = 0, $$pre$i = 0, $$pre$i106 = 0, $$pre$i114 = 0;
 var $$pre$i123 = 0, $$pre$i98 = 0, $$pre$phi179Z2D = 0, $$pre$phi181Z2D = 0, $$pre$phi183Z2D = 0, $$pre$phi185Z2D = 0, $$pre$phiZ2D = 0, $$pre160 = 0, $$pre162 = 0, $$pre164 = 0, $$pre166 = 0, $$pre168 = 0, $$pre170 = 0, $$pre172 = 0, $$pre174 = 0, $$pre176 = 0, $$pre177 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond = 0, $exitcond157 = 0, $exitcond158 = 0, $or$cond = 0, $or$cond6 = 0, $phitmp$i = 0, $phitmp$i103 = 0, $phitmp$i111 = 0, $phitmp$i120 = 0, $phitmp$i95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $2 = sp;
 switch ($1|0) {
 case 255:  {
  HEAP32[36596] = 121129;
  $$4$shrunk = 0;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 194:  {
  HEAP32[36596] = 122214;
  $$4$shrunk = 0;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 221:  {
  $3 = ((($0)) + 16|0);
  $4 = HEAP32[$3>>2]|0;
  $5 = ($4|0)==(0|0);
  do {
   if ($5) {
    $6 = ((($0)) + 20|0);
    $7 = HEAP32[$6>>2]|0;
    $8 = ((($0)) + 24|0);
    $9 = HEAP32[$8>>2]|0;
    $10 = ($7>>>0)<($9>>>0);
    if ($10) {
     $11 = ((($7)) + 1|0);
     HEAP32[$6>>2] = $11;
     $12 = HEAP8[$7>>0]|0;
     $13 = $12&255;
     $phitmp$i95 = $13 << 8;
     $$pre$phi179Z2D = $6;$22 = $11;$23 = $9;$243 = $phitmp$i95;
     label = 10;
    } else {
     $$pre$phi179Z2D = $6;$22 = $7;$23 = $9;$243 = 0;
     label = 10;
    }
   } else {
    $14 = (_fgetc($4)|0);
    $15 = ($14|0)==(-1);
    $$pre$i98 = HEAP32[$3>>2]|0;
    $$op$i99 = $14 << 8;
    $16 = $15 ? 0 : $$op$i99;
    $17 = ($$pre$i98|0)==(0|0);
    if ($17) {
     $$phi$trans$insert165 = ((($0)) + 20|0);
     $$pre166 = HEAP32[$$phi$trans$insert165>>2]|0;
     $$phi$trans$insert167 = ((($0)) + 24|0);
     $$pre168 = HEAP32[$$phi$trans$insert167>>2]|0;
     $$pre$phi179Z2D = $$phi$trans$insert165;$22 = $$pre166;$23 = $$pre168;$243 = $16;
     label = 10;
     break;
    } else {
     $18 = (_fgetc($$pre$i98)|0);
     $19 = ($18|0)==(-1);
     $20 = $19 ? 0 : $18;
     $$0$i3$i101 = $20;$28 = $16;
     break;
    }
   }
  } while(0);
  if ((label|0) == 10) {
   $21 = ($22>>>0)<($23>>>0);
   if ($21) {
    $24 = ((($22)) + 1|0);
    HEAP32[$$pre$phi179Z2D>>2] = $24;
    $25 = HEAP8[$22>>0]|0;
    $26 = $25&255;
    $$0$i3$i101 = $26;$28 = $243;
   } else {
    $$0$i3$i101 = 0;$28 = $243;
   }
  }
  $27 = (($$0$i3$i101) + ($28))|0;
  $29 = ($27|0)==(4);
  if (!($29)) {
   HEAP32[36596] = 121129;
   $$4$shrunk = 0;
   $$4 = $$4$shrunk&1;
   STACKTOP = sp;return ($$4|0);
  }
  $30 = HEAP32[$3>>2]|0;
  $31 = ($30|0)==(0|0);
  do {
   if ($31) {
    $32 = ((($0)) + 20|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ((($0)) + 24|0);
    $35 = HEAP32[$34>>2]|0;
    $36 = ($33>>>0)<($35>>>0);
    if ($36) {
     $37 = ((($33)) + 1|0);
     HEAP32[$32>>2] = $37;
     $38 = HEAP8[$33>>0]|0;
     $39 = $38&255;
     $phitmp$i103 = $39 << 8;
     $$pre$phi181Z2D = $32;$244 = $phitmp$i103;$48 = $37;$49 = $35;
     label = 20;
    } else {
     $$pre$phi181Z2D = $32;$244 = 0;$48 = $33;$49 = $35;
     label = 20;
    }
   } else {
    $40 = (_fgetc($30)|0);
    $41 = ($40|0)==(-1);
    $$pre$i106 = HEAP32[$3>>2]|0;
    $$op$i107 = $40 << 8;
    $42 = $41 ? 0 : $$op$i107;
    $43 = ($$pre$i106|0)==(0|0);
    if ($43) {
     $$phi$trans$insert169 = ((($0)) + 20|0);
     $$pre170 = HEAP32[$$phi$trans$insert169>>2]|0;
     $$phi$trans$insert171 = ((($0)) + 24|0);
     $$pre172 = HEAP32[$$phi$trans$insert171>>2]|0;
     $$pre$phi181Z2D = $$phi$trans$insert169;$244 = $42;$48 = $$pre170;$49 = $$pre172;
     label = 20;
     break;
    } else {
     $44 = (_fgetc($$pre$i106)|0);
     $45 = ($44|0)==(-1);
     $46 = $45 ? 0 : $44;
     $$0$i3$i109 = $46;$54 = $42;
     break;
    }
   }
  } while(0);
  if ((label|0) == 20) {
   $47 = ($48>>>0)<($49>>>0);
   if ($47) {
    $50 = ((($48)) + 1|0);
    HEAP32[$$pre$phi181Z2D>>2] = $50;
    $51 = HEAP8[$48>>0]|0;
    $52 = $51&255;
    $$0$i3$i109 = $52;$54 = $244;
   } else {
    $$0$i3$i109 = 0;$54 = $244;
   }
  }
  $53 = (($$0$i3$i109) + ($54))|0;
  $55 = ((($0)) + 14008|0);
  HEAP32[$55>>2] = $53;
  $$4$shrunk = 1;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 219:  {
  $56 = ((($0)) + 16|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ($57|0)==(0|0);
  do {
   if ($58) {
    $59 = ((($0)) + 20|0);
    $60 = HEAP32[$59>>2]|0;
    $61 = ((($0)) + 24|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = ($60>>>0)<($62>>>0);
    if ($63) {
     $64 = ((($60)) + 1|0);
     HEAP32[$59>>2] = $64;
     $65 = HEAP8[$60>>0]|0;
     $66 = $65&255;
     $phitmp$i111 = $66 << 8;
     $$pre$phi183Z2D = $59;$245 = $phitmp$i111;$75 = $64;$76 = $62;
     label = 29;
    } else {
     $$pre$phi183Z2D = $59;$245 = 0;$75 = $60;$76 = $62;
     label = 29;
    }
   } else {
    $67 = (_fgetc($57)|0);
    $68 = ($67|0)==(-1);
    $$pre$i114 = HEAP32[$56>>2]|0;
    $$op$i115 = $67 << 8;
    $69 = $68 ? 0 : $$op$i115;
    $70 = ($$pre$i114|0)==(0|0);
    if ($70) {
     $$phi$trans$insert161 = ((($0)) + 20|0);
     $$pre162 = HEAP32[$$phi$trans$insert161>>2]|0;
     $$phi$trans$insert163 = ((($0)) + 24|0);
     $$pre164 = HEAP32[$$phi$trans$insert163>>2]|0;
     $$pre$phi183Z2D = $$phi$trans$insert161;$245 = $69;$75 = $$pre162;$76 = $$pre164;
     label = 29;
     break;
    } else {
     $71 = (_fgetc($$pre$i114)|0);
     $72 = ($71|0)==(-1);
     $73 = $72 ? 0 : $71;
     $$0$i3$i117 = $73;$81 = $69;
     break;
    }
   }
  } while(0);
  if ((label|0) == 29) {
   $74 = ($75>>>0)<($76>>>0);
   if ($74) {
    $77 = ((($75)) + 1|0);
    HEAP32[$$pre$phi183Z2D>>2] = $77;
    $78 = HEAP8[$75>>0]|0;
    $79 = $78&255;
    $$0$i3$i117 = $79;$81 = $245;
   } else {
    $$0$i3$i117 = 0;$81 = $245;
   }
  }
  $80 = (($81) + -2)|0;
  $82 = (($80) + ($$0$i3$i117))|0;
  $83 = ($82|0)>(0);
  L66: do {
   if ($83) {
    $84 = ((($0)) + 20|0);
    $85 = ((($0)) + 24|0);
    $$084144 = $82;
    while(1) {
     $86 = HEAP32[$56>>2]|0;
     $87 = ($86|0)==(0|0);
     if ($87) {
      $90 = HEAP32[$84>>2]|0;
      $91 = HEAP32[$85>>2]|0;
      $92 = ($90>>>0)<($91>>>0);
      if ($92) {
       $93 = ((($90)) + 1|0);
       HEAP32[$84>>2] = $93;
       $94 = HEAP8[$90>>0]|0;
       $95 = $94&255;
       $$0$i = $95;
       label = 37;
      } else {
       $115 = 0;
      }
     } else {
      $88 = (_fgetc($86)|0);
      $89 = ($88|0)==(-1);
      if ($89) {
       $115 = 0;
      } else {
       $$0$i = $88;
       label = 37;
      }
     }
     if ((label|0) == 37) {
      label = 0;
      $96 = $$0$i & 15;
      $97 = ($$0$i>>>0)>(15);
      if ($97) {
       label = 38;
       break;
      }
      $98 = ($96>>>0)>(3);
      if ($98) {
       label = 40;
       break;
      } else {
       $115 = $96;
      }
     }
     $$094143 = 0;
     while(1) {
      $99 = HEAP32[$56>>2]|0;
      $100 = ($99|0)==(0|0);
      if ($100) {
       $104 = HEAP32[$84>>2]|0;
       $105 = HEAP32[$85>>2]|0;
       $106 = ($104>>>0)<($105>>>0);
       if ($106) {
        $107 = ((($104)) + 1|0);
        HEAP32[$84>>2] = $107;
        $108 = HEAP8[$104>>0]|0;
        $109 = $108&255;
        $$0$i$i = $109;
       } else {
        $$0$i$i = 0;
       }
      } else {
       $101 = (_fgetc($99)|0);
       $102 = ($101|0)==(-1);
       $103 = $102 ? 0 : $101;
       $$0$i$i = $103;
      }
      $110 = $$0$i$i&255;
      $111 = (1568 + ($$094143)|0);
      $112 = HEAP8[$111>>0]|0;
      $113 = $112&255;
      $114 = ((((($0)) + 13468|0) + ($115<<6)|0) + ($113)|0);
      HEAP8[$114>>0] = $110;
      $116 = (($$094143) + 1)|0;
      $exitcond = ($116|0)==(64);
      if ($exitcond) {
       break;
      } else {
       $$094143 = $116;
      }
     }
     $117 = (($$084144) + -65)|0;
     $118 = ($$084144|0)>(65);
     if ($118) {
      $$084144 = $117;
     } else {
      $$084$lcssa = $117;
      break L66;
     }
    }
    if ((label|0) == 38) {
     HEAP32[36596] = 121129;
     $$4$shrunk = 0;
     $$4 = $$4$shrunk&1;
     STACKTOP = sp;return ($$4|0);
    }
    else if ((label|0) == 40) {
     HEAP32[36596] = 121129;
     $$4$shrunk = 0;
     $$4 = $$4$shrunk&1;
     STACKTOP = sp;return ($$4|0);
    }
   } else {
    $$084$lcssa = $82;
   }
  } while(0);
  $119 = ($$084$lcssa|0)==(0);
  $$4$shrunk = $119;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 196:  {
  $120 = ((($0)) + 16|0);
  $121 = HEAP32[$120>>2]|0;
  $122 = ($121|0)==(0|0);
  do {
   if ($122) {
    $123 = ((($0)) + 20|0);
    $124 = HEAP32[$123>>2]|0;
    $125 = ((($0)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ($124>>>0)<($126>>>0);
    if ($127) {
     $128 = ((($124)) + 1|0);
     HEAP32[$123>>2] = $128;
     $129 = HEAP8[$124>>0]|0;
     $130 = $129&255;
     $phitmp$i120 = $130 << 8;
     $$pre$phi185Z2D = $123;$139 = $128;$140 = $126;$246 = $phitmp$i120;
     label = 55;
    } else {
     $$pre$phi185Z2D = $123;$139 = $124;$140 = $126;$246 = 0;
     label = 55;
    }
   } else {
    $131 = (_fgetc($121)|0);
    $132 = ($131|0)==(-1);
    $$pre$i123 = HEAP32[$120>>2]|0;
    $$op$i124 = $131 << 8;
    $133 = $132 ? 0 : $$op$i124;
    $134 = ($$pre$i123|0)==(0|0);
    if ($134) {
     $$phi$trans$insert = ((($0)) + 20|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert159 = ((($0)) + 24|0);
     $$pre160 = HEAP32[$$phi$trans$insert159>>2]|0;
     $$pre$phi185Z2D = $$phi$trans$insert;$139 = $$pre;$140 = $$pre160;$246 = $133;
     label = 55;
     break;
    } else {
     $135 = (_fgetc($$pre$i123)|0);
     $136 = ($135|0)==(-1);
     $137 = $136 ? 0 : $135;
     $$0$i3$i126 = $137;$145 = $133;
     break;
    }
   }
  } while(0);
  if ((label|0) == 55) {
   $138 = ($139>>>0)<($140>>>0);
   if ($138) {
    $141 = ((($139)) + 1|0);
    HEAP32[$$pre$phi185Z2D>>2] = $141;
    $142 = HEAP8[$139>>0]|0;
    $143 = $142&255;
    $$0$i3$i126 = $143;$145 = $246;
   } else {
    $$0$i3$i126 = 0;$145 = $246;
   }
  }
  $144 = (($145) + -2)|0;
  $146 = (($144) + ($$0$i3$i126))|0;
  $147 = ($146|0)>(0);
  L105: do {
   if ($147) {
    $148 = ((($0)) + 20|0);
    $149 = ((($0)) + 24|0);
    $$286151 = $146;
    while(1) {
     $150 = HEAP32[$120>>2]|0;
     $151 = ($150|0)==(0|0);
     if ($151) {
      $155 = HEAP32[$148>>2]|0;
      $156 = HEAP32[$149>>2]|0;
      $157 = ($155>>>0)<($156>>>0);
      if ($157) {
       $158 = ((($155)) + 1|0);
       HEAP32[$148>>2] = $158;
       $159 = HEAP8[$155>>0]|0;
       $160 = $159&255;
       $$0$i128 = $160;
      } else {
       $$0$i128 = 0;
      }
     } else {
      $152 = (_fgetc($150)|0);
      $153 = ($152|0)==(-1);
      $154 = $153 ? 0 : $152;
      $$0$i128 = $154;
     }
     $161 = $$0$i128 & 15;
     $162 = ($$0$i128|0)>(31);
     $163 = ($161>>>0)>(3);
     $or$cond = $162 | $163;
     if ($or$cond) {
      label = 65;
      break;
     }
     $$090146 = 0;$$091145 = 0;
     while(1) {
      $164 = HEAP32[$120>>2]|0;
      $165 = ($164|0)==(0|0);
      if ($165) {
       $169 = HEAP32[$148>>2]|0;
       $170 = HEAP32[$149>>2]|0;
       $171 = ($169>>>0)<($170>>>0);
       if ($171) {
        $172 = ((($169)) + 1|0);
        HEAP32[$148>>2] = $172;
        $173 = HEAP8[$169>>0]|0;
        $174 = $173&255;
        $$0$i130 = $174;
       } else {
        $$0$i130 = 0;
       }
      } else {
       $166 = (_fgetc($164)|0);
       $167 = ($166|0)==(-1);
       $168 = $167 ? 0 : $166;
       $$0$i130 = $168;
      }
      $175 = (($2) + ($$091145<<2)|0);
      HEAP32[$175>>2] = $$0$i130;
      $176 = (($$0$i130) + ($$090146))|0;
      $177 = (($$091145) + 1)|0;
      $exitcond157 = ($177|0)==(16);
      if ($exitcond157) {
       break;
      } else {
       $$090146 = $176;$$091145 = $177;
      }
     }
     $178 = (($$286151) + -17)|0;
     $179 = ($$0$i128>>>0)<(16);
     if ($179) {
      $180 = (((($0)) + 28|0) + (($161*1680)|0)|0);
      $181 = (_build_huffman($180,$2)|0);
      $182 = ($181|0)==(0);
      if ($182) {
       break;
      }
      $183 = (((((($0)) + 28|0) + (($161*1680)|0)|0)) + 1024|0);
      $$093 = $183;
     } else {
      $184 = (((($0)) + 6748|0) + (($161*1680)|0)|0);
      $185 = (_build_huffman($184,$2)|0);
      $186 = ($185|0)==(0);
      if ($186) {
       break;
      }
      $187 = (((((($0)) + 6748|0) + (($161*1680)|0)|0)) + 1024|0);
      $$093 = $187;
     }
     $188 = ($176|0)>(0);
     if ($188) {
      $$192147 = 0;
      while(1) {
       $189 = HEAP32[$120>>2]|0;
       $190 = ($189|0)==(0|0);
       if ($190) {
        $194 = HEAP32[$148>>2]|0;
        $195 = HEAP32[$149>>2]|0;
        $196 = ($194>>>0)<($195>>>0);
        if ($196) {
         $197 = ((($194)) + 1|0);
         HEAP32[$148>>2] = $197;
         $198 = HEAP8[$194>>0]|0;
         $199 = $198&255;
         $$0$i$i132 = $199;
        } else {
         $$0$i$i132 = 0;
        }
       } else {
        $191 = (_fgetc($189)|0);
        $192 = ($191|0)==(-1);
        $193 = $192 ? 0 : $191;
        $$0$i$i132 = $193;
       }
       $200 = $$0$i$i132&255;
       $201 = (($$093) + ($$192147)|0);
       HEAP8[$201>>0] = $200;
       $202 = (($$192147) + 1)|0;
       $exitcond158 = ($202|0)==($176|0);
       if ($exitcond158) {
        break;
       } else {
        $$192147 = $202;
       }
      }
     }
     $203 = (($178) - ($176))|0;
     $204 = ($203|0)>(0);
     if ($204) {
      $$286151 = $203;
     } else {
      $$286$lcssa = $203;
      break L105;
     }
    }
    if ((label|0) == 65) {
     HEAP32[36596] = 121129;
    }
    $$4$shrunk = 0;
    $$4 = $$4$shrunk&1;
    STACKTOP = sp;return ($$4|0);
   } else {
    $$286$lcssa = $146;
   }
  } while(0);
  $205 = ($$286$lcssa|0)==(0);
  $$4$shrunk = $205;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 default: {
  $206 = $1 & -16;
  $207 = ($206|0)==(224);
  $208 = ($1|0)==(254);
  $or$cond6 = $208 | $207;
  if (!($or$cond6)) {
   $$4$shrunk = 0;
   $$4 = $$4$shrunk&1;
   STACKTOP = sp;return ($$4|0);
  }
  $209 = ((($0)) + 16|0);
  $210 = HEAP32[$209>>2]|0;
  $211 = ($210|0)==(0|0);
  do {
   if ($211) {
    $212 = ((($0)) + 20|0);
    $213 = HEAP32[$212>>2]|0;
    $214 = ((($0)) + 24|0);
    $215 = HEAP32[$214>>2]|0;
    $216 = ($213>>>0)<($215>>>0);
    if ($216) {
     $217 = ((($213)) + 1|0);
     HEAP32[$212>>2] = $217;
     $218 = HEAP8[$213>>0]|0;
     $219 = $218&255;
     $phitmp$i = $219 << 8;
     $$pre$phiZ2D = $212;$225 = $217;$226 = $215;$231 = $phitmp$i;
     label = 92;
    } else {
     $$pre$phiZ2D = $212;$225 = $213;$226 = $215;$231 = 0;
     label = 92;
    }
   } else {
    $220 = (_fgetc($210)|0);
    $221 = ($220|0)==(-1);
    $$pre$i = HEAP32[$209>>2]|0;
    $$op$i = $220 << 8;
    $222 = $221 ? 0 : $$op$i;
    $223 = ($$pre$i|0)==(0|0);
    if ($223) {
     $$phi$trans$insert173 = ((($0)) + 20|0);
     $$pre174 = HEAP32[$$phi$trans$insert173>>2]|0;
     $$phi$trans$insert175 = ((($0)) + 24|0);
     $$pre176 = HEAP32[$$phi$trans$insert175>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert173;$225 = $$pre174;$226 = $$pre176;$231 = $222;
     label = 92;
     break;
    }
    $233 = (_fgetc($$pre$i)|0);
    $234 = ($233|0)==(-1);
    $235 = $234 ? 0 : $233;
    $$pre177 = HEAP32[$209>>2]|0;
    $236 = (($222) + -2)|0;
    $237 = (($236) + ($235))|0;
    $238 = ($$pre177|0)==(0|0);
    if ($238) {
     $242 = $237;
    } else {
     (_fseek($$pre177,$237,1)|0);
     $$4$shrunk = 1;
     $$4 = $$4$shrunk&1;
     STACKTOP = sp;return ($$4|0);
    }
   }
  } while(0);
  if ((label|0) == 92) {
   $224 = ($225>>>0)<($226>>>0);
   if ($224) {
    $227 = ((($225)) + 1|0);
    HEAP32[$$pre$phiZ2D>>2] = $227;
    $228 = HEAP8[$225>>0]|0;
    $229 = $228&255;
    $$0$i3$i$ph = $229;
   } else {
    $$0$i3$i$ph = 0;
   }
   $230 = (($231) + -2)|0;
   $232 = (($230) + ($$0$i3$i$ph))|0;
   $242 = $232;
  }
  $239 = ((($0)) + 20|0);
  $240 = HEAP32[$239>>2]|0;
  $241 = (($240) + ($242)|0);
  HEAP32[$239>>2] = $241;
  $$4$shrunk = 1;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
 }
 }
 return (0)|0;
}
function _resample_row_v_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$010 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 if (!($5)) {
  return ($0|0);
 }
 $$010 = 0;
 while(1) {
  $6 = (($1) + ($$010)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7&255;
  $9 = ($8*3)|0;
  $10 = (($2) + ($$010)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11&255;
  $13 = (($12) + 2)|0;
  $14 = (($13) + ($9))|0;
  $15 = $14 >>> 2;
  $16 = $15&255;
  $17 = (($0) + ($$010)|0);
  HEAP8[$17>>0] = $16;
  $18 = (($$010) + 1)|0;
  $exitcond = ($18|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$010 = $18;
  }
 }
 return ($0|0);
}
function _resample_row_generic($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$01517$us = 0, $$016$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond22 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 $6 = ($4|0)>(0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  return ($0|0);
 }
 $$01517$us = 0;
 while(1) {
  $7 = (($1) + ($$01517$us)|0);
  $8 = Math_imul($$01517$us, $4)|0;
  $$016$us = 0;
  while(1) {
   $9 = HEAP8[$7>>0]|0;
   $10 = (($$016$us) + ($8))|0;
   $11 = (($0) + ($10)|0);
   HEAP8[$11>>0] = $9;
   $12 = (($$016$us) + 1)|0;
   $exitcond = ($12|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$016$us = $12;
   }
  }
  $13 = (($$01517$us) + 1)|0;
  $exitcond22 = ($13|0)==($3|0);
  if ($exitcond22) {
   break;
  } else {
   $$01517$us = $13;
  }
 }
 return ($0|0);
}
function _resample_row_1($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($1|0);
}
function _resample_row_hv_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$03334 = 0, $$035 = 0, $$pre = 0, $$pre$phi39Z2D = 0, $$pre36 = 0, $$pre38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)==(1);
 $6 = HEAP8[$1>>0]|0;
 $7 = $6&255;
 $8 = ($7*3)|0;
 $9 = HEAP8[$2>>0]|0;
 $10 = $9&255;
 $11 = (($8) + ($10))|0;
 $12 = (($11) + 2)|0;
 $13 = $12 >>> 2;
 $14 = $13&255;
 if ($5) {
  $15 = ((($0)) + 1|0);
  HEAP8[$15>>0] = $14;
  HEAP8[$0>>0] = $14;
  return ($0|0);
 }
 HEAP8[$0>>0] = $14;
 $16 = ($3|0)>(1);
 if ($16) {
  $$03334 = 1;$$035 = $11;
  while(1) {
   $17 = (($1) + ($$03334)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = ($19*3)|0;
   $21 = (($2) + ($$03334)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = (($20) + ($23))|0;
   $25 = ($$035*3)|0;
   $26 = (($25) + 8)|0;
   $27 = (($26) + ($24))|0;
   $28 = $27 >>> 4;
   $29 = $28&255;
   $30 = $$03334 << 1;
   $31 = (($30) + -1)|0;
   $32 = (($0) + ($31)|0);
   HEAP8[$32>>0] = $29;
   $33 = ($24*3)|0;
   $34 = (($$035) + 8)|0;
   $35 = (($34) + ($33))|0;
   $36 = $35 >>> 4;
   $37 = $36&255;
   $38 = (($0) + ($30)|0);
   HEAP8[$38>>0] = $37;
   $39 = (($$03334) + 1)|0;
   $exitcond = ($39|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$03334 = $39;$$035 = $24;
   }
  }
  $$pre = (($24) + 2)|0;
  $$pre36 = $$pre >>> 2;
  $$pre38 = $$pre36&255;
  $$pre$phi39Z2D = $$pre38;
 } else {
  $$pre$phi39Z2D = $14;
 }
 $40 = $3 << 1;
 $41 = (($40) + -1)|0;
 $42 = (($0) + ($41)|0);
 HEAP8[$42>>0] = $$pre$phi39Z2D;
 return ($0|0);
}
function _resample_row_h_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$040$lcssa = 0, $$04041 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $phitmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)==(1);
 $6 = HEAP8[$1>>0]|0;
 if ($5) {
  $7 = ((($0)) + 1|0);
  HEAP8[$7>>0] = $6;
  HEAP8[$0>>0] = $6;
  return ($0|0);
 }
 HEAP8[$0>>0] = $6;
 $8 = HEAP8[$1>>0]|0;
 $9 = $8&255;
 $10 = ($9*3)|0;
 $11 = ((($1)) + 1|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12&255;
 $14 = (($13) + 2)|0;
 $15 = (($14) + ($10))|0;
 $16 = $15 >>> 2;
 $17 = $16&255;
 $18 = ((($0)) + 1|0);
 HEAP8[$18>>0] = $17;
 $19 = (($3) + -1)|0;
 $20 = ($3|0)>(2);
 if ($20) {
  $$04041 = 1;
  while(1) {
   $21 = (($1) + ($$04041)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = ($23*3)|0;
   $25 = (($24) + 2)|0;
   $26 = (($$04041) + -1)|0;
   $27 = (($1) + ($26)|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = $28&255;
   $30 = (($25) + ($29))|0;
   $31 = $30 >>> 2;
   $32 = $31&255;
   $33 = $$04041 << 1;
   $34 = (($0) + ($33)|0);
   HEAP8[$34>>0] = $32;
   $35 = (($$04041) + 1)|0;
   $36 = (($1) + ($35)|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = (($25) + ($38))|0;
   $40 = $39 >>> 2;
   $41 = $40&255;
   $42 = $33 | 1;
   $43 = (($0) + ($42)|0);
   HEAP8[$43>>0] = $41;
   $exitcond = ($35|0)==($19|0);
   if ($exitcond) {
    break;
   } else {
    $$04041 = $35;
   }
  }
  $phitmp = $19 << 1;
  $$040$lcssa = $phitmp;
 } else {
  $$040$lcssa = 2;
 }
 $44 = (($3) + -2)|0;
 $45 = (($1) + ($44)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = ($47*3)|0;
 $49 = (($1) + ($19)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50&255;
 $52 = (($51) + 2)|0;
 $53 = (($52) + ($48))|0;
 $54 = $53 >>> 2;
 $55 = $54&255;
 $56 = (($0) + ($$040$lcssa)|0);
 HEAP8[$56>>0] = $55;
 $57 = HEAP8[$49>>0]|0;
 $58 = $$040$lcssa | 1;
 $59 = (($0) + ($58)|0);
 HEAP8[$59>>0] = $57;
 return ($0|0);
}
function _build_huffman($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$06589 = 0, $$06589$1 = 0, $$06589$10 = 0, $$06589$11 = 0, $$06589$12 = 0, $$06589$13 = 0, $$06589$14 = 0, $$06589$15 = 0, $$06589$2 = 0, $$06589$3 = 0, $$06589$4 = 0, $$06589$5 = 0, $$06589$6 = 0, $$06589$7 = 0, $$06589$8 = 0, $$06589$9 = 0, $$06784 = 0, $$16685 = 0, $$16880 = 0;
 var $$171$lcssa = 0, $$171$lcssa$1 = 0, $$171$lcssa$10 = 0, $$171$lcssa$11 = 0, $$171$lcssa$12 = 0, $$171$lcssa$13 = 0, $$171$lcssa$14 = 0, $$171$lcssa$15 = 0, $$171$lcssa$2 = 0, $$171$lcssa$3 = 0, $$171$lcssa$4 = 0, $$171$lcssa$5 = 0, $$171$lcssa$6 = 0, $$171$lcssa$7 = 0, $$171$lcssa$8 = 0, $$171$lcssa$9 = 0, $$17188 = 0, $$17188$1 = 0, $$17188$10 = 0, $$17188$11 = 0;
 var $$17188$12 = 0, $$17188$13 = 0, $$17188$14 = 0, $$17188$15 = 0, $$17188$2 = 0, $$17188$3 = 0, $$17188$4 = 0, $$17188$5 = 0, $$17188$6 = 0, $$17188$7 = 0, $$17188$8 = 0, $$17188$9 = 0, $$177 = 0, $$269 = 0, $$27283 = 0, $$379 = 0, $$4 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $scevgep = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(0);
 if ($3) {
  $$06589 = 0;$$17188 = 0;
  while(1) {
   $4 = (($$17188) + 1)|0;
   $5 = (((($0)) + 1280|0) + ($$17188)|0);
   HEAP8[$5>>0] = 1;
   $6 = (($$06589) + 1)|0;
   $7 = HEAP32[$1>>2]|0;
   $8 = ($6|0)<($7|0);
   if ($8) {
    $$06589 = $6;$$17188 = $4;
   } else {
    $$171$lcssa = $4;
    break;
   }
  }
 } else {
  $$171$lcssa = 0;
 }
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $$06589$1 = 0;$$17188$1 = $$171$lcssa;
  while(1) {
   $50 = (($$17188$1) + 1)|0;
   $51 = (((($0)) + 1280|0) + ($$17188$1)|0);
   HEAP8[$51>>0] = 2;
   $52 = (($$06589$1) + 1)|0;
   $53 = HEAP32[$9>>2]|0;
   $54 = ($52|0)<($53|0);
   if ($54) {
    $$06589$1 = $52;$$17188$1 = $50;
   } else {
    $$171$lcssa$1 = $50;
    break;
   }
  }
 } else {
  $$171$lcssa$1 = $$171$lcssa;
 }
 $55 = ((($1)) + 8|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = ($56|0)>(0);
 if ($57) {
  $$06589$2 = 0;$$17188$2 = $$171$lcssa$1;
  while(1) {
   $58 = (($$17188$2) + 1)|0;
   $59 = (((($0)) + 1280|0) + ($$17188$2)|0);
   HEAP8[$59>>0] = 3;
   $60 = (($$06589$2) + 1)|0;
   $61 = HEAP32[$55>>2]|0;
   $62 = ($60|0)<($61|0);
   if ($62) {
    $$06589$2 = $60;$$17188$2 = $58;
   } else {
    $$171$lcssa$2 = $58;
    break;
   }
  }
 } else {
  $$171$lcssa$2 = $$171$lcssa$1;
 }
 $63 = ((($1)) + 12|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)>(0);
 if ($65) {
  $$06589$3 = 0;$$17188$3 = $$171$lcssa$2;
  while(1) {
   $66 = (($$17188$3) + 1)|0;
   $67 = (((($0)) + 1280|0) + ($$17188$3)|0);
   HEAP8[$67>>0] = 4;
   $68 = (($$06589$3) + 1)|0;
   $69 = HEAP32[$63>>2]|0;
   $70 = ($68|0)<($69|0);
   if ($70) {
    $$06589$3 = $68;$$17188$3 = $66;
   } else {
    $$171$lcssa$3 = $66;
    break;
   }
  }
 } else {
  $$171$lcssa$3 = $$171$lcssa$2;
 }
 $71 = ((($1)) + 16|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)>(0);
 if ($73) {
  $$06589$4 = 0;$$17188$4 = $$171$lcssa$3;
  while(1) {
   $74 = (($$17188$4) + 1)|0;
   $75 = (((($0)) + 1280|0) + ($$17188$4)|0);
   HEAP8[$75>>0] = 5;
   $76 = (($$06589$4) + 1)|0;
   $77 = HEAP32[$71>>2]|0;
   $78 = ($76|0)<($77|0);
   if ($78) {
    $$06589$4 = $76;$$17188$4 = $74;
   } else {
    $$171$lcssa$4 = $74;
    break;
   }
  }
 } else {
  $$171$lcssa$4 = $$171$lcssa$3;
 }
 $79 = ((($1)) + 20|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ($80|0)>(0);
 if ($81) {
  $$06589$5 = 0;$$17188$5 = $$171$lcssa$4;
  while(1) {
   $82 = (($$17188$5) + 1)|0;
   $83 = (((($0)) + 1280|0) + ($$17188$5)|0);
   HEAP8[$83>>0] = 6;
   $84 = (($$06589$5) + 1)|0;
   $85 = HEAP32[$79>>2]|0;
   $86 = ($84|0)<($85|0);
   if ($86) {
    $$06589$5 = $84;$$17188$5 = $82;
   } else {
    $$171$lcssa$5 = $82;
    break;
   }
  }
 } else {
  $$171$lcssa$5 = $$171$lcssa$4;
 }
 $87 = ((($1)) + 24|0);
 $88 = HEAP32[$87>>2]|0;
 $89 = ($88|0)>(0);
 if ($89) {
  $$06589$6 = 0;$$17188$6 = $$171$lcssa$5;
  while(1) {
   $90 = (($$17188$6) + 1)|0;
   $91 = (((($0)) + 1280|0) + ($$17188$6)|0);
   HEAP8[$91>>0] = 7;
   $92 = (($$06589$6) + 1)|0;
   $93 = HEAP32[$87>>2]|0;
   $94 = ($92|0)<($93|0);
   if ($94) {
    $$06589$6 = $92;$$17188$6 = $90;
   } else {
    $$171$lcssa$6 = $90;
    break;
   }
  }
 } else {
  $$171$lcssa$6 = $$171$lcssa$5;
 }
 $95 = ((($1)) + 28|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($96|0)>(0);
 if ($97) {
  $$06589$7 = 0;$$17188$7 = $$171$lcssa$6;
  while(1) {
   $98 = (($$17188$7) + 1)|0;
   $99 = (((($0)) + 1280|0) + ($$17188$7)|0);
   HEAP8[$99>>0] = 8;
   $100 = (($$06589$7) + 1)|0;
   $101 = HEAP32[$95>>2]|0;
   $102 = ($100|0)<($101|0);
   if ($102) {
    $$06589$7 = $100;$$17188$7 = $98;
   } else {
    $$171$lcssa$7 = $98;
    break;
   }
  }
 } else {
  $$171$lcssa$7 = $$171$lcssa$6;
 }
 $103 = ((($1)) + 32|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ($104|0)>(0);
 if ($105) {
  $$06589$8 = 0;$$17188$8 = $$171$lcssa$7;
  while(1) {
   $106 = (($$17188$8) + 1)|0;
   $107 = (((($0)) + 1280|0) + ($$17188$8)|0);
   HEAP8[$107>>0] = 9;
   $108 = (($$06589$8) + 1)|0;
   $109 = HEAP32[$103>>2]|0;
   $110 = ($108|0)<($109|0);
   if ($110) {
    $$06589$8 = $108;$$17188$8 = $106;
   } else {
    $$171$lcssa$8 = $106;
    break;
   }
  }
 } else {
  $$171$lcssa$8 = $$171$lcssa$7;
 }
 $111 = ((($1)) + 36|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ($112|0)>(0);
 if ($113) {
  $$06589$9 = 0;$$17188$9 = $$171$lcssa$8;
  while(1) {
   $114 = (($$17188$9) + 1)|0;
   $115 = (((($0)) + 1280|0) + ($$17188$9)|0);
   HEAP8[$115>>0] = 10;
   $116 = (($$06589$9) + 1)|0;
   $117 = HEAP32[$111>>2]|0;
   $118 = ($116|0)<($117|0);
   if ($118) {
    $$06589$9 = $116;$$17188$9 = $114;
   } else {
    $$171$lcssa$9 = $114;
    break;
   }
  }
 } else {
  $$171$lcssa$9 = $$171$lcssa$8;
 }
 $119 = ((($1)) + 40|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = ($120|0)>(0);
 if ($121) {
  $$06589$10 = 0;$$17188$10 = $$171$lcssa$9;
  while(1) {
   $122 = (($$17188$10) + 1)|0;
   $123 = (((($0)) + 1280|0) + ($$17188$10)|0);
   HEAP8[$123>>0] = 11;
   $124 = (($$06589$10) + 1)|0;
   $125 = HEAP32[$119>>2]|0;
   $126 = ($124|0)<($125|0);
   if ($126) {
    $$06589$10 = $124;$$17188$10 = $122;
   } else {
    $$171$lcssa$10 = $122;
    break;
   }
  }
 } else {
  $$171$lcssa$10 = $$171$lcssa$9;
 }
 $127 = ((($1)) + 44|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = ($128|0)>(0);
 if ($129) {
  $$06589$11 = 0;$$17188$11 = $$171$lcssa$10;
  while(1) {
   $130 = (($$17188$11) + 1)|0;
   $131 = (((($0)) + 1280|0) + ($$17188$11)|0);
   HEAP8[$131>>0] = 12;
   $132 = (($$06589$11) + 1)|0;
   $133 = HEAP32[$127>>2]|0;
   $134 = ($132|0)<($133|0);
   if ($134) {
    $$06589$11 = $132;$$17188$11 = $130;
   } else {
    $$171$lcssa$11 = $130;
    break;
   }
  }
 } else {
  $$171$lcssa$11 = $$171$lcssa$10;
 }
 $135 = ((($1)) + 48|0);
 $136 = HEAP32[$135>>2]|0;
 $137 = ($136|0)>(0);
 if ($137) {
  $$06589$12 = 0;$$17188$12 = $$171$lcssa$11;
  while(1) {
   $138 = (($$17188$12) + 1)|0;
   $139 = (((($0)) + 1280|0) + ($$17188$12)|0);
   HEAP8[$139>>0] = 13;
   $140 = (($$06589$12) + 1)|0;
   $141 = HEAP32[$135>>2]|0;
   $142 = ($140|0)<($141|0);
   if ($142) {
    $$06589$12 = $140;$$17188$12 = $138;
   } else {
    $$171$lcssa$12 = $138;
    break;
   }
  }
 } else {
  $$171$lcssa$12 = $$171$lcssa$11;
 }
 $143 = ((($1)) + 52|0);
 $144 = HEAP32[$143>>2]|0;
 $145 = ($144|0)>(0);
 if ($145) {
  $$06589$13 = 0;$$17188$13 = $$171$lcssa$12;
  while(1) {
   $146 = (($$17188$13) + 1)|0;
   $147 = (((($0)) + 1280|0) + ($$17188$13)|0);
   HEAP8[$147>>0] = 14;
   $148 = (($$06589$13) + 1)|0;
   $149 = HEAP32[$143>>2]|0;
   $150 = ($148|0)<($149|0);
   if ($150) {
    $$06589$13 = $148;$$17188$13 = $146;
   } else {
    $$171$lcssa$13 = $146;
    break;
   }
  }
 } else {
  $$171$lcssa$13 = $$171$lcssa$12;
 }
 $151 = ((($1)) + 56|0);
 $152 = HEAP32[$151>>2]|0;
 $153 = ($152|0)>(0);
 if ($153) {
  $$06589$14 = 0;$$17188$14 = $$171$lcssa$13;
  while(1) {
   $154 = (($$17188$14) + 1)|0;
   $155 = (((($0)) + 1280|0) + ($$17188$14)|0);
   HEAP8[$155>>0] = 15;
   $156 = (($$06589$14) + 1)|0;
   $157 = HEAP32[$151>>2]|0;
   $158 = ($156|0)<($157|0);
   if ($158) {
    $$06589$14 = $156;$$17188$14 = $154;
   } else {
    $$171$lcssa$14 = $154;
    break;
   }
  }
 } else {
  $$171$lcssa$14 = $$171$lcssa$13;
 }
 $159 = ((($1)) + 60|0);
 $160 = HEAP32[$159>>2]|0;
 $161 = ($160|0)>(0);
 if ($161) {
  $$06589$15 = 0;$$17188$15 = $$171$lcssa$14;
  while(1) {
   $162 = (($$17188$15) + 1)|0;
   $163 = (((($0)) + 1280|0) + ($$17188$15)|0);
   HEAP8[$163>>0] = 16;
   $164 = (($$06589$15) + 1)|0;
   $165 = HEAP32[$159>>2]|0;
   $166 = ($164|0)<($165|0);
   if ($166) {
    $$06589$15 = $164;$$17188$15 = $162;
   } else {
    $$171$lcssa$15 = $162;
    break;
   }
  }
 } else {
  $$171$lcssa$15 = $$171$lcssa$14;
 }
 $167 = (((($0)) + 1280|0) + ($$171$lcssa$15)|0);
 HEAP8[$167>>0] = 0;
 $$06784 = 0;$$16685 = 1;$$27283 = 0;
 while(1) {
  $12 = (($$27283) - ($$06784))|0;
  $13 = (((($0)) + 1612|0) + ($$16685<<2)|0);
  HEAP32[$13>>2] = $12;
  $14 = (((($0)) + 1280|0) + ($$27283)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15&255;
  $17 = ($$16685|0)==($16|0);
  if ($17) {
   $$16880 = $$06784;$$379 = $$27283;
   while(1) {
    $18 = (($$16880) + 1)|0;
    $19 = $$16880&65535;
    $20 = (($$379) + 1)|0;
    $21 = (((($0)) + 512|0) + ($$379<<1)|0);
    HEAP16[$21>>1] = $19;
    $22 = (((($0)) + 1280|0) + ($20)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = ($$16685|0)==($24|0);
    if ($25) {
     $$16880 = $18;$$379 = $20;
    } else {
     break;
    }
   }
   $26 = 1 << $$16685;
   $27 = ($$16880|0)<($26|0);
   if ($27) {
    $$269 = $18;$$4 = $20;
   } else {
    label = 10;
    break;
   }
  } else {
   $$269 = $$06784;$$4 = $$27283;
  }
  $28 = (16 - ($$16685))|0;
  $29 = $$269 << $28;
  $30 = (((($0)) + 1540|0) + ($$16685<<2)|0);
  HEAP32[$30>>2] = $29;
  $31 = $$269 << 1;
  $32 = (($$16685) + 1)|0;
  $33 = ($32>>>0)<(17);
  if ($33) {
   $$06784 = $31;$$16685 = $32;$$27283 = $$4;
  } else {
   break;
  }
 }
 if ((label|0) == 10) {
  HEAP32[36596] = 121129;
  $$0 = 0;
  return ($$0|0);
 }
 $34 = (((($0)) + 1540|0) + ($32<<2)|0);
 HEAP32[$34>>2] = -1;
 _memset(($0|0),-1,512)|0;
 $35 = ($$4|0)>(0);
 if (!($35)) {
  $$0 = 1;
  return ($$0|0);
 }
 $$177 = 0;
 while(1) {
  $36 = (((($0)) + 1280|0) + ($$177)|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = ($37&255)<(10);
  do {
   if ($38) {
    $39 = $37&255;
    $40 = (9 - ($39))|0;
    $41 = 1 << $40;
    $42 = ($40|0)==(31);
    if ($42) {
     break;
    }
    $43 = (((($0)) + 512|0) + ($$177<<1)|0);
    $44 = HEAP16[$43>>1]|0;
    $45 = $44&65535;
    $46 = $45 << $40;
    $47 = $$177&255;
    $scevgep = (($0) + ($46)|0);
    $48 = ($41|0)>(1);
    $smax = $48 ? $41 : 1;
    _memset(($scevgep|0),($47|0),($smax|0))|0;
   }
  } while(0);
  $49 = (($$177) + 1)|0;
  $exitcond = ($49|0)==($$4|0);
  if ($exitcond) {
   $$0 = 1;
   break;
  } else {
   $$177 = $49;
  }
 }
 return ($$0|0);
}
function _decode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$048 = 0, $$048$in = 0, $$049 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre50 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 13976|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(16);
 L1: do {
  if ($4) {
   $5 = ((($0)) + 13984|0);
   $6 = ((($0)) + 16|0);
   $7 = ((($0)) + 13972|0);
   $8 = ((($0)) + 20|0);
   $9 = ((($0)) + 24|0);
   L3: while(1) {
    $10 = HEAP32[$5>>2]|0;
    $11 = ($10|0)==(0);
    do {
     if ($11) {
      $12 = HEAP32[$6>>2]|0;
      $13 = ($12|0)==(0|0);
      if ($13) {
       $16 = HEAP32[$8>>2]|0;
       $17 = HEAP32[$9>>2]|0;
       $18 = ($16>>>0)<($17>>>0);
       if (!($18)) {
        $40 = 0;
        break;
       }
       $19 = ((($16)) + 1|0);
       HEAP32[$8>>2] = $19;
       $20 = HEAP8[$16>>0]|0;
       $21 = $20&255;
       $23 = $21;
      } else {
       $14 = (_fgetc($12)|0);
       $15 = ($14|0)==(-1);
       if ($15) {
        $40 = 0;
        break;
       } else {
        $23 = $14;
       }
      }
      $22 = ($23|0)==(255);
      if ($22) {
       $24 = HEAP32[$6>>2]|0;
       $25 = ($24|0)==(0|0);
       if ($25) {
        $28 = HEAP32[$8>>2]|0;
        $29 = HEAP32[$9>>2]|0;
        $30 = ($28>>>0)<($29>>>0);
        if (!($30)) {
         $40 = 255;
         break;
        }
        $31 = ((($28)) + 1|0);
        HEAP32[$8>>2] = $31;
        $32 = HEAP8[$28>>0]|0;
        $33 = $32&255;
        $$0$i = $33;
       } else {
        $26 = (_fgetc($24)|0);
        $27 = ($26|0)==(-1);
        if ($27) {
         $40 = 255;
         break;
        } else {
         $$0$i = $26;
        }
       }
       $34 = ($$0$i|0)==(0);
       if ($34) {
        $40 = 255;
       } else {
        break L3;
       }
      } else {
       $40 = $23;
      }
     } else {
      $40 = 0;
     }
    } while(0);
    $37 = HEAP32[$7>>2]|0;
    $38 = $37 << 8;
    $39 = $38 | $40;
    HEAP32[$7>>2] = $39;
    $41 = HEAP32[$2>>2]|0;
    $42 = (($41) + 8)|0;
    HEAP32[$2>>2] = $42;
    $43 = ($41|0)<(17);
    if (!($43)) {
     $$pre$phiZ2D = $7;$46 = $42;
     break L1;
    }
   }
   $35 = $$0$i&255;
   $36 = ((($0)) + 13980|0);
   HEAP8[$36>>0] = $35;
   HEAP32[$5>>2] = 1;
   $$pre = HEAP32[$2>>2]|0;
   $$pre$phiZ2D = $7;$46 = $$pre;
  } else {
   $$pre50 = ((($0)) + 13972|0);
   $$pre$phiZ2D = $$pre50;$46 = $3;
  }
 } while(0);
 $44 = HEAP32[$$pre$phiZ2D>>2]|0;
 $45 = (($46) + -9)|0;
 $47 = $44 >>> $45;
 $48 = $47 & 511;
 $49 = (($1) + ($48)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50&255;
 $52 = ($50<<24>>24)==(-1);
 if (!($52)) {
  $53 = (((($1)) + 1280|0) + ($51)|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54&255;
  $56 = ($46|0)<($55|0);
  if ($56) {
   $$049 = -1;
   return ($$049|0);
  }
  $57 = (((($1)) + 1024|0) + ($51)|0);
  $58 = (($46) - ($55))|0;
  HEAP32[$2>>2] = $58;
  $59 = HEAP8[$57>>0]|0;
  $60 = $59&255;
  $$049 = $60;
  return ($$049|0);
 }
 $61 = ($46|0)<(16);
 $62 = (16 - ($46))|0;
 $63 = $44 << $62;
 $64 = (($46) + -16)|0;
 $65 = $44 >>> $64;
 $$048$in = $61 ? $63 : $65;
 $$048 = $$048$in & 65535;
 $$0 = 10;
 while(1) {
  $66 = (((($1)) + 1540|0) + ($$0<<2)|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($$048>>>0)<($67>>>0);
  $69 = (($$0) + 1)|0;
  if ($68) {
   break;
  } else {
   $$0 = $69;
  }
 }
 $70 = ($$0|0)==(17);
 if ($70) {
  HEAP32[$2>>2] = $64;
  $$049 = -1;
  return ($$049|0);
 }
 $71 = ($46|0)<($$0|0);
 if ($71) {
  $$049 = -1;
  return ($$049|0);
 }
 $72 = (($46) - ($$0))|0;
 $73 = $44 >>> $72;
 $74 = (1648 + ($$0<<2)|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = $75 & $73;
 $77 = (((($1)) + 1612|0) + ($$0<<2)|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = (($76) + ($78))|0;
 $80 = (((($1)) + 1280|0) + ($79)|0);
 $81 = HEAP8[$80>>0]|0;
 $82 = $81&255;
 $83 = (($46) - ($82))|0;
 $84 = $44 >>> $83;
 $85 = (1648 + ($82<<2)|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = $84 & $86;
 $88 = (((($1)) + 512|0) + ($79<<1)|0);
 $89 = HEAP16[$88>>1]|0;
 $90 = $89&65535;
 $91 = ($87|0)==($90|0);
 if (!($91)) {
  ___assert_fail((122254|0),(121322|0),743,(122340|0));
  // unreachable;
 }
 HEAP32[$2>>2] = $72;
 $92 = (((($1)) + 1024|0) + ($79)|0);
 $93 = HEAP8[$92>>0]|0;
 $94 = $93&255;
 $$049 = $94;
 return ($$049|0);
}
function _zerog_init_ctor() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _glib_init();
 _gobject_init();
 return;
}
function __g_atomic_array_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __g_atomic_array_copy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$02227$i = 0, $$02227$i$phi = 0, $$02227$i24 = 0, $$02227$i24$phi = 0, $$023$i = 0, $$023$i26 = 0, $$02326$i = 0, $$02326$i21 = 0, $$02328$i = 0, $$02328$i23 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + -4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + ($2))|0;
  $8 = ($2|0)==(0);
  L3: do {
   if ($8) {
    label = 8;
   } else {
    $$02326$i = HEAP32[37102]|0;
    $9 = ($$02326$i|0)==(0|0);
    if ($9) {
     label = 8;
    } else {
     $$02227$i = 148408;$$02328$i = $$02326$i;
     while(1) {
      $10 = ((($$02328$i)) + -4|0);
      $11 = HEAP32[$10>>2]|0;
      $12 = ($11|0)==($7|0);
      if ($12) {
       break;
      }
      $$023$i = HEAP32[$$02328$i>>2]|0;
      $14 = ($$023$i|0)==(0|0);
      if ($14) {
       label = 8;
       break L3;
      } else {
       $$02227$i$phi = $$02328$i;$$02328$i = $$023$i;$$02227$i = $$02227$i$phi;
      }
     }
     $13 = HEAP32[$$02328$i>>2]|0;
     HEAP32[$$02227$i>>2] = $13;
     $$0$i = $$02328$i;
    }
   }
  } while(0);
  if ((label|0) == 8) {
   $15 = ($7>>>0)>(4);
   $16 = $15 ? $7 : 4;
   $17 = (($16) + 4)|0;
   $18 = (_g_slice_alloc($17)|0);
   $19 = ((($18)) + 4|0);
   HEAP32[$18>>2] = $7;
   $$0$i = $19;
  }
  _memcpy(($$0$i|0),($3|0),($6|0))|0;
  $$0 = $$0$i;
  return ($$0|0);
 }
 $20 = ($2|0)==(0);
 if ($20) {
  $$0 = 0;
  return ($$0|0);
 }
 $21 = (($2) + ($1))|0;
 $$02326$i21 = HEAP32[37102]|0;
 $22 = ($$02326$i21|0)==(0|0);
 L18: do {
  if (!($22)) {
   $$02227$i24 = 148408;$$02328$i23 = $$02326$i21;
   while(1) {
    $23 = ((($$02328$i23)) + -4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($21|0);
    if ($25) {
     break;
    }
    $$023$i26 = HEAP32[$$02328$i23>>2]|0;
    $27 = ($$023$i26|0)==(0|0);
    if ($27) {
     break L18;
    } else {
     $$02227$i24$phi = $$02328$i23;$$02328$i23 = $$023$i26;$$02227$i24 = $$02227$i24$phi;
    }
   }
   $26 = HEAP32[$$02328$i23>>2]|0;
   HEAP32[$$02227$i24>>2] = $26;
   $$0 = $$02328$i23;
   return ($$0|0);
  }
 } while(0);
 $28 = ($21>>>0)>(4);
 $29 = $28 ? $21 : 4;
 $30 = (($29) + 4)|0;
 $31 = (_g_slice_alloc($30)|0);
 $32 = ((($31)) + 4|0);
 HEAP32[$31>>2] = $21;
 $$0 = $32;
 return ($$0|0);
}
function __g_atomic_array_update($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  HEAP32[$0>>2] = $1;
  return;
 }
 $4 = ((($2)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + -4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5>>>0)>($7>>>0);
 if ($8) {
  _g_assertion_message_expr(0,122427,168,122465,122488);
  // unreachable;
 }
 HEAP32[$0>>2] = $1;
 $9 = HEAP32[37102]|0;
 HEAP32[$2>>2] = $9;
 HEAP32[37102] = $2;
 return;
}
function __g_boxed_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_intern_static_string(122573)|0);
 $1 = (_g_type_register_fundamental(72,$0,148412,117492,48)|0);
 $2 = ($1|0)==(72);
 if ($2) {
  return;
 } else {
  _g_assertion_message_expr(0,122580,109,122612,122631);
  // unreachable;
 }
}
function _g_boxed_type_register_static($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $3 = sp;
 dest=$3; src=117496; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $4 = (_g_type_register_static(72,$0,$3,0)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return ($4|0);
 }
 __g_type_boxed_init($4,$1,$2);
 STACKTOP = sp;return ($4|0);
}
function _boxed_proxy_value_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _boxed_proxy_value_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 134217728;
 $7 = ($6|0)==(0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$0>>2]|0;
 __g_type_boxed_free($8,$2);
 return;
}
function _boxed_proxy_value_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = HEAP32[$0>>2]|0;
  $6 = (__g_type_boxed_copy($5,$3)|0);
  $$sink = $6;
 }
 $7 = ((($1)) + 8|0);
 HEAP32[$7>>2] = $$sink;
 return;
}
function _boxed_proxy_value_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _boxed_proxy_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  HEAP32[$6>>2] = 0;
  return (0|0);
 }
 $7 = $3 & 134217728;
 $8 = ($7|0)==(0);
 if ($8) {
  $11 = HEAP32[$0>>2]|0;
  $12 = (__g_type_boxed_copy($11,$4)|0);
  $13 = ((($0)) + 8|0);
  HEAP32[$13>>2] = $12;
  return (0|0);
 } else {
  $9 = ((($0)) + 8|0);
  HEAP32[$9>>2] = $4;
  $10 = ((($0)) + 16|0);
  HEAP32[$10>>2] = 134217728;
  return (0|0);
 }
 return (0)|0;
}
function _boxed_proxy_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  HEAP32[$4>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = $3 & 134217728;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = (__g_type_boxed_copy($14,$10)|0);
  HEAP32[$4>>2] = $15;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_value_array_get_type() {
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (_g_once_init_enter(148448)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $6 = HEAP32[37112]|0;
  STACKTOP = sp;return ($6|0);
 }
 $4 = (_g_intern_static_string(122652)|0);
 HEAP32[$0>>2] = 257;
 HEAP32[$1>>2] = 258;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $5 = (_g_boxed_type_register_static($4,$$byval_copy,$$byval_copy1)|0);
 _g_once_init_leave(148448,$5);
 $6 = HEAP32[37112]|0;
 STACKTOP = sp;return ($6|0);
}
function _g_closure_invalidate($0) {
 $0 = $0|0;
 var $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0$i = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  STACKTOP = sp;return;
 }
 while(1) {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $3;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
  $4 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 1)|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
  $5 = $4 & 32767;
  $6 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -32768;
  $7 = $6 | $5;
  HEAP32[$$sroa$0$i>>2] = $7;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
  $8 = (_g_atomic_int_compare_and_exchange($0,$3,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
  $9 = ($8|0)==(0);
  if (!($9)) {
   break;
  }
 }
 while(1) {
  $10 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $10;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$0$i>>2]|0;
  $11 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 | -2147483648;
  HEAP32[$$sroa$0$i>>2] = $11;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$0$i>>2]|0;
  $12 = (_g_atomic_int_compare_and_exchange($0,$10,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
  $13 = ($12|0)==(0);
  if (!($13)) {
   break;
  }
 }
 $14 = ($$sroa$0$0$$sroa$0$0$$sroa$0$0$|0)<(0);
 if (!($14)) {
  _closure_invoke_notifiers($0,1);
 }
 _g_closure_unref($0);
 STACKTOP = sp;return;
}
function _closure_invoke_notifiers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$phi155Z2D = 0, $$pre$phi157Z2D = 0, $$pre$phi159Z2D = 0, $$pre$phiZ2D = 0, $$pre154 = 0, $$pre156 = 0, $$pre158 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$22 = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$ = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$45 = 0;
 var $$sroa$043$0$$sroa$043$0$$sroa$043$0$46 = 0, $$sroa$065 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$ = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$66 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$69 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$065 = sp;
 switch ($1|0) {
 case 0:  {
  $2 = HEAP32[$0>>2]|0;
  $3 = $2 & 393216;
  $4 = ($3|0)==(0);
  L3: do {
   if ($4) {
    $$pre = ((($0)) + 4|0);
    $$pre154 = ((($0)) + 8|0);
    $$pre$phi155Z2D = $$pre154;$$pre$phiZ2D = $$pre;
   } else {
    $5 = ((($0)) + 12|0);
    $6 = ((($0)) + 4|0);
    $7 = ((($0)) + 8|0);
    while(1) {
     $8 = HEAP32[$0>>2]|0;
     HEAP32[$$sroa$065>>2] = $8;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$ = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$66 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 = HEAP32[$$sroa$065>>2]|0;
     $9 = (($$sroa$065$0$$sroa$065$0$$sroa$065$0$66) + 393216)|0;
     $10 = $9 & 393216;
     $11 = $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 & -393217;
     $12 = $11 | $10;
     HEAP32[$$sroa$065>>2] = $12;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$69 = HEAP32[$$sroa$065>>2]|0;
     $13 = (_g_atomic_int_compare_and_exchange($0,$8,$$sroa$065$0$$sroa$065$0$$sroa$065$0$69)|0);
     $14 = ($13|0)==(0);
     if (!($14)) {
      $15 = $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 >>> 17;
      $16 = $15 & 3;
      $17 = HEAP32[$5>>2]|0;
      $18 = HEAP32[$0>>2]|0;
      $19 = $18 >>> 15;
      $20 = $19 & 2;
      $21 = (($17) + ($20<<3)|0);
      $22 = (($21) + ($16<<3)|0);
      $23 = ((($22)) + 4|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP32[$6>>2] = $24;
      $25 = HEAP32[$22>>2]|0;
      HEAP32[$7>>2] = $25;
      $26 = $24;
      $27 = $25;
      ftCall_vii($26|0,$27,$0);
      $28 = HEAP32[$0>>2]|0;
      $29 = $28 & 393216;
      $30 = ($29|0)==(0);
      if ($30) {
       $$pre$phi155Z2D = $7;$$pre$phiZ2D = $6;
       break L3;
      }
     }
    }
   }
  } while(0);
  HEAP32[$$pre$phiZ2D>>2] = 0;
  HEAP32[$$pre$phi155Z2D>>2] = 0;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  while(1) {
   $31 = HEAP32[$0>>2]|0;
   HEAP32[$$sroa$065>>2] = $31;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$ = HEAP32[$$sroa$065>>2]|0;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 = HEAP32[$$sroa$065>>2]|0;
   $32 = $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 | 134217728;
   HEAP32[$$sroa$065>>2] = $32;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$45 = HEAP32[$$sroa$065>>2]|0;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$46 = HEAP32[$$sroa$065>>2]|0;
   $33 = (_g_atomic_int_compare_and_exchange($0,$31,$$sroa$043$0$$sroa$043$0$$sroa$043$0$46)|0);
   $34 = ($33|0)==(0);
   if (!($34)) {
    break;
   }
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 133693440;
  $37 = ($36|0)==(0);
  L17: do {
   if ($37) {
    $$pre156 = ((($0)) + 4|0);
    $$pre158 = ((($0)) + 8|0);
    $$pre$phi157Z2D = $$pre156;$$pre$phi159Z2D = $$pre158;
   } else {
    $38 = ((($0)) + 12|0);
    $39 = ((($0)) + 4|0);
    $40 = ((($0)) + 8|0);
    while(1) {
     $41 = HEAP32[$0>>2]|0;
     HEAP32[$$sroa$065>>2] = $41;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = HEAP32[$$sroa$065>>2]|0;
     $42 = (($$sroa$018$0$$sroa$018$0$$sroa$018$0$19) + 133693440)|0;
     $43 = $42 & 133693440;
     $44 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 & -133693441;
     $45 = $44 | $43;
     HEAP32[$$sroa$065>>2] = $45;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$22 = HEAP32[$$sroa$065>>2]|0;
     $46 = (_g_atomic_int_compare_and_exchange($0,$41,$$sroa$018$0$$sroa$018$0$$sroa$018$0$22)|0);
     $47 = ($46|0)==(0);
     if (!($47)) {
      $48 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 >>> 19;
      $49 = $48 & 255;
      $50 = HEAP32[$38>>2]|0;
      $51 = HEAP32[$0>>2]|0;
      $52 = $51 >>> 15;
      $53 = $52 & 2;
      $54 = (($50) + ($53<<3)|0);
      $55 = HEAP32[$0>>2]|0;
      $56 = $55 >>> 17;
      $57 = $56 & 3;
      $58 = (($54) + ($57<<3)|0);
      $59 = (($58) + ($49<<3)|0);
      $60 = ((($59)) + 4|0);
      $61 = HEAP32[$60>>2]|0;
      HEAP32[$39>>2] = $61;
      $62 = HEAP32[$59>>2]|0;
      HEAP32[$40>>2] = $62;
      $63 = $61;
      $64 = $62;
      ftCall_vii($63|0,$64,$0);
      $65 = HEAP32[$0>>2]|0;
      $66 = $65 & 133693440;
      $67 = ($66|0)==(0);
      if ($67) {
       $$pre$phi157Z2D = $39;$$pre$phi159Z2D = $40;
       break L17;
      }
     }
    }
   }
  } while(0);
  HEAP32[$$pre$phi157Z2D>>2] = 0;
  HEAP32[$$pre$phi159Z2D>>2] = 0;
  while(1) {
   $68 = HEAP32[$0>>2]|0;
   HEAP32[$$sroa$065>>2] = $68;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$065>>2]|0;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$065>>2]|0;
   $69 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 & -134217729;
   HEAP32[$$sroa$065>>2] = $69;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$065>>2]|0;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$065>>2]|0;
   $70 = (_g_atomic_int_compare_and_exchange($0,$68,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
   $71 = ($70|0)==(0);
   if (!($71)) {
    break;
   }
  }
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $72 = HEAP32[$0>>2]|0;
  $73 = $72 & 65536;
  $74 = ($73|0)==(0);
  if ($74) {
   STACKTOP = sp;return;
  }
  $75 = ((($0)) + 12|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = HEAP32[$76>>2]|0;
  ftCall_vii($78|0,$79,$0);
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $80 = HEAP32[$0>>2]|0;
  $81 = $80 >>> 16;
  $82 = $81 & 1;
  $83 = ($82|0)==(0);
  if ($83) {
   STACKTOP = sp;return;
  }
  $84 = ((($0)) + 12|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = (((($85) + ($82<<3)|0)) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = (($85) + ($82<<3)|0);
  $89 = HEAP32[$88>>2]|0;
  ftCall_vii($87|0,$89,$0);
  STACKTOP = sp;return;
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
}
function _g_closure_unref($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi155$iZ2D = 0, $$pre$phiZ2D = 0, $$pre154$i = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$4 = 0, $$sroa$065$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$065$i = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 32767;
 $3 = ($2|0)==(1);
 if ($3) {
  _g_closure_invalidate($0);
 }
 while(1) {
  $4 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$065$i>>2] = $4;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$065$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$065$i>>2]|0;
  $5 = (($$sroa$0$0$$sroa$0$0$$sroa$0$0$1) + 32767)|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$065$i>>2]|0;
  $6 = $5 & 32767;
  $7 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 & -32768;
  $8 = $7 | $6;
  HEAP32[$$sroa$065$i>>2] = $8;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$065$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$4 = HEAP32[$$sroa$065$i>>2]|0;
  $9 = (_g_atomic_int_compare_and_exchange($0,$4,$$sroa$0$0$$sroa$0$0$$sroa$0$0$4)|0);
  $10 = ($9|0)==(0);
  if (!($10)) {
   break;
  }
 }
 $11 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 & 32767;
 $12 = ($11|0)==(0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = $13 & 393216;
 $15 = ($14|0)==(0);
 L10: do {
  if ($15) {
   $$pre$i = ((($0)) + 4|0);
   $$pre154$i = ((($0)) + 8|0);
   $$pre = ((($0)) + 12|0);
   $$pre$phi$iZ2D = $$pre$i;$$pre$phi155$iZ2D = $$pre154$i;$$pre$phiZ2D = $$pre;
  } else {
   $16 = ((($0)) + 12|0);
   $17 = ((($0)) + 4|0);
   $18 = ((($0)) + 8|0);
   while(1) {
    $19 = HEAP32[$0>>2]|0;
    HEAP32[$$sroa$065$i>>2] = $19;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i = HEAP32[$$sroa$065$i>>2]|0;
    $20 = (($$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i) + 393216)|0;
    $21 = $20 & 393216;
    $22 = $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i & -393217;
    $23 = $22 | $21;
    HEAP32[$$sroa$065$i>>2] = $23;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i = HEAP32[$$sroa$065$i>>2]|0;
    $24 = (_g_atomic_int_compare_and_exchange($0,$19,$$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i)|0);
    $25 = ($24|0)==(0);
    if (!($25)) {
     $26 = $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i >>> 17;
     $27 = $26 & 3;
     $28 = HEAP32[$16>>2]|0;
     $29 = HEAP32[$0>>2]|0;
     $30 = $29 >>> 15;
     $31 = $30 & 2;
     $32 = (($28) + ($31<<3)|0);
     $33 = (($32) + ($27<<3)|0);
     $34 = ((($33)) + 4|0);
     $35 = HEAP32[$34>>2]|0;
     HEAP32[$17>>2] = $35;
     $36 = HEAP32[$33>>2]|0;
     HEAP32[$18>>2] = $36;
     $37 = $35;
     $38 = $36;
     ftCall_vii($37|0,$38,$0);
     $39 = HEAP32[$0>>2]|0;
     $40 = $39 & 393216;
     $41 = ($40|0)==(0);
     if ($41) {
      $$pre$phi$iZ2D = $17;$$pre$phi155$iZ2D = $18;$$pre$phiZ2D = $16;
      break L10;
     }
    }
   }
  }
 } while(0);
 HEAP32[$$pre$phi$iZ2D>>2] = 0;
 HEAP32[$$pre$phi155$iZ2D>>2] = 0;
 $42 = HEAP32[$$pre$phiZ2D>>2]|0;
 _g_free($42);
 $43 = ((($0)) + -16|0);
 _g_free($43);
 STACKTOP = sp;return;
}
function _g_closure_remove_invalidate_notifier($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$042$add$i = 0, $$042$idx50$i = 0, $$042$ptr51$i = 0, $$ptr43$i = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $$sroa$0$i = sp + 8|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$0>>2]|0;
  $6 = $5 & 134217728;
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($0)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($2|0);
   if ($10) {
    $11 = ((($0)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($1|0);
    if ($13) {
     HEAP32[$8>>2] = 0;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $14 = ((($0)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$0>>2]|0;
 $17 = $16 >>> 15;
 $18 = $17 & 2;
 $19 = HEAP32[$0>>2]|0;
 $20 = $19 >>> 17;
 $21 = $20 & 3;
 $22 = (($21) + ($18))|0;
 $23 = HEAP32[$0>>2]|0;
 $24 = $23 >>> 19;
 $25 = $24 & 255;
 $26 = (($22) + ($25))|0;
 $27 = (($15) + ($26<<3)|0);
 $$ptr43$i = ((($27)) + -8|0);
 $28 = HEAP32[$0>>2]|0;
 $29 = $28 >>> 19;
 $30 = $29 & 255;
 $31 = ($30|0)==(0);
 L8: do {
  if (!($31)) {
   $32 = (0 - ($30))|0;
   $$042$idx50$i = $32;
   while(1) {
    $$042$ptr51$i = (($27) + ($$042$idx50$i<<3)|0);
    $33 = ((($$042$ptr51$i)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($34|0)==($2|0);
    if ($35) {
     $36 = HEAP32[$$042$ptr51$i>>2]|0;
     $37 = ($36|0)==($1|0);
     if ($37) {
      break;
     }
    }
    $$042$add$i = (($$042$idx50$i) + 1)|0;
    $56 = ($$042$idx50$i|0)<(-1);
    if ($56) {
     $$042$idx50$i = $$042$add$i;
    } else {
     break L8;
    }
   }
   while(1) {
    $38 = HEAP32[$0>>2]|0;
    HEAP32[$$sroa$0$i>>2] = $38;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
    $39 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 133693440)|0;
    $40 = $39 & 133693440;
    $41 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -133693441;
    $42 = $41 | $40;
    HEAP32[$$sroa$0$i>>2] = $42;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
    $43 = (_g_atomic_int_compare_and_exchange($0,$38,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
    $44 = ($43|0)==(0);
    if (!($44)) {
     break;
    }
   }
   $45 = ($$042$idx50$i|0)<(-1);
   if (!($45)) {
    STACKTOP = sp;return;
   }
   $46 = $$ptr43$i;
   $47 = $46;
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + 4)|0;
   $50 = $49;
   $51 = HEAP32[$50>>2]|0;
   $52 = $$042$ptr51$i;
   $53 = $52;
   HEAP32[$53>>2] = $48;
   $54 = (($52) + 4)|0;
   $55 = $54;
   HEAP32[$55>>2] = $51;
   STACKTOP = sp;return;
  }
 } while(0);
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 _g_log(0,16,122664,$vararg_buffer);
 STACKTOP = sp;return;
}
function __g_closure_supports_invoke_va($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $10 = 0;
  return ($10|0);
 }
 $4 = ((($0)) + -16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $10 = 1;
  return ($10|0);
 }
 $7 = ((($0)) + -8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)!=(0|0);
 $phitmp = $9&1;
 $10 = $phitmp;
 return ($10|0);
}
function __g_closure_invoke_va($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$072 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0$i = sp;
 while(1) {
  $6 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $6;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
  $7 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 1)|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
  $8 = $7 & 32767;
  $9 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -32768;
  $10 = $9 | $8;
  HEAP32[$$sroa$0$i>>2] = $10;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
  $11 = (_g_atomic_int_compare_and_exchange($0,$6,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   break;
  }
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = ($13|0)<(0);
 if ($14) {
  _g_closure_unref($0);
  STACKTOP = sp;return;
 }
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 >>> 30;
 while(1) {
  $17 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $17;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = HEAP32[$$sroa$0$i>>2]|0;
  $18 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 | 1073741824;
  HEAP32[$$sroa$0$i>>2] = $18;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = HEAP32[$$sroa$0$i>>2]|0;
  $19 = (_g_atomic_int_compare_and_exchange($0,$17,$$sroa$018$0$$sroa$018$0$$sroa$018$0$21)|0);
  $20 = ($19|0)==(0);
  if (!($20)) {
   break;
  }
 }
 $21 = $16 & 1;
 $22 = ((($0)) + -8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(0|0);
 if ($24) {
  $27 = ((($0)) + -4|0);
  $28 = HEAP32[$27>>2]|0;
  $$0 = $28;$$072 = 0;
 } else {
  $25 = ((($0)) + -12|0);
  $26 = HEAP32[$25>>2]|0;
  $$0 = $23;$$072 = $26;
 }
 $29 = ($21|0)==(0);
 if ($29) {
  $30 = HEAP32[$0>>2]|0;
  $31 = $30 & 65536;
  $32 = ($31|0)==(0);
  if (!($32)) {
   $33 = ((($0)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($34)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = HEAP32[$34>>2]|0;
   ftCall_vii($36|0,$37,$0);
  }
  ftCall_viiiiiii($$0|0,$0,$1,$2,$3,$$072,$4,$5);
  $38 = HEAP32[$0>>2]|0;
  $39 = $38 >>> 16;
  $40 = $39 & 1;
  $41 = ($40|0)==(0);
  if (!($41)) {
   $42 = ((($0)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (((($43) + ($40<<3)|0)) + 4|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (($43) + ($40<<3)|0);
   $47 = HEAP32[$46>>2]|0;
   ftCall_vii($45|0,$47,$0);
  }
 } else {
  ftCall_viiiiiii($$0|0,$0,$1,$2,$3,$$072,$4,$5);
 }
 $48 = $21 << 30;
 while(1) {
  $49 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $49;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$0$i>>2]|0;
  $50 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 & -1073741825;
  $51 = $50 | $48;
  HEAP32[$$sroa$0$i>>2] = $51;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$0$i>>2]|0;
  $52 = (_g_atomic_int_compare_and_exchange($0,$49,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   break;
  }
 }
 _g_closure_unref($0);
 STACKTOP = sp;return;
}
function __g_closure_is_void($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$shrunk = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)<(0);
 do {
  if ($3) {
   $$0$shrunk = 1;
  } else {
   $4 = ((($0)) + -16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($5|0)==(259|0);
   if ($6) {
    $7 = ((($0)) + 8|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = ((($0)) + -12|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = HEAP32[$1>>2]|0;
    $12 = (_g_type_interface_peek($11,$8)|0);
    $13 = (($12) + ($10)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==(0|0);
    $$0$shrunk = $15;
    break;
   }
   $16 = ($5|0)==(260|0);
   if ($16) {
    $17 = ((($0)) + -12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = HEAP32[$1>>2]|0;
    $20 = (($19) + ($18)|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ($21|0)==(0|0);
    $$0$shrunk = $22;
   } else {
    $$0$shrunk = 0;
   }
  }
 } while(0);
 $$0 = $$0$shrunk&1;
 return ($$0|0);
}
function _g_type_iface_meta_marshal($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (_g_value_peek_pointer($3)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_interface_peek($10,$7)|0);
 $12 = (($11) + ($8)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  return;
 }
 $15 = ((($0)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 ftCall_viiiiii($16|0,$0,$1,$2,$3,$4,$13);
 return;
}
function _g_type_class_meta_marshal($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $5;
 $7 = (_g_value_peek_pointer($3)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + ($6)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  return;
 }
 $12 = ((($0)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 ftCall_viiiiii($13|0,$0,$1,$2,$3,$4,$10);
 return;
}
function __g_object_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;
 HEAP16[$0>>1] = 80;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 261;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 262;
 $3 = ((($0)) + 12|0);
 HEAP32[$3>>2] = 263;
 $4 = ((($0)) + 24|0);
 HEAP16[$4>>1] = 12;
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 264;
 $6 = ((($0)) + 32|0);
 HEAP32[$6>>2] = 117564;
 $7 = (_g_intern_static_string(122763)|0);
 $8 = (_g_type_register_fundamental(80,$7,$0,117596,0)|0);
 $9 = ($8|0)==(80);
 if ($9) {
  _g_value_register_transform_func(80,80,265);
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,122771,402,122804,122824);
  // unreachable;
 }
}
function _g_object_base_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 $2 = ((($0)) + 52|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -3;
 HEAP32[$2>>2] = $4;
 $5 = ($1|0)==(0|0);
 if ($5) {
  $13 = 0;
 } else {
  $6 = ((($1)) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 | 2;
  HEAP32[$6>>2] = $8;
  $9 = ((($1)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (_g_slist_copy($10)|0);
  $13 = $11;
 }
 $12 = ((($0)) + 4|0);
 HEAP32[$12>>2] = $13;
 $14 = ((($0)) + 28|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($0)) + 24|0);
 HEAP32[$15>>2] = 0;
 return;
}
function _g_object_base_class_finalize($0) {
 $0 = $0|0;
 var $$016 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 __g_signals_destroy($1);
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 _g_slist_free($3);
 HEAP32[$2>>2] = 0;
 $4 = HEAP32[37113]|0;
 $5 = HEAP32[$0>>2]|0;
 $6 = (_g_param_spec_pool_list_owned($4,$5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  _g_list_free($6);
  return;
 }
 $$016 = $6;
 while(1) {
  $8 = HEAP32[$$016>>2]|0;
  $9 = ((($8)) + 36|0);
  HEAP32[$9>>2] = 0;
  _g_param_spec_unref($8);
  $10 = ((($$016)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if ($12) {
   break;
  } else {
   $$016 = $11;
  }
 }
 _g_list_free($6);
 return;
}
function _g_object_do_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_g_quark_from_static_string(122918)|0);
 (_g_quark_from_static_string(122940)|0);
 (_g_quark_from_static_string(122964)|0);
 (_g_quark_from_static_string(122987)|0);
 (_g_quark_from_static_string(123013)|0);
 (_g_quark_from_static_string(123034)|0);
 $1 = (_g_param_spec_pool_new(1)|0);
 HEAP32[37113] = $1;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 266;
 $3 = ((($0)) + 48|0);
 HEAP32[$3>>2] = 267;
 $4 = ((($0)) + 24|0);
 HEAP32[$4>>2] = 268;
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 269;
 $6 = ((($0)) + 32|0);
 HEAP32[$6>>2] = 270;
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 271;
 $8 = ((($0)) + 40|0);
 HEAP32[$8>>2] = 272;
 $9 = ((($0)) + 44|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = 273;
 $11 = ((($0)) + 16|0);
 HEAP32[$11>>2] = 274;
 $12 = ((($0)) + 20|0);
 HEAP32[$12>>2] = 275;
 _g_type_add_interface_check(0,276);
 return;
}
function _g_object_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 1;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 return;
}
function _g_value_object_transform_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = HEAP32[$3>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$1>>2]|0;
  $8 = (_g_type_is_a($6,$7)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   $$sink = 0;
  } else {
   $10 = HEAP32[$2>>2]|0;
   $11 = ((($10)) + 4|0);
   (_g_atomic_int_add($11,1)|0);
   $$sink = $10;
  }
 }
 $12 = ((($1)) + 8|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function _g_value_object_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _g_value_object_free_value($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 4|0);
 (_g_atomic_int_get($4)|0);
 $5 = (_g_atomic_int_get($4)|0);
 $6 = ($5|0)>(1);
 L4: do {
  if ($6) {
   $10 = $5;
   while(1) {
    $9 = (($10) + -1)|0;
    $11 = (_g_atomic_int_compare_and_exchange($4,$10,$9)|0);
    $12 = ($11|0)==(0);
    if (!($12)) {
     break;
    }
    $7 = (_g_atomic_int_get($4)|0);
    $8 = ($7|0)>(1);
    if ($8) {
     $10 = $7;
    } else {
     break L4;
    }
   }
   return;
  }
 } while(0);
 $13 = HEAP32[$2>>2]|0;
 $14 = ((($13)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$2);
 _g_type_free_instance($2);
 return;
}
function _g_value_object_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = ((($3)) + 4|0);
  (_g_atomic_int_add($5,1)|0);
  $$sink = $3;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 return;
}
function _g_value_object_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_value_object_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = (_g_type_name($8)|0);
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 141817;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 0;
  $10 = (_g_strconcat(122846,$vararg_buffer)|0);
  $$1 = $10;
  STACKTOP = sp;return ($$1|0);
 }
 $11 = HEAP32[$6>>2]|0;
 $12 = HEAP32[$0>>2]|0;
 $13 = (_g_value_type_compatible($11,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$4>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = 124463;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $19;
  $vararg_ptr8 = ((($vararg_buffer3)) + 12|0);
  HEAP32[$vararg_ptr8>>2] = 141817;
  $vararg_ptr9 = ((($vararg_buffer3)) + 16|0);
  HEAP32[$vararg_ptr9>>2] = 0;
  $20 = (_g_strconcat(122896,$vararg_buffer3)|0);
  $$1 = $20;
  STACKTOP = sp;return ($$1|0);
 } else {
  $21 = ((($4)) + 4|0);
  (_g_atomic_int_add($21,1)|0);
  $22 = ((($0)) + 8|0);
  HEAP32[$22>>2] = $4;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _g_value_object_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = ((($10)) + 4|0);
    (_g_atomic_int_add($14,1)|0);
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _g_object_constructor($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_type_create_instance($0)|0);
 return ($3|0);
}
function _g_object_constructed($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_do_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$3>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 $9 = HEAP32[$0>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 122771;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1099;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $5;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $8;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $11;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_object_do_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$3>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 $9 = HEAP32[$0>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 122771;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1113;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $5;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $8;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $11;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_object_real_dispose($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_signal_handlers_destroy($0);
 return;
}
function _g_object_finalize($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_dispatch_properties_changed($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($1|0)==(0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $$08 = 0;
 while(1) {
  $4 = (($2) + ($$08<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (_g_param_spec_get_name_quark($5)|0);
  $7 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $7;
  _g_signal_emit($0,0,$6,$vararg_buffer);
  $8 = (($$08) + 1)|0;
  $exitcond = ($8|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$08 = $8;
  }
 }
 STACKTOP = sp;return;
}
function _g_object_to_string($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 $4 = (_g_strdup($3)|0);
 return ($4|0);
}
function _g_object_equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 $3 = $2&1;
 return ($3|0);
}
function _g_object_get_hash_code($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 return ($1|0);
}
function _object_interface_check_properties($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer20 = 0, $vararg_buffer27 = 0, $vararg_buffer3 = 0;
 var $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr26 = 0, $vararg_ptr30 = 0, $vararg_ptr31 = 0, $vararg_ptr32 = 0, $vararg_ptr33 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer27 = sp + 96|0;
 $vararg_buffer20 = sp + 72|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 116|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_class_ref($5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$6>>2]|0;
 $9 = ($8|0)==(80);
 if ($9) {
  label = 4;
 } else {
  $10 = (_g_type_check_class_is_a($6,80)|0);
  $phitmp = ($10|0)==(0);
  if (!($phitmp)) {
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $11 = HEAP32[37113]|0;
  $12 = (_g_param_spec_pool_list($11,$3,$2)|0);
  $13 = HEAP32[$2>>2]|0;
  $14 = (($13) + -1)|0;
  HEAP32[$2>>2] = $14;
  $15 = ($13|0)==(0);
  L8: do {
   if (!($15)) {
    $18 = $14;
    L10: while(1) {
     $16 = HEAP32[37113]|0;
     $17 = (($12) + ($18<<2)|0);
     $19 = HEAP32[$17>>2]|0;
     $20 = ((($19)) + 4|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$6>>2]|0;
     $23 = (_g_param_spec_pool_lookup($16,$21,$22,1)|0);
     $24 = ($23|0)==(0|0);
     L12: do {
      if ($24) {
       $25 = HEAP32[$6>>2]|0;
       $26 = (_g_type_name($25)|0);
       $27 = HEAP32[$2>>2]|0;
       $28 = (($12) + ($27<<2)|0);
       $29 = HEAP32[$28>>2]|0;
       $30 = ((($29)) + 4|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (_g_type_name($3)|0);
       HEAP32[$vararg_buffer>>2] = $26;
       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
       HEAP32[$vararg_ptr1>>2] = $31;
       $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
       HEAP32[$vararg_ptr2>>2] = $32;
       _g_log(0,8,123058,$vararg_buffer);
      } else {
       $33 = HEAP32[$2>>2]|0;
       $34 = (($12) + ($33<<2)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = ((($35)) + 8|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ((($23)) + 8|0);
       $39 = HEAP32[$38>>2]|0;
       $40 = $39 ^ 3;
       $41 = $37 & 3;
       $42 = $41 & $40;
       $43 = ($42|0)==(0);
       if (!($43)) {
        $44 = ((($35)) + 4|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = HEAP32[$6>>2]|0;
        $47 = (_g_type_name($46)|0);
        $48 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer3>>2] = $45;
        $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
        HEAP32[$vararg_ptr6>>2] = $47;
        $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
        HEAP32[$vararg_ptr7>>2] = $48;
        _g_log(0,8,123126,$vararg_buffer3);
        break;
       }
       $49 = $37 & 2;
       $50 = ($49|0)==(0);
       if (!($50)) {
        $51 = $37 & 8;
        $52 = $51 ^ 8;
        $53 = $52 & $39;
        $54 = ($53|0)==(0);
        if (!($54)) {
         $55 = ((($35)) + 4|0);
         $56 = HEAP32[$55>>2]|0;
         $57 = HEAP32[$6>>2]|0;
         $58 = (_g_type_name($57)|0);
         $59 = (_g_type_name($3)|0);
         HEAP32[$vararg_buffer8>>2] = $56;
         $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
         HEAP32[$vararg_ptr11>>2] = $58;
         $vararg_ptr12 = ((($vararg_buffer8)) + 8|0);
         HEAP32[$vararg_ptr12>>2] = $59;
         _g_log(0,8,123231,$vararg_buffer8);
         break;
        }
       }
       $trunc = $37&255;
       $trunc$clear = $trunc & 3;
       switch ($trunc$clear<<24>>24) {
       case 3:  {
        $60 = ((($35)) + 12|0);
        $61 = HEAP32[$60>>2]|0;
        $62 = ((($23)) + 12|0);
        $63 = HEAP32[$62>>2]|0;
        $64 = ($61|0)==($63|0);
        if ($64) {
         break L12;
        }
        $65 = ((($35)) + 4|0);
        $66 = HEAP32[$65>>2]|0;
        $67 = HEAP32[$6>>2]|0;
        $68 = (_g_type_name($67)|0);
        $69 = (_g_type_check_instance_cast($23,76)|0);
        $70 = ((($23)) + 12|0);
        $71 = HEAP32[$70>>2]|0;
        $72 = (_g_type_name($71)|0);
        $73 = HEAP32[$2>>2]|0;
        $74 = (($12) + ($73<<2)|0);
        $75 = HEAP32[$74>>2]|0;
        $76 = (_g_type_check_instance_cast($75,76)|0);
        $77 = ((($75)) + 12|0);
        $78 = HEAP32[$77>>2]|0;
        $79 = (_g_type_name($78)|0);
        $80 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer13>>2] = $66;
        $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);
        HEAP32[$vararg_ptr16>>2] = $68;
        $vararg_ptr17 = ((($vararg_buffer13)) + 8|0);
        HEAP32[$vararg_ptr17>>2] = $72;
        $vararg_ptr18 = ((($vararg_buffer13)) + 12|0);
        HEAP32[$vararg_ptr18>>2] = $79;
        $vararg_ptr19 = ((($vararg_buffer13)) + 16|0);
        HEAP32[$vararg_ptr19>>2] = $80;
        _g_log(0,8,123364,$vararg_buffer13);
        break L12;
        break;
       }
       case 1:  {
        $81 = ((($23)) + 12|0);
        $82 = HEAP32[$81>>2]|0;
        $83 = ((($35)) + 12|0);
        $84 = HEAP32[$83>>2]|0;
        $85 = (_g_type_is_a($82,$84)|0);
        $86 = ($85|0)==(0);
        if (!($86)) {
         break L12;
        }
        $87 = HEAP32[$2>>2]|0;
        $88 = (($12) + ($87<<2)|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = ((($89)) + 4|0);
        $91 = HEAP32[$90>>2]|0;
        $92 = HEAP32[$6>>2]|0;
        $93 = (_g_type_name($92)|0);
        $94 = (_g_type_check_instance_cast($23,76)|0);
        $95 = ((($23)) + 12|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (_g_type_name($96)|0);
        $98 = HEAP32[$2>>2]|0;
        $99 = (($12) + ($98<<2)|0);
        $100 = HEAP32[$99>>2]|0;
        $101 = (_g_type_check_instance_cast($100,76)|0);
        $102 = ((($100)) + 12|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = (_g_type_name($103)|0);
        $105 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer20>>2] = $91;
        $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);
        HEAP32[$vararg_ptr23>>2] = $93;
        $vararg_ptr24 = ((($vararg_buffer20)) + 8|0);
        HEAP32[$vararg_ptr24>>2] = $97;
        $vararg_ptr25 = ((($vararg_buffer20)) + 12|0);
        HEAP32[$vararg_ptr25>>2] = $104;
        $vararg_ptr26 = ((($vararg_buffer20)) + 16|0);
        HEAP32[$vararg_ptr26>>2] = $105;
        _g_log(0,8,123503,$vararg_buffer20);
        break L12;
        break;
       }
       case 2:  {
        $106 = ((($35)) + 12|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ((($23)) + 12|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (_g_type_is_a($107,$109)|0);
        $111 = ($110|0)==(0);
        if (!($111)) {
         break L12;
        }
        $112 = HEAP32[$2>>2]|0;
        $113 = (($12) + ($112<<2)|0);
        $114 = HEAP32[$113>>2]|0;
        $115 = ((($114)) + 4|0);
        $116 = HEAP32[$115>>2]|0;
        $117 = HEAP32[$6>>2]|0;
        $118 = (_g_type_name($117)|0);
        $119 = (_g_type_check_instance_cast($23,76)|0);
        $120 = ((($23)) + 12|0);
        $121 = HEAP32[$120>>2]|0;
        $122 = (_g_type_name($121)|0);
        $123 = HEAP32[$2>>2]|0;
        $124 = (($12) + ($123<<2)|0);
        $125 = HEAP32[$124>>2]|0;
        $126 = (_g_type_check_instance_cast($125,76)|0);
        $127 = ((($125)) + 12|0);
        $128 = HEAP32[$127>>2]|0;
        $129 = (_g_type_name($128)|0);
        $130 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer27>>2] = $116;
        $vararg_ptr30 = ((($vararg_buffer27)) + 4|0);
        HEAP32[$vararg_ptr30>>2] = $118;
        $vararg_ptr31 = ((($vararg_buffer27)) + 8|0);
        HEAP32[$vararg_ptr31>>2] = $122;
        $vararg_ptr32 = ((($vararg_buffer27)) + 12|0);
        HEAP32[$vararg_ptr32>>2] = $129;
        $vararg_ptr33 = ((($vararg_buffer27)) + 16|0);
        HEAP32[$vararg_ptr33>>2] = $130;
        _g_log(0,8,123655,$vararg_buffer27);
        break L12;
        break;
       }
       default: {
        break L10;
       }
       }
      }
     } while(0);
     $131 = HEAP32[$2>>2]|0;
     $132 = (($131) + -1)|0;
     HEAP32[$2>>2] = $132;
     $133 = ($131|0)==(0);
     if ($133) {
      break L8;
     } else {
      $18 = $132;
     }
    }
    _g_assertion_message_expr(0,122771,1671,123809,0);
    // unreachable;
   }
  } while(0);
  _g_free($12);
 }
 _g_type_class_unref($6);
 STACKTOP = sp;return;
}
function _g_object_class_install_property($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = (_g_type_parent($3)|0);
 $5 = ((($0)) + 52|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 2;
 $8 = ($7|0)==(0);
 if (!($8)) {
  $9 = HEAP32[$0>>2]|0;
  $10 = (_g_type_name($9)|0);
  $11 = ((($2)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $10;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $12;
  _g_log(0,4,123843,$vararg_buffer);
  while(1) {
  }
 }
 $13 = $6 | 1;
 HEAP32[$5>>2] = $13;
 $14 = HEAP32[37113]|0;
 $15 = ((($2)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (_g_param_spec_pool_lookup($14,$16,$3,0)|0);
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  $19 = (_g_type_name($3)|0);
  $20 = HEAP32[$15>>2]|0;
  HEAP32[$vararg_buffer2>>2] = $19;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $20;
  _g_log(0,16,123904,$vararg_buffer2);
  STACKTOP = sp;return;
 }
 (_g_param_spec_ref_sink($2)|0);
 $21 = ((($2)) + 36|0);
 HEAP32[$21>>2] = $1;
 $22 = HEAP32[37113]|0;
 _g_param_spec_pool_insert($22,$2,$3);
 $23 = ((($2)) + 8|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $24 & 12;
 $26 = ($25|0)==(0);
 if (!($26)) {
  $27 = ((($0)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (_g_slist_append($28,$2)|0);
  HEAP32[$27>>2] = $29;
 }
 $30 = HEAP32[37113]|0;
 $31 = HEAP32[$15>>2]|0;
 $32 = (_g_param_spec_pool_lookup($30,$31,$4,1)|0);
 $33 = ($32|0)==(0|0);
 if ($33) {
  STACKTOP = sp;return;
 }
 $34 = ((($32)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $35 & 12;
 $37 = ($36|0)==(0);
 if ($37) {
  STACKTOP = sp;return;
 }
 $38 = ((($0)) + 4|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (_g_slist_remove($39,$32)|0);
 HEAP32[$38>>2] = $40;
 STACKTOP = sp;return;
}
function _g_object_ref($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_add($1,1)|0);
 return ($0|0);
}
function _g_object_unref($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_get($1)|0);
 $2 = (_g_atomic_int_get($1)|0);
 $3 = ($2|0)>(1);
 L1: do {
  if ($3) {
   $7 = $2;
   while(1) {
    $6 = (($7) + -1)|0;
    $8 = (_g_atomic_int_compare_and_exchange($1,$7,$6)|0);
    $9 = ($8|0)==(0);
    if (!($9)) {
     break;
    }
    $4 = (_g_atomic_int_get($1)|0);
    $5 = ($4|0)>(1);
    if ($5) {
     $7 = $4;
    } else {
     break L1;
    }
   }
   return;
  }
 } while(0);
 $10 = HEAP32[$0>>2]|0;
 $11 = ((($10)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 ftCall_vi($12|0,$0);
 _g_type_free_instance($0);
 return;
}
function _g_object_notify_by_pspec($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_new($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $$0$in = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ($1|0)==(0|0);
 do {
  if ($3) {
   $4 = (_g_type_class_peek_static($0)|0);
   $5 = ($4|0)==(0|0);
   if (!($5)) {
    $6 = HEAP32[$4>>2]|0;
    $7 = (_g_type_create_instance($6)|0);
    $$0$in = $7;
    break;
   }
   $8 = (_g_type_class_ref($0)|0);
   $phitmp = ($8|0)==(0|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (_g_type_create_instance($9)|0);
   if ($phitmp) {
    $$0$in = $10;
   } else {
    _g_type_class_unref($8);
    $$0$in = $10;
   }
  } else {
   HEAP32[$2>>2] = $varargs;
   $11 = (_g_object_new_valist($0,$1,$2)|0);
   $$0$in = $11;
  }
 } while(0);
 STACKTOP = sp;return ($$0$in|0);
}
function _g_object_new_valist($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0128 = 0, $$0129$in = 0, $$0130 = 0, $$0131 = 0, $$0132 = 0, $$0137$lcssa = 0, $$0137149 = 0, $$0138148 = 0, $$1 = 0, $$1133140 = 0, $$2141 = 0, $$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current15 = 0;
 var $arglist_current2 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next16 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded17 = 0, $expanded19 = 0, $expanded20 = 0, $expanded21 = 0, $expanded23 = 0, $expanded24 = 0, $expanded26 = 0, $expanded27 = 0, $expanded28 = 0, $expanded30 = 0;
 var $expanded31 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded47 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $vararg_buffer = 0;
 var $vararg_ptr13 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $vararg_buffer = sp + 192|0;
 $3 = sp + 64|0;
 $4 = sp;
 $5 = (_g_type_class_peek_static($0)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_g_type_class_ref($0)|0);
  $$0 = $7;$$0128 = $7;$106 = $7;
 } else {
  $$0 = $5;$$0128 = 0;$106 = 0;
 }
 $8 = ($1|0)==(0|0);
 if ($8) {
  $103 = HEAP32[$$0>>2]|0;
  $104 = (_g_type_create_instance($103)|0);
  $$0129$in = $104;
 } else {
  $$0130 = $3;$$0131 = $1;$$0132 = 0;
  L7: while(1) {
   $9 = HEAP32[37113]|0;
   $10 = (_g_param_spec_pool_lookup($9,$$0131,$0,1)|0);
   $11 = (_g_object_new_is_valid_property($0,$10,$$0131,$$0130,$$0132)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $$1133140 = $$0132;$$2141 = $$0130;
    break;
   }
   $13 = ($$0132|0)==(16);
   if ($13) {
    $14 = (_g_malloc_n(17,8)|0);
    dest=$14; src=$3; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    $$1 = $14;
   } else {
    $15 = ($$0132>>>0)>(16);
    if ($15) {
     $16 = (($$0132) + 1)|0;
     $17 = (_g_realloc_n($$0130,$16,8)|0);
     $$1 = $17;
    } else {
     $$1 = $$0130;
    }
   }
   $18 = (($$1) + ($$0132<<3)|0);
   HEAP32[$18>>2] = $10;
   $19 = STACKTOP; STACKTOP = STACKTOP + 32|0;;
   $20 = (((($$1) + ($$0132<<3)|0)) + 4|0);
   HEAP32[$20>>2] = $19;
   ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;HEAP32[$19+16>>2]=0|0;HEAP32[$19+20>>2]=0|0;
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($10)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (_g_type_value_table_peek($23)|0);
   $25 = ((($24)) + 16|0);
   $26 = HEAP32[$25>>2]|0;
   dest=$4; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   $27 = HEAP32[$22>>2]|0;
   HEAP32[$21>>2] = $27;
   $28 = HEAP8[$26>>0]|0;
   $29 = ($28<<24>>24)==(0);
   L15: do {
    if ($29) {
     $$0137$lcssa = 0;
    } else {
     $$0137149 = 0;$$0138148 = $26;$34 = $28;
     while(1) {
      $30 = (($$0137149) + 1)|0;
      $31 = (($4) + ($$0137149<<3)|0);
      $32 = ((($$0138148)) + 1|0);
      $33 = $34 << 24 >> 24;
      switch ($33|0) {
      case 105:  {
       $arglist_current = HEAP32[$2>>2]|0;
       $35 = $arglist_current;
       $36 = ((0) + 4|0);
       $expanded17 = $36;
       $expanded = (($expanded17) - 1)|0;
       $37 = (($35) + ($expanded))|0;
       $38 = ((0) + 4|0);
       $expanded21 = $38;
       $expanded20 = (($expanded21) - 1)|0;
       $expanded19 = $expanded20 ^ -1;
       $39 = $37 & $expanded19;
       $40 = $39;
       $41 = HEAP32[$40>>2]|0;
       $arglist_next = ((($40)) + 4|0);
       HEAP32[$2>>2] = $arglist_next;
       HEAP32[$31>>2] = $41;
       break;
      }
      case 108:  {
       $arglist_current2 = HEAP32[$2>>2]|0;
       $42 = $arglist_current2;
       $43 = ((0) + 4|0);
       $expanded24 = $43;
       $expanded23 = (($expanded24) - 1)|0;
       $44 = (($42) + ($expanded23))|0;
       $45 = ((0) + 4|0);
       $expanded28 = $45;
       $expanded27 = (($expanded28) - 1)|0;
       $expanded26 = $expanded27 ^ -1;
       $46 = $44 & $expanded26;
       $47 = $46;
       $48 = HEAP32[$47>>2]|0;
       $arglist_next3 = ((($47)) + 4|0);
       HEAP32[$2>>2] = $arglist_next3;
       HEAP32[$31>>2] = $48;
       break;
      }
      case 113:  {
       $arglist_current5 = HEAP32[$2>>2]|0;
       $49 = $arglist_current5;
       $50 = ((0) + 8|0);
       $expanded31 = $50;
       $expanded30 = (($expanded31) - 1)|0;
       $51 = (($49) + ($expanded30))|0;
       $52 = ((0) + 8|0);
       $expanded35 = $52;
       $expanded34 = (($expanded35) - 1)|0;
       $expanded33 = $expanded34 ^ -1;
       $53 = $51 & $expanded33;
       $54 = $53;
       $55 = $54;
       $56 = $55;
       $57 = HEAP32[$56>>2]|0;
       $58 = (($55) + 4)|0;
       $59 = $58;
       $60 = HEAP32[$59>>2]|0;
       $arglist_next6 = ((($54)) + 8|0);
       HEAP32[$2>>2] = $arglist_next6;
       $61 = $31;
       $62 = $61;
       HEAP32[$62>>2] = $57;
       $63 = (($61) + 4)|0;
       $64 = $63;
       HEAP32[$64>>2] = $60;
       break;
      }
      case 100:  {
       $arglist_current8 = HEAP32[$2>>2]|0;
       $65 = $arglist_current8;
       $66 = ((0) + 8|0);
       $expanded38 = $66;
       $expanded37 = (($expanded38) - 1)|0;
       $67 = (($65) + ($expanded37))|0;
       $68 = ((0) + 8|0);
       $expanded42 = $68;
       $expanded41 = (($expanded42) - 1)|0;
       $expanded40 = $expanded41 ^ -1;
       $69 = $67 & $expanded40;
       $70 = $69;
       $71 = +HEAPF64[$70>>3];
       $arglist_next9 = ((($70)) + 8|0);
       HEAP32[$2>>2] = $arglist_next9;
       HEAPF64[$31>>3] = $71;
       break;
      }
      case 112:  {
       $arglist_current11 = HEAP32[$2>>2]|0;
       $72 = $arglist_current11;
       $73 = ((0) + 4|0);
       $expanded45 = $73;
       $expanded44 = (($expanded45) - 1)|0;
       $74 = (($72) + ($expanded44))|0;
       $75 = ((0) + 4|0);
       $expanded49 = $75;
       $expanded48 = (($expanded49) - 1)|0;
       $expanded47 = $expanded48 ^ -1;
       $76 = $74 & $expanded47;
       $77 = $76;
       $78 = HEAP32[$77>>2]|0;
       $arglist_next12 = ((($77)) + 4|0);
       HEAP32[$2>>2] = $arglist_next12;
       HEAP32[$31>>2] = $78;
       break;
      }
      default: {
       label = 18;
       break L7;
      }
      }
      $79 = HEAP8[$32>>0]|0;
      $80 = ($79<<24>>24)==(0);
      if ($80) {
       $$0137$lcssa = $30;
       break L15;
      } else {
       $$0137149 = $30;$$0138148 = $32;$34 = $79;
      }
     }
    }
   } while(0);
   $81 = ((($24)) + 20|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (ftCall_iiiii($82|0,$21,$$0137$lcssa,$4,0)|0);
   $84 = ($83|0)==(0|0);
   if (!($84)) {
    label = 21;
    break;
   }
   $86 = (($$0132) + 1)|0;
   $arglist_current15 = HEAP32[$2>>2]|0;
   $87 = $arglist_current15;
   $88 = ((0) + 4|0);
   $expanded52 = $88;
   $expanded51 = (($expanded52) - 1)|0;
   $89 = (($87) + ($expanded51))|0;
   $90 = ((0) + 4|0);
   $expanded56 = $90;
   $expanded55 = (($expanded56) - 1)|0;
   $expanded54 = $expanded55 ^ -1;
   $91 = $89 & $expanded54;
   $92 = $91;
   $93 = HEAP32[$92>>2]|0;
   $arglist_next16 = ((($92)) + 4|0);
   HEAP32[$2>>2] = $arglist_next16;
   $94 = ($93|0)==(0|0);
   if ($94) {
    $$1133140 = $86;$$2141 = $$1;
    break;
   } else {
    $$0130 = $$1;$$0131 = $93;$$0132 = $86;
   }
  }
  if ((label|0) == 18) {
   _g_assertion_message_expr(0,122771,2186,124023,0);
   // unreachable;
  }
  else if ((label|0) == 21) {
   HEAP32[$vararg_buffer>>2] = 124023;
   $vararg_ptr13 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr13>>2] = $83;
   _g_log(0,8,130726,$vararg_buffer);
   $85 = HEAP32[$20>>2]|0;
   _g_value_unset($85);
   _g_free($83);
   $$1133140 = $$0132;$$2141 = $$1;
  }
  $95 = HEAP32[$$0>>2]|0;
  $96 = (_g_type_create_instance($95)|0);
  $97 = ($$1133140|0)==(0);
  if (!($97)) {
   $$in = $$1133140;
   while(1) {
    $98 = (($$in) + -1)|0;
    $99 = (((($$2141) + ($98<<3)|0)) + 4|0);
    $100 = HEAP32[$99>>2]|0;
    _g_value_unset($100);
    $101 = ($98|0)==(0);
    if ($101) {
     break;
    } else {
     $$in = $98;
    }
   }
  }
  $102 = ($$2141|0)==($3|0);
  if (!($102)) {
   _g_free($$2141);
  }
  $$0129$in = $96;
 }
 $105 = ($$0128|0)==(0|0);
 if ($105) {
  STACKTOP = sp;return ($$0129$in|0);
 }
 _g_type_class_unref($106);
 STACKTOP = sp;return ($$0129$in|0);
}
function _g_object_new_is_valid_property($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$035$lcssa = 0, $$03542 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $5 = ($1|0)==(0|0);
 if ($5) {
  $6 = (_g_type_name($0)|0);
  HEAP32[$vararg_buffer>>2] = 124043;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $6;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $2;
  _g_log(0,8,123974,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 2;
 $10 = ($9|0)==(0);
 if ($10) {
  $11 = ((($1)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (_g_type_name($0)|0);
  HEAP32[$vararg_buffer3>>2] = 124043;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = $12;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $13;
  _g_log(0,8,124074,$vararg_buffer3);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $14 = $8 & 12;
 $15 = ($14|0)==(0);
 if ($15) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ($4|0)>(0);
 L12: do {
  if ($16) {
   $$03542 = 0;
   while(1) {
    $17 = (($3) + ($$03542<<3)|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==($1|0);
    if ($19) {
     $$035$lcssa = $$03542;
     break L12;
    }
    $20 = (($$03542) + 1)|0;
    $21 = ($20|0)<($4|0);
    if ($21) {
     $$03542 = $20;
    } else {
     $$035$lcssa = $20;
     break;
    }
   }
  } else {
   $$035$lcssa = 0;
  }
 } while(0);
 $22 = ($$035$lcssa|0)==($4|0);
 if ($22) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = (_g_type_name($0)|0);
 HEAP32[$vararg_buffer8>>2] = 124043;
 $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
 HEAP32[$vararg_ptr11>>2] = $2;
 $vararg_ptr12 = ((($vararg_buffer8)) + 8|0);
 HEAP32[$vararg_ptr12>>2] = $23;
 _g_log(0,8,124129,$vararg_buffer8);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _object_floating_flag_handler($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$017 = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 1:  {
  $2 = ((($0)) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3 | 2;
  $5 = $4;
  HEAP32[$2>>2] = $5;
  $6 = $3 & 2;
  $$017 = $6;
  return ($$017|0);
  break;
 }
 case -1:  {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & -3;
  $10 = $9;
  HEAP32[$7>>2] = $10;
  $11 = $8 & 2;
  $$017 = $11;
  return ($$017|0);
  break;
 }
 default: {
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $13 >>> 1;
  $$lobit = $14 & 1;
  $$017 = $$lobit;
  return ($$017|0);
 }
 }
 return (0)|0;
}
function _g_object_ref_sink($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_add($1,1)|0);
 $2 = (_object_floating_flag_handler($0,-1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return ($0|0);
 }
 (_g_atomic_int_get($1)|0);
 $4 = (_g_atomic_int_get($1)|0);
 $5 = ($4|0)>(1);
 L4: do {
  if ($5) {
   $9 = $4;
   while(1) {
    $8 = (($9) + -1)|0;
    $10 = (_g_atomic_int_compare_and_exchange($1,$9,$8)|0);
    $11 = ($10|0)==(0);
    if (!($11)) {
     break;
    }
    $6 = (_g_atomic_int_get($1)|0);
    $7 = ($6|0)>(1);
    if ($7) {
     $9 = $6;
    } else {
     break L4;
    }
   }
   return ($0|0);
  }
 } while(0);
 $12 = HEAP32[$0>>2]|0;
 $13 = ((($12)) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 _g_type_free_instance($0);
 return ($0|0);
}
function _g_value_set_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($1|0)==(0|0);
 if ($4) {
  HEAP32[$2>>2] = 0;
 } else {
  HEAP32[$2>>2] = $1;
  $5 = ((($1)) + 4|0);
  (_g_atomic_int_add($5,1)|0);
 }
 $6 = ($3|0)==(0|0);
 if ($6) {
  return;
 }
 $7 = ((($3)) + 4|0);
 (_g_atomic_int_get($7)|0);
 $8 = (_g_atomic_int_get($7)|0);
 $9 = ($8|0)>(1);
 L8: do {
  if ($9) {
   $13 = $8;
   while(1) {
    $12 = (($13) + -1)|0;
    $14 = (_g_atomic_int_compare_and_exchange($7,$13,$12)|0);
    $15 = ($14|0)==(0);
    if (!($15)) {
     break;
    }
    $10 = (_g_atomic_int_get($7)|0);
    $11 = ($10|0)>(1);
    if ($11) {
     $13 = $10;
    } else {
     break L8;
    }
   }
   return;
  }
 } while(0);
 $16 = HEAP32[$3>>2]|0;
 $17 = ((($16)) + 36|0);
 $18 = HEAP32[$17>>2]|0;
 ftCall_vi($18|0,$3);
 _g_type_free_instance($3);
 return;
}
function _g_value_take_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + 4|0);
  (_g_atomic_int_get($5)|0);
  $6 = (_g_atomic_int_get($5)|0);
  $7 = ($6|0)>(1);
  L3: do {
   if ($7) {
    $11 = $6;
    while(1) {
     $10 = (($11) + -1)|0;
     $12 = (_g_atomic_int_compare_and_exchange($5,$11,$10)|0);
     $13 = ($12|0)==(0);
     if (!($13)) {
      break L3;
     }
     $8 = (_g_atomic_int_get($5)|0);
     $9 = ($8|0)>(1);
     if ($9) {
      $11 = $8;
     } else {
      label = 6;
      break;
     }
    }
   } else {
    label = 6;
   }
  } while(0);
  if ((label|0) == 6) {
   $14 = HEAP32[$3>>2]|0;
   $15 = ((($14)) + 36|0);
   $16 = HEAP32[$15>>2]|0;
   ftCall_vi($16|0,$3);
   _g_type_free_instance($3);
  }
  HEAP32[$2>>2] = 0;
 }
 $17 = ($1|0)==(0|0);
 if ($17) {
  return;
 }
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_get_object($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_initially_unowned_class_intern_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37115] = $1;
 return;
}
function _g_initially_unowned_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_object_floating_flag_handler($0,1)|0);
 return;
}
function _g_initially_unowned_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148456)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37114]|0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(124181)|0);
 $3 = (_g_type_register_static_simple(80,$2,80,277,12,278,0)|0);
 _g_once_init_leave(148456,$3);
 $4 = HEAP32[37114]|0;
 return ($4|0);
}
function __g_enum_types_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 dest=$0; src=117600; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 HEAP16[$0>>1] = 20;
 $1 = (_g_intern_static_string(124199)|0);
 $2 = (_g_type_register_fundamental(48,$1,$0,117636,48)|0);
 $3 = ($2|0)==(48);
 if (!($3)) {
  _g_assertion_message_expr(0,124205,126,124237,124256);
  // unreachable;
 }
 HEAP16[$0>>1] = 16;
 $4 = (_g_intern_static_string(124276)|0);
 $5 = (_g_type_register_fundamental(52,$4,$0,117636,48)|0);
 $6 = ($5|0)==(52);
 if ($6) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,124205,133,124237,124283);
  // unreachable;
 }
}
function _value_flags_enum_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_flags_enum_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_flags_enum_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_flags_enum_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_enum_register_static($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp;
 dest=$2; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP16[$2>>1] = 20;
 $3 = ((($2)) + 12|0);
 HEAP32[$3>>2] = 279;
 $4 = ((($2)) + 20|0);
 HEAP32[$4>>2] = $1;
 $5 = (_g_type_register_static(48,$0,$2,0)|0);
 STACKTOP = sp;return ($5|0);
}
function _g_enum_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$$lcssa = 0, $$33 = 0, $$lcssa = 0, $$lcssa32 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = $1;
 $6 = ($1|0)==(0|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$1>>2]|0;
 HEAP32[$2>>2] = $7;
 HEAP32[$3>>2] = $7;
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 $11 = ((($1)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $$$lcssa = $7;$$lcssa = 1;$$lcssa32 = $7;
 } else {
  $14 = ((($1)) + 12|0);
  $$33 = $7;$15 = $14;$18 = $7;$21 = 1;
  while(1) {
   $$pre = HEAP32[$15>>2]|0;
   $16 = ($$33|0)<($$pre|0);
   $$ = $16 ? $$33 : $$pre;
   $17 = ($18|0)>($$pre|0);
   $19 = $17 ? $18 : $$pre;
   $20 = (($21) + 1)|0;
   $22 = ((($15)) + 12|0);
   $23 = ((($15)) + 16|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)==(0|0);
   if ($25) {
    $$$lcssa = $$;$$lcssa = $20;$$lcssa32 = $19;
    break;
   } else {
    $$33 = $$;$15 = $22;$18 = $19;$21 = $20;
   }
  }
 }
 HEAP32[$2>>2] = $$$lcssa;
 HEAP32[$3>>2] = $$lcssa32;
 HEAP32[$4>>2] = $$lcssa;
 return;
}
function _g_enum_get_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0810 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = 0;
  return ($$1|0);
 }
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$1 = 0;
  return ($$1|0);
 }
 $$0810 = $6;
 while(1) {
  $10 = HEAP32[$$0810>>2]|0;
  $11 = ($10|0)==($1|0);
  if ($11) {
   $$1 = $$0810;
   label = 6;
   break;
  }
  $12 = ((($$0810)) + 12|0);
  $13 = ((($$0810)) + 16|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(0|0);
  if ($15) {
   $$1 = 0;
   label = 6;
   break;
  } else {
   $$0810 = $12;
  }
 }
 if ((label|0) == 6) {
  return ($$1|0);
 }
 return (0)|0;
}
function __g_param_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_intern_static_string(124304)|0);
 $1 = (_g_type_register_fundamental(76,$0,117672,117708,16)|0);
 $2 = ($1|0)==(76);
 if ($2) {
  $3 = (_g_type_add_instance_private(76,32)|0);
  HEAP32[37116] = $3;
  _g_value_register_transform_func(76,76,280);
  return;
 } else {
  _g_assertion_message_expr(0,124311,138,124343,124362);
  // unreachable;
 }
}
function _value_param_transform_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 $$pre = ((($1)) + 8|0);
 if (!($4)) {
  $5 = HEAP32[$$pre>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$1>>2]|0;
  $9 = (_g_type_is_a($7,$8)|0);
  $10 = ($9|0)==(0);
  if (!($10)) {
   $11 = HEAP32[$2>>2]|0;
   $12 = ((($11)) + 32|0);
   _g_atomic_int_inc($12);
   HEAP32[$$pre>>2] = $11;
   return;
  }
 }
 HEAP32[$$pre>>2] = 0;
 return;
}
function _g_param_spec_class_base_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_param_spec_class_base_finalize($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_param_spec_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 4;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 281;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 0;
 _g_type_class_adjust_private_offset($0,148464);
 return;
}
function _g_param_spec_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 24|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 12|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($0)) + 16|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($0)) + 32|0);
 HEAP32[$11>>2] = 1;
 $12 = ((($0)) + 36|0);
 HEAP32[$12>>2] = 0;
 return;
}
function _value_param_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_param_free_value($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 32|0);
 $5 = (_g_atomic_int_dec_and_test($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$2);
 return;
}
function _value_param_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = ((($3)) + 32|0);
  _g_atomic_int_inc($5);
  $$sink = $3;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 return;
}
function _value_param_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _value_param_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = (_g_type_name($8)|0);
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 141817;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 0;
  $10 = (_g_strconcat(124383,$vararg_buffer)|0);
  $$1 = $10;
  STACKTOP = sp;return ($$1|0);
 }
 $11 = HEAP32[$6>>2]|0;
 $12 = HEAP32[$0>>2]|0;
 $13 = (_g_value_type_compatible($11,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$4>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = 124463;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $19;
  $vararg_ptr8 = ((($vararg_buffer3)) + 12|0);
  HEAP32[$vararg_ptr8>>2] = 141817;
  $vararg_ptr9 = ((($vararg_buffer3)) + 16|0);
  HEAP32[$vararg_ptr9>>2] = 0;
  $20 = (_g_strconcat(124437,$vararg_buffer3)|0);
  $$1 = $20;
  STACKTOP = sp;return ($$1|0);
 } else {
  $21 = ((($4)) + 32|0);
  _g_atomic_int_inc($21);
  $22 = ((($0)) + 8|0);
  HEAP32[$22>>2] = $4;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _value_param_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = ((($10)) + 32|0);
    _g_atomic_int_inc($14);
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _g_param_spec_finalize($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37116]|0;
 $2 = (($0) + ($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  (_g_value_reset($2)|0);
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 64;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = ((($0)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  _g_free($10);
  $$pre = HEAP32[$5>>2]|0;
  $12 = $$pre;
 } else {
  $12 = $6;
 }
 $11 = $12 & 128;
 $13 = ($11|0)==(0);
 if (!($13)) {
  _g_type_free_instance($0);
  return;
 }
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 _g_free($15);
 _g_type_free_instance($0);
 return;
}
function _g_param_spec_unref($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 32|0);
 $2 = (_g_atomic_int_dec_and_test($1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 ftCall_vi($6|0,$0);
 return;
}
function _g_param_spec_ref_sink($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 32|0);
 _g_atomic_int_inc($1);
 return ($0|0);
}
function _g_param_spec_internal($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$014$i = 0, $$014$i34 = 0, $$off$i = 0, $$off$i32 = 0, $$off$i35 = 0, $$off14$i = 0, $$off15$i = 0, $$off17$i = 0, $$off17$i36 = 0, $$off18$i = 0, $$off18$i38 = 0, $$pre$phi43Z2D = 0, $$sink = 0, $$sink46 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i33 = 0, $or$cond$i37 = 0, $or$cond18$i = 0, $or$cond21$i = 0, $or$cond21$i39 = 0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = (_g_type_create_instance($0)|0);
 $6 = $4 & 32;
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $$014$i34 = $1;
   L3: while(1) {
    $15 = HEAP8[$$014$i34>>0]|0;
    switch ($15<<24>>24) {
    case 0:  {
     label = 11;
     break L3;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i35 = (($15) + -48)<<24>>24;
     $16 = ($$off$i35&255)>(9);
     $$off17$i36 = (($15) + -65)<<24>>24;
     $17 = ($$off17$i36&255)>(25);
     $or$cond$i37 = $16 & $17;
     $$off18$i38 = (($15) + -97)<<24>>24;
     $18 = ($$off18$i38&255)>(25);
     $or$cond21$i39 = $18 & $or$cond$i37;
     if ($or$cond21$i39) {
      break L3;
     }
    }
    }
    $19 = ((($$014$i34)) + 1|0);
    $$014$i34 = $19;
   }
   if ((label|0) == 11) {
    $20 = (_g_intern_string($1)|0);
    $21 = ((($5)) + 4|0);
    HEAP32[$21>>2] = $20;
    $$pre$phi43Z2D = $21;
    break;
   }
   $22 = (_g_strdup($1)|0);
   $$0$i = $22;
   L11: while(1) {
    $23 = HEAP8[$$0$i>>0]|0;
    switch ($23<<24>>24) {
    case 0:  {
     break L11;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i32 = (($23) + -48)<<24>>24;
     $24 = ($$off$i32&255)>(9);
     $$off14$i = (($23) + -65)<<24>>24;
     $25 = ($$off14$i&255)>(25);
     $or$cond$i33 = $24 & $25;
     $$off15$i = (($23) + -97)<<24>>24;
     $26 = ($$off15$i&255)>(25);
     $or$cond18$i = $26 & $or$cond$i33;
     if ($or$cond18$i) {
      HEAP8[$$0$i>>0] = 45;
     }
    }
    }
    $27 = ((($$0$i)) + 1|0);
    $$0$i = $27;
   }
   $28 = (_g_intern_string($22)|0);
   $29 = ((($5)) + 4|0);
   HEAP32[$29>>2] = $28;
   _g_free($22);
   $$pre$phi43Z2D = $29;
  } else {
   $8 = (_g_intern_static_string($1)|0);
   $9 = ((($5)) + 4|0);
   HEAP32[$9>>2] = $8;
   $$014$i = $8;
   L19: while(1) {
    $10 = HEAP8[$$014$i>>0]|0;
    switch ($10<<24>>24) {
    case 0:  {
     $$pre$phi43Z2D = $9;
     break L1;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i = (($10) + -48)<<24>>24;
     $11 = ($$off$i&255)>(9);
     $$off17$i = (($10) + -65)<<24>>24;
     $12 = ($$off17$i&255)>(25);
     $or$cond$i = $11 & $12;
     $$off18$i = (($10) + -97)<<24>>24;
     $13 = ($$off18$i&255)>(25);
     $or$cond21$i = $13 & $or$cond$i;
     if ($or$cond21$i) {
      break L19;
     }
    }
    }
    $14 = ((($$014$i)) + 1|0);
    $$014$i = $14;
   }
   HEAP32[$vararg_buffer>>2] = $8;
   _g_log(0,16,124482,$vararg_buffer);
   $$pre$phi43Z2D = $9;
  }
 } while(0);
 $30 = HEAP32[37116]|0;
 $31 = (($5) + ($30)|0);
 $32 = HEAP32[$$pre$phi43Z2D>>2]|0;
 $33 = (_g_quark_from_string($32)|0);
 $34 = ((($31)) + 24|0);
 HEAP32[$34>>2] = $33;
 $35 = $4 & 64;
 $36 = ($35|0)==(0);
 if ($36) {
  $37 = (_g_strdup($2)|0);
  $$sink = $37;
 } else {
  $$sink = $2;
 }
 $38 = ((($5)) + 20|0);
 HEAP32[$38>>2] = $$sink;
 $39 = $4 & 128;
 $40 = ($39|0)==(0);
 if (!($40)) {
  $$sink46 = $3;
  $42 = ((($5)) + 24|0);
  HEAP32[$42>>2] = $$sink46;
  $43 = ((($5)) + 8|0);
  HEAP32[$43>>2] = $4;
  STACKTOP = sp;return ($5|0);
 }
 $41 = (_g_strdup($3)|0);
 $$sink46 = $41;
 $42 = ((($5)) + 24|0);
 HEAP32[$42>>2] = $$sink46;
 $43 = ((($5)) + 8|0);
 HEAP32[$43>>2] = $4;
 STACKTOP = sp;return ($5|0);
}
function _g_param_value_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_g_value_reset($1)|0);
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _g_param_value_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 ;HEAP32[$2>>2]=HEAP32[$1>>2]|0;HEAP32[$2+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$1+20>>2]|0;
 $7 = (ftCall_iii($5|0,$0,$1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = ((($2)) + 8|0);
  $10 = ((($1)) + 8|0);
  $11 = (_memcmp($9,$10,16)|0);
  $12 = ($11|0)==(0);
  if ($12) {
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $$1 = 1;
 STACKTOP = sp;return ($$1|0);
}
function _g_param_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 $7 = ($6|0)>(-1);
 $8 = $7 ? $6 : -1;
 $9 = ($8|0)<(1);
 $10 = $9 ? $8 : 1;
 return ($10|0);
}
function _g_param_spec_pool_new($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc_n(1,16)|0);
 $2 = $1;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ($0|0)!=(0);
 $7 = $6&1;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (_g_hash_table_new(282,283)|0);
 $10 = ((($1)) + 12|0);
 HEAP32[$10>>2] = $9;
 return ($1|0);
}
function _param_spec_pool_hash($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$01213 = 0, $$014 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  $$0$lcssa = $2;
  return ($$0$lcssa|0);
 }
 $$01213 = $4;$$014 = $2;$9 = $5;
 while(1) {
  $7 = ($$014*31)|0;
  $8 = $9 << 24 >> 24;
  $10 = (($7) + ($8))|0;
  $11 = ((($$01213)) + 1|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $$0$lcssa = $10;
   break;
  } else {
   $$01213 = $11;$$014 = $10;$9 = $12;
  }
 }
 return ($$0$lcssa|0);
}
function _param_spec_pool_equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  $13 = 0;
  return ($13|0);
 }
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_strcmp($8,$10)|0);
 $12 = ($11|0)==(0);
 $phitmp = $12&1;
 $13 = $phitmp;
 return ($13|0);
}
function _g_param_spec_pool_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$017 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $memchr = 0, $or$cond = 0, $or$cond3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0);
 $or$cond3 = $or$cond & $5;
 if (!($or$cond3)) {
  STACKTOP = sp;return;
 }
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 L7: do {
  if (!($12)) {
   $$017 = $10;$17 = $11;
   while(1) {
    $16 = $17 << 24 >> 24;
    $memchr = (_memchr(124541,$16,65)|0);
    $18 = ($memchr|0)==(0|0);
    $14 = ((($$017)) + 1|0);
    if ($18) {
     break;
    }
    $13 = HEAP8[$14>>0]|0;
    $15 = ($13<<24>>24)==(0);
    if ($15) {
     break L7;
    } else {
     $$017 = $14;$17 = $13;
    }
   }
   HEAP32[$vararg_buffer>>2] = $10;
   _g_log(0,16,124606,$vararg_buffer);
   STACKTOP = sp;return;
  }
 } while(0);
 HEAP32[$6>>2] = $2;
 $19 = ((($1)) + 32|0);
 _g_atomic_int_inc($19);
 $20 = ((($0)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 (_g_hash_table_add($21,$1)|0);
 STACKTOP = sp;return;
}
function _g_param_spec_pool_lookup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$ph = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  $8 = (_strchr($1,58)|0);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $13 = ((($8)) + 1|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = ($14<<24>>24)==(58);
   if (!($15)) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   $16 = $8;
   $17 = $1;
   $18 = (($16) - ($17))|0;
   $19 = ($18>>>0)<(32);
   if ($19) {
    $22 = $4;
   } else {
    $20 = (($18) + 1)|0;
    $21 = (_g_malloc($20)|0);
    $22 = $21;
   }
   (_strncpy($22,$1,$18)|0);
   $23 = (($22) + ($18)|0);
   HEAP8[$23>>0] = 0;
   $24 = (_g_type_from_name($22)|0);
   $25 = ($18>>>0)>(31);
   if ($25) {
    _g_free($22);
   }
   $26 = ($24|0)==(0);
   if ($26) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   $27 = ($3|0)!=(0);
   $28 = ($24|0)==($2|0);
   $or$cond = $27 | $28;
   if ($or$cond) {
    $29 = (_g_type_is_a($2,$24)|0);
    $30 = ($29|0)==(0);
    if ($30) {
     $$0$ph = 0;
    } else {
     $31 = ((($0)) + 12|0);
     $32 = (($18) + 2)|0;
     $33 = (($1) + ($32)|0);
     $34 = HEAP32[$31>>2]|0;
     $35 = (_param_spec_ht_lookup($34,$33,$24,$3)|0);
     $$0$ph = $35;
    }
   } else {
    $$0$ph = 0;
   }
   $$1 = $$0$ph;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $10 = ((($0)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_param_spec_ht_lookup($11,$1,$2,$3)|0);
 $$1 = $12;
 STACKTOP = sp;return ($$1|0);
}
function _param_spec_ht_lookup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$014$i = 0, $$02540 = 0, $$1 = 0, $$126$in = 0, $$off$i = 0, $$off$i27 = 0, $$off14$i = 0, $$off15$i = 0, $$off17$i = 0, $$off18$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond$i = 0, $or$cond$i28 = 0, $or$cond18$i = 0, $or$cond21$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = ((($4)) + 16|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = ($3|0)!=(0);
 L1: do {
  if ($7) {
   while(1) {
    $8 = (_g_hash_table_lookup($0,$4)|0);
    $9 = ($8|0)==(0|0);
    if (!($9)) {
     break;
    }
    $10 = HEAP32[$5>>2]|0;
    $11 = (_g_type_parent($10)|0);
    HEAP32[$5>>2] = $11;
    $12 = ($11|0)==(0);
    if ($12) {
     $$02540 = 0;
     break L1;
    }
   }
   $$1 = $8;
   STACKTOP = sp;return ($$1|0);
  } else {
   $13 = (_g_hash_table_lookup($0,$4)|0);
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$02540 = $13;
   } else {
    $$1 = $13;
    STACKTOP = sp;return ($$1|0);
   }
  }
 } while(0);
 $$014$i = $1;
 L11: while(1) {
  $15 = HEAP8[$$014$i>>0]|0;
  switch ($15<<24>>24) {
  case 0:  {
   $$1 = $$02540;
   label = 23;
   break L11;
   break;
  }
  case 45:  {
   break;
  }
  default: {
   $$off$i = (($15) + -48)<<24>>24;
   $16 = ($$off$i&255)>(9);
   $$off17$i = (($15) + -65)<<24>>24;
   $17 = ($$off17$i&255)>(25);
   $or$cond$i = $16 & $17;
   $$off18$i = (($15) + -97)<<24>>24;
   $18 = ($$off18$i&255)>(25);
   $or$cond21$i = $18 & $or$cond$i;
   if ($or$cond21$i) {
    break L11;
   }
  }
  }
  $19 = ((($$014$i)) + 1|0);
  $$014$i = $19;
 }
 if ((label|0) == 23) {
  STACKTOP = sp;return ($$1|0);
 }
 $20 = HEAP32[$6>>2]|0;
 $21 = (_g_strdup($20)|0);
 $$0$i = $21;
 L19: while(1) {
  $22 = HEAP8[$$0$i>>0]|0;
  switch ($22<<24>>24) {
  case 0:  {
   break L19;
   break;
  }
  case 45:  {
   break;
  }
  default: {
   $$off$i27 = (($22) + -48)<<24>>24;
   $23 = ($$off$i27&255)>(9);
   $$off14$i = (($22) + -65)<<24>>24;
   $24 = ($$off14$i&255)>(25);
   $or$cond$i28 = $23 & $24;
   $$off15$i = (($22) + -97)<<24>>24;
   $25 = ($$off15$i&255)>(25);
   $or$cond18$i = $25 & $or$cond$i28;
   if ($or$cond18$i) {
    HEAP8[$$0$i>>0] = 45;
   }
  }
  }
  $26 = ((($$0$i)) + 1|0);
  $$0$i = $26;
 }
 HEAP32[$6>>2] = $21;
 HEAP32[$5>>2] = $2;
 L26: do {
  if ($7) {
   while(1) {
    $27 = (_g_hash_table_lookup($0,$4)|0);
    $28 = ($27|0)==(0|0);
    if (!($28)) {
     break;
    }
    $29 = HEAP32[$5>>2]|0;
    $30 = (_g_type_parent($29)|0);
    HEAP32[$5>>2] = $30;
    $31 = ($30|0)==(0);
    if ($31) {
     $$126$in = 0;
     break L26;
    }
   }
   _g_free($21);
   $$1 = $27;
   STACKTOP = sp;return ($$1|0);
  } else {
   $32 = (_g_hash_table_lookup($0,$4)|0);
   $$126$in = $32;
  }
 } while(0);
 _g_free($21);
 $$1 = $$126$in;
 STACKTOP = sp;return ($$1|0);
}
function _g_param_spec_pool_list_owned($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = $1;
 $4 = ((($2)) + 4|0);
 HEAP32[$4>>2] = $3;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 _g_hash_table_foreach($6,284,$2);
 $7 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($7|0);
}
function _pool_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)==($6|0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$2>>2]|0;
 $9 = (_g_list_prepend($8,$1)|0);
 HEAP32[$2>>2] = $9;
 return;
}
function _g_param_spec_pool_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i33$i = 0, $$0$lcssa = 0, $$031$lcssa$i = 0, $$03135$i = 0, $$037$i = 0, $$07074 = 0, $$07182 = 0, $$077 = 0, $$1$lcssa = 0, $$132$i = 0, $$17276 = 0, $$175 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;
 var $exitcond86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = (_g_type_depth($1)|0);
 $5 = (_g_malloc0_n($4,4)|0);
 HEAP32[$3>>2] = $5;
 $6 = $1;
 $7 = ((($3)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_type_fundamental($1)|0);
 $11 = ($10|0)==(8);
 $12 = $11 ? 286 : 285;
 _g_hash_table_foreach($9,$12,$3);
 $13 = ($4|0)==(0);
 if ($13) {
  $14 = HEAP32[$2>>2]|0;
  $15 = (($14) + 1)|0;
  $16 = (_g_malloc_n($15,4)|0);
  $$0$lcssa = $16;$68 = $16;
  HEAP32[$$0$lcssa>>2] = 0;
  _g_free($5);
  STACKTOP = sp;return ($68|0);
 }
 $$07182 = 0;
 while(1) {
  $17 = (($5) + ($$07182<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$8>>2]|0;
  $20 = ($18|0)==(0|0);
  if ($20) {
   $$031$lcssa$i = 0;
  } else {
   $$03135$i = 0;$$037$i = $18;
   while(1) {
    $21 = ((($$037$i)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = HEAP32[$$037$i>>2]|0;
    $24 = ($23|0)==(0|0);
    if ($24) {
     label = 10;
    } else {
     $25 = HEAP32[$23>>2]|0;
     $26 = ($25|0)==(0|0);
     if ($26) {
      label = 10;
     } else {
      $27 = HEAP32[$25>>2]|0;
      $28 = HEAP32[37117]|0;
      $29 = ((($28)) + 80|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = ($27|0)==($30|0);
      if ($31) {
       $32 = ((($23)) + 40|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = ($33|0)==(0|0);
       if ($34) {
        label = 10;
       } else {
        label = 16;
       }
      } else {
       label = 10;
      }
     }
    }
    do {
     if ((label|0) == 10) {
      label = 0;
      $35 = ((($23)) + 4|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (_param_spec_ht_lookup($19,$36,$1,1)|0);
      $38 = ($37|0)==($23|0);
      if (!($38)) {
       $39 = ($37|0)==(0|0);
       if ($39) {
        $$0$i33$i = 0;
       } else {
        $40 = HEAP32[$37>>2]|0;
        $41 = ($40|0)==(0|0);
        if ($41) {
         $$0$i33$i = 0;
        } else {
         $42 = HEAP32[$40>>2]|0;
         $43 = HEAP32[37117]|0;
         $44 = ((($43)) + 80|0);
         $45 = HEAP32[$44>>2]|0;
         $46 = ($42|0)==($45|0);
         if ($46) {
          $47 = ((($37)) + 40|0);
          $48 = HEAP32[$47>>2]|0;
          $$0$i33$i = $48;
         } else {
          $$0$i33$i = 0;
         }
        }
       }
       $49 = ($$0$i33$i|0)==($23|0);
       if (!($49)) {
        label = 16;
        break;
       }
      }
      HEAP32[$21>>2] = $$03135$i;
      $50 = HEAP32[$2>>2]|0;
      $51 = (($50) + 1)|0;
      HEAP32[$2>>2] = $51;
      $$132$i = $$037$i;
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     _g_slist_free_1($$037$i);
     $$132$i = $$03135$i;
    }
    $52 = ($22|0)==(0|0);
    if ($52) {
     $$031$lcssa$i = $$132$i;
     break;
    } else {
     $$03135$i = $$132$i;$$037$i = $22;
    }
   }
  }
  HEAP32[$17>>2] = $$031$lcssa$i;
  $53 = (($$07182) + 1)|0;
  $exitcond86 = ($53|0)==($4|0);
  if ($exitcond86) {
   break;
  } else {
   $$07182 = $53;
  }
 }
 $54 = HEAP32[$2>>2]|0;
 $55 = (($54) + 1)|0;
 $56 = (_g_malloc_n($55,4)|0);
 if ($13) {
  $$0$lcssa = $56;$68 = $56;
  HEAP32[$$0$lcssa>>2] = 0;
  _g_free($5);
  STACKTOP = sp;return ($68|0);
 }
 $$077 = $56;$$17276 = 0;
 while(1) {
  $57 = (($5) + ($$17276<<2)|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (_g_slist_sort($58,287)|0);
  HEAP32[$57>>2] = $59;
  $60 = ($59|0)==(0|0);
  if ($60) {
   $$1$lcssa = $$077;$66 = 0;
  } else {
   $$07074 = $59;$$175 = $$077;
   while(1) {
    $61 = HEAP32[$$07074>>2]|0;
    $62 = ((($$175)) + 4|0);
    HEAP32[$$175>>2] = $61;
    $63 = ((($$07074)) + 4|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ($64|0)==(0|0);
    if ($65) {
     break;
    } else {
     $$07074 = $64;$$175 = $62;
    }
   }
   $$pre = HEAP32[$57>>2]|0;
   $$1$lcssa = $62;$66 = $$pre;
  }
  _g_slist_free($66);
  $67 = (($$17276) + 1)|0;
  $exitcond = ($67|0)==($4|0);
  if ($exitcond) {
   $$0$lcssa = $$1$lcssa;$68 = $56;
   break;
  } else {
   $$077 = $$1$lcssa;$$17276 = $67;
  }
 }
 HEAP32[$$0$lcssa>>2] = 0;
 _g_free($5);
 STACKTOP = sp;return ($68|0);
}
function _pool_depth_list_for_interface($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($5|0);
 if (!($8)) {
  return;
 }
 $9 = HEAP32[$3>>2]|0;
 $10 = (_g_slist_prepend($9,$1)|0);
 HEAP32[$3>>2] = $10;
 return;
}
function _pool_depth_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_is_a($5,$7)|0);
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 $10 = HEAP32[$6>>2]|0;
 $11 = (_g_type_fundamental($10)|0);
 $12 = ($11|0)==(8);
 if ($12) {
  $$sink = $3;
 } else {
  $13 = HEAP32[$6>>2]|0;
  $14 = (_g_type_depth($13)|0);
  $15 = (($14) + -1)|0;
  $16 = (($3) + ($15<<2)|0);
  $$sink = $16;
 }
 $17 = HEAP32[$$sink>>2]|0;
 $18 = (_g_slist_prepend($17,$1)|0);
 HEAP32[$$sink>>2] = $18;
 return;
}
function _pspec_compare_id($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 36|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $$0 = -1;
  return ($$0|0);
 }
 $7 = ($3>>>0)>($5>>>0);
 if ($7) {
  $$0 = 1;
  return ($$0|0);
 }
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($1)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_strcmp($9,$11)|0);
 $$0 = $12;
 return ($$0|0);
}
function _g_param_type_register_static($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp;
 dest=$2; src=117744; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $3 = HEAP16[$1>>1]|0;
 $4 = ((($2)) + 24|0);
 HEAP16[$4>>1] = $3;
 $5 = ((($1)) + 2|0);
 $6 = HEAP16[$5>>1]|0;
 $7 = ((($2)) + 26|0);
 HEAP16[$7>>1] = $6;
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 28|0);
 HEAP32[$10>>2] = $9;
 $11 = (_g_malloc_n(1,20)|0);
 $12 = ((($1)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$11>>2] = $13;
 $14 = ((($1)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($11)) + 4|0);
 HEAP32[$16>>2] = $15;
 $17 = ((($1)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 $20 = $19 ? 288 : $18;
 $21 = ((($11)) + 8|0);
 HEAP32[$21>>2] = $20;
 $22 = ((($1)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($11)) + 12|0);
 HEAP32[$24>>2] = $23;
 $25 = ((($1)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($26|0)==(0|0);
 $spec$select = $27 ? 289 : $26;
 $28 = ((($11)) + 16|0);
 HEAP32[$28>>2] = $spec$select;
 $29 = ((($2)) + 20|0);
 HEAP32[$29>>2] = $11;
 $30 = (_g_type_register_static(76,$0,$2,0)|0);
 STACKTOP = sp;return ($30|0);
}
function _default_value_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _default_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = ((($2)) + 8|0);
 $5 = (_memcmp($3,$4,16)|0);
 return ($5|0);
}
function _param_spec_generic_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($0)) + 8|0);
  HEAP32[$7>>2] = $5;
 }
 $8 = ((($1)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($1)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if (!($13)) {
  $14 = ((($0)) + 16|0);
  HEAP32[$14>>2] = $12;
 }
 $15 = ((($1)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 20|0);
 HEAP32[$17>>2] = $16;
 _g_free($1);
 return;
}
function _g_param_spec_get_name_quark($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37116]|0;
 $2 = (($0) + ($1)|0);
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function __g_param_spec_types_init() {
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = (_g_malloc0_n(23,4)|0);
 HEAP32[37117] = $1;
 $2 = (_g_intern_static_string(124687)|0);
 $3 = (_g_param_type_register_static($2,117780)|0);
 HEAP32[$1>>2] = $3;
 $4 = HEAP32[37117]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  _g_assertion_message_expr(0,124698,1216,124735,124760);
  // unreachable;
 }
 $7 = ((($1)) + 4|0);
 $8 = (_g_intern_static_string(124786)|0);
 $9 = (_g_param_type_register_static($8,117808)|0);
 HEAP32[$7>>2] = $9;
 $10 = HEAP32[37117]|0;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($9|0)==($12|0);
 if (!($13)) {
  _g_assertion_message_expr(0,124698,1234,124735,124798);
  // unreachable;
 }
 $14 = ((($1)) + 8|0);
 $15 = (_g_intern_static_string(124825)|0);
 $16 = (_g_param_type_register_static($15,117836)|0);
 HEAP32[$14>>2] = $16;
 $17 = HEAP32[37117]|0;
 $18 = ((($17)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($16|0)==($19|0);
 if (!($20)) {
  _g_assertion_message_expr(0,124698,1252,124735,124839);
  // unreachable;
 }
 $21 = ((($1)) + 12|0);
 $22 = (_g_intern_static_string(124868)|0);
 $23 = (_g_param_type_register_static($22,117864)|0);
 HEAP32[$21>>2] = $23;
 $24 = HEAP32[37117]|0;
 $25 = ((($24)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($23|0)==($26|0);
 if (!($27)) {
  _g_assertion_message_expr(0,124698,1270,124735,124878);
  // unreachable;
 }
 $28 = ((($1)) + 16|0);
 $29 = (_g_intern_static_string(124903)|0);
 $30 = (_g_param_type_register_static($29,117892)|0);
 HEAP32[$28>>2] = $30;
 $31 = HEAP32[37117]|0;
 $32 = ((($31)) + 16|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($30|0)==($33|0);
 if (!($34)) {
  _g_assertion_message_expr(0,124698,1288,124735,124914);
  // unreachable;
 }
 $35 = ((($1)) + 20|0);
 $36 = (_g_intern_static_string(124940)|0);
 $37 = (_g_param_type_register_static($36,117920)|0);
 HEAP32[$35>>2] = $37;
 $38 = HEAP32[37117]|0;
 $39 = ((($38)) + 20|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($37|0)==($40|0);
 if (!($41)) {
  _g_assertion_message_expr(0,124698,1306,124735,124951);
  // unreachable;
 }
 $42 = ((($1)) + 24|0);
 $43 = (_g_intern_static_string(124977)|0);
 $44 = (_g_param_type_register_static($43,117948)|0);
 HEAP32[$42>>2] = $44;
 $45 = HEAP32[37117]|0;
 $46 = ((($45)) + 24|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($44|0)==($47|0);
 if (!($48)) {
  _g_assertion_message_expr(0,124698,1324,124735,124989);
  // unreachable;
 }
 $49 = ((($1)) + 28|0);
 $50 = (_g_intern_static_string(125016)|0);
 $51 = (_g_param_type_register_static($50,117976)|0);
 HEAP32[$49>>2] = $51;
 $52 = HEAP32[37117]|0;
 $53 = ((($52)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ($51|0)==($54|0);
 if (!($55)) {
  _g_assertion_message_expr(0,124698,1342,124735,125028);
  // unreachable;
 }
 $56 = ((($1)) + 32|0);
 $57 = (_g_intern_static_string(125055)|0);
 $58 = (_g_param_type_register_static($57,118004)|0);
 HEAP32[$56>>2] = $58;
 $59 = HEAP32[37117]|0;
 $60 = ((($59)) + 32|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($58|0)==($61|0);
 if (!($62)) {
  _g_assertion_message_expr(0,124698,1360,124735,125068);
  // unreachable;
 }
 $63 = ((($1)) + 36|0);
 $64 = (_g_intern_static_string(125096)|0);
 $65 = (_g_param_type_register_static($64,118032)|0);
 HEAP32[$63>>2] = $65;
 $66 = HEAP32[37117]|0;
 $67 = ((($66)) + 36|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ($65|0)==($68|0);
 if (!($69)) {
  _g_assertion_message_expr(0,124698,1378,124735,125110);
  // unreachable;
 }
 $70 = ((($1)) + 40|0);
 $71 = (_g_intern_static_string(125139)|0);
 $72 = (_g_param_type_register_static($71,118060)|0);
 HEAP32[$70>>2] = $72;
 $73 = HEAP32[37117]|0;
 $74 = ((($73)) + 40|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ($72|0)==($75|0);
 if (!($76)) {
  _g_assertion_message_expr(0,124698,1396,124735,125150);
  // unreachable;
 }
 $77 = ((($1)) + 44|0);
 $78 = (_g_intern_static_string(125176)|0);
 $79 = (_g_param_type_register_static($78,118088)|0);
 HEAP32[$77>>2] = $79;
 $80 = HEAP32[37117]|0;
 $81 = ((($80)) + 44|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = ($79|0)==($82|0);
 if (!($83)) {
  _g_assertion_message_expr(0,124698,1414,124735,125188);
  // unreachable;
 }
 $84 = ((($1)) + 48|0);
 $85 = (_g_intern_static_string(125215)|0);
 $86 = (_g_param_type_register_static($85,118116)|0);
 HEAP32[$84>>2] = $86;
 $87 = HEAP32[37117]|0;
 $88 = ((($87)) + 48|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ($86|0)==($89|0);
 if (!($90)) {
  _g_assertion_message_expr(0,124698,1432,124735,125227);
  // unreachable;
 }
 $91 = ((($1)) + 52|0);
 $92 = (_g_intern_static_string(125254)|0);
 $93 = (_g_param_type_register_static($92,118144)|0);
 HEAP32[$91>>2] = $93;
 $94 = HEAP32[37117]|0;
 $95 = ((($94)) + 52|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($93|0)==($96|0);
 if (!($97)) {
  _g_assertion_message_expr(0,124698,1450,124735,125267);
  // unreachable;
 }
 $98 = ((($1)) + 56|0);
 $99 = (_g_intern_static_string(125295)|0);
 $100 = (_g_param_type_register_static($99,118172)|0);
 HEAP32[$98>>2] = $100;
 $101 = HEAP32[37117]|0;
 $102 = ((($101)) + 56|0);
 $103 = HEAP32[$102>>2]|0;
 $104 = ($100|0)==($103|0);
 if (!($104)) {
  _g_assertion_message_expr(0,124698,1468,124735,125308);
  // unreachable;
 }
 $105 = ((($1)) + 60|0);
 $106 = (_g_intern_static_string(125336)|0);
 $107 = (_g_param_type_register_static($106,118200)|0);
 HEAP32[$105>>2] = $107;
 $108 = HEAP32[37117]|0;
 $109 = ((($108)) + 60|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ($107|0)==($110|0);
 if (!($111)) {
  _g_assertion_message_expr(0,124698,1486,124735,125348);
  // unreachable;
 }
 $112 = ((($1)) + 64|0);
 $113 = (_g_intern_static_string(125375)|0);
 $114 = (_g_param_type_register_static($113,118228)|0);
 HEAP32[$112>>2] = $114;
 $115 = HEAP32[37117]|0;
 $116 = ((($115)) + 64|0);
 $117 = HEAP32[$116>>2]|0;
 $118 = ($114|0)==($117|0);
 if (!($118)) {
  _g_assertion_message_expr(0,124698,1504,124735,125387);
  // unreachable;
 }
 $119 = ((($1)) + 68|0);
 $120 = (_g_intern_static_string(125414)|0);
 $121 = (_g_param_type_register_static($120,118256)|0);
 HEAP32[$119>>2] = $121;
 $122 = HEAP32[37117]|0;
 $123 = ((($122)) + 68|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ($121|0)==($124|0);
 if (!($125)) {
  _g_assertion_message_expr(0,124698,1522,124735,125428);
  // unreachable;
 }
 $126 = ((($1)) + 72|0);
 ;HEAP32[$0>>2]=HEAP32[118284>>2]|0;HEAP32[$0+4>>2]=HEAP32[118284+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[118284+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[118284+12>>2]|0;HEAP32[$0+16>>2]=HEAP32[118284+16>>2]|0;HEAP32[$0+20>>2]=HEAP32[118284+20>>2]|0;HEAP32[$0+24>>2]=HEAP32[118284+24>>2]|0;
 $127 = (_g_value_array_get_type()|0);
 $128 = ((($0)) + 8|0);
 HEAP32[$128>>2] = $127;
 $129 = (_g_intern_static_string(125457)|0);
 $130 = (_g_param_type_register_static($129,$0)|0);
 HEAP32[$126>>2] = $130;
 $131 = HEAP32[37117]|0;
 $132 = ((($131)) + 72|0);
 $133 = HEAP32[$132>>2]|0;
 $134 = ($130|0)==($133|0);
 if (!($134)) {
  _g_assertion_message_expr(0,124698,1541,124735,125474);
  // unreachable;
 }
 $135 = ((($1)) + 76|0);
 $136 = (_g_intern_static_string(125507)|0);
 $137 = (_g_param_type_register_static($136,118312)|0);
 HEAP32[$135>>2] = $137;
 $138 = HEAP32[37117]|0;
 $139 = ((($138)) + 76|0);
 $140 = HEAP32[$139>>2]|0;
 $141 = ($137|0)==($140|0);
 if (!($141)) {
  _g_assertion_message_expr(0,124698,1559,124735,125520);
  // unreachable;
 }
 $142 = ((($1)) + 80|0);
 $143 = (_g_intern_static_string(125548)|0);
 $144 = (_g_param_type_register_static($143,118340)|0);
 HEAP32[$142>>2] = $144;
 $145 = HEAP32[37117]|0;
 $146 = ((($145)) + 80|0);
 $147 = HEAP32[$146>>2]|0;
 $148 = ($144|0)==($147|0);
 if (!($148)) {
  _g_assertion_message_expr(0,124698,1577,124735,125563);
  // unreachable;
 }
 $149 = ((($1)) + 84|0);
 ;HEAP32[$0>>2]=HEAP32[118368>>2]|0;HEAP32[$0+4>>2]=HEAP32[118368+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[118368+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[118368+12>>2]|0;HEAP32[$0+16>>2]=HEAP32[118368+16>>2]|0;HEAP32[$0+20>>2]=HEAP32[118368+20>>2]|0;HEAP32[$0+24>>2]=HEAP32[118368+24>>2]|0;
 $150 = (_g_gtype_get_type()|0);
 $151 = ((($0)) + 8|0);
 HEAP32[$151>>2] = $150;
 $152 = (_g_intern_static_string(125593)|0);
 $153 = (_g_param_type_register_static($152,$0)|0);
 HEAP32[$149>>2] = $153;
 $154 = HEAP32[37117]|0;
 $155 = ((($154)) + 84|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ($153|0)==($156|0);
 if (!($157)) {
  _g_assertion_message_expr(0,124698,1596,124735,125605);
  // unreachable;
 }
 $158 = ((($1)) + 88|0);
 $159 = (_g_intern_static_string(125632)|0);
 $160 = (_g_param_type_register_static($159,118396)|0);
 HEAP32[$158>>2] = $160;
 $161 = HEAP32[37117]|0;
 $162 = ((($161)) + 88|0);
 $163 = HEAP32[$162>>2]|0;
 $164 = ($160|0)==($163|0);
 if ($164) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,124698,1614,124735,125646);
  // unreachable;
 }
}
function _param_variant_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 88|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_variant_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 88|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 88|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 44|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_variant_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 88|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($1)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 | 134217728;
 HEAP32[$9>>2] = $11;
 return;
}
function _param_variant_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 88|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $cond = ($7|0)==(0|0);
 if ($cond) {
  $8 = ((($0)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if ($10) {
   $$0 = 0;
   return ($$0|0);
  }
 } else {
  $11 = ((($0)) + 40|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (_g_variant_is_of_type($7,$12)|0);
  $14 = ($13|0)==(0);
  if (!($14)) {
   $$0 = 0;
   return ($$0|0);
  }
 }
 _g_param_value_set_default($0,$1);
 $$0 = 1;
 return ($$0|0);
}
function _param_variant_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)==(0|0);
 $8 = ($6|0)==(0|0);
 $or$cond = $7 & $8;
 if ($or$cond) {
  return 0;
 } else {
  $9 = ($6|0)!=(0|0);
  $or$cond3 = $7 & $9;
  $10 = ($4|0)!=(0|0);
  $or$cond5 = $10 & $8;
  $$ = $or$cond5&1;
  $spec$select = $or$cond3 ? -1 : $$;
  return ($spec$select|0);
 }
 return (0)|0;
}
function _param_gtype_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_gtype_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_gtype_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(4);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = ((($1)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_is_a($10,$7)|0);
 $12 = ($11|0)==(0);
 if (!($12)) {
  $$0 = 0;
  return ($$0|0);
 }
 $13 = HEAP32[$6>>2]|0;
 HEAP32[$9>>2] = $13;
 $$0 = 1;
 return ($$0|0);
}
function _param_gtype_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_override_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_override_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 80|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 80|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_param_spec_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_override_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 80|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 _g_param_value_set_default($7,$1);
 return;
}
function _param_override_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 80|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_value_validate($7,$1)|0);
 return ($8|0);
}
function _param_override_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37117]|0;
 $4 = ((($3)) + 80|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 40|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (_g_param_values_cmp($8,$1,$2)|0);
 return ($9|0);
}
function _param_object_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_object_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_object_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = HEAP32[$7>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_check_instance_cast($5,76)|0);
 $12 = ((($0)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_value_type_compatible($10,$13)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $$0 = 0;
  return ($$0|0);
 }
 _g_object_unref($7);
 HEAP32[$6>>2] = 0;
 $$0 = 1;
 return ($$0|0);
}
function _param_object_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_value_array_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 72|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_value_array_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 72|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 72|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_param_spec_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_value_array_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 72|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = ((($0)) + 44|0);
 if ($8) {
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   return;
  }
  $12 = (_g_value_array_new($10)|0);
  HEAP32[$6>>2] = $12;
  $13 = ($12|0)==(0|0);
  if ($13) {
   return;
  } else {
   $17 = $12;
  }
 } else {
  $17 = $7;
 }
 $14 = HEAP32[$9>>2]|0;
 $15 = ($14|0)==(0);
 if ($15) {
  return;
 }
 $16 = HEAP32[$17>>2]|0;
 $18 = ($16>>>0)<($14>>>0);
 if ($18) {
  while(1) {
   (_g_value_array_append($17,0)|0);
   $19 = HEAP32[$17>>2]|0;
   $20 = ($19>>>0)<($14>>>0);
   if (!($20)) {
    $22 = $19;
    break;
   }
  }
 } else {
  $22 = $16;
 }
 $21 = ($22>>>0)>($14>>>0);
 if (!($21)) {
  return;
 }
 $24 = $22;
 while(1) {
  $23 = (($24) + -1)|0;
  (_g_value_array_remove($17,$23)|0);
  $25 = HEAP32[$17>>2]|0;
  $26 = ($25>>>0)>($14>>>0);
  if ($26) {
   $24 = $25;
  } else {
   break;
  }
 }
 return;
}
function _param_value_array_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa$i = 0, $$012$i = 0, $$04043 = 0, $$044 = 0, $$1 = 0, $$111$i = 0, $$2 = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 72|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = ((($0)) + 44|0);
 if ($8) {
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$2 = 0;
   return ($$2|0);
  }
  $12 = (_g_value_array_new($10)|0);
  HEAP32[$6>>2] = $12;
  $phitmp = ($12|0)==(0|0);
  if ($phitmp) {
   $$2 = 0;
   return ($$2|0);
  }
 }
 $13 = HEAP32[$9>>2]|0;
 $14 = ($13|0)==(0);
 if ($14) {
  $$2$i = 0;
 } else {
  $15 = HEAP32[$7>>2]|0;
  $16 = ($15>>>0)<($13>>>0);
  if ($16) {
   $$012$i = 0;
   while(1) {
    (_g_value_array_append($7,0)|0);
    $17 = (($$012$i) + 1)|0;
    $18 = HEAP32[$7>>2]|0;
    $19 = ($18>>>0)<($13>>>0);
    if ($19) {
     $$012$i = $17;
    } else {
     $$0$lcssa$i = $17;$21 = $18;
     break;
    }
   }
  } else {
   $$0$lcssa$i = 0;$21 = $15;
  }
  $20 = ($21>>>0)>($13>>>0);
  if ($20) {
   $$111$i = $$0$lcssa$i;$23 = $21;
   while(1) {
    $22 = (($23) + -1)|0;
    (_g_value_array_remove($7,$22)|0);
    $24 = (($$111$i) + 1)|0;
    $25 = HEAP32[$7>>2]|0;
    $26 = ($25>>>0)>($13>>>0);
    if ($26) {
     $$111$i = $24;$23 = $25;
    } else {
     $$2$i = $24;
     break;
    }
   }
  } else {
   $$2$i = $$0$lcssa$i;
  }
 }
 $27 = ((($0)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if ($29) {
  $$2 = $$2$i;
  return ($$2|0);
 }
 $30 = HEAP32[$7>>2]|0;
 $31 = ($30|0)==(0);
 if ($31) {
  $$2 = $$2$i;
  return ($$2|0);
 }
 $32 = ((($7)) + 4|0);
 $$04043 = 0;$$044 = $$2$i;
 while(1) {
  $33 = HEAP32[$32>>2]|0;
  $34 = (($33) + (($$04043*24)|0)|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (_g_type_check_instance_cast($28,76)|0);
  $37 = ((($28)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (_g_value_type_compatible($35,$38)|0);
  $40 = ($39|0)==(0);
  if ($40) {
   $41 = HEAP32[$34>>2]|0;
   $42 = ($41|0)==(0);
   if (!($42)) {
    _g_value_unset($34);
   }
   $43 = (_g_type_check_instance_cast($28,76)|0);
   $44 = ((($28)) + 12|0);
   $45 = HEAP32[$44>>2]|0;
   (_g_value_init($34,$45)|0);
   _g_param_value_set_default($28,$34);
   $46 = (($$044) + 1)|0;
   $$1 = $46;
  } else {
   $$1 = $$044;
  }
  $47 = (_g_param_value_validate($28,$34)|0);
  $48 = (($47) + ($$1))|0;
  $49 = (($$04043) + 1)|0;
  $50 = HEAP32[$7>>2]|0;
  $51 = ($49>>>0)<($50>>>0);
  if ($51) {
   $$04043 = $49;$$044 = $48;
  } else {
   $$2 = $48;
   break;
  }
 }
 return ($$2|0);
}
function _param_value_array_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$04951 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond61 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37117]|0;
 $4 = ((($3)) + 72|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($2)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8|0)!=(0|0);
 $12 = ($10|0)!=(0|0);
 $or$cond = $11 & $12;
 if (!($or$cond)) {
  $13 = ($8|0)!=($10|0);
  $14 = $13&1;
  $15 = $12 ? -1 : $14;
  $$3 = $15;
  return ($$3|0);
 }
 $16 = HEAP32[$8>>2]|0;
 $17 = HEAP32[$10>>2]|0;
 $18 = ($16|0)==($17|0);
 if (!($18)) {
  $19 = ($16>>>0)<($17>>>0);
  $20 = $19 ? -1 : 1;
  $$3 = $20;
  return ($$3|0);
 }
 $21 = ((($0)) + 40|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 $24 = ($16|0)==(0);
 $or$cond61 = $23 | $24;
 if ($or$cond61) {
  $$3 = 0;
  return ($$3|0);
 }
 $25 = ((($8)) + 4|0);
 $26 = ((($10)) + 4|0);
 $$04951 = 0;
 while(1) {
  $30 = HEAP32[$25>>2]|0;
  $31 = (($30) + (($$04951*24)|0)|0);
  $32 = HEAP32[$26>>2]|0;
  $33 = (($32) + (($$04951*24)|0)|0);
  $34 = HEAP32[$31>>2]|0;
  $35 = HEAP32[$33>>2]|0;
  $36 = ($34|0)==($35|0);
  if (!($36)) {
   label = 9;
   break;
  }
  $39 = HEAP32[$21>>2]|0;
  $40 = (_g_param_values_cmp($39,$31,$33)|0);
  $41 = ($40|0)==(0);
  $29 = (($$04951) + 1)|0;
  if (!($41)) {
   $$3 = $40;
   label = 11;
   break;
  }
  $27 = HEAP32[$8>>2]|0;
  $28 = ($29>>>0)<($27>>>0);
  if ($28) {
   $$04951 = $29;
  } else {
   $$3 = 0;
   label = 11;
   break;
  }
 }
 if ((label|0) == 9) {
  $37 = ($34>>>0)<($35>>>0);
  $38 = $37 ? -1 : 1;
  $$3 = $38;
  return ($$3|0);
 }
 else if ((label|0) == 11) {
  return ($$3|0);
 }
 return (0)|0;
}
function _param_pointer_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_pointer_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_pointer_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_pointer_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_boxed_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_boxed_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_boxed_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_boxed_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_param_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_param_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_param_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_type_check_instance_cast($0,76)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_value_type_compatible($6,$9)|0);
 $11 = ($10|0)==(0);
 if (!($11)) {
  $$0 = 0;
  return ($$0|0);
 }
 _g_param_spec_unref($3);
 HEAP32[$2>>2] = 0;
 $$0 = 1;
 return ($$0|0);
}
function _param_string_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 56|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 $8 = ((($0)) + 52|0);
 HEAP8[$8>>0] = 95;
 $9 = ((($0)) + 53|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10 & -4;
 HEAP8[$9>>0] = $11;
 return;
}
function _param_string_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 56|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 56|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 _g_free($11);
 $12 = ((($0)) + 44|0);
 $13 = HEAP32[$12>>2]|0;
 _g_free($13);
 $14 = ((($0)) + 48|0);
 $15 = HEAP32[$14>>2]|0;
 _g_free($15);
 HEAP32[$10>>2] = 0;
 HEAP32[$12>>2] = 0;
 HEAP32[$14>>2] = 0;
 $16 = ((($9)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _param_string_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_strdup($7)|0);
 $9 = ((($1)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function _param_string_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$056 = 0, $$059 = 0, $$069 = 0, $$072 = 0, $$1 = 0, $$15771 = 0, $$160 = 0, $$2 = 0, $$258 = 0, $$26170 = 0, $$362 = 0, $$4 = 0, $$463 = 0, $$5 = 0, $$6 = 0, $$665 = 0, $$7 = 0, $$pre = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $9 = ((($0)) + 53|0);
  $$5 = 0;$$7 = 0;$68 = $9;
 } else {
  $10 = HEAP8[$7>>0]|0;
  $11 = $10 << 24 >> 24;
  $12 = ($10<<24>>24)==(0);
  L4: do {
   if ($12) {
    $$4 = 0;$$665 = $7;
   } else {
    $13 = ((($0)) + 44|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==(0|0);
    if ($15) {
     $$056 = 0;$$160 = $7;
    } else {
     $16 = (_strchr($14,$11)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      $18 = ((($1)) + 16|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $19 & 134217728;
      $21 = ($20|0)==(0);
      if ($21) {
       $$059 = $7;
      } else {
       $22 = (_g_strdup($7)|0);
       HEAP32[$6>>2] = $22;
       $23 = HEAP32[$18>>2]|0;
       $24 = $23 & -134217729;
       HEAP32[$18>>2] = $24;
       $$059 = $22;
      }
      $25 = ((($0)) + 52|0);
      $26 = HEAP8[$25>>0]|0;
      HEAP8[$$059>>0] = $26;
      $$056 = 1;$$160 = $$059;
     } else {
      $$056 = 0;$$160 = $7;
     }
    }
    $27 = ((($0)) + 48|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ($28|0)==(0|0);
    if ($29) {
     $$4 = $$056;$$665 = $$160;
    } else {
     $$069 = ((($$160)) + 1|0);
     $30 = HEAP8[$$069>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $$4 = $$056;$$665 = $$160;
     } else {
      $32 = ((($1)) + 16|0);
      $33 = ((($0)) + 52|0);
      $$072 = $$069;$$15771 = $$056;$$26170 = $$160;$35 = $30;$36 = $28;
      while(1) {
       $34 = $35 << 24 >> 24;
       $37 = (_strchr($36,$34)|0);
       $38 = ($37|0)==(0|0);
       if ($38) {
        $39 = HEAP32[$32>>2]|0;
        $40 = $39 & 134217728;
        $41 = ($40|0)==(0);
        if ($41) {
         $$1 = $$072;$$362 = $$26170;
        } else {
         $42 = (_g_strdup($$26170)|0);
         HEAP32[$6>>2] = $42;
         $43 = $$072;
         $44 = $$26170;
         $45 = (($43) - ($44))|0;
         $46 = (($42) + ($45)|0);
         $47 = HEAP32[$32>>2]|0;
         $48 = $47 & -134217729;
         HEAP32[$32>>2] = $48;
         $$1 = $46;$$362 = $42;
        }
        $49 = HEAP8[$33>>0]|0;
        HEAP8[$$1>>0] = $49;
        $50 = (($$15771) + 1)|0;
        $$2 = $$1;$$258 = $50;$$463 = $$362;
       } else {
        $$2 = $$072;$$258 = $$15771;$$463 = $$26170;
       }
       $$0 = ((($$2)) + 1|0);
       $51 = HEAP8[$$0>>0]|0;
       $52 = ($51<<24>>24)==(0);
       if ($52) {
        $$4 = $$258;$$665 = $$463;
        break L4;
       }
       $$pre = HEAP32[$27>>2]|0;
       $$072 = $$0;$$15771 = $$258;$$26170 = $$463;$35 = $51;$36 = $$pre;
      }
     }
    }
   }
  } while(0);
  $53 = ((($0)) + 53|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)!=(0);
  $57 = ($$665|0)!=(0|0);
  $or$cond = $57 & $56;
  if ($or$cond) {
   $58 = HEAP8[$$665>>0]|0;
   $59 = ($58<<24>>24)==(0);
   if (!($59)) {
    $$6 = $$4;
    return ($$6|0);
   }
   $60 = ((($1)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & 134217728;
   $63 = ($62|0)==(0);
   if ($63) {
    $64 = HEAP32[$6>>2]|0;
    _g_free($64);
   } else {
    $65 = $61 & -134217729;
    HEAP32[$60>>2] = $65;
   }
   HEAP32[$6>>2] = 0;
   $66 = (($$4) + 1)|0;
   $$5 = $66;$$7 = 0;$68 = $53;
  } else {
   $$5 = $$4;$$7 = $$665;$68 = $53;
  }
 }
 $67 = HEAP8[$68>>0]|0;
 $69 = $67 & 2;
 $70 = ($69<<24>>24)==(0);
 $71 = ($$7|0)!=(0|0);
 $or$cond3 = $71 | $70;
 if ($or$cond3) {
  $$6 = $$5;
  return ($$6|0);
 }
 $72 = ((($1)) + 16|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = $73 & -134217729;
 HEAP32[$72>>2] = $74;
 $75 = (_g_strdup(149641)|0);
 HEAP32[$6>>2] = $75;
 $76 = (($$5) + 1)|0;
 $$6 = $76;
 return ($$6|0);
}
function _param_string_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0|0);
 if ($5) {
  $9 = $8 << 31 >> 31;
  $$0 = $9;
  return ($$0|0);
 }
 if (!($8)) {
  $$0 = 1;
  return ($$0|0);
 }
 $10 = (_strcmp($4,$7)|0);
 $$0 = $10;
 return ($$0|0);
}
function _param_double_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 52|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAPF64[$5>>3] = -1.7976931348623157E+308;
 $6 = ((($0)) + 48|0);
 HEAPF64[$6>>3] = 1.7976931348623157E+308;
 $7 = ((($0)) + 56|0);
 HEAPF64[$7>>3] = 0.0;
 $8 = ((($0)) + 64|0);
 HEAPF64[$8>>3] = 9.9999999999999999E-91;
 return;
}
function _param_double_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = +HEAPF64[$6>>3];
 $8 = ((($1)) + 8|0);
 HEAPF64[$8>>3] = $7;
 return;
}
function _param_double_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = +HEAPF64[$6>>3];
 $8 = ((($0)) + 48|0);
 $9 = +HEAPF64[$8>>3];
 $10 = $7 > $9;
 if ($10) {
  $14 = $9;
  HEAPF64[$6>>3] = $14;
  $15 = $14 != $7;
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = +HEAPF64[$11>>3];
 $13 = $7 < $12;
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAPF64[$6>>3] = $14;
 $15 = $14 != $7;
 $16 = $15&1;
 return ($16|0);
}
function _param_double_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37117]|0;
 $4 = ((($3)) + 52|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 64|0);
 $8 = +HEAPF64[$7>>3];
 $9 = ((($1)) + 8|0);
 $10 = +HEAPF64[$9>>3];
 $11 = ((($2)) + 8|0);
 $12 = +HEAPF64[$11>>3];
 $13 = $10 < $12;
 $14 = $12 - $10;
 $15 = $14 > $8;
 $16 = $15 << 31 >> 31;
 $17 = $10 - $12;
 $18 = $17 > $8;
 $19 = $18&1;
 $$0 = $13 ? $16 : $19;
 return ($$0|0);
}
function _param_float_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAPF32[$5>>2] = Math_fround(-3.40282347E+38);
 $6 = ((($0)) + 44|0);
 HEAPF32[$6>>2] = Math_fround(3.40282347E+38);
 $7 = ((($0)) + 48|0);
 HEAPF32[$7>>2] = Math_fround(0.0);
 $8 = ((($0)) + 52|0);
 HEAPF32[$8>>2] = Math_fround(1.0E-30);
 return;
}
function _param_float_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_float_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = Math_fround(0), $10 = 0, $11 = 0, $12 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = Math_fround(0), $8 = 0, $9 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = Math_fround(HEAPF32[$6>>2]);
 $8 = ((($0)) + 44|0);
 $9 = Math_fround(HEAPF32[$8>>2]);
 $10 = $7 > $9;
 if ($10) {
  $14 = $9;
  HEAPF32[$6>>2] = $14;
  $15 = $14 != $7;
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = Math_fround(HEAPF32[$11>>2]);
 $13 = $7 < $12;
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAPF32[$6>>2] = $14;
 $15 = $14 != $7;
 $16 = $15&1;
 return ($16|0);
}
function _param_float_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = Math_fround(0), $11 = 0, $12 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = Math_fround(0), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37117]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 52|0);
 $8 = Math_fround(HEAPF32[$7>>2]);
 $9 = ((($1)) + 8|0);
 $10 = Math_fround(HEAPF32[$9>>2]);
 $11 = ((($2)) + 8|0);
 $12 = Math_fround(HEAPF32[$11>>2]);
 $13 = $10 < $12;
 $14 = Math_fround($12 - $10);
 $15 = $14 > $8;
 $16 = $15 << 31 >> 31;
 $17 = Math_fround($10 - $12);
 $18 = $17 > $8;
 $19 = $18&1;
 $$0 = $13 ? $16 : $19;
 return ($$0|0);
}
function _param_flags_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_flags_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_type_class_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_flags_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_flags_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 40|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $14 = ((($0)) + 44|0);
  $15 = HEAP32[$14>>2]|0;
  $storemerge = $15;
 } else {
  $11 = ((($9)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $12 & $7;
  $storemerge = $13;
 }
 HEAP32[$6>>2] = $storemerge;
 $16 = ($storemerge|0)!=($7|0);
 $17 = $16&1;
 return ($17|0);
}
function _param_ulong_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_enum_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_enum_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_type_class_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_enum_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_enum_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 40|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (_g_enum_get_value($9,$7)|0);
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   $$pre = HEAP32[$6>>2]|0;
   $16 = $$pre;
   $15 = ($16|0)!=($7|0);
   $17 = $15&1;
   return ($17|0);
  }
 }
 $13 = ((($0)) + 44|0);
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$6>>2] = $14;
 $16 = $14;
 $15 = ($16|0)!=($7|0);
 $17 = $15&1;
 return ($17|0);
}
function _param_long_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 $8 = ($4|0)>($6|0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_unichar_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 return;
}
function _param_unichar_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_unichar_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_unichar_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_uint64_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 32|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 $6 = $5;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 48|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = -1;
 $15 = ((($0)) + 56|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = 0;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 return;
}
function _param_uint64_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 8|0);
 $14 = $13;
 $15 = $14;
 HEAP32[$15>>2] = $9;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 return;
}
function _param_uint64_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 48|0);
 $14 = $13;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = (($14) + 4)|0;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($12>>>0)>($19>>>0);
 $21 = ($9>>>0)>($16>>>0);
 $22 = ($12|0)==($19|0);
 $23 = $22 & $21;
 $24 = $20 | $23;
 if ($24) {
  $41 = $16;$44 = $19;
 } else {
  $25 = ((($0)) + 40|0);
  $26 = $25;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 4)|0;
  $30 = $29;
  $31 = HEAP32[$30>>2]|0;
  $32 = ($12>>>0)<($31>>>0);
  $33 = ($9>>>0)<($28>>>0);
  $34 = ($12|0)==($31|0);
  $35 = $34 & $33;
  $36 = $32 | $35;
  $37 = $36 ? $28 : $9;
  $38 = $36 ? $31 : $12;
  $41 = $37;$44 = $38;
 }
 $39 = $6;
 $40 = $39;
 HEAP32[$40>>2] = $41;
 $42 = (($39) + 4)|0;
 $43 = $42;
 HEAP32[$43>>2] = $44;
 $45 = ($41|0)!=($9|0);
 $46 = ($44|0)!=($12|0);
 $47 = $45 | $46;
 $48 = $47&1;
 return ($48|0);
}
function _param_uint64_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 8|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = ($9>>>0)<($16>>>0);
 $18 = ($6>>>0)<($13>>>0);
 $19 = ($9|0)==($16|0);
 $20 = $19 & $18;
 $21 = $17 | $20;
 $22 = ($9>>>0)>($16>>>0);
 $23 = ($6>>>0)>($13>>>0);
 $24 = ($9|0)==($16|0);
 $25 = $24 & $23;
 $26 = $22 | $25;
 $27 = $26&1;
 $$0 = $21 ? -1 : $27;
 return ($$0|0);
}
function _param_int64_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 $6 = $5;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = -2147483648;
 $10 = ((($0)) + 48|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 2147483647;
 $15 = ((($0)) + 56|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = 0;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 return;
}
function _param_int64_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 8|0);
 $14 = $13;
 $15 = $14;
 HEAP32[$15>>2] = $9;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 return;
}
function _param_int64_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 48|0);
 $14 = $13;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = (($14) + 4)|0;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($12|0)>($19|0);
 $21 = ($9>>>0)>($16>>>0);
 $22 = ($12|0)==($19|0);
 $23 = $22 & $21;
 $24 = $20 | $23;
 if ($24) {
  $41 = $16;$44 = $19;
 } else {
  $25 = ((($0)) + 40|0);
  $26 = $25;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 4)|0;
  $30 = $29;
  $31 = HEAP32[$30>>2]|0;
  $32 = ($12|0)<($31|0);
  $33 = ($9>>>0)<($28>>>0);
  $34 = ($12|0)==($31|0);
  $35 = $34 & $33;
  $36 = $32 | $35;
  $37 = $36 ? $28 : $9;
  $38 = $36 ? $31 : $12;
  $41 = $37;$44 = $38;
 }
 $39 = $6;
 $40 = $39;
 HEAP32[$40>>2] = $41;
 $42 = (($39) + 4)|0;
 $43 = $42;
 HEAP32[$43>>2] = $44;
 $45 = ($41|0)!=($9|0);
 $46 = ($44|0)!=($12|0);
 $47 = $45 | $46;
 $48 = $47&1;
 return ($48|0);
}
function _param_int64_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 8|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = ($9|0)<($16|0);
 $18 = ($6>>>0)<($13>>>0);
 $19 = ($9|0)==($16|0);
 $20 = $19 & $18;
 $21 = $17 | $20;
 $22 = ($9|0)>($16|0);
 $23 = ($6>>>0)>($13>>>0);
 $24 = ($9|0)==($16|0);
 $25 = $24 & $23;
 $26 = $22 | $25;
 $27 = $26&1;
 $$0 = $21 ? -1 : $27;
 return ($$0|0);
}
function _param_ulong_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_ulong_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_ulong_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7>>>0)<($12>>>0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_long_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 2147483647;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -2147483648;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_long_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_long_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)>($9|0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7|0)<($12|0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_uint_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_uint_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_uint_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7>>>0)<($12>>>0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_uint_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_int_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 2147483647;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -2147483648;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_int_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_int_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)>($9|0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7|0)<($12|0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_int_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 $8 = ($4|0)>($6|0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_boolean_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_boolean_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0);
 $5 = $4&1;
 HEAP32[$2>>2] = $5;
 $6 = ($3|0)!=($5|0);
 $7 = $6&1;
 return ($7|0);
}
function _param_uchar_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($0)) + 41|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($0)) + 42|0);
 HEAP8[$7>>0] = 0;
 return;
}
function _param_uchar_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 42|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = ((($1)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function _param_uchar_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 41|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = ($7>>>0)>($10>>>0);
 if ($11) {
  $16 = $10;
  HEAP32[$6>>2] = $16;
  $17 = ($16|0)!=($7|0);
  $18 = $17&1;
  return ($18|0);
 }
 $12 = ((($0)) + 40|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = ($7>>>0)<($14>>>0);
 $$ = $15 ? $14 : $7;
 $16 = $$;
 HEAP32[$6>>2] = $16;
 $17 = ($16|0)!=($7|0);
 $18 = $17&1;
 return ($18|0);
}
function _param_char_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37117]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_check_instance_cast($0,$2)|0);
 $4 = ((($0)) + 40|0);
 HEAP8[$4>>0] = 127;
 $5 = ((($0)) + 41|0);
 HEAP8[$5>>0] = -128;
 $6 = ((($0)) + 42|0);
 HEAP8[$6>>0] = 0;
 return;
}
function _param_char_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 42|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_char_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37117]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 41|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8 << 24 >> 24;
 $10 = ($6|0)>($9|0);
 if ($10) {
  $15 = $9;
  HEAP32[$5>>2] = $15;
  $16 = ($15|0)!=($6|0);
  $17 = $16&1;
  return ($17|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 << 24 >> 24;
 $14 = ($6|0)<($13|0);
 $$ = $14 ? $13 : $6;
 $15 = $$;
 HEAP32[$5>>2] = $15;
 $16 = ($15|0)!=($6|0);
 $17 = $16&1;
 return ($17|0);
}
function _g_param_spec_boolean($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = ((($8)) + 40|0);
 HEAP32[$10>>2] = $3;
 $11 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function _g_param_spec_int($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP32[37117]|0;
 $8 = ((($7)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_param_spec_internal($9,$0,$1,$2,$6)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = ((($10)) + 40|0);
 HEAP32[$12>>2] = $3;
 $13 = ((($10)) + 44|0);
 HEAP32[$13>>2] = $4;
 $14 = ((($10)) + 48|0);
 HEAP32[$14>>2] = $5;
 $15 = (_g_type_check_instance_cast($10,76)|0);
 $$0 = $10;
 return ($$0|0);
}
function _g_param_spec_uint($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP32[37117]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_param_spec_internal($9,$0,$1,$2,$6)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = ((($10)) + 40|0);
 HEAP32[$12>>2] = $3;
 $13 = ((($10)) + 44|0);
 HEAP32[$13>>2] = $4;
 $14 = ((($10)) + 48|0);
 HEAP32[$14>>2] = $5;
 $15 = (_g_type_check_instance_cast($10,76)|0);
 $$0 = $10;
 return ($$0|0);
}
function _g_param_spec_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[37117]|0;
 $5 = ((($4)) + 68|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_param_spec_internal($6,$0,$1,$2,$3)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = (_g_type_check_instance_cast($7,76)|0);
 $$0 = $7;
 return ($$0|0);
}
function _g_param_spec_gtype($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 84|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = ((($8)) + 40|0);
 HEAP32[$10>>2] = $3;
 $11 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function _g_param_spec_object($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[37117]|0;
 $6 = ((($5)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = (_g_type_check_instance_cast($8,76)|0);
 $11 = ((($8)) + 12|0);
 HEAP32[$11>>2] = $3;
 $12 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function __g_signal_init() {
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37118]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  return;
 }
 $2 = (_g_hash_table_new(290,0)|0);
 HEAP32[37119] = $2;
 $3 = (_g_malloc(32)|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 HEAP32[37120] = $3;
 HEAP32[37118] = 1;
 $8 = HEAP32[37121]|0;
 $9 = (_g_realloc_n($8,1,4)|0);
 HEAP32[37121] = $9;
 HEAP32[$9>>2] = 0;
 $10 = (_g_hash_table_new(291,292)|0);
 HEAP32[37122] = $10;
 return;
}
function _handler_hash($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function _handler_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $10 = 0;
  return ($10|0);
 }
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($1)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6|0)==($8|0);
 $phitmp = $9&1;
 $10 = $phitmp;
 return ($10|0);
}
function __g_signals_destroy($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _invalid_closure_notify($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$lcssa38$i35 = 0, $$0$us$us$i = 0, $$03241$i = 0, $$03241$us$i = 0, $$039$i = 0, $$039$us$i = 0, $$040$i = 0, $$040$us$us$i = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i$lcssa$i34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37119]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  _g_assertion_message_expr(0,125723,3811,125756,125779);
  // unreachable;
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  _g_assertion_message_expr(0,125723,3811,125756,125779);
  // unreachable;
 }
 $7 = ((($3)) + 8|0);
 $8 = ($1|0)==(0|0);
 if (!($8)) {
  $$03241$i = 0;
  L9: while(1) {
   $19 = $$03241$i << 4;
   $20 = (($7) + ($19)|0);
   $21 = ((($20)) + 4|0);
   $$039$i = HEAP32[$21>>2]|0;
   $22 = ($$039$i|0)==(0|0);
   if (!($22)) {
    $$040$i = $$039$i;
    while(1) {
     $23 = ((($$040$i)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($24|0)==($1|0);
     if ($25) {
      $$0$lcssa38$i35 = $$040$i;$spec$select$i$lcssa$i34 = $20;
      label = 19;
      break L9;
     }
     $26 = ((($$040$i)) + 4|0);
     $$0$i = HEAP32[$26>>2]|0;
     $27 = ($$0$i|0)==(0|0);
     if ($27) {
      break;
     } else {
      $$040$i = $$0$i;
     }
    }
   }
   $28 = (($$03241$i) + 1)|0;
   $29 = ($28>>>0)<($5>>>0);
   if ($29) {
    $$03241$i = $28;
   } else {
    label = 16;
    break;
   }
  }
  if ((label|0) == 16) {
   _g_assertion_message_expr(0,125723,3811,125756,125779);
   // unreachable;
  }
  else if ((label|0) == 19) {
   $31 = HEAP32[$spec$select$i$lcssa$i34>>2]|0;
   HEAP32[$$0$lcssa38$i35>>2] = 0;
   $32 = ((($$0$lcssa38$i35)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = $33 & -65536;
   $35 = $34 | 1;
   HEAP32[$32>>2] = $35;
   _handler_unref_R($31,$0,$$0$lcssa38$i35);
   return;
  }
 }
 $$03241$us$i = 0;
 L21: while(1) {
  $9 = $$03241$us$i << 4;
  $10 = (($7) + ($9)|0);
  $11 = ((($10)) + 4|0);
  $$039$us$i = HEAP32[$11>>2]|0;
  $12 = ($$039$us$i|0)==(0|0);
  if (!($12)) {
   $$040$us$us$i = $$039$us$i;
   while(1) {
    $15 = HEAP32[$$040$us$us$i>>2]|0;
    $16 = ($15|0)==(0);
    if ($16) {
     break L21;
    }
    $17 = ((($$040$us$us$i)) + 4|0);
    $$0$us$us$i = HEAP32[$17>>2]|0;
    $18 = ($$0$us$us$i|0)==(0|0);
    if ($18) {
     break;
    } else {
     $$040$us$us$i = $$0$us$us$i;
    }
   }
  }
  $13 = (($$03241$us$i) + 1)|0;
  $14 = ($13>>>0)<($5>>>0);
  if ($14) {
   $$03241$us$i = $13;
  } else {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  _g_assertion_message_expr(0,125723,3811,125756,125779);
  // unreachable;
 }
 $$phi$trans$insert = ((($$040$us$us$i)) + 28|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $30 = ($$pre|0)==($1|0);
 if ($30) {
  $$0$lcssa38$i35 = $$040$us$us$i;$spec$select$i$lcssa$i34 = $10;
  $31 = HEAP32[$spec$select$i$lcssa$i34>>2]|0;
  HEAP32[$$0$lcssa38$i35>>2] = 0;
  $32 = ((($$0$lcssa38$i35)) + 24|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = $33 & -65536;
  $35 = $34 | 1;
  HEAP32[$32>>2] = $35;
  _handler_unref_R($31,$0,$$0$lcssa38$i35);
  return;
 } else {
  _g_assertion_message_expr(0,125723,3812,125756,125795);
  // unreachable;
 }
}
function _handler_lists_cmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2>>>0)>($3>>>0);
 $5 = ($2|0)!=($3|0);
 $6 = $5 << 31 >> 31;
 $7 = $4 ? 1 : $6;
 return ($7|0);
}
function _handler_unref_R($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0507$i$i = 0, $$0507$i$i62 = 0, $$0507$i$i72 = 0, $$053 = 0, $$0536$i$i = 0, $$0536$i$i63 = 0, $$0536$i$i73 = 0, $$151$i$i = 0, $$151$i$i65 = 0, $$151$i$i75 = 0, $$154$i$i = 0, $$154$i$i64 = 0, $$154$i$i74 = 0, $$180 = 0, $$2 = 0, $$383 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($2)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 HEAP32[$4>>2] = $6;
 $7 = ($6|0)==(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ((($2)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 $11 = $9;
 $$pre = ((($2)) + 8|0);
 if (!($10)) {
  $12 = HEAP32[$$pre>>2]|0;
  $13 = ((($9)) + 8|0);
  HEAP32[$13>>2] = $12;
 }
 $14 = HEAP32[$$pre>>2]|0;
 $15 = ($14|0)==(0|0);
 L7: do {
  if ($15) {
   $17 = HEAP32[37119]|0;
   $18 = (_g_hash_table_lookup($17,$1)|0);
   HEAP32[$3>>2] = $0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    _g_assertion_message_expr(0,125723,668,125823,125839);
    // unreachable;
   }
   $20 = ((($18)) + 8|0);
   $21 = HEAP32[$18>>2]|0;
   $22 = ($21|0)==(0);
   L13: do {
    if (!($22)) {
     $$0507$i$i = $21;$$0536$i$i = 0;
     while(1) {
      $23 = (($$0536$i$i) + ($$0507$i$i))|0;
      $24 = $23 >>> 1;
      $25 = $24 << 4;
      $26 = (($20) + ($25)|0);
      $27 = (_handler_lists_cmp($3,$26)|0);
      $28 = ($27|0)==(0);
      if ($28) {
       break;
      }
      $29 = ($27|0)<(0);
      $30 = (($24) + 1)|0;
      $$154$i$i = $29 ? $$0536$i$i : $30;
      $$151$i$i = $29 ? $24 : $$0507$i$i;
      $31 = ($$154$i$i>>>0)<($$151$i$i>>>0);
      if ($31) {
       $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
      } else {
       break L13;
      }
     }
     $32 = HEAP32[$8>>2]|0;
     $33 = ((($26)) + 4|0);
     HEAP32[$33>>2] = $32;
     $$053 = $26;
     break L7;
    }
   } while(0);
   _g_assertion_message_expr(0,125723,668,125823,125839);
   // unreachable;
  } else {
   $16 = ((($14)) + 4|0);
   HEAP32[$16>>2] = $11;
   $$053 = 0;
  }
 } while(0);
 $34 = ($1|0)==(0|0);
 L23: do {
  if (!($34)) {
   $35 = ((($2)) + 24|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $36 & 65536;
   $38 = ($37|0)==(0);
   L25: do {
    if ($38) {
     $39 = HEAP32[$8>>2]|0;
     $40 = ($39|0)==(0|0);
     if (!($40)) {
      $41 = ((($39)) + 24|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = $42 & 65536;
      $44 = ($43|0)==(0);
      if ($44) {
       $$2 = $$053;
       break;
      }
     }
     $45 = ($$053|0)==(0|0);
     L30: do {
      if ($45) {
       $46 = HEAP32[37119]|0;
       $47 = (_g_hash_table_lookup($46,$1)|0);
       HEAP32[$3>>2] = $0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        $$2 = 0;
        break L25;
       }
       $49 = ((($47)) + 8|0);
       $50 = HEAP32[$47>>2]|0;
       $51 = ($50|0)==(0);
       L35: do {
        if (!($51)) {
         $$0507$i$i62 = $50;$$0536$i$i63 = 0;
         while(1) {
          $52 = (($$0536$i$i63) + ($$0507$i$i62))|0;
          $53 = $52 >>> 1;
          $54 = $53 << 4;
          $55 = (($49) + ($54)|0);
          $56 = (_handler_lists_cmp($3,$55)|0);
          $57 = ($56|0)==(0);
          if ($57) {
           break;
          }
          $58 = ($56|0)<(0);
          $59 = (($53) + 1)|0;
          $$154$i$i64 = $58 ? $$0536$i$i63 : $59;
          $$151$i$i65 = $58 ? $53 : $$0507$i$i62;
          $60 = ($$154$i$i64>>>0)<($$151$i$i65>>>0);
          if ($60) {
           $$0507$i$i62 = $$151$i$i65;$$0536$i$i63 = $$154$i$i64;
          } else {
           break L35;
          }
         }
         $$180 = $55;
         break L30;
        }
       } while(0);
       $$2 = 0;
       break L25;
      } else {
       $$180 = $$053;
      }
     } while(0);
     $61 = ((($$180)) + 8|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ($62|0)==($2|0);
     if ($63) {
      $64 = HEAP32[$$pre>>2]|0;
      HEAP32[$61>>2] = $64;
      $$2 = $$180;
      break;
     } else {
      _g_assertion_message_expr(0,125723,681,125823,125853);
      // unreachable;
     }
    } else {
     $$2 = $$053;
    }
   } while(0);
   $65 = HEAP32[$8>>2]|0;
   $66 = ($65|0)==(0|0);
   if ($66) {
    $67 = ($$2|0)==(0|0);
    L48: do {
     if ($67) {
      $68 = HEAP32[37119]|0;
      $69 = (_g_hash_table_lookup($68,$1)|0);
      HEAP32[$3>>2] = $0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break L23;
      }
      $71 = ((($69)) + 8|0);
      $72 = HEAP32[$69>>2]|0;
      $73 = ($72|0)==(0);
      L53: do {
       if (!($73)) {
        $$0507$i$i72 = $72;$$0536$i$i73 = 0;
        while(1) {
         $74 = (($$0536$i$i73) + ($$0507$i$i72))|0;
         $75 = $74 >>> 1;
         $76 = $75 << 4;
         $77 = (($71) + ($76)|0);
         $78 = (_handler_lists_cmp($3,$77)|0);
         $79 = ($78|0)==(0);
         if ($79) {
          break;
         }
         $80 = ($78|0)<(0);
         $81 = (($75) + 1)|0;
         $$154$i$i74 = $80 ? $$0536$i$i73 : $81;
         $$151$i$i75 = $80 ? $75 : $$0507$i$i72;
         $82 = ($$154$i$i74>>>0)<($$151$i$i75>>>0);
         if ($82) {
          $$0507$i$i72 = $$151$i$i75;$$0536$i$i73 = $$154$i$i74;
         } else {
          break L53;
         }
        }
        $$383 = $77;
        break L48;
       }
      } while(0);
      break L23;
     } else {
      $$383 = $$2;
     }
    } while(0);
    $83 = ((($$383)) + 12|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($84|0)==($2|0);
    if ($85) {
     $86 = HEAP32[$$pre>>2]|0;
     HEAP32[$83>>2] = $86;
     break;
    } else {
     _g_assertion_message_expr(0,125723,693,125823,125883);
     // unreachable;
    }
   }
  }
 } while(0);
 $87 = ((($2)) + 28|0);
 $88 = HEAP32[$87>>2]|0;
 _g_closure_unref($88);
 _g_slice_free1(36,$2);
 STACKTOP = sp;return;
}
function _g_signal_handlers_destroy($0) {
 $0 = $0|0;
 var $$034 = 0, $$in = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37119]|0;
 $2 = (_g_hash_table_lookup($1,$0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = HEAP32[37119]|0;
 (_g_hash_table_remove($4,$0)|0);
 $5 = HEAP32[$2>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  $7 = ((($2)) + 8|0);
  $$034 = 0;$9 = $5;
  while(1) {
   $8 = ($9>>>0)>($$034>>>0);
   $10 = $$034 << 4;
   $11 = (($7) + ($10)|0);
   $spec$select$i = $8 ? $11 : 0;
   $12 = ((($spec$select$i)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $35 = $9;
   } else {
    $$in = $13;
    while(1) {
     $15 = ((($$in)) + 4|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ((($$in)) + 24|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $18 & -65536;
     $20 = $19 | 1;
     HEAP32[$17>>2] = $20;
     HEAP32[$15>>2] = 0;
     $21 = ((($$in)) + 8|0);
     HEAP32[$21>>2] = $$in;
     $22 = HEAP32[$$in>>2]|0;
     $23 = ($22|0)==(0);
     if (!($23)) {
      $24 = HEAP32[37122]|0;
      (_g_hash_table_remove($24,$$in)|0);
      $25 = HEAP32[$17>>2]|0;
      $26 = $25 & 131072;
      $27 = ($26|0)==(0);
      if (!($27)) {
       $28 = ((($$in)) + 28|0);
       $29 = HEAP32[$28>>2]|0;
       _g_closure_remove_invalidate_notifier($29,$0,293);
       $30 = HEAP32[$17>>2]|0;
       $31 = $30 & -131073;
       HEAP32[$17>>2] = $31;
      }
      HEAP32[$$in>>2] = 0;
      _handler_unref_R(0,0,$$in);
     }
     $32 = ($16|0)==(0|0);
     if ($32) {
      break;
     } else {
      $$in = $16;
     }
    }
    $$pre = HEAP32[$2>>2]|0;
    $35 = $$pre;
   }
   $33 = (($$034) + 1)|0;
   $34 = ($33>>>0)<($35>>>0);
   if ($34) {
    $$034 = $33;$9 = $35;
   } else {
    break;
   }
  }
 }
 _g_free($2);
 return;
}
function _g_signal_emit_valist($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i335 = 0, $$01115$i = 0, $$01115$i$phi = 0, $$014$i = 0, $$016$i = 0, $$0310$lcssa = 0, $$0310354 = 0, $$0310355 = 0, $$0310356 = 0, $$0310401$us = 0, $$0312400$us = 0, $$0313 = 0, $$0316 = 0, $$0319$lcssa = 0, $$0319371 = 0, $$0320370 = 0, $$0321 = 0, $$0324 = 0, $$0325390 = 0, $$0326385 = 0;
 var $$0327$lcssa = 0, $$0327384 = 0, $$0328376 = 0, $$0329$lcssa = 0, $$0329375 = 0, $$0394 = 0, $$0507$i$i = 0, $$0536$i$i = 0, $$1$i = 0, $$130$i = 0, $$1311$us = 0, $$1314$lcssa = 0, $$1314359 = 0, $$1314360 = 0, $$1314361 = 0, $$1314399$us = 0, $$1317338344 = 0, $$1322$lcssa = 0, $$1322364 = 0, $$1322365 = 0;
 var $$1322366 = 0, $$1322398$us = 0, $$1381 = 0, $$151$i$i = 0, $$154$i$i = 0, $$2315$us = 0, $$2318 = 0, $$2323$us = 0, $$2367 = 0, $$332 = 0, $$4368 = 0, $$alloca_mul = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi424Z2D = 0, $$pre$phiZ2D = 0, $$pre423 = 0, $$sink = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0.0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0.0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current10 = 0, $arglist_current13 = 0, $arglist_current16 = 0, $arglist_current19 = 0, $arglist_current22 = 0, $arglist_current25 = 0, $arglist_current28 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current4 = 0;
 var $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current54 = 0, $arglist_current57 = 0, $arglist_current60 = 0, $arglist_current63 = 0, $arglist_current66 = 0, $arglist_current7 = 0, $arglist_next = 0, $arglist_next11 = 0, $arglist_next14 = 0, $arglist_next17 = 0, $arglist_next20 = 0, $arglist_next23 = 0, $arglist_next26 = 0, $arglist_next29 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0;
 var $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next5 = 0, $arglist_next55 = 0, $arglist_next58 = 0, $arglist_next61 = 0, $arglist_next64 = 0, $arglist_next67 = 0, $arglist_next8 = 0, $exitcond = 0, $expanded = 0, $expanded100 = 0, $expanded102 = 0, $expanded103 = 0, $expanded104 = 0, $expanded106 = 0, $expanded107 = 0, $expanded109 = 0, $expanded110 = 0, $expanded111 = 0;
 var $expanded113 = 0, $expanded114 = 0, $expanded116 = 0, $expanded117 = 0, $expanded118 = 0, $expanded120 = 0, $expanded121 = 0, $expanded123 = 0, $expanded124 = 0, $expanded125 = 0, $expanded127 = 0, $expanded128 = 0, $expanded130 = 0, $expanded131 = 0, $expanded132 = 0, $expanded134 = 0, $expanded135 = 0, $expanded137 = 0, $expanded138 = 0, $expanded139 = 0;
 var $expanded141 = 0, $expanded142 = 0, $expanded144 = 0, $expanded145 = 0, $expanded146 = 0, $expanded148 = 0, $expanded149 = 0, $expanded151 = 0, $expanded152 = 0, $expanded153 = 0, $expanded155 = 0, $expanded156 = 0, $expanded158 = 0, $expanded159 = 0, $expanded160 = 0, $expanded162 = 0, $expanded163 = 0, $expanded165 = 0, $expanded166 = 0, $expanded167 = 0;
 var $expanded169 = 0, $expanded170 = 0, $expanded172 = 0, $expanded173 = 0, $expanded174 = 0, $expanded176 = 0, $expanded177 = 0, $expanded179 = 0, $expanded180 = 0, $expanded181 = 0, $expanded183 = 0, $expanded184 = 0, $expanded186 = 0, $expanded187 = 0, $expanded188 = 0, $expanded190 = 0, $expanded191 = 0, $expanded193 = 0, $expanded194 = 0, $expanded195 = 0;
 var $expanded197 = 0, $expanded198 = 0, $expanded200 = 0, $expanded201 = 0, $expanded202 = 0, $expanded204 = 0, $expanded205 = 0, $expanded207 = 0, $expanded208 = 0, $expanded209 = 0, $expanded72 = 0, $expanded74 = 0, $expanded75 = 0, $expanded76 = 0, $expanded78 = 0, $expanded79 = 0, $expanded81 = 0, $expanded82 = 0, $expanded83 = 0, $expanded85 = 0;
 var $expanded86 = 0, $expanded88 = 0, $expanded89 = 0, $expanded90 = 0, $expanded92 = 0, $expanded93 = 0, $expanded95 = 0, $expanded96 = 0, $expanded97 = 0, $expanded99 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond330$us = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer30 = 0, $vararg_buffer49 = 0, $vararg_buffer68 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr33 = 0, $vararg_ptr52 = 0, $vararg_ptr71 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $vararg_buffer68 = sp + 248|0;
 $vararg_buffer49 = sp + 240|0;
 $vararg_buffer30 = sp + 232|0;
 $vararg_buffer = sp + 216|0;
 $4 = sp + 128|0;
 $5 = sp + 64|0;
 $6 = sp + 192|0;
 $7 = sp;
 $8 = HEAP32[37118]|0;
 $9 = ($8>>>0)>($1>>>0);
 if ($9) {
  $10 = HEAP32[37121]|0;
  $11 = (($10) + ($1<<2)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($12|0)==(0|0);
  if (!($13)) {
   $14 = HEAP32[$0>>2]|0;
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($12)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (_g_type_is_a($15,$17)|0);
   $19 = ($18|0)==(0);
   if (!($19)) {
    $20 = ((($12)) + 12|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $21 & 262144;
    $23 = ($22|0)==(0);
    if ($23) {
     $24 = HEAP32[$16>>2]|0;
     $25 = (_g_type_fundamental($24)|0);
     $26 = ($25|0)==(80);
     $27 = HEAP32[$20>>2]|0;
     $28 = $27 & 256;
     $29 = ($28|0)==(0);
     $or$cond$i = $26 & $29;
     L7: do {
      if ($or$cond$i) {
       $30 = ((($12)) + 40|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = ($31|0)==(0|0);
       if (!($32)) {
        $33 = ((($31)) + 8|0);
        $34 = HEAP32[$33>>2]|0;
        $35 = ($34|0)==(0|0);
        if (!($35)) {
         $$1$i = 0;$$130$i = 0;
         break;
        }
       }
       $36 = ((($12)) + 24|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(0|0);
       if ($38) {
        $$1$i = (1);$$130$i = 0;
       } else {
        $39 = HEAP32[$37>>2]|0;
        switch ($39|0) {
        case 0:  {
         $$1$i = (1);$$130$i = $39;
         break L7;
         break;
        }
        case 1:  {
         break;
        }
        default: {
         $$1$i = 0;$$130$i = 0;
         break L7;
        }
        }
        $40 = ((($37)) + 8|0);
        $41 = HEAP32[$40>>2]|0;
        $42 = ($41|0)==(0);
        if ($42) {
         $43 = $27 >>> 1;
         $44 = $43 & 7;
         $45 = (($44) + -1)|0;
         $46 = ($45>>>0)<(2);
         if ($46) {
          $47 = ($44|0)==(2);
          $48 = $47&1;
          $phitmp$i = $48 << 19;
          $49 = ((($40)) + 4|0);
          $50 = HEAP32[$49>>2]|0;
          $$1$i = $50;$$130$i = $phitmp$i;
         } else {
          $$1$i = 0;$$130$i = 0;
         }
        } else {
         $$1$i = 0;$$130$i = 0;
        }
       }
      } else {
       $$1$i = 0;$$130$i = 0;
      }
     } while(0);
     $51 = ((($12)) + 44|0);
     HEAP32[$51>>2] = $$1$i;
     $52 = $27 & -786433;
     $53 = $52 | $$130$i;
     $54 = $53 | 262144;
     HEAP32[$20>>2] = $54;
     $$pre$phiZ2D = $51;$56 = $$1$i;
    } else {
     $$phi$trans$insert = ((($12)) + 44|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$56 = $$pre;
    }
    $55 = ($56|0)==(0|0);
    L21: do {
     if (!($55)) {
      $57 = HEAP32[$12>>2]|0;
      $58 = HEAP32[37119]|0;
      $59 = (_g_hash_table_lookup($58,$0)|0);
      HEAP32[$4>>2] = $57;
      $60 = ($59|0)==(0|0);
      if ($60) {
       $86 = 0;
      } else {
       $61 = ((($59)) + 8|0);
       $62 = HEAP32[$59>>2]|0;
       $63 = ($62|0)==(0);
       L25: do {
        if ($63) {
         $432 = 0;
        } else {
         $$0507$i$i = $62;$$0536$i$i = 0;
         while(1) {
          $64 = (($$0536$i$i) + ($$0507$i$i))|0;
          $65 = $64 >>> 1;
          $66 = $65 << 4;
          $67 = (($61) + ($66)|0);
          $68 = (_handler_lists_cmp($4,$67)|0);
          $69 = ($68|0)==(0);
          if ($69) {
           $432 = $67;
           break L25;
          }
          $70 = ($68|0)<(0);
          $71 = (($65) + 1)|0;
          $$154$i$i = $70 ? $$0536$i$i : $71;
          $$151$i$i = $70 ? $65 : $$0507$i$i;
          $72 = ($$154$i$i>>>0)<($$151$i$i>>>0);
          if ($72) {
           $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
          } else {
           $432 = 0;
           break;
          }
         }
        }
       } while(0);
       $86 = $432;
      }
      $73 = HEAP32[$$pre$phiZ2D>>2]|0;
      $74 = ($73|0)==((1)|0);
      if ($74) {
       $$0313 = 0;$$0316 = 1;$$0321 = 1;
      } else {
       $75 = (__g_closure_is_void($73,$0)|0);
       $76 = ($75|0)==(0);
       if ($76) {
        $77 = HEAP32[$$pre$phiZ2D>>2]|0;
        $78 = (__g_closure_supports_invoke_va($77)|0);
        $79 = ($78|0)==(0);
        if ($79) {
         $$0313 = 0;$$0316 = 0;$$0321 = 1;
        } else {
         $80 = HEAP32[$$pre$phiZ2D>>2]|0;
         $81 = HEAP32[$20>>2]|0;
         $82 = $81 >>> 19;
         $83 = $82 & 1;
         $84 = (($83) + 1)|0;
         $$0313 = $80;$$0316 = 1;$$0321 = $84;
        }
       } else {
        $$0313 = 0;$$0316 = 1;$$0321 = 1;
       }
      }
      $85 = ($86|0)==(0|0);
      L37: do {
       if ($85) {
        $87 = ($$0316|0)!=(0);
        $$0310$lcssa = 0;$$1314$lcssa = $$0313;$$1322$lcssa = $$0321;$115 = $87;
        label = 38;
       } else {
        $88 = ((($86)) + 4|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = ($$0316|0)!=(0);
        $91 = ($89|0)!=(0|0);
        $92 = $90 & $91;
        if ($92) {
         $$0310401$us = 0;$$0312400$us = $89;$$1314399$us = $$0313;$$1322398$us = $$0321;
         while(1) {
          $93 = ((($$0312400$us)) + 24|0);
          $94 = HEAP32[$93>>2]|0;
          $95 = $94 & 65535;
          $96 = ($95|0)==(0);
          if ($96) {
           $97 = ((($$0312400$us)) + 12|0);
           $98 = HEAP32[$97>>2]|0;
           $99 = ($98|0)==(0);
           $100 = ($98|0)==($2|0);
           $or$cond330$us = $99 | $100;
           if ($or$cond330$us) {
            $101 = ($$1314399$us|0)==(0|0);
            if (!($101)) {
             $$0310354 = $$0310401$us;$$1314359 = $$1314399$us;$$1317338344 = 0;$$1322364 = $$1322398$us;
             label = 41;
             break L37;
            }
            $102 = ((($$0312400$us)) + 28|0);
            $103 = HEAP32[$102>>2]|0;
            $104 = (__g_closure_supports_invoke_va($103)|0);
            $105 = ($104|0)==(0);
            if ($105) {
             break L21;
            }
            $106 = HEAP32[$102>>2]|0;
            $107 = HEAP32[$93>>2]|0;
            $108 = $107 >>> 16;
            $109 = $108 & 1;
            $110 = (($109) + 1)|0;
            $$1311$us = $$0312400$us;$$2315$us = $106;$$2323$us = $110;
           } else {
            $$1311$us = $$0310401$us;$$2315$us = $$1314399$us;$$2323$us = $$1322398$us;
           }
          } else {
           $$1311$us = $$0310401$us;$$2315$us = $$1314399$us;$$2323$us = $$1322398$us;
          }
          $111 = ((($$0312400$us)) + 4|0);
          $112 = HEAP32[$111>>2]|0;
          $113 = ($112|0)==(0|0);
          if ($113) {
           $$0310$lcssa = $$1311$us;$$1314$lcssa = $$2315$us;$$1322$lcssa = $$2323$us;$115 = $90;
           label = 38;
           break;
          } else {
           $$0310401$us = $$1311$us;$$0312400$us = $112;$$1314399$us = $$2315$us;$$1322398$us = $$2323$us;
          }
         }
        } else {
         $$0310$lcssa = 0;$$1314$lcssa = $$0313;$$1322$lcssa = $$0321;$115 = $90;
         label = 38;
        }
       }
      } while(0);
      do {
       if ((label|0) == 38) {
        $114 = ($$1314$lcssa|0)==(0|0);
        $or$cond = $115 & $114;
        if (!($or$cond)) {
         if ($114) {
          $$0310356 = $$0310$lcssa;$$1314361 = 0;$$1322366 = $$1322$lcssa;$$2318 = $$0316;$434 = 0;
          label = 42;
          break;
         } else {
          $$0310354 = $$0310$lcssa;$$1314359 = $$1314$lcssa;$$1317338344 = $$0316;$$1322364 = $$1322$lcssa;
          label = 41;
          break;
         }
        }
        $116 = ((($12)) + 20|0);
        $117 = HEAP32[$116>>2]|0;
        $118 = ($117|0)==(4);
        if ($118) {
         STACKTOP = sp;return;
        } else {
         $$0310355 = $$0310$lcssa;$$1314360 = 0;$$1322365 = $$1322$lcssa;$$pre$phi424Z2D = $116;$433 = 0;
        }
       }
      } while(0);
      if ((label|0) == 41) {
       $119 = HEAP32[$20>>2]|0;
       $120 = $119 & 16;
       $121 = ($120|0)==(0);
       if ($121) {
        $$0310356 = $$0310354;$$1314361 = $$1314359;$$1322366 = $$1322364;$$2318 = $$1317338344;$434 = 1;
        label = 42;
       } else {
        break;
       }
      }
      if ((label|0) == 42) {
       $122 = ($$2318|0)==(0);
       if ($122) {
        break;
       }
       $$pre423 = ((($12)) + 20|0);
       $$0310355 = $$0310356;$$1314360 = $$1314361;$$1322365 = $$1322366;$$pre$phi424Z2D = $$pre423;$433 = $434;
      }
      ;HEAP32[$5>>2]=HEAP32[146352>>2]|0;HEAP32[$5+4>>2]=HEAP32[146352+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[146352+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[146352+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[146352+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[146352+20>>2]|0;
      $123 = HEAP32[$0>>2]|0;
      $124 = HEAP32[$123>>2]|0;
      ;HEAP32[$6>>2]=HEAP32[146352>>2]|0;HEAP32[$6+4>>2]=HEAP32[146352+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[146352+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[146352+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[146352+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[146352+20>>2]|0;
      $125 = HEAP32[$$pre$phi424Z2D>>2]|0;
      $126 = $125 & -2;
      $127 = HEAP32[$12>>2]|0;
      $128 = ((($12)) + 28|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = ($126|0)==(4);
      $131 = ($129|0)==(0|0);
      $$332 = $131 ? $6 : $5;
      $$0324 = $130 ? 0 : $$332;
      $132 = ((($4)) + 4|0);
      HEAP32[$132>>2] = $0;
      $133 = ((($4)) + 8|0);
      HEAP32[$133>>2] = $127;
      $134 = ((($4)) + 12|0);
      HEAP32[$134>>2] = $2;
      $135 = ((($4)) + 16|0);
      HEAP32[$135>>2] = $$1322365;
      $136 = ((($4)) + 20|0);
      HEAP32[$136>>2] = 1;
      $137 = ((($4)) + 24|0);
      HEAP32[$137>>2] = $124;
      $138 = HEAP32[37123]|0;
      HEAP32[$4>>2] = $138;
      HEAP32[37123] = $4;
      $139 = ($$0310355|0)!=(0|0);
      if ($139) {
       $140 = ((($$0310355)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = (($141) + 1)|0;
       HEAP32[$140>>2] = $142;
      }
      $143 = ($126|0)!=(4);
      if ($143) {
       (_g_value_init($6,$126)|0);
      }
      $144 = ($129|0)!=(0|0);
      if ($144) {
       (_g_value_init($5,$126)|0);
      }
      if ($433) {
       (_g_object_ref($0)|0);
       $145 = HEAP32[$20>>2]|0;
       $146 = $145 >>> 10;
       $147 = $146 & 255;
       $148 = ((($12)) + 16|0);
       $149 = HEAP32[$148>>2]|0;
       __g_closure_invoke_va($$1314360,$$0324,$0,$3,$147,$149);
       if (!($131)) {
        $150 = HEAP32[$129>>2]|0;
        $151 = ((($129)) + 4|0);
        $152 = HEAP32[$151>>2]|0;
        (ftCall_iiiii($150|0,$133,$6,$5,$152)|0);
        (_g_value_reset($5)|0);
       }
      }
      HEAP32[$137>>2] = 4;
      $$014$i = HEAP32[37123]|0;
      $153 = ($$014$i|0)==(0|0);
      if ($153) {
       _g_assertion_message_expr(0,125723,813,125950,0);
       // unreachable;
      }
      $$01115$i = 0;$$016$i = $$014$i;
      while(1) {
       $154 = ($$016$i|0)==($4|0);
       if ($154) {
        break;
       }
       $$0$i335 = HEAP32[$$016$i>>2]|0;
       $157 = ($$0$i335|0)==(0|0);
       if ($157) {
        label = 58;
        break;
       } else {
        $$01115$i$phi = $$016$i;$$016$i = $$0$i335;$$01115$i = $$01115$i$phi;
       }
      }
      if ((label|0) == 58) {
       _g_assertion_message_expr(0,125723,813,125950,0);
       // unreachable;
      }
      $155 = ($$01115$i|0)==(0|0);
      $156 = HEAP32[$4>>2]|0;
      $$sink = $155 ? 148492 : $$01115$i;
      HEAP32[$$sink>>2] = $156;
      if ($139) {
       _handler_unref_R($127,$0,$$0310355);
      }
      if ($144) {
       _g_value_unset($5);
      }
      do {
       if ($143) {
        $158 = HEAP32[$20>>2]|0;
        $159 = $158 & 261120;
        $160 = ($159|0)==(0);
        L91: do {
         if (!($160)) {
          $161 = ((($12)) + 16|0);
          $$0394 = 0;
          L93: while(1) {
           $162 = HEAP32[$161>>2]|0;
           $163 = (($162) + ($$0394<<2)|0);
           $164 = HEAP32[$163>>2]|0;
           $165 = $164 & -2;
           $166 = (_g_type_value_table_peek($165)|0);
           $167 = ((($166)) + 16|0);
           $168 = HEAP32[$167>>2]|0;
           $169 = HEAP8[$168>>0]|0;
           $170 = ($169<<24>>24)==(0);
           L95: do {
            if (!($170)) {
             $$0325390 = $168;$173 = $169;
             while(1) {
              $171 = ((($$0325390)) + 1|0);
              $172 = $173 << 24 >> 24;
              switch ($172|0) {
              case 105:  {
               $arglist_current = HEAP32[$3>>2]|0;
               $174 = $arglist_current;
               $175 = ((0) + 4|0);
               $expanded72 = $175;
               $expanded = (($expanded72) - 1)|0;
               $176 = (($174) + ($expanded))|0;
               $177 = ((0) + 4|0);
               $expanded76 = $177;
               $expanded75 = (($expanded76) - 1)|0;
               $expanded74 = $expanded75 ^ -1;
               $178 = $176 & $expanded74;
               $179 = $178;
               $arglist_next = ((($179)) + 4|0);
               HEAP32[$3>>2] = $arglist_next;
               break;
              }
              case 108:  {
               $arglist_current4 = HEAP32[$3>>2]|0;
               $180 = $arglist_current4;
               $181 = ((0) + 4|0);
               $expanded79 = $181;
               $expanded78 = (($expanded79) - 1)|0;
               $182 = (($180) + ($expanded78))|0;
               $183 = ((0) + 4|0);
               $expanded83 = $183;
               $expanded82 = (($expanded83) - 1)|0;
               $expanded81 = $expanded82 ^ -1;
               $184 = $182 & $expanded81;
               $185 = $184;
               $arglist_next5 = ((($185)) + 4|0);
               HEAP32[$3>>2] = $arglist_next5;
               break;
              }
              case 113:  {
               $arglist_current7 = HEAP32[$3>>2]|0;
               $186 = $arglist_current7;
               $187 = ((0) + 8|0);
               $expanded86 = $187;
               $expanded85 = (($expanded86) - 1)|0;
               $188 = (($186) + ($expanded85))|0;
               $189 = ((0) + 8|0);
               $expanded90 = $189;
               $expanded89 = (($expanded90) - 1)|0;
               $expanded88 = $expanded89 ^ -1;
               $190 = $188 & $expanded88;
               $191 = $190;
               $arglist_next8 = ((($191)) + 8|0);
               HEAP32[$3>>2] = $arglist_next8;
               break;
              }
              case 100:  {
               $arglist_current10 = HEAP32[$3>>2]|0;
               $192 = $arglist_current10;
               $193 = ((0) + 8|0);
               $expanded93 = $193;
               $expanded92 = (($expanded93) - 1)|0;
               $194 = (($192) + ($expanded92))|0;
               $195 = ((0) + 8|0);
               $expanded97 = $195;
               $expanded96 = (($expanded97) - 1)|0;
               $expanded95 = $expanded96 ^ -1;
               $196 = $194 & $expanded95;
               $197 = $196;
               $arglist_next11 = ((($197)) + 8|0);
               HEAP32[$3>>2] = $arglist_next11;
               break;
              }
              case 112:  {
               $arglist_current13 = HEAP32[$3>>2]|0;
               $198 = $arglist_current13;
               $199 = ((0) + 4|0);
               $expanded100 = $199;
               $expanded99 = (($expanded100) - 1)|0;
               $200 = (($198) + ($expanded99))|0;
               $201 = ((0) + 4|0);
               $expanded104 = $201;
               $expanded103 = (($expanded104) - 1)|0;
               $expanded102 = $expanded103 ^ -1;
               $202 = $200 & $expanded102;
               $203 = $202;
               $arglist_next14 = ((($203)) + 4|0);
               HEAP32[$3>>2] = $arglist_next14;
               break;
              }
              default: {
               break L93;
              }
              }
              $204 = HEAP8[$171>>0]|0;
              $205 = ($204<<24>>24)==(0);
              if ($205) {
               break L95;
              } else {
               $$0325390 = $171;$173 = $204;
              }
             }
            }
           } while(0);
           $206 = (($$0394) + 1)|0;
           $207 = HEAP32[$20>>2]|0;
           $208 = $207 >>> 10;
           $209 = $208 & 255;
           $210 = ($206>>>0)<($209>>>0);
           if ($210) {
            $$0394 = $206;
           } else {
            break L91;
           }
          }
          _g_assertion_message_expr(0,125723,3331,125963,0);
          // unreachable;
         }
        } while(0);
        $211 = $125 << 27;
        $212 = $211 & 134217728;
        $213 = HEAP32[$6>>2]|0;
        $214 = (_g_type_value_table_peek($213)|0);
        $215 = ((($214)) + 24|0);
        $216 = HEAP32[$215>>2]|0;
        dest=$7; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
        $217 = HEAP8[$216>>0]|0;
        $218 = ($217<<24>>24)==(0);
        L109: do {
         if ($218) {
          $$0327$lcssa = 0;
         } else {
          $$0326385 = $216;$$0327384 = 0;$223 = $217;
          L111: while(1) {
           $219 = (($$0327384) + 1)|0;
           $220 = (($7) + ($$0327384<<3)|0);
           $221 = ((($$0326385)) + 1|0);
           $222 = $223 << 24 >> 24;
           switch ($222|0) {
           case 105:  {
            $arglist_current16 = HEAP32[$3>>2]|0;
            $224 = $arglist_current16;
            $225 = ((0) + 4|0);
            $expanded107 = $225;
            $expanded106 = (($expanded107) - 1)|0;
            $226 = (($224) + ($expanded106))|0;
            $227 = ((0) + 4|0);
            $expanded111 = $227;
            $expanded110 = (($expanded111) - 1)|0;
            $expanded109 = $expanded110 ^ -1;
            $228 = $226 & $expanded109;
            $229 = $228;
            $230 = HEAP32[$229>>2]|0;
            $arglist_next17 = ((($229)) + 4|0);
            HEAP32[$3>>2] = $arglist_next17;
            HEAP32[$220>>2] = $230;
            break;
           }
           case 108:  {
            $arglist_current19 = HEAP32[$3>>2]|0;
            $231 = $arglist_current19;
            $232 = ((0) + 4|0);
            $expanded114 = $232;
            $expanded113 = (($expanded114) - 1)|0;
            $233 = (($231) + ($expanded113))|0;
            $234 = ((0) + 4|0);
            $expanded118 = $234;
            $expanded117 = (($expanded118) - 1)|0;
            $expanded116 = $expanded117 ^ -1;
            $235 = $233 & $expanded116;
            $236 = $235;
            $237 = HEAP32[$236>>2]|0;
            $arglist_next20 = ((($236)) + 4|0);
            HEAP32[$3>>2] = $arglist_next20;
            HEAP32[$220>>2] = $237;
            break;
           }
           case 113:  {
            $arglist_current22 = HEAP32[$3>>2]|0;
            $238 = $arglist_current22;
            $239 = ((0) + 8|0);
            $expanded121 = $239;
            $expanded120 = (($expanded121) - 1)|0;
            $240 = (($238) + ($expanded120))|0;
            $241 = ((0) + 8|0);
            $expanded125 = $241;
            $expanded124 = (($expanded125) - 1)|0;
            $expanded123 = $expanded124 ^ -1;
            $242 = $240 & $expanded123;
            $243 = $242;
            $244 = $243;
            $245 = $244;
            $246 = HEAP32[$245>>2]|0;
            $247 = (($244) + 4)|0;
            $248 = $247;
            $249 = HEAP32[$248>>2]|0;
            $arglist_next23 = ((($243)) + 8|0);
            HEAP32[$3>>2] = $arglist_next23;
            $250 = $220;
            $251 = $250;
            HEAP32[$251>>2] = $246;
            $252 = (($250) + 4)|0;
            $253 = $252;
            HEAP32[$253>>2] = $249;
            break;
           }
           case 100:  {
            $arglist_current25 = HEAP32[$3>>2]|0;
            $254 = $arglist_current25;
            $255 = ((0) + 8|0);
            $expanded128 = $255;
            $expanded127 = (($expanded128) - 1)|0;
            $256 = (($254) + ($expanded127))|0;
            $257 = ((0) + 8|0);
            $expanded132 = $257;
            $expanded131 = (($expanded132) - 1)|0;
            $expanded130 = $expanded131 ^ -1;
            $258 = $256 & $expanded130;
            $259 = $258;
            $260 = +HEAPF64[$259>>3];
            $arglist_next26 = ((($259)) + 8|0);
            HEAP32[$3>>2] = $arglist_next26;
            HEAPF64[$220>>3] = $260;
            break;
           }
           case 112:  {
            $arglist_current28 = HEAP32[$3>>2]|0;
            $261 = $arglist_current28;
            $262 = ((0) + 4|0);
            $expanded135 = $262;
            $expanded134 = (($expanded135) - 1)|0;
            $263 = (($261) + ($expanded134))|0;
            $264 = ((0) + 4|0);
            $expanded139 = $264;
            $expanded138 = (($expanded139) - 1)|0;
            $expanded137 = $expanded138 ^ -1;
            $265 = $263 & $expanded137;
            $266 = $265;
            $267 = HEAP32[$266>>2]|0;
            $arglist_next29 = ((($266)) + 4|0);
            HEAP32[$3>>2] = $arglist_next29;
            HEAP32[$220>>2] = $267;
            break;
           }
           default: {
            break L111;
           }
           }
           $268 = HEAP8[$221>>0]|0;
           $269 = ($268<<24>>24)==(0);
           if ($269) {
            $$0327$lcssa = $219;
            break L109;
           } else {
            $$0326385 = $221;$$0327384 = $219;$223 = $268;
           }
          }
          _g_assertion_message_expr(0,125723,3337,125963,0);
          // unreachable;
         }
        } while(0);
        $270 = ((($214)) + 28|0);
        $271 = HEAP32[$270>>2]|0;
        $272 = (ftCall_iiiii($271|0,$6,$$0327$lcssa,$7,$212)|0);
        $273 = ($272|0)==(0|0);
        if ($273) {
         _g_value_unset($6);
         break;
        } else {
         HEAP32[$vararg_buffer30>>2] = 125984;
         $vararg_ptr33 = ((($vararg_buffer30)) + 4|0);
         HEAP32[$vararg_ptr33>>2] = $272;
         _g_log(0,16,130726,$vararg_buffer30);
         _g_free($272);
         break;
        }
       }
      } while(0);
      if ($433) {
       _g_object_unref($0);
      }
      STACKTOP = sp;return;
     }
    } while(0);
    $274 = HEAP32[$20>>2]|0;
    $275 = $274 >>> 10;
    $276 = $275 & 255;
    $277 = ((($12)) + 20|0);
    $278 = HEAP32[$277>>2]|0;
    $279 = ($276*24)|0;
    $280 = (($279) + 24)|0;
    $281 = (($276) + 1)|0;
    $$alloca_mul = ($281*24)|0;
    $282 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
    _memset(($282|0),0,($280|0))|0;
    $283 = ((($282)) + 24|0);
    $284 = HEAP32[$20>>2]|0;
    $285 = $284 & 261120;
    $286 = ($285|0)==(0);
    L131: do {
     if (!($286)) {
      $287 = ((($12)) + 16|0);
      $$1381 = 0;
      L133: while(1) {
       $288 = HEAP32[$287>>2]|0;
       $289 = (($288) + ($$1381<<2)|0);
       $290 = HEAP32[$289>>2]|0;
       $291 = $290 & -2;
       $292 = (($283) + (($$1381*24)|0)|0);
       $293 = $290 << 27;
       $294 = $293 & 134217728;
       $295 = (_g_type_value_table_peek($291)|0);
       $296 = ((($295)) + 16|0);
       $297 = HEAP32[$296>>2]|0;
       dest=$4; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
       HEAP32[$292>>2] = $291;
       $298 = HEAP8[$297>>0]|0;
       $299 = ($298<<24>>24)==(0);
       L135: do {
        if ($299) {
         $$0329$lcssa = 0;
        } else {
         $$0328376 = $297;$$0329375 = 0;$304 = $298;
         while(1) {
          $300 = (($$0329375) + 1)|0;
          $301 = (($4) + ($$0329375<<3)|0);
          $302 = ((($$0328376)) + 1|0);
          $303 = $304 << 24 >> 24;
          switch ($303|0) {
          case 105:  {
           $arglist_current35 = HEAP32[$3>>2]|0;
           $305 = $arglist_current35;
           $306 = ((0) + 4|0);
           $expanded142 = $306;
           $expanded141 = (($expanded142) - 1)|0;
           $307 = (($305) + ($expanded141))|0;
           $308 = ((0) + 4|0);
           $expanded146 = $308;
           $expanded145 = (($expanded146) - 1)|0;
           $expanded144 = $expanded145 ^ -1;
           $309 = $307 & $expanded144;
           $310 = $309;
           $311 = HEAP32[$310>>2]|0;
           $arglist_next36 = ((($310)) + 4|0);
           HEAP32[$3>>2] = $arglist_next36;
           HEAP32[$301>>2] = $311;
           break;
          }
          case 108:  {
           $arglist_current38 = HEAP32[$3>>2]|0;
           $312 = $arglist_current38;
           $313 = ((0) + 4|0);
           $expanded149 = $313;
           $expanded148 = (($expanded149) - 1)|0;
           $314 = (($312) + ($expanded148))|0;
           $315 = ((0) + 4|0);
           $expanded153 = $315;
           $expanded152 = (($expanded153) - 1)|0;
           $expanded151 = $expanded152 ^ -1;
           $316 = $314 & $expanded151;
           $317 = $316;
           $318 = HEAP32[$317>>2]|0;
           $arglist_next39 = ((($317)) + 4|0);
           HEAP32[$3>>2] = $arglist_next39;
           HEAP32[$301>>2] = $318;
           break;
          }
          case 113:  {
           $arglist_current41 = HEAP32[$3>>2]|0;
           $319 = $arglist_current41;
           $320 = ((0) + 8|0);
           $expanded156 = $320;
           $expanded155 = (($expanded156) - 1)|0;
           $321 = (($319) + ($expanded155))|0;
           $322 = ((0) + 8|0);
           $expanded160 = $322;
           $expanded159 = (($expanded160) - 1)|0;
           $expanded158 = $expanded159 ^ -1;
           $323 = $321 & $expanded158;
           $324 = $323;
           $325 = $324;
           $326 = $325;
           $327 = HEAP32[$326>>2]|0;
           $328 = (($325) + 4)|0;
           $329 = $328;
           $330 = HEAP32[$329>>2]|0;
           $arglist_next42 = ((($324)) + 8|0);
           HEAP32[$3>>2] = $arglist_next42;
           $331 = $301;
           $332 = $331;
           HEAP32[$332>>2] = $327;
           $333 = (($331) + 4)|0;
           $334 = $333;
           HEAP32[$334>>2] = $330;
           break;
          }
          case 100:  {
           $arglist_current44 = HEAP32[$3>>2]|0;
           $335 = $arglist_current44;
           $336 = ((0) + 8|0);
           $expanded163 = $336;
           $expanded162 = (($expanded163) - 1)|0;
           $337 = (($335) + ($expanded162))|0;
           $338 = ((0) + 8|0);
           $expanded167 = $338;
           $expanded166 = (($expanded167) - 1)|0;
           $expanded165 = $expanded166 ^ -1;
           $339 = $337 & $expanded165;
           $340 = $339;
           $341 = +HEAPF64[$340>>3];
           $arglist_next45 = ((($340)) + 8|0);
           HEAP32[$3>>2] = $arglist_next45;
           HEAPF64[$301>>3] = $341;
           break;
          }
          case 112:  {
           $arglist_current47 = HEAP32[$3>>2]|0;
           $342 = $arglist_current47;
           $343 = ((0) + 4|0);
           $expanded170 = $343;
           $expanded169 = (($expanded170) - 1)|0;
           $344 = (($342) + ($expanded169))|0;
           $345 = ((0) + 4|0);
           $expanded174 = $345;
           $expanded173 = (($expanded174) - 1)|0;
           $expanded172 = $expanded173 ^ -1;
           $346 = $344 & $expanded172;
           $347 = $346;
           $348 = HEAP32[$347>>2]|0;
           $arglist_next48 = ((($347)) + 4|0);
           HEAP32[$3>>2] = $arglist_next48;
           HEAP32[$301>>2] = $348;
           break;
          }
          default: {
           label = 102;
           break L133;
          }
          }
          $349 = HEAP8[$302>>0]|0;
          $350 = ($349<<24>>24)==(0);
          if ($350) {
           $$0329$lcssa = $300;
           break L135;
          } else {
           $$0328376 = $302;$$0329375 = $300;$304 = $349;
          }
         }
        }
       } while(0);
       $351 = ((($295)) + 20|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = (ftCall_iiiii($352|0,$292,$$0329$lcssa,$4,$294)|0);
       $354 = ($353|0)==(0|0);
       if (!($354)) {
        break;
       }
       $359 = (($$1381) + 1)|0;
       $360 = HEAP32[$20>>2]|0;
       $361 = $360 >>> 10;
       $362 = $361 & 255;
       $363 = ($359>>>0)<($362>>>0);
       if ($363) {
        $$1381 = $359;
       } else {
        break L131;
       }
      }
      if ((label|0) == 102) {
       _g_assertion_message_expr(0,125723,3375,125963,0);
       // unreachable;
      }
      HEAP32[$vararg_buffer49>>2] = 126022;
      $vararg_ptr52 = ((($vararg_buffer49)) + 4|0);
      HEAP32[$vararg_ptr52>>2] = $353;
      _g_log(0,16,130726,$vararg_buffer49);
      _g_free($353);
      $355 = ($$1381|0)==(0);
      if ($355) {
       STACKTOP = sp;return;
      }
      $$2367 = $$1381;
      while(1) {
       $356 = (($$2367) + -1)|0;
       $357 = (($282) + (($$2367*24)|0)|0);
       _g_value_unset($357);
       $358 = ($356|0)==(0);
       if ($358) {
        break;
       } else {
        $$2367 = $356;
       }
      }
      STACKTOP = sp;return;
     }
    } while(0);
    HEAP32[$282>>2] = 0;
    _g_value_init_from_instance($282,$0);
    $364 = ($278|0)==(4);
    if (!($364)) {
     ;HEAP32[$4>>2]=HEAP32[146352>>2]|0;HEAP32[$4+4>>2]=HEAP32[146352+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[146352+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[146352+12>>2]|0;HEAP32[$4+16>>2]=HEAP32[146352+16>>2]|0;HEAP32[$4+20>>2]=HEAP32[146352+20>>2]|0;
     $365 = $278 & -2;
     (_g_value_init($4,$365)|0);
     $366 = $278 << 27;
     $367 = $366 & 134217728;
     $368 = HEAP32[$4>>2]|0;
     $369 = (_g_type_value_table_peek($368)|0);
     $370 = ((($369)) + 24|0);
     $371 = HEAP32[$370>>2]|0;
     dest=$5; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
     $372 = HEAP8[$371>>0]|0;
     $373 = ($372<<24>>24)==(0);
     L160: do {
      if ($373) {
       $$0319$lcssa = 0;
      } else {
       $$0319371 = 0;$$0320370 = $371;$378 = $372;
       L162: while(1) {
        $374 = (($$0319371) + 1)|0;
        $375 = (($5) + ($$0319371<<3)|0);
        $376 = ((($$0320370)) + 1|0);
        $377 = $378 << 24 >> 24;
        switch ($377|0) {
        case 105:  {
         $arglist_current54 = HEAP32[$3>>2]|0;
         $379 = $arglist_current54;
         $380 = ((0) + 4|0);
         $expanded177 = $380;
         $expanded176 = (($expanded177) - 1)|0;
         $381 = (($379) + ($expanded176))|0;
         $382 = ((0) + 4|0);
         $expanded181 = $382;
         $expanded180 = (($expanded181) - 1)|0;
         $expanded179 = $expanded180 ^ -1;
         $383 = $381 & $expanded179;
         $384 = $383;
         $385 = HEAP32[$384>>2]|0;
         $arglist_next55 = ((($384)) + 4|0);
         HEAP32[$3>>2] = $arglist_next55;
         HEAP32[$375>>2] = $385;
         break;
        }
        case 108:  {
         $arglist_current57 = HEAP32[$3>>2]|0;
         $386 = $arglist_current57;
         $387 = ((0) + 4|0);
         $expanded184 = $387;
         $expanded183 = (($expanded184) - 1)|0;
         $388 = (($386) + ($expanded183))|0;
         $389 = ((0) + 4|0);
         $expanded188 = $389;
         $expanded187 = (($expanded188) - 1)|0;
         $expanded186 = $expanded187 ^ -1;
         $390 = $388 & $expanded186;
         $391 = $390;
         $392 = HEAP32[$391>>2]|0;
         $arglist_next58 = ((($391)) + 4|0);
         HEAP32[$3>>2] = $arglist_next58;
         HEAP32[$375>>2] = $392;
         break;
        }
        case 113:  {
         $arglist_current60 = HEAP32[$3>>2]|0;
         $393 = $arglist_current60;
         $394 = ((0) + 8|0);
         $expanded191 = $394;
         $expanded190 = (($expanded191) - 1)|0;
         $395 = (($393) + ($expanded190))|0;
         $396 = ((0) + 8|0);
         $expanded195 = $396;
         $expanded194 = (($expanded195) - 1)|0;
         $expanded193 = $expanded194 ^ -1;
         $397 = $395 & $expanded193;
         $398 = $397;
         $399 = $398;
         $400 = $399;
         $401 = HEAP32[$400>>2]|0;
         $402 = (($399) + 4)|0;
         $403 = $402;
         $404 = HEAP32[$403>>2]|0;
         $arglist_next61 = ((($398)) + 8|0);
         HEAP32[$3>>2] = $arglist_next61;
         $405 = $375;
         $406 = $405;
         HEAP32[$406>>2] = $401;
         $407 = (($405) + 4)|0;
         $408 = $407;
         HEAP32[$408>>2] = $404;
         break;
        }
        case 100:  {
         $arglist_current63 = HEAP32[$3>>2]|0;
         $409 = $arglist_current63;
         $410 = ((0) + 8|0);
         $expanded198 = $410;
         $expanded197 = (($expanded198) - 1)|0;
         $411 = (($409) + ($expanded197))|0;
         $412 = ((0) + 8|0);
         $expanded202 = $412;
         $expanded201 = (($expanded202) - 1)|0;
         $expanded200 = $expanded201 ^ -1;
         $413 = $411 & $expanded200;
         $414 = $413;
         $415 = +HEAPF64[$414>>3];
         $arglist_next64 = ((($414)) + 8|0);
         HEAP32[$3>>2] = $arglist_next64;
         HEAPF64[$375>>3] = $415;
         break;
        }
        case 112:  {
         $arglist_current66 = HEAP32[$3>>2]|0;
         $416 = $arglist_current66;
         $417 = ((0) + 4|0);
         $expanded205 = $417;
         $expanded204 = (($expanded205) - 1)|0;
         $418 = (($416) + ($expanded204))|0;
         $419 = ((0) + 4|0);
         $expanded209 = $419;
         $expanded208 = (($expanded209) - 1)|0;
         $expanded207 = $expanded208 ^ -1;
         $420 = $418 & $expanded207;
         $421 = $420;
         $422 = HEAP32[$421>>2]|0;
         $arglist_next67 = ((($421)) + 4|0);
         HEAP32[$3>>2] = $arglist_next67;
         HEAP32[$375>>2] = $422;
         break;
        }
        default: {
         break L162;
        }
        }
        $423 = HEAP8[$376>>0]|0;
        $424 = ($423<<24>>24)==(0);
        if ($424) {
         $$0319$lcssa = $374;
         break L160;
        } else {
         $$0319371 = $374;$$0320370 = $376;$378 = $423;
        }
       }
       _g_assertion_message_expr(0,125723,3409,125963,0);
       // unreachable;
      }
     } while(0);
     $425 = ((($369)) + 28|0);
     $426 = HEAP32[$425>>2]|0;
     $427 = (ftCall_iiiii($426|0,$4,$$0319$lcssa,$5,$367)|0);
     $428 = ($427|0)==(0|0);
     if ($428) {
      _g_value_unset($4);
     } else {
      HEAP32[$vararg_buffer68>>2] = 126060;
      $vararg_ptr71 = ((($vararg_buffer68)) + 4|0);
      HEAP32[$vararg_ptr71>>2] = $427;
      _g_log(0,16,130726,$vararg_buffer68);
      _g_free($427);
     }
    }
    $429 = ($276|0)==(0);
    if (!($429)) {
     $$4368 = 0;
     while(1) {
      $430 = (($283) + (($$4368*24)|0)|0);
      _g_value_unset($430);
      $431 = (($$4368) + 1)|0;
      $exitcond = ($431|0)==($276|0);
      if ($exitcond) {
       break;
      } else {
       $$4368 = $431;
      }
     }
    }
    _g_value_unset($282);
    STACKTOP = sp;return;
   }
  }
 }
 HEAP32[$vararg_buffer>>2] = 125912;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $0;
 _g_log(0,16,125675,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_signal_emit($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 _g_signal_emit_valist($0,$1,$2,$3);
 STACKTOP = sp;return;
}
function _g_type_create_instance($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i48 = 0, $$0$i$i51 = 0, $$0$i47 = 0, $$0$i53 = 0, $$0$i55 = 0, $$033$i$i = 0, $$036$i$i = 0, $$060 = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lobit = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i$i = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if (!($7)) {
  $8 = ((($$0$i)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 262144;
  $11 = ($10|0)==(0);
  if (!($11)) {
   $22 = $9 & 524288;
   $23 = ($22|0)==(0);
   L8: do {
    if ($23) {
     if ($1) {
      $24 = $0 & -4;
      $25 = $24;
      $$0$i$i48 = $25;
     } else {
      $26 = $0 >>> 2;
      $27 = (143760 + ($26<<2)|0);
      $28 = HEAP32[$27>>2]|0;
      $$0$i$i48 = $28;
     }
     $29 = ($$0$i$i48|0)==(0|0);
     if (!($29)) {
      $30 = HEAP32[37126]|0;
      $$idx$i = ((($$0$i$i48)) + 28|0);
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $31 = ($30|0)!=(0);
      $32 = ($$idx$val$i|0)!=(0|0);
      $or$cond$i$i = $31 & $32;
      if ($or$cond$i$i) {
       $33 = HEAP32[$$idx$val$i>>2]|0;
       $34 = ($33|0)==(0);
       if (!($34)) {
        $35 = ((($$idx$val$i)) + 4|0);
        $36 = HEAP32[$35>>2]|0;
        $37 = ((($36)) + -8|0);
        $$033$i$i = $37;$$036$i$i = $33;
        while(1) {
         $38 = (($$036$i$i) + 1)|0;
         $39 = $38 >>> 1;
         $40 = (($$033$i$i) + ($39<<3)|0);
         $41 = HEAP32[$40>>2]|0;
         $42 = ($41|0)==($30|0);
         if ($42) {
          break;
         }
         $43 = ($41>>>0)<($30>>>0);
         $44 = (($$036$i$i) - ($39))|0;
         $45 = (($39) + -1)|0;
         $$137$i$i = $43 ? $44 : $45;
         $$134$i$i = $43 ? $40 : $$033$i$i;
         $46 = ($$137$i$i|0)==(0);
         if ($46) {
          break L8;
         } else {
          $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
         }
        }
        $47 = (((($$033$i$i) + ($39<<3)|0)) + 4|0);
        $48 = HEAP32[$47>>2]|0;
        $$lobit = $48 & 16;
        $49 = ($$lobit|0)==(0);
        if (!($49)) {
         $50 = ($0|0)==(0);
         if ($50) {
          $$0$i53 = 126108;
         } else {
          if ($1) {
           $51 = $0 & -4;
           $52 = $51;
           $$0$i$i51 = $52;
          } else {
           $53 = $0 >>> 2;
           $54 = (143760 + ($53<<2)|0);
           $55 = HEAP32[$54>>2]|0;
           $$0$i$i51 = $55;
          }
          $56 = ($$0$i$i51|0)==(0|0);
          if ($56) {
           $$0$i53 = 126098;
          } else {
           $57 = ((($$0$i$i51)) + 24|0);
           $58 = HEAP32[$57>>2]|0;
           $59 = (_g_quark_to_string($58)|0);
           $$0$i53 = $59;
          }
         }
         HEAP32[$vararg_buffer1>>2] = $$0$i53;
         _g_log(0,4,126218,$vararg_buffer1);
         while(1) {
         }
        }
       }
      }
     }
    }
   } while(0);
   $60 = (_g_type_class_ref($0)|0);
   $61 = ((($$0$i)) + 20|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($62)) + 38|0);
   $64 = HEAP16[$63>>1]|0;
   $65 = $64&65535;
   $66 = HEAP32[$61>>2]|0;
   $67 = ((($66)) + 36|0);
   $68 = HEAP16[$67>>1]|0;
   $69 = $68&65535;
   $70 = (($69) + ($65))|0;
   $71 = (_g_slice_alloc0($70)|0);
   $72 = (($71) + ($65)|0);
   $73 = HEAP32[$8>>2]|0;
   $74 = $73 & 255;
   $75 = ($74|0)==(0);
   if (!($75)) {
    $$060 = $74;
    while(1) {
     $76 = (((($$0$i)) + 40|0) + ($$060<<2)|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = ($77>>>0)>(1020);
     if ($78) {
      $79 = $77 & -4;
      $80 = $79;
      $$0$i55 = $80;
     } else {
      $81 = $77 >>> 2;
      $82 = (143760 + ($81<<2)|0);
      $83 = HEAP32[$82>>2]|0;
      $$0$i55 = $83;
     }
     $84 = ((($$0$i55)) + 20|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ((($85)) + 44|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)==(0|0);
     if (!($88)) {
      $89 = HEAP32[$84>>2]|0;
      $90 = ((($89)) + 32|0);
      $91 = HEAP32[$90>>2]|0;
      HEAP32[$72>>2] = $91;
      $92 = HEAP32[$84>>2]|0;
      $93 = ((($92)) + 44|0);
      $94 = HEAP32[$93>>2]|0;
      ftCall_vii($94|0,$72,$60);
     }
     $95 = (($$060) + -1)|0;
     $96 = ($95|0)==(0);
     if ($96) {
      break;
     } else {
      $$060 = $95;
     }
    }
   }
   HEAP32[$72>>2] = $60;
   $97 = HEAP32[$61>>2]|0;
   $98 = ((($97)) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = ($99|0)==(0|0);
   if ($100) {
    STACKTOP = sp;return ($72|0);
   }
   $101 = HEAP32[$61>>2]|0;
   $102 = ((($101)) + 44|0);
   $103 = HEAP32[$102>>2]|0;
   ftCall_vii($103|0,$72,$60);
   STACKTOP = sp;return ($72|0);
  }
 }
 $12 = ($0|0)==(0);
 if ($12) {
  $$0$i47 = 126108;
 } else {
  if ($1) {
   $13 = $0 & -4;
   $14 = $13;
   $$0$i$i = $14;
  } else {
   $15 = $0 >>> 2;
   $16 = (143760 + ($15<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   $$0$i$i = $17;
  }
  $18 = ($$0$i$i|0)==(0|0);
  if ($18) {
   $$0$i47 = 126098;
  } else {
   $19 = ((($$0$i$i)) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (_g_quark_to_string($20)|0);
   $$0$i47 = $21;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i47;
 _g_log(0,4,126149,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_type_class_ref($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i38 = 0, $$0$i144$i = 0, $$0$i146$i = 0, $$0$i148$i = 0, $$0$i150$i = 0, $$0$i150$us$i = 0, $$0$i37 = 0, $$0131192$i = 0, $$0134176$i = 0, $$0135$lcssa$i = 0, $$0135$lcssa$us$i = 0, $$0135168$i = 0, $$0135168$us$i = 0, $$0137191$i = 0, $$0138180$i = 0, $$0138180$us$i = 0, $$0187$i = 0;
 var $$034 = 0, $$1$i = 0, $$1136$lcssa$i = 0, $$1136158$i = 0, $$1139$lcssa$i = 0, $$1139$lcssa$us$i = 0, $$1139167$i = 0, $$1139167$us$i = 0, $$2165$i = 0, $$3$lcssa$i = 0, $$3157$i = 0, $$sink = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if (!($7)) {
  $8 = ((($$0$i)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 131072;
  $11 = ($10|0)==(0);
  if (!($11)) {
   $22 = HEAP32[$$0$i>>2]|0;
   $23 = ($22|0)==(0);
   L8: do {
    if ($23) {
     $$034 = 0;
    } else {
     $28 = $22;
     while(1) {
      $26 = HEAP32[$$0$i>>2]|0;
      $27 = ($26|0)==($28|0);
      if ($27) {
       break;
      }
      $24 = HEAP32[$$0$i>>2]|0;
      $25 = ($24|0)==(0);
      if ($25) {
       $$034 = 0;
       break L8;
      } else {
       $28 = $24;
      }
     }
     $29 = (($28) + 1)|0;
     HEAP32[$$0$i>>2] = $29;
     $30 = ((($$0$i)) + 20|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ((($31)) + 8|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = ($33|0)==(5);
     if ($34) {
      $35 = HEAP32[$30>>2]|0;
      $36 = ((($35)) + 32|0);
      $37 = HEAP32[$36>>2]|0;
      $$0 = $37;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$034 = 1;
     }
    }
   } while(0);
   $38 = ((($$0$i)) + 44|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($39|0)==(0);
   if ($40) {
    $86 = 0;
   } else {
    $41 = (_g_type_class_ref($39)|0);
    $86 = $41;
   }
   $42 = ($$034|0)==(0);
   if ($42) {
    _type_data_ref_Wm($$0$i);
   }
   $43 = ((($$0$i)) + 20|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ((($44)) + 32|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==(0|0);
   if ($47) {
    $48 = HEAP32[$8>>2]|0;
    $49 = $48 & 131072;
    $50 = ($49|0)==(0);
    if ($50) {
     _g_assertion_message_expr(0,126118,2234,126341,126360);
     // unreachable;
    }
    $51 = HEAP32[$43>>2]|0;
    $52 = ($51|0)==(0|0);
    if ($52) {
     _g_assertion_message_expr(0,126118,2234,126341,126360);
     // unreachable;
    }
    $53 = HEAP32[$43>>2]|0;
    $54 = ((($53)) + 4|0);
    $55 = HEAP16[$54>>1]|0;
    $56 = ($55<<16>>16)==(0);
    if ($56) {
     _g_assertion_message_expr(0,126118,2234,126341,126360);
     // unreachable;
    }
    $57 = HEAP32[$43>>2]|0;
    $58 = ((($57)) + 32|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = ($59|0)==(0|0);
    if (!($60)) {
     _g_assertion_message_expr(0,126118,2234,126341,126360);
     // unreachable;
    }
    $61 = HEAP32[$43>>2]|0;
    $62 = ((($61)) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ($63|0)==(0);
    if (!($64)) {
     _g_assertion_message_expr(0,126118,2234,126341,126360);
     // unreachable;
    }
    $65 = HEAP32[$43>>2]|0;
    $66 = ((($65)) + 6|0);
    $67 = HEAP16[$66>>1]|0;
    $68 = ($67<<16>>16)==(0);
    $69 = HEAP32[$43>>2]|0;
    $70 = ((($69)) + 4|0);
    $71 = HEAP16[$70>>1]|0;
    $72 = $71&65535;
    if ($68) {
     $$sink = $72;
    } else {
     $73 = (($72) + 7)|0;
     $74 = $73 & 131064;
     $75 = HEAP32[$43>>2]|0;
     $76 = ((($75)) + 6|0);
     $77 = HEAP16[$76>>1]|0;
     $78 = $77&65535;
     $79 = (($74) + ($78))|0;
     $$sink = $79;
    }
    $80 = (_g_malloc0($$sink)|0);
    $81 = HEAP32[$43>>2]|0;
    $82 = ((($81)) + 32|0);
    HEAP32[$82>>2] = $80;
    $83 = HEAP32[$43>>2]|0;
    $84 = ((($83)) + 8|0);
    HEAP32[$84>>2] = 1;
    $85 = ($86|0)==(0|0);
    if (!($85)) {
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87>>>0)>(1020);
     if ($88) {
      $89 = $87 & -4;
      $90 = $89;
      $$0$i$i38 = $90;
     } else {
      $91 = $87 >>> 2;
      $92 = (143760 + ($91<<2)|0);
      $93 = HEAP32[$92>>2]|0;
      $$0$i$i38 = $93;
     }
     $94 = ((($$0$i$i38)) + 20|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ((($95)) + 4|0);
     $97 = HEAP16[$96>>1]|0;
     $98 = $97&65535;
     _memcpy(($80|0),($86|0),($98|0))|0;
     $99 = HEAP32[$43>>2]|0;
     $100 = ((($99)) + 4|0);
     $101 = HEAP16[$100>>1]|0;
     $102 = $101&65535;
     $103 = (($102) + 7)|0;
     $104 = $103 & 131064;
     $105 = (($80) + ($104)|0);
     $106 = HEAP32[$94>>2]|0;
     $107 = ((($106)) + 4|0);
     $108 = HEAP16[$107>>1]|0;
     $109 = $108&65535;
     $110 = (($109) + 7)|0;
     $111 = $110 & 131064;
     $112 = (($86) + ($111)|0);
     $113 = HEAP32[$94>>2]|0;
     $114 = ((($113)) + 6|0);
     $115 = HEAP16[$114>>1]|0;
     $116 = $115&65535;
     _memcpy(($105|0),($112|0),($116|0))|0;
     $117 = HEAP32[$8>>2]|0;
     $118 = $117 & 262144;
     $119 = ($118|0)==(0);
     if (!($119)) {
      $120 = HEAP32[$94>>2]|0;
      $121 = ((($120)) + 38|0);
      $122 = HEAP16[$121>>1]|0;
      $123 = HEAP32[$43>>2]|0;
      $124 = ((($123)) + 38|0);
      HEAP16[$124>>1] = $122;
     }
    }
    $125 = ((($$0$i)) + 40|0);
    $126 = HEAP32[$125>>2]|0;
    HEAP32[$80>>2] = $126;
    $$0131192$i = 0;$$0137191$i = $$0$i;
    while(1) {
     $127 = ((($$0137191$i)) + 20|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($128)) + 12|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($130|0)==(0|0);
     if ($131) {
      $$1$i = $$0131192$i;
     } else {
      $132 = HEAP32[$127>>2]|0;
      $133 = ((($132)) + 12|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = (_g_slist_prepend($$0131192$i,$134)|0);
      $$1$i = $135;
     }
     $136 = ((($$0137191$i)) + 44|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($137>>>0)>(1020);
     if ($138) {
      $139 = $137 & -4;
      $140 = $139;
      $$0$i144$i = $140;
     } else {
      $141 = $137 >>> 2;
      $142 = (143760 + ($141<<2)|0);
      $143 = HEAP32[$142>>2]|0;
      $$0$i144$i = $143;
     }
     $144 = ($$0$i144$i|0)==(0|0);
     if ($144) {
      break;
     } else {
      $$0131192$i = $$1$i;$$0137191$i = $$0$i144$i;
     }
    }
    $145 = ($$1$i|0)==(0|0);
    if (!($145)) {
     $$0187$i = $$1$i;
     while(1) {
      $146 = HEAP32[$$0187$i>>2]|0;
      ftCall_vi($146|0,$80);
      $147 = ((($$0187$i)) + 4|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==(0|0);
      if ($149) {
       break;
      } else {
       $$0187$i = $148;
      }
     }
    }
    _g_slist_free($$1$i);
    $150 = HEAP32[$43>>2]|0;
    $151 = ((($150)) + 8|0);
    HEAP32[$151>>2] = 2;
    $152 = HEAP32[$38>>2]|0;
    $153 = ($152>>>0)>(1020);
    if ($153) {
     $154 = $152 & -4;
     $155 = $154;
     $$0$i148$i = $155;
    } else {
     $156 = $152 >>> 2;
     $157 = (143760 + ($156<<2)|0);
     $158 = HEAP32[$157>>2]|0;
     $$0$i148$i = $158;
    }
    $159 = ((($$0$i)) + 32|0);
    $160 = HEAP32[$159>>2]|0;
    $161 = ($160|0)==(0|0);
    L70: do {
     if (!($161)) {
      $162 = ((($$0$i148$i)) + 32|0);
      $163 = ($$0$i148$i|0)==(0|0);
      if ($163) {
       $$0138180$us$i = 0;$165 = $160;
       while(1) {
        $164 = ((($165)) + -4|0);
        $166 = HEAP32[$164>>2]|0;
        $167 = (($166) + -4)|0;
        $168 = (($167>>>0) / 12)&-1;
        $169 = ($$0138180$us$i>>>0)<($168>>>0);
        if (!($169)) {
         break L70;
        }
        $170 = ((($165)) + 4|0);
        $171 = (($170) + (($$0138180$us$i*12)|0)|0);
        $$0135168$us$i = $171;$$1139167$us$i = $$0138180$us$i;
        while(1) {
         $172 = ((($$0135168$us$i)) + 8|0);
         $173 = HEAP32[$172>>2]|0;
         $174 = ($173|0)==(4);
         if (!($174)) {
          $$0135$lcssa$us$i = $$0135168$us$i;$$1139$lcssa$us$i = $$1139167$us$i;
          break;
         }
         $189 = ((($$0135168$us$i)) + 12|0);
         $190 = (($$1139167$us$i) + 1)|0;
         $191 = ($190>>>0)<($168>>>0);
         if ($191) {
          $$0135168$us$i = $189;$$1139167$us$i = $190;
         } else {
          $$0135$lcssa$us$i = $189;$$1139$lcssa$us$i = $190;
          break;
         }
        }
        $175 = ($$1139$lcssa$us$i|0)==($168|0);
        if ($175) {
         break L70;
        }
        $176 = HEAP32[$$0135$lcssa$us$i>>2]|0;
        $177 = ($176>>>0)>(1020);
        if ($177) {
         $181 = $176 & -4;
         $182 = $181;
         $$0$i150$us$i = $182;
        } else {
         $178 = $176 >>> 2;
         $179 = (143760 + ($178<<2)|0);
         $180 = HEAP32[$179>>2]|0;
         $$0$i150$us$i = $180;
        }
        $183 = (_type_iface_vtable_base_init_Wm($$0$i150$us$i,$$0$i)|0);
        $184 = ($183|0)==(0);
        if ($184) {
         break;
        }
        $186 = (($$1139$lcssa$us$i) + 1)|0;
        $187 = HEAP32[$159>>2]|0;
        $188 = ($187|0)==(0|0);
        if ($188) {
         break L70;
        } else {
         $$0138180$us$i = $186;$165 = $187;
        }
       }
       $185 = HEAP32[$162>>2]|0;
       _g_assertion_message_expr(0,126118,2315,126341,126500);
       // unreachable;
      }
      $$0138180$i = 0;$193 = $160;
      while(1) {
       $192 = ((($193)) + -4|0);
       $194 = HEAP32[$192>>2]|0;
       $195 = (($194) + -4)|0;
       $196 = (($195>>>0) / 12)&-1;
       $197 = ($$0138180$i>>>0)<($196>>>0);
       if (!($197)) {
        break L70;
       }
       $198 = ((($193)) + 4|0);
       $199 = (($198) + (($$0138180$i*12)|0)|0);
       $$0135168$i = $199;$$1139167$i = $$0138180$i;
       while(1) {
        $200 = ((($$0135168$i)) + 8|0);
        $201 = HEAP32[$200>>2]|0;
        $202 = ($201|0)==(4);
        if (!($202)) {
         $$0135$lcssa$i = $$0135168$i;$$1139$lcssa$i = $$1139167$i;
         break;
        }
        $203 = ((($$0135168$i)) + 12|0);
        $204 = (($$1139167$i) + 1)|0;
        $205 = ($204>>>0)<($196>>>0);
        if ($205) {
         $$0135168$i = $203;$$1139167$i = $204;
        } else {
         $$0135$lcssa$i = $203;$$1139$lcssa$i = $204;
         break;
        }
       }
       $206 = ($$1139$lcssa$i|0)==($196|0);
       if ($206) {
        break L70;
       }
       $207 = HEAP32[$$0135$lcssa$i>>2]|0;
       $208 = ($207>>>0)>(1020);
       if ($208) {
        $209 = $207 & -4;
        $210 = $209;
        $$0$i150$i = $210;
       } else {
        $211 = $207 >>> 2;
        $212 = (143760 + ($211<<2)|0);
        $213 = HEAP32[$212>>2]|0;
        $$0$i150$i = $213;
       }
       $214 = (_type_iface_vtable_base_init_Wm($$0$i150$i,$$0$i)|0);
       $215 = ($214|0)==(0);
       if ($215) {
        $216 = HEAP32[$162>>2]|0;
        $217 = ($216|0)==(0|0);
        L103: do {
         if (!($217)) {
          $218 = ((($216)) + -4|0);
          $219 = HEAP32[$218>>2]|0;
          $220 = (($219) + -4)|0;
          $221 = ($220>>>0)>(11);
          if (!($221)) {
           break;
          }
          $222 = ((($216)) + 4|0);
          $223 = HEAP32[$$0135$lcssa$i>>2]|0;
          $224 = (($220>>>0) / 12)&-1;
          $$0134176$i = 0;
          while(1) {
           $225 = (($222) + (($$0134176$i*12)|0)|0);
           $226 = HEAP32[$225>>2]|0;
           $227 = ($226|0)==($223|0);
           if ($227) {
            break;
           }
           $232 = (($$0134176$i) + 1)|0;
           $233 = ($232>>>0)<($224>>>0);
           if ($233) {
            $$0134176$i = $232;
           } else {
            break L103;
           }
          }
          $228 = (((($222) + (($$0134176$i*12)|0)|0)) + 4|0);
          $229 = HEAP32[$228>>2]|0;
          $230 = ((($$0135$lcssa$i)) + 4|0);
          HEAP32[$230>>2] = $229;
          $231 = ((($$0135$lcssa$i)) + 8|0);
          HEAP32[$231>>2] = 5;
         }
        } while(0);
        $234 = ((($$0135$lcssa$i)) + 4|0);
        $235 = HEAP32[$234>>2]|0;
        $236 = ($235|0)==(0|0);
        if ($236) {
         break;
        }
       }
       $237 = (($$1139$lcssa$i) + 1)|0;
       $238 = HEAP32[$159>>2]|0;
       $239 = ($238|0)==(0|0);
       if ($239) {
        break L70;
       } else {
        $$0138180$i = $237;$193 = $238;
       }
      }
      _g_assertion_message_expr(0,126118,2329,126341,126514);
      // unreachable;
     }
    } while(0);
    $240 = HEAP32[$43>>2]|0;
    $241 = ((($240)) + 8|0);
    HEAP32[$241>>2] = 3;
    $242 = HEAP32[$43>>2]|0;
    $243 = ((($242)) + 20|0);
    $244 = HEAP32[$243>>2]|0;
    $245 = ($244|0)==(0|0);
    if (!($245)) {
     $246 = HEAP32[$43>>2]|0;
     $247 = ((($246)) + 20|0);
     $248 = HEAP32[$247>>2]|0;
     $249 = HEAP32[$43>>2]|0;
     $250 = ((($249)) + 28|0);
     $251 = HEAP32[$250>>2]|0;
     ftCall_vii($248|0,$80,$251);
    }
    $252 = HEAP32[$43>>2]|0;
    $253 = ((($252)) + 8|0);
    HEAP32[$253>>2] = 4;
    $254 = HEAP32[$159>>2]|0;
    $255 = ($254|0)==(0|0);
    L117: do {
     if (!($255)) {
      $$2165$i = 0;$257 = $254;
      while(1) {
       $256 = ((($257)) + 4|0);
       $258 = (($256) + (($$2165$i*12)|0)|0);
       $259 = ((($257)) + -4|0);
       $260 = HEAP32[$259>>2]|0;
       $261 = (($260) + -4)|0;
       $262 = (($261>>>0) / 12)&-1;
       $263 = ($$2165$i>>>0)<($262>>>0);
       L121: do {
        if ($263) {
         $$1136158$i = $258;$$3157$i = $$2165$i;
         while(1) {
          $264 = ((($$1136158$i)) + 8|0);
          $265 = HEAP32[$264>>2]|0;
          $266 = ($265|0)==(5);
          if (!($266)) {
           $$1136$lcssa$i = $$1136158$i;$$3$lcssa$i = $$3157$i;
           break L121;
          }
          $267 = ((($$1136158$i)) + 12|0);
          $268 = (($$3157$i) + 1)|0;
          $269 = ($268>>>0)<($262>>>0);
          if ($269) {
           $$1136158$i = $267;$$3157$i = $268;
          } else {
           $$1136$lcssa$i = $267;$$3$lcssa$i = $268;
           break;
          }
         }
        } else {
         $$1136$lcssa$i = $258;$$3$lcssa$i = $$2165$i;
        }
       } while(0);
       $270 = ($$3$lcssa$i|0)==($262|0);
       if ($270) {
        break L117;
       }
       $271 = HEAP32[$$1136$lcssa$i>>2]|0;
       $272 = ($271>>>0)>(1020);
       if ($272) {
        $273 = $271 & -4;
        $274 = $273;
        $$0$i146$i = $274;
       } else {
        $275 = $271 >>> 2;
        $276 = (143760 + ($275<<2)|0);
        $277 = HEAP32[$276>>2]|0;
        $$0$i146$i = $277;
       }
       _type_iface_vtable_iface_init_Wm($$0$i146$i,$$0$i);
       $278 = (($$3$lcssa$i) + 1)|0;
       $279 = HEAP32[$159>>2]|0;
       $280 = ($279|0)==(0|0);
       if ($280) {
        break;
       } else {
        $$2165$i = $278;$257 = $279;
       }
      }
     }
    } while(0);
    $281 = HEAP32[$43>>2]|0;
    $282 = ((($281)) + 8|0);
    HEAP32[$282>>2] = 5;
   }
   $283 = ($86|0)==(0|0);
   if (!($283)) {
    _g_type_class_unref($86);
   }
   $284 = HEAP32[$43>>2]|0;
   $285 = ((($284)) + 32|0);
   $286 = HEAP32[$285>>2]|0;
   $$0 = $286;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $12 = ($0|0)==(0);
 if ($12) {
  $$0$i37 = 126108;
 } else {
  if ($1) {
   $13 = $0 & -4;
   $14 = $13;
   $$0$i$i = $14;
  } else {
   $15 = $0 >>> 2;
   $16 = (143760 + ($15<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   $$0$i$i = $17;
  }
  $18 = ($$0$i$i|0)==(0|0);
  if ($18) {
   $$0$i37 = 126098;
  } else {
   $19 = ((($$0$i$i)) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (_g_quark_to_string($20)|0);
   $$0$i37 = $21;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i37;
 _g_log(0,16,126284,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _type_data_ref_Wm($0) {
 $0 = $0|0;
 var $$ = 0, $$0$i = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer15 = 0, $vararg_buffer4 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr14 = 0;
 var $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 96|0;
 $2 = sp + 64|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $48 = HEAP32[$0>>2]|0;
  $49 = ($48|0)==(0);
  if ($49) {
   _g_assertion_message_expr(0,126118,1346,127103,127141);
   // unreachable;
  }
  _g_atomic_int_inc($0);
  STACKTOP = sp;return;
 }
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7>>>0)>(1020);
 if ($8) {
  $9 = $7 & -4;
  $10 = $9;
  $$0$i = $10;
 } else {
  $11 = $7 >>> 2;
  $12 = (143760 + ($11<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0$i = $13;
 }
 $14 = ((($0)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  _g_assertion_message_expr(0,126118,1320,127103,127120);
  // unreachable;
 }
 $17 = ($$0$i|0)==(0|0);
 do {
  if ($17) {
   $25 = $15;
  } else {
   _type_data_ref_Wm($$0$i);
   $18 = HEAP32[$3>>2]|0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    $$pre = HEAP32[$14>>2]|0;
    $25 = $$pre;
    break;
   }
   $20 = HEAP32[$14>>2]|0;
   $21 = ((($0)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (_g_quark_to_string($22)|0);
   $24 = ($20|0)==(0|0);
   if ($24) {
    HEAP32[$vararg_buffer4>>2] = 126866;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 1792;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $23;
    _g_log(0,4,126882,$vararg_buffer4);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer>>2] = 126866;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $20;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1792;
    $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
    HEAP32[$vararg_ptr3>>2] = $23;
    _g_log(0,4,126853,$vararg_buffer);
    while(1) {
    }
   }
  }
 } while(0);
 dest=$1; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
 _g_type_plugin_use($25);
 $26 = HEAP32[$14>>2]|0;
 $27 = ((($0)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 _g_type_plugin_complete_type_info($26,$28,$1,$2);
 $29 = HEAP32[$3>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $36 = ((($0)) + 12|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $37 & 255;
  $39 = (((($0)) + 40|0) + ($38<<2)|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($0)) + 24|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (_g_quark_to_string($42)|0);
  (_check_type_info_I($$0$i,$40,$43,$1)|0);
  $44 = HEAP32[$41>>2]|0;
  $45 = (_g_quark_to_string($44)|0);
  $46 = (_check_value_table_I($45,$2)|0);
  $47 = ($46|0)==(0);
  $$ = $47 ? 0 : $2;
  _type_data_make_W($0,$1,$$);
  STACKTOP = sp;return;
 }
 $31 = HEAP32[$14>>2]|0;
 $32 = ((($0)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (_g_quark_to_string($33)|0);
 $35 = ($31|0)==(0|0);
 if ($35) {
  HEAP32[$vararg_buffer15>>2] = 126866;
  $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
  HEAP32[$vararg_ptr18>>2] = 1824;
  $vararg_ptr19 = ((($vararg_buffer15)) + 8|0);
  HEAP32[$vararg_ptr19>>2] = $34;
  _g_log(0,4,126882,$vararg_buffer15);
  while(1) {
  }
 } else {
  HEAP32[$vararg_buffer9>>2] = 126866;
  $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
  HEAP32[$vararg_ptr12>>2] = $31;
  $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
  HEAP32[$vararg_ptr13>>2] = 1824;
  $vararg_ptr14 = ((($vararg_buffer9)) + 12|0);
  HEAP32[$vararg_ptr14>>2] = $34;
  _g_log(0,4,126853,$vararg_buffer9);
  while(1) {
  }
 }
}
function _type_iface_vtable_base_init_Wm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i50 = 0, $$0$i49 = 0, $$014$i$i = 0, $$033$i$i$i = 0, $$036$i$i$i = 0, $$040$i$i = 0, $$040$i$i52 = 0, $$134$i$i$i = 0, $$137$i$i$i = 0, $$idx$i$i = 0, $$idx$val$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i$i$i = 0, $spec$select$i$i = 0, $spec$select$i$i51 = 0, $vararg_buffer = 0, $vararg_buffer15 = 0, $vararg_buffer20 = 0, $vararg_buffer4 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0;
 var $vararg_ptr14 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr23 = 0, $vararg_ptr3 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer20 = sp + 64|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 72|0;
 $3 = ((($1)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 255;
 $8 = (((($0)) + 40|0) + ($7<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(8);
 if (!($10)) {
  _g_assertion_message_expr(0,126118,1806,126634,126659);
  // unreachable;
 }
 $11 = HEAP32[37125]|0;
 $$idx$i$i = ((($0)) + 28|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $12 = ($11|0)!=(0);
 $13 = ($$idx$val$i$i|0)!=(0|0);
 $or$cond$i$i$i = $12 & $13;
 if (!($or$cond$i$i$i)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $14 = HEAP32[$$idx$val$i$i>>2]|0;
 $15 = ($14|0)==(0);
 if ($15) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ((($$idx$val$i$i)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + -8|0);
 $$033$i$i$i = $18;$$036$i$i$i = $14;
 while(1) {
  $19 = (($$036$i$i$i) + 1)|0;
  $20 = $19 >>> 1;
  $21 = (($$033$i$i$i) + ($20<<3)|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==($11|0);
  if ($23) {
   break;
  }
  $24 = ($22>>>0)<($11>>>0);
  $25 = (($$036$i$i$i) - ($20))|0;
  $26 = (($20) + -1)|0;
  $$137$i$i$i = $24 ? $25 : $26;
  $$134$i$i$i = $24 ? $21 : $$033$i$i$i;
  $27 = ($$137$i$i$i|0)==(0);
  if ($27) {
   $$0 = 0;
   label = 70;
   break;
  } else {
   $$033$i$i$i = $$134$i$i$i;$$036$i$i$i = $$137$i$i$i;
  }
 }
 if ((label|0) == 70) {
  STACKTOP = sp;return ($$0|0);
 }
 $28 = (((($$033$i$i$i) + ($20<<3)|0)) + 4|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $$014$i$i = $29;
 while(1) {
  $31 = HEAP32[$$014$i$i>>2]|0;
  $32 = ($31|0)==($4|0);
  if ($32) {
   break;
  }
  $33 = ((($$014$i$i)) + 12|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($34|0)==(0|0);
  if ($35) {
   $$0 = 0;
   label = 70;
   break;
  } else {
   $$014$i$i = $34;
  }
 }
 if ((label|0) == 70) {
  STACKTOP = sp;return ($$0|0);
 }
 $36 = ((($$014$i$i)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if ($38) {
  $39 = ((($$014$i$i)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($40|0)==(0|0);
  if ($41) {
   _g_assertion_message_expr(0,126118,1825,126794,126829);
   // unreachable;
  }
  _type_data_ref_Wm($0);
  $42 = HEAP32[$36>>2]|0;
  $43 = ($42|0)==(0|0);
  if (!($43)) {
   $44 = ((($0)) + 4|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($0)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (_g_quark_to_string($47)|0);
   $49 = ($45|0)==(0|0);
   if ($49) {
    HEAP32[$vararg_buffer4>>2] = 126866;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 1728;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $48;
    _g_log(0,4,126882,$vararg_buffer4);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer>>2] = 126866;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $45;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1728;
    $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
    HEAP32[$vararg_ptr3>>2] = $48;
    _g_log(0,4,126853,$vararg_buffer);
    while(1) {
    }
   }
  }
  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
  $50 = HEAP32[$39>>2]|0;
  _g_type_plugin_use($50);
  $51 = HEAP32[$39>>2]|0;
  $52 = ((($0)) + 40|0);
  $53 = HEAP32[$52>>2]|0;
  _g_type_plugin_complete_interface_info($51,$4,$53,$2);
  $54 = HEAP32[$36>>2]|0;
  $55 = ($54|0)==(0|0);
  if (!($55)) {
   $56 = HEAP32[$39>>2]|0;
   $57 = ((($0)) + 24|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = (_g_quark_to_string($58)|0);
   $60 = ($56|0)==(0|0);
   if ($60) {
    HEAP32[$vararg_buffer15>>2] = 126866;
    $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
    HEAP32[$vararg_ptr18>>2] = 1760;
    $vararg_ptr19 = ((($vararg_buffer15)) + 8|0);
    HEAP32[$vararg_ptr19>>2] = $59;
    _g_log(0,4,126882,$vararg_buffer15);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer9>>2] = 126866;
    $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
    HEAP32[$vararg_ptr12>>2] = $56;
    $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
    HEAP32[$vararg_ptr13>>2] = 1760;
    $vararg_ptr14 = ((($vararg_buffer9)) + 12|0);
    HEAP32[$vararg_ptr14>>2] = $59;
    _g_log(0,4,126853,$vararg_buffer9);
    while(1) {
    }
   }
  }
  $61 = ((($2)) + 4|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($62|0)==(0|0);
  if ($63) {
   $64 = ((($2)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($65|0)==(0|0);
   if (!($66)) {
    label = 29;
   }
  } else {
   label = 29;
  }
  if ((label|0) == 29) {
   $67 = HEAP32[$2>>2]|0;
   $68 = ($67|0)==(0|0);
   if ($68) {
    $69 = ((($0)) + 24|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (_g_quark_to_string($70)|0);
    $72 = ($4|0)==(0);
    if ($72) {
     $$0$i$i$i = 126108;
    } else {
     $73 = ($4>>>0)>(1020);
     if ($73) {
      $74 = $4 & -4;
      $75 = $74;
      $$0$i$i$i$i = $75;
     } else {
      $76 = $4 >>> 2;
      $77 = (143760 + ($76<<2)|0);
      $78 = HEAP32[$77>>2]|0;
      $$0$i$i$i$i = $78;
     }
     $79 = ($$0$i$i$i$i|0)==(0|0);
     if ($79) {
      $$0$i$i$i = 126098;
     } else {
      $80 = ((($$0$i$i$i$i)) + 24|0);
      $81 = HEAP32[$80>>2]|0;
      $82 = (_g_quark_to_string($81)|0);
      $$0$i$i$i = $82;
     }
    }
    HEAP32[$vararg_buffer20>>2] = $71;
    $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);
    HEAP32[$vararg_ptr23>>2] = $$0$i$i$i;
    _g_log(0,16,126893,$vararg_buffer20);
   }
  }
  $83 = (_g_memdup($2,12)|0);
  HEAP32[$36>>2] = $83;
 }
 _type_iface_ensure_dflt_vtable_Wm($0);
 $84 = HEAP32[$5>>2]|0;
 $85 = $84 & 255;
 $86 = (((($0)) + 40|0) + ($85<<2)|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = ($87|0)==(8);
 if ($88) {
  $89 = ((($1)) + 32|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ($90|0)==(0|0);
  if (!($91)) {
   $92 = ((($0)) + 32|0);
   $93 = (_g_atomic_pointer_get($92)|0);
   $94 = ((($90)) + -4|0);
   $95 = ((($0)) + 40|0);
   $$0$i$i = $92;
   while(1) {
    $96 = HEAP32[$90>>2]|0;
    $97 = ($$0$i$i|0)==(0|0);
    if ($97) {
     $$040$i$i = 0;
    } else {
     $98 = ((($$0$i$i)) + -4|0);
     $99 = HEAP32[$98>>2]|0;
     $100 = ($96>>>0)<($99>>>0);
     if ($100) {
      $101 = (($$0$i$i) + ($96)|0);
      $102 = HEAP8[$101>>0]|0;
      $103 = ($102<<24>>24)==(0);
      if ($103) {
       $$040$i$i = 0;
      } else {
       $104 = $102&255;
       $105 = (($104) + -1)|0;
       $106 = HEAP32[$94>>2]|0;
       $107 = (($106) + -4)|0;
       $108 = (($107>>>0) / 12)&-1;
       $109 = ($105>>>0)<($108>>>0);
       $110 = (((($90)) + 4|0) + (($105*12)|0)|0);
       if ($109) {
        $111 = HEAP32[$110>>2]|0;
        $112 = HEAP32[$95>>2]|0;
        $113 = ($111|0)==($112|0);
        $spec$select$i$i = $113 ? $110 : 0;
        $$040$i$i = $spec$select$i$i;
       } else {
        $$040$i$i = 0;
       }
      }
     } else {
      $$040$i$i = 0;
     }
    }
    $114 = (_g_atomic_pointer_get($92)|0);
    $115 = ($$0$i$i|0)==($114|0);
    if ($115) {
     break;
    } else {
     $$0$i$i = $92;
    }
   }
   $118 = ((($0)) + 20|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($119|0)!=(0|0);
   $121 = ($$040$i$i|0)!=(0|0);
   $or$cond = $121 & $120;
   if (!($or$cond)) {
    _g_assertion_message_expr(0,126118,2113,126953,126984);
    // unreachable;
   }
   $122 = ((($$040$i$i)) + 4|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($123|0)==(0|0);
   if (!($124)) {
    _g_assertion_message_expr(0,126118,2113,126953,126984);
    // unreachable;
   }
   $125 = HEAP32[$36>>2]|0;
   $126 = ($125|0)==(0|0);
   if ($126) {
    _g_assertion_message_expr(0,126118,2113,126953,126984);
    // unreachable;
   }
   $127 = ((($$040$i$i)) + 8|0);
   HEAP32[$127>>2] = 4;
   $128 = ((($1)) + 44|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = ($129>>>0)>(1020);
   if ($130) {
    $131 = $129 & -4;
    $132 = $131;
    $$0$i49 = $132;
   } else {
    $133 = $129 >>> 2;
    $134 = (143760 + ($133<<2)|0);
    $135 = HEAP32[$134>>2]|0;
    $$0$i49 = $135;
   }
   $136 = ($$0$i49|0)==(0|0);
   if ($136) {
    label = 67;
   } else {
    $137 = HEAP32[$5>>2]|0;
    $138 = $137 & 255;
    $139 = (((($0)) + 40|0) + ($138<<2)|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ($140|0)==(8);
    if ($141) {
     $142 = ((($$0$i49)) + 32|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==(0|0);
     if ($144) {
      label = 67;
     } else {
      $145 = (_g_atomic_pointer_get($92)|0);
      $146 = ((($143)) + -4|0);
      $$0$i$i50 = $92;
      while(1) {
       $147 = HEAP32[$143>>2]|0;
       $148 = ($$0$i$i50|0)==(0|0);
       do {
        if ($148) {
         $$040$i$i52 = 0;
        } else {
         $149 = ((($$0$i$i50)) + -4|0);
         $150 = HEAP32[$149>>2]|0;
         $151 = ($147>>>0)<($150>>>0);
         if ($151) {
          $152 = (($$0$i$i50) + ($147)|0);
          $153 = HEAP8[$152>>0]|0;
          $154 = ($153<<24>>24)==(0);
          if ($154) {
           $$040$i$i52 = 0;
           break;
          }
          $155 = $153&255;
          $156 = (($155) + -1)|0;
          $157 = HEAP32[$146>>2]|0;
          $158 = (($157) + -4)|0;
          $159 = (($158>>>0) / 12)&-1;
          $160 = ($156>>>0)<($159>>>0);
          $161 = (((($143)) + 4|0) + (($156*12)|0)|0);
          if (!($160)) {
           $$040$i$i52 = 0;
           break;
          }
          $162 = HEAP32[$161>>2]|0;
          $163 = HEAP32[$95>>2]|0;
          $164 = ($162|0)==($163|0);
          $spec$select$i$i51 = $164 ? $161 : 0;
          $$040$i$i52 = $spec$select$i$i51;
         } else {
          $$040$i$i52 = 0;
         }
        }
       } while(0);
       $165 = (_g_atomic_pointer_get($92)|0);
       $166 = ($$0$i$i50|0)==($165|0);
       if ($166) {
        break;
       } else {
        $$0$i$i50 = $92;
       }
      }
      $167 = ($$040$i$i52|0)==(0|0);
      if ($167) {
       label = 67;
      } else {
       $168 = ((($$040$i$i52)) + 4|0);
       $169 = HEAP32[$168>>2]|0;
       $170 = HEAP32[$118>>2]|0;
       $171 = ((($170)) + 4|0);
       $172 = HEAP16[$171>>1]|0;
       $173 = $172&65535;
       $174 = (_g_memdup($169,$173)|0);
       $175 = ($174|0)==(0|0);
       if ($175) {
        label = 67;
       } else {
        $184 = $174;
       }
      }
     }
    } else {
     label = 67;
    }
   }
   if ((label|0) == 67) {
    $176 = HEAP32[$118>>2]|0;
    $177 = ((($176)) + 28|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = HEAP32[$118>>2]|0;
    $180 = ((($179)) + 4|0);
    $181 = HEAP16[$180>>1]|0;
    $182 = $181&65535;
    $183 = (_g_memdup($178,$182)|0);
    $184 = $183;
   }
   HEAP32[$122>>2] = $184;
   $185 = HEAP32[$95>>2]|0;
   HEAP32[$184>>2] = $185;
   $186 = HEAP32[$3>>2]|0;
   $187 = ((($184)) + 4|0);
   HEAP32[$187>>2] = $186;
   $188 = HEAP32[$118>>2]|0;
   $189 = ((($188)) + 8|0);
   $190 = HEAP32[$189>>2]|0;
   $191 = ($190|0)==(0|0);
   if ($191) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $192 = HEAP32[$118>>2]|0;
   $193 = ((($192)) + 8|0);
   $194 = HEAP32[$193>>2]|0;
   ftCall_vi($194|0,$184);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $116 = ((($0)) + 20|0);
 $117 = HEAP32[$116>>2]|0;
 _g_assertion_message_expr(0,126118,2113,126953,126984);
 // unreachable;
 return (0)|0;
}
function _type_iface_vtable_iface_init_Wm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i$ph = 0, $$0$lcssa$i = 0, $$014$i = 0, $$033$i$i = 0, $$036$i$i = 0, $$040$i$i = 0, $$049 = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$pr = 0, $$pre = 0, $$pre$phi55$phZ2D = 0, $$pre53 = 0, $$pre54 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond3 = 0, $spec$select$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 255;
 $5 = (((($0)) + 40|0) + ($4<<2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(8);
 if (!($7)) {
  _g_assertion_message_expr(0,126118,1806,126634,126659);
  // unreachable;
 }
 $8 = ((($1)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $$0$i$ph = 0;$$pre$phi55$phZ2D = $5;
 } else {
  $11 = ((($0)) + 32|0);
  $12 = (_g_atomic_pointer_get($11)|0);
  $13 = ((($9)) + -4|0);
  $14 = ((($0)) + 40|0);
  $$0$i$i = $11;
  while(1) {
   $15 = HEAP32[$9>>2]|0;
   $16 = ($$0$i$i|0)==(0|0);
   if ($16) {
    $$040$i$i = 0;
   } else {
    $17 = ((($$0$i$i)) + -4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($15>>>0)<($18>>>0);
    if ($19) {
     $20 = (($$0$i$i) + ($15)|0);
     $21 = HEAP8[$20>>0]|0;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $$040$i$i = 0;
     } else {
      $23 = $21&255;
      $24 = (($23) + -1)|0;
      $25 = HEAP32[$13>>2]|0;
      $26 = (($25) + -4)|0;
      $27 = (($26>>>0) / 12)&-1;
      $28 = ($24>>>0)<($27>>>0);
      $29 = (((($9)) + 4|0) + (($24*12)|0)|0);
      if ($28) {
       $30 = HEAP32[$29>>2]|0;
       $31 = HEAP32[$14>>2]|0;
       $32 = ($30|0)==($31|0);
       $spec$select$i$i = $32 ? $29 : 0;
       $$040$i$i = $spec$select$i$i;
      } else {
       $$040$i$i = 0;
      }
     }
    } else {
     $$040$i$i = 0;
    }
   }
   $33 = (_g_atomic_pointer_get($11)|0);
   $34 = ($$0$i$i|0)==($33|0);
   if ($34) {
    break;
   } else {
    $$0$i$i = $11;
   }
  }
  $$pre = HEAP32[$2>>2]|0;
  $$pre53 = $$pre & 255;
  $$pre54 = (((($0)) + 40|0) + ($$pre53<<2)|0);
  $$0$i$ph = $$040$i$i;$$pre$phi55$phZ2D = $$pre54;
 }
 $$pr = HEAP32[$$pre$phi55$phZ2D>>2]|0;
 $35 = ((($1)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($$pr|0)==(8);
 if (!($37)) {
  _g_assertion_message_expr(0,126118,1806,126634,126659);
  // unreachable;
 }
 $38 = HEAP32[37125]|0;
 $$idx$i = ((($0)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $39 = ($38|0)!=(0);
 $40 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i$i = $39 & $40;
 L19: do {
  if ($or$cond$i$i) {
   $41 = HEAP32[$$idx$val$i>>2]|0;
   $42 = ($41|0)==(0);
   if ($42) {
    $$0$lcssa$i = 0;
   } else {
    $43 = ((($$idx$val$i)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ((($44)) + -8|0);
    $$033$i$i = $45;$$036$i$i = $41;
    while(1) {
     $46 = (($$036$i$i) + 1)|0;
     $47 = $46 >>> 1;
     $48 = (($$033$i$i) + ($47<<3)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49|0)==($38|0);
     if ($50) {
      break;
     }
     $51 = ($49>>>0)<($38>>>0);
     $52 = (($$036$i$i) - ($47))|0;
     $53 = (($47) + -1)|0;
     $$137$i$i = $51 ? $52 : $53;
     $$134$i$i = $51 ? $48 : $$033$i$i;
     $54 = ($$137$i$i|0)==(0);
     if ($54) {
      $$0$lcssa$i = 0;
      break L19;
     } else {
      $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
     }
    }
    $55 = (((($$033$i$i) + ($47<<3)|0)) + 4|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = ($56|0)==(0|0);
    if ($57) {
     $$0$lcssa$i = 0;
    } else {
     $$014$i = $56;
     while(1) {
      $58 = HEAP32[$$014$i>>2]|0;
      $59 = ($58|0)==($36|0);
      if ($59) {
       $$0$lcssa$i = $$014$i;
       break L19;
      }
      $60 = ((($$014$i)) + 12|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $$0$lcssa$i = 0;
       break;
      } else {
       $$014$i = $61;
      }
     }
    }
   }
  } else {
   $$0$lcssa$i = 0;
  }
 } while(0);
 $63 = ((($0)) + 20|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)!=(0|0);
 $66 = ($$0$i$ph|0)!=(0|0);
 $or$cond = $66 & $65;
 $67 = ($$0$lcssa$i|0)!=(0|0);
 $or$cond3 = $67 & $or$cond;
 if (!($or$cond3)) {
  _g_assertion_message_expr(0,126118,2156,126681,126713);
  // unreachable;
 }
 $68 = ((($$0$lcssa$i)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)==(0|0);
 if ($70) {
  _g_assertion_message_expr(0,126118,2156,126681,126713);
  // unreachable;
 }
 $71 = ((($$0$i$ph)) + 8|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)==(4);
 if (!($73)) {
  _g_assertion_message_expr(0,126118,2157,126681,126762);
  // unreachable;
 }
 HEAP32[$71>>2] = 5;
 $74 = ((($$0$i$ph)) + 4|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = HEAP32[$69>>2]|0;
 $77 = ($76|0)==(0|0);
 if (!($77)) {
  $78 = ((($69)) + 8|0);
  $79 = HEAP32[$78>>2]|0;
  ftCall_vii($76|0,$75,$79);
 }
 $80 = HEAP32[37127]|0;
 $81 = ($80|0)==(0);
 if ($81) {
  return;
 }
 $$049 = 0;
 while(1) {
  $82 = HEAP32[37128]|0;
  $83 = (((($82) + ($$049<<3)|0)) + 4|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = (($82) + ($$049<<3)|0);
  $86 = HEAP32[$85>>2]|0;
  ftCall_vii($84|0,$86,$75);
  $87 = (($$049) + 1)|0;
  $88 = HEAP32[37127]|0;
  $89 = ($87>>>0)<($88>>>0);
  if ($89) {
   $$049 = $87;
  } else {
   break;
  }
 }
 return;
}
function _g_type_class_unref($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i10 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 131072;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = HEAP32[$$0$i>>2]|0;
   $14 = ($13|0)==(0);
   if (!($14)) {
    while(1) {
     $15 = HEAP32[$$0$i>>2]|0;
     $16 = ($15>>>0)<(2);
     if ($16) {
      break;
     }
     $23 = HEAP32[$$0$i>>2]|0;
     $24 = ($23|0)==($15|0);
     if ($24) {
      label = 12;
      break;
     }
    }
    if ((label|0) == 12) {
     $25 = (($15) + -1)|0;
     HEAP32[$$0$i>>2] = $25;
     STACKTOP = sp;return;
    }
    $17 = ((($$0$i)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0|0);
    if (!($19)) {
     STACKTOP = sp;return;
    }
    $20 = ((($$0$i)) + 24|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = (_g_quark_to_string($21)|0);
    HEAP32[$vararg_buffer>>2] = $22;
    _g_log(0,16,126536,$vararg_buffer);
    STACKTOP = sp;return;
   }
  }
 }
 $26 = ($1|0)==(0);
 if ($26) {
  $$0$i10 = 126108;
 } else {
  if ($2) {
   $27 = $1 & -4;
   $28 = $27;
   $$0$i$i = $28;
  } else {
   $29 = $1 >>> 2;
   $30 = (143760 + ($29<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $$0$i$i = $31;
  }
  $32 = ($$0$i$i|0)==(0|0);
  if ($32) {
   $$0$i10 = 126098;
  } else {
   $33 = ((($$0$i$i)) + 24|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (_g_quark_to_string($34)|0);
   $$0$i10 = $35;
  }
 }
 HEAP32[$vararg_buffer1>>2] = $$0$i10;
 _g_log(0,16,126576,$vararg_buffer1);
 STACKTOP = sp;return;
}
function _type_iface_ensure_dflt_vtable_Wm($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  _g_assertion_message_expr(0,126118,2065,127058,127091);
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ((($4)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP16[$9>>1]|0;
 $11 = $10&65535;
 $12 = (_g_malloc0($11)|0);
 $13 = HEAP32[$1>>2]|0;
 $14 = ((($13)) + 28|0);
 HEAP32[$14>>2] = $12;
 $15 = ((($0)) + 40|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ((($12)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = HEAP32[$1>>2]|0;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $22 = HEAP32[$1>>2]|0;
  $23 = ((($22)) + 16|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($24|0)==(0|0);
  if ($25) {
   return;
  }
 }
 $26 = HEAP32[$1>>2]|0;
 $27 = ((($26)) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$1>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  ftCall_vi($32|0,$12);
 }
 $33 = HEAP32[$1>>2]|0;
 $34 = ((($33)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($35|0)==(0|0);
 if ($36) {
  return;
 }
 $37 = HEAP32[$1>>2]|0;
 $38 = ((($37)) + 16|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = HEAP32[$1>>2]|0;
 $41 = ((($40)) + 24|0);
 $42 = HEAP32[$41>>2]|0;
 ftCall_vii($39|0,$12,$42);
 return;
}
function _check_type_info_I($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$0$i52 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $or$cond = 0, $or$cond51 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0;
 var $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer25 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr21 = 0, $vararg_ptr28 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer25 = sp + 64|0;
 $vararg_buffer22 = sp + 56|0;
 $vararg_buffer18 = sp + 48|0;
 $vararg_buffer15 = sp + 40|0;
 $vararg_buffer12 = sp + 32|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = ($1>>>0)>(1020);
 if ($4) {
  $5 = $1 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $1 >>> 2;
  $8 = (143760 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ((($$0$i)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 255;
 $13 = (((($$0$i)) + 40|0) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($$0$i)) + 40|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($14|0)==($16|0);
 do {
  if ($17) {
   $$0$i52 = $$0$i;
  } else {
   $18 = ($14>>>0)>(1020);
   if ($18) {
    $19 = $14 & -4;
    $20 = $19;
    $$0$i52 = $20;
    break;
   } else {
    $21 = $14 >>> 2;
    $22 = (143760 + ($21<<2)|0);
    $23 = HEAP32[$22>>2]|0;
    $$0$i52 = $23;
    break;
   }
  }
 } while(0);
 $24 = ($1|0)==(8);
 $25 = ($1>>>0)<(1021);
 $26 = $1 & 3;
 $27 = ($26|0)==(0);
 $or$cond51 = $25 & $27;
 if (!($or$cond51)) {
  _g_assertion_message_expr(0,126118,974,127584,127602);
  // unreachable;
 }
 $28 = ($$0$i52|0)==(0|0);
 $29 = ((($$0$i52)) + -4|0);
 $30 = $28 ? 0 : $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = $31 & 2;
 $33 = ($32|0)==(0);
 do {
  if ($33) {
   $34 = ((($3)) + 24|0);
   $35 = HEAP16[$34>>1]|0;
   $36 = ($35<<16>>16)==(0);
   if ($36) {
    $37 = ((($3)) + 26|0);
    $38 = HEAP16[$37>>1]|0;
    $39 = ($38<<16>>16)==(0);
    if ($39) {
     $40 = ((($3)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($41|0)==(0|0);
     if ($42) {
      break;
     }
    }
   }
   $43 = ($0|0)==(0|0);
   if ($43) {
    HEAP32[$vararg_buffer2>>2] = $2;
    _g_log(0,16,127735,$vararg_buffer2);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $44 = ((($0)) + 24|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (_g_quark_to_string($45)|0);
    HEAP32[$vararg_buffer>>2] = $2;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $46;
    _g_log(0,16,127661,$vararg_buffer);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $47 = $31 & 1;
 $48 = ($47|0)!=(0);
 $or$cond = $24 | $48;
 do {
  if (!($or$cond)) {
   $49 = ((($3)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)==(0|0);
   if ($51) {
    $52 = ((($3)) + 16|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==(0|0);
    if ($54) {
     $55 = ((($3)) + 20|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56|0)==(0|0);
     if ($57) {
      $58 = HEAP16[$3>>1]|0;
      $59 = ($58<<16>>16)==(0);
      if ($59) {
       $60 = ((($3)) + 4|0);
       $61 = HEAP32[$60>>2]|0;
       $62 = ($61|0)==(0|0);
       if ($62) {
        $63 = ((($3)) + 8|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = ($64|0)==(0|0);
        if ($65) {
         break;
        }
       }
      }
     }
    }
   }
   $66 = ($0|0)==(0|0);
   if ($66) {
    HEAP32[$vararg_buffer9>>2] = $2;
    _g_log(0,16,127865,$vararg_buffer9);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $67 = ((($0)) + 24|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (_g_quark_to_string($68)|0);
    HEAP32[$vararg_buffer5>>2] = $2;
    $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
    HEAP32[$vararg_ptr8>>2] = $69;
    _g_log(0,16,127793,$vararg_buffer5);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ($24) {
  $70 = HEAP16[$3>>1]|0;
  $71 = ($70&65535)<(8);
  if ($71) {
   HEAP32[$vararg_buffer12>>2] = $2;
   _g_log(0,16,127921,$vararg_buffer12);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $72 = ($47|0)==(0);
 if (!($72)) {
  $73 = HEAP16[$3>>1]|0;
  $74 = ($73&65535)<(4);
  if ($74) {
   HEAP32[$vararg_buffer15>>2] = $2;
   _g_log(0,16,127998,$vararg_buffer15);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $75 = ($0|0)==(0|0);
  if (!($75)) {
   $76 = ((($0)) + 20|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($77)) + 4|0);
   $79 = HEAP16[$78>>1]|0;
   $80 = ($73&65535)<($79&65535);
   if ($80) {
    $81 = ((($0)) + 24|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = (_g_quark_to_string($82)|0);
    HEAP32[$vararg_buffer18>>2] = $2;
    $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
    HEAP32[$vararg_ptr21>>2] = $83;
    _g_log(0,16,128067,$vararg_buffer18);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 if ($33) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $84 = ((($3)) + 24|0);
 $85 = HEAP16[$84>>1]|0;
 $86 = ($85&65535)<(4);
 if ($86) {
  HEAP32[$vararg_buffer22>>2] = $2;
  _g_log(0,16,128152,$vararg_buffer22);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $87 = ($0|0)==(0|0);
 if ($87) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $88 = ((($0)) + 20|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($89)) + 36|0);
 $91 = HEAP16[$90>>1]|0;
 $92 = ($85&65535)<($91&65535);
 if (!($92)) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $93 = ((($0)) + 24|0);
 $94 = HEAP32[$93>>2]|0;
 $95 = (_g_quark_to_string($94)|0);
 HEAP32[$vararg_buffer25>>2] = $2;
 $vararg_ptr28 = ((($vararg_buffer25)) + 4|0);
 HEAP32[$vararg_ptr28>>2] = $95;
 _g_log(0,16,128227,$vararg_buffer25);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _check_value_table_I($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$0$lcssa$i30 = 0, $$08$i = 0, $$08$i29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_ptr10 = 0, $vararg_ptr17 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer14 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 48|0;
 $3 = ($1|0)==(0|0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($1)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $9 = ((($1)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = ((($1)) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($13|0)==(0|0);
    if ($14) {
     $15 = ((($1)) + 16|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($16|0)==(0|0);
     if ($17) {
      $18 = ((($1)) + 20|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = ($19|0)==(0|0);
      if ($20) {
       $21 = ((($1)) + 24|0);
       $22 = HEAP32[$21>>2]|0;
       $23 = ($22|0)==(0|0);
       if ($23) {
        $24 = ((($1)) + 28|0);
        $25 = HEAP32[$24>>2]|0;
        $26 = ($25|0)==(0|0);
        if ($26) {
         $$0 = 0;
         STACKTOP = sp;return ($$0|0);
        }
       }
      }
     }
    }
   }
  }
  HEAP32[$vararg_buffer>>2] = $0;
  _g_log(0,16,127257,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $27 = ((($1)) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if ($29) {
  HEAP32[$vararg_buffer1>>2] = $0;
  _g_log(0,16,127307,$vararg_buffer1);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = ((($1)) + 16|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0|0);
 $33 = ((($1)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 do {
  if ($32) {
   if (!($35)) {
    label = 16;
   }
  } else {
   if ($35) {
    label = 16;
   } else {
    ;HEAP8[$2>>0]=HEAP8[127419>>0]|0;HEAP8[$2+1>>0]=HEAP8[127419+1>>0]|0;HEAP8[$2+2>>0]=HEAP8[127419+2>>0]|0;HEAP8[$2+3>>0]=HEAP8[127419+3>>0]|0;HEAP8[$2+4>>0]=HEAP8[127419+4>>0]|0;HEAP8[$2+5>>0]=HEAP8[127419+5>>0]|0;
    $36 = HEAP8[$31>>0]|0;
    $37 = ($36<<24>>24)==(0);
    L25: do {
     if ($37) {
      $$0$lcssa$i = $31;
      label = 22;
     } else {
      $$08$i = $31;$39 = $36;
      while(1) {
       $38 = $39 << 24 >> 24;
       $40 = (_strchr($2,$38)|0);
       $41 = ($40|0)==(0|0);
       if ($41) {
        break;
       }
       $42 = ((($$08$i)) + 1|0);
       $43 = HEAP8[$42>>0]|0;
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        $$0$lcssa$i = $42;
        label = 22;
        break L25;
       } else {
        $$08$i = $42;$39 = $43;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     $45 = $$0$lcssa$i;
     $46 = $31;
     $47 = (($45) - ($46))|0;
     $48 = ($47|0)>(8);
     if (!($48)) {
      break;
     }
    }
    HEAP32[$vararg_buffer7>>2] = 127485;
    $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
    HEAP32[$vararg_ptr10>>2] = $0;
    _g_log(0,16,127425,$vararg_buffer7);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ((label|0) == 16) {
  HEAP32[$vararg_buffer4>>2] = $0;
  _g_log(0,16,127344,$vararg_buffer4);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $49 = ((($1)) + 24|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)==(0|0);
 $52 = ((($1)) + 28|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ($53|0)==(0|0);
 if ($51) {
  if ($54) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  if (!($54)) {
   ;HEAP8[$2>>0]=HEAP8[127419>>0]|0;HEAP8[$2+1>>0]=HEAP8[127419+1>>0]|0;HEAP8[$2+2>>0]=HEAP8[127419+2>>0]|0;HEAP8[$2+3>>0]=HEAP8[127419+3>>0]|0;HEAP8[$2+4>>0]=HEAP8[127419+4>>0]|0;HEAP8[$2+5>>0]=HEAP8[127419+5>>0]|0;
   $55 = HEAP8[$50>>0]|0;
   $56 = ($55<<24>>24)==(0);
   L44: do {
    if ($56) {
     $$0$lcssa$i30 = $50;
     label = 33;
    } else {
     $$08$i29 = $50;$58 = $55;
     while(1) {
      $57 = $58 << 24 >> 24;
      $59 = (_strchr($2,$57)|0);
      $60 = ($59|0)==(0|0);
      if ($60) {
       break;
      }
      $61 = ((($$08$i29)) + 1|0);
      $62 = HEAP8[$61>>0]|0;
      $63 = ($62<<24>>24)==(0);
      if ($63) {
       $$0$lcssa$i30 = $61;
       label = 33;
       break L44;
      } else {
       $$08$i29 = $61;$58 = $62;
      }
     }
    }
   } while(0);
   if ((label|0) == 33) {
    $64 = $$0$lcssa$i30;
    $65 = $50;
    $66 = (($64) - ($65))|0;
    $67 = ($66|0)>(8);
    if (!($67)) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
   }
   HEAP32[$vararg_buffer14>>2] = 127571;
   $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
   HEAP32[$vararg_ptr17>>2] = $0;
   _g_log(0,16,127425,$vararg_buffer14);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 HEAP32[$vararg_buffer11>>2] = $0;
 _g_log(0,16,127500,$vararg_buffer11);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _type_data_make_W($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$i154 = 0, $$0$i156 = 0, $$0143 = 0, $$0144$in = 0, $$0144$ph = 0, $$0144$ph163 = 0, $$0147 = 0, $$033$i = 0, $$036$i = 0, $$1$ph = 0, $$1146159 = 0, $$1148 = 0, $$1161 = 0, $$134$i = 0, $$137$i = 0, $$2 = 0, $$2149 = 0, $$3 = 0, $$4 = 0;
 var $$5 = 0, $$5165 = 0, $$idx = 0, $$idx$val = 0, $$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp = 0, $phitmp167 = 0, $phitmp168 = 0, $phitmp169 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $6 & $5;
 if (!($or$cond)) {
  _g_assertion_message_expr(0,126118,1171,127166,127183);
  // unreachable;
 }
 $7 = ($2|0)==(0|0);
 if ($7) {
  $8 = ((($0)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9>>>0)>(1020);
  if ($10) {
   $11 = $9 & -4;
   $12 = $11;
   $$0$i = $12;
  } else {
   $13 = $9 >>> 2;
   $14 = (143760 + ($13<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   $$0$i = $15;
  }
  $16 = ($$0$i|0)==(0|0);
  if ($16) {
   $$1$ph = 148516;
   label = 9;
  } else {
   $17 = ((($$0$i)) + 20|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = HEAP32[$18>>2]|0;
   $$1146159 = $19;$$1161 = 0;$$2149 = 0;$47 = $19;
  }
 } else {
  $$1$ph = $2;
  label = 9;
 }
 if ((label|0) == 9) {
  $20 = ((($$1$ph)) + 16|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   $$0147 = 32;
  } else {
   $23 = (_strlen($21)|0);
   $24 = (($23) + 32)|0;
   $$0147 = $24;
  }
  $25 = ((($$1$ph)) + 24|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($26|0)==(0|0);
  if ($27) {
   $$1148 = $$0147;
  } else {
   $28 = (_strlen($26)|0);
   $29 = (($28) + ($$0147))|0;
   $$1148 = $29;
  }
  $30 = (($$1148) + 2)|0;
  $$1146159 = 0;$$1161 = $$1$ph;$$2149 = $30;$47 = 0;
 }
 $31 = ((($0)) + 12|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32 & 262144;
 $34 = ($33|0)==(0);
 L20: do {
  if ($34) {
   $85 = $32 & 131072;
   $86 = ($85|0)==(0);
   if (!($86)) {
    $87 = ((($0)) + 44|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = ($88>>>0)>(1020);
    if ($89) {
     $90 = $88 & -4;
     $91 = $90;
     $$0$i154 = $91;
    } else {
     $92 = $88 >>> 2;
     $93 = (143760 + ($92<<2)|0);
     $94 = HEAP32[$93>>2]|0;
     $$0$i154 = $94;
    }
    $95 = (($$2149) + 36)|0;
    $96 = (_g_malloc0($95)|0);
    $97 = ($$2149|0)==(0);
    $98 = ((($96)) + 36|0);
    $99 = $97 ? $47 : $98;
    $$3 = $97 ? $$1146159 : $98;
    $100 = HEAP16[$1>>1]|0;
    $101 = ((($96)) + 4|0);
    HEAP16[$101>>1] = $100;
    $102 = ((($1)) + 4|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ((($96)) + 12|0);
    HEAP32[$104>>2] = $103;
    $105 = ((($1)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($96)) + 16|0);
    HEAP32[$107>>2] = $106;
    $108 = ((($1)) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ((($96)) + 20|0);
    HEAP32[$110>>2] = $109;
    $111 = ((($1)) + 16|0);
    $112 = HEAP32[$111>>2]|0;
    $113 = ((($96)) + 24|0);
    HEAP32[$113>>2] = $112;
    $114 = ((($1)) + 20|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($96)) + 28|0);
    HEAP32[$116>>2] = $115;
    $117 = ((($96)) + 32|0);
    HEAP32[$117>>2] = 0;
    $118 = ((($96)) + 6|0);
    HEAP16[$118>>1] = 0;
    $119 = ($$0$i154|0)==(0|0);
    if (!($119)) {
     $120 = ((($$0$i154)) + 20|0);
     $121 = HEAP32[$120>>2]|0;
     $122 = ((($121)) + 6|0);
     $123 = HEAP16[$122>>1]|0;
     HEAP16[$118>>1] = $123;
    }
    $124 = ((($96)) + 8|0);
    HEAP32[$124>>2] = 0;
    $$0144$in = $96;$$5 = $$3;$206 = $99;
    label = 36;
    break;
   }
   $125 = $32 & 255;
   $126 = (((($0)) + 40|0) + ($125<<2)|0);
   $127 = HEAP32[$126>>2]|0;
   switch ($127|0) {
   case 8:  {
    $128 = (($$2149) + 32)|0;
    $129 = (_g_malloc0($128)|0);
    $130 = ($$2149|0)==(0);
    $131 = ((($129)) + 32|0);
    $132 = $130 ? $47 : $131;
    $$4 = $130 ? $$1146159 : $131;
    $133 = HEAP16[$1>>1]|0;
    $134 = ((($129)) + 4|0);
    HEAP16[$134>>1] = $133;
    $135 = ((($1)) + 4|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = ((($129)) + 8|0);
    HEAP32[$137>>2] = $136;
    $138 = ((($1)) + 8|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($129)) + 12|0);
    HEAP32[$140>>2] = $139;
    $141 = ((($1)) + 12|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = ((($129)) + 16|0);
    HEAP32[$143>>2] = $142;
    $144 = ((($1)) + 16|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($129)) + 20|0);
    HEAP32[$146>>2] = $145;
    $147 = ((($1)) + 20|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ((($129)) + 24|0);
    HEAP32[$149>>2] = $148;
    $150 = ((($129)) + 28|0);
    HEAP32[$150>>2] = 0;
    $$0144$in = $129;$$5 = $$4;$206 = $132;
    label = 36;
    break L20;
    break;
   }
   case 72:  {
    $151 = (($$2149) + 12)|0;
    $152 = (_g_malloc0($151)|0);
    $153 = ($$2149|0)==(0);
    if ($153) {
     $$0144$ph = $152;
     label = 34;
    } else {
     $154 = ((($152)) + 12|0);
     $$0144$ph163 = $152;$$ph = $154;
     label = 35;
    }
    break;
   }
   default: {
    $155 = (($$2149) + 4)|0;
    $156 = (_g_malloc0($155)|0);
    $157 = ($$2149|0)==(0);
    if ($157) {
     $$0144$ph = $156;
     label = 34;
    } else {
     $158 = ((($156)) + 4|0);
     $$0144$ph163 = $156;$$ph = $158;
     label = 35;
    }
   }
   }
   if ((label|0) == 34) {
    HEAP32[$3>>2] = $$0144$ph;
    $175 = $47;
    break;
   }
   else if ((label|0) == 35) {
    HEAP32[$3>>2] = $$0144$ph163;
    $$5165 = $$ph;$160 = $$ph;
    label = 37;
    break;
   }
  } else {
   $35 = ((($0)) + 44|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($36>>>0)>(1020);
   if ($37) {
    $38 = $36 & -4;
    $39 = $38;
    $$0$i156 = $39;
   } else {
    $40 = $36 >>> 2;
    $41 = (143760 + ($40<<2)|0);
    $42 = HEAP32[$41>>2]|0;
    $$0$i156 = $42;
   }
   $43 = (($$2149) + 48)|0;
   $44 = (_g_malloc0($43)|0);
   $45 = ($$2149|0)==(0);
   $46 = ((($44)) + 48|0);
   $48 = $45 ? $47 : $46;
   $$2 = $45 ? $$1146159 : $46;
   $49 = HEAP16[$1>>1]|0;
   $50 = ((($44)) + 4|0);
   HEAP16[$50>>1] = $49;
   $51 = ((($1)) + 4|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($44)) + 12|0);
   HEAP32[$53>>2] = $52;
   $54 = ((($1)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($44)) + 16|0);
   HEAP32[$56>>2] = $55;
   $57 = ((($1)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($44)) + 20|0);
   HEAP32[$59>>2] = $58;
   $60 = ((($1)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ((($44)) + 24|0);
   HEAP32[$62>>2] = $61;
   $63 = ((($1)) + 20|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ((($44)) + 28|0);
   HEAP32[$65>>2] = $64;
   $66 = ((($44)) + 32|0);
   HEAP32[$66>>2] = 0;
   $67 = ((($44)) + 8|0);
   HEAP32[$67>>2] = 0;
   $68 = ((($1)) + 24|0);
   $69 = HEAP16[$68>>1]|0;
   $70 = ((($44)) + 36|0);
   HEAP16[$70>>1] = $69;
   $71 = ((($44)) + 38|0);
   HEAP16[$71>>1] = 0;
   $72 = ((($44)) + 6|0);
   HEAP16[$72>>1] = 0;
   $73 = ($$0$i156|0)==(0|0);
   if (!($73)) {
    $74 = ((($$0$i156)) + 20|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ((($75)) + 6|0);
    $77 = HEAP16[$76>>1]|0;
    HEAP16[$72>>1] = $77;
   }
   $78 = ((($1)) + 26|0);
   $79 = HEAP16[$78>>1]|0;
   $80 = ($79&65535)<(1024);
   $spec$select = $80 ? $79 : 1024;
   $81 = ((($44)) + 40|0);
   HEAP16[$81>>1] = $spec$select;
   $82 = ((($1)) + 28|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ((($44)) + 44|0);
   HEAP32[$84>>2] = $83;
   $$0144$in = $44;$$5 = $$2;$206 = $48;
   label = 36;
  }
 } while(0);
 if ((label|0) == 36) {
  HEAP32[$3>>2] = $$0144$in;
  $159 = ($$2149|0)==(0);
  if ($159) {
   $175 = $206;
  } else {
   $$5165 = $$5;$160 = $206;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  ;HEAP32[$160>>2]=HEAP32[$$1161>>2]|0;HEAP32[$160+4>>2]=HEAP32[$$1161+4>>2]|0;HEAP32[$160+8>>2]=HEAP32[$$1161+8>>2]|0;HEAP32[$160+12>>2]=HEAP32[$$1161+12>>2]|0;HEAP32[$160+16>>2]=HEAP32[$$1161+16>>2]|0;HEAP32[$160+20>>2]=HEAP32[$$1161+20>>2]|0;HEAP32[$160+24>>2]=HEAP32[$$1161+24>>2]|0;HEAP32[$160+28>>2]=HEAP32[$$1161+28>>2]|0;
  $161 = ((($160)) + 32|0);
  HEAP8[$161>>0] = 0;
  $162 = ((($$5165)) + 16|0);
  HEAP32[$162>>2] = $161;
  $163 = ((($$1161)) + 16|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = ($164|0)==(0|0);
  if ($165) {
   $$0143 = $161;
  } else {
   (_strcat($161,$164)|0);
   $166 = HEAP32[$163>>2]|0;
   $167 = (_strlen($166)|0);
   $168 = (($161) + ($167)|0);
   $$0143 = $168;
  }
  $169 = ((($$0143)) + 1|0);
  HEAP8[$169>>0] = 0;
  $170 = ((($$5165)) + 24|0);
  HEAP32[$170>>2] = $169;
  $171 = ((($$1161)) + 24|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = ($172|0)==(0|0);
  if ($173) {
   $175 = $160;
  } else {
   (_strcat($169,$172)|0);
   $175 = $160;
  }
 }
 $174 = HEAP32[$3>>2]|0;
 HEAP32[$174>>2] = $175;
 $176 = HEAP32[$3>>2]|0;
 $177 = HEAP32[$176>>2]|0;
 $178 = HEAP32[$177>>2]|0;
 $179 = ($178|0)==(0|0);
 L58: do {
  if ($179) {
   $202 = 0;
  } else {
   $180 = HEAP32[37126]|0;
   $$idx = ((($0)) + 28|0);
   $$idx$val = HEAP32[$$idx>>2]|0;
   $181 = ($180|0)!=(0);
   $182 = ($$idx$val|0)!=(0|0);
   $or$cond$i = $181 & $182;
   if ($or$cond$i) {
    $183 = HEAP32[$$idx$val>>2]|0;
    $184 = ($183|0)==(0);
    if ($184) {
     $202 = 524288;
    } else {
     $185 = ((($$idx$val)) + 4|0);
     $186 = HEAP32[$185>>2]|0;
     $187 = ((($186)) + -8|0);
     $$033$i = $187;$$036$i = $183;
     while(1) {
      $188 = (($$036$i) + 1)|0;
      $189 = $188 >>> 1;
      $190 = (($$033$i) + ($189<<3)|0);
      $191 = HEAP32[$190>>2]|0;
      $192 = ($191|0)==($180|0);
      if ($192) {
       break;
      }
      $193 = ($191>>>0)<($180>>>0);
      $194 = (($$036$i) - ($189))|0;
      $195 = (($189) + -1)|0;
      $$137$i = $193 ? $194 : $195;
      $$134$i = $193 ? $190 : $$033$i;
      $196 = ($$137$i|0)==(0);
      if ($196) {
       $202 = 524288;
       break L58;
      } else {
       $$033$i = $$134$i;$$036$i = $$137$i;
      }
     }
     $197 = (((($$033$i) + ($189<<3)|0)) + 4|0);
     $198 = HEAP32[$197>>2]|0;
     $phitmp167 = $198 & 48;
     $phitmp168 = ($phitmp167|0)==(0);
     $phitmp169 = $phitmp168&1;
     $phitmp = $phitmp169 << 19;
     $202 = $phitmp;
    }
   } else {
    $202 = 524288;
   }
  }
 } while(0);
 $199 = HEAP32[$31>>2]|0;
 $200 = $199 & -524289;
 $201 = $200 | $202;
 HEAP32[$31>>2] = $201;
 $203 = HEAP32[$3>>2]|0;
 $204 = HEAP32[$203>>2]|0;
 $205 = ($204|0)==(0|0);
 if ($205) {
  _g_assertion_message_expr(0,126118,1302,127166,127218);
  // unreachable;
 } else {
  HEAP32[$0>>2] = 1;
  return;
 }
}
function _g_type_free_instance($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i30 = 0, $$0$i29 = 0, $$033$i$i = 0, $$036$i$i = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lobit = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if (!($9)) {
  $10 = ((($$0$i)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 262144;
  $13 = ($12|0)==(0);
  if (!($13)) {
   $14 = ((($$0$i)) + 20|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP32[$14>>2]|0;
    $18 = ((($17)) + 32|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==($1|0);
    if ($20) {
     $31 = $11 & 524288;
     $32 = ($31|0)==(0);
     L10: do {
      if ($32) {
       $33 = ((($$0$i)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = ($34>>>0)>(1020);
       if ($35) {
        $36 = $34 & -4;
        $37 = $36;
        $$0$i$i30 = $37;
       } else {
        $38 = $34 >>> 2;
        $39 = (143760 + ($38<<2)|0);
        $40 = HEAP32[$39>>2]|0;
        $$0$i$i30 = $40;
       }
       $41 = ($$0$i$i30|0)==(0|0);
       if (!($41)) {
        $42 = HEAP32[37126]|0;
        $$idx$i = ((($$0$i$i30)) + 28|0);
        $$idx$val$i = HEAP32[$$idx$i>>2]|0;
        $43 = ($42|0)!=(0);
        $44 = ($$idx$val$i|0)!=(0|0);
        $or$cond$i$i = $43 & $44;
        if ($or$cond$i$i) {
         $45 = HEAP32[$$idx$val$i>>2]|0;
         $46 = ($45|0)==(0);
         if (!($46)) {
          $47 = ((($$idx$val$i)) + 4|0);
          $48 = HEAP32[$47>>2]|0;
          $49 = ((($48)) + -8|0);
          $$033$i$i = $49;$$036$i$i = $45;
          while(1) {
           $50 = (($$036$i$i) + 1)|0;
           $51 = $50 >>> 1;
           $52 = (($$033$i$i) + ($51<<3)|0);
           $53 = HEAP32[$52>>2]|0;
           $54 = ($53|0)==($42|0);
           if ($54) {
            break;
           }
           $55 = ($53>>>0)<($42>>>0);
           $56 = (($$036$i$i) - ($51))|0;
           $57 = (($51) + -1)|0;
           $$137$i$i = $55 ? $56 : $57;
           $$134$i$i = $55 ? $52 : $$033$i$i;
           $58 = ($$137$i$i|0)==(0);
           if ($58) {
            break L10;
           } else {
            $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
           }
          }
          $59 = (((($$033$i$i) + ($51<<3)|0)) + 4|0);
          $60 = HEAP32[$59>>2]|0;
          $$lobit = $60 & 16;
          $61 = ($$lobit|0)==(0);
          if (!($61)) {
           $62 = ((($$0$i)) + 24|0);
           $63 = HEAP32[$62>>2]|0;
           $64 = (_g_quark_to_string($63)|0);
           HEAP32[$vararg_buffer1>>2] = $64;
           _g_log(0,16,128381,$vararg_buffer1);
           STACKTOP = sp;return;
          }
         }
        }
       }
      }
     } while(0);
     HEAP32[$0>>2] = 0;
     $65 = HEAP32[$14>>2]|0;
     $66 = ((($65)) + 38|0);
     $67 = HEAP16[$66>>1]|0;
     $68 = $67&65535;
     $69 = HEAP32[$14>>2]|0;
     $70 = ((($69)) + 36|0);
     $71 = HEAP16[$70>>1]|0;
     $72 = $71&65535;
     $73 = (0 - ($68))|0;
     $74 = (($0) + ($73)|0);
     $75 = (($72) + ($68))|0;
     _g_slice_free1($75,$74);
     _g_type_class_unref($19);
     STACKTOP = sp;return;
    }
   }
  }
 }
 $21 = ($2|0)==(0);
 if ($21) {
  $$0$i29 = 126108;
 } else {
  if ($3) {
   $22 = $2 & -4;
   $23 = $22;
   $$0$i$i = $23;
  } else {
   $24 = $2 >>> 2;
   $25 = (143760 + ($24<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $$0$i$i = $26;
  }
  $27 = ($$0$i$i|0)==(0|0);
  if ($27) {
   $$0$i29 = 126098;
  } else {
   $28 = ((($$0$i$i)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (_g_quark_to_string($29)|0);
   $$0$i29 = $30;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i29;
 _g_log(0,16,128318,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_type_add_interface_check($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37127]|0;
 $3 = (($2) + 1)|0;
 HEAP32[37127] = $3;
 $4 = HEAP32[37128]|0;
 $5 = (_g_realloc_n($4,$3,8)|0);
 HEAP32[37128] = $5;
 $6 = (($5) + ($2<<3)|0);
 HEAP32[$6>>2] = $0;
 $7 = (((($5) + ($2<<3)|0)) + 4|0);
 HEAP32[$7>>2] = $1;
 return;
}
function _g_type_register_fundamental($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i34 = 0, $$0$i35 = 0, $$033$i = 0, $$036$i = 0, $$06375$i = 0, $$1$lcssa$i = 0, $$134$i = 0, $$137$i = 0, $$170$i = 0, $$2$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer2 = 0;
 var $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = HEAP32[37126]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  _g_assertion_message_expr(0,126118,2785,128445,128473);
  // unreachable;
 }
 $7 = (_check_type_name_I($1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = $0 & 3;
 $10 = ($9|0)!=(0);
 $11 = ($0>>>0)>(1020);
 $or$cond = $11 | $10;
 if ($or$cond) {
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $0;
  _g_log(0,16,128497,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = HEAP32[$3>>2]|0;
 $13 = $12 & 3;
 $14 = ($13|0)==(2);
 if ($14) {
  HEAP32[$vararg_buffer2>>2] = $1;
  _g_log(0,16,128565,$vararg_buffer2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = $0 >>> 2;
 $16 = (143760 + ($15<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  $19 = ($0|0)==(0);
  if ($19) {
   $$0$i34 = 126108;
  } else {
   $20 = ((($17)) + 24|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (_g_quark_to_string($21)|0);
   $$0$i34 = $22;
  }
  HEAP32[$vararg_buffer5>>2] = $$0$i34;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = $1;
  _g_log(0,16,128633,$vararg_buffer5);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = HEAP32[29606]|0;
 $24 = ($15|0)==($23|0);
 if ($24) {
  $25 = (($15) + 1)|0;
  HEAP32[29606] = $25;
 }
 $26 = $12 & 15;
 $27 = (_type_node_any_new_W(0,$0,$1,0,$26)|0);
 $28 = ((($27)) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = $29 & 255;
 $31 = (((($27)) + 40|0) + ($30<<2)|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($27)) + 40|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($32|0)==($34|0);
 do {
  if ($35) {
   $$0$i35 = $27;
  } else {
   $36 = ($32>>>0)>(1020);
   if ($36) {
    $37 = $32 & -4;
    $38 = $37;
    $$0$i35 = $38;
    break;
   } else {
    $39 = $32 >>> 2;
    $40 = (143760 + ($39<<2)|0);
    $41 = HEAP32[$40>>2]|0;
    $$0$i35 = $41;
    break;
   }
  }
 } while(0);
 $42 = ($$0$i35|0)==(0|0);
 $43 = ((($$0$i35)) + -4|0);
 $44 = $42 ? 0 : $43;
 HEAP32[$44>>2] = $26;
 $45 = $4 & 48;
 $46 = ($45|0)==(0);
 if (!($46)) {
  $47 = HEAP32[$28>>2]|0;
  $48 = $47 & 131072;
  $49 = ($48|0)==(0);
  if (!($49)) {
   $50 = ((($27)) + 20|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($51|0)==(0|0);
   if (!($52)) {
    $53 = HEAP32[$50>>2]|0;
    $54 = ((($53)) + 32|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ($55|0)==(0|0);
    if (!($56)) {
     $57 = ((($27)) + 24|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (_g_quark_to_string($58)|0);
     HEAP32[$vararg_buffer9>>2] = $59;
     _g_log(0,16,128690,$vararg_buffer9);
    }
   }
  }
 }
 $60 = HEAP32[37126]|0;
 $$idx$i = ((($27)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $61 = ($60|0)!=(0);
 $62 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i = $61 & $62;
 L37: do {
  if ($or$cond$i) {
   $63 = HEAP32[$$idx$val$i>>2]|0;
   $64 = ($63|0)==(0);
   if ($64) {
    $65 = $4;
    $110 = $65;$85 = $$idx$val$i;
    break;
   }
   $66 = ((($$idx$val$i)) + 4|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ((($67)) + -8|0);
   $$033$i = $68;$$036$i = $63;
   while(1) {
    $69 = (($$036$i) + 1)|0;
    $70 = $69 >>> 1;
    $71 = (($$033$i) + ($70<<3)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)==($60|0);
    if ($73) {
     break;
    }
    $74 = ($72>>>0)<($60>>>0);
    $75 = (($$036$i) - ($70))|0;
    $76 = (($70) + -1)|0;
    $$137$i = $74 ? $75 : $76;
    $$134$i = $74 ? $71 : $$033$i;
    $77 = ($$137$i|0)==(0);
    if ($77) {
     $$2$i = 0;
     label = 30;
     break L37;
    } else {
     $$033$i = $$134$i;$$036$i = $$137$i;
    }
   }
   $78 = (((($$033$i) + ($70<<3)|0)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $$2$i = $79;
   label = 30;
  } else {
   $$2$i = 0;
   label = 30;
  }
 } while(0);
 if ((label|0) == 30) {
  $80 = $$2$i | $4;
  $81 = $80;
  $82 = ($$idx$val$i|0)==(0|0);
  if ($82) {
   $83 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx$i>>2] = $83;
   $110 = $81;$85 = $83;
  } else {
   $110 = $81;$85 = $$idx$val$i;
  }
 }
 $84 = ((($85)) + 4|0);
 $86 = HEAP32[$84>>2]|0;
 $87 = HEAP32[$85>>2]|0;
 $88 = ($87|0)==(0);
 do {
  if ($88) {
   $$lcssa65$i = 1;
   label = 38;
  } else {
   $$06375$i = 0;
   while(1) {
    $89 = (($86) + ($$06375$i<<3)|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($90|0)==($60|0);
    if ($91) {
     label = 35;
     break;
    }
    $93 = (($$06375$i) + 1)|0;
    $94 = ($93>>>0)<($87>>>0);
    if ($94) {
     $$06375$i = $93;
    } else {
     label = 37;
     break;
    }
   }
   if ((label|0) == 35) {
    $92 = (((($86) + ($$06375$i<<3)|0)) + 4|0);
    $$sink = $92;
    break;
   }
   else if ((label|0) == 37) {
    $phitmp$i = (($87) + 1)|0;
    $$lcssa65$i = $phitmp$i;
    label = 38;
    break;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  HEAP32[$85>>2] = $$lcssa65$i;
  $95 = (_g_realloc_n($86,$$lcssa65$i,8)|0);
  HEAP32[$84>>2] = $95;
  $96 = HEAP32[$85>>2]|0;
  $97 = ($96|0)==(1);
  L60: do {
   if ($97) {
    $$1$lcssa$i = 0;$$lcssa$i = 1;
   } else {
    $98 = (($96) + -1)|0;
    $$170$i = 0;
    while(1) {
     $99 = (($95) + ($$170$i<<3)|0);
     $100 = HEAP32[$99>>2]|0;
     $101 = ($100>>>0)>($60>>>0);
     if ($101) {
      $$1$lcssa$i = $$170$i;$$lcssa$i = $96;
      break L60;
     }
     $102 = (($$170$i) + 1)|0;
     $103 = ($102>>>0)<($98>>>0);
     if ($103) {
      $$170$i = $102;
     } else {
      $$1$lcssa$i = $102;$$lcssa$i = $96;
      break;
     }
    }
   }
  } while(0);
  $104 = (($95) + ($$1$lcssa$i<<3)|0);
  $105 = ((($104)) + 8|0);
  $106 = (($$lcssa$i) - ($$1$lcssa$i))|0;
  $107 = $106 << 3;
  $108 = (($107) + -8)|0;
  _memmove(($105|0),($104|0),($108|0))|0;
  HEAP32[$104>>2] = $60;
  $109 = (((($95) + ($$1$lcssa$i<<3)|0)) + 4|0);
  $$sink = $109;
 }
 HEAP32[$$sink>>2] = $110;
 $111 = HEAP32[$28>>2]|0;
 $112 = $111 & 255;
 $113 = (((($27)) + 40|0) + ($112<<2)|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = (_check_type_info_I(0,$114,$1,$2)|0);
 $116 = ($115|0)==(0);
 if (!($116)) {
  $117 = ((($2)) + 32|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (_check_value_table_I($1,$118)|0);
  $120 = ($119|0)==(0);
  if ($120) {
   $122 = 0;
  } else {
   $121 = HEAP32[$117>>2]|0;
   $122 = $121;
  }
  _type_data_make_W($27,$2,$122);
 }
 $123 = HEAP32[$33>>2]|0;
 $$0 = $123;
 STACKTOP = sp;return ($$0|0);
}
function _check_type_name_I($0) {
 $0 = $0|0;
 var $$02740 = 0, $$028 = 0, $$041 = 0, $$041$ph = 0, $$off = 0, $$off33 = 0, $$off36 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $narrow = 0, $or$cond39 = 0, $phitmp = 0, $spec$select = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($0)) + 1|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   $6 = ((($0)) + 2|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = ($7<<24>>24)==(0);
   if (!($8)) {
    $$off = (($1) + -65)<<24>>24;
    $9 = ($$off&255)<(26);
    if ($9) {
     $$041$ph = 1;
    } else {
     $$off33 = (($1) + -97)<<24>>24;
     $10 = ($$off33&255)<(26);
     $11 = ($1<<24>>24)==(95);
     $narrow = $11 | $10;
     $spec$select = $narrow&1;
     $$041$ph = $spec$select;
    }
    $$02740 = $3;$$041 = $$041$ph;$13 = $4;
    while(1) {
     $12 = $13 & -33;
     $14 = (($12) + -65)<<24>>24;
     $15 = ($14&255)<(26);
     $$off36 = (($13) + -48)<<24>>24;
     $16 = ($$off36&255)<(10);
     $or$cond39 = $16 | $15;
     if ($or$cond39) {
      $20 = 1;
     } else {
      $17 = $13 << 24 >> 24;
      $memchr = (_memchr(128822,$17,4)|0);
      $18 = ($memchr|0)!=(0|0);
      $20 = $18;
     }
     $19 = $20&1;
     $21 = $$041 & $19;
     $22 = ((($$02740)) + 1|0);
     $23 = HEAP8[$22>>0]|0;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      break;
     } else {
      $$02740 = $22;$$041 = $21;$13 = $23;
     }
    }
    $phitmp = ($21|0)==(0);
    if ($phitmp) {
     HEAP32[$vararg_buffer1>>2] = $0;
     _g_log(0,16,128826,$vararg_buffer1);
     $$028 = 0;
     STACKTOP = sp;return ($$028|0);
    }
    $25 = HEAP32[37137]|0;
    $26 = (_g_hash_table_lookup($25,$0)|0);
    $27 = ($26|0)==(0|0);
    if ($27) {
     $$028 = 1;
     STACKTOP = sp;return ($$028|0);
    }
    HEAP32[$vararg_buffer4>>2] = $0;
    _g_log(0,16,128869,$vararg_buffer4);
    $$028 = 0;
    STACKTOP = sp;return ($$028|0);
   }
  }
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,128794,$vararg_buffer);
 $$028 = 0;
 STACKTOP = sp;return ($$028|0);
}
function _type_node_any_new_W($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$096$in = 0, $$099100 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)!=(0|0);
 if ($5) {
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 & 255;
  $9 = (($8) + 1)|0;
  $11 = $9;
 } else {
  $11 = 0;
 }
 $10 = $11 << 2;
 $12 = $5 ? 48 : 52;
 $13 = (($12) + ($10))|0;
 $14 = (_g_malloc0($13)|0);
 if ($5) {
  $18 = $14;
  $$0 = $18;$$096$in = $14;
 } else {
  $15 = ((($14)) + 4|0);
  $16 = $1 >>> 2;
  $17 = (143760 + ($16<<2)|0);
  HEAP32[$17>>2] = $15;
  $$0 = $1;$$096$in = $15;
 }
 $19 = $$0 & 3;
 $20 = ($19|0)==(0);
 if (!($20)) {
  _g_assertion_message_expr(0,126118,468,128747,128767);
  // unreachable;
 }
 $21 = ((($$096$in)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = $11 & 255;
 $24 = $22 & -256;
 $25 = $24 | $23;
 HEAP32[$21>>2] = $25;
 $26 = ((($$096$in)) + 40|0);
 HEAP32[$26>>2] = $$0;
 $27 = ((($$096$in)) + 44|0);
 do {
  if ($5) {
   $38 = ((($0)) + 40|0);
   $39 = ((($0)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = $40 << 2;
   $42 = $41 & 1020;
   $43 = (($42) + 8)|0;
   _memcpy(($27|0),($38|0),($43|0))|0;
   $44 = $40 & 131072;
   $45 = $25 & -393217;
   $46 = $44 | $45;
   $47 = $40 & 262144;
   $48 = $46 | $47;
   HEAP32[$21>>2] = $48;
   $49 = (((($$096$in)) + 40|0) + ($23<<2)|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)==(8);
   if ($51) {
    $52 = $48 & -130817;
    HEAP32[$21>>2] = $52;
    $53 = ((($$096$in)) + 36|0);
    HEAP32[$53>>2] = 0;
   } else {
    $54 = ((($0)) + 32|0);
    $55 = (__g_atomic_array_copy($54,4,0)|0);
    $56 = ($55|0)==(0|0);
    if (!($56)) {
     $57 = ((($55)) + -4|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (($58) + -4)|0;
     $60 = ($59>>>0)>(11);
     if ($60) {
      $61 = ((($55)) + 4|0);
      $62 = (($59>>>0) / 12)&-1;
      $$099100 = 0;
      while(1) {
       $63 = (((($61) + (($$099100*12)|0)|0)) + 4|0);
       HEAP32[$63>>2] = 0;
       $64 = (((($61) + (($$099100*12)|0)|0)) + 8|0);
       HEAP32[$64>>2] = 0;
       $65 = (($$099100) + 1)|0;
       $66 = ($65>>>0)<($62>>>0);
       if ($66) {
        $$099100 = $65;
       } else {
        break;
       }
      }
     }
     $67 = ((($$096$in)) + 32|0);
     __g_atomic_array_update($67,$55);
    }
   }
   $68 = ((($0)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = (($69) + 1)|0;
   HEAP32[$68>>2] = $70;
   $71 = ((($0)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (_g_realloc_n($72,$70,4)|0);
   HEAP32[$71>>2] = $73;
   $74 = (($73) + ($69<<2)|0);
   HEAP32[$74>>2] = $$0;
  } else {
   HEAP32[$27>>2] = 0;
   $28 = $4 << 17;
   $29 = $25 & -393217;
   $30 = $28 & 393216;
   $31 = $30 | $29;
   HEAP32[$21>>2] = $31;
   $32 = (((($$096$in)) + 40|0) + ($23<<2)|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)==(8);
   if ($34) {
    $35 = $31 & -130817;
    HEAP32[$21>>2] = $35;
    $36 = ((($$096$in)) + 36|0);
    HEAP32[$36>>2] = 0;
    break;
   } else {
    $37 = ((($$096$in)) + 32|0);
    __g_atomic_array_init($37);
    break;
   }
  }
 } while(0);
 $75 = ((($$096$in)) + 4|0);
 HEAP32[$75>>2] = $3;
 $76 = ((($$096$in)) + 8|0);
 HEAP32[$76>>2] = 0;
 $77 = ((($$096$in)) + 16|0);
 HEAP32[$77>>2] = 0;
 $78 = ((($$096$in)) + 20|0);
 HEAP32[$78>>2] = 0;
 $79 = (_g_quark_from_string($2)|0);
 $80 = ((($$096$in)) + 24|0);
 HEAP32[$80>>2] = $79;
 $81 = ((($$096$in)) + 28|0);
 HEAP32[$81>>2] = 0;
 $82 = HEAP32[37137]|0;
 $83 = (_g_quark_to_string($79)|0);
 $84 = $$0;
 (_g_hash_table_insert($82,$83,$84)|0);
 $85 = HEAP32[37124]|0;
 $86 = (($85) + 1)|0;
 HEAP32[37124] = $86;
 return ($$096$in|0);
}
function _g_type_register_static_simple($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $7 = sp;
 $8 = $2&65535;
 HEAP16[$7>>1] = $8;
 $9 = ((($7)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($7)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($7)) + 12|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($7)) + 16|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($7)) + 20|0);
 HEAP32[$13>>2] = 0;
 $14 = $4&65535;
 $15 = ((($7)) + 24|0);
 HEAP16[$15>>1] = $14;
 $16 = ((($7)) + 26|0);
 HEAP16[$16>>1] = 0;
 $17 = ((($7)) + 28|0);
 HEAP32[$17>>2] = $5;
 $18 = ((($7)) + 32|0);
 HEAP32[$18>>2] = 0;
 $19 = (_g_type_register_static($0,$1,$7,$6)|0);
 STACKTOP = sp;return ($19|0);
}
function _g_type_register_static($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$033$i = 0, $$036$i = 0, $$06375$i = 0, $$1$lcssa$i = 0, $$134$i = 0, $$137$i = 0, $$170$i = 0, $$2$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond$i = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = HEAP32[37126]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  _g_assertion_message_expr(0,126118,2902,128904,128473);
  // unreachable;
 }
 $6 = (_check_type_name_I($1)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = (_check_derivation_I($0,$1)|0);
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  HEAP32[$vararg_buffer>>2] = $1;
  _g_log(0,16,128927,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = ($0>>>0)>(1020);
 if ($13) {
  $14 = $0 & -4;
  $15 = $14;
  $$0$i = $15;
 } else {
  $16 = $0 >>> 2;
  $17 = (143760 + ($16<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $$0$i = $18;
 }
 _type_data_ref_Wm($$0$i);
 $19 = ((($$0$i)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 & 255;
 $22 = (((($$0$i)) + 40|0) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (_check_type_info_I($$0$i,$23,$1,$2)|0);
 $25 = ($24|0)==(0);
 if ($25) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $26 = ($$0$i|0)==(0|0);
 if ($26) {
  _g_assertion_message_expr(0,126118,585,128974,128990);
  // unreachable;
 }
 $27 = HEAP32[$19>>2]|0;
 $28 = $27 & 255;
 $29 = ($28|0)==(255);
 if ($29) {
  _g_assertion_message_expr(0,126118,586,128974,128996);
  // unreachable;
 }
 $30 = ((($$0$i)) + 8|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(-1);
 if ($32) {
  _g_assertion_message_expr(0,126118,587,128974,129027);
  // unreachable;
 }
 $33 = (((($$0$i)) + 40|0) + ($28<<2)|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (_type_node_any_new_W($$0$i,$34,$1,0,0)|0);
 $36 = $3 & 48;
 $37 = ($36|0)==(0);
 if (!($37)) {
  $38 = ((($35)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = $39 & 131072;
  $41 = ($40|0)==(0);
  if (!($41)) {
   $42 = ((($35)) + 20|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)==(0|0);
   if (!($44)) {
    $45 = HEAP32[$42>>2]|0;
    $46 = ((($45)) + 32|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = ($47|0)==(0|0);
    if (!($48)) {
     $49 = ((($35)) + 24|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (_g_quark_to_string($50)|0);
     HEAP32[$vararg_buffer1>>2] = $51;
     _g_log(0,16,128690,$vararg_buffer1);
    }
   }
  }
 }
 $52 = HEAP32[37126]|0;
 $$idx$i = ((($35)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $53 = ($52|0)!=(0);
 $54 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i = $53 & $54;
 L36: do {
  if ($or$cond$i) {
   $55 = HEAP32[$$idx$val$i>>2]|0;
   $56 = ($55|0)==(0);
   if ($56) {
    $57 = $3;
    $102 = $57;$77 = $$idx$val$i;
    break;
   }
   $58 = ((($$idx$val$i)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + -8|0);
   $$033$i = $60;$$036$i = $55;
   while(1) {
    $61 = (($$036$i) + 1)|0;
    $62 = $61 >>> 1;
    $63 = (($$033$i) + ($62<<3)|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ($64|0)==($52|0);
    if ($65) {
     break;
    }
    $66 = ($64>>>0)<($52>>>0);
    $67 = (($$036$i) - ($62))|0;
    $68 = (($62) + -1)|0;
    $$137$i = $66 ? $67 : $68;
    $$134$i = $66 ? $63 : $$033$i;
    $69 = ($$137$i|0)==(0);
    if ($69) {
     $$2$i = 0;
     label = 29;
     break L36;
    } else {
     $$033$i = $$134$i;$$036$i = $$137$i;
    }
   }
   $70 = (((($$033$i) + ($62<<3)|0)) + 4|0);
   $71 = HEAP32[$70>>2]|0;
   $$2$i = $71;
   label = 29;
  } else {
   $$2$i = 0;
   label = 29;
  }
 } while(0);
 if ((label|0) == 29) {
  $72 = $$2$i | $3;
  $73 = $72;
  $74 = ($$idx$val$i|0)==(0|0);
  if ($74) {
   $75 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx$i>>2] = $75;
   $102 = $73;$77 = $75;
  } else {
   $102 = $73;$77 = $$idx$val$i;
  }
 }
 $76 = ((($77)) + 4|0);
 $78 = HEAP32[$76>>2]|0;
 $79 = HEAP32[$77>>2]|0;
 $80 = ($79|0)==(0);
 do {
  if ($80) {
   $$lcssa65$i = 1;
   label = 37;
  } else {
   $$06375$i = 0;
   while(1) {
    $81 = (($78) + ($$06375$i<<3)|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($52|0);
    if ($83) {
     label = 34;
     break;
    }
    $85 = (($$06375$i) + 1)|0;
    $86 = ($85>>>0)<($79>>>0);
    if ($86) {
     $$06375$i = $85;
    } else {
     label = 36;
     break;
    }
   }
   if ((label|0) == 34) {
    $84 = (((($78) + ($$06375$i<<3)|0)) + 4|0);
    $$sink = $84;
    break;
   }
   else if ((label|0) == 36) {
    $phitmp$i = (($79) + 1)|0;
    $$lcssa65$i = $phitmp$i;
    label = 37;
    break;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  HEAP32[$77>>2] = $$lcssa65$i;
  $87 = (_g_realloc_n($78,$$lcssa65$i,8)|0);
  HEAP32[$76>>2] = $87;
  $88 = HEAP32[$77>>2]|0;
  $89 = ($88|0)==(1);
  L59: do {
   if ($89) {
    $$1$lcssa$i = 0;$$lcssa$i = 1;
   } else {
    $90 = (($88) + -1)|0;
    $$170$i = 0;
    while(1) {
     $91 = (($87) + ($$170$i<<3)|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ($92>>>0)>($52>>>0);
     if ($93) {
      $$1$lcssa$i = $$170$i;$$lcssa$i = $88;
      break L59;
     }
     $94 = (($$170$i) + 1)|0;
     $95 = ($94>>>0)<($90>>>0);
     if ($95) {
      $$170$i = $94;
     } else {
      $$1$lcssa$i = $94;$$lcssa$i = $88;
      break;
     }
    }
   }
  } while(0);
  $96 = (($87) + ($$1$lcssa$i<<3)|0);
  $97 = ((($96)) + 8|0);
  $98 = (($$lcssa$i) - ($$1$lcssa$i))|0;
  $99 = $98 << 3;
  $100 = (($99) + -8)|0;
  _memmove(($97|0),($96|0),($100|0))|0;
  HEAP32[$96>>2] = $52;
  $101 = (((($87) + ($$1$lcssa$i<<3)|0)) + 4|0);
  $$sink = $101;
 }
 HEAP32[$$sink>>2] = $102;
 $103 = ((($35)) + 40|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($2)) + 32|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = (_check_value_table_I($1,$106)|0);
 $108 = ($107|0)==(0);
 if ($108) {
  $110 = 0;
 } else {
  $109 = HEAP32[$105>>2]|0;
  $110 = $109;
 }
 _type_data_make_W($35,$2,$110);
 $$0 = $104;
 STACKTOP = sp;return ($$0|0);
}
function _check_derivation_I($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i18 = 0, $$0$i19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if ($8) {
  $9 = ($0|0)==(0);
  if ($9) {
   $$0$i19 = 126108;
  } else {
   if ($2) {
    $10 = $0 & -4;
    $11 = $10;
    $$0$i$i = $11;
   } else {
    $12 = $0 >>> 2;
    $13 = (143760 + ($12<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $$0$i$i = $14;
   }
   $15 = ($$0$i$i|0)==(0|0);
   if ($15) {
    $$0$i19 = 126098;
   } else {
    $16 = ((($$0$i$i)) + 24|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (_g_quark_to_string($17)|0);
    $$0$i19 = $18;
   }
  }
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i19;
  _g_log(0,16,129062,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $19 = ((($$0$i)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 & 255;
 $22 = (((($$0$i)) + 40|0) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($$0$i)) + 40|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($23|0)==($25|0);
 do {
  if ($26) {
   $$0$i18 = $$0$i;
  } else {
   $27 = ($23>>>0)>(1020);
   if ($27) {
    $28 = $23 & -4;
    $29 = $28;
    $$0$i18 = $29;
    break;
   } else {
    $30 = $23 >>> 2;
    $31 = (143760 + ($30<<2)|0);
    $32 = HEAP32[$31>>2]|0;
    $$0$i18 = $32;
    break;
   }
  }
 } while(0);
 $33 = ($$0$i18|0)==(0|0);
 $34 = ((($$0$i18)) + -4|0);
 $35 = $33 ? 0 : $34;
 $36 = HEAP32[$35>>2]|0;
 $37 = $36 & 4;
 $38 = ($37|0)==(0);
 if ($38) {
  $39 = ((($$0$i)) + 24|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (_g_quark_to_string($40)|0);
  HEAP32[$vararg_buffer2>>2] = $1;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $41;
  _g_log(0,16,129116,$vararg_buffer2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $42 = ($23|0)!=($0|0);
 $43 = $36 & 8;
 $44 = ($43|0)==(0);
 $or$cond = $42 & $44;
 if (!($or$cond)) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $45 = ((($$0$i)) + 24|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (_g_quark_to_string($46)|0);
 HEAP32[$vararg_buffer6>>2] = $1;
 $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
 HEAP32[$vararg_ptr9>>2] = $47;
 _g_log(0,16,129171,$vararg_buffer6);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_check_instance_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$us$i = 0, $$0$i24 = 0, $$0$us$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5>>>0)>(1020);
 if ($6) {
  $7 = $5 & -4;
  $8 = $7;
  $$0$i = $8;
 } else {
  $9 = $5 >>> 2;
  $10 = (143760 + ($9<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $$0$i = $11;
 }
 $12 = ($1>>>0)>(1020);
 if ($12) {
  $13 = $1 & -4;
  $14 = $13;
  $$0$i24 = $14;
 } else {
  $15 = $1 >>> 2;
  $16 = (143760 + ($15<<2)|0);
  $17 = HEAP32[$16>>2]|0;
  $$0$i24 = $17;
 }
 $18 = ((($$0$i24)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 255;
 $21 = ((($$0$i)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = $22 & 255;
 $24 = ($$0$i|0)==(0|0);
 if ($24) {
  $$0 = 0;
  return ($$0|0);
 }
 $25 = $22 & 262144;
 $26 = ($25|0)!=(0);
 $27 = ($$0$i24|0)!=(0|0);
 $or$cond = $27 & $26;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $28 = ($23>>>0)<($20>>>0);
 if (!($28)) {
  $29 = (($23) - ($20))|0;
  $30 = (((($$0$i)) + 40|0) + ($29<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($$0$i24)) + 40|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ($31|0)==($33|0);
  if ($34) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $35 = (((($$0$i24)) + 40|0) + ($20<<2)|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(8);
 if (!($37)) {
  $$0 = 0;
  return ($$0|0);
 }
 $38 = ((($$0$i)) + 32|0);
 $39 = (_g_atomic_pointer_get($38)|0);
 $40 = ((($$0$i24)) + 32|0);
 $41 = ((($$0$i24)) + 40|0);
 $$0$us$i = $38;
 while(1) {
  $42 = ($$0$us$i|0)==(0|0);
  if ($42) {
   $$039$i$us$i = 0;
  } else {
   $43 = (_g_atomic_pointer_get($40)|0);
   $44 = ((($$0$us$i)) + -4|0);
   $$0$i$us$i = $40;
   while(1) {
    $45 = HEAP32[$$0$us$i>>2]|0;
    $46 = ($$0$i$us$i|0)==(0|0);
    if ($46) {
     $$040$i$us$i = 0;
    } else {
     $47 = ((($$0$i$us$i)) + -4|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($45>>>0)<($48>>>0);
     if ($49) {
      $50 = (($$0$i$us$i) + ($45)|0);
      $51 = HEAP8[$50>>0]|0;
      $52 = ($51<<24>>24)==(0);
      if ($52) {
       $$040$i$us$i = 0;
      } else {
       $53 = $51&255;
       $54 = (($53) + -1)|0;
       $55 = HEAP32[$44>>2]|0;
       $56 = (($55) + -4)|0;
       $57 = (($56>>>0) / 12)&-1;
       $58 = ($54>>>0)<($57>>>0);
       $59 = (((($$0$us$i)) + 4|0) + (($54*12)|0)|0);
       if ($58) {
        $60 = HEAP32[$59>>2]|0;
        $61 = HEAP32[$41>>2]|0;
        $62 = ($60|0)==($61|0);
        $spec$select$i$us$i = $62 ? $59 : 0;
        $$040$i$us$i = $spec$select$i$us$i;
       } else {
        $$040$i$us$i = 0;
       }
      }
     } else {
      $$040$i$us$i = 0;
     }
    }
    $63 = (_g_atomic_pointer_get($40)|0);
    $64 = ($$0$i$us$i|0)==($63|0);
    if ($64) {
     $$039$i$us$i = $$040$i$us$i;
     break;
    } else {
     $$0$i$us$i = $40;
    }
   }
  }
  $65 = (_g_atomic_pointer_get($38)|0);
  $66 = ($$0$us$i|0)==($38|0);
  if ($66) {
   break;
  } else {
   $$0$us$i = $38;
  }
 }
 $67 = ($$039$i$us$i|0)!=(0|0);
 $68 = $67&1;
 $$0 = $68;
 return ($$0|0);
}
function _g_type_interface_peek($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i14 = 0, $$0$i15 = 0, $$040$i$i = 0, $$sroa$0$0 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($1>>>0)>(1020);
 if ($9) {
  $10 = $1 & -4;
  $11 = $10;
  $$0$i15 = $11;
 } else {
  $12 = $1 >>> 2;
  $13 = (143760 + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $$0$i15 = $14;
 }
 $15 = ($$0$i|0)==(0|0);
 if (!($15)) {
  $16 = ((($$0$i)) + 12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = $17 & 262144;
  $19 = ($18|0)!=(0);
  $20 = ($$0$i15|0)!=(0|0);
  $or$cond = $20 & $19;
  if ($or$cond) {
   $21 = ((($$0$i15)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = $22 & 255;
   $24 = (((($$0$i15)) + 40|0) + ($23<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(8);
   if (!($26)) {
    $$sroa$0$2 = 0;
    $59 = $$sroa$0$2;
    STACKTOP = sp;return ($59|0);
   }
   $27 = ((($$0$i)) + 32|0);
   $28 = (_g_atomic_pointer_get($27)|0);
   $29 = ((($$0$i15)) + 32|0);
   $30 = ((($$0$i15)) + 40|0);
   $$0$i14 = $27;
   while(1) {
    $31 = ($$0$i14|0)==(0|0);
    if ($31) {
     $$sroa$0$0 = 0;
    } else {
     $32 = (_g_atomic_pointer_get($29)|0);
     $33 = ((($$0$i14)) + -4|0);
     $$0$i$i = $29;
     while(1) {
      $34 = HEAP32[$$0$i14>>2]|0;
      $35 = ($$0$i$i|0)==(0|0);
      if ($35) {
       $$040$i$i = 0;
      } else {
       $36 = ((($$0$i$i)) + -4|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($34>>>0)<($37>>>0);
       if ($38) {
        $39 = (($$0$i$i) + ($34)|0);
        $40 = HEAP8[$39>>0]|0;
        $41 = ($40<<24>>24)==(0);
        if ($41) {
         $$040$i$i = 0;
        } else {
         $42 = $40&255;
         $43 = (($42) + -1)|0;
         $44 = HEAP32[$33>>2]|0;
         $45 = (($44) + -4)|0;
         $46 = (($45>>>0) / 12)&-1;
         $47 = ($43>>>0)<($46>>>0);
         $48 = (((($$0$i14)) + 4|0) + (($43*12)|0)|0);
         if ($47) {
          $49 = HEAP32[$48>>2]|0;
          $50 = HEAP32[$30>>2]|0;
          $51 = ($49|0)==($50|0);
          $spec$select$i$i = $51 ? $48 : 0;
          $$040$i$i = $spec$select$i$i;
         } else {
          $$040$i$i = 0;
         }
        }
       } else {
        $$040$i$i = 0;
       }
      }
      $52 = (_g_atomic_pointer_get($29)|0);
      $53 = ($$0$i$i|0)==($52|0);
      if ($53) {
       break;
      } else {
       $$0$i$i = $29;
      }
     }
     $54 = ($$040$i$i|0)==(0|0);
     if ($54) {
      $$sroa$0$0 = 0;
     } else {
      $55 = ((($$040$i$i)) + 4|0);
      $56 = HEAP32[$55>>2]|0;
      $$sroa$0$0 = $56;
     }
    }
    $57 = (_g_atomic_pointer_get($27)|0);
    $58 = ($$0$i14|0)==($27|0);
    if ($58) {
     $$sroa$0$2 = $$sroa$0$0;
     break;
    } else {
     $$0$i14 = $27;
    }
   }
   $59 = $$sroa$0$2;
   STACKTOP = sp;return ($59|0);
  }
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,129228,$vararg_buffer);
 $$sroa$0$2 = 0;
 $59 = $$sroa$0$2;
 STACKTOP = sp;return ($59|0);
}
function _g_type_class_peek($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 131072;
 $11 = ($10|0)==(0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = HEAP32[$$0$i>>2]|0;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = ((($$0$i)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(5);
 if (!($18)) {
  $$0 = 0;
  return ($$0|0);
 }
 $19 = HEAP32[$14>>2]|0;
 $20 = ((($19)) + 32|0);
 $21 = HEAP32[$20>>2]|0;
 $$0 = $21;
 return ($$0|0);
}
function _g_type_class_peek_static($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 131072;
 $11 = ($10|0)==(0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = HEAP32[$$0$i>>2]|0;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = ((($$0$i)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i)) + 20|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 8|0);
 $20 = (_g_atomic_int_get($19)|0);
 $21 = ($20|0)==(5);
 if (!($21)) {
  $$0 = 0;
  return ($$0|0);
 }
 $22 = HEAP32[$17>>2]|0;
 $23 = ((($22)) + 32|0);
 $24 = HEAP32[$23>>2]|0;
 $$0 = $24;
 return ($$0|0);
}
function _g_type_class_peek_parent($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i13 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 131072;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    $16 = ((($$0$i)) + 44|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0);
    if (!($18)) {
     $19 = ($17>>>0)>(1020);
     if ($19) {
      $20 = $17 & -4;
      $21 = $20;
      $$0$i13 = $21;
     } else {
      $22 = $17 >>> 2;
      $23 = (143760 + ($22<<2)|0);
      $24 = HEAP32[$23>>2]|0;
      $$0$i13 = $24;
     }
     $25 = ((($$0$i13)) + 20|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ((($26)) + 32|0);
     $28 = HEAP32[$27>>2]|0;
     $$0 = $28;
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 }
 $29 = ((($$0$i)) + 44|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($30|0)==(0);
 if ($31) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,129292,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_name($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37126]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  _g_assertion_message_expr(0,126118,3486,129356,128473);
  // unreachable;
 }
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if ($9) {
  $13 = 0;
  return ($13|0);
 }
 $10 = ((($$0$i)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_g_quark_to_string($11)|0);
 $13 = $12;
 return ($13|0);
}
function _g_type_from_name($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[37137]|0;
 $2 = (_g_hash_table_lookup($1,$0)|0);
 $3 = $2;
 return ($3|0);
}
function _g_type_parent($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $10 = 0;
  return ($10|0);
 }
 $8 = ((($$0$i)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9;
 return ($10|0);
}
function _g_type_depth($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $12 = 0;
  return ($12|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 255;
 $11 = (($10) + 1)|0;
 $12 = $11;
 return ($12|0);
}
function _g_type_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$us$i = 0, $$0$i15 = 0, $$0$shrunk$i$i = 0, $$0$us$i = 0, $$027$i$i$i = 0, $$030$i$i$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $$128$i$i$i = 0, $$131$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $or$cond = 0, $or$cond5$i$i = 0, $phitmp = 0, $phitmp18 = 0, $spec$select$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 if ($2) {
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($1>>>0)>(1020);
 if ($9) {
  $10 = $1 & -4;
  $11 = $10;
  $$0$i15 = $11;
 } else {
  $12 = $1 >>> 2;
  $13 = (143760 + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $$0$i15 = $14;
 }
 $15 = ($$0$i|0)!=(0|0);
 $16 = ($$0$i15|0)!=(0|0);
 $or$cond = $15 & $16;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i15)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 & 255;
 $20 = ((($$0$i)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $21 & 255;
 $23 = ($22>>>0)<($19>>>0);
 if ($23) {
  label = 11;
 } else {
  $24 = (($22) - ($19))|0;
  $25 = (((($$0$i)) + 40|0) + ($24<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($$0$i15)) + 40|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($26|0)==($28|0);
  if ($29) {
   $96 = 1;
  } else {
   label = 11;
  }
 }
 L17: do {
  if ((label|0) == 11) {
   $30 = $21 & 262144;
   $31 = ($30|0)==(0);
   if ($31) {
    $32 = (((($$0$i)) + 40|0) + ($22<<2)|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ($33|0)==(8);
    $$0$shrunk$i$i = 0;$72 = $34;
   } else {
    $35 = (((($$0$i15)) + 40|0) + ($19<<2)|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)==(8);
    $38 = (((($$0$i)) + 40|0) + ($22<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ($39|0)==(8);
    if ($37) {
     $41 = ((($$0$i)) + 32|0);
     $42 = (_g_atomic_pointer_get($41)|0);
     $43 = ((($$0$i15)) + 32|0);
     $44 = ((($$0$i15)) + 40|0);
     $$0$us$i = $41;
     while(1) {
      $45 = ($$0$us$i|0)==(0|0);
      if ($45) {
       $$039$i$us$i = 0;
      } else {
       $46 = (_g_atomic_pointer_get($43)|0);
       $47 = ((($$0$us$i)) + -4|0);
       $$0$i$us$i = $43;
       while(1) {
        $48 = HEAP32[$$0$us$i>>2]|0;
        $49 = ($$0$i$us$i|0)==(0|0);
        if ($49) {
         $$040$i$us$i = 0;
        } else {
         $50 = ((($$0$i$us$i)) + -4|0);
         $51 = HEAP32[$50>>2]|0;
         $52 = ($48>>>0)<($51>>>0);
         if ($52) {
          $53 = (($$0$i$us$i) + ($48)|0);
          $54 = HEAP8[$53>>0]|0;
          $55 = ($54<<24>>24)==(0);
          if ($55) {
           $$040$i$us$i = 0;
          } else {
           $56 = $54&255;
           $57 = (($56) + -1)|0;
           $58 = HEAP32[$47>>2]|0;
           $59 = (($58) + -4)|0;
           $60 = (($59>>>0) / 12)&-1;
           $61 = ($57>>>0)<($60>>>0);
           $62 = (((($$0$us$i)) + 4|0) + (($57*12)|0)|0);
           if ($61) {
            $63 = HEAP32[$62>>2]|0;
            $64 = HEAP32[$44>>2]|0;
            $65 = ($63|0)==($64|0);
            $spec$select$i$us$i = $65 ? $62 : 0;
            $$040$i$us$i = $spec$select$i$us$i;
           } else {
            $$040$i$us$i = 0;
           }
          }
         } else {
          $$040$i$us$i = 0;
         }
        }
        $66 = (_g_atomic_pointer_get($43)|0);
        $67 = ($$0$i$us$i|0)==($66|0);
        if ($67) {
         $$039$i$us$i = $$040$i$us$i;
         break;
        } else {
         $$0$i$us$i = $43;
        }
       }
      }
      $68 = (_g_atomic_pointer_get($41)|0);
      $69 = ($$0$us$i|0)==($41|0);
      if ($69) {
       break;
      } else {
       $$0$us$i = $41;
      }
     }
     $70 = ($$039$i$us$i|0)!=(0|0);
     $phitmp18 = $70&1;
     $$0$shrunk$i$i = $phitmp18;$72 = $40;
    } else {
     $$0$shrunk$i$i = 0;$72 = $40;
    }
   }
   $71 = ($$0$shrunk$i$i|0)==(0);
   $or$cond5$i$i = $72 & $71;
   if ($or$cond5$i$i) {
    $73 = ((($$0$i15)) + 40|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = HEAP32[$20>>2]|0;
    $76 = $75 & 255;
    $77 = (((($$0$i)) + 40|0) + ($76<<2)|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = ($78|0)==(8);
    if ($79) {
     $80 = $75 >>> 8;
     $81 = $80 & 511;
     $82 = ($81|0)==(0);
     if ($82) {
      $96 = 0;
     } else {
      $83 = ((($$0$i)) + 36|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = ((($84)) + -4|0);
      $$027$i$i$i = $85;$$030$i$i$i = $81;
      while(1) {
       $86 = (($$030$i$i$i) + 1)|0;
       $87 = $86 >>> 1;
       $88 = (($$027$i$i$i) + ($87<<2)|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = ($89|0)==($74|0);
       $91 = ($89>>>0)<($74>>>0);
       $92 = (($$030$i$i$i) - ($87))|0;
       $93 = (($87) + -1)|0;
       $$131$i$i$i = $91 ? $92 : $93;
       if ($90) {
        $96 = 1;
        break L17;
       }
       $$128$i$i$i = $91 ? $88 : $$027$i$i$i;
       $94 = ($$131$i$i$i|0)==(0);
       if ($94) {
        $96 = 0;
        break;
       } else {
        $$027$i$i$i = $$128$i$i$i;$$030$i$i$i = $$131$i$i$i;
       }
      }
     }
    } else {
     $96 = 0;
    }
   } else {
    $96 = $$0$shrunk$i$i;
   }
  }
 } while(0);
 $95 = ($96|0)!=(0);
 $phitmp = $95&1;
 $$0 = $phitmp;
 return ($$0|0);
}
function _g_type_fundamental_next() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[29606]|0;
 $1 = $0 << 2;
 $2 = ($1>>>0)<(1021);
 $3 = $2 ? $1 : 0;
 return ($3|0);
}
function _g_type_fundamental($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $13 = 0;
  return ($13|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 255;
 $11 = (((($$0$i)) + 40|0) + ($10<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12;
 return ($13|0);
}
function _g_type_check_class_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3>>>0)>(1020);
 if ($4) {
  $5 = $3 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $3 >>> 2;
  $8 = (143760 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ($1>>>0)>(1020);
 if ($10) {
  $11 = $1 & -4;
  $12 = $11;
  $$0$i15 = $12;
 } else {
  $13 = $1 >>> 2;
  $14 = (143760 + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $$0$i15 = $15;
 }
 $16 = ($$0$i|0)==(0|0);
 if ($16) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 & 131072;
 $20 = ($19|0)!=(0);
 $21 = ($$0$i15|0)!=(0|0);
 $or$cond = $21 & $20;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $22 = ((($$0$i15)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 255;
 $25 = $18 & 255;
 $26 = ($25>>>0)<($24>>>0);
 if (!($26)) {
  $27 = (($25) - ($24))|0;
  $28 = (((($$0$i)) + 40|0) + ($27<<2)|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($$0$i15)) + 40|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $$0 = 0;
 return ($$0|0);
}
function _g_type_check_instance_cast($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i31 = 0, $$0$i$i35 = 0, $$0$i$us$i = 0, $$0$i28 = 0, $$0$i29 = 0, $$0$i33 = 0, $$0$i37 = 0, $$0$us$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $$pre = 0, $$pre42 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select$i$us$i = 0;
 var $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  STACKTOP = sp;return ($0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $95 = ($1|0)==(0);
  if ($95) {
   $$0$i28 = 126108;
  } else {
   $96 = ($1>>>0)>(1020);
   if ($96) {
    $97 = $1 & -4;
    $98 = $97;
    $$0$i$i = $98;
   } else {
    $99 = $1 >>> 2;
    $100 = (143760 + ($99<<2)|0);
    $101 = HEAP32[$100>>2]|0;
    $$0$i$i = $101;
   }
   $102 = ($$0$i$i|0)==(0|0);
   if ($102) {
    $$0$i28 = 126098;
   } else {
    $103 = ((($$0$i$i)) + 24|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = (_g_quark_to_string($104)|0);
    $$0$i28 = $105;
   }
  }
  HEAP32[$vararg_buffer6>>2] = $$0$i28;
  _g_log(0,16,129450,$vararg_buffer6);
  STACKTOP = sp;return ($0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5>>>0)>(1020);
 if ($6) {
  $7 = $5 & -4;
  $8 = $7;
  $$0$i = $8;
 } else {
  $9 = $5 >>> 2;
  $10 = (143760 + ($9<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $$0$i = $11;
 }
 $12 = ($$0$i|0)==(0|0);
 if ($12) {
  $24 = 0;
 } else {
  $13 = ((($$0$i)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = $14 & 262144;
  $16 = ($15|0)!=(0);
  $24 = $16;
 }
 $17 = ($1>>>0)>(1020);
 if ($17) {
  $18 = $1 & -4;
  $19 = $18;
  $$0$i29 = $19;
 } else {
  $20 = $1 >>> 2;
  $21 = (143760 + ($20<<2)|0);
  $22 = HEAP32[$21>>2]|0;
  $$0$i29 = $22;
 }
 $23 = ($$0$i29|0)!=(0|0);
 $or$cond = $24 & $23;
 do {
  if ($or$cond) {
   $25 = ((($$0$i29)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $26 & 255;
   $28 = ((($$0$i)) + 12|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = $29 & 255;
   $31 = ($30>>>0)<($27>>>0);
   if (!($31)) {
    $32 = (($30) - ($27))|0;
    $33 = (((($$0$i)) + 40|0) + ($32<<2)|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ((($$0$i29)) + 40|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($34|0)==($36|0);
    if ($37) {
     STACKTOP = sp;return ($0|0);
    }
   }
   $38 = $29 & 262144;
   $39 = ($38|0)==(0);
   if ($39) {
    $74 = $5;
   } else {
    $40 = (((($$0$i29)) + 40|0) + ($27<<2)|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($41|0)==(8);
    if ($42) {
     $43 = ((($$0$i)) + 32|0);
     $44 = (_g_atomic_pointer_get($43)|0);
     $45 = ((($$0$i29)) + 32|0);
     $46 = ((($$0$i29)) + 40|0);
     $$0$us$i = $43;
     while(1) {
      $47 = ($$0$us$i|0)==(0|0);
      if ($47) {
       $$039$i$us$i = 0;
      } else {
       $48 = (_g_atomic_pointer_get($45)|0);
       $49 = ((($$0$us$i)) + -4|0);
       $$0$i$us$i = $45;
       while(1) {
        $50 = HEAP32[$$0$us$i>>2]|0;
        $51 = ($$0$i$us$i|0)==(0|0);
        if ($51) {
         $$040$i$us$i = 0;
        } else {
         $52 = ((($$0$i$us$i)) + -4|0);
         $53 = HEAP32[$52>>2]|0;
         $54 = ($50>>>0)<($53>>>0);
         if ($54) {
          $55 = (($$0$i$us$i) + ($50)|0);
          $56 = HEAP8[$55>>0]|0;
          $57 = ($56<<24>>24)==(0);
          if ($57) {
           $$040$i$us$i = 0;
          } else {
           $58 = $56&255;
           $59 = (($58) + -1)|0;
           $60 = HEAP32[$49>>2]|0;
           $61 = (($60) + -4)|0;
           $62 = (($61>>>0) / 12)&-1;
           $63 = ($59>>>0)<($62>>>0);
           $64 = (((($$0$us$i)) + 4|0) + (($59*12)|0)|0);
           if ($63) {
            $65 = HEAP32[$64>>2]|0;
            $66 = HEAP32[$46>>2]|0;
            $67 = ($65|0)==($66|0);
            $spec$select$i$us$i = $67 ? $64 : 0;
            $$040$i$us$i = $spec$select$i$us$i;
           } else {
            $$040$i$us$i = 0;
           }
          }
         } else {
          $$040$i$us$i = 0;
         }
        }
        $68 = (_g_atomic_pointer_get($45)|0);
        $69 = ($$0$i$us$i|0)==($68|0);
        if ($69) {
         $$039$i$us$i = $$040$i$us$i;
         break;
        } else {
         $$0$i$us$i = $45;
        }
       }
      }
      $70 = (_g_atomic_pointer_get($43)|0);
      $71 = ($$0$us$i|0)==($43|0);
      if ($71) {
       break;
      } else {
       $$0$us$i = $43;
      }
     }
     $72 = ($$039$i$us$i|0)==(0|0);
     if ($72) {
      $$pre = HEAP32[$0>>2]|0;
      $$pre42 = HEAP32[$$pre>>2]|0;
      $74 = $$pre42;
      break;
     } else {
      STACKTOP = sp;return ($0|0);
     }
    } else {
     $74 = $5;
    }
   }
  } else {
   $74 = $5;
  }
 } while(0);
 $73 = ($74|0)==(0);
 if ($73) {
  $$0$i37 = 126108;
 } else {
  $75 = ($74>>>0)>(1020);
  if ($75) {
   $76 = $74 & -4;
   $77 = $76;
   $$0$i$i35 = $77;
  } else {
   $78 = $74 >>> 2;
   $79 = (143760 + ($78<<2)|0);
   $80 = HEAP32[$79>>2]|0;
   $$0$i$i35 = $80;
  }
  $81 = ($$0$i$i35|0)==(0|0);
  if ($81) {
   $$0$i37 = 126098;
  } else {
   $82 = ((($$0$i$i35)) + 24|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = (_g_quark_to_string($83)|0);
   $$0$i37 = $84;
  }
 }
 $85 = ($1|0)==(0);
 if ($85) {
  $$0$i33 = 126108;
 } else {
  if ($17) {
   $86 = $1 & -4;
   $87 = $86;
   $$0$i$i31 = $87;
  } else {
   $88 = $1 >>> 2;
   $89 = (143760 + ($88<<2)|0);
   $90 = HEAP32[$89>>2]|0;
   $$0$i$i31 = $90;
  }
  $91 = ($$0$i$i31|0)==(0|0);
  if ($91) {
   $$0$i33 = 126098;
  } else {
   $92 = ((($$0$i$i31)) + 24|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = (_g_quark_to_string($93)|0);
   $$0$i33 = $94;
  }
 }
 if ($24) {
  HEAP32[$vararg_buffer>>2] = $$0$i37;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i33;
  _g_log(0,16,129368,$vararg_buffer);
  STACKTOP = sp;return ($0|0);
 } else {
  HEAP32[$vararg_buffer2>>2] = $$0$i37;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $$0$i33;
  _g_log(0,16,129399,$vararg_buffer2);
  STACKTOP = sp;return ($0|0);
 }
 return (0)|0;
}
function _g_type_check_class_cast($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i30 = 0, $$0$i$i34 = 0, $$0$i27 = 0, $$0$i28 = 0, $$0$i32 = 0, $$0$i36 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $56 = ($1|0)==(0);
  if ($56) {
   $$0$i27 = 126108;
  } else {
   $57 = ($1>>>0)>(1020);
   if ($57) {
    $58 = $1 & -4;
    $59 = $58;
    $$0$i$i = $59;
   } else {
    $60 = $1 >>> 2;
    $61 = (143760 + ($60<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $$0$i$i = $62;
   }
   $63 = ($$0$i$i|0)==(0|0);
   if ($63) {
    $$0$i27 = 126098;
   } else {
    $64 = ((($$0$i$i)) + 24|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (_g_quark_to_string($65)|0);
    $$0$i27 = $66;
   }
  }
  HEAP32[$vararg_buffer6>>2] = $$0$i27;
  _g_log(0,16,129579,$vararg_buffer6);
  STACKTOP = sp;return ($0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3>>>0)>(1020);
 if ($4) {
  $5 = $3 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $3 >>> 2;
  $8 = (143760 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ($$0$i|0)==(0|0);
 if ($10) {
  $22 = 0;
 } else {
  $11 = ((($$0$i)) + 12|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $12 & 131072;
  $14 = ($13|0)!=(0);
  $22 = $14;
 }
 $15 = ($1>>>0)>(1020);
 if ($15) {
  $16 = $1 & -4;
  $17 = $16;
  $$0$i28 = $17;
 } else {
  $18 = $1 >>> 2;
  $19 = (143760 + ($18<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $$0$i28 = $20;
 }
 $21 = ($$0$i28|0)!=(0|0);
 $or$cond = $22 & $21;
 if ($or$cond) {
  $23 = ((($$0$i28)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24 & 255;
  $26 = ((($$0$i)) + 12|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = $27 & 255;
  $29 = ($28>>>0)<($25>>>0);
  if (!($29)) {
   $30 = (($28) - ($25))|0;
   $31 = (((($$0$i)) + 40|0) + ($30<<2)|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($$0$i28)) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($32|0)==($34|0);
   if ($35) {
    STACKTOP = sp;return ($0|0);
   }
  }
 }
 $36 = ($3|0)==(0);
 if ($36) {
  $$0$i36 = 126108;
 } else {
  if ($4) {
   $37 = $3 & -4;
   $38 = $37;
   $$0$i$i34 = $38;
  } else {
   $39 = $3 >>> 2;
   $40 = (143760 + ($39<<2)|0);
   $41 = HEAP32[$40>>2]|0;
   $$0$i$i34 = $41;
  }
  $42 = ($$0$i$i34|0)==(0|0);
  if ($42) {
   $$0$i36 = 126098;
  } else {
   $43 = ((($$0$i$i34)) + 24|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (_g_quark_to_string($44)|0);
   $$0$i36 = $45;
  }
 }
 $46 = ($1|0)==(0);
 if ($46) {
  $$0$i32 = 126108;
 } else {
  if ($15) {
   $47 = $1 & -4;
   $48 = $47;
   $$0$i$i30 = $48;
  } else {
   $49 = $1 >>> 2;
   $50 = (143760 + ($49<<2)|0);
   $51 = HEAP32[$50>>2]|0;
   $$0$i$i30 = $51;
  }
  $52 = ($$0$i$i30|0)==(0|0);
  if ($52) {
   $$0$i32 = 126098;
  } else {
   $53 = ((($$0$i$i30)) + 24|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (_g_quark_to_string($54)|0);
   $$0$i32 = $55;
  }
 }
 if ($22) {
  HEAP32[$vararg_buffer>>2] = $$0$i36;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i32;
  _g_log(0,16,129492,$vararg_buffer);
  STACKTOP = sp;return ($0|0);
 } else {
  HEAP32[$vararg_buffer2>>2] = $$0$i36;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $$0$i32;
  _g_log(0,16,129529,$vararg_buffer2);
  STACKTOP = sp;return ($0|0);
 }
 return (0)|0;
}
function _g_type_check_is_value_type($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_type_check_is_value_type_U($0)|0);
 return ($1|0);
}
function _type_check_is_value_type_U($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i43 = 0, $$03259 = 0, $$033$i = 0, $$034 = 0, $$034$idx = 0, $$034$idx$val = 0, $$036$i = 0, $$134$i = 0, $$137$i = 0, $$2$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp = 0, $phitmp49 = 0, $phitmp50 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 524288;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $$0 = 1;
  return ($$0|0);
 }
 $$034 = $$0$i;
 L11: while(1) {
  $12 = ((($$034)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = HEAP32[$$034>>2]|0;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = HEAP32[$12>>2]|0;
    $18 = HEAP32[$17>>2]|0;
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     label = 10;
     break;
    }
   }
  }
  $40 = ((($$034)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = $41 & 255;
  $43 = (((($$034)) + 40|0) + ($42<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)!=(8);
  $46 = $41 & 130816;
  $47 = ($46|0)==(0);
  $or$cond = $45 | $47;
  if ($or$cond) {
   $$0 = 0;
   label = 27;
   break;
  }
  $48 = ((($$034)) + 36|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = $41 >>> 8;
  $51 = $50 & 511;
  $$03259 = 0;
  while(1) {
   $54 = (($49) + ($$03259<<2)|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ($55>>>0)>(1020);
   if ($56) {
    $57 = $55 & -4;
    $58 = $57;
    $$0$i43 = $58;
   } else {
    $59 = $55 >>> 2;
    $60 = (143760 + ($59<<2)|0);
    $61 = HEAP32[$60>>2]|0;
    $$0$i43 = $61;
   }
   $62 = ((($$0$i43)) + 12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 & 262144;
   $65 = ($64|0)==(0);
   $53 = (($$03259) + 1)|0;
   if (!($65)) {
    break;
   }
   $52 = ($53>>>0)<($51>>>0);
   if ($52) {
    $$03259 = $53;
   } else {
    $$0 = 0;
    label = 27;
    break L11;
   }
  }
  if ($56) {
   $66 = $55 & -4;
   $67 = $66;
   $$2$ph = $67;
  } else {
   $68 = $55 >>> 2;
   $69 = (143760 + ($68<<2)|0);
   $70 = HEAP32[$69>>2]|0;
   $$2$ph = $70;
  }
  $71 = ($$2$ph|0)==(0|0);
  if ($71) {
   $$0 = 0;
   label = 27;
   break;
  } else {
   $$034 = $$2$ph;
  }
 }
 if ((label|0) == 10) {
  $21 = HEAP32[37126]|0;
  $$034$idx = ((($$034)) + 28|0);
  $$034$idx$val = HEAP32[$$034$idx>>2]|0;
  $22 = ($21|0)!=(0);
  $23 = ($$034$idx$val|0)!=(0|0);
  $or$cond$i = $22 & $23;
  if (!($or$cond$i)) {
   $$0 = 1;
   return ($$0|0);
  }
  $24 = HEAP32[$$034$idx$val>>2]|0;
  $25 = ($24|0)==(0);
  if ($25) {
   $$0 = 1;
   return ($$0|0);
  }
  $26 = ((($$034$idx$val)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + -8|0);
  $$033$i = $28;$$036$i = $24;
  while(1) {
   $29 = (($$036$i) + 1)|0;
   $30 = $29 >>> 1;
   $31 = (($$033$i) + ($30<<3)|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($32|0)==($21|0);
   if ($33) {
    break;
   }
   $34 = ($32>>>0)<($21>>>0);
   $35 = (($$036$i) - ($30))|0;
   $36 = (($30) + -1)|0;
   $$137$i = $34 ? $35 : $36;
   $$134$i = $34 ? $31 : $$033$i;
   $37 = ($$137$i|0)==(0);
   if ($37) {
    $$0 = 1;
    label = 27;
    break;
   } else {
    $$033$i = $$134$i;$$036$i = $$137$i;
   }
  }
  if ((label|0) == 27) {
   return ($$0|0);
  }
  $38 = (((($$033$i) + ($30<<3)|0)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $phitmp49 = $39 >>> 5;
  $phitmp = $phitmp49 & 1;
  $phitmp50 = $phitmp ^ 1;
  $$0 = $phitmp50;
  return ($$0|0);
 }
 else if ((label|0) == 27) {
  return ($$0|0);
 }
 return (0)|0;
}
function _g_type_value_table_peek($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i54 = 0, $$0$i55 = 0, $$044$lcssa = 0, $$04482 = 0, $$04496 = 0, $$04590 = 0, $$04995 = 0, $$251$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $cond = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (143760 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $cond = ($$0$i|0)==(0|0);
 L5: do {
  if ($cond) {
   $$044$lcssa = $0;
   label = 24;
  } else {
   $7 = HEAP32[$$0$i>>2]|0;
   $8 = ($7|0)==(0);
   if (!($8)) {
    $9 = ((($$0$i)) + 12|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = $10 & 524288;
    $12 = ($11|0)==(0);
    if (!($12)) {
     $13 = ((($$0$i)) + 20|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = HEAP32[$14>>2]|0;
     $$0 = $15;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $$04496 = $0;$$04995 = $$0$i;
   L12: while(1) {
    $16 = ((($$04995)) + 20|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    if ($18) {
     $$04482 = $$04496;
     break L5;
    }
    $19 = HEAP32[$$04995>>2]|0;
    $20 = ($19|0)==(0);
    if ($20) {
     $$04482 = $$04496;
     break L5;
    }
    $21 = HEAP32[$16>>2]|0;
    $22 = HEAP32[$21>>2]|0;
    $23 = HEAP32[$22>>2]|0;
    $24 = ($23|0)==(0|0);
    if (!($24)) {
     label = 23;
     break;
    }
    $25 = ((($$04995)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $26 & 255;
    $28 = (((($$04995)) + 40|0) + ($27<<2)|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($29|0)!=(8);
    $31 = $26 & 130816;
    $32 = ($31|0)==(0);
    $or$cond = $30 | $32;
    if ($or$cond) {
     $$0 = 0;
     label = 32;
     break;
    }
    $33 = ((($$04995)) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $26 >>> 8;
    $36 = $35 & 511;
    $$04590 = 0;
    while(1) {
     $39 = (($34) + ($$04590<<2)|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40>>>0)>(1020);
     if ($41) {
      $42 = $40 & -4;
      $43 = $42;
      $$0$i55 = $43;
     } else {
      $44 = $40 >>> 2;
      $45 = (143760 + ($44<<2)|0);
      $46 = HEAP32[$45>>2]|0;
      $$0$i55 = $46;
     }
     $47 = ((($$0$i55)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = $48 & 262144;
     $50 = ($49|0)==(0);
     $38 = (($$04590) + 1)|0;
     if (!($50)) {
      break;
     }
     $37 = ($38>>>0)<($36>>>0);
     if ($37) {
      $$04590 = $38;
     } else {
      $$0 = 0;
      label = 32;
      break L12;
     }
    }
    if ($41) {
     $51 = $40 & -4;
     $52 = $51;
     $$251$ph = $52;
    } else {
     $53 = $40 >>> 2;
     $54 = (143760 + ($53<<2)|0);
     $55 = HEAP32[$54>>2]|0;
     $$251$ph = $55;
    }
    $56 = ($$251$ph|0)==(0|0);
    if ($56) {
     $$044$lcssa = $40;
     label = 24;
     break L5;
    } else {
     $$04496 = $40;$$04995 = $$251$ph;
    }
   }
   if ((label|0) == 23) {
    $57 = HEAP32[$16>>2]|0;
    $58 = HEAP32[$57>>2]|0;
    STACKTOP = sp;return ($58|0);
   }
   else if ((label|0) == 32) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ((label|0) == 24) {
  HEAP32[$vararg_buffer>>2] = $$044$lcssa;
  _g_log(0,16,129675,$vararg_buffer);
  $$04482 = $$044$lcssa;
 }
 $59 = ($$04482|0)==(0);
 if ($59) {
  $$0$i54 = 126108;
 } else {
  $60 = ($$04482>>>0)>(1020);
  if ($60) {
   $61 = $$04482 & -4;
   $62 = $61;
   $$0$i$i = $62;
  } else {
   $63 = $$04482 >>> 2;
   $64 = (143760 + ($63<<2)|0);
   $65 = HEAP32[$64>>2]|0;
   $$0$i$i = $65;
  }
  $66 = ($$0$i$i|0)==(0|0);
  if ($66) {
   $$0$i54 = 126098;
  } else {
   $67 = ((($$0$i$i)) + 24|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (_g_quark_to_string($68)|0);
   $$0$i54 = $69;
  }
 }
 HEAP32[$vararg_buffer1>>2] = $$0$i54;
 _g_log(0,16,129736,$vararg_buffer1);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __g_type_boxed_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ((($$0$i)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (ftCall_ii($11|0,$1)|0);
 return ($12|0);
}
function __g_type_boxed_free($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ((($$0$i)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 ftCall_vi($11|0,$1);
 return;
}
function __g_type_boxed_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ((($$0$i)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 4|0);
 HEAP32[$11>>2] = $1;
 $12 = HEAP32[$9>>2]|0;
 $13 = ((($12)) + 8|0);
 HEAP32[$13>>2] = $2;
 return;
}
function _gobject_init() {
 var $$0$i = 0, $$0$i22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp + 24|0;
 $0 = sp + 28|0;
 $1 = sp;
 $2 = (_g_getenv(129807)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  ;HEAP32[$1>>2]=HEAP32[1856>>2]|0;HEAP32[$1+4>>2]=HEAP32[1856+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[1856+8>>2]|0;HEAP32[$1+12>>2]=HEAP32[1856+12>>2]|0;HEAP32[$1+16>>2]=HEAP32[1856+16>>2]|0;HEAP32[$1+20>>2]=HEAP32[1856+20>>2]|0;
  (_g_parse_debug_string($2,$1,3)|0);
 }
 $4 = (_g_quark_from_static_string(129821)|0);
 HEAP32[37126] = $4;
 $5 = (_g_quark_from_static_string(129849)|0);
 HEAP32[37125] = $5;
 (_g_quark_from_static_string(129878)|0);
 $6 = (_g_hash_table_new(294,295)|0);
 HEAP32[37137] = $6;
 HEAP32[35940] = 0;
 $7 = (_g_intern_static_string(129912)|0);
 $8 = HEAP32[29606]|0;
 $9 = ($8|0)==(1);
 if ($9) {
  HEAP32[29606] = 2;
 }
 $10 = (_type_node_any_new_W(0,4,$7,0,0)|0);
 $11 = ((($10)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12 & 255;
 $14 = (((($10)) + 40|0) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($10)) + 40|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($15|0)==($17|0);
 do {
  if ($18) {
   $$0$i = $10;
  } else {
   $19 = ($15>>>0)>(1020);
   if ($19) {
    $20 = $15 & -4;
    $21 = $20;
    $$0$i = $21;
    break;
   } else {
    $22 = $15 >>> 2;
    $23 = (143760 + ($22<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $$0$i = $24;
    break;
   }
  }
 } while(0);
 $25 = ($$0$i|0)==(0|0);
 $26 = ((($$0$i)) + -4|0);
 $27 = $25 ? 0 : $26;
 HEAP32[$27>>2] = 0;
 $28 = ($17|0)==(4);
 if (!($28)) {
  _g_assertion_message_expr(0,126118,4585,129917,129930);
  // unreachable;
 }
 dest=$0; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $29 = (_g_intern_static_string(129950)|0);
 $30 = HEAP32[29606]|0;
 $31 = ($30|0)==(2);
 if ($31) {
  HEAP32[29606] = 3;
 }
 $32 = (_type_node_any_new_W(0,8,$29,0,4)|0);
 $33 = ((($32)) + 12|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = $34 & 255;
 $36 = (((($32)) + 40|0) + ($35<<2)|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ((($32)) + 40|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ($37|0)==($39|0);
 do {
  if ($40) {
   $$0$i22 = $32;
  } else {
   $41 = ($37>>>0)>(1020);
   if ($41) {
    $42 = $37 & -4;
    $43 = $42;
    $$0$i22 = $43;
    break;
   } else {
    $44 = $37 >>> 2;
    $45 = (143760 + ($44<<2)|0);
    $46 = HEAP32[$45>>2]|0;
    $$0$i22 = $46;
    break;
   }
  }
 } while(0);
 $47 = ($$0$i22|0)==(0|0);
 $48 = ((($$0$i22)) + -4|0);
 $49 = $47 ? 0 : $48;
 HEAP32[$49>>2] = 4;
 _type_data_make_W($32,$0,0);
 $50 = ($39|0)==(8);
 if (!($50)) {
  _g_assertion_message_expr(0,126118,4593,129917,129961);
  // unreachable;
 }
 __g_value_c_init();
 $51 = (_g_type_plugin_get_type()|0);
 $52 = ($51|0)==(-1);
 if (!($52)) {
  __g_value_types_init();
  __g_enum_types_init();
  __g_boxed_type_init();
  __g_param_type_init();
  __g_object_type_init();
  __g_param_spec_types_init();
  __g_signal_init();
  STACKTOP = sp;return;
 }
 _g_log(0,4,129986,$vararg_buffer);
 while(1) {
 }
}
function _g_type_class_add_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i27 = 0, $$0$i29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if (!($9)) {
  $10 = ((($$0$i)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 262144;
  $13 = ($12|0)==(0);
  if (!($13)) {
   $14 = ((($$0$i)) + 20|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP32[$14>>2]|0;
    $18 = ((($17)) + 32|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==($0|0);
    if ($20) {
     $31 = ((($$0$i)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==(0);
     if (!($33)) {
      $34 = ($32>>>0)>(1020);
      if ($34) {
       $35 = $32 & -4;
       $36 = $35;
       $$0$i27 = $36;
      } else {
       $37 = $32 >>> 2;
       $38 = (143760 + ($37<<2)|0);
       $39 = HEAP32[$38>>2]|0;
       $$0$i27 = $39;
      }
      $40 = HEAP32[$14>>2]|0;
      $41 = ((($40)) + 38|0);
      $42 = HEAP16[$41>>1]|0;
      $43 = ((($$0$i27)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ((($44)) + 38|0);
      $46 = HEAP16[$45>>1]|0;
      $47 = ($42<<16>>16)==($46<<16>>16);
      if (!($47)) {
       _g_log(0,16,130097,$vararg_buffer1);
       STACKTOP = sp;return;
      }
     }
     $48 = HEAP32[$14>>2]|0;
     $49 = ((($48)) + 38|0);
     $50 = HEAP16[$49>>1]|0;
     $51 = $50&65535;
     $52 = (($1) + 7)|0;
     $53 = (($52) + ($51))|0;
     $54 = $53 & -8;
     $55 = ($54>>>0)<(65536);
     if (!($55)) {
      _g_assertion_message_expr(0,126118,4778,130164,130189);
      // unreachable;
     }
     $56 = $54&65535;
     $57 = HEAP32[$14>>2]|0;
     $58 = ((($57)) + 38|0);
     HEAP16[$58>>1] = $56;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $21 = ($2|0)==(0);
 if ($21) {
  $$0$i29 = 126108;
 } else {
  if ($3) {
   $22 = $2 & -4;
   $23 = $22;
   $$0$i$i = $23;
  } else {
   $24 = $2 >>> 2;
   $25 = (143760 + ($24<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $$0$i$i = $26;
  }
  $27 = ($$0$i$i|0)==(0|0);
  if ($27) {
   $$0$i29 = 126098;
  } else {
   $28 = ((($$0$i$i)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (_g_quark_to_string($29)|0);
   $$0$i29 = $30;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i29;
 _g_log(0,16,130030,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_type_add_instance_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i12 = 0, $$0$i11 = 0, $$0$i14 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 393216;
  $12 = ($11|0)==(393216);
  if ($12) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    $26 = ((($$0$i)) + 4|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ($27|0)==(0|0);
    if ($28) {
     $$0 = $1;
     STACKTOP = sp;return ($$0|0);
    }
    $29 = ($0|0)==(0);
    if ($29) {
     $$0$i11 = 126108;
    } else {
     if ($2) {
      $30 = $0 & -4;
      $31 = $30;
      $$0$i$i = $31;
     } else {
      $32 = $0 >>> 2;
      $33 = (143760 + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $$0$i$i = $34;
     }
     $35 = ($$0$i$i|0)==(0|0);
     if ($35) {
      $$0$i11 = 126098;
     } else {
      $36 = ((($$0$i$i)) + 24|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (_g_quark_to_string($37)|0);
      $$0$i11 = $38;
     }
    }
    HEAP32[$vararg_buffer1>>2] = $$0$i11;
    _g_log(0,16,130212,$vararg_buffer1);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $16 = ($0|0)==(0);
 if ($16) {
  $$0$i14 = 126108;
 } else {
  if ($2) {
   $17 = $0 & -4;
   $18 = $17;
   $$0$i$i12 = $18;
  } else {
   $19 = $0 >>> 2;
   $20 = (143760 + ($19<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $$0$i$i12 = $21;
  }
  $22 = ($$0$i$i12|0)==(0|0);
  if ($22) {
   $$0$i14 = 126098;
  } else {
   $23 = ((($$0$i$i12)) + 24|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (_g_quark_to_string($24)|0);
   $$0$i14 = $25;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i14;
 _g_log(0,16,130030,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_class_adjust_private_offset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i34 = 0, $$0$i36 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (143760 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = HEAP32[$1>>2]|0;
 $10 = ($9|0)>(0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = ($$0$i|0)==(0|0);
 do {
  if ($11) {
   label = 8;
  } else {
   $12 = ((($$0$i)) + 12|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 & 393216;
   $15 = ($14|0)==(393216);
   if ($15) {
    $16 = ((($$0$i)) + 20|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    if ($18) {
     label = 8;
    } else {
     $29 = ((($$0$i)) + 44|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==(0);
     if (!($31)) {
      $32 = ($30>>>0)>(1020);
      if ($32) {
       $33 = $30 & -4;
       $34 = $33;
       $$0$i34 = $34;
      } else {
       $35 = $30 >>> 2;
       $36 = (143760 + ($35<<2)|0);
       $37 = HEAP32[$36>>2]|0;
       $$0$i34 = $37;
      }
      $38 = HEAP32[$16>>2]|0;
      $39 = ((($38)) + 38|0);
      $40 = HEAP16[$39>>1]|0;
      $41 = ((($$0$i34)) + 20|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ((($42)) + 38|0);
      $44 = HEAP16[$43>>1]|0;
      $45 = ($40<<16>>16)==($44<<16>>16);
      if (!($45)) {
       _g_log(0,16,130276,$vararg_buffer1);
       $$sink = 0;
       break;
      }
     }
     $46 = HEAP32[$16>>2]|0;
     $47 = ((($46)) + 38|0);
     $48 = HEAP16[$47>>1]|0;
     $49 = $48&65535;
     $50 = (($9) + 7)|0;
     $51 = (($50) + ($49))|0;
     $52 = $51 & -8;
     $53 = ($52|0)<(65536);
     if ($53) {
      $54 = $52&65535;
      $55 = HEAP32[$16>>2]|0;
      $56 = ((($55)) + 38|0);
      HEAP16[$56>>1] = $54;
      $57 = HEAP32[$16>>2]|0;
      $58 = ((($57)) + 38|0);
      $59 = HEAP16[$58>>1]|0;
      $60 = $59&65535;
      $61 = (0 - ($60))|0;
      $$sink = $61;
      break;
     } else {
      _g_assertion_message_expr(0,126118,4883,130346,130189);
      // unreachable;
     }
    }
   } else {
    label = 8;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $19 = ($2|0)==(0);
  if ($19) {
   $$0$i36 = 126108;
  } else {
   if ($3) {
    $20 = $2 & -4;
    $21 = $20;
    $$0$i$i = $21;
   } else {
    $22 = $2 >>> 2;
    $23 = (143760 + ($22<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $$0$i$i = $24;
   }
   $25 = ($$0$i$i|0)==(0|0);
   if ($25) {
    $$0$i36 = 126098;
   } else {
    $26 = ((($$0$i$i)) + 24|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (_g_quark_to_string($27)|0);
    $$0$i36 = $28;
   }
  }
  HEAP32[$vararg_buffer>>2] = $$0$i36;
  _g_log(0,16,130030,$vararg_buffer);
  $$sink = 0;
 }
 HEAP32[$1>>2] = $$sink;
 STACKTOP = sp;return;
}
function _g_type_instance_get_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (143760 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 262144;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($14)) + 38|0);
   $16 = HEAP16[$15>>1]|0;
   $17 = $16&65535;
   $18 = (0 - ($17))|0;
   $19 = (($0) + ($18)|0);
   $$0 = $19;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $20 = HEAP32[$0>>2]|0;
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 if ($22) {
  $$0$i11 = 126108;
 } else {
  $23 = ($21>>>0)>(1020);
  if ($23) {
   $24 = $21 & -4;
   $25 = $24;
   $$0$i$i = $25;
  } else {
   $26 = $21 >>> 2;
   $27 = (143760 + ($26<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $$0$i$i = $28;
  }
  $29 = ($$0$i$i|0)==(0|0);
  if ($29) {
   $$0$i11 = 126098;
  } else {
   $30 = ((($$0$i$i)) + 24|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = (_g_quark_to_string($31)|0);
   $$0$i11 = $32;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i11;
 _g_log(0,16,129626,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __g_value_c_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_malloc(32)|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[37138] = $0;
 return;
}
function _g_value_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = (_g_type_check_is_value_type($1)|0);
 $3 = ($2|0)==(0);
 $$pre = HEAP32[$0>>2]|0;
 $4 = ($$pre|0)==(0);
 do {
  if ($3) {
   $9 = (_g_type_name($1)|0);
   if ($4) {
    $13 = (_g_type_value_table_peek($1)|0);
    $14 = ($13|0)==(0|0);
    $15 = $14 ? 130509 : 130557;
    HEAP32[$vararg_buffer3>>2] = 130690;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $9;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $15;
    _g_log(0,16,130642,$vararg_buffer3);
    STACKTOP = sp;return ($0|0);
   } else {
    $12 = $9;
   }
  } else {
   if (!($4)) {
    $5 = (_g_type_name($1)|0);
    $12 = $5;
    break;
   }
   $6 = (_g_type_value_table_peek($1)|0);
   HEAP32[$0>>2] = $1;
   $7 = ((($0)) + 8|0);
   ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;HEAP32[$7+12>>2]=0|0;
   $8 = HEAP32[$6>>2]|0;
   ftCall_vi($8|0,$0);
   STACKTOP = sp;return ($0|0);
  }
 } while(0);
 $10 = HEAP32[$0>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 130473;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $12;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $11;
 _g_log(0,16,130381,$vararg_buffer);
 STACKTOP = sp;return ($0|0);
}
function _g_value_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 if ($2) {
  return;
 }
 $3 = HEAP32[$1>>2]|0;
 $4 = (_g_type_value_table_peek($3)|0);
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  ftCall_vi($6|0,$1);
 }
 HEAP32[$1>>2] = $3;
 $8 = ((($1)) + 8|0);
 ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0;
 $9 = ((($4)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 ftCall_vii($10|0,$0,$1);
 return;
}
function _g_value_reset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (_g_type_value_table_peek($1)|0);
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  ftCall_vi($4|0,$0);
 }
 HEAP32[$0>>2] = $1;
 $6 = ((($0)) + 8|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 $7 = HEAP32[$2>>2]|0;
 ftCall_vi($7|0,$0);
 return ($0|0);
}
function _g_value_unset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = (_g_type_value_table_peek($1)|0);
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  ftCall_vi($5|0,$0);
 }
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 return;
}
function _g_value_peek_pointer($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (_g_type_value_table_peek($1)|0);
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = (ftCall_ii($4|0,$0)|0);
 $$0 = $6;
 return ($$0|0);
}
function _g_value_init_from_instance($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp + 8|0;
 $2 = sp;
 $3 = ($1|0)==(0|0);
 do {
  if ($3) {
   $13 = 0;
  } else {
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0|0);
   if ($5) {
    label = 4;
   } else {
    $6 = HEAP32[$4>>2]|0;
    $7 = ($6|0)==(80);
    if ($7) {
     $9 = 80;
    } else {
     label = 4;
    }
   }
   if ((label|0) == 4) {
    $8 = (_g_type_check_instance_is_a($1,80)|0);
    $phitmp = ($8|0)==(0);
    if ($phitmp) {
     $13 = $4;
     break;
    }
    $$pre = HEAP32[$4>>2]|0;
    $9 = $$pre;
   }
   HEAP32[$0>>2] = $9;
   $10 = ((($0)) + 8|0);
   ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP32[$10+12>>2]=0|0;
   $11 = (_g_object_ref($1)|0);
   HEAP32[$10>>2] = $11;
   STACKTOP = sp;return;
  }
 } while(0);
 $12 = HEAP32[$13>>2]|0;
 $14 = (_g_type_value_table_peek($12)|0);
 $15 = $2;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 HEAP32[$2>>2] = $1;
 HEAP32[$0>>2] = $12;
 $19 = ((($0)) + 8|0);
 ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;
 $20 = HEAP32[$14>>2]|0;
 ftCall_vi($20|0,$0);
 $21 = ((($14)) + 20|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (ftCall_iiiii($22|0,$0,1,$2,0)|0);
 $24 = ($23|0)==(0|0);
 if (!($24)) {
  HEAP32[$vararg_buffer>>2] = 130733;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $23;
  _g_log(0,16,130726,$vararg_buffer);
  _g_free($23);
  HEAP32[$0>>2] = $12;
  ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;
  $25 = HEAP32[$14>>2]|0;
  ftCall_vi($25|0,$0);
 }
 STACKTOP = sp;return;
}
function _g_value_register_transform_func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i$i = 0, $$0$i = 0, $$0$i4$i$i = 0, $$031$i$i = 0, $$033$i$i = 0, $$0507$i$i = 0, $$0507$i$i$i = 0, $$0536$i$i = 0, $$0536$i$i$i = 0, $$151$i$i = 0, $$151$i$i$i = 0, $$154$i$i = 0, $$154$i$i$i = 0, $$op$i2$i$i = 0, $$op2$i3$i$i = 0, $$pr$i = 0, $$sink18 = 0, $$sink19 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $phitmp$i$i$i = 0, $spec$select$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($3)) + 8|0);
 HEAP32[$5>>2] = $2;
 $6 = HEAP32[37138]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$6>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  label = 9;
 } else {
  $$0507$i$i = $8;$$0536$i$i = 0;
  while(1) {
   $10 = (($$0536$i$i) + ($$0507$i$i))|0;
   $11 = $10 >>> 1;
   $12 = ($11*12)|0;
   $13 = (($7) + ($12)|0);
   $14 = (_transform_entries_cmp($3,$13)|0);
   $15 = ($14|0)==(0);
   if ($15) {
    label = 5;
    break;
   }
   $16 = ($14|0)<(0);
   $17 = (($11) + 1)|0;
   $$154$i$i = $16 ? $$0536$i$i : $17;
   $$151$i$i = $16 ? $11 : $$0507$i$i;
   $18 = ($$154$i$i>>>0)<($$151$i$i>>>0);
   if ($18) {
    $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
   } else {
    break;
   }
  }
  if ((label|0) == 5) {
   $19 = ($13|0)==(0|0);
   if (!($19)) {
    dest=$13; src=$3; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $$0$i = $6;
    HEAP32[37138] = $$0$i;
    STACKTOP = sp;return;
   }
  }
  $$pr$i = HEAP32[$6>>2]|0;
  $20 = ($$pr$i|0)==(0);
  if ($20) {
   label = 9;
  } else {
   $$0507$i$i$i = $$pr$i;$$0536$i$i$i = 0;
   while(1) {
    $26 = (($$0536$i$i$i) + ($$0507$i$i$i))|0;
    $27 = $26 >>> 1;
    $28 = ($27*12)|0;
    $29 = (($7) + ($28)|0);
    $30 = (_transform_entries_cmp($3,$29)|0);
    $31 = ($30|0)==(0);
    if ($31) {
     $$0$i = $6;
     label = 21;
     break;
    }
    $32 = ($30|0)<(0);
    $33 = (($27) + 1)|0;
    $$154$i$i$i = $32 ? $$0536$i$i$i : $33;
    $$151$i$i$i = $32 ? $27 : $$0507$i$i$i;
    $34 = ($$154$i$i$i>>>0)<($$151$i$i$i>>>0);
    if ($34) {
     $$0507$i$i$i = $$151$i$i$i;$$0536$i$i$i = $$154$i$i$i;
    } else {
     break;
    }
   }
   if ((label|0) == 21) {
    HEAP32[37138] = $$0$i;
    STACKTOP = sp;return;
   }
   $phitmp$i$i$i = ($30|0)>(0);
   $35 = ((($29)) + 12|0);
   $spec$select$i$i = $phitmp$i$i$i ? $35 : $29;
   $36 = ($spec$select$i$i|0)==(0|0);
   if ($36) {
    $$0$i = $6;
    HEAP32[37138] = $$0$i;
    STACKTOP = sp;return;
   }
   $37 = $spec$select$i$i;
   $38 = $7;
   $39 = (($37) - ($38))|0;
   $40 = (($39>>>0) / 12)&-1;
   $41 = HEAP32[$6>>2]|0;
   $42 = (($41) + 1)|0;
   $43 = ($40>>>0)<($42>>>0);
   $$$i$i$i = $43 ? $40 : $42;
   $44 = ($41*12)|0;
   $45 = ($44|0)==(-20);
   if ($45) {
    $55 = 0;
   } else {
    $46 = (($44) + 19)|0;
    $47 = (Math_clz32(($46|0))|0);
    $48 = $47 ^ 31;
    $$op$i2$i$i = 2 << $48;
    $55 = $$op$i2$i$i;
   }
   $49 = ($44|0)==(-8);
   if ($49) {
    $54 = 0;
   } else {
    $50 = (($44) + 7)|0;
    $51 = (Math_clz32(($50|0))|0);
    $52 = $51 ^ 31;
    $$op2$i3$i$i = 2 << $52;
    $54 = $$op2$i3$i$i;
   }
   $53 = ($54|0)==($55|0);
   if ($53) {
    $$0$i4$i$i = $6;
   } else {
    $56 = (_g_realloc($6,$55)|0);
    $$0$i4$i$i = $56;
   }
   $57 = ((($$0$i4$i$i)) + 8|0);
   $58 = ($$$i$i$i*12)|0;
   $59 = (($57) + ($58)|0);
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$$0$i4$i$i>>2]|0;
   $62 = (($61) - ($$$i$i$i))|0;
   $63 = ($62*12)|0;
   _memmove(($60|0),($59|0),($63|0))|0;
   $$031$i$i = $$0$i4$i$i;$$033$i$i = $59;$$sink18 = $$0$i4$i$i;$$sink19 = $61;
  }
 }
 if ((label|0) == 9) {
  $21 = (_g_realloc($6,32)|0);
  $22 = ((($21)) + 8|0);
  $23 = ((($21)) + 20|0);
  $24 = HEAP32[$21>>2]|0;
  $25 = ($24*12)|0;
  _memmove(($23|0),($22|0),($25|0))|0;
  $$031$i$i = $21;$$033$i$i = $22;$$sink18 = $21;$$sink19 = $24;
 }
 $64 = (($$sink19) + 1)|0;
 HEAP32[$$sink18>>2] = $64;
 dest=$$033$i$i; src=$3; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $$0$i = $$031$i$i;
 HEAP32[37138] = $$0$i;
 STACKTOP = sp;return;
}
function _transform_entries_cmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2>>>0)>($3>>>0);
 $5 = ($2|0)!=($3|0);
 $6 = $5 << 31 >> 31;
 $7 = $4 ? 1 : $6;
 $8 = ($7|0)==(0);
 if (!($8)) {
  $$0 = $7;
  return ($$0|0);
 }
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($1)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10>>>0)>($12>>>0);
 $14 = ($10|0)!=($12|0);
 $15 = $14 << 31 >> 31;
 $16 = $13 ? 1 : $15;
 $$0 = $16;
 return ($$0|0);
}
function _g_value_type_compatible($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_type_is_a($0,$1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $7 = 0;
  return ($7|0);
 }
 $4 = (_g_type_value_table_peek($1)|0);
 $5 = (_g_type_value_table_peek($0)|0);
 $6 = ($4|0)==($5|0);
 $phitmp = $6&1;
 $7 = $phitmp;
 return ($7|0);
}
function _g_type_plugin_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37139]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  $4 = $0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(130769)|0);
 $3 = (_g_type_register_static(8,$2,118428,0)|0);
 HEAP32[37139] = $3;
 $4 = $3;
 return ($4|0);
}
function _g_type_plugin_use($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[37139]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = (_g_intern_static_string(130769)|0);
  $5 = (_g_type_register_static(8,$4,118428,0)|0);
  HEAP32[37139] = $5;
  $6 = $5;
 } else {
  $6 = $2;
 }
 $7 = (_g_type_interface_peek($1,$6)|0);
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$0);
 return;
}
function _g_type_plugin_complete_type_info($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[37139]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_g_intern_static_string(130769)|0);
  $8 = (_g_type_register_static(8,$7,118428,0)|0);
  HEAP32[37139] = $8;
  $9 = $8;
 } else {
  $9 = $5;
 }
 $10 = (_g_type_interface_peek($4,$9)|0);
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 ftCall_viiii($12|0,$0,$1,$2,$3);
 return;
}
function _g_type_plugin_complete_interface_info($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[37139]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_g_intern_static_string(130769)|0);
  $8 = (_g_type_register_static(8,$7,118428,0)|0);
  HEAP32[37139] = $8;
  $9 = $8;
 } else {
  $9 = $5;
 }
 $10 = (_g_type_interface_peek($4,$9)|0);
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 ftCall_viiii($12|0,$0,$1,$2,$3);
 return;
}
function __g_value_types_init() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;
 $1 = ((($0)) + 32|0);
 HEAP32[$1>>2] = 118464;
 $2 = (_g_intern_static_string(130781)|0);
 $3 = (_g_type_register_fundamental(12,$2,$0,118496,0)|0);
 $4 = ($3|0)==(12);
 if (!($4)) {
  _g_assertion_message_expr(0,130787,455,130824,130844);
  // unreachable;
 }
 $5 = (_g_intern_static_string(130864)|0);
 $6 = (_g_type_register_fundamental(16,$5,$0,118496,0)|0);
 $7 = ($6|0)==(16);
 if (!($7)) {
  _g_assertion_message_expr(0,130787,457,130824,130871);
  // unreachable;
 }
 HEAP32[$1>>2] = 118500;
 $8 = (_g_intern_static_string(130892)|0);
 $9 = (_g_type_register_fundamental(20,$8,$0,118496,0)|0);
 $10 = ($9|0)==(20);
 if (!($10)) {
  _g_assertion_message_expr(0,130787,475,130824,130901);
  // unreachable;
 }
 HEAP32[$1>>2] = 118532;
 $11 = (_g_intern_static_string(130924)|0);
 $12 = (_g_type_register_fundamental(24,$11,$0,118496,0)|0);
 $13 = ($12|0)==(24);
 if (!($13)) {
  _g_assertion_message_expr(0,130787,493,130824,130929);
  // unreachable;
 }
 $14 = (_g_intern_static_string(130948)|0);
 $15 = (_g_type_register_fundamental(28,$14,$0,118496,0)|0);
 $16 = ($15|0)==(28);
 if (!($16)) {
  _g_assertion_message_expr(0,130787,495,130824,130954);
  // unreachable;
 }
 HEAP32[$1>>2] = 118564;
 $17 = (_g_intern_static_string(130974)|0);
 $18 = (_g_type_register_fundamental(32,$17,$0,118496,0)|0);
 $19 = ($18|0)==(32);
 if (!($19)) {
  _g_assertion_message_expr(0,130787,513,130824,130980);
  // unreachable;
 }
 $20 = (_g_intern_static_string(131000)|0);
 $21 = (_g_type_register_fundamental(36,$20,$0,118496,0)|0);
 $22 = ($21|0)==(36);
 if (!($22)) {
  _g_assertion_message_expr(0,130787,515,130824,131007);
  // unreachable;
 }
 HEAP32[$1>>2] = 118596;
 $23 = (_g_intern_static_string(131028)|0);
 $24 = (_g_type_register_fundamental(40,$23,$0,118496,0)|0);
 $25 = ($24|0)==(40);
 if (!($25)) {
  _g_assertion_message_expr(0,130787,533,130824,131035);
  // unreachable;
 }
 $26 = (_g_intern_static_string(131056)|0);
 $27 = (_g_type_register_fundamental(44,$26,$0,118496,0)|0);
 $28 = ($27|0)==(44);
 if (!($28)) {
  _g_assertion_message_expr(0,130787,535,130824,131064);
  // unreachable;
 }
 HEAP32[$1>>2] = 118628;
 $29 = (_g_intern_static_string(131086)|0);
 $30 = (_g_type_register_fundamental(56,$29,$0,118496,0)|0);
 $31 = ($30|0)==(56);
 if (!($31)) {
  _g_assertion_message_expr(0,130787,553,130824,131093);
  // unreachable;
 }
 HEAP32[$1>>2] = 118660;
 $32 = (_g_intern_static_string(131114)|0);
 $33 = (_g_type_register_fundamental(60,$32,$0,118496,0)|0);
 $34 = ($33|0)==(60);
 if (!($34)) {
  _g_assertion_message_expr(0,130787,571,130824,131122);
  // unreachable;
 }
 HEAP32[$1>>2] = 118692;
 $35 = (_g_intern_static_string(131144)|0);
 $36 = (_g_type_register_fundamental(64,$35,$0,118496,0)|0);
 $37 = ($36|0)==(64);
 if (!($37)) {
  _g_assertion_message_expr(0,130787,589,130824,131155);
  // unreachable;
 }
 HEAP32[$1>>2] = 118724;
 $38 = (_g_intern_static_string(131177)|0);
 $39 = (_g_type_register_fundamental(68,$38,$0,118496,0)|0);
 $40 = ($39|0)==(68);
 if (!($40)) {
  _g_assertion_message_expr(0,130787,607,130824,131186);
  // unreachable;
 }
 HEAP32[$1>>2] = 118756;
 $41 = (_g_intern_static_string(131209)|0);
 $42 = (_g_type_register_fundamental(84,$41,$0,118496,0)|0);
 $43 = ($42|0)==(84);
 if ($43) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,130787,625,130824,131218);
  // unreachable;
 }
}
function _value_init_pointer($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_free_variant($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 134217728;
 $4 = ($3|0)==(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  return;
 }
 return;
}
function _value_copy_variant($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _value_peek_pointer0($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _value_collect_variant($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function _value_lcopy_variant($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $$0 = 0;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _value_copy_pointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_string($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_free_string($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 134217728;
 $4 = ($3|0)==(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 _g_free($6);
 return;
}
function _value_copy_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_strdup($3)|0);
 $5 = ((($1)) + 8|0);
 HEAP32[$5>>2] = $4;
 return;
}
function _value_collect_string($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  HEAP32[$6>>2] = 0;
  return (0|0);
 }
 $7 = $3 & 134217728;
 $8 = ($7|0)==(0);
 if ($8) {
  $11 = (_g_strdup($4)|0);
  $12 = ((($0)) + 8|0);
  HEAP32[$12>>2] = $11;
  return (0|0);
 } else {
  $9 = ((($0)) + 8|0);
  HEAP32[$9>>2] = $4;
  $10 = ((($0)) + 16|0);
  HEAP32[$10>>2] = 134217728;
  return (0|0);
 }
 return (0)|0;
}
function _value_lcopy_string($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (_g_strdup($10)|0);
    HEAP32[$4>>2] = $14;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _value_init_double($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAPF64[$1>>3] = 0.0;
 return;
}
function _value_copy_double($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0.0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = +HEAPF64[$2>>3];
 $4 = ((($1)) + 8|0);
 HEAPF64[$4>>3] = $3;
 return;
}
function _value_collect_double($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0.0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = +HEAPF64[$2>>3];
 $5 = ((($0)) + 8|0);
 HEAPF64[$5>>3] = $4;
 return (0|0);
}
function _value_lcopy_double($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = +HEAPF64[$9>>3];
  HEAPF64[$4>>3] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_float($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAPF32[$1>>2] = Math_fround(0.0);
 return;
}
function _value_copy_float($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_float($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0.0, $5 = Math_fround(0), $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = +HEAPF64[$2>>3];
 $5 = Math_fround($4);
 $6 = ((($0)) + 8|0);
 HEAPF32[$6>>2] = $5;
 return (0|0);
}
function _value_lcopy_float($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_int64($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = $1;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 return;
}
function _value_copy_int64($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($1)) + 8|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = $5;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 return;
}
function _value_collect_int64($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 8|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = $6;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 return (0|0);
}
function _value_lcopy_int64($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = $9;
  $11 = $10;
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) + 4)|0;
  $14 = $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = $4;
  $17 = $16;
  HEAP32[$17>>2] = $12;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP32[$19>>2] = $15;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_long0($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_copy_long0($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_long($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_long($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_collect_int($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_int($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_lcopy_boolean($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_lcopy_char($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131241,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10&255;
  HEAP8[$4>>0] = $11;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_value_set_boolean($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)!=(0);
 $3 = $2&1;
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _g_value_get_boolean($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_value_set_int($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_set_uint($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_set_pointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_get_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_gtype_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148560)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37140]|0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(131288)|0);
 $3 = (_g_type_register_static(68,$2,148564,0)|0);
 _g_once_init_leave(148560,$3);
 $4 = HEAP32[37140]|0;
 return ($4|0);
}
function _g_value_get_gtype($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_value_array_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_slice_alloc(12)|0);
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($1)) + 4|0);
 HEAP32[$3>>2] = 0;
 HEAP32[$1>>2] = $0;
 $4 = ($0|0)==(0);
 if ($4) {
  HEAP32[$1>>2] = 0;
  return ($1|0);
 }
 $5 = (($0) + 7)|0;
 $6 = $5 & -8;
 HEAP32[$2>>2] = $6;
 $7 = (_g_realloc_n(0,$6,24)|0);
 HEAP32[$3>>2] = $7;
 $8 = ($6*24)|0;
 _memset(($7|0),0,($8|0))|0;
 HEAP32[$1>>2] = 0;
 return ($1|0);
}
function _g_value_array_free($0) {
 $0 = $0|0;
 var $$011 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 $3 = ((($0)) + 4|0);
 if (!($2)) {
  $$011 = 0;$12 = $1;
  while(1) {
   $4 = HEAP32[$3>>2]|0;
   $5 = (($4) + (($$011*24)|0)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    $10 = $12;
   } else {
    _g_value_unset($5);
    $$pre = HEAP32[$0>>2]|0;
    $10 = $$pre;
   }
   $8 = (($$011) + 1)|0;
   $9 = ($8>>>0)<($10>>>0);
   if ($9) {
    $$011 = $8;$12 = $10;
   } else {
    break;
   }
  }
 }
 $11 = HEAP32[$3>>2]|0;
 _g_free($11);
 _g_slice_free1(12,$0);
 return;
}
function _g_value_array_copy($0) {
 $0 = $0|0;
 var $$023 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_slice_alloc(12)|0);
 $2 = ((($1)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($1)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 $5 = ($4|0)==(0);
 if ($5) {
  return ($1|0);
 }
 $6 = (($4) + 7)|0;
 $7 = $6 & -8;
 HEAP32[$3>>2] = $7;
 $8 = (_g_realloc_n(0,$7,24)|0);
 HEAP32[$2>>2] = $8;
 $9 = ($7*24)|0;
 _memset(($8|0),0,($9|0))|0;
 $10 = ((($0)) + 4|0);
 $$023 = 0;
 while(1) {
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + (($$023*24)|0)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if (!($14)) {
   $15 = (($8) + (($$023*24)|0)|0);
   (_g_value_init($15,$13)|0);
   $16 = HEAP32[$10>>2]|0;
   $17 = (($16) + (($$023*24)|0)|0);
   _g_value_copy($17,$15);
  }
  $18 = (($$023) + 1)|0;
  $19 = ($18>>>0)<($4>>>0);
  if ($19) {
   $$023 = $18;
  } else {
   break;
  }
 }
 return ($1|0);
}
function _g_value_array_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1)|0;
 HEAP32[$0>>2] = $4;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6>>>0)<($4>>>0);
 if ($7) {
  $8 = (($3) + 8)|0;
  $9 = $8 & -8;
  HEAP32[$5>>2] = $9;
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (_g_realloc_n($11,$9,24)|0);
  HEAP32[$10>>2] = $12;
  $13 = HEAP32[$0>>2]|0;
  $14 = (($12) + (($13*24)|0)|0);
  $15 = HEAP32[$5>>2]|0;
  $16 = (($15) - ($13))|0;
  $17 = ($16*24)|0;
  _memset(($14|0),0,($17|0))|0;
  $$pre = HEAP32[$0>>2]|0;
  $20 = $$pre;
 } else {
  $20 = $4;
 }
 $18 = (($1) + 1)|0;
 $19 = ($18>>>0)<($20>>>0);
 $21 = ((($0)) + 4|0);
 if ($19) {
  $22 = HEAP32[$21>>2]|0;
  $23 = (($22) + (($1*24)|0)|0);
  $24 = ((($23)) + 24|0);
  $25 = (($3) - ($1))|0;
  $26 = ($25*24)|0;
  _memmove(($24|0),($23|0),($26|0))|0;
 }
 $27 = HEAP32[$21>>2]|0;
 $28 = (($27) + (($1*24)|0)|0);
 ;HEAP32[$28>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;HEAP32[$28+12>>2]=0|0;HEAP32[$28+16>>2]=0|0;HEAP32[$28+20>>2]=0|0;
 $29 = ($2|0)==(0|0);
 if ($29) {
  return ($0|0);
 }
 $30 = HEAP32[$21>>2]|0;
 $31 = (($30) + (($1*24)|0)|0);
 $32 = HEAP32[$2>>2]|0;
 (_g_value_init($31,$32)|0);
 $33 = HEAP32[$21>>2]|0;
 $34 = (($33) + (($1*24)|0)|0);
 _g_value_copy($2,$34);
 return ($0|0);
}
function _g_value_array_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (_g_value_array_insert($0,$2,$1)|0);
 return ($3|0);
}
function _g_value_array_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + (($1*24)|0)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  _g_value_unset($4);
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = (($7) + -1)|0;
 HEAP32[$0>>2] = $8;
 $9 = ($8>>>0)>($1>>>0);
 if ($9) {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + (($1*24)|0)|0);
  $12 = ((($11)) + 24|0);
  $13 = (($8) - ($1))|0;
  $14 = ($13*24)|0;
  _memmove(($11|0),($12|0),($14|0))|0;
  $$pre = HEAP32[$0>>2]|0;
  $18 = $$pre;
 } else {
  $18 = $8;
 }
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16>>>0)>($18>>>0);
 if (!($17)) {
  return ($0|0);
 }
 $19 = HEAP32[$2>>2]|0;
 $20 = (($19) + (($18*24)|0)|0);
 ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;HEAP32[$20+16>>2]=0|0;HEAP32[$20+20>>2]=0|0;
 return ($0|0);
}
function _g_atomic_int_get($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function _g_atomic_int_inc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 1)|0;
 HEAP32[$0>>2] = $2;
 return;
}
function _g_atomic_int_dec_and_test($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -1)|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0);
 $5 = $4&1;
 return ($5|0);
}
function _g_atomic_int_compare_and_exchange($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==($1|0);
 if ($4) {
  HEAP32[$0>>2] = $2;
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function _g_atomic_int_add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + ($1))|0;
 HEAP32[$0>>2] = $4;
 return ($2|0);
}
function _g_atomic_pointer_get($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function _g_error_new_literal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_slice_alloc(12)|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $1;
 $5 = (_g_strdup($2)|0);
 $6 = ((($3)) + 8|0);
 HEAP32[$6>>2] = $5;
 return ($3|0);
}
function _g_error_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 _g_free($2);
 _g_slice_free1(12,$0);
 return;
}
function _g_propagate_error($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = ($1|0)==(0|0);
  if ($3) {
   STACKTOP = sp;return;
  }
  $4 = ((($1)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  _g_free($5);
  _g_slice_free1(12,$1);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  HEAP32[$0>>2] = $1;
  STACKTOP = sp;return;
 } else {
  $8 = ((($1)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  HEAP32[$vararg_buffer>>2] = $9;
  _g_log(0,16,131294,$vararg_buffer);
  $10 = HEAP32[$8>>2]|0;
  _g_free($10);
  _g_slice_free1(12,$1);
  STACKTOP = sp;return;
 }
}
function _g_clear_error($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 _g_free($5);
 _g_slice_free1(12,$2);
 HEAP32[$0>>2] = 0;
 return;
}
function _g_getenv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_getenv(($0|0))|0);
 return ($1|0);
}
function _g_hash_table_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(56)|0);
 HEAP32[$2>>2] = 8;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 7;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 7;
 $5 = ((($2)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($2)) + 16|0);
 HEAP32[$6>>2] = 0;
 $7 = ($0|0)==(0|0);
 $8 = $7 ? 290 : $0;
 $9 = ((($2)) + 32|0);
 HEAP32[$9>>2] = $8;
 $10 = ((($2)) + 36|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($2)) + 40|0);
 HEAP32[$11>>2] = 1;
 $12 = ((($2)) + 44|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($2)) + 48|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($2)) + 52|0);
 HEAP32[$14>>2] = 0;
 $15 = (_g_malloc0_n(8,4)|0);
 $16 = ((($2)) + 20|0);
 HEAP32[$16>>2] = $15;
 $17 = ((($2)) + 28|0);
 HEAP32[$17>>2] = $15;
 $18 = (_g_malloc0_n(8,4)|0);
 $19 = ((($2)) + 24|0);
 HEAP32[$19>>2] = $18;
 return ($2|0);
}
function _g_direct_hash($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 return ($1|0);
}
function _g_hash_table_insert_node($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$057 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + ($1<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10>>>0)>(1);
 if ($11) {
  $12 = ((($0)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + ($1<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($5|0)==(0);
  $$pre59 = ((($0)) + 20|0);
  if ($16) {
   $$0 = $3;$$057 = $15;$$pre$phi60Z2D = $$pre59;$$pre$phiZ2D = $12;
  } else {
   $17 = HEAP32[$$pre59>>2]|0;
   $18 = (($17) + ($1<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   HEAP32[$18>>2] = $3;
   $$0 = $19;$$057 = $15;$$pre$phi60Z2D = $$pre59;$$pre$phiZ2D = $12;
  }
 } else {
  HEAP32[$9>>2] = $2;
  $20 = ((($0)) + 20|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($21) + ($1<<2)|0);
  HEAP32[$22>>2] = $3;
  $$pre = ((($0)) + 28|0);
  $$0 = 0;$$057 = 0;$$pre$phi60Z2D = $20;$$pre$phiZ2D = $$pre;
 }
 $23 = HEAP32[$$pre$phi60Z2D>>2]|0;
 $24 = HEAP32[$$pre$phiZ2D>>2]|0;
 $25 = ($23|0)==($24|0);
 if ($25) {
  $26 = (($23) + ($1<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)==($4|0);
  if ($28) {
   $33 = $23;
  } else {
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 << 2;
   $31 = (_g_memdup($23,$30)|0);
   HEAP32[$$pre$phiZ2D>>2] = $31;
   $33 = $31;
  }
 } else {
  $33 = $24;
 }
 $32 = (($33) + ($1<<2)|0);
 HEAP32[$32>>2] = $4;
 if (!($11)) {
  $34 = ((($0)) + 12|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (($35) + 1)|0;
  HEAP32[$34>>2] = $36;
  $37 = ($10|0)==(0);
  if ($37) {
   $38 = ((($0)) + 16|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (($39) + 1)|0;
   HEAP32[$38>>2] = $40;
   _g_hash_table_maybe_resize($0);
  }
  $41 = ((($0)) + 44|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + 1)|0;
  HEAP32[$41>>2] = $43;
  $51 = $11 ^ 1;
  $52 = $51&1;
  return ($52|0);
 }
 $44 = ((($0)) + 48|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 $47 = ($6|0)!=(0);
 $or$cond = $47 | $46;
 if (!($or$cond)) {
  ftCall_vi($45|0,$$0);
 }
 $48 = ((($0)) + 52|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if ($50) {
  $51 = $11 ^ 1;
  $52 = $51&1;
  return ($52|0);
 }
 ftCall_vi($49|0,$$057);
 $51 = $11 ^ 1;
 $52 = $51&1;
 return ($52|0);
}
function _g_hash_table_maybe_resize($0) {
 $0 = $0|0;
 var $$0100108$i = 0, $$01213$i$i$i = 0, $$014$i$i$i = 0, $$097106$i = 0, $$098$lcssa$i = 0, $$098105$i = 0, $$099$i = 0, $$lcssa$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre115$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0;
 var $exitcond$i$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($0)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 << 2;
 $7 = ($3|0)>($6|0);
 $8 = ($3|0)>(8);
 $or$cond = $8 & $7;
 if (!($or$cond)) {
  $9 = (($2|0) / 16)&-1;
  $10 = (($9) + ($2))|0;
  $11 = ($3|0)>($10|0);
  if ($11) {
   return;
  }
 }
 $12 = $5 << 1;
 $13 = ($5|0)!=(0);
 $14 = (Math_clz32(($12|0))|0);
 $15 = (32 - ($14))|0;
 $16 = ($15>>>0)>(3);
 $or$cond$i$i = $13 & $16;
 $17 = $or$cond$i$i ? $15 : 3;
 $18 = 1 << $17;
 HEAP32[$0>>2] = $18;
 $19 = (1888 + ($17<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($0)) + 4|0);
 HEAP32[$21>>2] = $20;
 $$01213$i$i$i = 0;$$014$i$i$i = 0;
 while(1) {
  $22 = $$014$i$i$i << 1;
  $23 = $22 | 1;
  $24 = (($$01213$i$i$i) + 1)|0;
  $exitcond$i$i$i = ($24|0)==($17|0);
  if ($exitcond$i$i$i) {
   break;
  } else {
   $$01213$i$i$i = $24;$$014$i$i$i = $23;
  }
 }
 $25 = ((($0)) + 8|0);
 HEAP32[$25>>2] = $23;
 $26 = (_g_malloc0_n($18,4)|0);
 $27 = ((($0)) + 20|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($0)) + 28|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($28|0)==($30|0);
 if ($31) {
  $$099$i = $26;
 } else {
  $32 = HEAP32[$0>>2]|0;
  $33 = (_g_malloc0_n($32,4)|0);
  $$099$i = $33;
 }
 $34 = HEAP32[$0>>2]|0;
 $35 = (_g_malloc0_n($34,4)|0);
 $36 = ($3|0)>(0);
 if ($36) {
  $37 = ((($0)) + 24|0);
  $$pre$i = HEAP32[$37>>2]|0;
  $$0100108$i = 0;
  while(1) {
   $38 = (($$pre$i) + ($$0100108$i<<2)|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($39>>>0)>(1);
   if ($40) {
    $41 = HEAP32[$21>>2]|0;
    $42 = (($39>>>0) % ($41>>>0))&-1;
    $43 = (($35) + ($42<<2)|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ($44|0)==(0);
    if ($45) {
     $$098$lcssa$i = $42;$$lcssa$i = $43;
    } else {
     $46 = HEAP32[$25>>2]|0;
     $$097106$i = 0;$$098105$i = $42;
     while(1) {
      $47 = (($$097106$i) + 1)|0;
      $48 = (($47) + ($$098105$i))|0;
      $49 = $48 & $46;
      $50 = (($35) + ($49<<2)|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ($51|0)==(0);
      if ($52) {
       $$098$lcssa$i = $49;$$lcssa$i = $50;
       break;
      } else {
       $$097106$i = $47;$$098105$i = $49;
      }
     }
    }
    HEAP32[$$lcssa$i>>2] = $39;
    $53 = HEAP32[$27>>2]|0;
    $54 = (($53) + ($$0100108$i<<2)|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (($26) + ($$098$lcssa$i<<2)|0);
    HEAP32[$56>>2] = $55;
    $57 = HEAP32[$29>>2]|0;
    $58 = (($57) + ($$0100108$i<<2)|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($$099$i) + ($$098$lcssa$i<<2)|0);
    HEAP32[$60>>2] = $59;
   }
   $61 = (($$0100108$i) + 1)|0;
   $exitcond$i = ($61|0)==($3|0);
   if ($exitcond$i) {
    break;
   } else {
    $$0100108$i = $61;
   }
  }
 }
 $62 = HEAP32[$27>>2]|0;
 $63 = HEAP32[$29>>2]|0;
 $64 = ($62|0)==($63|0);
 if ($64) {
  $$pre$phi$iZ2D = $27;$65 = $62;
 } else {
  _g_free($63);
  $$pre115$i = HEAP32[$27>>2]|0;
  $$pre$phi$iZ2D = $27;$65 = $$pre115$i;
 }
 _g_free($65);
 $66 = ((($0)) + 24|0);
 $67 = HEAP32[$66>>2]|0;
 _g_free($67);
 HEAP32[$$pre$phi$iZ2D>>2] = $26;
 HEAP32[$29>>2] = $$099$i;
 HEAP32[$66>>2] = $35;
 $68 = HEAP32[$4>>2]|0;
 HEAP32[$1>>2] = $68;
 return;
}
function _g_hash_table_lookup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond$i = 0, $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(0);
 if (!($4)) {
  _g_assertion_message_expr(0,131492,383,131520,131545);
  // unreachable;
 }
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_ii($6|0,$1)|0);
 $8 = ($7>>>0)>(2);
 $$069$i = $8 ? $7 : 2;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($$069$i>>>0) % ($10>>>0))&-1;
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($11<<2)|0);
 $$06275$i = HEAP32[$14>>2]|0;
 $15 = ($$06275$i|0)==(0);
 L4: do {
  if ($15) {
   $$060$lcssa85$i = $11;$47 = $13;
   label = 12;
  } else {
   $16 = ((($0)) + 20|0);
   $17 = ((($0)) + 36|0);
   $18 = ((($0)) + 8|0);
   $$06079$i = $11;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$48 = $13;
   while(1) {
    $19 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($19) {
      $20 = HEAP32[$16>>2]|0;
      $21 = (($20) + ($$06079$i<<2)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = HEAP32[$17>>2]|0;
      $24 = ($23|0)==(0|0);
      if ($24) {
       $27 = ($22|0)==($1|0);
       if ($27) {
        $$3$i = $$06079$i;$39 = $48;
        break L4;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$35 = $48;
        break;
       }
      } else {
       $25 = (ftCall_iii($23|0,$22,$1)|0);
       $26 = ($25|0)==(0);
       $$pre$i = HEAP32[$12>>2]|0;
       if ($26) {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$35 = $$pre$i;
        break;
       } else {
        $$3$i = $$06079$i;$39 = $$pre$i;
        break L4;
       }
      }
     } else {
      $28 = ($$06280$i|0)!=(1);
      $29 = ($$06577$i|0)!=(0);
      $or$cond$i = $28 | $29;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$35 = $48;
     }
    } while(0);
    $30 = (($$06478$i) + 1)|0;
    $31 = (($30) + ($$06079$i))|0;
    $32 = HEAP32[$18>>2]|0;
    $33 = $32 & $31;
    $34 = (($35) + ($33<<2)|0);
    $$062$i = HEAP32[$34>>2]|0;
    $36 = ($$062$i|0)==(0);
    if ($36) {
     break;
    } else {
     $$06079$i = $33;$$06280$i = $$062$i;$$06478$i = $30;$$06577$i = $$166$i;$$06776$i = $$168$i;$48 = $35;
    }
   }
   $37 = ($$166$i|0)==(0);
   if ($37) {
    $$060$lcssa85$i = $33;$47 = $35;
    label = 12;
   } else {
    $$3$i = $$168$i;$39 = $35;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $$3$i = $$060$lcssa85$i;$39 = $47;
 }
 $38 = (($39) + ($$3$i<<2)|0);
 $40 = HEAP32[$38>>2]|0;
 $41 = ($40>>>0)>(1);
 if (!($41)) {
  $46 = 0;
  return ($46|0);
 }
 $42 = ((($0)) + 28|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (($43) + ($$3$i<<2)|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = $45;
 return ($46|0);
}
function _g_hash_table_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_hash_table_insert_internal($0,$1,$2,0)|0);
 return ($3|0);
}
function _g_hash_table_insert_internal($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 40|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  _g_assertion_message_expr(0,131492,383,131520,131545);
  // unreachable;
 }
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_ii($8|0,$1)|0);
 $10 = ($9>>>0)>(2);
 $$069$i = $10 ? $9 : 2;
 $11 = ((($0)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($$069$i>>>0) % ($12>>>0))&-1;
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($13<<2)|0);
 $$06275$i = HEAP32[$16>>2]|0;
 $17 = ($$06275$i|0)==(0);
 do {
  if ($17) {
   $$060$lcssa85$i = $13;
  } else {
   $18 = ((($0)) + 20|0);
   $19 = ((($0)) + 36|0);
   $20 = ((($0)) + 8|0);
   $$06079$i = $13;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$41 = $15;
   L6: while(1) {
    $21 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($21) {
      $22 = HEAP32[$18>>2]|0;
      $23 = (($22) + ($$06079$i<<2)|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = HEAP32[$19>>2]|0;
      $26 = ($25|0)==(0|0);
      if ($26) {
       $29 = ($24|0)==($1|0);
       if ($29) {
        $$3$i = $$06079$i;
        label = 14;
        break L6;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$37 = $41;
        break;
       }
      }
      $27 = (ftCall_iii($25|0,$24,$1)|0);
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$3$i = $$06079$i;
       label = 14;
       break L6;
      }
      $$pre$i = HEAP32[$14>>2]|0;
      $$166$i = $$06577$i;$$168$i = $$06776$i;$37 = $$pre$i;
     } else {
      $30 = ($$06280$i|0)!=(1);
      $31 = ($$06577$i|0)!=(0);
      $or$cond$i = $30 | $31;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$37 = $41;
     }
    } while(0);
    $32 = (($$06478$i) + 1)|0;
    $33 = (($32) + ($$06079$i))|0;
    $34 = HEAP32[$20>>2]|0;
    $35 = $34 & $33;
    $36 = (($37) + ($35<<2)|0);
    $$062$i = HEAP32[$36>>2]|0;
    $38 = ($$062$i|0)==(0);
    if ($38) {
     label = 12;
     break;
    } else {
     $$06079$i = $35;$$06280$i = $$062$i;$$06478$i = $32;$$06577$i = $$166$i;$$06776$i = $$168$i;$41 = $37;
    }
   }
   if ((label|0) == 12) {
    $39 = ($$166$i|0)==(0);
    if ($39) {
     $$060$lcssa85$i = $35;
     break;
    } else {
     $$3$i = $$168$i;
    }
    $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
    return ($40|0);
   }
   else if ((label|0) == 14) {
    $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
    return ($40|0);
   }
  }
 } while(0);
 $$3$i = $$060$lcssa85$i;
 $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
 return ($40|0);
}
function _g_hash_table_add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_hash_table_insert_internal($0,$1,$1,1)|0);
 return ($2|0);
}
function _g_hash_table_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_hash_table_remove_internal($0,$1,1)|0);
 return ($2|0);
}
function _g_hash_table_remove_internal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0;
 var $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(0);
 if (!($5)) {
  _g_assertion_message_expr(0,131492,383,131520,131545);
  // unreachable;
 }
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (ftCall_ii($7|0,$1)|0);
 $9 = ($8>>>0)>(2);
 $$069$i = $9 ? $8 : 2;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($$069$i>>>0) % ($11>>>0))&-1;
 $13 = ((($0)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + ($12<<2)|0);
 $$06275$i = HEAP32[$15>>2]|0;
 $16 = ($$06275$i|0)==(0);
 L4: do {
  if ($16) {
   $$060$lcssa85$i = $12;$66 = $14;
   label = 12;
  } else {
   $17 = ((($0)) + 20|0);
   $18 = ((($0)) + 36|0);
   $19 = ((($0)) + 8|0);
   $$06079$i = $12;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$67 = $14;
   while(1) {
    $20 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($20) {
      $21 = HEAP32[$17>>2]|0;
      $22 = (($21) + ($$06079$i<<2)|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = HEAP32[$18>>2]|0;
      $25 = ($24|0)==(0|0);
      if ($25) {
       $28 = ($23|0)==($1|0);
       if ($28) {
        $$3$i = $$06079$i;$40 = $67;
        break L4;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$36 = $67;
        break;
       }
      } else {
       $26 = (ftCall_iii($24|0,$23,$1)|0);
       $27 = ($26|0)==(0);
       $$pre$i = HEAP32[$13>>2]|0;
       if ($27) {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$36 = $$pre$i;
        break;
       } else {
        $$3$i = $$06079$i;$40 = $$pre$i;
        break L4;
       }
      }
     } else {
      $29 = ($$06280$i|0)!=(1);
      $30 = ($$06577$i|0)!=(0);
      $or$cond$i = $29 | $30;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$36 = $67;
     }
    } while(0);
    $31 = (($$06478$i) + 1)|0;
    $32 = (($31) + ($$06079$i))|0;
    $33 = HEAP32[$19>>2]|0;
    $34 = $33 & $32;
    $35 = (($36) + ($34<<2)|0);
    $$062$i = HEAP32[$35>>2]|0;
    $37 = ($$062$i|0)==(0);
    if ($37) {
     break;
    } else {
     $$06079$i = $34;$$06280$i = $$062$i;$$06478$i = $31;$$06577$i = $$166$i;$$06776$i = $$168$i;$67 = $36;
    }
   }
   $38 = ($$166$i|0)==(0);
   if ($38) {
    $$060$lcssa85$i = $34;$66 = $36;
    label = 12;
   } else {
    $$3$i = $$168$i;$40 = $36;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $$3$i = $$060$lcssa85$i;$40 = $66;
 }
 $39 = (($40) + ($$3$i<<2)|0);
 $41 = HEAP32[$39>>2]|0;
 $42 = ($41>>>0)>(1);
 if (!($42)) {
  $$0 = 0;
  return ($$0|0);
 }
 $43 = ((($0)) + 20|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (($44) + ($$3$i<<2)|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ((($0)) + 28|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (($48) + ($$3$i<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 HEAP32[$39>>2] = 1;
 HEAP32[$45>>2] = 0;
 $51 = HEAP32[$47>>2]|0;
 $52 = (($51) + ($$3$i<<2)|0);
 HEAP32[$52>>2] = 0;
 $53 = ((($0)) + 12|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = (($54) + -1)|0;
 HEAP32[$53>>2] = $55;
 $56 = ($2|0)==(0);
 if (!($56)) {
  $57 = ((($0)) + 48|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($58|0)==(0|0);
  if (!($59)) {
   ftCall_vi($58|0,$46);
  }
  $60 = ((($0)) + 52|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ($61|0)==(0|0);
  if (!($62)) {
   ftCall_vi($61|0,$50);
  }
 }
 _g_hash_table_maybe_resize($0);
 $63 = ((($0)) + 44|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($64) + 1)|0;
 HEAP32[$63>>2] = $65;
 $$0 = 1;
 return ($$0|0);
}
function _g_hash_table_foreach($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$023 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)>(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 24|0);
 $6 = ((($0)) + 28|0);
 $7 = ((($0)) + 20|0);
 $$023 = 0;$21 = $3;
 while(1) {
  $8 = HEAP32[$5>>2]|0;
  $9 = (($8) + ($$023<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10>>>0)>(1);
  if ($11) {
   $12 = HEAP32[$6>>2]|0;
   $13 = (($12) + ($$023<<2)|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = HEAP32[$7>>2]|0;
   $16 = (($15) + ($$023<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   ftCall_viii($1|0,$17,$14,$2);
   $$pre = HEAP32[$0>>2]|0;
   $20 = $$pre;
  } else {
   $20 = $21;
  }
  $18 = (($$023) + 1)|0;
  $19 = ($18|0)<($20|0);
  if ($19) {
   $$023 = $18;$21 = $20;
  } else {
   break;
  }
 }
 return;
}
function _g_str_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcmp($0,$1)|0);
 $3 = ($2|0)==(0);
 $4 = $3&1;
 return ($4|0);
}
function _g_str_hash($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$010 = 0, $$089 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $$0$lcssa = 5381;
  return ($$0$lcssa|0);
 }
 $$010 = 5381;$$089 = $0;$4 = $1;
 while(1) {
  $3 = $4 << 24 >> 24;
  $5 = ($$010*33)|0;
  $6 = (($5) + ($3))|0;
  $7 = ((($$089)) + 1|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($8<<24>>24)==(0);
  if ($9) {
   $$0$lcssa = $6;
   break;
  } else {
   $$010 = $6;$$089 = $7;$4 = $8;
  }
 }
 return ($$0$lcssa|0);
}
function _g_direct_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 $3 = $2&1;
 return ($3|0);
}
function _g_parse_debug_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01320$i = 0, $$01320$i62 = 0, $$01419$i = 0, $$01419$i63 = 0, $$01518$i = 0, $$01518$i64 = 0, $$05187 = 0, $$052 = 0, $$05386 = 0, $$05585 = 0, $$05773 = 0, $$060 = 0, $$075 = 0, $$1 = 0, $$15681 = 0, $$15681$us = 0, $$15879 = 0, $$15879$us = 0, $$2 = 0;
 var $$2$us = 0, $$25974 = 0, $$3 = 0, $$mask$i = 0, $$mask$i66 = 0, $$mux = 0, $$not = 0, $$unshifted$i = 0, $$unshifted$i65 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $brmerge = 0, $exitcond = 0, $exitcond96 = 0, $spec$select = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($0|0)==(0|0);
 if ($3) {
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $4 = (_strcasecmp($0,131571)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[30112]|0;
  (_fwrite(131576,23,1,$6)|0);
  $7 = ($2|0)==(0);
  if (!($7)) {
   $$05773 = 0;
   while(1) {
    $8 = (($1) + ($$05773<<3)|0);
    $9 = HEAP32[$8>>2]|0;
    HEAP32[$vararg_buffer>>2] = $9;
    (_fprintf($6,131600,$vararg_buffer)|0);
    $10 = (($$05773) + 1)|0;
    $exitcond = ($10|0)==($2|0);
    if ($exitcond) {
     break;
    } else {
     $$05773 = $10;
    }
   }
  }
  (_fwrite(131604,10,1,$6)|0);
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $11 = HEAP8[$0>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $13 = ($2|0)!=(0);
 $$not = $13 ^ 1;
 $$05187 = 0;$$05386 = $0;$$05585 = 0;
 while(1) {
  $14 = (_strpbrk($$05386,131615)|0);
  $15 = ($14|0)==(0|0);
  if ($15) {
   $16 = (_strlen($$05386)|0);
   $17 = (($$05386) + ($16)|0);
   $$052 = $17;
  } else {
   $$052 = $14;
  }
  $18 = $$052;
  $19 = $$05386;
  $20 = (($18) - ($19))|0;
  $21 = ($20|0)==(0);
  L21: do {
   if ($21) {
    label = 20;
   } else {
    $$01320$i = 131621;$$01419$i = $20;$$01518$i = $$05386;$23 = 97;
    while(1) {
     $22 = ($23<<24>>24)==(95);
     if ($22) {
      $31 = 45;
     } else {
      $24 = $23 << 24 >> 24;
      $25 = (_tolower($24)|0);
      $31 = $25;
     }
     $26 = HEAP8[$$01518$i>>0]|0;
     $27 = ($26<<24>>24)==(95);
     if ($27) {
      $30 = 45;
     } else {
      $28 = $26 << 24 >> 24;
      $29 = (_tolower($28)|0);
      $30 = $29;
     }
     $$unshifted$i = $30 ^ $31;
     $$mask$i = $$unshifted$i & 255;
     $32 = ($$mask$i|0)==(0);
     if (!($32)) {
      label = 20;
      break L21;
     }
     $33 = (($$01419$i) + -1)|0;
     $34 = ((($$01320$i)) + 1|0);
     $35 = ((($$01518$i)) + 1|0);
     $36 = ($33|0)==(0);
     $37 = HEAP8[$34>>0]|0;
     if ($36) {
      break;
     } else {
      $$01320$i = $34;$$01419$i = $33;$$01518$i = $35;$23 = $37;
     }
    }
    $38 = ($37<<24>>24)==(0);
    $brmerge = $38 | $$not;
    $$mux = $38 ? 1 : $$05187;
    if ($brmerge) {
     $$1 = $$mux;$$3 = $$05585;
    } else {
     label = 21;
    }
   }
  } while(0);
  if ((label|0) == 20) {
   label = 0;
   if ($13) {
    label = 21;
   } else {
    $$1 = $$05187;$$3 = $$05585;
   }
  }
  L35: do {
   if ((label|0) == 21) {
    label = 0;
    if ($21) {
     $$15681$us = $$05585;$$15879$us = 0;
     while(1) {
      $39 = (($1) + ($$15879$us<<3)|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if ($42) {
       $43 = (((($1) + ($$15879$us<<3)|0)) + 4|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = $44 | $$15681$us;
       $$2$us = $45;
      } else {
       $$2$us = $$15681$us;
      }
      $46 = (($$15879$us) + 1)|0;
      $47 = ($46>>>0)<($2>>>0);
      if ($47) {
       $$15681$us = $$2$us;$$15879$us = $46;
      } else {
       $$1 = $$05187;$$3 = $$2$us;
       break L35;
      }
     }
    }
    $$15681 = $$05585;$$15879 = 0;
    while(1) {
     $48 = (($1) + ($$15879<<3)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = HEAP8[$49>>0]|0;
     $$01320$i62 = $49;$$01419$i63 = $20;$$01518$i64 = $$05386;$52 = $50;
     while(1) {
      $51 = ($52<<24>>24)==(95);
      if ($51) {
       $60 = 45;
      } else {
       $53 = $52 << 24 >> 24;
       $54 = (_tolower($53)|0);
       $60 = $54;
      }
      $55 = HEAP8[$$01518$i64>>0]|0;
      $56 = ($55<<24>>24)==(95);
      if ($56) {
       $59 = 45;
      } else {
       $57 = $55 << 24 >> 24;
       $58 = (_tolower($57)|0);
       $59 = $58;
      }
      $$unshifted$i65 = $59 ^ $60;
      $$mask$i66 = $$unshifted$i65 & 255;
      $61 = ($$mask$i66|0)==(0);
      if (!($61)) {
       $$2 = $$15681;
       break;
      }
      $62 = (($$01419$i63) + -1)|0;
      $63 = ((($$01320$i62)) + 1|0);
      $64 = ((($$01518$i64)) + 1|0);
      $65 = ($62|0)==(0);
      $66 = HEAP8[$63>>0]|0;
      if ($65) {
       label = 34;
       break;
      } else {
       $$01320$i62 = $63;$$01419$i63 = $62;$$01518$i64 = $64;$52 = $66;
      }
     }
     if ((label|0) == 34) {
      label = 0;
      $67 = ($66<<24>>24)==(0);
      if ($67) {
       $68 = (((($1) + ($$15879<<3)|0)) + 4|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = $69 | $$15681;
       $$2 = $70;
      } else {
       $$2 = $$15681;
      }
     }
     $71 = (($$15879) + 1)|0;
     $72 = ($71>>>0)<($2>>>0);
     if ($72) {
      $$15681 = $$2;$$15879 = $71;
     } else {
      $$1 = $$05187;$$3 = $$2;
      break;
     }
    }
   }
  } while(0);
  $73 = HEAP8[$$052>>0]|0;
  $74 = ($73<<24>>24)==(0);
  $75 = ((($$052)) + 1|0);
  $spec$select = $74 ? $$052 : $75;
  $76 = HEAP8[$spec$select>>0]|0;
  $77 = ($76<<24>>24)==(0);
  if ($77) {
   break;
  } else {
   $$05187 = $$1;$$05386 = $spec$select;$$05585 = $$3;
  }
 }
 $78 = ($$1|0)==(0);
 if ($78) {
  $$060 = $$3;
  STACKTOP = sp;return ($$060|0);
 }
 $79 = ($2|0)==(0);
 if ($79) {
  $$0$lcssa = 0;
 } else {
  $$075 = 0;$$25974 = 0;
  while(1) {
   $80 = (((($1) + ($$25974<<3)|0)) + 4|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $81 | $$075;
   $83 = (($$25974) + 1)|0;
   $exitcond96 = ($83|0)==($2|0);
   if ($exitcond96) {
    $$0$lcssa = $82;
    break;
   } else {
    $$075 = $82;$$25974 = $83;
   }
  }
 }
 $84 = $$3 ^ -1;
 $85 = $$0$lcssa & $84;
 $$060 = $85;
 STACKTOP = sp;return ($$060|0);
}
function _glib_init() {
 var $$0$i$i = 0, $$0$i$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37150]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  return;
 }
 HEAP32[37150] = 1;
 $2 = HEAP32[29697]|0;
 $3 = (_getenv((131625|0))|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0$i$i = $2;
 } else {
  $5 = (_g_parse_debug_string($3,2016,6)|0);
  $$0$i$i = $5;
 }
 HEAP32[29697] = $$0$i$i;
 $6 = (_getenv((131645|0))|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$0$i$i1 = 0;
 } else {
  $8 = (_g_parse_debug_string($6,2064,3)|0);
  $$0$i$i1 = $8;
 }
 $9 = $$0$i$i1 & -4;
 $10 = HEAP32[29698]|0;
 $11 = $10 | $9;
 HEAP32[29698] = $11;
 _g_quark_init();
 return;
}
function _g_list_free($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free_chain_with_offset(12,$0,4);
 return;
}
function _g_list_prepend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$cast = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(12)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $10 = ((($2)) + 8|0);
  HEAP32[$10>>2] = 0;
  return ($2|0);
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($2)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ($6|0)==(0);
 if (!($8)) {
  $$cast = $6;
  $9 = ((($$cast)) + 4|0);
  HEAP32[$9>>2] = $2;
 }
 HEAP32[$5>>2] = $2;
 return ($2|0);
}
function _g_malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (_malloc($0)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $$0 = $2;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 131770;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $0;
 _g_log(0,4,131738,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_malloc0($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (_calloc(1,$0)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $$0 = $2;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 131801;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $0;
 _g_log(0,4,131738,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if ($2) {
  $5 = ($0|0)==(0|0);
  if ($5) {
   $$0 = 0;
  } else {
   _free($0);
   $$0 = 0;
  }
 } else {
  $3 = (_realloc($0,$1)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   HEAP32[$vararg_buffer>>2] = 131832;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $1;
   _g_log(0,4,131738,$vararg_buffer);
   while(1) {
   }
  } else {
   $$0 = $3;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _g_free($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _g_malloc_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (4294967295 / ($1>>>0))&-1;
  $4 = ($3>>>0)<($0>>>0);
  if ($4) {
   HEAP32[$vararg_buffer2>>2] = 131899;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $0;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $1;
   _g_log(0,4,131863,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $5 = Math_imul($1, $0)|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 }
 $7 = (_malloc($5)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $$0$i = $7;
  STACKTOP = sp;return ($$0$i|0);
 }
 HEAP32[$vararg_buffer>>2] = 131770;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $5;
 _g_log(0,4,131738,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_malloc0_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (4294967295 / ($1>>>0))&-1;
  $4 = ($3>>>0)<($0>>>0);
  if ($4) {
   HEAP32[$vararg_buffer2>>2] = 131930;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $0;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $1;
   _g_log(0,4,131863,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $5 = Math_imul($1, $0)|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 }
 $7 = (_calloc(1,$5)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $$0$i = $7;
  STACKTOP = sp;return ($$0$i|0);
 }
 HEAP32[$vararg_buffer>>2] = 131801;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $5;
 _g_log(0,4,131738,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_realloc_n($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (4294967295 / ($2>>>0))&-1;
  $5 = ($4>>>0)<($1>>>0);
  if ($5) {
   HEAP32[$vararg_buffer2>>2] = 131961;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $1;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $2;
   _g_log(0,4,131863,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $6 = Math_imul($2, $1)|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $10 = ($0|0)==(0|0);
  if ($10) {
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
  _free($0);
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 } else {
  $8 = (_realloc($0,$6)|0);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $$0$i = $8;
   STACKTOP = sp;return ($$0$i|0);
  }
  HEAP32[$vararg_buffer>>2] = 131832;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $6;
  _g_log(0,4,131738,$vararg_buffer);
  while(1) {
  }
 }
 return (0)|0;
}
function _g_log($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_g_strdup_vprintf($2,$3)|0);
 (_printf($0,$vararg_buffer)|0);
 (_printf($4,$vararg_buffer1)|0);
 STACKTOP = sp;return;
}
function _g_print($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = (_g_strdup_vprintf($0,$1)|0);
 (_printf($2,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function _g_spaced_primes_closest($0) {
 $0 = $0|0;
 var $$06 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(11);
 do {
  if ($1) {
   $$06 = 11;
  } else {
   $2 = ($0>>>0)<(19);
   if ($2) {
    $$06 = 19;
   } else {
    $3 = ($0>>>0)<(37);
    if ($3) {
     $$06 = 37;
    } else {
     $4 = ($0>>>0)<(73);
     if ($4) {
      $$06 = 73;
     } else {
      $5 = ($0>>>0)<(109);
      if ($5) {
       $$06 = 109;
      } else {
       $6 = ($0>>>0)<(163);
       if ($6) {
        $$06 = 163;
       } else {
        $7 = ($0>>>0)<(251);
        if ($7) {
         $$06 = 251;
        } else {
         $8 = ($0>>>0)<(367);
         if ($8) {
          $$06 = 367;
         } else {
          $9 = ($0>>>0)<(557);
          if ($9) {
           $$06 = 557;
          } else {
           $10 = ($0>>>0)<(823);
           if ($10) {
            $$06 = 823;
           } else {
            $11 = ($0>>>0)<(1237);
            if ($11) {
             $$06 = 1237;
            } else {
             $12 = ($0>>>0)<(1861);
             if ($12) {
              $$06 = 1861;
             } else {
              $13 = ($0>>>0)<(2777);
              if ($13) {
               $$06 = 2777;
              } else {
               $14 = ($0>>>0)<(4177);
               if ($14) {
                $$06 = 4177;
               } else {
                $15 = ($0>>>0)<(6247);
                if ($15) {
                 $$06 = 6247;
                } else {
                 $16 = ($0>>>0)<(9371);
                 if ($16) {
                  $$06 = 9371;
                 } else {
                  $17 = ($0>>>0)<(14057);
                  if ($17) {
                   $$06 = 14057;
                  } else {
                   $18 = ($0>>>0)<(21089);
                   if ($18) {
                    $$06 = 21089;
                   } else {
                    $19 = ($0>>>0)<(31627);
                    if ($19) {
                     $$06 = 31627;
                    } else {
                     $20 = ($0>>>0)<(47431);
                     if ($20) {
                      $$06 = 47431;
                      break;
                     }
                     $21 = ($0>>>0)<(71143);
                     if ($21) {
                      $$06 = 71143;
                      break;
                     }
                     $22 = ($0>>>0)<(106721);
                     if ($22) {
                      $$06 = 106721;
                      break;
                     }
                     $23 = ($0>>>0)<(160073);
                     if ($23) {
                      $$06 = 160073;
                      break;
                     }
                     $24 = ($0>>>0)<(240101);
                     if ($24) {
                      $$06 = 240101;
                      break;
                     }
                     $25 = ($0>>>0)<(360163);
                     if ($25) {
                      $$06 = 360163;
                      break;
                     }
                     $26 = ($0>>>0)<(540217);
                     if ($26) {
                      $$06 = 540217;
                      break;
                     }
                     $27 = ($0>>>0)<(810343);
                     if ($27) {
                      $$06 = 810343;
                      break;
                     }
                     $28 = ($0>>>0)<(1215497);
                     if ($28) {
                      $$06 = 1215497;
                      break;
                     }
                     $29 = ($0>>>0)<(1823231);
                     if ($29) {
                      $$06 = 1823231;
                      break;
                     }
                     $30 = ($0>>>0)<(2734867);
                     if ($30) {
                      $$06 = 2734867;
                      break;
                     }
                     $31 = ($0>>>0)<(4102283);
                     if ($31) {
                      $$06 = 4102283;
                      break;
                     }
                     $32 = ($0>>>0)<(6153409);
                     if ($32) {
                      $$06 = 6153409;
                      break;
                     }
                     $33 = ($0>>>0)<(9230113);
                     $spec$select = $33 ? 9230113 : 13845163;
                     return ($spec$select|0);
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 return ($$06|0);
}
function _g_vasprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_vasprintf($0,$1,$2)|0);
 $4 = ($3|0)<(0);
 if (!($4)) {
  return ($3|0);
 }
 HEAP32[$0>>2] = 0;
 return ($3|0);
}
function _g_quark_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37151]|0;
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = (_g_hash_table_new(294,295)|0);
  HEAP32[37152] = $2;
  $3 = (_g_malloc_n(2048,4)|0);
  HEAP32[37153] = $3;
  HEAP32[$3>>2] = 0;
  HEAP32[37151] = 1;
  return;
 } else {
  _g_assertion_message_expr(0,131992,62,132021,132034);
  // unreachable;
 }
}
function _g_quark_from_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
 } else {
  $2 = (_quark_from_string($0,1)|0);
  $$0$i = $2;
 }
 return ($$0$i|0);
}
function _quark_from_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37152]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  $$0 = $4;
  return ($$0|0);
 }
 $6 = ($1|0)==(0);
 do {
  if ($6) {
   $31 = $0;
  } else {
   $7 = (_strlen($0)|0);
   $8 = (($7) + 1)|0;
   $9 = ($8>>>0)>(2046);
   if ($9) {
    $10 = (_g_strdup($0)|0);
    $31 = $10;
    break;
   }
   $11 = HEAP32[37154]|0;
   $12 = ($11|0)==(0|0);
   if ($12) {
    label = 7;
   } else {
    $13 = HEAP32[37155]|0;
    $14 = (4092 - ($13))|0;
    $15 = ($14>>>0)<($8>>>0);
    if ($15) {
     label = 7;
    } else {
     $18 = $11;$19 = $13;
    }
   }
   if ((label|0) == 7) {
    $16 = (_g_malloc(4092)|0);
    HEAP32[37154] = $16;
    HEAP32[37155] = 0;
    $18 = $16;$19 = 0;
   }
   $17 = (($18) + ($19)|0);
   _memcpy(($17|0),($0|0),($8|0))|0;
   $20 = (($19) + ($8))|0;
   HEAP32[37155] = $20;
   $31 = $17;
  }
 } while(0);
 $21 = HEAP32[37151]|0;
 $22 = $21 & 2047;
 $23 = ($22|0)==(0);
 if ($23) {
  $24 = (($21) + 2048)|0;
  $25 = (_g_malloc_n($24,4)|0);
  $26 = HEAP32[37151]|0;
  $27 = ($26|0)==(0);
  if (!($27)) {
   $28 = $26 << 2;
   $29 = HEAP32[37153]|0;
   _memcpy(($25|0),($29|0),($28|0))|0;
  }
  $30 = (($25) + ($26<<2)|0);
  _memset(($30|0),0,8192)|0;
  HEAP32[37153] = $25;
  $35 = $26;
 } else {
  $35 = $21;
 }
 $32 = (_g_strdup($31)|0);
 $33 = HEAP32[37153]|0;
 $34 = (($33) + ($35<<2)|0);
 HEAP32[$34>>2] = $32;
 $36 = HEAP32[37152]|0;
 $37 = $35;
 (_g_hash_table_insert($36,$31,$37)|0);
 _g_atomic_int_inc(148604);
 $$0 = $35;
 return ($$0|0);
}
function _g_quark_from_static_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = HEAP32[37152]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  $$0$i = $4;
  return ($$0$i|0);
 }
 $6 = HEAP32[37151]|0;
 $7 = $6 & 2047;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = (($6) + 2048)|0;
  $10 = (_g_malloc_n($9,4)|0);
  $11 = HEAP32[37151]|0;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = $11 << 2;
   $14 = HEAP32[37153]|0;
   _memcpy(($10|0),($14|0),($13|0))|0;
  }
  $15 = (($10) + ($11<<2)|0);
  _memset(($15|0),0,8192)|0;
  HEAP32[37153] = $10;
  $19 = $11;
 } else {
  $19 = $6;
 }
 $16 = (_g_strdup($0)|0);
 $17 = HEAP32[37153]|0;
 $18 = (($17) + ($19<<2)|0);
 HEAP32[$18>>2] = $16;
 $20 = HEAP32[37152]|0;
 $21 = $19;
 (_g_hash_table_insert($20,$0,$21)|0);
 _g_atomic_int_inc(148604);
 $$0$i = $19;
 return ($$0$i|0);
}
function _g_quark_to_string($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_atomic_int_get(148604)|0);
 $2 = ($1>>>0)>($0>>>0);
 if (!($2)) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[37153]|0;
 $4 = (($3) + ($0<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 $$0 = $5;
 return ($$0|0);
}
function _g_intern_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = (_quark_from_string($0,1)|0);
 $3 = HEAP32[37153]|0;
 $4 = (($3) + ($2<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 $$0$i = $5;
 return ($$0$i|0);
}
function _g_intern_static_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = HEAP32[37152]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if ($5) {
  $6 = HEAP32[37151]|0;
  $7 = $6 & 2047;
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (($6) + 2048)|0;
   $10 = (_g_malloc_n($9,4)|0);
   $11 = HEAP32[37151]|0;
   $12 = ($11|0)==(0);
   if (!($12)) {
    $13 = $11 << 2;
    $14 = HEAP32[37153]|0;
    _memcpy(($10|0),($14|0),($13|0))|0;
   }
   $15 = (($10) + ($11<<2)|0);
   _memset(($15|0),0,8192)|0;
   HEAP32[37153] = $10;
   $19 = $11;
  } else {
   $19 = $6;
  }
  $16 = (_g_strdup($0)|0);
  $17 = HEAP32[37153]|0;
  $18 = (($17) + ($19<<2)|0);
  HEAP32[$18>>2] = $16;
  $20 = HEAP32[37152]|0;
  $21 = $19;
  (_g_hash_table_insert($20,$0,$21)|0);
  _g_atomic_int_inc(148604);
  $$0$i1 = $19;
 } else {
  $$0$i1 = $4;
 }
 $22 = HEAP32[37153]|0;
 $23 = (($22) + ($$0$i1<<2)|0);
 $24 = HEAP32[$23>>2]|0;
 $$0$i = $24;
 return ($$0$i|0);
}
function _g_slice_alloc($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc($0)|0);
 return ($1|0);
}
function _g_slice_alloc0($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc($0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return ($1|0);
 }
 _memset(($1|0),0,($0|0))|0;
 return ($1|0);
}
function _g_slice_free_chain_with_offset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0|0);
 if ($3) {
  return;
 }
 $$08 = $1;
 while(1) {
  $4 = (($$08) + ($2)|0);
  $5 = HEAP32[$4>>2]|0;
  _g_free($$08);
  $6 = ($5|0)==(0|0);
  if ($6) {
   break;
  } else {
   $$08 = $5;
  }
 }
 return;
}
function _g_slice_free1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_free($1);
 return;
}
function _g_slist_free($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free_chain_with_offset(8,$0,4);
 return;
}
function _g_slist_free_1($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free1(8,$0);
 return;
}
function _g_slist_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(8)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$0 = $2;
  return ($$0|0);
 }
 $$0$i = $0;
 while(1) {
  $5 = ((($$0$i)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $8 = ((($$0$i)) + 4|0);
 HEAP32[$8>>2] = $2;
 $$0 = $0;
 return ($$0|0);
}
function _g_slist_prepend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(8)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 return ($2|0);
}
function _g_slist_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$0$$0$$i = 0, $$0$$0$$0$$i$pre = 0, $$010$us$i = 0, $$pr$us$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $0;
 $3 = ($0|0)==(0|0);
 L1: do {
  if ($3) {
   $$0$$0$$0$$i = 0;
  } else {
   $$010$us$i = $2;$5 = $0;
   while(1) {
    $4 = HEAP32[$5>>2]|0;
    $6 = ($4|0)==($1|0);
    $7 = ((($5)) + 4|0);
    if ($6) {
     break;
    }
    $$pr$us$i = HEAP32[$7>>2]|0;
    $9 = ($$pr$us$i|0)==(0|0);
    if ($9) {
     $$0$$0$$0$$i = $0;
     break L1;
    } else {
     $$010$us$i = $7;$5 = $$pr$us$i;
    }
   }
   $8 = HEAP32[$7>>2]|0;
   HEAP32[$$010$us$i>>2] = $8;
   _g_slice_free1(8,$5);
   $$0$$0$$0$$i$pre = HEAP32[$2>>2]|0;
   $$0$$0$$0$$i = $$0$$0$$0$$i$pre;
  }
 } while(0);
 STACKTOP = sp;return ($$0$$0$$0$$i|0);
}
function _g_slist_copy($0) {
 $0 = $0|0;
 var $$0$lcssa$i = 0, $$026$i = 0, $$027$i = 0, $$027$in$i = 0, $$027$in28$i = 0, $$02729$i = 0, $$02731$i = 0, $$030$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$026$i = 0;
  return ($$026$i|0);
 }
 $2 = (_g_slice_alloc(8)|0);
 $3 = HEAP32[$0>>2]|0;
 HEAP32[$2>>2] = $3;
 $$027$in28$i = ((($0)) + 4|0);
 $$02729$i = HEAP32[$$027$in28$i>>2]|0;
 $4 = ($$02729$i|0)==(0|0);
 if ($4) {
  $$0$lcssa$i = $2;
 } else {
  $$02731$i = $$02729$i;$$030$i = $2;
  while(1) {
   $5 = (_g_slice_alloc(8)|0);
   $6 = ((($$030$i)) + 4|0);
   HEAP32[$6>>2] = $5;
   $7 = HEAP32[$$02731$i>>2]|0;
   HEAP32[$5>>2] = $7;
   $$027$in$i = ((($$02731$i)) + 4|0);
   $$027$i = HEAP32[$$027$in$i>>2]|0;
   $8 = ($$027$i|0)==(0|0);
   if ($8) {
    break;
   } else {
    $$02731$i = $$027$i;$$030$i = $5;
   }
  }
  $$0$lcssa$i = $5;
 }
 $9 = ((($$0$lcssa$i)) + 4|0);
 HEAP32[$9>>2] = 0;
 $$026$i = $2;
 return ($$026$i|0);
}
function _g_slist_sort($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slist_sort_real($0,$1,0)|0);
 return ($2|0);
}
function _g_slist_sort_real($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa$i = 0, $$019$lcssa$i = 0, $$01924$i = 0, $$021$lcssa$i = 0, $$021$lcssa$ph = 0, $$02123 = 0, $$02123$i = 0, $$022 = 0, $$025$i = 0, $$1$i = 0, $$120$i = 0, $$122$i = 0, $$lcssa$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$022 = 0;
  STACKTOP = sp;return ($$022|0);
 }
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$022 = $0;
  STACKTOP = sp;return ($$022|0);
 }
 $8 = ((($6)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $$pre$phiZ2D = $5;$21 = $6;
 } else {
  $$02123 = $0;$12 = $9;
  while(1) {
   $11 = ((($12)) + 4|0);
   $13 = HEAP32[$11>>2]|0;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$021$lcssa$ph = $$02123;
    break;
   }
   $15 = ((($$02123)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    $$021$lcssa$ph = $16;
    break;
   } else {
    $$02123 = $16;$12 = $18;
   }
  }
  $$phi$trans$insert = ((($$021$lcssa$ph)) + 4|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre$phiZ2D = $$phi$trans$insert;$21 = $$pre;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $20 = (_g_slist_sort_real($0,$1,$2)|0);
 $22 = (_g_slist_sort_real($21,$1,$2)|0);
 $23 = ($20|0)!=(0|0);
 $24 = ($22|0)!=(0|0);
 $25 = $23 & $24;
 if ($25) {
  $$01924$i = $3;$$02123$i = $22;$$025$i = $20;
  while(1) {
   $26 = HEAP32[$$025$i>>2]|0;
   $27 = HEAP32[$$02123$i>>2]|0;
   $28 = (ftCall_iiii($1|0,$26,$27,$2)|0);
   $29 = ($28|0)<(1);
   $30 = ((($$01924$i)) + 4|0);
   if ($29) {
    HEAP32[$30>>2] = $$025$i;
    $31 = ((($$025$i)) + 4|0);
    $32 = HEAP32[$31>>2]|0;
    $$1$i = $32;$$120$i = $$025$i;$$122$i = $$02123$i;
   } else {
    HEAP32[$30>>2] = $$02123$i;
    $33 = ((($$02123$i)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $$1$i = $$025$i;$$120$i = $$02123$i;$$122$i = $34;
   }
   $35 = ($$1$i|0)!=(0|0);
   $36 = ($$122$i|0)!=(0|0);
   $37 = $36 & $35;
   if ($37) {
    $$01924$i = $$120$i;$$02123$i = $$122$i;$$025$i = $$1$i;
   } else {
    $$0$lcssa$i = $$1$i;$$019$lcssa$i = $$120$i;$$021$lcssa$i = $$122$i;$$lcssa$i = $35;
    break;
   }
  }
 } else {
  $$0$lcssa$i = $20;$$019$lcssa$i = $3;$$021$lcssa$i = $22;$$lcssa$i = $23;
 }
 $38 = $$lcssa$i ? $$0$lcssa$i : $$021$lcssa$i;
 $39 = ((($$019$lcssa$i)) + 4|0);
 HEAP32[$39>>2] = $38;
 $40 = ((($3)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $$022 = $41;
 STACKTOP = sp;return ($$022|0);
}
function _g_strdup($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
  return ($$0|0);
 }
 $2 = (_strlen($0)|0);
 $3 = (($2) + 1)|0;
 $4 = (_g_malloc($3)|0);
 _memcpy(($4|0),($0|0),($3|0))|0;
 $$0 = $4;
 return ($$0|0);
}
function _g_memdup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $4 = (_g_malloc($1)|0);
 _memcpy(($4|0),($0|0),($1|0))|0;
 $$0 = $4;
 return ($$0|0);
}
function _g_strndup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = (($1) + 1)|0;
 $4 = (_g_malloc($3)|0);
 (_strncpy($4,$0,$1)|0);
 $5 = (($4) + ($1)|0);
 HEAP8[$5>>0] = 0;
 $$0 = $4;
 return ($$0|0);
}
function _g_strdup_vprintf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = 0;
 (_g_vasprintf($2,$0,$1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function _g_strdup_printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $1 = sp + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 HEAP32[$1>>2] = 0;
 (_g_vasprintf($1,$0,$2)|0);
 $3 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function _g_strconcat($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $$0 = 0, $$0$i = 0, $$0$i40 = 0, $$0$i40$ph = 0, $$035$lcssa = 0, $$03545 = 0, $$03644 = 0, $$09$i = 0, $$09$i39$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_current5 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded17 = 0, $expanded18 = 0, $expanded20 = 0, $expanded21 = 0, $expanded22 = 0, $expanded24 = 0, $expanded25 = 0, $expanded27 = 0, $expanded28 = 0;
 var $expanded29 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (_strlen($0)|0);
 $4 = (($3) + 1)|0;
 HEAP32[$1>>2] = $varargs;
 $arglist_current = HEAP32[$1>>2]|0;
 $5 = $arglist_current;
 $6 = ((0) + 4|0);
 $expanded4 = $6;
 $expanded = (($expanded4) - 1)|0;
 $7 = (($5) + ($expanded))|0;
 $8 = ((0) + 4|0);
 $expanded8 = $8;
 $expanded7 = (($expanded8) - 1)|0;
 $expanded6 = $expanded7 ^ -1;
 $9 = $7 & $expanded6;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $arglist_next = ((($10)) + 4|0);
 HEAP32[$1>>2] = $arglist_next;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$035$lcssa = $4;
 } else {
  $$03545 = $4;$$03644 = $11;
  while(1) {
   $13 = (_strlen($$03644)|0);
   $14 = (($13) + ($$03545))|0;
   $arglist_current2 = HEAP32[$1>>2]|0;
   $15 = $arglist_current2;
   $16 = ((0) + 4|0);
   $expanded11 = $16;
   $expanded10 = (($expanded11) - 1)|0;
   $17 = (($15) + ($expanded10))|0;
   $18 = ((0) + 4|0);
   $expanded15 = $18;
   $expanded14 = (($expanded15) - 1)|0;
   $expanded13 = $expanded14 ^ -1;
   $19 = $17 & $expanded13;
   $20 = $19;
   $21 = HEAP32[$20>>2]|0;
   $arglist_next3 = ((($20)) + 4|0);
   HEAP32[$1>>2] = $arglist_next3;
   $22 = ($21|0)==(0|0);
   if ($22) {
    $$035$lcssa = $14;
    break;
   } else {
    $$03545 = $14;$$03644 = $21;
   }
  }
 }
 $23 = (_g_malloc($$035$lcssa)|0);
 $$0$i = $0;$$09$i = $23;
 while(1) {
  $24 = HEAP8[$$0$i>>0]|0;
  $25 = ((($$09$i)) + 1|0);
  HEAP8[$$09$i>>0] = $24;
  $26 = ((($$0$i)) + 1|0);
  $27 = ($24<<24>>24)==(0);
  if ($27) {
   break;
  } else {
   $$0$i = $26;$$09$i = $25;
  }
 }
 HEAP32[$1>>2] = $varargs;
 $arglist_current5 = HEAP32[$1>>2]|0;
 $28 = $arglist_current5;
 $29 = ((0) + 4|0);
 $expanded18 = $29;
 $expanded17 = (($expanded18) - 1)|0;
 $30 = (($28) + ($expanded17))|0;
 $31 = ((0) + 4|0);
 $expanded22 = $31;
 $expanded21 = (($expanded22) - 1)|0;
 $expanded20 = $expanded21 ^ -1;
 $32 = $30 & $expanded20;
 $33 = $32;
 $34 = HEAP32[$33>>2]|0;
 $arglist_next6 = ((($33)) + 4|0);
 HEAP32[$1>>2] = $arglist_next6;
 $35 = ($34|0)==(0|0);
 L12: do {
  if (!($35)) {
   $$0$i40$ph = $34;$$09$i39$ph = $$09$i;
   while(1) {
    $$0$i40 = $$0$i40$ph;
    while(1) {
     $38 = HEAP8[$$0$i40>>0]|0;
     HEAP8[$$09$i39$ph>>0] = $38;
     $39 = HEAP8[$$0$i40>>0]|0;
     $40 = ($39<<24>>24)==(0);
     if (!($40)) {
      break;
     }
     $arglist_current8 = HEAP32[$1>>2]|0;
     $41 = $arglist_current8;
     $42 = ((0) + 4|0);
     $expanded25 = $42;
     $expanded24 = (($expanded25) - 1)|0;
     $43 = (($41) + ($expanded24))|0;
     $44 = ((0) + 4|0);
     $expanded29 = $44;
     $expanded28 = (($expanded29) - 1)|0;
     $expanded27 = $expanded28 ^ -1;
     $45 = $43 & $expanded27;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next9 = ((($46)) + 4|0);
     HEAP32[$1>>2] = $arglist_next9;
     $48 = ($47|0)==(0|0);
     if ($48) {
      break L12;
     } else {
      $$0$i40 = $47;
     }
    }
    $36 = ((($$0$i40)) + 1|0);
    $37 = ((($$09$i39$ph)) + 1|0);
    $$0$i40$ph = $36;$$09$i39$ph = $37;
   }
  }
 } while(0);
 $$0 = $23;
 STACKTOP = sp;return ($$0|0);
}
function _g_str_has_suffix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (_strlen($1)|0);
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = (($0) + ($2)|0);
 $6 = (0 - ($3))|0;
 $7 = (($5) + ($6)|0);
 $8 = (_strcmp($7,$1)|0);
 $9 = ($8|0)==(0);
 $10 = $9&1;
 $$0 = $10;
 return ($$0|0);
}
function _g_str_has_prefix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = (_strncmp($0,$1,$2)|0);
 $4 = ($3|0)==(0);
 $5 = $4&1;
 return ($5|0);
}
function _g_string_new($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i$i$i10 = 0, $$07$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP8[$0>>0]|0;
  $3 = ($2<<24>>24)==(0);
  if (!($3)) {
   $8 = (_strlen($0)|0);
   $9 = (($8) + 2)|0;
   $10 = (_g_slice_alloc(12)|0);
   $11 = ((($10)) + 8|0);
   HEAP32[$11>>2] = 0;
   $12 = ((($10)) + 4|0);
   HEAP32[$12>>2] = 0;
   HEAP32[$10>>2] = 0;
   $13 = ($9>>>0)>(2);
   $14 = $13 ? $9 : 2;
   $15 = (($14) + 1)|0;
   $16 = ($15|0)<(0);
   if ($16) {
    $$07$i$i$i = -1;
   } else {
    $$0$i$i$i10 = 1;
    while(1) {
     $17 = ($$0$i$i$i10>>>0)<($15>>>0);
     $18 = $$0$i$i$i10 << 1;
     if ($17) {
      $$0$i$i$i10 = $18;
     } else {
      $$07$i$i$i = $$0$i$i$i10;
      break;
     }
    }
   }
   HEAP32[$11>>2] = $$07$i$i$i;
   $19 = (_g_realloc(0,$$07$i$i$i)|0);
   HEAP32[$10>>2] = $19;
   HEAP8[$19>>0] = 0;
   (_g_string_insert_len($10,-1,$0,$8)|0);
   $$0 = $10;
   return ($$0|0);
  }
 }
 $4 = (_g_slice_alloc(12)|0);
 $5 = ((($4)) + 8|0);
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$5>>2] = 4;
 $7 = (_g_realloc(0,4)|0);
 HEAP32[$4>>2] = $7;
 HEAP8[$7>>0] = 0;
 $$0 = $4;
 return ($$0|0);
}
function _g_string_insert_len($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i83 = 0, $$07$i$i = 0, $$07$i$i84 = 0, $$080 = 0, $$082 = 0, $$082$ = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre87 = 0, $$pre88 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)==(0);
 if ($4) {
  return ($0|0);
 }
 $5 = ($3|0)<(0);
 if ($5) {
  $6 = (_strlen($2)|0);
  $$082 = $6;
 } else {
  $$082 = $3;
 }
 $7 = ($1|0)<(0);
 if ($7) {
  $8 = ((($0)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $$080 = $9;
 } else {
  $$080 = $1;
 }
 $10 = HEAP32[$0>>2]|0;
 $11 = ($10>>>0)>($2>>>0);
 $$phi$trans$insert = ((($0)) + 4|0);
 $$pre87 = HEAP32[$$phi$trans$insert>>2]|0;
 $12 = (($10) + ($$pre87)|0);
 $13 = ($12>>>0)<($2>>>0);
 $or$cond = $11 | $13;
 do {
  if ($or$cond) {
   $14 = (($$pre87) + ($$082))|0;
   $15 = ((($0)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14>>>0)<($16>>>0);
   if ($17) {
    $24 = $$pre87;$58 = $10;
   } else {
    $18 = (($14) + 1)|0;
    $19 = ($18|0)<(0);
    if ($19) {
     $$07$i$i = -1;
    } else {
     $$0$i$i = 1;
     while(1) {
      $20 = ($$0$i$i>>>0)<($18>>>0);
      $21 = $$0$i$i << 1;
      if ($20) {
       $$0$i$i = $21;
      } else {
       $$07$i$i = $$0$i$i;
       break;
      }
     }
    }
    HEAP32[$15>>2] = $$07$i$i;
    $22 = (_g_realloc($10,$$07$i$i)|0);
    HEAP32[$0>>2] = $22;
    $$pre88 = HEAP32[$$phi$trans$insert>>2]|0;
    $24 = $$pre88;$58 = $22;
   }
   $23 = ($24>>>0)>($$080>>>0);
   if ($23) {
    $56 = (($24) - ($$080))|0;
    $57 = (($58) + ($$080)|0);
    $59 = (($57) + ($$082)|0);
    _memmove(($59|0),($57|0),($56|0))|0;
   }
   $60 = ($$082|0)==(1);
   if ($60) {
    $61 = HEAP8[$2>>0]|0;
    $62 = HEAP32[$0>>2]|0;
    $63 = (($62) + ($$080)|0);
    HEAP8[$63>>0] = $61;
    break;
   } else {
    $64 = HEAP32[$0>>2]|0;
    $65 = (($64) + ($$080)|0);
    _memcpy(($65|0),($2|0),($$082|0))|0;
    break;
   }
  } else {
   $25 = $10;
   $26 = $2;
   $27 = (($26) - ($25))|0;
   $28 = (($$pre87) + ($$082))|0;
   $29 = ((($0)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28>>>0)<($30>>>0);
   if ($31) {
    $38 = $10;$40 = $$pre87;
   } else {
    $32 = (($28) + 1)|0;
    $33 = ($32|0)<(0);
    if ($33) {
     $$07$i$i84 = -1;
    } else {
     $$0$i$i83 = 1;
     while(1) {
      $34 = ($$0$i$i83>>>0)<($32>>>0);
      $35 = $$0$i$i83 << 1;
      if ($34) {
       $$0$i$i83 = $35;
      } else {
       $$07$i$i84 = $$0$i$i83;
       break;
      }
     }
    }
    HEAP32[$29>>2] = $$07$i$i84;
    $36 = (_g_realloc($10,$$07$i$i84)|0);
    HEAP32[$0>>2] = $36;
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $38 = $36;$40 = $$pre;
   }
   $37 = (($38) + ($27)|0);
   $39 = ($40>>>0)>($$080>>>0);
   $41 = (($38) + ($$080)|0);
   if ($39) {
    $42 = (($40) - ($$080))|0;
    $43 = (($41) + ($$082)|0);
    _memmove(($43|0),($41|0),($42|0))|0;
   }
   $44 = ($$080>>>0)>($27>>>0);
   $45 = (($$080) - ($27))|0;
   $46 = ($$082>>>0)<($45>>>0);
   $$082$ = $46 ? $$082 : $45;
   if ($44) {
    $47 = HEAP32[$0>>2]|0;
    $48 = (($47) + ($$080)|0);
    _memcpy(($48|0),($37|0),($$082$|0))|0;
    $$0 = $$082$;
   } else {
    $$0 = 0;
   }
   $49 = ($$082>>>0)>($$0>>>0);
   if ($49) {
    $50 = (($$082) - ($$0))|0;
    $51 = (($37) + ($$0)|0);
    $52 = (($51) + ($$082)|0);
    $53 = HEAP32[$0>>2]|0;
    $54 = (($53) + ($$080)|0);
    $55 = (($54) + ($$0)|0);
    _memcpy(($55|0),($52|0),($50|0))|0;
   }
  }
 } while(0);
 $66 = HEAP32[$$phi$trans$insert>>2]|0;
 $67 = (($66) + ($$082))|0;
 HEAP32[$$phi$trans$insert>>2] = $67;
 $68 = HEAP32[$0>>2]|0;
 $69 = (($68) + ($67)|0);
 HEAP8[$69>>0] = 0;
 return ($0|0);
}
function _g_string_free($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = HEAP32[$0>>2]|0;
 if ($2) {
  $$0 = $3;
 } else {
  _g_free($3);
  $$0 = 0;
 }
 _g_slice_free1(12,$0);
 return ($$0|0);
}
function _g_string_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_string_insert_len($0,-1,$1,-1)|0);
 return ($2|0);
}
function _g_string_insert_c($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$018 = 0, $$019 = 0, $$07$i$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5>>>0)<($7>>>0);
 if (!($8)) {
  $9 = (($4) + 2)|0;
  $10 = ($9|0)<(0);
  if ($10) {
   $$07$i$i = -1;
  } else {
   $$0$i$i = 1;
   while(1) {
    $11 = ($$0$i$i>>>0)<($9>>>0);
    $12 = $$0$i$i << 1;
    if ($11) {
     $$0$i$i = $12;
    } else {
     $$07$i$i = $$0$i$i;
     break;
    }
   }
  }
  HEAP32[$6>>2] = $$07$i$i;
  $13 = HEAP32[$0>>2]|0;
  $14 = (_g_realloc($13,$$07$i$i)|0);
  HEAP32[$0>>2] = $14;
 }
 $15 = ($1|0)<(0);
 $16 = HEAP32[$3>>2]|0;
 if ($15) {
  $$019 = $16;
  label = 8;
 } else {
  $17 = ($16>>>0)>($1>>>0);
  if ($17) {
   $18 = (($16) - ($1))|0;
   $19 = HEAP32[$0>>2]|0;
   $20 = (($19) + ($1)|0);
   $21 = ((($20)) + 1|0);
   _memmove(($21|0),($20|0),($18|0))|0;
   $$018 = $1;$$pre$phiZ2D = $0;
  } else {
   $$019 = $1;
   label = 8;
  }
 }
 if ((label|0) == 8) {
  $$018 = $$019;$$pre$phiZ2D = $0;
 }
 $22 = HEAP32[$$pre$phiZ2D>>2]|0;
 $23 = (($22) + ($$018)|0);
 HEAP8[$23>>0] = $2;
 $24 = HEAP32[$3>>2]|0;
 $25 = (($24) + 1)|0;
 HEAP32[$3>>2] = $25;
 $26 = HEAP32[$$pre$phiZ2D>>2]|0;
 $27 = (($26) + ($25)|0);
 HEAP8[$27>>0] = 0;
 return ($0|0);
}
function _g_assertion_message_expr($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)==(0|0);
 if ($5) {
  (_g_strdup(132052)|0);
  // unreachable;
 } else {
  _g_free(0);
  // unreachable;
 }
}
function _g_strcmp0($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = ($1|0)!=(0|0);
  $4 = $3 << 31 >> 31;
  $$0 = $4;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$0 = 1;
  } else {
   $6 = (_strcmp($0,$1)|0);
   $$0 = $6;
  }
 }
 return ($$0|0);
}
function _g_once_init_enter($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 $3 = $2&1;
 return ($3|0);
}
function _g_once_init_leave($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 return;
}
function _g_rec_mutex_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_lock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_unlock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_unichar_combining_class($0) {
 $0 = $0|0;
 var $$off = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(195328);
 if (!($1)) {
  $$off = (($0) + -917504)|0;
  $12 = ($$off>>>0)<(196608);
  if (!($12)) {
   $18 = 0;
   return ($18|0);
  }
  $13 = $$off >>> 8;
  $14 = (17968 + ($13<<1)|0);
  $15 = HEAP16[$14>>1]|0;
  $16 = $15 << 16 >> 16;
  $17 = (($16) + -4352)|0;
  $18 = $17;
  return ($18|0);
 }
 $2 = $0 >>> 8;
 $3 = (2096 + ($2<<1)|0);
 $4 = HEAP16[$3>>1]|0;
 $5 = $4 << 16 >> 16;
 $6 = ($4<<16>>16)>(4351);
 if ($6) {
  $7 = (($5) + -4352)|0;
  $18 = $7;
  return ($18|0);
 } else {
  $8 = $0 & 255;
  $9 = ((3632 + ($5<<8)|0) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $18 = $11;
  return ($18|0);
 }
 return (0)|0;
}
function _g_unichar_tolower($0) {
 $0 = $0|0;
 var $$041$lcssa = 0, $$2 = 0, $$off = 0, $$sink73 = 0, $$sink74 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(195328);
 do {
  if ($1) {
   $2 = $0 >>> 8;
   $3 = (19504 + ($2<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 << 16 >> 16;
   $6 = ($4<<16>>16)>(9999);
   if ($6) {
    $7 = (($5) + -10000)|0;
    $23 = $7;
    break;
   } else {
    $8 = $0 & 255;
    $9 = ((21040 + ($5<<8)|0) + ($8)|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = $10 << 24 >> 24;
    $23 = $11;
    break;
   }
  } else {
   $$off = (($0) + -917504)|0;
   $12 = ($$off>>>0)<(196608);
   if (!($12)) {
    $$2 = $0;
    return ($$2|0);
   }
   $13 = $$off >>> 8;
   $14 = (54576 + ($13<<1)|0);
   $15 = HEAP16[$14>>1]|0;
   $16 = $15 << 16 >> 16;
   $17 = ($15<<16>>16)>(9999);
   if ($17) {
    $18 = (($16) + -10000)|0;
    $23 = $18;
    break;
   } else {
    $19 = $0 & 255;
    $20 = ((21040 + ($16<<8)|0) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21 << 24 >> 24;
    $23 = $22;
    break;
   }
  }
 } while(0);
 switch ($23|0) {
 case 9:  {
  $24 = $0 >>> 8;
  $25 = (($24) + -3584)|0;
  $26 = (56112 + ($25<<1)|0);
  $27 = (57648 + ($24<<1)|0);
  $$sink73 = $1 ? $27 : $26;
  $28 = HEAP16[$$sink73>>1]|0;
  $29 = ($28<<16>>16)==(10000);
  do {
   if (!($29)) {
    $30 = (57648 + ($24<<1)|0);
    $31 = (($24) + -3584)|0;
    $32 = (56112 + ($31<<1)|0);
    $$sink74 = $1 ? $30 : $32;
    $33 = HEAP16[$$sink74>>1]|0;
    $34 = $33 << 16 >> 16;
    $35 = $0 & 255;
    $36 = ((59184 + ($34<<10)|0) + ($35<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37>>>0)>(16777215);
    if ($38) {
     $39 = (112432 + ($37)|0);
     $40 = ((($39)) + -16777216|0);
     $41 = (_g_utf8_get_char($40)|0);
     $$2 = $41;
     return ($$2|0);
    } else {
     $42 = ($37|0)==(0);
     if ($42) {
      break;
     } else {
      $$2 = $37;
     }
     return ($$2|0);
    }
   }
  } while(0);
  $$2 = $0;
  return ($$2|0);
  break;
 }
 case 8:  {
  do {
   switch ($0|0) {
   case 453:  {
    $$041$lcssa = 0;
    break;
   }
   case 456:  {
    $$041$lcssa = 1;
    break;
   }
   case 459:  {
    $$041$lcssa = 2;
    break;
   }
   case 498:  {
    $$041$lcssa = 3;
    break;
   }
   case 8072:  {
    $$041$lcssa = 4;
    break;
   }
   case 8073:  {
    $$041$lcssa = 5;
    break;
   }
   case 8074:  {
    $$041$lcssa = 6;
    break;
   }
   case 8075:  {
    $$041$lcssa = 7;
    break;
   }
   case 8076:  {
    $$041$lcssa = 8;
    break;
   }
   case 8077:  {
    $$041$lcssa = 9;
    break;
   }
   case 8078:  {
    $$041$lcssa = 10;
    break;
   }
   case 8079:  {
    $$041$lcssa = 11;
    break;
   }
   case 8088:  {
    $$041$lcssa = 12;
    break;
   }
   case 8089:  {
    $$041$lcssa = 13;
    break;
   }
   case 8090:  {
    $$041$lcssa = 14;
    break;
   }
   case 8091:  {
    $$041$lcssa = 15;
    break;
   }
   case 8092:  {
    $$041$lcssa = 16;
    break;
   }
   case 8093:  {
    $$041$lcssa = 17;
    break;
   }
   case 8094:  {
    $$041$lcssa = 18;
    break;
   }
   case 8095:  {
    $$041$lcssa = 19;
    break;
   }
   case 8104:  {
    $$041$lcssa = 20;
    break;
   }
   case 8105:  {
    $$041$lcssa = 21;
    break;
   }
   case 8106:  {
    $$041$lcssa = 22;
    break;
   }
   case 8107:  {
    $$041$lcssa = 23;
    break;
   }
   case 8108:  {
    $$041$lcssa = 24;
    break;
   }
   case 8109:  {
    $$041$lcssa = 25;
    break;
   }
   case 8110:  {
    $$041$lcssa = 26;
    break;
   }
   case 8111:  {
    $$041$lcssa = 27;
    break;
   }
   case 8124:  {
    $$041$lcssa = 28;
    break;
   }
   case 8140:  {
    $$041$lcssa = 29;
    break;
   }
   case 8188:  {
    $$041$lcssa = 30;
    break;
   }
   default: {
    $$2 = $0;
    return ($$2|0);
   }
   }
  } while(0);
  $43 = (((113616 + (($$041$lcssa*12)|0)|0)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $$2 = $44;
  return ($$2|0);
  break;
 }
 default: {
  $$2 = $0;
  return ($$2|0);
 }
 }
 return (0)|0;
}
function _g_utf8_strdown($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_setlocale(0,0)|0);
 $3 = ($2|0)==(0|0);
 L1: do {
  if ($3) {
   $$0$i = 0;
  } else {
   $4 = HEAP8[$2>>0]|0;
   $5 = $4 << 24 >> 24;
   switch ($5|0) {
   case 97:  {
    $6 = ((($2)) + 1|0);
    $7 = HEAP8[$6>>0]|0;
    $8 = ($7<<24>>24)==(122);
    if ($8) {
     $$0$i = 1;
     break L1;
    }
    break;
   }
   case 108:  {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(116);
    if ($11) {
     $$0$i = 2;
     break L1;
    }
    break;
   }
   case 116:  {
    $12 = ((($2)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = ($13<<24>>24)==(114);
    if ($14) {
     $$0$i = 1;
     break L1;
    }
    break;
   }
   default: {
   }
   }
   $$0$i = 0;
  }
 } while(0);
 $15 = (_real_tolower($0,$1,0,$$0$i)|0);
 $16 = (($15) + 1)|0;
 $17 = (_g_malloc($16)|0);
 (_real_tolower($0,$1,$17,$$0$i)|0);
 $18 = (($17) + ($15)|0);
 HEAP8[$18>>0] = 0;
 return ($17|0);
}
function _real_tolower($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0$i163 = 0, $$01011$i = 0, $$0153165$lcssa = 0, $$0154$lcssa = 0, $$0154167 = 0, $$0169 = 0, $$1 = 0, $$1155 = 0, $$1157 = 0, $$3 = 0, $$off = 0, $$off158 = 0, $$sink203 = 0, $$sink204 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond162 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1|0)<(0);
 $5 = (($0) + ($1)|0);
 $6 = ($1|0)==(0);
 if ($6) {
  $$0154$lcssa = 0;
  return ($$0154$lcssa|0);
 }
 $7 = HEAP32[29699]|0;
 $8 = ($3|0)==(1);
 $9 = ($2|0)==(0|0);
 $10 = ($3|0)==(2);
 $11 = ($2|0)!=(0|0);
 $$0154167 = 0;$$0169 = $0;
 while(1) {
  $12 = HEAP8[$$0169>>0]|0;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $$0154$lcssa = $$0154167;
   label = 86;
   break;
  }
  $14 = (_g_utf8_get_char($$0169)|0);
  $15 = ($14>>>0)<(195328);
  do {
   if ($15) {
    $16 = $14 >>> 8;
    $17 = (19504 + ($16<<1)|0);
    $18 = HEAP16[$17>>1]|0;
    $19 = $18 << 16 >> 16;
    $20 = ($18<<16>>16)>(9999);
    if ($20) {
     $21 = (($19) + -10000)|0;
     $134 = $21;
     break;
    } else {
     $22 = $14 & 255;
     $23 = ((21040 + ($19<<8)|0) + ($22)|0);
     $24 = HEAP8[$23>>0]|0;
     $25 = $24 << 24 >> 24;
     $134 = $25;
     break;
    }
   } else {
    $$off = (($14) + -917504)|0;
    $26 = ($$off>>>0)<(196608);
    if ($26) {
     $27 = $$off >>> 8;
     $28 = (54576 + ($27<<1)|0);
     $29 = HEAP16[$28>>1]|0;
     $30 = $29 << 16 >> 16;
     $31 = ($29<<16>>16)>(9999);
     if ($31) {
      $32 = (($30) + -10000)|0;
      $134 = $32;
      break;
     } else {
      $33 = $14 & 255;
      $34 = ((21040 + ($30<<8)|0) + ($33)|0);
      $35 = HEAP8[$34>>0]|0;
      $36 = $35 << 24 >> 24;
      $134 = $36;
      break;
     }
    } else {
     $134 = 2;
    }
   }
  } while(0);
  $37 = $12&255;
  $38 = (($7) + ($37)|0);
  $39 = HEAP8[$38>>0]|0;
  $40 = $39 << 24 >> 24;
  $41 = (($$0169) + ($40)|0);
  $42 = ($14|0)==(73);
  $or$cond3 = $8 & $42;
  L18: do {
   if ($or$cond3) {
    $43 = (_g_utf8_get_char($41)|0);
    $44 = ($43|0)==(775);
    $45 = (($2) + ($$0154167)|0);
    $46 = $9 ? 0 : $45;
    if ($44) {
     $47 = (_g_unichar_to_utf8(105,$46)|0);
     $48 = (($47) + ($$0154167))|0;
     $49 = HEAP8[$41>>0]|0;
     $50 = $49&255;
     $51 = (($7) + ($50)|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = $52 << 24 >> 24;
     $54 = (($41) + ($53)|0);
     $$1 = $54;$$1155 = $48;
     break;
    } else {
     $55 = (_g_unichar_to_utf8(305,$46)|0);
     $56 = (($55) + ($$0154167))|0;
     $$1 = $41;$$1155 = $56;
     break;
    }
   } else {
    L24: do {
     if ($10) {
      switch ($14|0) {
      case 931:  {
       label = 28;
       break L24;
       break;
      }
      case 204: case 205: case 296:  {
       $57 = (($2) + ($$0154167)|0);
       $58 = $11 ? $57 : 0;
       $59 = (_g_unichar_to_utf8(105,$58)|0);
       $60 = (($59) + ($$0154167))|0;
       $61 = (($2) + ($60)|0);
       $62 = $11 ? $61 : 0;
       $63 = (_g_unichar_to_utf8(775,$62)|0);
       $64 = (($60) + ($63))|0;
       switch ($14|0) {
       case 204:  {
        $65 = (($2) + ($64)|0);
        $66 = $11 ? $65 : 0;
        $67 = (_g_unichar_to_utf8(768,$66)|0);
        $68 = (($67) + ($64))|0;
        $$1 = $41;$$1155 = $68;
        break L18;
        break;
       }
       case 205:  {
        $69 = (($2) + ($64)|0);
        $70 = $11 ? $69 : 0;
        $71 = (_g_unichar_to_utf8(769,$70)|0);
        $72 = (($71) + ($64))|0;
        $$1 = $41;$$1155 = $72;
        break L18;
        break;
       }
       case 296:  {
        $73 = (($2) + ($64)|0);
        $74 = $11 ? $73 : 0;
        $75 = (_g_unichar_to_utf8(771,$74)|0);
        $76 = (($75) + ($64))|0;
        $$1 = $41;$$1155 = $76;
        break L18;
        break;
       }
       default: {
        $$1 = $41;$$1155 = $64;
        break L18;
       }
       }
       break;
      }
      case 73: case 74: case 302:  {
       break;
      }
      default: {
       break L24;
      }
      }
      $77 = HEAP8[$41>>0]|0;
      $78 = ($77<<24>>24)==(0);
      if (!($78)) {
       $$01011$i = $41;$82 = $77;
       L34: while(1) {
        $79 = (_g_utf8_get_char($$01011$i)|0);
        $80 = (_g_unichar_combining_class($79)|0);
        switch ($80|0) {
        case 0:  {
         label = 27;
         break L24;
         break;
        }
        case 230:  {
         break L34;
         break;
        }
        default: {
        }
        }
        $81 = $82&255;
        $83 = (($7) + ($81)|0);
        $84 = HEAP8[$83>>0]|0;
        $85 = $84 << 24 >> 24;
        $86 = (($$01011$i) + ($85)|0);
        $87 = HEAP8[$86>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if ($88) {
         label = 27;
         break L24;
        } else {
         $$01011$i = $86;$82 = $87;
        }
       }
       $89 = (_g_unichar_tolower($14)|0);
       $90 = (($2) + ($$0154167)|0);
       $91 = $11 ? $90 : 0;
       $92 = (_g_unichar_to_utf8($89,$91)|0);
       $93 = (($92) + ($$0154167))|0;
       $94 = (($2) + ($93)|0);
       $95 = $11 ? $94 : 0;
       $96 = (_g_unichar_to_utf8(775,$95)|0);
       $97 = (($93) + ($96))|0;
       $$1 = $41;$$1155 = $97;
       break L18;
      }
     } else {
      label = 27;
     }
    } while(0);
    if ((label|0) == 27) {
     label = 0;
     $98 = ($14|0)==(931);
     if ($98) {
      label = 28;
     }
    }
    if ((label|0) == 28) {
     label = 0;
     $99 = ($41>>>0)<($5>>>0);
     $or$cond162 = $4 | $99;
     if ($or$cond162) {
      $100 = HEAP8[$41>>0]|0;
      $101 = ($100<<24>>24)==(0);
      if ($101) {
       $$1157 = 962;
      } else {
       $102 = (_g_utf8_get_char($41)|0);
       $103 = ($102>>>0)<(195328);
       do {
        if ($103) {
         $104 = $102 >>> 8;
         $105 = (19504 + ($104<<1)|0);
         $106 = HEAP16[$105>>1]|0;
         $107 = $106 << 16 >> 16;
         $108 = ($106<<16>>16)>(9999);
         if ($108) {
          $109 = (($107) + -10000)|0;
          $126 = $109;
          break;
         } else {
          $110 = $102 & 255;
          $111 = ((21040 + ($107<<8)|0) + ($110)|0);
          $112 = HEAP8[$111>>0]|0;
          $113 = $112 << 24 >> 24;
          $126 = $113;
          break;
         }
        } else {
         $$off158 = (($102) + -917504)|0;
         $114 = ($$off158>>>0)<(196608);
         if ($114) {
          $115 = $$off158 >>> 8;
          $116 = (54576 + ($115<<1)|0);
          $117 = HEAP16[$116>>1]|0;
          $118 = $117 << 16 >> 16;
          $119 = ($117<<16>>16)>(9999);
          if ($119) {
           $120 = (($118) + -10000)|0;
           $126 = $120;
           break;
          } else {
           $121 = $102 & 255;
           $122 = ((21040 + ($118<<8)|0) + ($121)|0);
           $123 = HEAP8[$122>>0]|0;
           $124 = $123 << 24 >> 24;
           $126 = $124;
           break;
          }
         } else {
          $126 = 2;
         }
        }
       } while(0);
       $125 = 1 << $126;
       $127 = $125 & 992;
       $128 = ($127|0)==(0);
       $$ = $128 ? 962 : 963;
       $$1157 = $$;
      }
     } else {
      $$1157 = 962;
     }
     $129 = (($2) + ($$0154167)|0);
     $130 = $9 ? 0 : $129;
     $131 = (_g_unichar_to_utf8($$1157,$130)|0);
     $132 = (($131) + ($$0154167))|0;
     $$1 = $41;$$1155 = $132;
     break;
    }
    $133 = 1 << $134;
    $135 = $133 & 768;
    $136 = ($135|0)==(0);
    if ($136) {
     if (!($9)) {
      $175 = (($2) + ($$0154167)|0);
      _memcpy(($175|0),($$0169|0),($40|0))|0;
     }
     $176 = (($$0154167) + ($40))|0;
     $$1 = $41;$$1155 = $176;
     break;
    }
    $137 = $14 >>> 8;
    $138 = (($137) + -3584)|0;
    $139 = (56112 + ($138<<1)|0);
    $140 = (57648 + ($137<<1)|0);
    $$sink203 = $15 ? $140 : $139;
    $141 = HEAP16[$$sink203>>1]|0;
    $142 = ($141<<16>>16)==(10000);
    if ($142) {
     $178 = 0;
    } else {
     $143 = (57648 + ($137<<1)|0);
     $144 = (($137) + -3584)|0;
     $145 = (56112 + ($144<<1)|0);
     $$sink204 = $15 ? $143 : $145;
     $146 = HEAP16[$$sink204>>1]|0;
     $147 = $146 << 16 >> 16;
     $148 = $14 & 255;
     $149 = ((59184 + ($147<<10)|0) + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150>>>0)>(16777215);
     if ($151) {
      $152 = (($2) + ($$0154167)|0);
      $153 = $9 ? 0 : $152;
      $154 = (($150) + -16777216)|0;
      $155 = (112432 + ($154)|0);
      $156 = ($134|0)==(8);
      if ($156) {
       $$0$i163 = $155;
      } else {
       $157 = HEAP8[$155>>0]|0;
       $158 = $157&255;
       $159 = (($7) + ($158)|0);
       $160 = HEAP8[$159>>0]|0;
       $161 = $160 << 24 >> 24;
       $162 = (($155) + ($161)|0);
       $$0$i163 = $162;
      }
      $163 = (_strlen($$0$i163)|0);
      $164 = ($153|0)==(0|0);
      if (!($164)) {
       _memcpy(($153|0),($$0$i163|0),($163|0))|0;
      }
      $165 = (($163) + ($$0154167))|0;
      $$1 = $41;$$1155 = $165;
      break;
     } else {
      $178 = $150;
     }
    }
    $166 = ($134|0)==(8);
    L74: do {
     if ($166) {
      do {
       switch ($14|0) {
       case 453:  {
        $$0153165$lcssa = 0;
        break;
       }
       case 456:  {
        $$0153165$lcssa = 1;
        break;
       }
       case 459:  {
        $$0153165$lcssa = 2;
        break;
       }
       case 498:  {
        $$0153165$lcssa = 3;
        break;
       }
       case 8072:  {
        $$0153165$lcssa = 4;
        break;
       }
       case 8073:  {
        $$0153165$lcssa = 5;
        break;
       }
       case 8074:  {
        $$0153165$lcssa = 6;
        break;
       }
       case 8075:  {
        $$0153165$lcssa = 7;
        break;
       }
       case 8076:  {
        $$0153165$lcssa = 8;
        break;
       }
       case 8077:  {
        $$0153165$lcssa = 9;
        break;
       }
       case 8078:  {
        $$0153165$lcssa = 10;
        break;
       }
       case 8079:  {
        $$0153165$lcssa = 11;
        break;
       }
       case 8088:  {
        $$0153165$lcssa = 12;
        break;
       }
       case 8089:  {
        $$0153165$lcssa = 13;
        break;
       }
       case 8090:  {
        $$0153165$lcssa = 14;
        break;
       }
       case 8091:  {
        $$0153165$lcssa = 15;
        break;
       }
       case 8092:  {
        $$0153165$lcssa = 16;
        break;
       }
       case 8093:  {
        $$0153165$lcssa = 17;
        break;
       }
       case 8094:  {
        $$0153165$lcssa = 18;
        break;
       }
       case 8095:  {
        $$0153165$lcssa = 19;
        break;
       }
       case 8104:  {
        $$0153165$lcssa = 20;
        break;
       }
       case 8105:  {
        $$0153165$lcssa = 21;
        break;
       }
       case 8106:  {
        $$0153165$lcssa = 22;
        break;
       }
       case 8107:  {
        $$0153165$lcssa = 23;
        break;
       }
       case 8108:  {
        $$0153165$lcssa = 24;
        break;
       }
       case 8109:  {
        $$0153165$lcssa = 25;
        break;
       }
       case 8110:  {
        $$0153165$lcssa = 26;
        break;
       }
       case 8111:  {
        $$0153165$lcssa = 27;
        break;
       }
       case 8124:  {
        $$0153165$lcssa = 28;
        break;
       }
       case 8140:  {
        $$0153165$lcssa = 29;
        break;
       }
       case 8188:  {
        $$0153165$lcssa = 30;
        break;
       }
       default: {
        $$3 = $178;
        break L74;
       }
       }
      } while(0);
      $167 = (((113616 + (($$0153165$lcssa*12)|0)|0)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $$3 = $168;
     } else {
      $$3 = $178;
     }
    } while(0);
    $169 = ($$3|0)==(0);
    $170 = $169 ? $14 : $$3;
    $171 = (($2) + ($$0154167)|0);
    $172 = $9 ? 0 : $171;
    $173 = (_g_unichar_to_utf8($170,$172)|0);
    $174 = (($173) + ($$0154167))|0;
    $$1 = $41;$$1155 = $174;
   }
  } while(0);
  $177 = ($$1>>>0)<($5>>>0);
  $or$cond = $4 | $177;
  if ($or$cond) {
   $$0154167 = $$1155;$$0169 = $$1;
  } else {
   $$0154$lcssa = $$1155;
   label = 86;
   break;
  }
 }
 if ((label|0) == 86) {
  return ($$0154$lcssa|0);
 }
 return (0)|0;
}
function _g_utf8_get_char($0) {
 $0 = $0|0;
 var $$0 = 0, $$02735 = 0, $$02833$ph = 0, $$02932$ph = 0, $$03034 = 0, $$mux = 0, $$mux39 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = $1&255;
 $3 = ($1<<24>>24)>(-1);
 if ($3) {
  $14 = $1 & 127;
  $15 = $14&255;
  $$0 = $15;
  return ($$0|0);
 }
 $4 = $2 & 224;
 $5 = ($4|0)==(192);
 if ($5) {
  $$02833$ph = 2;$$02932$ph = 31;
 } else {
  $6 = $2 & 240;
  $7 = ($6|0)==(224);
  if ($7) {
   $$02833$ph = 3;$$02932$ph = 15;
  } else {
   $8 = $2 & 248;
   $9 = ($8|0)==(240);
   if ($9) {
    $$02833$ph = 4;$$02932$ph = 7;
   } else {
    $10 = $2 & 252;
    $11 = ($10|0)==(248);
    $12 = $2 & 254;
    $13 = ($12|0)==(252);
    $brmerge = $11 | $13;
    $$mux = $11 ? 5 : 6;
    $$mux39 = $11 ? 3 : 1;
    if ($brmerge) {
     $$02833$ph = $$mux;$$02932$ph = $$mux39;
    } else {
     $$0 = -1;
     return ($$0|0);
    }
   }
  }
 }
 $16 = $1 << 24 >> 24;
 $17 = $$02932$ph & $16;
 $$02735 = $17;$$03034 = 1;
 while(1) {
  $18 = (($0) + ($$03034)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  $21 = $20 & 192;
  $22 = ($21|0)==(128);
  if (!($22)) {
   $$0 = -1;
   label = 10;
   break;
  }
  $23 = $$02735 << 6;
  $24 = $20 & 63;
  $25 = $24 | $23;
  $26 = (($$03034) + 1)|0;
  $27 = ($26>>>0)<($$02833$ph>>>0);
  if ($27) {
   $$02735 = $25;$$03034 = $26;
  } else {
   $$0 = $25;
   label = 10;
   break;
  }
 }
 if ((label|0) == 10) {
  return ($$0|0);
 }
 return (0)|0;
}
function _g_unichar_to_utf8($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$020 = 0, $$021 = 0, $$022$lcssa = 0, $$02226 = 0, $$027 = 0, $$027$in = 0, $$23 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)<(128);
 if ($2) {
  $$020 = 0;$$021 = 1;
 } else {
  $3 = ($0>>>0)<(2048);
  if ($3) {
   $$020 = 192;$$021 = 2;
  } else {
   $4 = ($0>>>0)<(65536);
   if ($4) {
    $$020 = 224;$$021 = 3;
   } else {
    $5 = ($0>>>0)<(2097152);
    $6 = ($0>>>0)<(67108864);
    $$ = $6 ? 5 : 6;
    $$23 = $6 ? 248 : 252;
    $spec$select = $5 ? 4 : $$;
    $spec$select24 = $5 ? 240 : $$23;
    $$020 = $spec$select24;$$021 = $spec$select;
   }
  }
 }
 $7 = ($1|0)==(0|0);
 if ($7) {
  return ($$021|0);
 }
 $8 = ($$021|0)>(1);
 if ($8) {
  $$02226 = $0;$$027$in = $$021;
  while(1) {
   $$027 = (($$027$in) + -1)|0;
   $9 = $$02226 & 63;
   $10 = $9 | 128;
   $11 = $10&255;
   $12 = (($1) + ($$027)|0);
   HEAP8[$12>>0] = $11;
   $13 = $$02226 >>> 6;
   $14 = ($$027$in|0)>(2);
   if ($14) {
    $$02226 = $13;$$027$in = $$027;
   } else {
    $$022$lcssa = $13;
    break;
   }
  }
 } else {
  $$022$lcssa = $0;
 }
 $15 = $$022$lcssa | $$020;
 $16 = $15&255;
 HEAP8[$1>>0] = $16;
 return ($$021|0);
}
function _g_variant_is_of_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _g_variant_unref($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_comparable_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_object_construct($0)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_comparable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148624)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37156]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,132079,118800,16)|0);
 _g_once_init_leave(148624,$3);
 $4 = HEAP32[37156]|0;
 return ($4|0);
}
function _system_comparable_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37157] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 296;
 $3 = (_g_type_check_class_cast($0,80)|0);
 $4 = ((($0)) + 28|0);
 HEAP32[$4>>2] = 297;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 24|0);
 HEAP32[$6>>2] = 298;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = (_g_param_spec_gtype(132096,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$8);
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = (_g_param_spec_pointer(132103,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$10);
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_g_param_spec_pointer(132114,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$12);
 return;
}
function _system_comparable_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148624)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132079,118800,16)|0);
  _g_once_init_leave(148624,$4);
 }
 $5 = HEAP32[37156]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_comparable_real_CompareTo($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,132165,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function __vala_system_comparable_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148624)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,132079,118800,16)|0);
  _g_once_init_leave(148624,$7);
 }
 $8 = HEAP32[37156]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 132129;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 187;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_comparable_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148624)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,132079,118800,16)|0);
  _g_once_init_leave(148624,$7);
 }
 $8 = HEAP32[37156]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 132129;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 207;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_exception_quark() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_quark_from_static_string(132240)|0);
 return ($0|0);
}
function _system_io_exception_quark() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_quark_from_static_string(132263)|0);
 return ($0|0);
}
function _system_arraycopy($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = (($5) + ($6<<2)|0);
 $9 = (($3) + ($4<<2)|0);
 $10 = $7 << 2;
 _memcpy(($8|0),($9|0),($10|0))|0;
 return;
}
function _system_io_buffered_reader_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $$in76 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = sp + 28|0;
 HEAP32[$4>>2] = 0;
 _g_print(132289,$vararg_buffer);
 $5 = (_system_io_reader_construct($0,$1)|0);
 $6 = ((($1)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $17 = 0;
 } else {
  $9 = (_g_object_ref($7)|0);
  $17 = $7;
 }
 $10 = ((($5)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 40|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  $$pre$phiZ2D = $12;
 } else {
  _g_object_unref($13);
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 40|0);
  HEAP32[$16>>2] = 0;
  $$pre$phiZ2D = $16;
 }
 HEAP32[$$pre$phiZ2D>>2] = $17;
 $18 = ($2|0)<(1);
 if (!($18)) {
  $30 = (_g_object_ref($1)|0);
  $$pre = HEAP32[$10>>2]|0;
  $31 = HEAP32[$$pre>>2]|0;
  $32 = ($31|0)==(0|0);
  if ($32) {
   $$in76 = $$pre;
  } else {
   _g_object_unref($31);
   $33 = HEAP32[$10>>2]|0;
   HEAP32[$33>>2] = 0;
   $$in76 = $33;
  }
  HEAP32[$$in76>>2] = $30;
  $34 = (_g_malloc0($2)|0);
  $35 = HEAP32[$10>>2]|0;
  $36 = ((($35)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  _g_free($37);
  $38 = HEAP32[$10>>2]|0;
  $39 = ((($38)) + 4|0);
  HEAP32[$39>>2] = $34;
  $40 = ((($38)) + 8|0);
  HEAP32[$40>>2] = $2;
  $41 = ((($38)) + 12|0);
  HEAP32[$41>>2] = $2;
  $42 = ((($38)) + 16|0);
  HEAP32[$42>>2] = 0;
  $43 = ((($38)) + 20|0);
  HEAP32[$43>>2] = 0;
  $$1 = $5;
  STACKTOP = sp;return ($$1|0);
 }
 $19 = (_system_io_exception_quark()|0);
 $20 = (_g_error_new_literal($19,2,132311)|0);
 HEAP32[$4>>2] = $20;
 $21 = HEAP32[$20>>2]|0;
 $22 = (_system_io_exception_quark()|0);
 $23 = ($21|0)==($22|0);
 if ($23) {
  _g_propagate_error($3,$20);
  _g_object_unref($5);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 } else {
  $24 = ((($20)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$20>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($20)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer1>>2] = 132328;
  $vararg_ptr3 = ((($vararg_buffer1)) + 4|0);
  HEAP32[$vararg_ptr3>>2] = 216;
  $vararg_ptr4 = ((($vararg_buffer1)) + 8|0);
  HEAP32[$vararg_ptr4>>2] = $25;
  $vararg_ptr5 = ((($vararg_buffer1)) + 12|0);
  HEAP32[$vararg_ptr5>>2] = $27;
  $vararg_ptr6 = ((($vararg_buffer1)) + 16|0);
  HEAP32[$vararg_ptr6>>2] = $29;
  _g_log(0,8,143216,$vararg_buffer1);
  _g_clear_error($4);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_new($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_once_init_enter(148632)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (_system_io_reader_get_type()|0);
  $6 = (_g_type_register_static($5,132370,118836,0)|0);
  _g_once_init_leave(148632,$6);
 }
 $7 = HEAP32[37158]|0;
 $8 = (_system_io_buffered_reader_construct($7,$0,$1,$2)|0);
 return ($8|0);
}
function _system_io_buffered_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37159] = $1;
 _g_type_class_add_private($0,56);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 299;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 300;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 301;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 302;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 303;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 304;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 305;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 306;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 36|0);
 HEAP32[$11>>2] = 307;
 return;
}
function _system_io_buffered_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148632)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,132370,118836,0)|0);
  _g_once_init_leave(148632,$4);
 }
 $5 = HEAP32[37158]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 24|0);
 HEAP32[$8>>2] = -1;
 $9 = ((($6)) + 28|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($6)) + 32|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($6)) + 36|0);
 HEAP32[$11>>2] = 0;
 return;
}
function _system_io_buffered_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$4 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert115 = 0, $$pre = 0, $$pre$phi118Z2D = 0, $$pre$phi120Z2D = 0, $$pre114 = 0, $$pre116 = 0, $$pre116$pn = 0, $$pre117 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if ($5) {
   $$pre = HEAP32[$3>>2]|0;
   $$phi$trans$insert = ((($$pre)) + 20|0);
   $$pre114 = HEAP32[$$phi$trans$insert>>2]|0;
   $10 = $$pre114;$7 = $$pre;
   while(1) {
    $6 = ((($7)) + 16|0);
    $8 = HEAP32[$6>>2]|0;
    $9 = ($10|0)<($8|0);
    if ($9) {
     $20 = $7;$27 = $10;
    } else {
     _system_io_buffered_reader_Fill($0,$2);
     $11 = HEAP32[$2>>2]|0;
     $12 = ($11|0)==(0|0);
     if (!($12)) {
      break L1;
     }
     $13 = HEAP32[$3>>2]|0;
     $14 = ((($13)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ((($13)) + 16|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ($15|0)<($17|0);
     if ($18) {
      $20 = $13;$27 = $15;
     } else {
      label = 6;
      break;
     }
    }
    $19 = ((($20)) + 32|0);
    $21 = HEAP32[$19>>2]|0;
    $22 = ($21|0)==(0);
    if ($22) {
     label = 8;
     break;
    }
    HEAP32[$19>>2] = 0;
    $23 = ((($20)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($20)) + 20|0);
    $26 = (($24) + ($27)|0);
    $28 = HEAP8[$26>>0]|0;
    $29 = ($28<<24>>24)==(10);
    if (!($29)) {
     $$pre$phi118Z2D = $25;$$pre116$pn = $24;
     break;
    }
    $30 = (($27) + 1)|0;
    HEAP32[$25>>2] = $30;
    $10 = $30;$7 = $20;
   }
   if ((label|0) == 6) {
    $$4 = -1;
    STACKTOP = sp;return ($$4|0);
   }
   else if ((label|0) == 8) {
    $$phi$trans$insert115 = ((($20)) + 4|0);
    $$pre116 = HEAP32[$$phi$trans$insert115>>2]|0;
    $$pre117 = ((($20)) + 20|0);
    $$pre$phi118Z2D = $$pre117;$$pre116$pn = $$pre116;
   }
   $$pre$phi120Z2D = (($$pre116$pn) + ($27)|0);
   $31 = (($27) + 1)|0;
   HEAP32[$$pre$phi118Z2D>>2] = $31;
   $32 = HEAP8[$$pre$phi120Z2D>>0]|0;
   $33 = $32 << 24 >> 24;
   $$4 = $33;
   STACKTOP = sp;return ($$4|0);
  }
 } while(0);
 $34 = HEAP32[$2>>2]|0;
 $35 = HEAP32[$34>>2]|0;
 $36 = (_system_io_exception_quark()|0);
 $37 = ($35|0)==($36|0);
 $38 = HEAP32[$2>>2]|0;
 if ($37) {
  _g_propagate_error($1,$38);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 } else {
  $39 = ((($38)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$38>>2]|0;
  $42 = (_g_quark_to_string($41)|0);
  $43 = ((($38)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 533;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $40;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $42;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $44;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0257 = 0, $$0258 = 0, $$0263290 = 0, $$1264 = 0, $$1264280 = 0, $$2 = 0, $$2268 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp273 = 0, $spec$select = 0, $spec$select276 = 0;
 var $spec$select277 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer4 = 0, $vararg_ptr10 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer11 = sp + 40|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $6 = sp + 60|0;
 HEAP32[$6>>2] = 0;
 $7 = ($4|0)==(0);
 $8 = (($2) - ($3))|0;
 $spec$select = $7 ? $8 : $4;
 $9 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$9>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$6);
 $10 = HEAP32[$6>>2]|0;
 $11 = ($10|0)==(0|0);
 L1: do {
  if ($11) {
   $12 = ($2|0)<($3|0);
   $13 = $spec$select | $3;
   $14 = ($13|0)<(0);
   $15 = $12 | $14;
   $16 = (($spec$select) + ($3))|0;
   $17 = ($16|0)>($2|0);
   $$0258 = $17 | $15;
   $phitmp273 = ($16|0)<(0);
   $$0257 = $phitmp273 | $$0258;
   if ($$0257) {
    HEAP32[$vararg_buffer>>2] = $3;
    $18 = (_g_strdup_printf(132459,$vararg_buffer)|0);
    HEAP32[$vararg_buffer1>>2] = $spec$select;
    $19 = (_g_strdup_printf(132459,$vararg_buffer1)|0);
    HEAP32[$vararg_buffer4>>2] = $18;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 132469;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $19;
    $vararg_ptr9 = ((($vararg_buffer4)) + 12|0);
    HEAP32[$vararg_ptr9>>2] = 132472;
    $vararg_ptr10 = ((($vararg_buffer4)) + 16|0);
    HEAP32[$vararg_ptr10>>2] = 0;
    $20 = (_g_strconcat(132462,$vararg_buffer4)|0);
    $21 = (_system_io_exception_quark()|0);
    $22 = (_g_error_new_literal($21,3,$20)|0);
    _g_free($20);
    _g_free($19);
    _g_free($18);
    HEAP32[$6>>2] = $22;
    break;
   }
   $23 = ($spec$select|0)==(0);
   if ($23) {
    $$2 = 0;
    STACKTOP = sp;return ($$2|0);
   }
   $24 = (_system_io_buffered_reader_Read1($0,$1,$2,$3,$spec$select,$6)|0);
   $25 = HEAP32[$6>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $27 = ($24|0)<(1);
    if ($27) {
     $$2 = $24;
     STACKTOP = sp;return ($$2|0);
    }
    $28 = ($spec$select|0)>($24|0);
    L15: do {
     if ($28) {
      $$0263290 = $24;
      L17: while(1) {
       $29 = HEAP32[$9>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = (_system_io_reader_Ready($30,$6)|0);
       $32 = HEAP32[$6>>2]|0;
       $33 = ($32|0)==(0|0);
       if ($33) {
        $34 = ($31|0)==(0);
        if ($34) {
         $$1264280 = $$0263290;
         break L15;
        }
        $35 = (($$0263290) + ($3))|0;
        $36 = (($spec$select) - ($$0263290))|0;
        $37 = (_system_io_buffered_reader_Read1($0,$1,$2,$35,$36,$6)|0);
        $38 = HEAP32[$6>>2]|0;
        $39 = ($38|0)==(0|0);
        $40 = ($37|0)<(1);
        $spec$select276 = $40 ? 4 : 0;
        $41 = $40 ? 0 : $37;
        $spec$select277 = (($41) + ($$0263290))|0;
        if ($39) {
         $$1264 = $spec$select277;$$2268 = $spec$select276;
        } else {
         break L1;
        }
       } else {
        $$1264 = $$0263290;$$2268 = 2;
       }
       $trunc = $$2268&255;
       $trunc$clear = $trunc & 7;
       switch ($trunc$clear<<24>>24) {
       case 2:  {
        break L1;
        break;
       }
       case 4:  {
        $$1264280 = $$1264;
        break L15;
        break;
       }
       case 0:  {
        break;
       }
       default: {
        $$2 = 0;
        break L17;
       }
       }
       $42 = ($spec$select|0)>($$1264|0);
       if ($42) {
        $$0263290 = $$1264;
       } else {
        $$1264280 = $$1264;
        break L15;
       }
      }
      STACKTOP = sp;return ($$2|0);
     } else {
      $$1264280 = $24;
     }
    } while(0);
    $$2 = $$1264280;
    STACKTOP = sp;return ($$2|0);
   }
  }
 } while(0);
 $43 = HEAP32[$6>>2]|0;
 $44 = HEAP32[$43>>2]|0;
 $45 = (_system_io_exception_quark()|0);
 $46 = ($44|0)==($45|0);
 $47 = HEAP32[$6>>2]|0;
 if ($46) {
  _g_propagate_error($5,$47);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  $48 = ((($47)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = HEAP32[$47>>2]|0;
  $51 = (_g_quark_to_string($50)|0);
  $52 = ((($47)) + 4|0);
  $53 = HEAP32[$52>>2]|0;
  HEAP32[$vararg_buffer11>>2] = 132328;
  $vararg_ptr14 = ((($vararg_buffer11)) + 4|0);
  HEAP32[$vararg_ptr14>>2] = 962;
  $vararg_ptr15 = ((($vararg_buffer11)) + 8|0);
  HEAP32[$vararg_ptr15>>2] = $49;
  $vararg_ptr16 = ((($vararg_buffer11)) + 12|0);
  HEAP32[$vararg_ptr16>>2] = $51;
  $vararg_ptr17 = ((($vararg_buffer11)) + 16|0);
  HEAP32[$vararg_ptr17>>2] = $53;
  _g_log(0,8,143216,$vararg_buffer11);
  _g_clear_error($6);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0146 = 0, $$0148 = 0, $$1149 = 0, $$3 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert161 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre160 = 0, $$pre162 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,135487)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132328;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 1295;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $16 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$16>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $17 = HEAP32[$3>>2]|0;
 $18 = ($17|0)==(0|0);
 do {
  if ($18) {
   $$0148 = $1;
   L11: while(1) {
    $19 = ($$0148|0)>(0);
    do {
     if ($19) {
      $20 = HEAP32[$16>>2]|0;
      $21 = ((($20)) + 20|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ((($20)) + 16|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($22|0)<($24|0);
      if ($25) {
       $$pre$phiZ2D = $21;$29 = $22;$30 = $24;$32 = $20;
      } else {
       _system_io_buffered_reader_Fill($0,$3);
       $26 = HEAP32[$3>>2]|0;
       $27 = ($26|0)==(0|0);
       if (!($27)) {
        $$0146 = 2;$$1149 = $$0148;
        break;
       }
       $$pre = HEAP32[$16>>2]|0;
       $$phi$trans$insert = ((($$pre)) + 20|0);
       $$pre160 = HEAP32[$$phi$trans$insert>>2]|0;
       $$phi$trans$insert161 = ((($$pre)) + 16|0);
       $$pre162 = HEAP32[$$phi$trans$insert161>>2]|0;
       $$pre$phiZ2D = $$phi$trans$insert;$29 = $$pre160;$30 = $$pre162;$32 = $$pre;
      }
      $28 = ($29|0)<($30|0);
      if ($28) {
       $31 = ((($32)) + 32|0);
       $33 = HEAP32[$31>>2]|0;
       $34 = ($33|0)==(0);
       if ($34) {
        $42 = $29;
       } else {
        HEAP32[$31>>2] = 0;
        $35 = ((($32)) + 4|0);
        $36 = HEAP32[$35>>2]|0;
        $37 = (($36) + ($29)|0);
        $38 = HEAP8[$37>>0]|0;
        $39 = ($38<<24>>24)==(10);
        if ($39) {
         $40 = (($29) + 1)|0;
         HEAP32[$$pre$phiZ2D>>2] = $40;
         $42 = $40;
        } else {
         $42 = $29;
        }
       }
       $41 = (($30) - ($42))|0;
       $43 = ($$0148|0)>($41|0);
       if ($43) {
        $45 = (($$0148) - ($41))|0;
        HEAP32[$$pre$phiZ2D>>2] = $30;
        $$0146 = 0;$$1149 = $45;
        break;
       } else {
        $44 = (($42) + ($$0148))|0;
        HEAP32[$$pre$phiZ2D>>2] = $44;
        $$0146 = 4;$$1149 = 0;
        break;
       }
      } else {
       $$0146 = 4;$$1149 = $$0148;
      }
     } else {
      $$0146 = 4;$$1149 = $$0148;
     }
    } while(0);
    $trunc = $$0146&255;
    $trunc$clear = $trunc & 7;
    switch ($trunc$clear<<24>>24) {
    case 0:  {
     $$0148 = $$1149;
     break;
    }
    case 4:  {
     label = 19;
     break L11;
     break;
    }
    default: {
     label = 20;
     break L11;
    }
    }
   }
   if ((label|0) == 19) {
    $46 = (($1) - ($$1149))|0;
    $$3 = $46;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 20) {
    $cond = ($$0146|0)==(2);
    if ($cond) {
     break;
    } else {
     $$3 = 0;
    }
    STACKTOP = sp;return ($$3|0);
   }
  }
 } while(0);
 $47 = HEAP32[$3>>2]|0;
 $48 = HEAP32[$47>>2]|0;
 $49 = (_system_io_exception_quark()|0);
 $50 = ($48|0)==($49|0);
 $51 = HEAP32[$3>>2]|0;
 if ($50) {
  _g_propagate_error($2,$51);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  $52 = ((($51)) + 8|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = HEAP32[$51>>2]|0;
  $55 = (_g_quark_to_string($54)|0);
  $56 = ((($51)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132328;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 1407;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $53;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $55;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $57;
  _g_log(0,8,143216,$vararg_buffer5);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$1122 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert144 = 0, $$pre = 0, $$pre145 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$3>>2]|0;
   $7 = ((($6)) + 32|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)==(0);
   $$phi$trans$insert = ((($6)) + 20|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$phi$trans$insert144 = ((($6)) + 16|0);
   $$pre145 = HEAP32[$$phi$trans$insert144>>2]|0;
   if ($9) {
    $32 = $$pre;$33 = $$pre145;$35 = $6;
   } else {
    $10 = ($$pre|0)<($$pre145|0);
    if (!($10)) {
     $11 = HEAP32[$6>>2]|0;
     $12 = (_system_io_reader_Ready($11,$2)|0);
     $13 = HEAP32[$2>>2]|0;
     $14 = ($13|0)==(0|0);
     if (!($14)) {
      break;
     }
     $15 = ($12|0)==(0);
     if (!($15)) {
      _system_io_buffered_reader_Fill($0,$2);
      $16 = HEAP32[$2>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       break;
      }
     }
    }
    $18 = HEAP32[$3>>2]|0;
    $19 = ((($18)) + 20|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($18)) + 16|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($20|0)<($22|0);
    if ($23) {
     $24 = ((($18)) + 4|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (($25) + ($20)|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = ($27<<24>>24)==(10);
     if ($28) {
      $29 = (($20) + 1)|0;
      HEAP32[$19>>2] = $29;
      $50 = $29;
     } else {
      $50 = $20;
     }
     $30 = ((($18)) + 32|0);
     HEAP32[$30>>2] = 0;
     $32 = $50;$33 = $22;$35 = $18;
    } else {
     $32 = $20;$33 = $22;$35 = $18;
    }
   }
   $31 = ($32|0)<($33|0);
   if ($31) {
    $$1122 = 1;
   } else {
    $34 = HEAP32[$35>>2]|0;
    $36 = (_system_io_reader_Ready($34,$2)|0);
    $37 = HEAP32[$2>>2]|0;
    $38 = ($37|0)==(0|0);
    if (!($38)) {
     break;
    }
    $$1122 = $36;
   }
   $$1 = $$1122;
   STACKTOP = sp;return ($$1|0);
  }
 } while(0);
 $39 = HEAP32[$2>>2]|0;
 $40 = HEAP32[$39>>2]|0;
 $41 = (_system_io_exception_quark()|0);
 $42 = ($40|0)==($41|0);
 $43 = HEAP32[$2>>2]|0;
 if ($42) {
  _g_propagate_error($1,$43);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 } else {
  $44 = ((($43)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$43>>2]|0;
  $47 = (_g_quark_to_string($46)|0);
  $48 = ((($43)) + 4|0);
  $49 = HEAP32[$48>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1524;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $45;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $47;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $49;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function _system_io_buffered_reader_real_Mark($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer5 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,132438)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   STACKTOP = sp;return;
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132328;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 1574;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($3);
   STACKTOP = sp;return;
  }
 }
 $16 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$16>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $17 = HEAP32[$3>>2]|0;
 $18 = ($17|0)==(0|0);
 $19 = HEAP32[$16>>2]|0;
 if ($18) {
  $20 = ((($19)) + 28|0);
  HEAP32[$20>>2] = $1;
  $21 = ((($19)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($19)) + 24|0);
  HEAP32[$23>>2] = $22;
  $24 = ((($19)) + 32|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($19)) + 36|0);
  HEAP32[$26>>2] = $25;
 }
 $27 = HEAP32[$3>>2]|0;
 $28 = ($27|0)==(0|0);
 if ($28) {
  STACKTOP = sp;return;
 }
 $29 = HEAP32[$27>>2]|0;
 $30 = (_system_io_exception_quark()|0);
 $31 = ($29|0)==($30|0);
 $32 = HEAP32[$3>>2]|0;
 if ($31) {
  _g_propagate_error($2,$32);
  STACKTOP = sp;return;
 } else {
  $33 = ((($32)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$32>>2]|0;
  $36 = (_g_quark_to_string($35)|0);
  $37 = ((($32)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132328;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 1609;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $34;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $36;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $38;
  _g_log(0,8,143216,$vararg_buffer5);
  _g_clear_error($3);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$48 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$3>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)<(0);
   if ($9) {
    $10 = ($8|0)==(-2);
    $$48 = $10 ? 132393 : 132406;
    $11 = (_system_io_exception_quark()|0);
    $12 = (_g_error_new_literal($11,0,$$48)|0);
    HEAP32[$2>>2] = $12;
    break;
   } else {
    $13 = ((($6)) + 20|0);
    HEAP32[$13>>2] = $8;
    $14 = ((($6)) + 36|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($6)) + 32|0);
    HEAP32[$16>>2] = $15;
    break;
   }
  }
 } while(0);
 $17 = HEAP32[$2>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  STACKTOP = sp;return;
 }
 $19 = HEAP32[$17>>2]|0;
 $20 = (_system_io_exception_quark()|0);
 $21 = ($19|0)==($20|0);
 $22 = HEAP32[$2>>2]|0;
 if ($21) {
  _g_propagate_error($1,$22);
  STACKTOP = sp;return;
 } else {
  $23 = ((($22)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = HEAP32[$22>>2]|0;
  $26 = (_g_quark_to_string($25)|0);
  $27 = ((($22)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1671;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $24;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $26;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $28;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 _system_io_reader_Close($5,$2);
 $7 = HEAP32[$3>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$pre$phiZ2D = $7;$12 = $7;
 } else {
  _g_object_unref($8);
  $10 = HEAP32[$3>>2]|0;
  HEAP32[$10>>2] = 0;
  $$pre$phiZ2D = $10;$12 = $10;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $11 = ((($12)) + 4|0);
 $13 = HEAP32[$11>>2]|0;
 _g_free($13);
 $14 = HEAP32[$3>>2]|0;
 $15 = ((($14)) + 4|0);
 HEAP32[$15>>2] = 0;
 $16 = ((($14)) + 8|0);
 HEAP32[$16>>2] = 0;
 $17 = ((($14)) + 12|0);
 HEAP32[$17>>2] = 0;
 $18 = HEAP32[$2>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  STACKTOP = sp;return;
 }
 $20 = HEAP32[$18>>2]|0;
 $21 = (_system_io_exception_quark()|0);
 $22 = ($20|0)==($21|0);
 $23 = HEAP32[$2>>2]|0;
 if ($22) {
  _g_propagate_error($1,$23);
  STACKTOP = sp;return;
 } else {
  $24 = ((($23)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$23>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($23)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1731;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $25;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $29;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148632)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,132370,118836,0)|0);
  _g_once_init_leave(148632,$4);
 }
 $5 = HEAP32[37158]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 _g_free($14);
 $15 = HEAP32[$7>>2]|0;
 $16 = ((($15)) + 4|0);
 HEAP32[$16>>2] = 0;
 $17 = HEAP32[$7>>2]|0;
 $18 = ((($17)) + 40|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $23 = HEAP32[37159]|0;
  $24 = (_g_type_check_class_cast($23,80)|0);
  $25 = ((($23)) + 36|0);
  $26 = HEAP32[$25>>2]|0;
  ftCall_vi($26|0,$0);
  return;
 }
 _g_object_unref($19);
 $21 = HEAP32[$7>>2]|0;
 $22 = ((($21)) + 40|0);
 HEAP32[$22>>2] = 0;
 $23 = HEAP32[37159]|0;
 $24 = (_g_type_check_class_cast($23,80)|0);
 $25 = ((($23)) + 36|0);
 $26 = HEAP32[$25>>2]|0;
 ftCall_vi($26|0,$0);
 return;
}
function _system_io_buffered_reader_EnsureOpen($$0$1$val$0$0$val,$0) {
 $$0$1$val$0$0$val = $$0$1$val$0$0$val|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $1 = sp + 20|0;
 HEAP32[$1>>2] = 0;
 $2 = ($$0$1$val$0$0$val|0)==(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,0,132424)|0);
 HEAP32[$1>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($0,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 257;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($1);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_Fill($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre238 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)<(0);
 do {
  if ($7) {
   $$2 = 0;$42 = $4;
  } else {
   $8 = ((($4)) + 20|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (($9) - ($6))|0;
   $11 = ((($4)) + 28|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($10|0)<($12|0);
   if (!($13)) {
    HEAP32[$5>>2] = -2;
    HEAP32[$11>>2] = 0;
    $$2 = 0;$42 = $4;
    break;
   }
   $14 = ((($4)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($12|0)>($15|0);
   if ($16) {
    $21 = (_g_malloc0($12)|0);
    $22 = HEAP32[$3>>2]|0;
    $23 = ((($22)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($22)) + 24|0);
    $26 = HEAP32[$25>>2]|0;
    _system_arraycopy(12,0,0,$24,$26,$21,0,$10);
    $27 = ($21|0)==(0|0);
    if ($27) {
     $34 = 0;
    } else {
     $28 = (_g_memdup($21,$12)|0);
     $34 = $28;
    }
    $29 = HEAP32[$3>>2]|0;
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    _g_free($31);
    $32 = HEAP32[$3>>2]|0;
    $33 = ((($32)) + 4|0);
    HEAP32[$33>>2] = $34;
    $35 = ((($32)) + 8|0);
    HEAP32[$35>>2] = $12;
    $36 = ((($32)) + 12|0);
    HEAP32[$36>>2] = $12;
    $37 = ((($32)) + 24|0);
    HEAP32[$37>>2] = 0;
    _g_free($21);
    $$pre = HEAP32[$3>>2]|0;
    $39 = $$pre;
   } else {
    $17 = ((($4)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    _system_arraycopy(12,0,0,$18,$6,$18,0,$10);
    $19 = HEAP32[$3>>2]|0;
    $20 = ((($19)) + 24|0);
    HEAP32[$20>>2] = 0;
    $39 = $19;
   }
   $38 = ((($39)) + 16|0);
   HEAP32[$38>>2] = $10;
   $40 = ((($39)) + 20|0);
   HEAP32[$40>>2] = $10;
   $$2 = $10;$42 = $39;
  }
 } while(0);
 $41 = HEAP32[$42>>2]|0;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($42)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($46) - ($$2))|0;
 $48 = (_system_io_reader_Read($41,$44,$46,$$2,$47,$2)|0);
 $49 = HEAP32[$2>>2]|0;
 $50 = ($49|0)==(0|0);
 L14: do {
  if ($50) {
   $52 = $48;
   while(1) {
    $51 = ($52|0)==(0);
    if (!($51)) {
     break;
    }
    $$pre238 = HEAP32[$3>>2]|0;
    $53 = HEAP32[$$pre238>>2]|0;
    $54 = ((($$pre238)) + 4|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($$pre238)) + 8|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (($57) - ($$2))|0;
    $59 = (_system_io_reader_Read($53,$55,$57,$$2,$58,$2)|0);
    $60 = HEAP32[$2>>2]|0;
    $61 = ($60|0)==(0|0);
    if ($61) {
     $52 = $59;
    } else {
     $$lcssa = $60;
     break L14;
    }
   }
   $72 = ($52|0)>(0);
   if (!($72)) {
    STACKTOP = sp;return;
   }
   $73 = (($52) + ($$2))|0;
   $74 = HEAP32[$3>>2]|0;
   $75 = ((($74)) + 16|0);
   HEAP32[$75>>2] = $73;
   $76 = ((($74)) + 20|0);
   HEAP32[$76>>2] = $$2;
   STACKTOP = sp;return;
  } else {
   $$lcssa = $49;
  }
 } while(0);
 $62 = HEAP32[$$lcssa>>2]|0;
 $63 = (_system_io_exception_quark()|0);
 $64 = ($62|0)==($63|0);
 $65 = HEAP32[$2>>2]|0;
 if ($64) {
  _g_propagate_error($1,$65);
  STACKTOP = sp;return;
 } else {
  $66 = ((($65)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = HEAP32[$65>>2]|0;
  $69 = (_g_quark_to_string($68)|0);
  $70 = ((($65)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 409;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $67;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $69;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $71;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_Read1($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$218 = 0, $$6 = 0, $$phi$trans$insert = 0, $$phi$trans$insert229 = 0, $$phi$trans$insert232 = 0, $$phi$trans$insert234 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre228 = 0, $$pre230 = 0, $$pre231 = 0, $$pre233 = 0, $$pre235 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer5 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 68|0;
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)<($12|0);
 do {
  if ($13) {
   $$pre$phiZ2D = $9;$50 = $10;$51 = $12;$53 = $8;
  } else {
   $14 = ((($8)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)>($4|0);
   if (!($16)) {
    $17 = ((($8)) + 24|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)>(-1);
    if (!($19)) {
     $20 = ((($8)) + 32|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(0);
     if ($22) {
      $23 = HEAP32[$8>>2]|0;
      $24 = (_system_io_reader_Read($23,$1,$2,$3,$4,$6)|0);
      $25 = HEAP32[$6>>2]|0;
      $26 = ($25|0)==(0|0);
      if ($26) {
       $$6 = $24;
       STACKTOP = sp;return ($$6|0);
      }
      $27 = HEAP32[$25>>2]|0;
      $28 = (_system_io_exception_quark()|0);
      $29 = ($27|0)==($28|0);
      $30 = HEAP32[$6>>2]|0;
      if ($29) {
       _g_propagate_error($5,$30);
       $$6 = 0;
       STACKTOP = sp;return ($$6|0);
      } else {
       $31 = ((($30)) + 8|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = HEAP32[$30>>2]|0;
       $34 = (_g_quark_to_string($33)|0);
       $35 = ((($30)) + 4|0);
       $36 = HEAP32[$35>>2]|0;
       HEAP32[$vararg_buffer>>2] = 132328;
       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
       HEAP32[$vararg_ptr1>>2] = 615;
       $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
       HEAP32[$vararg_ptr2>>2] = $32;
       $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
       HEAP32[$vararg_ptr3>>2] = $34;
       $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
       HEAP32[$vararg_ptr4>>2] = $36;
       _g_log(0,8,143216,$vararg_buffer);
       _g_clear_error($6);
       $$6 = 0;
       STACKTOP = sp;return ($$6|0);
      }
     }
    }
   }
   _system_io_buffered_reader_Fill($0,$6);
   $37 = HEAP32[$6>>2]|0;
   $38 = ($37|0)==(0|0);
   if ($38) {
    $$pre = HEAP32[$7>>2]|0;
    $$phi$trans$insert = ((($$pre)) + 20|0);
    $$pre228 = HEAP32[$$phi$trans$insert>>2]|0;
    $$phi$trans$insert229 = ((($$pre)) + 16|0);
    $$pre230 = HEAP32[$$phi$trans$insert229>>2]|0;
    $$pre$phiZ2D = $$phi$trans$insert;$50 = $$pre228;$51 = $$pre230;$53 = $$pre;
    break;
   }
   $39 = HEAP32[$37>>2]|0;
   $40 = (_system_io_exception_quark()|0);
   $41 = ($39|0)==($40|0);
   $42 = HEAP32[$6>>2]|0;
   if ($41) {
    _g_propagate_error($5,$42);
    $$6 = 0;
    STACKTOP = sp;return ($$6|0);
   } else {
    $43 = ((($42)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$42>>2]|0;
    $46 = (_g_quark_to_string($45)|0);
    $47 = ((($42)) + 4|0);
    $48 = HEAP32[$47>>2]|0;
    HEAP32[$vararg_buffer5>>2] = 132328;
    $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
    HEAP32[$vararg_ptr8>>2] = 631;
    $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
    HEAP32[$vararg_ptr9>>2] = $44;
    $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
    HEAP32[$vararg_ptr10>>2] = $46;
    $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
    HEAP32[$vararg_ptr11>>2] = $48;
    _g_log(0,8,143216,$vararg_buffer5);
    _g_clear_error($6);
    $$6 = 0;
    STACKTOP = sp;return ($$6|0);
   }
  }
 } while(0);
 $49 = ($50|0)<($51|0);
 if (!($49)) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $52 = ((($53)) + 32|0);
 $54 = HEAP32[$52>>2]|0;
 $55 = ($54|0)==(0);
 if ($55) {
  $79 = $50;$80 = $51;$83 = $53;
 } else {
  HEAP32[$52>>2] = 0;
  $56 = ((($53)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = (($57) + ($50)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = ($59<<24>>24)==(10);
  if ($60) {
   $61 = (($50) + 1)|0;
   HEAP32[$$pre$phiZ2D>>2] = $61;
   $62 = ($61|0)<($51|0);
   do {
    if ($62) {
     $76 = $61;$77 = $51;$89 = $53;
    } else {
     _system_io_buffered_reader_Fill($0,$6);
     $63 = HEAP32[$6>>2]|0;
     $64 = ($63|0)==(0|0);
     if ($64) {
      $$pre231 = HEAP32[$7>>2]|0;
      $$phi$trans$insert232 = ((($$pre231)) + 20|0);
      $$pre233 = HEAP32[$$phi$trans$insert232>>2]|0;
      $$phi$trans$insert234 = ((($$pre231)) + 16|0);
      $$pre235 = HEAP32[$$phi$trans$insert234>>2]|0;
      $76 = $$pre233;$77 = $$pre235;$89 = $$pre231;
      break;
     }
     $65 = HEAP32[$63>>2]|0;
     $66 = (_system_io_exception_quark()|0);
     $67 = ($65|0)==($66|0);
     $68 = HEAP32[$6>>2]|0;
     if ($67) {
      _g_propagate_error($5,$68);
      $$6 = 0;
      STACKTOP = sp;return ($$6|0);
     } else {
      $69 = ((($68)) + 8|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = HEAP32[$68>>2]|0;
      $72 = (_g_quark_to_string($71)|0);
      $73 = ((($68)) + 4|0);
      $74 = HEAP32[$73>>2]|0;
      HEAP32[$vararg_buffer12>>2] = 132328;
      $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
      HEAP32[$vararg_ptr15>>2] = 673;
      $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
      HEAP32[$vararg_ptr16>>2] = $70;
      $vararg_ptr17 = ((($vararg_buffer12)) + 12|0);
      HEAP32[$vararg_ptr17>>2] = $72;
      $vararg_ptr18 = ((($vararg_buffer12)) + 16|0);
      HEAP32[$vararg_ptr18>>2] = $74;
      _g_log(0,8,143216,$vararg_buffer12);
      _g_clear_error($6);
      $$6 = 0;
      STACKTOP = sp;return ($$6|0);
     }
    }
   } while(0);
   $75 = ($76|0)<($77|0);
   if ($75) {
    $79 = $76;$80 = $77;$83 = $89;
   } else {
    $$6 = -1;
    STACKTOP = sp;return ($$6|0);
   }
  } else {
   $79 = $50;$80 = $51;$83 = $53;
  }
 }
 $78 = (($80) - ($79))|0;
 $81 = ($78|0)>($4|0);
 $$218 = $81 ? $4 : $78;
 $82 = ((($83)) + 4|0);
 $84 = HEAP32[$82>>2]|0;
 _system_arraycopy(12,0,0,$84,$79,$1,$3,$$218);
 $85 = HEAP32[$7>>2]|0;
 $86 = ((($85)) + 20|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = (($87) + ($$218))|0;
 HEAP32[$86>>2] = $88;
 $$6 = $$218;
 STACKTOP = sp;return ($$6|0);
}
function _system_io_buffered_reader_ReadLine($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0307 = 0, $$0313 = 0, $$0313$ph = 0, $$0317$ = 0, $$0317353 = 0, $$0332 = 0, $$4 = 0, $$5 = 0, $$7344 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert372 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre371 = 0, $$pre373 = 0, $$pre374 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $spec$select = 0;
 var $spec$select$lcssa = 0, $spec$select$lcssa376377 = 0, $spec$select$lcssa376378 = 0, $spec$select354 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$4>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5|0)==(0|0);
 L1: do {
  if ($6) {
   $7 = ($1|0)==(0);
   if ($7) {
    $8 = HEAP32[$4>>2]|0;
    $9 = ((($8)) + 32|0);
    $10 = HEAP32[$9>>2]|0;
    $$0313$ph = $10;
   } else {
    $$0313$ph = 1;
   }
   $$0307 = 0;$$0313 = $$0313$ph;
   while(1) {
    $11 = HEAP32[$4>>2]|0;
    $12 = ((($11)) + 20|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ((($11)) + 16|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($13|0)<($15|0);
    if ($16) {
     $$pre$phiZ2D = $12;$20 = $13;$21 = $15;$30 = $11;
    } else {
     _system_io_buffered_reader_Fill($0,$3);
     $17 = HEAP32[$3>>2]|0;
     $18 = ($17|0)==(0|0);
     if (!($18)) {
      $$7344 = $$0307;
      break L1;
     }
     $$pre = HEAP32[$4>>2]|0;
     $$phi$trans$insert = ((($$pre)) + 20|0);
     $$pre371 = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert372 = ((($$pre)) + 16|0);
     $$pre373 = HEAP32[$$phi$trans$insert372>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$20 = $$pre371;$21 = $$pre373;$30 = $$pre;
    }
    $19 = ($20|0)<($21|0);
    if (!($19)) {
     label = 9;
     break;
    }
    $28 = ($$0313|0)==(0);
    if ($28) {
     $38 = $20;
    } else {
     $29 = ((($30)) + 4|0);
     $31 = HEAP32[$29>>2]|0;
     $32 = (($31) + ($20)|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(10);
     if ($34) {
      $35 = (($20) + 1)|0;
      HEAP32[$$pre$phiZ2D>>2] = $35;
      $38 = $35;
     } else {
      $38 = $20;
     }
    }
    $36 = ((($30)) + 32|0);
    HEAP32[$36>>2] = 0;
    $37 = ($38|0)<($21|0);
    if ($37) {
     $40 = ((($30)) + 4|0);
     $41 = HEAP32[$40>>2]|0;
     $$0317353 = 0;$spec$select354 = $38;
     L19: while(1) {
      $42 = (($41) + ($spec$select354)|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)!=(10);
      $45 = ($43<<24>>24)!=(13);
      $46 = $44 & $45;
      $$0317$ = $46 ? $$0317353 : 1;
      switch ($43<<24>>24) {
      case 10: case 13:  {
       $spec$select$lcssa = $spec$select354;
       break L19;
       break;
      }
      default: {
      }
      }
      $spec$select = (($spec$select354) + 1)|0;
      $47 = ($spec$select|0)<($21|0);
      if ($47) {
       $$0317353 = $$0317$;$spec$select354 = $spec$select;
      } else {
       $spec$select$lcssa = $spec$select;
       break;
      }
     }
     HEAP32[$$pre$phiZ2D>>2] = $spec$select$lcssa;
     $48 = ($$0317$|0)==(0);
     $49 = ($$0307|0)==(0|0);
     if (!($48)) {
      break;
     }
     if ($49) {
      $spec$select$lcssa376378 = $spec$select$lcssa;
      label = 31;
     } else {
      $$5 = $$0307;$65 = $30;$spec$select$lcssa376377 = $spec$select$lcssa;
     }
    } else {
     HEAP32[$$pre$phiZ2D>>2] = $38;
     $39 = ($$0307|0)==(0|0);
     if ($39) {
      $spec$select$lcssa376378 = $38;
      label = 31;
     } else {
      $$5 = $$0307;$65 = $30;$spec$select$lcssa376377 = $38;
     }
    }
    if ((label|0) == 31) {
     label = 0;
     $63 = (_g_string_new(149641)|0);
     $$pre374 = HEAP32[$4>>2]|0;
     $$5 = $63;$65 = $$pre374;$spec$select$lcssa376377 = $spec$select$lcssa376378;
    }
    $64 = ((($65)) + 4|0);
    $66 = HEAP32[$64>>2]|0;
    $67 = (($66) + ($38)|0);
    $68 = (($spec$select$lcssa376377) - ($38))|0;
    $69 = (_g_strndup($67,$68)|0);
    (_g_string_append($$5,$69)|0);
    _g_free($69);
    $$0307 = $$5;$$0313 = 0;
   }
   if ((label|0) == 9) {
    $22 = ($$0307|0)==(0|0);
    if ($22) {
     $$4 = 0;
     STACKTOP = sp;return ($$4|0);
    }
    $23 = ((($$0307)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)<(1);
    if ($25) {
     (_g_string_free($$0307,1)|0);
     $$4 = 0;
     STACKTOP = sp;return ($$4|0);
    } else {
     $26 = HEAP32[$$0307>>2]|0;
     $27 = (_g_strdup($26)|0);
     (_g_string_free($$0307,1)|0);
     $$4 = $27;
     STACKTOP = sp;return ($$4|0);
    }
   }
   $50 = ((($30)) + 4|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (($51) + ($38)|0);
   $53 = (($spec$select$lcssa) - ($38))|0;
   $54 = (_g_strndup($52,$53)|0);
   if ($49) {
    _g_free(0);
    $$0332 = $54;
   } else {
    (_g_string_append($$0307,$54)|0);
    _g_free($54);
    $55 = HEAP32[$$0307>>2]|0;
    $56 = (_g_strdup($55)|0);
    _g_free(0);
    $$0332 = $56;
   }
   $57 = HEAP32[$4>>2]|0;
   $58 = ((($57)) + 20|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($59) + 1)|0;
   HEAP32[$58>>2] = $60;
   $61 = ($43<<24>>24)==(13);
   if ($61) {
    $62 = ((($57)) + 32|0);
    HEAP32[$62>>2] = 1;
   }
   if ($49) {
    $$4 = $$0332;
    STACKTOP = sp;return ($$4|0);
   }
   (_g_string_free($$0307,1)|0);
   $$4 = $$0332;
   STACKTOP = sp;return ($$4|0);
  } else {
   $$7344 = 0;
  }
 } while(0);
 $70 = HEAP32[$3>>2]|0;
 $71 = HEAP32[$70>>2]|0;
 $72 = (_system_io_exception_quark()|0);
 $73 = ($71|0)==($72|0);
 if ($73) {
  $74 = HEAP32[$3>>2]|0;
  _g_propagate_error($2,$74);
  $75 = ($$7344|0)==(0|0);
  if ($75) {
   $$4 = 0;
   STACKTOP = sp;return ($$4|0);
  }
  (_g_string_free($$7344,1)|0);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 } else {
  $76 = ($$7344|0)==(0|0);
  if (!($76)) {
   (_g_string_free($$7344,1)|0);
  }
  $77 = HEAP32[$3>>2]|0;
  $78 = ((($77)) + 8|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = HEAP32[$77>>2]|0;
  $81 = (_g_quark_to_string($80)|0);
  $82 = ((($77)) + 4|0);
  $83 = HEAP32[$82>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132328;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1259;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $79;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $81;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $83;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($3);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 return (0)|0;
}
function _system_io_default_file_system_GetFileSystem() {
 var $0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 _g_print(132474,$vararg_buffer);
 $0 = (_system_io_emscripten_file_system_new()|0);
 _g_print(132507,$vararg_buffer1);
 STACKTOP = sp;return ($0|0);
}
function _system_io_emscripten_file_system_new() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148640)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_system_io_file_system_get_type()|0);
  $3 = (_g_type_register_static($2,132536,118872,0)|0);
  _g_once_init_leave(148640,$3);
 }
 $4 = HEAP32[37160]|0;
 $5 = (_system_io_file_system_construct($4)|0);
 $6 = ((($5)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP8[$7>>0] = 47;
 $8 = ((($7)) + 2|0);
 HEAP8[$8>>0] = 59;
 $9 = ((($7)) + 1|0);
 HEAP8[$9>>0] = 92;
 return ($5|0);
}
function _system_io_emscripten_file_system_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37161] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 308;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 309;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 310;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 311;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 312;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 313;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 314;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 315;
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 316;
 $11 = ((($0)) + 132|0);
 HEAP32[$11>>2] = 317;
 $12 = ((($0)) + 136|0);
 HEAP32[$12>>2] = 318;
 $13 = ((($0)) + 140|0);
 HEAP32[$13>>2] = 319;
 $14 = ((($0)) + 148|0);
 HEAP32[$14>>2] = 320;
 $15 = ((($0)) + 152|0);
 HEAP32[$15>>2] = 321;
 $16 = ((($0)) + 144|0);
 HEAP32[$16>>2] = 322;
 $17 = ((($0)) + 156|0);
 HEAP32[$17>>2] = 323;
 $18 = ((($0)) + 164|0);
 HEAP32[$18>>2] = 324;
 $19 = ((($0)) + 168|0);
 HEAP32[$19>>2] = 325;
 $20 = ((($0)) + 176|0);
 HEAP32[$20>>2] = 326;
 $21 = ((($0)) + 180|0);
 HEAP32[$21>>2] = 327;
 $22 = ((($0)) + 160|0);
 HEAP32[$22>>2] = 328;
 $23 = ((($0)) + 172|0);
 HEAP32[$23>>2] = 329;
 $24 = ((($0)) + 184|0);
 HEAP32[$24>>2] = 330;
 $25 = ((($0)) + 188|0);
 HEAP32[$25>>2] = 331;
 $26 = ((($0)) + 192|0);
 HEAP32[$26>>2] = 332;
 $27 = ((($0)) + 196|0);
 HEAP32[$27>>2] = 333;
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = ((($0)) + 36|0);
 HEAP32[$29>>2] = 334;
 $30 = (_g_malloc0_n(27,4)|0);
 HEAP32[37162] = $30;
 return;
}
function _system_io_emscripten_file_system_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148640)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_file_system_get_type()|0);
  $4 = (_g_type_register_static($3,132536,118872,0)|0);
  _g_once_init_leave(148640,$4);
 }
 $5 = HEAP32[37160]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = (_system_collections_generic_dictionary_new(64,335,336,64,335,336,0,0,0)|0);
 $9 = HEAP32[$7>>2]|0;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $8;
 $11 = (_system_collections_generic_dictionary_new(64,335,336,64,335,336,0,0,0)|0);
 $12 = HEAP32[$7>>2]|0;
 $13 = ((($12)) + 8|0);
 HEAP32[$13>>2] = $11;
 return;
}
function _system_io_emscripten_file_system_real_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP8[$2>>0]|0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 2|0);
 $4 = HEAP8[$3>>0]|0;
 return ($4|0);
}
function _system_io_emscripten_file_system_real_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0170 = 0, $$0172 = 0, $$0174 = 0, $$0178 = 0, $$0181 = 0, $$1 = 0, $$1171 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $narrow = 0, $narrow184 = 0, $not$ = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ((($4)) + 1|0);
 $7 = HEAP8[$6>>0]|0;
 $$0 = 0;$$0170 = 0;$$0172 = 0;$$0174 = 0;
 L1: while(1) {
  $spec$select = (($$0172) + ($$0174))|0;
  $8 = ($spec$select|0)<($2|0);
  do {
   if ($8) {
    $9 = (($1) + ($spec$select)|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==($7<<24>>24);
    if ($11) {
     $12 = ($$0170<<24>>24)==($5<<24>>24);
     $13 = $12 << 31 >> 31;
     $$0181 = (($spec$select) + ($13))|0;
     $14 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$$0181)|0);
     $$0178 = 1;$$1 = $14;$$1171 = $$0170;
     break;
    }
    $15 = ($10<<24>>24)==($5<<24>>24);
    $16 = ($$0170<<24>>24)==($5<<24>>24);
    $17 = ($spec$select>>>0)>(1);
    $not$ = $16 & $15;
    $narrow = $17 & $not$;
    if ($narrow) {
     $18 = (($spec$select) + -1)|0;
     $19 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$18)|0);
     $$0178 = 1;$$1 = $19;$$1171 = $5;
     break;
    }
    $20 = ($10<<24>>24)==(58);
    $narrow184 = $17 & $20;
    if ($narrow184) {
     $21 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,0)|0);
     $$0178 = 1;$$1 = $21;$$1171 = $$0170;
    } else {
     $$0178 = 0;$$1 = $$0;$$1171 = $10;
    }
   } else {
    $$0178 = 5;$$1 = $$0;$$1171 = $$0170;
   }
  } while(0);
  $trunc = $$0178&255;
  $trunc$clear = $trunc & 7;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0 = $$1;$$0170 = $$1171;$$0172 = $spec$select;$$0174 = 1;
   break;
  }
  case 5:  {
   break L1;
   break;
  }
  default: {
   label = 10;
   break L1;
  }
  }
 }
 if ((label|0) == 10) {
  $cond = ($$0178|0)==(0);
  if (!($cond)) {
   $$2 = $$1;
   return ($$2|0);
  }
 }
 $22 = ($$1171<<24>>24)==($5<<24>>24);
 if ($22) {
  $23 = (($2) + -1)|0;
  $24 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$23)|0);
  $$2 = $24;
  return ($$2|0);
 } else {
  $25 = (_g_strdup($1)|0);
  $$2 = $25;
  return ($$2|0);
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$077 = 0, $$078 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP8[$3>>0]|0;
 $5 = (_strlen($1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $$2 = 0;
  return ($$2|0);
 }
 $7 = HEAP8[$1>>0]|0;
 $8 = ($5|0)>(1);
 if ($8) {
  $9 = ((($1)) + 1|0);
  $10 = HEAP8[$9>>0]|0;
  $$077 = $10;
 } else {
  $$077 = 0;
 }
 $11 = ($7<<24>>24)==($4<<24>>24);
 if ($11) {
  $12 = ($$077<<24>>24)==($4<<24>>24);
  $$ = $12 ? 2 : 1;
  $$2 = $$;
  return ($$2|0);
 }
 $13 = $7 & -33;
 $14 = (($13) + -65)<<24>>24;
 $15 = ($14&255)<(26);
 $16 = ($$077<<24>>24)==(58);
 $$078 = $15 & $16;
 if (!($$078)) {
  $$2 = 0;
  return ($$2|0);
 }
 $17 = ($5|0)>(2);
 if ($17) {
  $18 = ((($1)) + 2|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = ($19<<24>>24)==($4<<24>>24);
  $spec$select = $20 ? 3 : 2;
  return ($spec$select|0);
 } else {
  $$2 = 2;
  return ($$2|0);
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0$i$i = 0, $$0344 = 0, $$0345 = 0, $$088$i = 0, $$1341 = 0, $$2 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi358Z2D = 0, $$pre357 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i349 = 0, $or$cond$i351 = 0, $or$cond$i353 = 0;
 var $spec$select = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strlen($1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = (_g_strdup($2)|0);
  $$2 = $5;
  return ($$2|0);
 }
 $6 = (_strlen($2)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = (_g_strdup($1)|0);
  $$2 = $8;
  return ($$2|0);
 }
 $9 = (_g_strdup($2)|0);
 $10 = ($6|0)>(1);
 if ($10) {
  $11 = HEAP8[$9>>0]|0;
  $12 = ((($0)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP8[$13>>0]|0;
  $15 = ($11<<24>>24)==($14<<24>>24);
  if ($15) {
   $16 = ((($9)) + 1|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = ($17<<24>>24)==($11<<24>>24);
   $$ = $18 ? 2 : 1;
   $19 = ($6|0)==($$|0);
   if ($19) {
    $20 = (($3) + -1)|0;
    $21 = (($1) + ($20)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = ($22<<24>>24)==($11<<24>>24);
    if (!($23)) {
     $33 = (_g_strdup($1)|0);
     _g_free($9);
     $$2 = $33;
     return ($$2|0);
    }
    $24 = ($3|0)>(0);
    if ($24) {
     $25 = (_memchr($1,0,$20)|0);
     $26 = ($25|0)==(0|0);
     $27 = $25;
     $28 = $1;
     $29 = (($27) - ($28))|0;
     $$0$i$i = $26 ? $20 : $29;
     $$088$i = $$0$i$i;
    } else {
     $30 = (_strlen($1)|0);
     $$088$i = $30;
    }
    $31 = ($3|0)<(1);
    $spec$select$i = $31 ? $$088$i : $20;
    $32 = (_g_strndup($1,$spec$select$i)|0);
    _g_free($9);
    $$2 = $32;
    return ($$2|0);
   } else {
    $$1341 = $$;$$pre$phi358Z2D = $12;$38 = $11;
   }
  } else {
   $$1341 = 0;$$pre$phi358Z2D = $12;$38 = $14;
  }
 } else {
  $$phi$trans$insert = ((($0)) + 20|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre357 = HEAP8[$$pre>>0]|0;
  $$1341 = 0;$$pre$phi358Z2D = $$phi$trans$insert;$38 = $$pre357;
 }
 $34 = (($3) + -1)|0;
 $35 = (($1) + ($34)|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = ($36<<24>>24)==($38<<24>>24);
 $spec$select = $37 ? $34 : $3;
 $39 = (($6) - ($$1341))|0;
 $40 = (($39) + ($spec$select))|0;
 $41 = (($2) + ($$1341)|0);
 $42 = HEAP8[$41>>0]|0;
 $43 = ($42<<24>>24)==($38<<24>>24);
 if ($43) {
  $44 = (_g_malloc0($40)|0);
  _g_free(0);
  $45 = (_strlen($1)|0);
  $46 = ($45|0)<($spec$select|0);
  $47 = ($spec$select|0)<(0);
  $or$cond$i353 = $47 | $46;
  if (!($or$cond$i353)) {
   _memcpy(($44|0),($1|0),($spec$select|0))|0;
  }
  $48 = (_strlen($2)|0);
  $49 = ($48|0)<($6|0);
  $50 = ($6|0)<($$1341|0);
  $or$cond$i351 = $50 | $49;
  if ($or$cond$i351) {
   $$0344 = $44;$$0345 = $40;
  } else {
   $51 = (($44) + ($spec$select)|0);
   $52 = (($2) + ($spec$select)|0);
   _memcpy(($51|0),($52|0),($39|0))|0;
   $$0344 = $44;$$0345 = $40;
  }
 } else {
  $53 = (($40) + 1)|0;
  $54 = (_g_malloc0($53)|0);
  _g_free(0);
  $55 = (_strlen($1)|0);
  $56 = ($55|0)<($spec$select|0);
  $57 = ($spec$select|0)<(0);
  $or$cond$i349 = $57 | $56;
  if (!($or$cond$i349)) {
   _memcpy(($54|0),($1|0),($spec$select|0))|0;
  }
  $58 = HEAP32[$$pre$phi358Z2D>>2]|0;
  $59 = HEAP8[$58>>0]|0;
  $60 = (($54) + ($spec$select)|0);
  HEAP8[$60>>0] = $59;
  $61 = (($spec$select) + 1)|0;
  $62 = (_strlen($2)|0);
  $63 = ($62|0)<($6|0);
  $64 = ($6|0)<($$1341|0);
  $or$cond$i = $64 | $63;
  if ($or$cond$i) {
   $$0344 = $54;$$0345 = $53;
  } else {
   $65 = (($54) + ($61)|0);
   $66 = (($2) + ($61)|0);
   _memcpy(($65|0),($66|0),($39|0))|0;
   $$0344 = $54;$$0345 = $53;
  }
 }
 $67 = (_g_strndup($$0344,$$0345)|0);
 _g_free($$0344);
 _g_free($9);
 $$2 = $67;
 return ($$2|0);
}
function _system_io_emscripten_file_system_real_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 8|0;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP8[$3>>0]|0;
 $5 = $4 << 24 >> 24;
 HEAP32[$1>>2] = $5;
 $6 = (_g_strndup($1,1)|0);
 HEAP32[$vararg_buffer>>2] = $6;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $7 = (_g_strconcat(149641,$vararg_buffer)|0);
 _g_free($6);
 STACKTOP = sp;return ($7|0);
}
function _system_io_emscripten_file_system_real_FromURIPath($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i$i123 = 0, $$088$i = 0, $$088$i124 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $phitmp = 0, $phitmp119 = 0, $spec$select$i = 0, $spec$select$i125 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_strdup($1)|0);
 $3 = (_strlen($2)|0);
 $4 = ($3|0)>(2);
 if ($4) {
  $5 = ((($2)) + 2|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)==(58);
  if ($7) {
   $8 = (_strlen($2)|0);
   $9 = (($8) + -1)|0;
   $10 = ((($2)) + 1|0);
   $11 = (_g_strndup($10,$9)|0);
   _g_free($2);
   $12 = (_strlen($11)|0);
   $13 = ($12|0)>(3);
   if (!($13)) {
    $$2 = $11;
    return ($$2|0);
   }
   $14 = (_g_str_has_suffix($11,132638)|0);
   $phitmp119 = ($14|0)==(0);
   if ($phitmp119) {
    $$2 = $11;
    return ($$2|0);
   }
   $15 = (_strlen($11)|0);
   $16 = (($15) + -1)|0;
   $17 = ($15|0)>(0);
   if ($17) {
    $18 = (_memchr($11,0,$16)|0);
    $19 = ($18|0)==(0|0);
    $20 = $18;
    $21 = $11;
    $22 = (($20) - ($21))|0;
    $$0$i$i123 = $19 ? $16 : $22;
    $$088$i124 = $$0$i$i123;
   } else {
    $23 = (_strlen($11)|0);
    $$088$i124 = $23;
   }
   $24 = ($15|0)<(1);
   $spec$select$i125 = $24 ? $$088$i124 : $16;
   $25 = (_g_strndup($11,$spec$select$i125)|0);
   _g_free($11);
   $$2 = $25;
   return ($$2|0);
  }
 } else {
  $26 = ($3|0)==(2);
  if (!($26)) {
   $$2 = $2;
   return ($$2|0);
  }
 }
 $27 = (_g_str_has_suffix($2,132638)|0);
 $phitmp = ($27|0)==(0);
 if ($phitmp) {
  $$2 = $2;
  return ($$2|0);
 }
 $28 = (_strlen($2)|0);
 $29 = (($28) + -1)|0;
 $30 = ($28|0)>(0);
 if ($30) {
  $31 = (_memchr($2,0,$29)|0);
  $32 = ($31|0)==(0|0);
  $33 = $31;
  $34 = $2;
  $35 = (($33) - ($34))|0;
  $$0$i$i = $32 ? $29 : $35;
  $$088$i = $$0$i$i;
 } else {
  $36 = (_strlen($2)|0);
  $$088$i = $36;
 }
 $37 = ($28|0)<(1);
 $spec$select$i = $37 ? $$088$i : $29;
 $38 = (_g_strndup($2,$spec$select$i)|0);
 _g_free($2);
 $$2 = $38;
 return ($$2|0);
}
function _system_io_emscripten_file_system_real_IsAbsolute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPrefixLength($1)|0);
 $3 = ($2|0)==(2);
 if ($3) {
  $4 = (_system_io_file_GetPath($1)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = ((($0)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP8[$7>>0]|0;
  $9 = ($5<<24>>24)==($8<<24>>24);
  _g_free($4);
  if ($9) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $10 = ($2|0)==(3);
 $11 = $10&1;
 $$0 = $11;
 return ($$0|0);
}
function _system_io_emscripten_file_system_real_ResolveFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i350 = 0, $$0$i353363 = 0, $$0$i356 = 0, $$0$i358 = 0, $$0$i360 = 0, $$2 = 0, $$off$i$i = 0, $$off25$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0;
 var $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer30 = 0, $vararg_buffer34 = 0, $vararg_buffer38 = 0, $vararg_buffer42 = 0, $vararg_buffer46 = 0, $vararg_buffer50 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr21 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr33 = 0, $vararg_ptr37 = 0, $vararg_ptr41 = 0, $vararg_ptr45 = 0, $vararg_ptr49 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr53 = 0, $vararg_ptr54 = 0, $vararg_ptr55 = 0, $vararg_ptr56 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $vararg_buffer50 = sp + 104|0;
 $vararg_buffer46 = sp + 96|0;
 $vararg_buffer42 = sp + 88|0;
 $vararg_buffer38 = sp + 80|0;
 $vararg_buffer34 = sp + 72|0;
 $vararg_buffer30 = sp + 64|0;
 $vararg_buffer26 = sp + 56|0;
 $vararg_buffer22 = sp + 48|0;
 $vararg_buffer18 = sp + 40|0;
 $vararg_buffer14 = sp + 32|0;
 $vararg_buffer10 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 128|0;
 $3 = sp + 124|0;
 HEAP32[$3>>2] = 0;
 $4 = (_system_io_file_GetPath($1)|0);
 $5 = (_system_io_file_GetPrefixLength($1)|0);
 switch ($5|0) {
 case 2:  {
  $6 = HEAP8[$4>>0]|0;
  $7 = ((($0)) + 20|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP8[$8>>0]|0;
  $10 = ($6<<24>>24)==($9<<24>>24);
  if ($10) {
   $$2 = $4;
   STACKTOP = sp;return ($$2|0);
  }
  $31 = (_system_io_file_system_Normalize($0,143379)|0);
  $32 = (_system_io_file_system_PrefixLength($0,$31)|0);
  $33 = ($32|0)==(3);
  if ($33) {
   $34 = (_g_strndup($31,2)|0);
   _g_free(0);
   $35 = ($34|0)==(0|0);
   if ($35) {
    $$0$i353363 = 0;
   } else {
    $36 = (_g_str_has_prefix($4,$34)|0);
    $phitmp = ($36|0)==(0);
    if ($phitmp) {
     $$0$i353363 = $34;
    } else {
     $37 = (_strlen($4)|0);
     $38 = (($37) + -2)|0;
     $39 = ((($4)) + 2|0);
     $40 = (_g_strndup($39,$38)|0);
     $41 = (_strlen($40)|0);
     $42 = ($41|0)>(0);
     if ($42) {
      $43 = HEAP8[$40>>0]|0;
      $44 = HEAP32[$7>>2]|0;
      $45 = HEAP8[$44>>0]|0;
      $46 = ($43<<24>>24)==($45<<24>>24);
      if ($46) {
       label = 20;
      } else {
       $47 = $45 << 24 >> 24;
       HEAP32[$2>>2] = $47;
       $48 = (_g_strndup($2,1)|0);
       HEAP32[$vararg_buffer14>>2] = $40;
       $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
       HEAP32[$vararg_ptr17>>2] = 0;
       $49 = (_g_strconcat($48,$vararg_buffer14)|0);
       _g_free($48);
       $$0$i356 = $49;
      }
     } else {
      label = 20;
     }
     if ((label|0) == 20) {
      $50 = (_g_strdup($40)|0);
      $$0$i356 = $50;
     }
     HEAP32[$vararg_buffer18>>2] = $$0$i356;
     $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
     HEAP32[$vararg_ptr21>>2] = 0;
     $51 = (_g_strconcat($31,$vararg_buffer18)|0);
     _g_free($$0$i356);
     _g_free($40);
     _g_free($34);
     _g_free($31);
     _g_free($4);
     $$2 = $51;
     STACKTOP = sp;return ($$2|0);
    }
   }
  } else {
   _g_free(0);
   $$0$i353363 = 0;
  }
  $52 = HEAP8[$4>>0]|0;
  $53 = $52 << 24 >> 24;
  $$off$i$i = (($52) + -97)<<24>>24;
  $54 = ($$off$i$i&255)<(26);
  if ($54) {
   $55 = (($53) + -97)|0;
   $59 = $55;
   label = 25;
  } else {
   $$off25$i$i = (($52) + -65)<<24>>24;
   $56 = ($$off25$i$i&255)<(26);
   $57 = (($53) + -65)|0;
   if ($56) {
    $59 = $57;
    label = 25;
   } else {
    $$0$i358 = 0;
   }
  }
  if ((label|0) == 25) {
   $58 = ($59|0)<(0);
   if ($58) {
    $$0$i358 = 0;
   } else {
    $60 = HEAP32[37162]|0;
    $61 = (($60) + ($59<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (_g_strdup($62)|0);
    $$0$i358 = $63;
   }
  }
  $64 = ($$0$i358|0)==(0|0);
  HEAP32[$2>>2] = $53;
  $65 = (_g_strndup($2,1)|0);
  HEAP32[$vararg_buffer22>>2] = 132565;
  $vararg_ptr25 = ((($vararg_buffer22)) + 4|0);
  HEAP32[$vararg_ptr25>>2] = 0;
  $66 = (_g_strconcat($65,$vararg_buffer22)|0);
  if ($64) {
   $83 = (_strlen($4)|0);
   $84 = (($83) + -2)|0;
   $85 = ((($4)) + 2|0);
   $86 = (_g_strndup($85,$84)|0);
   $87 = (_strlen($86)|0);
   $88 = ($87|0)>(0);
   if ($88) {
    $89 = HEAP8[$86>>0]|0;
    $90 = HEAP32[$7>>2]|0;
    $91 = HEAP8[$90>>0]|0;
    $92 = ($89<<24>>24)==($91<<24>>24);
    if ($92) {
     label = 36;
    } else {
     $93 = $91 << 24 >> 24;
     HEAP32[$vararg_buffer22>>2] = $93;
     $94 = (_g_strndup($vararg_buffer22,1)|0);
     HEAP32[$vararg_buffer38>>2] = $86;
     $vararg_ptr41 = ((($vararg_buffer38)) + 4|0);
     HEAP32[$vararg_ptr41>>2] = 0;
     $95 = (_g_strconcat($94,$vararg_buffer38)|0);
     _g_free($94);
     $$0$i = $95;
    }
   } else {
    label = 36;
   }
   if ((label|0) == 36) {
    $96 = (_g_strdup($86)|0);
    $$0$i = $96;
   }
   HEAP32[$vararg_buffer42>>2] = $$0$i;
   $vararg_ptr45 = ((($vararg_buffer42)) + 4|0);
   HEAP32[$vararg_ptr45>>2] = 0;
   $97 = (_g_strconcat($66,$vararg_buffer42)|0);
   _g_free($$0$i);
   _g_free($86);
   _g_free($66);
   _g_free($65);
   _g_free(0);
   _g_free(0);
   _g_free($$0$i353363);
   _g_free($31);
   _g_free($4);
   $$2 = $97;
   STACKTOP = sp;return ($$2|0);
  } else {
   HEAP32[$vararg_buffer26>>2] = $$0$i358;
   $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
   HEAP32[$vararg_ptr29>>2] = 0;
   $67 = (_g_strconcat($66,$vararg_buffer26)|0);
   $68 = (_strlen($4)|0);
   $69 = (($68) + -2)|0;
   $70 = ((($4)) + 2|0);
   $71 = (_g_strndup($70,$69)|0);
   $72 = (_strlen($71)|0);
   $73 = ($72|0)>(0);
   if ($73) {
    $74 = HEAP8[$71>>0]|0;
    $75 = HEAP32[$7>>2]|0;
    $76 = HEAP8[$75>>0]|0;
    $77 = ($74<<24>>24)==($76<<24>>24);
    if ($77) {
     label = 31;
    } else {
     $78 = $76 << 24 >> 24;
     HEAP32[$vararg_buffer26>>2] = $78;
     $79 = (_g_strndup($vararg_buffer26,1)|0);
     HEAP32[$vararg_buffer30>>2] = $71;
     $vararg_ptr33 = ((($vararg_buffer30)) + 4|0);
     HEAP32[$vararg_ptr33>>2] = 0;
     $80 = (_g_strconcat($79,$vararg_buffer30)|0);
     _g_free($79);
     $$0$i360 = $80;
    }
   } else {
    label = 31;
   }
   if ((label|0) == 31) {
    $81 = (_g_strdup($71)|0);
    $$0$i360 = $81;
   }
   HEAP32[$vararg_buffer34>>2] = $$0$i360;
   $vararg_ptr37 = ((($vararg_buffer34)) + 4|0);
   HEAP32[$vararg_ptr37>>2] = 0;
   $82 = (_g_strconcat($67,$vararg_buffer34)|0);
   _g_free($$0$i360);
   _g_free($71);
   _g_free($67);
   _g_free($66);
   _g_free($65);
   _g_free(0);
   _g_free($$0$i358);
   _g_free($$0$i353363);
   _g_free($31);
   _g_free($4);
   $$2 = $82;
   STACKTOP = sp;return ($$2|0);
  }
  break;
 }
 case 0:  {
  $11 = (_system_io_file_system_Normalize($0,143379)|0);
  $12 = (_strlen($4)|0);
  $13 = ($12|0)>(0);
  if ($13) {
   $14 = HEAP8[$4>>0]|0;
   $15 = ((($0)) + 20|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP8[$16>>0]|0;
   $18 = ($14<<24>>24)==($17<<24>>24);
   if ($18) {
    label = 6;
   } else {
    $19 = $17 << 24 >> 24;
    HEAP32[$2>>2] = $19;
    $20 = (_g_strndup($2,1)|0);
    HEAP32[$vararg_buffer>>2] = $4;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 0;
    $21 = (_g_strconcat($20,$vararg_buffer)|0);
    _g_free($20);
    $$0$i350 = $21;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   $22 = (_g_strdup($4)|0);
   $$0$i350 = $22;
  }
  HEAP32[$vararg_buffer2>>2] = $$0$i350;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = 0;
  $23 = (_g_strconcat($11,$vararg_buffer2)|0);
  _g_free($$0$i350);
  _g_free($11);
  _g_free($4);
  $$2 = $23;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 case 1:  {
  $24 = (_system_io_file_system_Normalize($0,143379)|0);
  $25 = (_system_io_file_system_PrefixLength($0,$24)|0);
  $26 = ($25|0)==(3);
  if ($26) {
   $27 = (_g_strndup($24,2)|0);
   _g_free(0);
   $28 = ($27|0)==(0|0);
   if (!($28)) {
    HEAP32[$vararg_buffer6>>2] = $4;
    $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
    HEAP32[$vararg_ptr9>>2] = 0;
    $29 = (_g_strconcat($27,$vararg_buffer6)|0);
    _g_free($27);
    _g_free($24);
    _g_free($4);
    $$2 = $29;
    STACKTOP = sp;return ($$2|0);
   }
  } else {
   _g_free(0);
  }
  HEAP32[$vararg_buffer10>>2] = $4;
  $vararg_ptr13 = ((($vararg_buffer10)) + 4|0);
  HEAP32[$vararg_ptr13>>2] = 0;
  $30 = (_g_strconcat($24,$vararg_buffer10)|0);
  _g_free(0);
  _g_free($24);
  _g_free($4);
  $$2 = $30;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 case 3:  {
  $$2 = $4;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 default: {
  HEAP32[$vararg_buffer46>>2] = $4;
  $vararg_ptr49 = ((($vararg_buffer46)) + 4|0);
  HEAP32[$vararg_ptr49>>2] = 0;
  $98 = (_g_strconcat(132570,$vararg_buffer46)|0);
  $99 = (_system_io_exception_quark()|0);
  $100 = (_g_error_new_literal($99,4,$98)|0);
  _g_free($98);
  HEAP32[$3>>2] = $100;
  _g_free($4);
  $101 = ((($100)) + 8|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = HEAP32[$100>>2]|0;
  $104 = (_g_quark_to_string($103)|0);
  $105 = ((($100)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  HEAP32[$vararg_buffer50>>2] = 132590;
  $vararg_ptr53 = ((($vararg_buffer50)) + 4|0);
  HEAP32[$vararg_ptr53>>2] = 1885;
  $vararg_ptr54 = ((($vararg_buffer50)) + 8|0);
  HEAP32[$vararg_ptr54>>2] = $102;
  $vararg_ptr55 = ((($vararg_buffer50)) + 12|0);
  HEAP32[$vararg_ptr55>>2] = $104;
  $vararg_ptr56 = ((($vararg_buffer50)) + 16|0);
  HEAP32[$vararg_ptr56>>2] = $106;
  _g_log(0,8,143216,$vararg_buffer50);
  _g_clear_error($3);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_Canonicalize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0161226$i = 0, $$0161226$i493 = 0, $$0161226$in$i = 0, $$0161226$in$i490 = 0, $$0163223$i = 0, $$0163223$i491 = 0, $$0169222$i = 0, $$0169222$i492 = 0, $$0457 = 0, $$14 = 0, $$4167$i = 0, $$4167$i499 = 0, $$4173$i = 0, $$4173$i498 = 0, $$5473524 = 0, $$5481523 = 0, $$6482 = 0, $$7465 = 0, $$7475 = 0;
 var $$8484 = 0, $$not$i = 0, $$not$i494 = 0, $$off = 0, $$off534 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $or$cond$i495 = 0, $or$cond245$i = 0, $or$cond245$i496 = 0;
 var $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr21 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer26 = sp + 56|0;
 $vararg_buffer22 = sp + 48|0;
 $vararg_buffer18 = sp + 40|0;
 $vararg_buffer14 = sp + 32|0;
 $vararg_buffer10 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 64|0;
 $4 = (_strlen($1)|0);
 switch ($4|0) {
 case 2:  {
  $5 = HEAP8[$1>>0]|0;
  $6 = $5 & -33;
  $7 = (($6) + -65)<<24>>24;
  $8 = ($7&255)>(25);
  if (!($8)) {
   $9 = ((($1)) + 1|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($10<<24>>24)==(58);
   if ($11) {
    $$off534 = (($5) + -65)<<24>>24;
    $12 = ($$off534&255)<(26);
    if ($12) {
     $13 = (_g_strdup($1)|0);
     $$14 = $13;
     STACKTOP = sp;return ($$14|0);
    } else {
     $14 = $5 << 24 >> 24;
     $15 = (($14) + -32)|0;
     HEAP32[$3>>2] = $15;
     $16 = (_g_strndup($3,1)|0);
     HEAP32[$vararg_buffer>>2] = $16;
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     HEAP32[$vararg_ptr1>>2] = 0;
     $17 = (_g_strconcat(149641,$vararg_buffer)|0);
     HEAP32[$vararg_buffer2>>2] = 132565;
     $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
     HEAP32[$vararg_ptr5>>2] = 0;
     $18 = (_g_strconcat($17,$vararg_buffer2)|0);
     _g_free($17);
     _g_free($16);
     $$14 = $18;
     STACKTOP = sp;return ($$14|0);
    }
   }
  }
  break;
 }
 case 3:  {
  $19 = HEAP8[$1>>0]|0;
  $20 = $19 & -33;
  $21 = (($20) + -65)<<24>>24;
  $22 = ($21&255)>(25);
  if (!($22)) {
   $23 = ((($1)) + 1|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = ($24<<24>>24)==(58);
   if ($25) {
    $26 = ((($1)) + 2|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = ($27<<24>>24)==(92);
    if ($28) {
     $$off = (($19) + -65)<<24>>24;
     $29 = ($$off&255)>(25);
     if ($29) {
      $31 = $19 << 24 >> 24;
      $32 = (($31) + -32)|0;
      HEAP32[$3>>2] = $32;
      $33 = (_g_strndup($3,1)|0);
      HEAP32[$vararg_buffer6>>2] = $33;
      $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
      HEAP32[$vararg_ptr9>>2] = 0;
      $34 = (_g_strconcat(149641,$vararg_buffer6)|0);
      HEAP32[$vararg_buffer10>>2] = 132567;
      $vararg_ptr13 = ((($vararg_buffer10)) + 4|0);
      HEAP32[$vararg_ptr13>>2] = 0;
      $35 = (_g_strconcat($34,$vararg_buffer10)|0);
      _g_free($34);
      _g_free($33);
      $$14 = $35;
      STACKTOP = sp;return ($$14|0);
     } else {
      $30 = (_g_strdup($1)|0);
      $$14 = $30;
      STACKTOP = sp;return ($$14|0);
     }
    }
   }
  }
  break;
 }
 default: {
 }
 }
 $36 = (0)==(0);
 if ($36) {
  $37 = (_g_strdup($1)|0);
  _g_free(0);
  $$14 = $37;
  STACKTOP = sp;return ($$14|0);
 }
 $38 = ((($0)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (_system_collections_generic_map_get($41,$1)|0);
 $43 = ($42|0)==(0|0);
 if (!($43)) {
  $$14 = $42;
  STACKTOP = sp;return ($$14|0);
 }
 $44 = (0)==(0);
 L27: do {
  if ($44) {
   $$5473524 = 0;$$5481523 = 0;
   label = 33;
  } else {
   $45 = ($1|0)==(0|0);
   L29: do {
    if (!($45)) {
     $46 = HEAP8[149640]|0;
     $47 = (_strlen($1)|0);
     $48 = ($47|0)>(1);
     if ($48) {
      $$0161226$in$i490 = $47;$$0163223$i491 = 0;$$0169222$i492 = 0;
      while(1) {
       $$0161226$i493 = (($$0161226$in$i490) + -1)|0;
       $49 = (($1) + ($$0161226$i493)|0);
       $50 = HEAP8[$49>>0]|0;
       $51 = ($50<<24>>24)==(46);
       if ($51) {
        $52 = ($$0163223$i491|0)>(0);
        if ($52) {
         break L29;
        }
        $53 = ($$0169222$i492|0)==(0);
        $54 = (($$0163223$i491) + 1)|0;
        if ($53) {
         break L29;
        } else {
         $$4167$i499 = $54;$$4173$i498 = $$0169222$i492;
        }
       } else {
        $55 = ($50<<24>>24)==($46<<24>>24);
        if ($55) {
         break;
        }
        switch ($50<<24>>24) {
        case 42: case 47:  {
         break L29;
         break;
        }
        default: {
        }
        }
        $65 = ($50<<24>>24)==(63);
        $66 = (($$0169222$i492) + 1)|0;
        if ($65) {
         break L29;
        } else {
         $$4167$i499 = 0;$$4173$i498 = $66;
        }
       }
       $67 = ($$0161226$in$i490|0)>(2);
       if ($67) {
        $$0161226$in$i490 = $$0161226$i493;$$0163223$i491 = $$4167$i499;$$0169222$i492 = $$4173$i498;
       } else {
        break L29;
       }
      }
      $56 = ($$0163223$i491|0)==(1);
      $57 = ($$0169222$i492|0)==(0);
      $$not$i494 = $56 & $57;
      $58 = (($47) + -2)|0;
      $59 = ($$0161226$in$i490|0)>($58|0);
      $or$cond$i495 = $59 | $$not$i494;
      if (!($or$cond$i495)) {
       $60 = (($$0161226$in$i490) + -2)|0;
       $61 = (($1) + ($60)|0);
       $62 = HEAP8[$61>>0]|0;
       $63 = ($62<<24>>24)==($46<<24>>24);
       $64 = ($62<<24>>24)==(47);
       $or$cond245$i496 = $63 | $64;
       if (!($or$cond245$i496)) {
        $68 = (_g_strndup($1,$$0161226$i493)|0);
        _g_free(0);
        $69 = ($68|0)==(0|0);
        if ($69) {
         $$5473524 = 0;$$5481523 = 0;
         label = 33;
         break L27;
        }
        $70 = HEAP32[$38>>2]|0;
        $71 = ((($70)) + 8|0);
        $72 = HEAP32[$71>>2]|0;
        $73 = (_system_collections_generic_map_get($72,$68)|0);
        _g_free(0);
        $74 = ($73|0)==(0|0);
        if ($74) {
         $$5473524 = $68;$$5481523 = 0;
         label = 33;
         break L27;
        }
        $75 = (_strlen($68)|0);
        $76 = (($75) + 1)|0;
        $77 = (_strlen($1)|0);
        $78 = ($75|0)<(-1);
        $79 = $78 ? $77 : 0;
        $$0$i = (($76) + ($79))|0;
        $80 = (($77) - ($$0$i))|0;
        $81 = (($1) + ($$0$i)|0);
        $82 = (_g_strndup($81,$80)|0);
        $83 = HEAP32[37163]|0;
        HEAP32[$vararg_buffer14>>2] = $83;
        $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
        HEAP32[$vararg_ptr17>>2] = 0;
        $84 = (_g_strconcat($73,$vararg_buffer14)|0);
        HEAP32[$vararg_buffer18>>2] = $82;
        $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
        HEAP32[$vararg_ptr21>>2] = 0;
        $85 = (_g_strconcat($84,$vararg_buffer18)|0);
        $86 = (_g_strdup($85)|0);
        _g_free($85);
        _g_free($84);
        _g_free(0);
        _g_free(0);
        $87 = HEAP32[$38>>2]|0;
        $88 = ((($87)) + 4|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = HEAP32[37163]|0;
        HEAP32[$vararg_buffer22>>2] = $90;
        $vararg_ptr25 = ((($vararg_buffer22)) + 4|0);
        HEAP32[$vararg_ptr25>>2] = 0;
        $91 = (_g_strconcat($68,$vararg_buffer22)|0);
        HEAP32[$vararg_buffer26>>2] = $82;
        $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
        HEAP32[$vararg_ptr29>>2] = 0;
        $92 = (_g_strconcat($91,$vararg_buffer26)|0);
        _system_collections_generic_map_set($89,$92,$86);
        _g_free($92);
        _g_free($91);
        _g_free(0);
        _g_free($82);
        $93 = ($86|0)==(0|0);
        if ($93) {
         $$5473524 = $68;$$5481523 = $73;
         label = 33;
         break L27;
        } else {
         $$7465 = $86;$$7475 = $68;$$8484 = $73;
         break L27;
        }
       }
      }
     }
    }
   } while(0);
   _g_free(0);
   $$5473524 = 0;$$5481523 = 0;
   label = 33;
  }
 } while(0);
 if ((label|0) == 33) {
  $94 = (_g_strdup($1)|0);
  _g_free(0);
  $95 = HEAP32[$38>>2]|0;
  $96 = ((($95)) + 4|0);
  $97 = HEAP32[$96>>2]|0;
  _system_collections_generic_map_set($97,$1,$94);
  $98 = (0)!=(0);
  $99 = ($$5473524|0)!=(0|0);
  $$0457 = $99 & $98;
  L49: do {
   if ($$0457) {
    $100 = ($94|0)==(0|0);
    L51: do {
     if (!($100)) {
      $101 = HEAP8[149640]|0;
      $102 = (_strlen($94)|0);
      $103 = ($102|0)>(1);
      if ($103) {
       $$0161226$in$i = $102;$$0163223$i = 0;$$0169222$i = 0;
       while(1) {
        $$0161226$i = (($$0161226$in$i) + -1)|0;
        $104 = (($94) + ($$0161226$i)|0);
        $105 = HEAP8[$104>>0]|0;
        $106 = ($105<<24>>24)==(46);
        if ($106) {
         $107 = ($$0163223$i|0)>(0);
         if ($107) {
          break L51;
         }
         $108 = ($$0169222$i|0)==(0);
         $109 = (($$0163223$i) + 1)|0;
         if ($108) {
          break L51;
         } else {
          $$4167$i = $109;$$4173$i = $$0169222$i;
         }
        } else {
         $110 = ($105<<24>>24)==($101<<24>>24);
         if ($110) {
          break;
         }
         switch ($105<<24>>24) {
         case 42: case 47:  {
          break L51;
          break;
         }
         default: {
         }
         }
         $120 = ($105<<24>>24)==(63);
         $121 = (($$0169222$i) + 1)|0;
         if ($120) {
          break L51;
         } else {
          $$4167$i = 0;$$4173$i = $121;
         }
        }
        $122 = ($$0161226$in$i|0)>(2);
        if ($122) {
         $$0161226$in$i = $$0161226$i;$$0163223$i = $$4167$i;$$0169222$i = $$4173$i;
        } else {
         break L51;
        }
       }
       $111 = ($$0163223$i|0)==(1);
       $112 = ($$0169222$i|0)==(0);
       $$not$i = $111 & $112;
       $113 = (($102) + -2)|0;
       $114 = ($$0161226$in$i|0)>($113|0);
       $or$cond$i = $114 | $$not$i;
       if (!($or$cond$i)) {
        $115 = (($$0161226$in$i) + -2)|0;
        $116 = (($94) + ($115)|0);
        $117 = HEAP8[$116>>0]|0;
        $118 = ($117<<24>>24)==($101<<24>>24);
        $119 = ($117<<24>>24)==(47);
        $or$cond245$i = $118 | $119;
        if (!($or$cond245$i)) {
         $123 = (_g_strndup($94,$$0161226$i)|0);
         _g_free($$5481523);
         $124 = ($123|0)==(0|0);
         if ($124) {
          $$6482 = 0;
          break L49;
         }
         $125 = (_system_io_file_new($94,0)|0);
         $126 = (_system_io_file_Exists($125)|0);
         $127 = ($126|0)==(0);
         if (!($127)) {
          $128 = (_system_io_file_IsDirectory($125)|0);
          $129 = ($128|0)==(0);
          if ($129) {
           $130 = HEAP32[$38>>2]|0;
           $131 = ((($130)) + 8|0);
           $132 = HEAP32[$131>>2]|0;
           _system_collections_generic_map_set($132,$$5473524,$123);
          }
         }
         $133 = ($125|0)==(0|0);
         if ($133) {
          $$6482 = $123;
          break L49;
         }
         _g_object_unref($125);
         $$6482 = $123;
         break L49;
        }
       }
      }
     }
    } while(0);
    _g_free($$5481523);
    $$6482 = 0;
   } else {
    $$6482 = $$5481523;
   }
  } while(0);
  _g_free(0);
  $$7465 = $94;$$7475 = $$5473524;$$8484 = $$6482;
 }
 _g_free($$8484);
 _g_free($$7475);
 $$14 = $$7465;
 STACKTOP = sp;return ($$14|0);
}
function _system_io_emscripten_file_system_real_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_fopen($2,132793)|0);
 _g_free($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  return 0;
 }
 (_fclose($3)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_CheckAccess($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_system_io_file_GetPath($1)|0);
 $4 = (_fopen($3,132793)|0);
 _g_free($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  return 0;
 }
 (_fclose($4)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_GetLastModifiedTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_GetLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_fopen($2,132793)|0);
 _g_free($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  return 0;
 }
 (_fclose($3)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_SetPermission($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_CreateFileExclusively($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_List($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_malloc0_n(1,4)|0);
 $4 = ($2|0)==(0|0);
 if ($4) {
  return ($3|0);
 }
 HEAP32[$2>>2] = 0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_CreateDirectory($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_SetLastModifiedTime($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_SetReadOnly($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_Delete($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 _system_collections_generic_map_Clear($5);
 $6 = HEAP32[$2>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 _system_collections_generic_map_Clear($8);
 return 0;
}
function _system_io_emscripten_file_system_real_Rename($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 _system_collections_generic_map_Clear($6);
 $7 = HEAP32[$3>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 _system_collections_generic_map_Clear($9);
 return 0;
}
function _system_io_emscripten_file_system_real_ListRoots($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0216 = 0, $$0222 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $spec$select = 0, $spec$select228 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0216 = 0;
 while(1) {
  $spec$select = (($$0216) + 1)|0;
  $2 = ($spec$select>>>0)<(26);
  if ($2) {
   $$0216 = $spec$select;
  } else {
   break;
  }
 }
 $3 = (_g_malloc0_n(1,4)|0);
 $$0222 = 0;
 while(1) {
  $spec$select228 = (($$0222) + 1)|0;
  $4 = ($spec$select228>>>0)<(26);
  if ($4) {
   $$0222 = $spec$select228;
  } else {
   break;
  }
 }
 $5 = ($1|0)==(0|0);
 if ($5) {
  return ($3|0);
 }
 HEAP32[$1>>2] = 0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_GetSpace($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_system_io_file_Exists($1)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_system_io_file_GetPath($1)|0);
 $4 = (_system_io_file_GetPath($2)|0);
 $5 = (_g_strcmp0($3,$4)|0);
 _g_free($4);
 _g_free($3);
 return ($5|0);
}
function _system_io_emscripten_file_system_real_HashCode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_g_utf8_strdown($2,-1)|0);
 $4 = (_g_str_hash($3)|0);
 $5 = $4 ^ 1234321;
 _g_free($3);
 _g_free($2);
 return ($5|0);
}
function _system_io_emscripten_file_system_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148640)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_file_system_get_type()|0);
  $4 = (_g_type_register_static($3,132536,118872,0)|0);
  _g_once_init_leave(148640,$4);
 }
 $5 = HEAP32[37160]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 4|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 8|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $20 = HEAP32[37161]|0;
  $21 = (_g_type_check_class_cast($20,80)|0);
  $22 = ((($20)) + 36|0);
  $23 = HEAP32[$22>>2]|0;
  ftCall_vi($23|0,$0);
  return;
 }
 _g_object_unref($16);
 $18 = HEAP32[$7>>2]|0;
 $19 = ((($18)) + 8|0);
 HEAP32[$19>>2] = 0;
 $20 = HEAP32[37161]|0;
 $21 = (_g_type_check_class_cast($20,80)|0);
 $22 = ((($20)) + 36|0);
 $23 = HEAP32[$22>>2]|0;
 ftCall_vi($23|0,$0);
 return;
}
function _system_io_emscripten_file_system_Normalize2($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i$i = 0, $$0143$i = 0, $$0237 = 0, $$088$i = 0, $$1$i = 0, $$1140$i = 0, $$1272 = 0, $$2269 = 0, $$3 = 0, $$3258 = 0, $$5$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$142$i = 0, $not$267 = 0, $spec$select = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($2|0)==(0);
 if ($4) {
  $5 = (_g_strdup($1)|0);
  $$0 = $5;
  return ($$0|0);
 }
 $6 = ($3|0)<(3);
 $spec$select = $6 ? 0 : $3;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP8[$8>>0]|0;
 $10 = (_g_string_new(149641)|0);
 $11 = ($spec$select|0)==(0);
 L5: do {
  if ($11) {
   $12 = ($2|0)>(0);
   L7: do {
    if ($12) {
     $$0143$i = 0;
     while(1) {
      $13 = (($1) + ($$0143$i)|0);
      $14 = HEAP8[$13>>0]|0;
      $15 = ($14<<24>>24)==(92);
      $16 = ($14<<24>>24)==(47);
      $not$142$i = $16 | $15;
      $17 = $not$142$i&1;
      $$1$i = (($$0143$i) + ($17))|0;
      switch ($14<<24>>24) {
      case 47: case 92:  {
       break;
      }
      default: {
       $$1140$i = $$1$i;
       break L7;
      }
      }
      $18 = ($$1$i|0)<($2|0);
      if ($18) {
       $$0143$i = $$1$i;
      } else {
       $$1140$i = $$1$i;
       break L7;
      }
     }
    } else {
     $$1140$i = 0;
    }
   } while(0);
   $19 = (($2) - ($$1140$i))|0;
   $20 = ($19|0)>(1);
   if ($20) {
    $21 = (($1) + ($$1140$i)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22 & -33;
    $24 = (($23) + -65)<<24>>24;
    $25 = ($24&255)<(26);
    if ($25) {
     $26 = (($$1140$i) + 1)|0;
     $27 = (($1) + ($26)|0);
     $28 = HEAP8[$27>>0]|0;
     $29 = ($28<<24>>24)==(58);
     if ($29) {
      $30 = ((($10)) + 4|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = (($31) + 1)|0;
      $33 = ((($10)) + 8|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32>>>0)<($34>>>0);
      if ($35) {
       $36 = HEAP32[$10>>2]|0;
       HEAP32[$30>>2] = $32;
       $37 = (($36) + ($31)|0);
       HEAP8[$37>>0] = $22;
       $38 = HEAP32[$10>>2]|0;
       $39 = HEAP32[$30>>2]|0;
       $40 = (($38) + ($39)|0);
       HEAP8[$40>>0] = 0;
      } else {
       (_g_string_insert_c($10,-1,$22)|0);
      }
      $41 = HEAP32[$30>>2]|0;
      $42 = (($41) + 1)|0;
      $43 = HEAP32[$33>>2]|0;
      $44 = ($42>>>0)<($43>>>0);
      if ($44) {
       $45 = HEAP32[$10>>2]|0;
       HEAP32[$30>>2] = $42;
       $46 = (($45) + ($41)|0);
       HEAP8[$46>>0] = 58;
       $47 = HEAP32[$10>>2]|0;
       $48 = HEAP32[$30>>2]|0;
       $49 = (($47) + ($48)|0);
       HEAP8[$49>>0] = 0;
      } else {
       (_g_string_insert_c($10,-1,58)|0);
      }
      $50 = (($$1140$i) + 2)|0;
      $$0237 = $50;
      break;
     }
    }
   }
   $51 = ($2|0)>(1);
   if ($51) {
    $52 = HEAP8[$1>>0]|0;
    switch ($52<<24>>24) {
    case 47: case 92:  {
     break;
    }
    default: {
     $$0237 = 0;
     break L5;
    }
    }
    $53 = ((($1)) + 1|0);
    $54 = HEAP8[$53>>0]|0;
    switch ($54<<24>>24) {
    case 47: case 92:  {
     break;
    }
    default: {
     $$0237 = 0;
     break L5;
    }
    }
    $55 = HEAP32[$7>>2]|0;
    $56 = HEAP8[$55>>0]|0;
    $57 = ((($10)) + 4|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (($58) + 1)|0;
    $60 = ((($10)) + 8|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($59>>>0)<($61>>>0);
    if ($62) {
     $63 = HEAP32[$10>>2]|0;
     HEAP32[$57>>2] = $59;
     $64 = (($63) + ($58)|0);
     HEAP8[$64>>0] = $56;
     $65 = HEAP32[$10>>2]|0;
     $66 = HEAP32[$57>>2]|0;
     $67 = (($65) + ($66)|0);
     HEAP8[$67>>0] = 0;
     $$0237 = 1;
     break;
    } else {
     (_g_string_insert_c($10,-1,$56)|0);
     $$0237 = 1;
     break;
    }
   } else {
    $$0237 = 0;
   }
  } else {
   $68 = ($spec$select|0)>(-1);
   if ($68) {
    $69 = (_memchr($1,0,$spec$select)|0);
    $70 = ($69|0)==(0|0);
    $71 = $69;
    $72 = $1;
    $73 = (($71) - ($72))|0;
    $$0$i$i = $70 ? $spec$select : $73;
    $$088$i = $$0$i$i;
   } else {
    $74 = (_strlen($1)|0);
    $$088$i = $74;
   }
   $75 = ($spec$select|0)<(0);
   $spec$select$i = $75 ? $$088$i : $spec$select;
   $76 = (_g_strndup($1,$spec$select$i)|0);
   (_g_string_append($10,$76)|0);
   _g_free($76);
   $$0237 = $spec$select;
  }
 } while(0);
 $77 = ($$0237|0)<($2|0);
 if ($77) {
  $78 = ((($10)) + 4|0);
  $79 = ((($10)) + 8|0);
  $$1272 = $$0237;
  L40: while(1) {
   $80 = (($$1272) + 1)|0;
   $81 = (($1) + ($$1272)|0);
   $82 = HEAP8[$81>>0]|0;
   L42: do {
    switch ($82<<24>>24) {
    case 47: case 92:  {
     $83 = ($80|0)<($2|0);
     L48: do {
      if ($83) {
       $$2269 = $80;
       while(1) {
        $84 = (($1) + ($$2269)|0);
        $85 = HEAP8[$84>>0]|0;
        $86 = ($85<<24>>24)==(92);
        $87 = ($85<<24>>24)==(47);
        $not$267 = $87 | $86;
        $88 = $not$267&1;
        $$3 = (($$2269) + ($88))|0;
        switch ($85<<24>>24) {
        case 47: case 92:  {
         break;
        }
        default: {
         $$3258 = $$3;
         break L48;
        }
        }
        $89 = ($$3|0)<($2|0);
        if ($89) {
         $$2269 = $$3;
        } else {
         $$3258 = $$3;
         break L48;
        }
       }
      } else {
       $$3258 = $80;
      }
     } while(0);
     $90 = ($$3258|0)==($2|0);
     $91 = HEAP32[$78>>2]|0;
     if ($90) {
      label = 36;
      break L40;
     }
     $116 = (($91) + 1)|0;
     $117 = HEAP32[$79>>2]|0;
     $118 = ($116>>>0)<($117>>>0);
     if ($118) {
      $119 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = $116;
      $120 = (($119) + ($91)|0);
      HEAP8[$120>>0] = $9;
      $121 = HEAP32[$10>>2]|0;
      $122 = HEAP32[$78>>2]|0;
      $123 = (($121) + ($122)|0);
      HEAP8[$123>>0] = 0;
      $$5$ph = $$3258;
      break L42;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      $$5$ph = $$3258;
      break L42;
     }
     break;
    }
    default: {
     $124 = HEAP32[$78>>2]|0;
     $125 = (($124) + 1)|0;
     $126 = HEAP32[$79>>2]|0;
     $127 = ($125>>>0)<($126>>>0);
     if ($127) {
      $128 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = $125;
      $129 = (($128) + ($124)|0);
      HEAP8[$129>>0] = $82;
      $130 = HEAP32[$10>>2]|0;
      $131 = HEAP32[$78>>2]|0;
      $132 = (($130) + ($131)|0);
      HEAP8[$132>>0] = 0;
      $$5$ph = $80;
      break L42;
     } else {
      (_g_string_insert_c($10,-1,$82)|0);
      $$5$ph = $80;
      break L42;
     }
    }
    }
   } while(0);
   $133 = ($$5$ph|0)<($2|0);
   if ($133) {
    $$1272 = $$5$ph;
   } else {
    break;
   }
  }
  L59: do {
   if ((label|0) == 36) {
    switch ($91|0) {
    case 2:  {
     $92 = HEAP32[$10>>2]|0;
     $93 = ((($92)) + 1|0);
     $94 = HEAP8[$93>>0]|0;
     $95 = ($94<<24>>24)==(58);
     if (!($95)) {
      break L59;
     }
     $96 = HEAP32[$79>>2]|0;
     $97 = ($96>>>0)>(3);
     if ($97) {
      HEAP32[$78>>2] = 3;
      $98 = ((($92)) + 2|0);
      HEAP8[$98>>0] = $9;
      $99 = HEAP32[$10>>2]|0;
      $100 = HEAP32[$78>>2]|0;
      $101 = (($99) + ($100)|0);
      HEAP8[$101>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    case 0:  {
     $102 = HEAP32[$79>>2]|0;
     $103 = ($102>>>0)>(1);
     if ($103) {
      $104 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = 1;
      HEAP8[$104>>0] = $9;
      $105 = HEAP32[$10>>2]|0;
      $106 = HEAP32[$78>>2]|0;
      $107 = (($105) + ($106)|0);
      HEAP8[$107>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    case 1:  {
     $108 = HEAP32[$10>>2]|0;
     $109 = HEAP8[$108>>0]|0;
     switch ($109<<24>>24) {
     case 47: case 92:  {
      break;
     }
     default: {
      break L59;
     }
     }
     $110 = HEAP32[$79>>2]|0;
     $111 = ($110>>>0)>(2);
     if ($111) {
      HEAP32[$78>>2] = 2;
      $112 = ((($108)) + 1|0);
      HEAP8[$112>>0] = $9;
      $113 = HEAP32[$10>>2]|0;
      $114 = HEAP32[$78>>2]|0;
      $115 = (($113) + ($114)|0);
      HEAP8[$115>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    default: {
     break L59;
    }
    }
   }
  } while(0);
  $134 = HEAP32[$10>>2]|0;
  $135 = (_g_strdup($134)|0);
  $139 = $135;
 } else {
  $136 = HEAP32[$10>>2]|0;
  $137 = (_g_strdup($136)|0);
  $138 = ($10|0)==(0|0);
  if ($138) {
   $$0 = $137;
   return ($$0|0);
  } else {
   $139 = $137;
  }
 }
 (_g_string_free($10,1)|0);
 $$0 = $139;
 return ($$0|0);
}
function _system_io_file_IsInvalid($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $14 = $4;
  $13 = ($14|0)==(1);
  $15 = $13&1;
  return ($15|0);
 }
 $6 = HEAP32[$2>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  label = 4;
 } else {
  $8 = (_g_strcmp0($6,149641)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   label = 4;
  } else {
   $12 = 2;
  }
 }
 if ((label|0) == 4) {
  $12 = 1;
 }
 $10 = HEAP32[$1>>2]|0;
 $11 = ((($10)) + 4|0);
 HEAP32[$11>>2] = $12;
 $14 = $12;
 $13 = ($14|0)==(1);
 $15 = $13&1;
 return ($15|0);
}
function _system_io_file_GetPrefixLength($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_io_file_construct($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0136 = 0, $$pre$phi137Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = (_g_once_init_enter(148660)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_comparable_get_type()|0);
  $7 = (_g_type_register_static($6,132640,118908,0)|0);
  _g_once_init_leave(148660,$7);
 }
 $8 = HEAP32[37165]|0;
 $9 = (_system_comparable_construct($0,$8,337,338)|0);
 $10 = ($1|0)==(0|0);
 $11 = ($2|0)==(0|0);
 $$0136 = $10 & $11;
 if ($$0136) {
  $12 = (_system_exception_quark()|0);
  $13 = (_g_error_new_literal($12,9,132653)|0);
  HEAP32[$3>>2] = $13;
  $14 = ((($13)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$13>>2]|0;
  $17 = (_g_quark_to_string($16)|0);
  $18 = ((($13)) + 4|0);
  $19 = HEAP32[$18>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132671;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 408;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $15;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $17;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $19;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($3);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 do {
  if ($11) {
   $20 = HEAP32[37166]|0;
   $21 = (_system_io_file_system_Normalize($20,$1)|0);
   $22 = ((($9)) + 20|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = HEAP32[$23>>2]|0;
   _g_free($24);
   $25 = HEAP32[$22>>2]|0;
   HEAP32[$25>>2] = $21;
   $$pre$phi137Z2D = $22;
  } else {
   if ($10) {
    $45 = HEAP32[37166]|0;
    $46 = (_system_io_file_system_Normalize($45,$2)|0);
    $47 = ((($9)) + 20|0);
    $48 = HEAP32[$47>>2]|0;
    $49 = HEAP32[$48>>2]|0;
    _g_free($49);
    $50 = HEAP32[$47>>2]|0;
    HEAP32[$50>>2] = $46;
    $$pre$phi137Z2D = $47;
    break;
   }
   $26 = (_g_strcmp0($1,149641)|0);
   $27 = ($26|0)==(0);
   $28 = HEAP32[37166]|0;
   if ($27) {
    $29 = (_system_io_file_system_GetDefaultParent($28)|0);
    $30 = HEAP32[37166]|0;
    $31 = (_system_io_file_system_Normalize($30,$2)|0);
    $32 = (_system_io_file_system_Resolve($28,$29,$31)|0);
    $33 = ((($9)) + 20|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = HEAP32[$34>>2]|0;
    _g_free($35);
    $36 = HEAP32[$33>>2]|0;
    HEAP32[$36>>2] = $32;
    _g_free($31);
    _g_free($29);
    $$pre$phi137Z2D = $33;
    break;
   } else {
    $37 = (_system_io_file_system_Normalize($28,$1)|0);
    $38 = HEAP32[37166]|0;
    $39 = (_system_io_file_system_Normalize($38,$2)|0);
    $40 = (_system_io_file_system_Resolve($28,$37,$39)|0);
    $41 = ((($9)) + 20|0);
    $42 = HEAP32[$41>>2]|0;
    $43 = HEAP32[$42>>2]|0;
    _g_free($43);
    $44 = HEAP32[$41>>2]|0;
    HEAP32[$44>>2] = $40;
    _g_free($39);
    _g_free($37);
    $$pre$phi137Z2D = $41;
    break;
   }
  }
 } while(0);
 $51 = HEAP32[37166]|0;
 $52 = HEAP32[$$pre$phi137Z2D>>2]|0;
 $53 = HEAP32[$52>>2]|0;
 $54 = (_system_io_file_system_PrefixLength($51,$53)|0);
 $55 = HEAP32[$$pre$phi137Z2D>>2]|0;
 $56 = ((($55)) + 8|0);
 HEAP32[$56>>2] = $54;
 $$0 = $9;
 STACKTOP = sp;return ($$0|0);
}
function _system_io_file_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37167] = $2;
 _g_type_class_add_private($0,12);
 $3 = ((($0)) + 96|0);
 HEAP32[$3>>2] = 339;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 340;
 $6 = (_system_io_default_file_system_GetFileSystem()|0);
 HEAP32[37166] = $6;
 $7 = (_system_io_file_system_GetSeparator($6)|0);
 HEAP8[149640] = $7;
 $8 = $7 << 24 >> 24;
 HEAP32[$1>>2] = $8;
 $9 = (_g_strndup($1,1)|0);
 HEAP32[37163] = $9;
 $10 = HEAP32[37166]|0;
 $11 = (_system_io_file_system_GetPathSeparator($10)|0);
 $12 = $11 << 24 >> 24;
 HEAP32[$1>>2] = $12;
 $13 = (_g_strndup($1,1)|0);
 HEAP32[37164] = $13;
 STACKTOP = sp;return;
}
function _system_io_file_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148660)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_comparable_get_type()|0);
  $4 = (_g_type_register_static($3,132640,118908,0)|0);
  _g_once_init_leave(148660,$4);
 }
 $5 = HEAP32[37165]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 4|0);
 HEAP32[$8>>2] = 0;
 return;
}
function _system_io_file_real_CompareTo($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[37166]|0;
 $3 = (_system_io_file_system_Compare($2,$0,$1)|0);
 return ($3|0);
}
function _system_io_file_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148660)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_comparable_get_type()|0);
  $4 = (_g_type_register_static($3,132640,118908,0)|0);
  _g_once_init_leave(148660,$4);
 }
 $5 = HEAP32[37165]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 _g_free($9);
 $10 = HEAP32[$7>>2]|0;
 HEAP32[$10>>2] = 0;
 $11 = HEAP32[37167]|0;
 $12 = (_g_type_check_class_cast($11,80)|0);
 $13 = ((($11)) + 36|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _system_io_file_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(148660)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_system_comparable_get_type()|0);
  $5 = (_g_type_register_static($4,132640,118908,0)|0);
  _g_once_init_leave(148660,$5);
 }
 $6 = HEAP32[37165]|0;
 $7 = (_system_io_file_construct($6,$0,$1)|0);
 return ($7|0);
}
function _system_io_file_GetPath($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_strdup($3)|0);
 return ($4|0);
}
function _system_io_file_Exists($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$2>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   label = 4;
  } else {
   $8 = (_g_strcmp0($6,149641)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    label = 4;
   } else {
    $12 = 2;
   }
  }
  if ((label|0) == 4) {
   $12 = 1;
  }
  $10 = HEAP32[$1>>2]|0;
  $11 = ((($10)) + 4|0);
  HEAP32[$11>>2] = $12;
  $14 = $12;
 } else {
  $14 = $4;
 }
 $13 = ($14|0)==(1);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[37166]|0;
 $16 = (_system_io_file_system_GetBooleanAttributes($15,$0)|0);
 $17 = 65535 & $16;
 $18 = ($17|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_io_file_IsDirectory($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$2>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   label = 4;
  } else {
   $8 = (_g_strcmp0($6,149641)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    label = 4;
   } else {
    $12 = 2;
   }
  }
  if ((label|0) == 4) {
   $12 = 1;
  }
  $10 = HEAP32[$1>>2]|0;
  $11 = ((($10)) + 4|0);
  HEAP32[$11>>2] = $12;
  $14 = $12;
 } else {
  $14 = $4;
 }
 $13 = ($14|0)==(1);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[37166]|0;
 $16 = (_system_io_file_system_GetBooleanAttributes($15,$0)|0);
 $17 = 16384 & $16;
 $18 = ($17|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_io_file_handle_construct($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_object_construct($0)|0);
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $2;
 $7 = (_g_strdup($1)|0);
 $8 = HEAP32[$4>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 _g_free($9);
 $10 = HEAP32[$4>>2]|0;
 HEAP32[$10>>2] = $7;
 $11 = (_system_io_file_new($1,0)|0);
 $12 = ((($3)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  _g_object_unref($13);
  HEAP32[$12>>2] = 0;
 }
 HEAP32[$12>>2] = $11;
 $15 = (_fopen($1,132793)|0);
 $16 = HEAP32[$4>>2]|0;
 $17 = ((($16)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $$pre$phiZ2D = $17;
  HEAP32[$$pre$phiZ2D>>2] = $15;
  return ($3|0);
 }
 (_fclose($18)|0);
 $20 = HEAP32[$4>>2]|0;
 $21 = ((($20)) + 8|0);
 HEAP32[$21>>2] = 0;
 $$pre$phiZ2D = $21;
 HEAP32[$$pre$phiZ2D>>2] = $15;
 return ($3|0);
}
function _system_io_file_handle_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(148672)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_object_get_type()|0);
  $5 = (_g_type_register_static($4,132703,118944,0)|0);
  _g_once_init_leave(148672,$5);
 }
 $6 = HEAP32[37168]|0;
 $7 = (_system_io_file_handle_construct($6,$0,$1)|0);
 return ($7|0);
}
function _system_io_file_handle_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37169] = $1;
 _g_type_class_add_private($0,12);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 341;
 return;
}
function _system_io_file_handle_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148672)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132703,118944,0)|0);
  _g_once_init_leave(148672,$4);
 }
 $5 = HEAP32[37168]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_io_file_handle_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148672)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132703,118944,0)|0);
  _g_once_init_leave(148672,$4);
 }
 $5 = HEAP32[37168]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[$7>>2] = 0;
 }
 $10 = ((($0)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 _g_free($12);
 $13 = HEAP32[$10>>2]|0;
 HEAP32[$13>>2] = 0;
 $14 = ((($13)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $19 = HEAP32[37169]|0;
  $20 = (_g_type_check_class_cast($19,80)|0);
  $21 = ((($19)) + 36|0);
  $22 = HEAP32[$21>>2]|0;
  ftCall_vi($22|0,$0);
  return;
 }
 (_fclose($15)|0);
 $17 = HEAP32[$10>>2]|0;
 $18 = ((($17)) + 8|0);
 HEAP32[$18>>2] = 0;
 $19 = HEAP32[37169]|0;
 $20 = (_g_type_check_class_cast($19,80)|0);
 $21 = ((($19)) + 36|0);
 $22 = HEAP32[$21>>2]|0;
 ftCall_vi($22|0,$0);
 return;
}
function _system_io_file_input_stream_construct_FromFile($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$094 = 0, $$3 = 0, $$pre$phi95Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr20 = 0, $vararg_ptr21 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer15 = sp + 56|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 76|0;
 HEAP32[$3>>2] = 0;
 $4 = (_system_io_input_stream_construct($0)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $14 = 0;
 } else {
  $6 = (_g_object_ref($4)|0);
  $14 = $4;
 }
 $7 = ((($4)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$pre$phiZ2D = $9;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 4|0);
  HEAP32[$13>>2] = 0;
  $$pre$phiZ2D = $13;
 }
 HEAP32[$$pre$phiZ2D>>2] = $14;
 $15 = ($1|0)==(0|0);
 if ($15) {
  _g_free(0);
  $$094 = 0;
 } else {
  $16 = (_system_io_file_GetPath($1)|0);
  _g_free(0);
  $$094 = $16;
 }
 $17 = (_g_strdup($$094)|0);
 $18 = ($17|0)==(0|0);
 if ($18) {
  $19 = (_system_exception_quark()|0);
  $20 = (_g_error_new_literal($19,9,132765)|0);
  HEAP32[$3>>2] = $20;
  $21 = HEAP32[$20>>2]|0;
  $22 = (_system_io_exception_quark()|0);
  $23 = ($21|0)==($22|0);
  if ($23) {
   _g_propagate_error($2,$20);
   _g_free(0);
   _g_free($$094);
   _g_object_unref($4);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   _g_free(0);
   _g_free($$094);
   $24 = ((($20)) + 8|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = HEAP32[$20>>2]|0;
   $27 = (_g_quark_to_string($26)|0);
   $28 = ((($20)) + 4|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132722;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 322;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $25;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $27;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $29;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $30 = (_system_io_file_IsInvalid($1)|0);
 $31 = ($30|0)==(0);
 if (!($31)) {
  $32 = (_system_io_exception_quark()|0);
  $33 = (_g_error_new_literal($32,1,132775)|0);
  HEAP32[$3>>2] = $33;
  $34 = HEAP32[$33>>2]|0;
  $35 = (_system_io_exception_quark()|0);
  $36 = ($34|0)==($35|0);
  if ($36) {
   _g_propagate_error($2,$33);
   _g_free($17);
   _g_free($$094);
   _g_object_unref($4);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   _g_free($17);
   _g_free($$094);
   $37 = ((($33)) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = HEAP32[$33>>2]|0;
   $40 = (_g_quark_to_string($39)|0);
   $41 = ((($33)) + 4|0);
   $42 = HEAP32[$41>>2]|0;
   HEAP32[$vararg_buffer5>>2] = 132722;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = 342;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $38;
   $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
   HEAP32[$vararg_ptr10>>2] = $40;
   $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
   HEAP32[$vararg_ptr11>>2] = $42;
   _g_log(0,8,143216,$vararg_buffer5);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $43 = (_fopen($17,132793)|0);
 $44 = HEAP32[$7>>2]|0;
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 if ($46) {
  $$pre$phi95Z2D = $44;
 } else {
  (_fclose($45)|0);
  $47 = HEAP32[$7>>2]|0;
  HEAP32[$47>>2] = 0;
  $$pre$phi95Z2D = $47;
 }
 HEAP32[$$pre$phi95Z2D>>2] = $43;
 $48 = ($43|0)==(0|0);
 if (!($48)) {
  _g_free($17);
  _g_free($$094);
  $$3 = $4;
  STACKTOP = sp;return ($$3|0);
 }
 HEAP32[$vararg_buffer12>>2] = $17;
 _g_print(132795,$vararg_buffer12);
 $49 = (_system_io_exception_quark()|0);
 $50 = (_g_error_new_literal($49,1,132839)|0);
 HEAP32[$3>>2] = $50;
 $51 = HEAP32[$50>>2]|0;
 $52 = (_system_io_exception_quark()|0);
 $53 = ($51|0)==($52|0);
 if ($53) {
  _g_propagate_error($2,$50);
  _g_free($17);
  _g_free($$094);
  _g_object_unref($4);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  _g_free($17);
  _g_free($$094);
  $54 = ((($50)) + 8|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = HEAP32[$50>>2]|0;
  $57 = (_g_quark_to_string($56)|0);
  $58 = ((($50)) + 4|0);
  $59 = HEAP32[$58>>2]|0;
  HEAP32[$vararg_buffer15>>2] = 132722;
  $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
  HEAP32[$vararg_ptr18>>2] = 368;
  $vararg_ptr19 = ((($vararg_buffer15)) + 8|0);
  HEAP32[$vararg_ptr19>>2] = $55;
  $vararg_ptr20 = ((($vararg_buffer15)) + 12|0);
  HEAP32[$vararg_ptr20>>2] = $57;
  $vararg_ptr21 = ((($vararg_buffer15)) + 16|0);
  HEAP32[$vararg_ptr21>>2] = $59;
  _g_log(0,8,143216,$vararg_buffer15);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_file_input_stream_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37171] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 342;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 343;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 344;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 345;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 346;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 36|0);
 HEAP32[$8>>2] = 347;
 return;
}
function _system_io_file_input_stream_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148680)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_input_stream_get_type()|0);
  $4 = (_g_type_register_static($3,132854,118980,0)|0);
  _g_once_init_leave(148680,$4);
 }
 $5 = HEAP32[37170]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = 0;
 return;
}
function _system_io_file_input_stream_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_fgetc($4)|0);
 return ($5|0);
}
function _system_io_file_input_stream_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0149 = 0, $$0150 = 0, $$0151 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 44|0;
 HEAP32[$6>>2] = 0;
 $7 = ($4|0)<(1);
 $spec$select = $7 ? $2 : $4;
 $8 = ($2|0)<(1);
 $9 = ($spec$select|0)<(1);
 $$0149 = $8 & $9;
 if ($$0149) {
  $10 = (_system_io_exception_quark()|0);
  $11 = (_g_error_new_literal($10,3,149641)|0);
  HEAP32[$6>>2] = $11;
  $12 = HEAP32[$11>>2]|0;
  $13 = (_system_io_exception_quark()|0);
  $14 = ($12|0)==($13|0);
  if ($14) {
   _g_propagate_error($5,$11);
   $$2 = 0;
   STACKTOP = sp;return ($$2|0);
  } else {
   $15 = ((($11)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP32[$11>>2]|0;
   $18 = (_g_quark_to_string($17)|0);
   $19 = ((($11)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132722;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 466;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $16;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $18;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $20;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($6);
   $$2 = 0;
   STACKTOP = sp;return ($$2|0);
  }
 }
 $21 = ($3|0)<(0);
 $22 = (($2) - ($3))|0;
 $23 = ($22|0)<($spec$select|0);
 $$0150 = $21 | $23;
 if (!($$0150)) {
  $35 = (($spec$select) - ($3))|0;
  $36 = (_g_malloc0($35)|0);
  $37 = ((($0)) + 20|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_fread($36,1,$35,$39)|0);
  $41 = ($40|0)<(1);
  if ($41) {
   $$0151 = -1;
  } else {
   $42 = (($1) + ($3)|0);
   _memcpy(($42|0),($36|0),($40|0))|0;
   $$0151 = $40;
  }
  _g_free($36);
  $$2 = $$0151;
  STACKTOP = sp;return ($$2|0);
 }
 $24 = (_system_io_exception_quark()|0);
 $25 = (_g_error_new_literal($24,3,149641)|0);
 HEAP32[$6>>2] = $25;
 $26 = HEAP32[$25>>2]|0;
 $27 = (_system_io_exception_quark()|0);
 $28 = ($26|0)==($27|0);
 if ($28) {
  _g_propagate_error($5,$25);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  $29 = ((($25)) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = HEAP32[$25>>2]|0;
  $32 = (_g_quark_to_string($31)|0);
  $33 = ((($25)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132722;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 495;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $30;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $32;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $34;
  _g_log(0,8,143216,$vararg_buffer5);
  _g_clear_error($6);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_file_input_stream_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0 = 0, $$0 = 0, $$044 = 0, $$047 = 0, $$049 = 0, $$1 = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $$0 = 0;$$044 = 0;$$049 = 0;
 L1: while(1) {
  $spec$select = (($$044) + ($$049))|0;
  $4 = ($spec$select|0)<($1|0);
  do {
   if ($4) {
    $5 = (_system_io_input_stream_ReadOne($0,$3)|0);
    $6 = HEAP32[$3>>2]|0;
    $7 = ($6|0)==(0|0);
    if ($7) {
     $18 = ($5|0)<(0);
     $$lobit = $5 >>> 31;
     $$$0 = $18 ? -1 : $$0;
     $$047 = $$lobit;$$1 = $$$0;
     break;
    }
    $8 = HEAP32[$6>>2]|0;
    $9 = (_system_io_exception_quark()|0);
    $10 = ($8|0)==($9|0);
    $11 = HEAP32[$3>>2]|0;
    if ($10) {
     _g_propagate_error($2,$11);
     $$047 = 1;$$1 = 0;
     break;
    } else {
     $12 = ((($11)) + 8|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = HEAP32[$11>>2]|0;
     $15 = (_g_quark_to_string($14)|0);
     $16 = ((($11)) + 4|0);
     $17 = HEAP32[$16>>2]|0;
     HEAP32[$vararg_buffer>>2] = 132722;
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     HEAP32[$vararg_ptr1>>2] = 594;
     $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
     HEAP32[$vararg_ptr2>>2] = $13;
     $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
     HEAP32[$vararg_ptr3>>2] = $15;
     $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
     HEAP32[$vararg_ptr4>>2] = $17;
     _g_log(0,8,143216,$vararg_buffer);
     _g_clear_error($3);
     $$047 = 1;$$1 = 0;
     break;
    }
   } else {
    $$047 = 3;$$1 = $$0;
   }
  } while(0);
  $trunc = $$047&255;
  $trunc$clear = $trunc & 3;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0 = $$1;$$044 = $spec$select;$$049 = 1;
   break;
  }
  case 3:  {
   break L1;
   break;
  }
  default: {
   label = 9;
   break L1;
  }
  }
 }
 if ((label|0) == 9) {
  $cond = ($$047|0)==(0);
  if (!($cond)) {
   $19 = $$1;
   STACKTOP = sp;return ($19|0);
  }
 }
 $19 = $spec$select;
 STACKTOP = sp;return ($19|0);
}
function _system_io_file_input_stream_real_Available($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function _system_io_file_input_stream_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$pre$phiZ2D = $3;
 } else {
  (_fclose($4)|0);
  $6 = HEAP32[$2>>2]|0;
  HEAP32[$6>>2] = 0;
  $$pre$phiZ2D = $6;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 return;
}
function _system_io_file_input_stream_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148680)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_input_stream_get_type()|0);
  $4 = (_g_type_register_static($3,132854,118980,0)|0);
  _g_once_init_leave(148680,$4);
 }
 $5 = HEAP32[37170]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  (_fclose($9)|0);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  _g_object_unref($14);
  $16 = HEAP32[$7>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
 }
 $18 = HEAP32[37171]|0;
 $19 = (_g_type_check_class_cast($18,80)|0);
 $20 = ((($18)) + 36|0);
 $21 = HEAP32[$20>>2]|0;
 ftCall_vi($21|0,$0);
 return;
}
function _system_io_file_input_stream_new_FromFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(148680)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_system_io_input_stream_get_type()|0);
  $5 = (_g_type_register_static($4,132854,118980,0)|0);
  _g_once_init_leave(148680,$5);
 }
 $6 = HEAP32[37170]|0;
 $7 = (_system_io_file_input_stream_construct_FromFile($6,$0,$1)|0);
 return ($7|0);
}
function _system_io_file_system_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 96|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 104|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 112|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 return ($6|0);
}
function _system_io_file_system_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 116|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 136|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 192|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 return ($6|0);
}
function _system_io_file_system_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _system_io_file_system_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148688)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37172]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,132878,119016,16)|0);
 _g_once_init_leave(148688,$3);
 $4 = HEAP32[37172]|0;
 return ($4|0);
}
function _system_io_file_system_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37173] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 348;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 349;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 350;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 351;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 352;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 353;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 354;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 355;
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 356;
 $11 = ((($0)) + 132|0);
 HEAP32[$11>>2] = 357;
 $12 = ((($0)) + 136|0);
 HEAP32[$12>>2] = 358;
 $13 = ((($0)) + 140|0);
 HEAP32[$13>>2] = 359;
 $14 = ((($0)) + 144|0);
 HEAP32[$14>>2] = 360;
 $15 = ((($0)) + 148|0);
 HEAP32[$15>>2] = 361;
 $16 = ((($0)) + 152|0);
 HEAP32[$16>>2] = 362;
 $17 = ((($0)) + 156|0);
 HEAP32[$17>>2] = 363;
 $18 = ((($0)) + 160|0);
 HEAP32[$18>>2] = 364;
 $19 = ((($0)) + 164|0);
 HEAP32[$19>>2] = 365;
 $20 = ((($0)) + 168|0);
 HEAP32[$20>>2] = 366;
 $21 = ((($0)) + 172|0);
 HEAP32[$21>>2] = 367;
 $22 = ((($0)) + 176|0);
 HEAP32[$22>>2] = 368;
 $23 = ((($0)) + 180|0);
 HEAP32[$23>>2] = 369;
 $24 = ((($0)) + 184|0);
 HEAP32[$24>>2] = 370;
 $25 = ((($0)) + 188|0);
 HEAP32[$25>>2] = 371;
 $26 = ((($0)) + 192|0);
 HEAP32[$26>>2] = 372;
 $27 = ((($0)) + 196|0);
 HEAP32[$27>>2] = 373;
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = ((($0)) + 36|0);
 HEAP32[$29>>2] = 374;
 return;
}
function _system_io_file_system_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_file_system_real_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134937,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134851,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134772,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134690,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,134613,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134527,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_FromURIPath($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134446,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_IsAbsolute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134366,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_ResolveFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134285,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_Canonicalize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,134203,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134113,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_CheckAccess($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,134032,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetPermission($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_type_name($6)|0);
 HEAP32[$vararg_buffer>>2] = $7;
 _g_log(0,8,133949,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetLastModifiedTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133860,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133781,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_CreateFileExclusively($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133690,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Delete($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133614,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_List($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133540,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_CreateDirectory($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133455,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Rename($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133379,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetLastModifiedTime($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133290,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetReadOnly($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133209,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_ListRoots($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133130,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetSpace($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133052,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,132975,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_HashCode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,132897,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148688)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132878,119016,16)|0);
  _g_once_init_leave(148688,$4);
 }
 $5 = HEAP32[37172]|0;
 (_g_type_check_instance_cast($0,$5)|0);
 $6 = HEAP32[37173]|0;
 $7 = (_g_type_check_class_cast($6,80)|0);
 $8 = ((($6)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$0);
 return;
}
function _system_io_input_stream_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 96|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_input_stream_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($6)) + 100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_iiiiiii($8|0,$0,$1,$2,$3,$4,$5)|0);
 return ($9|0);
}
function _system_io_input_stream_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 112|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _system_io_input_stream_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _system_io_input_stream_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148696)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37174]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,135019,119052,16)|0);
 _g_once_init_leave(148696,$3);
 $4 = HEAP32[37174]|0;
 return ($4|0);
}
function _system_io_input_stream_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37175] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 375;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 376;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 377;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 378;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 379;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 380;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 381;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 382;
 return;
}
function _system_io_input_stream_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135151,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_input_stream_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0193 = 0, $$9 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $spec$select212 = 0, $spec$select212229 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer19 = 0, $vararg_buffer26 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0;
 var $vararg_ptr18 = 0, $vararg_ptr2 = 0, $vararg_ptr22 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr3 = 0, $vararg_ptr30 = 0, $vararg_ptr31 = 0, $vararg_ptr32 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer26 = sp + 96|0;
 $vararg_buffer19 = sp + 72|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 116|0;
 HEAP32[$6>>2] = 0;
 $7 = ($1|0)==(0|0);
 if ($7) {
  $8 = (_system_exception_quark()|0);
  $9 = (_g_error_new_literal($8,9,149641)|0);
  HEAP32[$6>>2] = $9;
  $10 = HEAP32[$9>>2]|0;
  $11 = (_system_io_exception_quark()|0);
  $12 = ($10|0)==($11|0);
  if ($12) {
   _g_propagate_error($5,$9);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $13 = ((($9)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = HEAP32[$9>>2]|0;
   $16 = (_g_quark_to_string($15)|0);
   $17 = ((($9)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer>>2] = 135064;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 236;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $14;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $16;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $18;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $19 = $4 | $3;
 $20 = ($19|0)>(-1);
 $21 = (($2) - ($3))|0;
 $22 = ($21|0)>=($4|0);
 $23 = $22 & $20;
 if (!($23)) {
  $24 = (_system_io_exception_quark()|0);
  $25 = (_g_error_new_literal($24,3,149641)|0);
  HEAP32[$6>>2] = $25;
  $26 = HEAP32[$25>>2]|0;
  $27 = (_system_io_exception_quark()|0);
  $28 = ($26|0)==($27|0);
  if ($28) {
   _g_propagate_error($5,$25);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $29 = ((($25)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = HEAP32[$25>>2]|0;
   $32 = (_g_quark_to_string($31)|0);
   $33 = ((($25)) + 4|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP32[$vararg_buffer5>>2] = 135064;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = 275;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $30;
   $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
   HEAP32[$vararg_ptr10>>2] = $32;
   $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
   HEAP32[$vararg_ptr11>>2] = $34;
   _g_log(0,8,143216,$vararg_buffer5);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $35 = ($4|0)==(0);
 if ($35) {
  $36 = ($2|0)==(0);
  if ($36) {
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $$0193 = $2;
  }
 } else {
  $$0193 = $4;
 }
 $37 = HEAP32[$0>>2]|0;
 $38 = ((($37)) + 96|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (ftCall_iii($39|0,$0,$6)|0);
 $41 = HEAP32[$6>>2]|0;
 $42 = ($41|0)==(0|0);
 if (!($42)) {
  $43 = HEAP32[$41>>2]|0;
  $44 = (_system_io_exception_quark()|0);
  $45 = ($43|0)==($44|0);
  $46 = HEAP32[$6>>2]|0;
  if ($45) {
   _g_propagate_error($5,$46);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $47 = ((($46)) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = HEAP32[$46>>2]|0;
   $50 = (_g_quark_to_string($49)|0);
   $51 = ((($46)) + 4|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP32[$vararg_buffer12>>2] = 135064;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = 306;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $48;
   $vararg_ptr17 = ((($vararg_buffer12)) + 12|0);
   HEAP32[$vararg_ptr17>>2] = $50;
   $vararg_ptr18 = ((($vararg_buffer12)) + 16|0);
   HEAP32[$vararg_ptr18>>2] = $52;
   _g_log(0,8,143216,$vararg_buffer12);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $53 = ($40|0)==(-1);
 if ($53) {
  $$9 = -1;
  STACKTOP = sp;return ($$9|0);
 }
 $54 = $40&255;
 $55 = (($1) + ($3)|0);
 HEAP8[$55>>0] = $54;
 $56 = ($$0193|0)>(1);
 if (!($56)) {
  $$9 = 1;
  STACKTOP = sp;return ($$9|0);
 }
 $spec$select212229 = 1;
 while(1) {
  $57 = HEAP32[$0>>2]|0;
  $58 = ((($57)) + 96|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (ftCall_iii($59|0,$0,$6)|0);
  $61 = HEAP32[$6>>2]|0;
  $62 = ($61|0)==(0|0);
  if (!($62)) {
   label = 19;
   break;
  }
  $73 = ($60|0)==(-1);
  if ($73) {
   $$9 = $spec$select212229;
   label = 28;
   break;
  }
  $74 = (($spec$select212229) + ($3))|0;
  $75 = (($1) + ($74)|0);
  $76 = $60&255;
  HEAP8[$75>>0] = $76;
  $spec$select212 = (($spec$select212229) + 1)|0;
  $77 = ($spec$select212|0)<($$0193|0);
  if ($77) {
   $spec$select212229 = $spec$select212;
  } else {
   $$9 = $spec$select212;
   label = 28;
   break;
  }
 }
 if ((label|0) == 19) {
  $63 = HEAP32[$61>>2]|0;
  $64 = (_system_io_exception_quark()|0);
  $65 = ($63|0)==($64|0);
  $66 = HEAP32[$6>>2]|0;
  if (!($65)) {
   $67 = ((($66)) + 8|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = HEAP32[$66>>2]|0;
   $70 = (_g_quark_to_string($69)|0);
   $71 = ((($66)) + 4|0);
   $72 = HEAP32[$71>>2]|0;
   HEAP32[$vararg_buffer19>>2] = 135064;
   $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
   HEAP32[$vararg_ptr22>>2] = 357;
   $vararg_ptr23 = ((($vararg_buffer19)) + 8|0);
   HEAP32[$vararg_ptr23>>2] = $68;
   $vararg_ptr24 = ((($vararg_buffer19)) + 12|0);
   HEAP32[$vararg_ptr24>>2] = $70;
   $vararg_ptr25 = ((($vararg_buffer19)) + 16|0);
   HEAP32[$vararg_ptr25>>2] = $72;
   _g_log(0,8,135103,$vararg_buffer19);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
  HEAP32[$6>>2] = 0;
  $78 = ($66|0)==(0|0);
  if ($78) {
   $$9 = $spec$select212229;
   STACKTOP = sp;return ($$9|0);
  }
  _g_error_free($66);
  $$pre = HEAP32[$6>>2]|0;
  $79 = ($$pre|0)==(0|0);
  if ($79) {
   $$9 = $spec$select212229;
   STACKTOP = sp;return ($$9|0);
  }
  $80 = HEAP32[$$pre>>2]|0;
  $81 = (_system_io_exception_quark()|0);
  $82 = ($80|0)==($81|0);
  $83 = HEAP32[$6>>2]|0;
  if ($82) {
   _g_propagate_error($5,$83);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $84 = ((($83)) + 8|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = HEAP32[$83>>2]|0;
   $87 = (_g_quark_to_string($86)|0);
   $88 = ((($83)) + 4|0);
   $89 = HEAP32[$88>>2]|0;
   HEAP32[$vararg_buffer26>>2] = 135064;
   $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
   HEAP32[$vararg_ptr29>>2] = 392;
   $vararg_ptr30 = ((($vararg_buffer26)) + 8|0);
   HEAP32[$vararg_ptr30>>2] = $85;
   $vararg_ptr31 = ((($vararg_buffer26)) + 12|0);
   HEAP32[$vararg_ptr31>>2] = $87;
   $vararg_ptr32 = ((($vararg_buffer26)) + 16|0);
   HEAP32[$vararg_ptr32>>2] = $89;
   _g_log(0,8,143216,$vararg_buffer26);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 else if ((label|0) == 28) {
  STACKTOP = sp;return ($$9|0);
 }
 return (0)|0;
}
function _system_io_input_stream_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0115126 = 0, $$2 = 0, $$not = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = Math_fround(0), $6 = Math_fround(0), $7 = 0, $8 = 0, $9 = Math_fround(0), $or$cond = 0, $spec$select122 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(1);
 if ($4) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $5 = (Math_fround(($1|0)));
 $6 = (Math_fround(+(_llvm_minnum_f32((+$5),2048.0))));
 $7 = (~~(($6)));
 $8 = (_g_malloc0($7)|0);
 $9 = (Math_fround(($7|0)));
 $$0115126 = $1;
 while(1) {
  $10 = (Math_fround(($$0115126|0)));
  $11 = (Math_fround(+(_llvm_minnum_f32((+$9),(+$10)))));
  $12 = (~~(($11)));
  $13 = HEAP32[$0>>2]|0;
  $14 = ((($13)) + 100|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (ftCall_iiiiiii($15|0,$0,$8,$7,0,$12,$3)|0);
  $17 = HEAP32[$3>>2]|0;
  $18 = ($17|0)==(0|0);
  if (!($18)) {
   break;
  }
  $30 = ($16|0)<(0);
  $31 = $30 ? 0 : $16;
  $spec$select122 = (($$0115126) - ($31))|0;
  $$not = $30 ^ 1;
  $32 = ($spec$select122|0)>(0);
  $or$cond = $32 & $$not;
  if ($or$cond) {
   $$0115126 = $spec$select122;
  } else {
   label = 8;
   break;
  }
 }
 if ((label|0) == 8) {
  $33 = (($1) - ($spec$select122))|0;
  _g_free($8);
  $$2 = $33;
  STACKTOP = sp;return ($$2|0);
 }
 $19 = HEAP32[$17>>2]|0;
 $20 = (_system_io_exception_quark()|0);
 $21 = ($19|0)==($20|0);
 if ($21) {
  $22 = HEAP32[$3>>2]|0;
  _g_propagate_error($2,$22);
  _g_free($8);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  _g_free($8);
  $23 = HEAP32[$3>>2]|0;
  $24 = ((($23)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$23>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($23)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135064;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 494;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $25;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $29;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($3);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_input_stream_real_Available($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_input_stream_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_Mark($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_input_stream_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,6,135039)|0);
 HEAP32[$2>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($1,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135064;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 694;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_input_stream_reader_new($0) {
 $0 = $0|0;
 var $$in$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_g_once_init_enter(148704)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135253,119088,0)|0);
  _g_once_init_leave(148704,$4);
 }
 $5 = HEAP32[37176]|0;
 _g_print(135229,$vararg_buffer);
 $6 = (_system_io_reader_construct($5,0)|0);
 $7 = ($0|0)==(0|0);
 if ($7) {
  $14 = 0;
 } else {
  $8 = (_g_object_ref($0)|0);
  $14 = $0;
 }
 $9 = ((($6)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$in$i = $10;
  HEAP32[$$in$i>>2] = $14;
  STACKTOP = sp;return ($6|0);
 }
 _g_object_unref($11);
 $13 = HEAP32[$9>>2]|0;
 HEAP32[$13>>2] = 0;
 $$in$i = $13;
 HEAP32[$$in$i>>2] = $14;
 STACKTOP = sp;return ($6|0);
}
function _system_io_input_stream_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37177] = $1;
 _g_type_class_add_private($0,4);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 383;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 384;
 $4 = ((($0)) + 124|0);
 HEAP32[$4>>2] = 385;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 36|0);
 HEAP32[$6>>2] = 386;
 return;
}
function _system_io_input_stream_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148704)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135253,119088,0)|0);
  _g_once_init_leave(148704,$4);
 }
 $5 = HEAP32[37176]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_io_input_stream_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_input_stream_ReadOne($5,$2)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = HEAP32[$7>>2]|0;
 $10 = (_system_io_exception_quark()|0);
 $11 = ($9|0)==($10|0);
 $12 = HEAP32[$2>>2]|0;
 if ($11) {
  _g_propagate_error($1,$12);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $13 = ((($12)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$12>>2]|0;
  $16 = (_g_quark_to_string($15)|0);
  $17 = ((($12)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135279;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 209;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $14;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $16;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $18;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _system_io_input_stream_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $6 = sp + 20|0;
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (_system_io_input_stream_Read($9,$1,$2,$3,$4,$6)|0);
 $11 = HEAP32[$6>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$0 = $10;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = HEAP32[$11>>2]|0;
 $14 = (_system_io_exception_quark()|0);
 $15 = ($13|0)==($14|0);
 $16 = HEAP32[$6>>2]|0;
 if ($15) {
  _g_propagate_error($5,$16);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $17 = ((($16)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$16>>2]|0;
  $20 = (_g_quark_to_string($19)|0);
  $21 = ((($16)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135279;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 257;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $18;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $20;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($6);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _system_io_input_stream_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 _system_io_input_stream_Close($5,$2);
 $6 = HEAP32[$2>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$6>>2]|0;
 $9 = (_system_io_exception_quark()|0);
 $10 = ($8|0)==($9|0);
 $11 = HEAP32[$2>>2]|0;
 if ($10) {
  _g_propagate_error($1,$11);
  STACKTOP = sp;return;
 } else {
  $12 = ((($11)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$11>>2]|0;
  $15 = (_g_quark_to_string($14)|0);
  $16 = ((($11)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135279;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 286;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $13;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $15;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $17;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_input_stream_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148704)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135253,119088,0)|0);
  _g_once_init_leave(148704,$4);
 }
 $5 = HEAP32[37176]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
 }
 $12 = HEAP32[37177]|0;
 $13 = (_g_type_check_class_cast($12,80)|0);
 $14 = ((($12)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$0);
 return;
}
function _system_io_reader_construct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_object_construct($0)|0);
 $3 = ($1|0)==(0|0);
 $$ = $3 ? $2 : $1;
 $4 = ($$|0)==(0|0);
 if ($4) {
  $9 = 0;
 } else {
  $5 = (_g_object_ref($$)|0);
  $9 = $$;
 }
 $6 = ((($2)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  HEAP32[$6>>2] = $9;
  return ($2|0);
 }
 _g_object_unref($7);
 HEAP32[$6>>2] = 0;
 HEAP32[$6>>2] = $9;
 return ($2|0);
}
function _system_io_reader_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($6)) + 100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_iiiiiii($8|0,$0,$1,$2,$3,$4,$5)|0);
 return ($9|0);
}
function _system_io_reader_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_reader_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 124|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _system_io_reader_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148712)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37178]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,135324,119124,16)|0);
 _g_once_init_leave(148712,$3);
 $4 = HEAP32[37178]|0;
 return ($4|0);
}
function _system_io_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37179] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 387;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 388;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 389;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 390;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 391;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 392;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 393;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 394;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 36|0);
 HEAP32[$11>>2] = 395;
 return;
}
function _system_io_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148712)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,135324,119124,16)|0);
  _g_once_init_leave(148712,$4);
 }
 $5 = HEAP32[37178]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($8)) + 16|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($8)) + 20|0);
 HEAP32[$11>>2] = 0;
 return;
}
function _system_io_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = (_g_malloc0(1)|0);
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + 100|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_iiiiiii($6|0,$0,$3,1,0,1,$2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $21 = ($7|0)==(-1);
  if ($21) {
   _g_free($3);
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  } else {
   $22 = HEAP8[$3>>0]|0;
   $23 = $22 << 24 >> 24;
   _g_free($3);
   $$0 = $23;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $10 = HEAP32[$8>>2]|0;
  $11 = (_system_io_exception_quark()|0);
  $12 = ($10|0)==($11|0);
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   _g_propagate_error($1,$13);
   _g_free($3);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   _g_free($3);
   $14 = HEAP32[$2>>2]|0;
   $15 = ((($14)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP32[$14>>2]|0;
   $18 = (_g_quark_to_string($17)|0);
   $19 = ((($14)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   HEAP32[$vararg_buffer>>2] = 135431;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 206;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $16;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $18;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $20;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($2);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 return (0)|0;
}
function _system_io_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $6 = HEAP32[$0>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 HEAP32[$vararg_buffer>>2] = $8;
 _g_log(0,8,135510,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_reader_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0154 = 0, $$0158 = 0, $$1159 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $spec$select = 0, $spec$select161 = 0, $spec$select163 = 0, $spec$select164 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,135487)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 135431;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 289;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,143216,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $16 = (+($1|0));
 $17 = (+_llvm_minnum_f64((+$16),8192.0));
 $18 = (~~(($17)));
 $19 = ((($0)) + 16|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($20)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  label = 7;
 } else {
  $24 = ((($20)) + 16|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($25|0)<($18|0);
  if ($26) {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $27 = (_g_malloc0($18)|0);
  $28 = HEAP32[$19>>2]|0;
  $29 = ((($28)) + 12|0);
  $30 = HEAP32[$29>>2]|0;
  _g_free($30);
  $31 = HEAP32[$19>>2]|0;
  $32 = ((($31)) + 12|0);
  HEAP32[$32>>2] = $27;
  $33 = ((($31)) + 16|0);
  HEAP32[$33>>2] = $18;
  $34 = ((($31)) + 20|0);
  HEAP32[$34>>2] = $18;
 }
 $35 = (+($18|0));
 $$0158 = $1;
 L14: while(1) {
  $36 = ($$0158|0)>(0);
  if ($36) {
   $37 = HEAP32[$19>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (+($$0158|0));
   $43 = (+_llvm_minnum_f64((+$42),(+$35)));
   $44 = (~~(($43)));
   $45 = HEAP32[$0>>2]|0;
   $46 = ((($45)) + 100|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (ftCall_iiiiiii($47|0,$0,$39,$41,0,$44,$3)|0);
   $49 = HEAP32[$3>>2]|0;
   $50 = ($49|0)!=(0|0);
   $51 = ($48|0)==(-1);
   $spec$select161 = $51 ? 3 : 0;
   $52 = $51 | $50;
   $spec$select = $52 ? 0 : $48;
   $spec$select163 = (($$0158) - ($spec$select))|0;
   $spec$select164 = $50 ? 4 : $spec$select161;
   $$0154 = $spec$select164;$$1159 = $spec$select163;
  } else {
   $$0154 = 3;$$1159 = $$0158;
  }
  $trunc = $$0154&255;
  $trunc$clear = $trunc & 7;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0158 = $$1159;
   break;
  }
  case 3:  {
   label = 12;
   break L14;
   break;
  }
  default: {
   break L14;
  }
  }
 }
 if ((label|0) == 12) {
  $53 = (($1) - ($$1159))|0;
  $$3 = $53;
  STACKTOP = sp;return ($$3|0);
 }
 $cond = ($$0154|0)==(4);
 if (!($cond)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $54 = HEAP32[$3>>2]|0;
 $55 = HEAP32[$54>>2]|0;
 $56 = (_system_io_exception_quark()|0);
 $57 = ($55|0)==($56|0);
 $58 = HEAP32[$3>>2]|0;
 if ($57) {
  _g_propagate_error($2,$58);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  $59 = ((($58)) + 8|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = HEAP32[$58>>2]|0;
  $62 = (_g_quark_to_string($61)|0);
  $63 = ((($58)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 135431;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 391;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $60;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $62;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $64;
  _g_log(0,8,143216,$vararg_buffer5);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_reader_real_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_reader_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_reader_real_Mark($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = (_system_io_exception_quark()|0);
 $5 = (_g_error_new_literal($4,0,135465)|0);
 HEAP32[$3>>2] = $5;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_system_io_exception_quark()|0);
 $8 = ($6|0)==($7|0);
 if ($8) {
  _g_propagate_error($2,$5);
  STACKTOP = sp;return;
 } else {
  $9 = ((($5)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$5>>2]|0;
  $12 = (_g_quark_to_string($11)|0);
  $13 = ((($5)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135431;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 469;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $12;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($3);
  STACKTOP = sp;return;
 }
}
function _system_io_reader_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,0,135409)|0);
 HEAP32[$2>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($1,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135431;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 504;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135339,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_io_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148712)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,135324,119124,16)|0);
  _g_once_init_leave(148712,$4);
 }
 $5 = HEAP32[37178]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = ((($0)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
  HEAP32[$8>>2] = 0;
 }
 $11 = HEAP32[$7>>2]|0;
 $12 = ((($11)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 _g_free($13);
 $14 = HEAP32[$7>>2]|0;
 $15 = ((($14)) + 12|0);
 HEAP32[$15>>2] = 0;
 $16 = HEAP32[37179]|0;
 $17 = (_g_type_check_class_cast($16,80)|0);
 $18 = ((($16)) + 36|0);
 $19 = HEAP32[$18>>2]|0;
 ftCall_vi($19|0,$0);
 return;
}
function _object_construct($0) {
 $0 = $0|0;
 var $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_g_object_new($0,0,$vararg_buffer)|0);
 STACKTOP = sp;return ($1|0);
}
function _object_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148720)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_g_type_register_static(80,135579,119160,16)|0);
  _g_once_init_leave(148720,$2);
 }
 $3 = HEAP32[37180]|0;
 return ($3|0);
}
function _object_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37181] = $1;
 $2 = ((($0)) + 80|0);
 HEAP32[$2>>2] = 396;
 $3 = ((($0)) + 84|0);
 HEAP32[$3>>2] = 397;
 $4 = ((($0)) + 88|0);
 HEAP32[$4>>2] = 398;
 $5 = ((($0)) + 92|0);
 HEAP32[$5>>2] = 399;
 return;
}
function _object_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _object_real_ToString($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_check_instance_cast($0,80)|0);
 $2 = (_g_object_to_string($0)|0);
 return ($2|0);
}
function _object_real_Equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_type_check_instance_cast($0,80)|0);
 $3 = (_g_object_equals($0,$1)|0);
 return ($3|0);
}
function _object_real_GetHashCode($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_check_instance_cast($0,80)|0);
 $2 = (_g_object_get_hash_code($0)|0);
 return ($2|0);
}
function _object_real_Clone($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_object_new($3,0,$vararg_buffer)|0);
 $5 = (_g_initially_unowned_get_type()|0);
 $6 = ($4|0)==(0|0);
 do {
  if ($6) {
   $17 = 0;
  } else {
   $7 = HEAP32[$4>>2]|0;
   $8 = ($7|0)==(0|0);
   if ($8) {
    label = 4;
   } else {
    $9 = HEAP32[$7>>2]|0;
    $10 = ($9|0)==($5|0);
    if (!($10)) {
     label = 4;
    }
   }
   if ((label|0) == 4) {
    $11 = (_g_type_check_instance_is_a($4,$5)|0);
    $phitmp = ($11|0)==(0);
    if ($phitmp) {
     $17 = $4;
     break;
    }
   }
   $12 = (_g_object_ref_sink($4)|0);
   $17 = $4;
  }
 } while(0);
 $13 = (_g_once_init_enter(148720)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $16 = HEAP32[37180]|0;
  $18 = (_g_type_check_instance_cast($17,$16)|0);
  STACKTOP = sp;return ($17|0);
 }
 $15 = (_g_type_register_static(80,135579,119160,16)|0);
 _g_once_init_leave(148720,$15);
 $16 = HEAP32[37180]|0;
 $18 = (_g_type_check_instance_cast($17,$16)|0);
 STACKTOP = sp;return ($17|0);
}
function _system_collections_generic_array_list_new($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_g_once_init_enter(148728)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_list_get_type()|0);
  $7 = (_g_type_register_static($6,135586,119196,0)|0);
  _g_once_init_leave(148728,$7);
 }
 $8 = HEAP32[37182]|0;
 $9 = (_system_collections_generic_list_construct($8,$0,$1,$2)|0);
 $10 = ((($9)) + 28|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$11>>2] = $0;
 $12 = ((($11)) + 4|0);
 HEAP32[$12>>2] = $1;
 $13 = ((($11)) + 8|0);
 HEAP32[$13>>2] = $2;
 $14 = ((($11)) + 12|0);
 HEAP32[$14>>2] = $3;
 return ($9|0);
}
function _system_collections_generic_array_list_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37183] = $1;
 _g_type_class_add_private($0,20);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 400;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 401;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 402;
 $5 = ((($0)) + 144|0);
 HEAP32[$5>>2] = 403;
 $6 = ((($0)) + 136|0);
 HEAP32[$6>>2] = 404;
 $7 = ((($0)) + 140|0);
 HEAP32[$7>>2] = 405;
 $8 = ((($0)) + 108|0);
 HEAP32[$8>>2] = 406;
 $9 = ((($0)) + 148|0);
 HEAP32[$9>>2] = 407;
 $10 = ((($0)) + 112|0);
 HEAP32[$10>>2] = 408;
 $11 = ((($0)) + 152|0);
 HEAP32[$11>>2] = 409;
 $12 = ((($0)) + 116|0);
 HEAP32[$12>>2] = 410;
 $13 = (_system_collections_generic_collection_get_type()|0);
 $14 = (_g_type_check_class_cast($0,$13)|0);
 $15 = ((($0)) + 128|0);
 HEAP32[$15>>2] = 411;
 $16 = (_g_type_check_class_cast($0,80)|0);
 $17 = ((($0)) + 28|0);
 HEAP32[$17>>2] = 412;
 $18 = (_g_type_check_class_cast($0,80)|0);
 $19 = ((($0)) + 24|0);
 HEAP32[$19>>2] = 413;
 $20 = (_g_type_check_class_cast($0,80)|0);
 $21 = ((($0)) + 36|0);
 HEAP32[$21>>2] = 414;
 $22 = (_g_type_check_class_cast($0,80)|0);
 $23 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$23);
 $24 = (_g_type_check_class_cast($0,80)|0);
 $25 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$25);
 $26 = (_g_type_check_class_cast($0,80)|0);
 $27 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$27);
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[36200] = $29;
 _g_object_class_install_property($0,4,$29);
 $30 = (_g_type_check_class_cast($0,80)|0);
 $31 = (_g_param_spec_pointer(135620,135620,135620,226)|0);
 HEAP32[36196] = $31;
 _g_object_class_install_property($0,5,$31);
 return;
}
function _system_collections_generic_array_list_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148728)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_list_get_type()|0);
  $4 = (_g_type_register_static($3,135586,119196,0)|0);
  _g_once_init_leave(148728,$4);
 }
 $5 = HEAP32[37182]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 $8 = (_g_malloc0_n(4,4)|0);
 $9 = ((($0)) + 32|0);
 HEAP32[$9>>2] = $8;
 $10 = ((($0)) + 36|0);
 HEAP32[$10>>2] = 4;
 $11 = ((($0)) + 40|0);
 HEAP32[$11>>2] = 4;
 $12 = HEAP32[$7>>2]|0;
 $13 = ((($12)) + 16|0);
 HEAP32[$13>>2] = 0;
 return;
}
function _system_collections_generic_array_list_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 return ($3|0);
}
function _system_collections_generic_array_list_real_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_once_init_enter(148736)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $10 = (_system_collections_generic_iterator_get_type()|0);
  $11 = (_g_type_register_static($10,136096,119232,0)|0);
  _g_once_init_leave(148736,$11);
 }
 $12 = HEAP32[37184]|0;
 $13 = (_system_collections_generic_iterator_construct($12,$3,$5,$7)|0);
 $14 = ((($13)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 HEAP32[$15>>2] = $3;
 $16 = ((($15)) + 4|0);
 HEAP32[$16>>2] = $5;
 $17 = ((($15)) + 8|0);
 HEAP32[$17>>2] = $7;
 $18 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$14>>2]|0;
 $19 = ((($$pre$i$i)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $$pre$phi$i$i$iZ2D = $19;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $18;
  $24 = ((($0)) + 28|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($25)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($13)) + 28|0);
  HEAP32[$28>>2] = $27;
  return ($13|0);
 }
 _g_object_unref($20);
 $22 = HEAP32[$14>>2]|0;
 $23 = ((($22)) + 12|0);
 HEAP32[$23>>2] = 0;
 $$pre$phi$i$i$iZ2D = $23;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $18;
 $24 = ((($0)) + 28|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ((($25)) + 16|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($13)) + 28|0);
 HEAP32[$28>>2] = $27;
 return ($13|0);
}
function _system_collections_generic_array_list_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_collections_generic_list_IndexOf($0,$1)|0);
 $3 = ($2|0)!=(-1);
 $4 = $3&1;
 return ($4|0);
}
function _system_collections_generic_array_list_real_IndexOf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$0 = 0, $$053 = 0, $$053$spec$select = 0, $$056 = 0, $$058 = 0, $$154 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cond = 0, $not$ = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 44|0);
 $3 = ((($0)) + 28|0);
 $4 = ((($0)) + 32|0);
 $$053 = 0;$$056 = 0;$$058 = 0;
 L1: while(1) {
  $spec$select = (($$056) + ($$058))|0;
  $5 = HEAP32[$2>>2]|0;
  $6 = ($spec$select|0)<($5|0);
  if ($6) {
   $7 = HEAP32[$3>>2]|0;
   $8 = ((($7)) + 12|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = HEAP32[$4>>2]|0;
   $11 = (($10) + ($spec$select<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = (ftCall_iii($9|0,$12,$1)|0);
   $14 = ($13|0)==(0);
   $$053$spec$select = $14 ? $$053 : $spec$select;
   $not$ = $14 ^ 1;
   $$ = $not$&1;
   $$0 = $$;$$154 = $$053$spec$select;
  } else {
   $$0 = 3;$$154 = $$053;
  }
  $trunc = $$0&255;
  $trunc$clear = $trunc & 3;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$053 = $$154;$$056 = $spec$select;$$058 = 1;
   break;
  }
  case 3:  {
   break L1;
   break;
  }
  default: {
   label = 5;
   break L1;
  }
  }
 }
 if ((label|0) == 5) {
  $cond = ($$0|0)==(0);
  if (!($cond)) {
   $15 = $$154;
   return ($15|0);
  }
 }
 $15 = -1;
 return ($15|0);
}
function _system_collections_generic_array_list_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(-1);
 if (!($2)) {
  _g_assertion_message_expr(0,135631,444,136049,135737);
  // unreachable;
 }
 $3 = ((($0)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>($1|0);
 if (!($5)) {
  _g_assertion_message_expr(0,135631,444,136049,135737);
  // unreachable;
 }
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + ($1<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $17 = 0;
  return ($17|0);
 }
 $11 = ((($0)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $17 = $9;
  return ($17|0);
 }
 $16 = (ftCall_ii($14|0,$9)|0);
 $17 = $16;
 return ($17|0);
}
function _system_collections_generic_array_list_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)>(-1);
 if (!($3)) {
  _g_assertion_message_expr(0,135631,476,136002,135737);
  // unreachable;
 }
 $4 = ((($0)) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>($1|0);
 if (!($6)) {
  _g_assertion_message_expr(0,135631,476,136002,135737);
  // unreachable;
 }
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($2|0)==(0|0);
 if ($9) {
  $24 = 0;
 } else {
  $10 = ((($0)) + 28|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if ($14) {
   $24 = $2;
  } else {
   $15 = (ftCall_ii($13|0,$2)|0);
   $24 = $15;
  }
 }
 $16 = (($8) + ($1<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  HEAP32[$16>>2] = $24;
  return;
 }
 $19 = ((($0)) + 28|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($20)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  HEAP32[$16>>2] = $24;
  return;
 }
 ftCall_vi($22|0,$17);
 HEAP32[$16>>2] = 0;
 HEAP32[$16>>2] = $24;
 return;
}
function _system_collections_generic_array_list_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$053$i = 0, $$pre = 0, $$pre57 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 32|0);
 $5 = ((($0)) + 36|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($3|0)==($6|0);
 if ($7) {
  $8 = (($3) + 1)|0;
  $9 = ($3|0)<(1);
  $10 = $3 << 1;
  $$053$i = $9 ? $8 : $10;
  $11 = ($3|0)>($$053$i|0);
  if ($11) {
   _g_assertion_message_expr(0,135631,815,135936,135987);
   // unreachable;
  }
  $12 = HEAP32[$4>>2]|0;
  $13 = (_g_realloc_n($12,$$053$i,4)|0);
  HEAP32[$4>>2] = $13;
  $14 = HEAP32[$5>>2]|0;
  $15 = ($$053$i|0)>($14|0);
  if ($15) {
   $16 = (($$053$i) - ($14))|0;
   $17 = $16 << 2;
   $18 = (($13) + ($14<<2)|0);
   _memset(($18|0),0,($17|0))|0;
  }
  HEAP32[$5>>2] = $$053$i;
  $19 = ((($0)) + 40|0);
  HEAP32[$19>>2] = $$053$i;
  $$pre = HEAP32[$2>>2]|0;
  $22 = $$pre;
 } else {
  $22 = $3;
 }
 $20 = HEAP32[$4>>2]|0;
 $21 = (($22) + 1)|0;
 HEAP32[$2>>2] = $21;
 $23 = ($1|0)==(0|0);
 if ($23) {
  $37 = 0;
 } else {
  $24 = ((($0)) + 28|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($25)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)==(0|0);
  if ($28) {
   $37 = $1;
  } else {
   $29 = (ftCall_ii($27|0,$1)|0);
   $37 = $29;
  }
 }
 $30 = (($20) + ($22<<2)|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0|0);
 $$pre57 = ((($0)) + 28|0);
 if (!($32)) {
  $33 = HEAP32[$$pre57>>2]|0;
  $34 = ((($33)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ($35|0)==(0|0);
  if (!($36)) {
   ftCall_vi($35|0,$31);
   HEAP32[$30>>2] = 0;
  }
 }
 HEAP32[$30>>2] = $37;
 $38 = HEAP32[$$pre57>>2]|0;
 $39 = ((($38)) + 16|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (($40) + 1)|0;
 HEAP32[$39>>2] = $41;
 return 1;
}
function _system_collections_generic_array_list_real_Insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$053$i = 0, $$pre = 0, $$pre78 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)>(-1);
 if (!($3)) {
  _g_assertion_message_expr(0,135631,550,135857,135907);
  // unreachable;
 }
 $4 = ((($0)) + 44|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)<($1|0);
 if ($6) {
  _g_assertion_message_expr(0,135631,550,135857,135907);
  // unreachable;
 }
 $7 = ((($0)) + 32|0);
 $8 = ((($0)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($5|0)==($9|0);
 if ($10) {
  $11 = (($5) + 1)|0;
  $12 = ($5|0)<(1);
  $13 = $5 << 1;
  $$053$i = $12 ? $11 : $13;
  $14 = ($5|0)>($$053$i|0);
  if ($14) {
   _g_assertion_message_expr(0,135631,815,135936,135987);
   // unreachable;
  }
  $15 = HEAP32[$7>>2]|0;
  $16 = (_g_realloc_n($15,$$053$i,4)|0);
  HEAP32[$7>>2] = $16;
  $17 = HEAP32[$8>>2]|0;
  $18 = ($$053$i|0)>($17|0);
  if ($18) {
   $19 = (($$053$i) - ($17))|0;
   $20 = $19 << 2;
   $21 = (($16) + ($17<<2)|0);
   _memset(($21|0),0,($20|0))|0;
  }
  HEAP32[$8>>2] = $$053$i;
  $22 = ((($0)) + 40|0);
  HEAP32[$22>>2] = $$053$i;
  $$pre = HEAP32[$4>>2]|0;
  $24 = $$pre;
 } else {
  $24 = $5;
 }
 $23 = ($24|0)<($1|0);
 if ($23) {
  _g_assertion_message_expr(0,135631,753,135765,135809);
  // unreachable;
 }
 $25 = HEAP32[$7>>2]|0;
 $26 = (($1) + 1)|0;
 $27 = (($24) - ($1))|0;
 $28 = $26 << 2;
 $29 = (($25) + ($28)|0);
 $30 = $1 << 2;
 $31 = (($25) + ($30)|0);
 $32 = $27 << 2;
 _memmove(($29|0),($31|0),($32|0))|0;
 $33 = ($24|0)>($26|0);
 if ($33) {
  HEAP8[$31>>0]=0&255;HEAP8[$31+1>>0]=(0>>8)&255;HEAP8[$31+2>>0]=(0>>16)&255;HEAP8[$31+3>>0]=0>>24;
 } else {
  _memset(($31|0),0,($32|0))|0;
 }
 $34 = HEAP32[$4>>2]|0;
 $35 = (($34) + 1)|0;
 HEAP32[$4>>2] = $35;
 $36 = HEAP32[$7>>2]|0;
 $37 = ($2|0)==(0|0);
 if ($37) {
  $51 = 0;
 } else {
  $38 = ((($0)) + 28|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 4|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ($41|0)==(0|0);
  if ($42) {
   $51 = $2;
  } else {
   $43 = (ftCall_ii($41|0,$2)|0);
   $51 = $43;
  }
 }
 $44 = (($36) + ($1<<2)|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 $$pre78 = ((($0)) + 28|0);
 if ($46) {
  HEAP32[$44>>2] = $51;
  $52 = HEAP32[$$pre78>>2]|0;
  $53 = ((($52)) + 16|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (($54) + 1)|0;
  HEAP32[$53>>2] = $55;
  return;
 }
 $47 = HEAP32[$$pre78>>2]|0;
 $48 = ((($47)) + 8|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if ($50) {
  HEAP32[$44>>2] = $51;
  $52 = HEAP32[$$pre78>>2]|0;
  $53 = ((($52)) + 16|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = (($54) + 1)|0;
  HEAP32[$53>>2] = $55;
  return;
 }
 ftCall_vi($49|0,$45);
 HEAP32[$44>>2] = 0;
 HEAP32[$44>>2] = $51;
 $52 = HEAP32[$$pre78>>2]|0;
 $53 = ((($52)) + 16|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = (($54) + 1)|0;
 HEAP32[$53>>2] = $55;
 return;
}
function _system_collections_generic_array_list_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$066 = 0, $$069 = 0, $$071 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $cond = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 44|0);
 $3 = ((($0)) + 28|0);
 $4 = ((($0)) + 32|0);
 $$069 = 0;$$071 = 0;
 L1: while(1) {
  $spec$select = (($$069) + ($$071))|0;
  $5 = HEAP32[$2>>2]|0;
  $6 = ($spec$select|0)<($5|0);
  if ($6) {
   $7 = HEAP32[$3>>2]|0;
   $8 = ((($7)) + 12|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = HEAP32[$4>>2]|0;
   $11 = (($10) + ($spec$select<<2)|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = (ftCall_iii($9|0,$12,$1)|0);
   $14 = ($13|0)==(0);
   if ($14) {
    $$066 = 0;
   } else {
    $15 = (_system_collections_generic_list_RemoveAt($0,$spec$select)|0);
    $16 = ($15|0)==(0|0);
    if ($16) {
     $$066 = 1;
    } else {
     $17 = HEAP32[$3>>2]|0;
     $18 = ((($17)) + 8|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ($19|0)==(0|0);
     if ($20) {
      $$066 = 1;
     } else {
      ftCall_vi($19|0,$15);
      $$066 = 1;
     }
    }
   }
  } else {
   $$066 = 3;
  }
  $trunc = $$066&255;
  $trunc$clear = $trunc & 3;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$069 = $spec$select;$$071 = 1;
   break;
  }
  case 3:  {
   break L1;
   break;
  }
  default: {
   label = 8;
   break L1;
  }
  }
 }
 if ((label|0) == 8) {
  $cond = ($$066|0)==(0);
  if (!($cond)) {
   $21 = 1;
   return ($21|0);
  }
 }
 $21 = 0;
 return ($21|0);
}
function _system_collections_generic_array_list_real_RemoveAt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$phi$trans$insert = 0, $$pre = 0, $$pre$phi84Z2D = 0, $$pre$phi86Z2D = 0, $$pre82 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(-1);
 if (!($2)) {
  _g_assertion_message_expr(0,135631,657,135685,135737);
  // unreachable;
 }
 $3 = ((($0)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>($1|0);
 if (!($5)) {
  _g_assertion_message_expr(0,135631,657,135685,135737);
  // unreachable;
 }
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (($7) + ($1<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 do {
  if ($10) {
   $$pre$phi84Z2D = $8;$45 = 0;
  } else {
   $11 = ((($0)) + 28|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($12)) + 4|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if ($15) {
    $$pre$phi86Z2D = $8;$23 = $9;$46 = $9;
   } else {
    $16 = (ftCall_ii($14|0,$9)|0);
    $$pre = HEAP32[$6>>2]|0;
    $$phi$trans$insert = (($$pre) + ($1<<2)|0);
    $$pre82 = HEAP32[$$phi$trans$insert>>2]|0;
    $17 = ($$pre82|0)==(0|0);
    if ($17) {
     $$pre$phi84Z2D = $$phi$trans$insert;$45 = $16;
     break;
    } else {
     $$pre$phi86Z2D = $$phi$trans$insert;$23 = $$pre82;$46 = $16;
    }
   }
   $18 = ((($0)) + 28|0);
   $19 = HEAP32[$18>>2]|0;
   $20 = ((($19)) + 8|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = ($21|0)==(0|0);
   if ($22) {
    $$pre$phi84Z2D = $$pre$phi86Z2D;$45 = $46;
   } else {
    ftCall_vi($21|0,$23);
    HEAP32[$$pre$phi86Z2D>>2] = 0;
    $$pre$phi84Z2D = $$pre$phi86Z2D;$45 = $46;
   }
  }
 } while(0);
 HEAP32[$$pre$phi84Z2D>>2] = 0;
 $24 = (($1) + 1)|0;
 $25 = HEAP32[$3>>2]|0;
 $26 = ($25|0)>($1|0);
 if (!($26)) {
  _g_assertion_message_expr(0,135631,753,135765,135809);
  // unreachable;
 }
 $27 = HEAP32[$6>>2]|0;
 $28 = (($25) - ($24))|0;
 $29 = $1 << 2;
 $30 = (($27) + ($29)|0);
 $31 = $24 << 2;
 $32 = (($27) + ($31)|0);
 $33 = $28 << 2;
 _memmove(($30|0),($32|0),($33|0))|0;
 $34 = (($25) + -1)|0;
 $35 = ($34|0)>($24|0);
 if ($35) {
  $36 = $34 << 2;
  $37 = (($27) + ($36)|0);
  HEAP8[$37>>0]=0&255;HEAP8[$37+1>>0]=(0>>8)&255;HEAP8[$37+2>>0]=(0>>16)&255;HEAP8[$37+3>>0]=0>>24;
  $38 = HEAP32[$3>>2]|0;
  $39 = (($38) + -1)|0;
  HEAP32[$3>>2] = $39;
  $40 = ((($0)) + 28|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($43) + 1)|0;
  HEAP32[$42>>2] = $44;
  return ($45|0);
 } else {
  _memset(($32|0),0,($33|0))|0;
  $38 = HEAP32[$3>>2]|0;
  $39 = (($38) + -1)|0;
  HEAP32[$3>>2] = $39;
  $40 = ((($0)) + 28|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($41)) + 16|0);
  $43 = HEAP32[$42>>2]|0;
  $44 = (($43) + 1)|0;
  HEAP32[$42>>2] = $44;
  return ($45|0);
 }
 return (0)|0;
}
function _system_collections_generic_array_list_real_Clear($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$phi53Z2D = 0, $$pre51 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select50 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 44|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = ((($0)) + 28|0);
  $20 = $2;$spec$select50 = 0;
  while(1) {
   $6 = HEAP32[$4>>2]|0;
   $7 = (($6) + ($spec$select50<<2)|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $15 = $20;
   } else {
    $10 = HEAP32[$5>>2]|0;
    $11 = ((($10)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==(0|0);
    if ($13) {
     $15 = $20;
    } else {
     ftCall_vi($12|0,$8);
     HEAP32[$7>>2] = 0;
     $$pre = HEAP32[$1>>2]|0;
     $15 = $$pre;
    }
   }
   HEAP32[$7>>2] = 0;
   $spec$select = (($spec$select50) + 1)|0;
   $14 = ($spec$select|0)<($15|0);
   if ($14) {
    $20 = $15;$spec$select50 = $spec$select;
   } else {
    $$pre$phi53Z2D = $5;
    break;
   }
  }
 } else {
  $$pre51 = ((($0)) + 28|0);
  $$pre$phi53Z2D = $$pre51;
 }
 HEAP32[$1>>2] = 0;
 $16 = HEAP32[$$pre$phi53Z2D>>2]|0;
 $17 = ((($16)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($18) + 1)|0;
 HEAP32[$17>>2] = $19;
 return;
}
function _system_collections_generic_array_list_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 44|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function __vala_system_collections_generic_array_list_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148728)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_list_get_type()|0);
  $7 = (_g_type_register_static($6,135586,119196,0)|0);
  _g_once_init_leave(148728,$7);
 }
 $8 = HEAP32[37182]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(4);
 if ($cond) {
  $10 = (_system_collections_generic_collection_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135631;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1217;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_array_list_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148728)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_list_get_type()|0);
  $7 = (_g_type_register_static($6,135586,119196,0)|0);
  _g_once_init_leave(148728,$7);
 }
 $8 = HEAP32[37182]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 5:  {
  $10 = (_g_value_get_pointer($2)|0);
  $11 = ((($0)) + 28|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $14 = (_g_value_get_gtype($2)|0);
  $15 = ((($0)) + 28|0);
  $16 = HEAP32[$15>>2]|0;
  HEAP32[$16>>2] = $14;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 4|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $21 = (_g_value_get_pointer($2)|0);
  $22 = ((($0)) + 28|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 8|0);
  HEAP32[$24>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $25 = ((($3)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = HEAP32[$3>>2]|0;
  $28 = HEAP32[$27>>2]|0;
  $29 = (_g_type_name($28)|0);
  $30 = HEAP32[$0>>2]|0;
  $31 = HEAP32[$30>>2]|0;
  $32 = (_g_type_name($31)|0);
  HEAP32[$vararg_buffer>>2] = 135631;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1240;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $26;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $29;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $32;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_array_list_finalize($0) {
 $0 = $0|0;
 var $$011$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $or$cond$i$i = 0, $or$cond12$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148728)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_list_get_type()|0);
  $4 = (_g_type_register_static($3,135586,119196,0)|0);
  _g_once_init_leave(148728,$4);
 }
 $5 = HEAP32[37182]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 36|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 28|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($8|0)!=(0|0);
 $16 = ($14|0)!=(0|0);
 $or$cond$i$i = $15 & $16;
 $17 = ($10|0)>(0);
 $or$cond12$i$i = $17 & $or$cond$i$i;
 if (!($or$cond12$i$i)) {
  _g_free($8);
  HEAP32[$7>>2] = 0;
  $22 = HEAP32[37183]|0;
  $23 = (_g_type_check_class_cast($22,80)|0);
  $24 = ((($22)) + 36|0);
  $25 = HEAP32[$24>>2]|0;
  ftCall_vi($25|0,$0);
  return;
 }
 $$011$i$i = 0;
 while(1) {
  $18 = (($8) + ($$011$i$i<<2)|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)==(0|0);
  if (!($20)) {
   ftCall_vi($14|0,$19);
  }
  $21 = (($$011$i$i) + 1)|0;
  $exitcond$i$i = ($21|0)==($10|0);
  if ($exitcond$i$i) {
   break;
  } else {
   $$011$i$i = $21;
  }
 }
 _g_free($8);
 HEAP32[$7>>2] = 0;
 $22 = HEAP32[37183]|0;
 $23 = (_g_type_check_class_cast($22,80)|0);
 $24 = ((($22)) + 36|0);
 $25 = HEAP32[$24>>2]|0;
 ftCall_vi($25|0,$0);
 return;
}
function _system_collections_generic_array_list_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37185] = $1;
 _g_type_class_add_private($0,20);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 415;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 416;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 417;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 418;
 $6 = (_system_collections_generic_iterator_get_type()|0);
 $7 = (_g_type_check_class_cast($0,$6)|0);
 $8 = ((($0)) + 112|0);
 HEAP32[$8>>2] = 419;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 420;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 24|0);
 HEAP32[$12>>2] = 421;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 36|0);
 HEAP32[$14>>2] = 422;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_once_init_enter(148728)|0);
 $23 = ($22|0)==(0);
 if ($23) {
  $26 = HEAP32[37182]|0;
  $27 = (_g_param_spec_object(136138,136138,136138,$26,226)|0);
  HEAP32[36204] = $27;
  _g_object_class_install_property($0,4,$27);
  $28 = (_g_type_check_class_cast($0,80)|0);
  $29 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
  HEAP32[36208] = $29;
  _g_object_class_install_property($0,5,$29);
  return;
 }
 $24 = (_system_collections_generic_list_get_type()|0);
 $25 = (_g_type_register_static($24,135586,119196,0)|0);
 _g_once_init_leave(148728,$25);
 $26 = HEAP32[37182]|0;
 $27 = (_g_param_spec_object(136138,136138,136138,$26,226)|0);
 HEAP32[36204] = $27;
 _g_object_class_install_property($0,4,$27);
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
 HEAP32[36208] = $29;
 _g_object_class_install_property($0,5,$29);
 return;
}
function _system_collections_generic_array_list_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148736)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136096,119232,0)|0);
  _g_once_init_leave(148736,$4);
 }
 $5 = HEAP32[37184]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 16|0);
 HEAP32[$8>>2] = -1;
 $9 = ((($0)) + 24|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 0;
 return;
}
function _system_collections_generic_array_list_iterator_real_next($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($2|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135631,880,136400,136202);
  // unreachable;
 }
 $12 = ((($4)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($6)) + 44|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($13|0)<($15|0);
 if (!($16)) {
  $20 = $13;
  $19 = ($20|0)<($15|0);
  $21 = $19&1;
  return ($21|0);
 }
 $17 = ((($0)) + 24|0);
 $18 = (($13) + 1)|0;
 HEAP32[$12>>2] = $18;
 HEAP32[$17>>2] = 0;
 $20 = $18;
 $19 = ($20|0)<($15|0);
 $21 = $19&1;
 return ($21|0);
}
function _system_collections_generic_array_list_iterator_real_has_next($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($2|0)==($10|0);
 if ($11) {
  $12 = ((($4)) + 16|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($6)) + 44|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (($13) + 1)|0;
  $17 = ($16|0)<($15|0);
  $18 = $17&1;
  return ($18|0);
 } else {
  _g_assertion_message_expr(0,135631,911,136339,136202);
  // unreachable;
 }
 return (0)|0;
}
function _system_collections_generic_array_list_iterator_real_get($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($2|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135631,936,136272,136202);
  // unreachable;
 }
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 if (!($14)) {
  _g_assertion_message_expr(0,135631,938,136272,136328);
  // unreachable;
 }
 $15 = ((($4)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)<(0);
 if ($17) {
  $$0 = 0;
  return ($$0|0);
 }
 $18 = ((($6)) + 44|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($16|0)<($19|0);
 if (!($20)) {
  $$0 = 0;
  return ($$0|0);
 }
 $21 = (_system_collections_generic_list_get($6,$16)|0);
 $$0 = $21;
 return ($$0|0);
}
function _system_collections_generic_array_list_iterator_real_Remove($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($2|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135631,984,136143,136202);
  // unreachable;
 }
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0);
 if (!($14)) {
  _g_assertion_message_expr(0,135631,993,136143,136225);
  // unreachable;
 }
 $15 = ((($4)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $phitmp = ($16|0)>(-1);
 if (!($phitmp)) {
  _g_assertion_message_expr(0,135631,993,136143,136225);
  // unreachable;
 }
 $17 = ((($6)) + 44|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($16|0)<($18|0);
 if (!($19)) {
  _g_assertion_message_expr(0,135631,997,136143,136251);
  // unreachable;
 }
 $20 = (_system_collections_generic_list_RemoveAt($6,$16)|0);
 $21 = ($20|0)==(0|0);
 if (!($21)) {
  $22 = HEAP32[$3>>2]|0;
  $23 = ((($22)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($24|0)==(0|0);
  if (!($25)) {
   ftCall_vi($24|0,$20);
  }
 }
 $26 = HEAP32[$3>>2]|0;
 $27 = ((($26)) + 16|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = (($28) + -1)|0;
 HEAP32[$27>>2] = $29;
 HEAP32[$12>>2] = 1;
 $30 = ((($26)) + 12|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($31)) + 28|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ((($33)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 HEAP32[$1>>2] = $35;
 return;
}
function _system_collections_generic_array_list_iterator_real_get_valid($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(-1);
 if (!($5)) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = ((($2)) + 12|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($4|0)<($9|0);
 if (!($10)) {
  $$0 = 0;
  return ($$0|0);
 }
 $11 = ((($0)) + 24|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0);
 $14 = $13&1;
 $$0 = $14;
 return ($$0|0);
}
function __vala_system_collections_generic_array_list_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148736)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136096,119232,0)|0);
  _g_once_init_leave(148736,$7);
 }
 $8 = HEAP32[37184]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(5);
 if ($cond) {
  $10 = (_system_collections_generic_iterator_get_valid($0)|0);
  _g_value_set_boolean($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135631;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1120;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_array_list_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148736)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136096,119232,0)|0);
  _g_once_init_leave(148736,$7);
 }
 $8 = HEAP32[37184]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 4:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 12|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 28|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 16|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($0)) + 28|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $26 = (_g_value_get_gtype($2)|0);
  $27 = ((($0)) + 20|0);
  $28 = HEAP32[$27>>2]|0;
  HEAP32[$28>>2] = $26;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $29 = (_g_value_get_pointer($2)|0);
  $30 = ((($0)) + 20|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 4|0);
  HEAP32[$32>>2] = $29;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $33 = (_g_value_get_pointer($2)|0);
  $34 = ((($0)) + 20|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($35)) + 8|0);
  HEAP32[$36>>2] = $33;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $37 = ((($3)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = HEAP32[$3>>2]|0;
  $40 = HEAP32[$39>>2]|0;
  $41 = (_g_type_name($40)|0);
  $42 = HEAP32[$0>>2]|0;
  $43 = HEAP32[$42>>2]|0;
  $44 = (_g_type_name($43)|0);
  HEAP32[$vararg_buffer>>2] = 135631;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1143;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $38;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $41;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $44;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_array_list_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148736)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136096,119232,0)|0);
  _g_once_init_leave(148736,$4);
 }
 $5 = HEAP32[37184]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37185]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_array_list_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148728)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37182]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_list_get_type()|0);
 $3 = (_g_type_register_static($2,135586,119196,0)|0);
 _g_once_init_leave(148728,$3);
 $4 = HEAP32[37182]|0;
 return ($4|0);
}
function _system_collections_generic_collection_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_collection_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 116|0);
 $3 = HEAP32[$2>>2]|0;
 ftCall_vi($3|0,$0);
 return;
}
function _system_collections_generic_collection_ToArray($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 124|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_collection_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_system_collections_generic_iterable_construct($0,$1,$2,$3)|0);
 $5 = ((($4)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_collection_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_collection_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148744)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37186]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_iterable_get_type()|0);
 $3 = (_g_type_register_static($2,136457,119268,16)|0);
 _g_once_init_leave(148744,$3);
 $4 = HEAP32[37186]|0;
 return ($4|0);
}
function _system_collections_generic_collection_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37187] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = 423;
 $3 = ((($0)) + 108|0);
 HEAP32[$3>>2] = 424;
 $4 = ((($0)) + 112|0);
 HEAP32[$4>>2] = 425;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 426;
 $6 = ((($0)) + 120|0);
 HEAP32[$6>>2] = 427;
 $7 = ((($0)) + 124|0);
 HEAP32[$7>>2] = 428;
 $8 = (_g_once_init_enter(148744)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $10 = (_system_collections_generic_iterable_get_type()|0);
  $11 = (_g_type_register_static($10,136457,119268,16)|0);
  _g_once_init_leave(148744,$11);
 }
 $12 = HEAP32[37186]|0;
 $13 = (_g_type_check_class_cast($0,$12)|0);
 $14 = ((($0)) + 132|0);
 HEAP32[$14>>2] = 429;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 28|0);
 HEAP32[$16>>2] = 430;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = ((($0)) + 24|0);
 HEAP32[$18>>2] = 431;
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[(144864)>>2] = $26;
 _g_object_class_install_property($0,4,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_boolean(136492,136492,136492,0,225)|0);
 HEAP32[(144868)>>2] = $28;
 _g_object_class_install_property($0,5,$28);
 return;
}
function _system_collections_generic_collection_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148744)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterable_get_type()|0);
  $4 = (_g_type_register_static($3,136457,119268,16)|0);
  _g_once_init_leave(148744,$4);
 }
 $5 = HEAP32[37186]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_collection_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,136827,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,136738,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,136646,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,136555,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_collection_real_AddAll($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$052$lcssa = 0, $$05255 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_collections_generic_iterable_iterator($1)|0);
 $3 = (_system_collections_generic_iterator_next($2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$052$lcssa = 0;
 } else {
  $5 = ((($0)) + 20|0);
  $$05255 = 0;
  while(1) {
   $6 = (_system_collections_generic_iterator_get($2)|0);
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($7)) + 104|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (ftCall_iii($9|0,$0,$6)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = HEAP32[$0>>2]|0;
    $13 = ((($12)) + 108|0);
    $14 = HEAP32[$13>>2]|0;
    (ftCall_iii($14|0,$0,$6)|0);
    $$1 = 1;
   } else {
    $$1 = $$05255;
   }
   $15 = ($6|0)==(0|0);
   if (!($15)) {
    $16 = HEAP32[$5>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0|0);
    if (!($19)) {
     ftCall_vi($18|0,$6);
    }
   }
   $20 = (_system_collections_generic_iterator_next($2)|0);
   $21 = ($20|0)==(0);
   if ($21) {
    $$052$lcssa = $$1;
    break;
   } else {
    $$05255 = $$1;
   }
  }
 }
 $22 = ($2|0)==(0|0);
 if ($22) {
  return ($$052$lcssa|0);
 }
 _g_object_unref($2);
 return ($$052$lcssa|0);
}
function _system_collections_generic_collection_real_ToArray($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0101104$i = 0, $$0101104$i345 = 0, $$0101104$i357 = 0, $$0101104$i361 = 0, $$0322403 = 0, $$08790$i = 0, $$08790$i330 = 0, $$09396$i = 0, $$09396$i334 = 0, $$09396$i338 = 0, $$09396$i349 = 0, $$09396$i353 = 0, $$09396$i365 = 0, $$11 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + -12)|0;
 $6 = $5 >>> 2;
 $7 = $5 << 30;
 $8 = $6 | $7;
 do {
  switch ($8|0) {
  case 2:  {
   $9 = (_g_once_init_enter(148744)|0);
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (_system_collections_generic_iterable_get_type()|0);
    $12 = (_g_type_register_static($11,136457,119268,16)|0);
    _g_once_init_leave(148744,$12);
   }
   $13 = HEAP32[37186]|0;
   $14 = (_g_type_check_instance_cast($0,$13)|0);
   $15 = HEAP32[$0>>2]|0;
   $16 = ((($15)) + 128|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (ftCall_ii($17|0,$0)|0);
   $19 = (_g_malloc0_n($18,4)|0);
   $20 = (_system_collections_generic_iterable_iterator($0)|0);
   $21 = (_system_collections_generic_iterator_next($20)|0);
   $22 = ($21|0)==(0);
   if (!($22)) {
    $$09396$i = 0;
    while(1) {
     $23 = (($19) + ($$09396$i<<2)|0);
     $24 = (($$09396$i) + 1)|0;
     $25 = (_system_collections_generic_iterator_get($20)|0);
     $26 = $25;
     HEAP32[$23>>2] = $26;
     $27 = (_system_collections_generic_iterator_next($20)|0);
     $28 = ($27|0)==(0);
     if ($28) {
      break;
     } else {
      $$09396$i = $24;
     }
    }
   }
   $29 = ($20|0)==(0|0);
   if (!($29)) {
    _g_object_unref($20);
   }
   $30 = ($1|0)==(0|0);
   if ($30) {
    $$11 = $19;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $18;
   $$11 = $19;
   return ($$11|0);
   break;
  }
  case 0:  {
   $31 = (_g_once_init_enter(148744)|0);
   $32 = ($31|0)==(0);
   if (!($32)) {
    $33 = (_system_collections_generic_iterable_get_type()|0);
    $34 = (_g_type_register_static($33,136457,119268,16)|0);
    _g_once_init_leave(148744,$34);
   }
   $35 = HEAP32[37186]|0;
   $36 = (_g_type_check_instance_cast($0,$35)|0);
   $37 = HEAP32[$0>>2]|0;
   $38 = ((($37)) + 128|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (ftCall_ii($39|0,$0)|0);
   $41 = (_g_malloc0($40)|0);
   $42 = (_system_collections_generic_iterable_iterator($0)|0);
   $43 = (_system_collections_generic_iterator_next($42)|0);
   $44 = ($43|0)==(0);
   if (!($44)) {
    $$08790$i = 0;
    while(1) {
     $45 = (($41) + ($$08790$i)|0);
     $46 = (($$08790$i) + 1)|0;
     $47 = (_system_collections_generic_iterator_get($42)|0);
     $48 = $47;
     $49 = $48&255;
     HEAP8[$45>>0] = $49;
     $50 = (_system_collections_generic_iterator_next($42)|0);
     $51 = ($50|0)==(0);
     if ($51) {
      break;
     } else {
      $$08790$i = $46;
     }
    }
   }
   $52 = ($42|0)==(0|0);
   if (!($52)) {
    _g_object_unref($42);
   }
   $53 = ($1|0)==(0|0);
   if ($53) {
    $$11 = $41;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $40;
   $$11 = $41;
   return ($$11|0);
   break;
  }
  case 1:  {
   $54 = (_g_once_init_enter(148744)|0);
   $55 = ($54|0)==(0);
   if (!($55)) {
    $56 = (_system_collections_generic_iterable_get_type()|0);
    $57 = (_g_type_register_static($56,136457,119268,16)|0);
    _g_once_init_leave(148744,$57);
   }
   $58 = HEAP32[37186]|0;
   $59 = (_g_type_check_instance_cast($0,$58)|0);
   $60 = HEAP32[$0>>2]|0;
   $61 = ((($60)) + 128|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (ftCall_ii($62|0,$0)|0);
   $64 = (_g_malloc0($63)|0);
   $65 = (_system_collections_generic_iterable_iterator($0)|0);
   $66 = (_system_collections_generic_iterator_next($65)|0);
   $67 = ($66|0)==(0);
   if (!($67)) {
    $$08790$i330 = 0;
    while(1) {
     $68 = (($64) + ($$08790$i330)|0);
     $69 = (($$08790$i330) + 1)|0;
     $70 = (_system_collections_generic_iterator_get($65)|0);
     $71 = $70;
     $72 = $71&255;
     HEAP8[$68>>0] = $72;
     $73 = (_system_collections_generic_iterator_next($65)|0);
     $74 = ($73|0)==(0);
     if ($74) {
      break;
     } else {
      $$08790$i330 = $69;
     }
    }
   }
   $75 = ($65|0)==(0|0);
   if (!($75)) {
    _g_object_unref($65);
   }
   $76 = ($1|0)==(0|0);
   if ($76) {
    $$11 = $64;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $63;
   $$11 = $64;
   return ($$11|0);
   break;
  }
  case 3:  {
   $77 = (_g_once_init_enter(148744)|0);
   $78 = ($77|0)==(0);
   if (!($78)) {
    $79 = (_system_collections_generic_iterable_get_type()|0);
    $80 = (_g_type_register_static($79,136457,119268,16)|0);
    _g_once_init_leave(148744,$80);
   }
   $81 = HEAP32[37186]|0;
   $82 = (_g_type_check_instance_cast($0,$81)|0);
   $83 = HEAP32[$0>>2]|0;
   $84 = ((($83)) + 128|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (ftCall_ii($85|0,$0)|0);
   $87 = (_g_malloc0_n($86,4)|0);
   $88 = (_system_collections_generic_iterable_iterator($0)|0);
   $89 = (_system_collections_generic_iterator_next($88)|0);
   $90 = ($89|0)==(0);
   if (!($90)) {
    $$09396$i334 = 0;
    while(1) {
     $91 = (($87) + ($$09396$i334<<2)|0);
     $92 = (($$09396$i334) + 1)|0;
     $93 = (_system_collections_generic_iterator_get($88)|0);
     $94 = $93;
     HEAP32[$91>>2] = $94;
     $95 = (_system_collections_generic_iterator_next($88)|0);
     $96 = ($95|0)==(0);
     if ($96) {
      break;
     } else {
      $$09396$i334 = $92;
     }
    }
   }
   $97 = ($88|0)==(0|0);
   if (!($97)) {
    _g_object_unref($88);
   }
   $98 = ($1|0)==(0|0);
   if ($98) {
    $$11 = $87;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $86;
   $$11 = $87;
   return ($$11|0);
   break;
  }
  case 4:  {
   $99 = (_g_once_init_enter(148744)|0);
   $100 = ($99|0)==(0);
   if (!($100)) {
    $101 = (_system_collections_generic_iterable_get_type()|0);
    $102 = (_g_type_register_static($101,136457,119268,16)|0);
    _g_once_init_leave(148744,$102);
   }
   $103 = HEAP32[37186]|0;
   $104 = (_g_type_check_instance_cast($0,$103)|0);
   $105 = HEAP32[$0>>2]|0;
   $106 = ((($105)) + 128|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (ftCall_ii($107|0,$0)|0);
   $109 = (_g_malloc0_n($108,4)|0);
   $110 = (_system_collections_generic_iterable_iterator($0)|0);
   $111 = (_system_collections_generic_iterator_next($110)|0);
   $112 = ($111|0)==(0);
   if (!($112)) {
    $$09396$i338 = 0;
    while(1) {
     $113 = (($109) + ($$09396$i338<<2)|0);
     $114 = (($$09396$i338) + 1)|0;
     $115 = (_system_collections_generic_iterator_get($110)|0);
     $116 = $115;
     HEAP32[$113>>2] = $116;
     $117 = (_system_collections_generic_iterator_next($110)|0);
     $118 = ($117|0)==(0);
     if ($118) {
      break;
     } else {
      $$09396$i338 = $114;
     }
    }
   }
   $119 = ($110|0)==(0|0);
   if (!($119)) {
    _g_object_unref($110);
   }
   $120 = ($1|0)==(0|0);
   if ($120) {
    $$11 = $109;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $108;
   $$11 = $109;
   return ($$11|0);
   break;
  }
  case 7:  {
   $121 = (_g_once_init_enter(148744)|0);
   $122 = ($121|0)==(0);
   if (!($122)) {
    $123 = (_system_collections_generic_iterable_get_type()|0);
    $124 = (_g_type_register_static($123,136457,119268,16)|0);
    _g_once_init_leave(148744,$124);
   }
   $125 = HEAP32[37186]|0;
   $126 = (_g_type_check_instance_cast($0,$125)|0);
   $127 = HEAP32[$0>>2]|0;
   $128 = ((($127)) + 128|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (ftCall_ii($129|0,$0)|0);
   $131 = (_g_malloc0_n($130,4)|0);
   $132 = (_system_collections_generic_iterable_iterator($0)|0);
   $133 = (_system_collections_generic_iterator_next($132)|0);
   $134 = ($133|0)==(0);
   if (!($134)) {
    $$0101104$i = 0;
    while(1) {
     $135 = (_system_collections_generic_iterator_get($132)|0);
     $136 = (($$0101104$i) + 1)|0;
     $137 = (($131) + ($$0101104$i<<2)|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($138|0)==(0|0);
     if (!($139)) {
      _g_free($138);
      HEAP32[$137>>2] = 0;
     }
     HEAP32[$137>>2] = $135;
     $140 = (_system_collections_generic_iterator_next($132)|0);
     $141 = ($140|0)==(0);
     if ($141) {
      break;
     } else {
      $$0101104$i = $136;
     }
    }
   }
   $142 = ($132|0)==(0|0);
   if (!($142)) {
    _g_object_unref($132);
   }
   $143 = ($1|0)==(0|0);
   if ($143) {
    $$11 = $131;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $130;
   $$11 = $131;
   return ($$11|0);
   break;
  }
  case 8:  {
   $144 = (_g_once_init_enter(148744)|0);
   $145 = ($144|0)==(0);
   if (!($145)) {
    $146 = (_system_collections_generic_iterable_get_type()|0);
    $147 = (_g_type_register_static($146,136457,119268,16)|0);
    _g_once_init_leave(148744,$147);
   }
   $148 = HEAP32[37186]|0;
   $149 = (_g_type_check_instance_cast($0,$148)|0);
   $150 = HEAP32[$0>>2]|0;
   $151 = ((($150)) + 128|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (ftCall_ii($152|0,$0)|0);
   $154 = (_g_malloc0_n($153,4)|0);
   $155 = (_system_collections_generic_iterable_iterator($0)|0);
   $156 = (_system_collections_generic_iterator_next($155)|0);
   $157 = ($156|0)==(0);
   if (!($157)) {
    $$0101104$i345 = 0;
    while(1) {
     $158 = (_system_collections_generic_iterator_get($155)|0);
     $159 = (($$0101104$i345) + 1)|0;
     $160 = (($154) + ($$0101104$i345<<2)|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ($161|0)==(0|0);
     if (!($162)) {
      _g_free($161);
      HEAP32[$160>>2] = 0;
     }
     HEAP32[$160>>2] = $158;
     $163 = (_system_collections_generic_iterator_next($155)|0);
     $164 = ($163|0)==(0);
     if ($164) {
      break;
     } else {
      $$0101104$i345 = $159;
     }
    }
   }
   $165 = ($155|0)==(0|0);
   if (!($165)) {
    _g_object_unref($155);
   }
   $166 = ($1|0)==(0|0);
   if ($166) {
    $$11 = $154;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $153;
   $$11 = $154;
   return ($$11|0);
   break;
  }
  case 5:  {
   $167 = (_g_once_init_enter(148744)|0);
   $168 = ($167|0)==(0);
   if (!($168)) {
    $169 = (_system_collections_generic_iterable_get_type()|0);
    $170 = (_g_type_register_static($169,136457,119268,16)|0);
    _g_once_init_leave(148744,$170);
   }
   $171 = HEAP32[37186]|0;
   $172 = (_g_type_check_instance_cast($0,$171)|0);
   $173 = HEAP32[$0>>2]|0;
   $174 = ((($173)) + 128|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = (ftCall_ii($175|0,$0)|0);
   $177 = (_g_malloc0_n($176,4)|0);
   $178 = (_system_collections_generic_iterable_iterator($0)|0);
   $179 = (_system_collections_generic_iterator_next($178)|0);
   $180 = ($179|0)==(0);
   if (!($180)) {
    $$09396$i349 = 0;
    while(1) {
     $181 = (($177) + ($$09396$i349<<2)|0);
     $182 = (($$09396$i349) + 1)|0;
     $183 = (_system_collections_generic_iterator_get($178)|0);
     $184 = $183;
     HEAP32[$181>>2] = $184;
     $185 = (_system_collections_generic_iterator_next($178)|0);
     $186 = ($185|0)==(0);
     if ($186) {
      break;
     } else {
      $$09396$i349 = $182;
     }
    }
   }
   $187 = ($178|0)==(0|0);
   if (!($187)) {
    _g_object_unref($178);
   }
   $188 = ($1|0)==(0|0);
   if ($188) {
    $$11 = $177;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $176;
   $$11 = $177;
   return ($$11|0);
   break;
  }
  case 6:  {
   $189 = (_g_once_init_enter(148744)|0);
   $190 = ($189|0)==(0);
   if (!($190)) {
    $191 = (_system_collections_generic_iterable_get_type()|0);
    $192 = (_g_type_register_static($191,136457,119268,16)|0);
    _g_once_init_leave(148744,$192);
   }
   $193 = HEAP32[37186]|0;
   $194 = (_g_type_check_instance_cast($0,$193)|0);
   $195 = HEAP32[$0>>2]|0;
   $196 = ((($195)) + 128|0);
   $197 = HEAP32[$196>>2]|0;
   $198 = (ftCall_ii($197|0,$0)|0);
   $199 = (_g_malloc0_n($198,4)|0);
   $200 = (_system_collections_generic_iterable_iterator($0)|0);
   $201 = (_system_collections_generic_iterator_next($200)|0);
   $202 = ($201|0)==(0);
   if (!($202)) {
    $$09396$i353 = 0;
    while(1) {
     $203 = (($199) + ($$09396$i353<<2)|0);
     $204 = (($$09396$i353) + 1)|0;
     $205 = (_system_collections_generic_iterator_get($200)|0);
     $206 = $205;
     HEAP32[$203>>2] = $206;
     $207 = (_system_collections_generic_iterator_next($200)|0);
     $208 = ($207|0)==(0);
     if ($208) {
      break;
     } else {
      $$09396$i353 = $204;
     }
    }
   }
   $209 = ($200|0)==(0|0);
   if (!($209)) {
    _g_object_unref($200);
   }
   $210 = ($1|0)==(0|0);
   if ($210) {
    $$11 = $199;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $198;
   $$11 = $199;
   return ($$11|0);
   break;
  }
  case 11:  {
   $211 = (_g_once_init_enter(148744)|0);
   $212 = ($211|0)==(0);
   if (!($212)) {
    $213 = (_system_collections_generic_iterable_get_type()|0);
    $214 = (_g_type_register_static($213,136457,119268,16)|0);
    _g_once_init_leave(148744,$214);
   }
   $215 = HEAP32[37186]|0;
   $216 = (_g_type_check_instance_cast($0,$215)|0);
   $217 = HEAP32[$0>>2]|0;
   $218 = ((($217)) + 128|0);
   $219 = HEAP32[$218>>2]|0;
   $220 = (ftCall_ii($219|0,$0)|0);
   $221 = (_g_malloc0_n($220,4)|0);
   $222 = (_system_collections_generic_iterable_iterator($0)|0);
   $223 = (_system_collections_generic_iterator_next($222)|0);
   $224 = ($223|0)==(0);
   if (!($224)) {
    $$0101104$i357 = 0;
    while(1) {
     $225 = (_system_collections_generic_iterator_get($222)|0);
     $226 = (($$0101104$i357) + 1)|0;
     $227 = (($221) + ($$0101104$i357<<2)|0);
     $228 = HEAP32[$227>>2]|0;
     $229 = ($228|0)==(0|0);
     if (!($229)) {
      _g_free($228);
      HEAP32[$227>>2] = 0;
     }
     HEAP32[$227>>2] = $225;
     $230 = (_system_collections_generic_iterator_next($222)|0);
     $231 = ($230|0)==(0);
     if ($231) {
      break;
     } else {
      $$0101104$i357 = $226;
     }
    }
   }
   $232 = ($222|0)==(0|0);
   if (!($232)) {
    _g_object_unref($222);
   }
   $233 = ($1|0)==(0|0);
   if ($233) {
    $$11 = $221;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $220;
   $$11 = $221;
   return ($$11|0);
   break;
  }
  case 12:  {
   $234 = (_g_once_init_enter(148744)|0);
   $235 = ($234|0)==(0);
   if (!($235)) {
    $236 = (_system_collections_generic_iterable_get_type()|0);
    $237 = (_g_type_register_static($236,136457,119268,16)|0);
    _g_once_init_leave(148744,$237);
   }
   $238 = HEAP32[37186]|0;
   $239 = (_g_type_check_instance_cast($0,$238)|0);
   $240 = HEAP32[$0>>2]|0;
   $241 = ((($240)) + 128|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = (ftCall_ii($242|0,$0)|0);
   $244 = (_g_malloc0_n($243,4)|0);
   $245 = (_system_collections_generic_iterable_iterator($0)|0);
   $246 = (_system_collections_generic_iterator_next($245)|0);
   $247 = ($246|0)==(0);
   if (!($247)) {
    $$0101104$i361 = 0;
    while(1) {
     $248 = (_system_collections_generic_iterator_get($245)|0);
     $249 = (($$0101104$i361) + 1)|0;
     $250 = (($244) + ($$0101104$i361<<2)|0);
     $251 = HEAP32[$250>>2]|0;
     $252 = ($251|0)==(0|0);
     if (!($252)) {
      _g_free($251);
      HEAP32[$250>>2] = 0;
     }
     HEAP32[$250>>2] = $248;
     $253 = (_system_collections_generic_iterator_next($245)|0);
     $254 = ($253|0)==(0);
     if ($254) {
      break;
     } else {
      $$0101104$i361 = $249;
     }
    }
   }
   $255 = ($245|0)==(0|0);
   if (!($255)) {
    _g_object_unref($245);
   }
   $256 = ($1|0)==(0|0);
   if ($256) {
    $$11 = $244;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $243;
   $$11 = $244;
   return ($$11|0);
   break;
  }
  default: {
   $257 = (_g_type_fundamental($4)|0);
   $258 = ($257|0)==(48);
   if (!($258)) {
    $259 = (_g_type_fundamental($4)|0);
    $260 = ($259|0)==(52);
    if (!($260)) {
     $283 = HEAP32[$0>>2]|0;
     $284 = ((($283)) + 128|0);
     $285 = HEAP32[$284>>2]|0;
     $286 = (ftCall_ii($285|0,$0)|0);
     $287 = (_g_malloc0_n($286,4)|0);
     $288 = (_system_collections_generic_iterable_iterator($0)|0);
     $289 = (_system_collections_generic_iterator_next($288)|0);
     $290 = ($289|0)==(0);
     if (!($290)) {
      $$0322403 = 0;
      while(1) {
       $291 = (_system_collections_generic_iterator_get($288)|0);
       $292 = (($$0322403) + 1)|0;
       $293 = (($287) + ($$0322403<<2)|0);
       $294 = HEAP32[$293>>2]|0;
       $295 = ($294|0)==(0|0);
       if (!($295)) {
        $296 = HEAP32[$2>>2]|0;
        $297 = ((($296)) + 8|0);
        $298 = HEAP32[$297>>2]|0;
        $299 = ($298|0)==(0|0);
        if (!($299)) {
         ftCall_vi($298|0,$294);
         HEAP32[$293>>2] = 0;
        }
       }
       HEAP32[$293>>2] = $291;
       $300 = (_system_collections_generic_iterator_next($288)|0);
       $301 = ($300|0)==(0);
       if ($301) {
        break;
       } else {
        $$0322403 = $292;
       }
      }
     }
     $302 = ($288|0)==(0|0);
     if (!($302)) {
      _g_object_unref($288);
     }
     $303 = ($1|0)==(0|0);
     if ($303) {
      $$11 = $287;
      return ($$11|0);
     }
     HEAP32[$1>>2] = $286;
     $$11 = $287;
     return ($$11|0);
    }
   }
   $261 = (_g_once_init_enter(148744)|0);
   $262 = ($261|0)==(0);
   if (!($262)) {
    $263 = (_system_collections_generic_iterable_get_type()|0);
    $264 = (_g_type_register_static($263,136457,119268,16)|0);
    _g_once_init_leave(148744,$264);
   }
   $265 = HEAP32[37186]|0;
   $266 = (_g_type_check_instance_cast($0,$265)|0);
   $267 = HEAP32[$0>>2]|0;
   $268 = ((($267)) + 128|0);
   $269 = HEAP32[$268>>2]|0;
   $270 = (ftCall_ii($269|0,$0)|0);
   $271 = (_g_malloc0_n($270,4)|0);
   $272 = (_system_collections_generic_iterable_iterator($0)|0);
   $273 = (_system_collections_generic_iterator_next($272)|0);
   $274 = ($273|0)==(0);
   if (!($274)) {
    $$09396$i365 = 0;
    while(1) {
     $275 = (($271) + ($$09396$i365<<2)|0);
     $276 = (($$09396$i365) + 1)|0;
     $277 = (_system_collections_generic_iterator_get($272)|0);
     $278 = $277;
     HEAP32[$275>>2] = $278;
     $279 = (_system_collections_generic_iterator_next($272)|0);
     $280 = ($279|0)==(0);
     if ($280) {
      break;
     } else {
      $$09396$i365 = $276;
     }
    }
   }
   $281 = ($272|0)==(0|0);
   if (!($281)) {
    _g_object_unref($272);
   }
   $282 = ($1|0)==(0|0);
   if ($282) {
    $$11 = $271;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $270;
   $$11 = $271;
   return ($$11|0);
  }
  }
 } while(0);
 return (0)|0;
}
function _system_collections_generic_collection_real_get_IsEmpty($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 $5 = ($4|0)==(0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_collection_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148744)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterable_get_type()|0);
  $7 = (_g_type_register_static($6,136457,119268,16)|0);
  _g_once_init_leave(148744,$7);
 }
 $8 = HEAP32[37186]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(5);
 if ($cond) {
  $10 = HEAP32[$0>>2]|0;
  $11 = ((($10)) + 132|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (ftCall_ii($12|0,$0)|0);
  _g_value_set_boolean($2,$13);
  STACKTOP = sp;return;
 } else {
  $14 = ((($3)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$3>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  $19 = HEAP32[$0>>2]|0;
  $20 = HEAP32[$19>>2]|0;
  $21 = (_g_type_name($20)|0);
  HEAP32[$vararg_buffer>>2] = 136500;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1475;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $15;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $18;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $21;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_collection_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148744)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterable_get_type()|0);
  $7 = (_g_type_register_static($6,136457,119268,16)|0);
  _g_once_init_leave(148744,$7);
 }
 $8 = HEAP32[37186]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 136500;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1495;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_construct($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$01$i$i = 0, $$0122 = 0, $$0123 = 0, $$0124 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $exitcond$i$i = 0, $g_direct_equal$g_str_equal = 0, $g_direct_equal$g_str_equal128 = 0, $g_direct_hash$g_str_hash = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = (_system_collections_generic_map_construct($0,$1,$2,$3,$4,$5,$6)|0);
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $1;
 $13 = ((($12)) + 4|0);
 HEAP32[$13>>2] = $2;
 $14 = ((($12)) + 8|0);
 HEAP32[$14>>2] = $3;
 $15 = ((($12)) + 12|0);
 HEAP32[$15>>2] = $4;
 $16 = ((($12)) + 16|0);
 HEAP32[$16>>2] = $5;
 $17 = ((($12)) + 20|0);
 HEAP32[$17>>2] = $6;
 $18 = ($7|0)==(0|0);
 if ($18) {
  $19 = (_g_type_is_a($1,64)|0);
  $20 = ($19|0)==(0);
  $g_direct_hash$g_str_hash = $20 ? 290 : 294;
  $$pre = HEAP32[$11>>2]|0;
  $$0122 = $g_direct_hash$g_str_hash;$22 = $$pre;
 } else {
  $$0122 = $7;$22 = $12;
 }
 $21 = ((($22)) + 48|0);
 HEAP32[$21>>2] = $$0122;
 $23 = ($8|0)==(0|0);
 if ($23) {
  $24 = (_g_type_is_a($1,64)|0);
  $25 = ($24|0)==(0);
  $g_direct_equal$g_str_equal = $25 ? 432 : 295;
  $$0123 = $g_direct_equal$g_str_equal;
 } else {
  $$0123 = $8;
 }
 $26 = HEAP32[$11>>2]|0;
 $27 = ((($26)) + 52|0);
 HEAP32[$27>>2] = $$0123;
 $28 = ($9|0)==(0|0);
 if ($28) {
  $29 = (_g_type_is_a($4,64)|0);
  $30 = ($29|0)==(0);
  $g_direct_equal$g_str_equal128 = $30 ? 432 : 295;
  $$0124 = $g_direct_equal$g_str_equal128;
 } else {
  $$0124 = $9;
 }
 $31 = HEAP32[$11>>2]|0;
 $32 = ((($31)) + 56|0);
 HEAP32[$32>>2] = $$0124;
 $33 = HEAP32[$11>>2]|0;
 $34 = ((($33)) + 24|0);
 HEAP32[$34>>2] = 11;
 $35 = (_g_malloc0_n(12,4)|0);
 $36 = HEAP32[$11>>2]|0;
 $37 = ((($36)) + 32|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($36)) + 36|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($38|0)!=(0|0);
 $42 = ($40|0)>(0);
 $or$cond$i$i = $41 & $42;
 if (!($or$cond$i$i)) {
  _g_free($38);
  $47 = HEAP32[$11>>2]|0;
  $48 = ((($47)) + 32|0);
  HEAP32[$48>>2] = $35;
  $49 = ((($47)) + 36|0);
  HEAP32[$49>>2] = 11;
  $50 = ((($47)) + 40|0);
  HEAP32[$50>>2] = 11;
  return ($10|0);
 }
 $$01$i$i = 0;
 while(1) {
  $43 = (($38) + ($$01$i$i<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0|0);
  if (!($45)) {
   _system_collections_generic_dictionary_node_free($44);
  }
  $46 = (($$01$i$i) + 1)|0;
  $exitcond$i$i = ($46|0)==($40|0);
  if ($exitcond$i$i) {
   break;
  } else {
   $$01$i$i = $46;
  }
 }
 _g_free($38);
 $47 = HEAP32[$11>>2]|0;
 $48 = ((($47)) + 32|0);
 HEAP32[$48>>2] = $35;
 $49 = ((($47)) + 36|0);
 HEAP32[$49>>2] = 11;
 $50 = ((($47)) + 40|0);
 HEAP32[$50>>2] = 11;
 return ($10|0);
}
function _system_collections_generic_dictionary_node_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  _g_slice_free1(16,$0);
  return;
 }
 _system_collections_generic_dictionary_node_free($2);
 HEAP32[$1>>2] = 0;
 _g_slice_free1(16,$0);
 return;
}
function _system_collections_generic_dictionary_new($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = (_g_once_init_enter(148752)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  $11 = (_system_collections_generic_map_get_type()|0);
  $12 = (_g_type_register_static($11,136921,119304,0)|0);
  _g_once_init_leave(148752,$12);
 }
 $13 = HEAP32[37188]|0;
 $14 = (_system_collections_generic_dictionary_construct($13,$0,$1,$2,$3,$4,$5,$6,$7,$8)|0);
 return ($14|0);
}
function _system_collections_generic_dictionary_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37189] = $1;
 _g_type_class_add_private($0,60);
 $2 = ((($0)) + 116|0);
 HEAP32[$2>>2] = 433;
 $3 = ((($0)) + 96|0);
 HEAP32[$3>>2] = 434;
 $4 = ((($0)) + 100|0);
 HEAP32[$4>>2] = 435;
 $5 = ((($0)) + 104|0);
 HEAP32[$5>>2] = 436;
 $6 = ((($0)) + 108|0);
 HEAP32[$6>>2] = 437;
 $7 = ((($0)) + 112|0);
 HEAP32[$7>>2] = 438;
 $8 = (_system_collections_generic_map_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 120|0);
 HEAP32[$10>>2] = 439;
 $11 = (_g_type_check_class_cast($0,$8)|0);
 $12 = ((($0)) + 124|0);
 HEAP32[$12>>2] = 440;
 $13 = (_g_type_check_class_cast($0,$8)|0);
 $14 = ((($0)) + 128|0);
 HEAP32[$14>>2] = 441;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 28|0);
 HEAP32[$16>>2] = 442;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = ((($0)) + 24|0);
 HEAP32[$18>>2] = 443;
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = ((($0)) + 36|0);
 HEAP32[$20>>2] = 444;
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$30);
 $31 = (_g_type_check_class_cast($0,80)|0);
 $32 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$32);
 $33 = (_g_type_check_class_cast($0,80)|0);
 $34 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[36228] = $34;
 _g_object_class_install_property($0,7,$34);
 $35 = (_g_type_check_class_cast($0,80)|0);
 $36 = (_g_param_spec_pointer(136956,136956,136956,226)|0);
 HEAP32[36220] = $36;
 _g_object_class_install_property($0,8,$36);
 $37 = (_g_type_check_class_cast($0,80)|0);
 $38 = (_g_param_spec_pointer(136970,136970,136970,226)|0);
 HEAP32[36224] = $38;
 _g_object_class_install_property($0,9,$38);
 $39 = (_g_type_check_class_cast($0,80)|0);
 $40 = (_g_param_spec_pointer(136985,136985,136985,226)|0);
 HEAP32[36594] = $40;
 _g_object_class_install_property($0,10,$40);
 $41 = (_g_type_check_class_cast($0,80)|0);
 $42 = (_system_collections_generic_set_get_type()|0);
 $43 = (_g_param_spec_object(140039,140039,140039,$42,225)|0);
 HEAP32[36232] = $43;
 _g_object_class_install_property($0,11,$43);
 $44 = (_g_type_check_class_cast($0,80)|0);
 $45 = (_system_collections_generic_collection_get_type()|0);
 $46 = (_g_param_spec_object(140044,140044,140044,$45,225)|0);
 HEAP32[36236] = $46;
 _g_object_class_install_property($0,12,$46);
 return;
}
function _system_collections_generic_dictionary_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148752)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_get_type()|0);
  $4 = (_g_type_register_static($3,136921,119304,0)|0);
  _g_once_init_leave(148752,$4);
 }
 $5 = HEAP32[37188]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 44|0);
 HEAP32[$8>>2] = 0;
 return;
}
function _system_collections_generic_dictionary_real_map_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(148792)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_map_iterator_get_type()|0);
  $17 = (_g_type_register_static($16,138155,119484,0)|0);
  _g_once_init_leave(148792,$17);
 }
 $18 = HEAP32[37198]|0;
 $19 = (_system_collections_generic_map_iterator_construct($18,$3,$5,$7,$9,$11,$13)|0);
 $20 = ((($19)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;$38 = $$pre$i$i;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  $33 = ((($0)) + 20|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 44|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($38)) + 36|0);
  HEAP32[$37>>2] = $36;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;$38 = $31;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 $33 = ((($0)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 44|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ((($38)) + 36|0);
 HEAP32[$37>>2] = $36;
 return ($19|0);
}
function _system_collections_generic_dictionary_real_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$07985$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $phitmp17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $30 = 0;
  return ($30|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $30 = 0;
   label = 7;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 7) {
  return ($30|0);
 }
 $phitmp = ($$pre$i|0)!=(0|0);
 $phitmp17 = $phitmp&1;
 $30 = $phitmp17;
 return ($30|0);
}
function _system_collections_generic_dictionary_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07985$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$0 = 0;
  return ($$0|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$0 = 0;
   label = 10;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 10) {
  return ($$0|0);
 }
 $30 = ($$pre$i|0)==(0|0);
 if ($30) {
  $$0 = 0;
  return ($$0|0);
 }
 $31 = ((($$pre$i)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $$0 = 0;
  return ($$0|0);
 }
 $34 = HEAP32[$2>>2]|0;
 $35 = ((($34)) + 16|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(0|0);
 if ($37) {
  $$0 = $32;
  return ($$0|0);
 }
 $38 = (ftCall_ii($36|0,$32)|0);
 $$0 = $38;
 return ($$0|0);
}
function _system_collections_generic_dictionary_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$079$lcssa$i95 = 0, $$07985$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre98 = 0, $$pre99 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_ii($6|0,$1)|0);
 $8 = HEAP32[$3>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 24|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($7>>>0) % ($12>>>0))&-1;
 $14 = (($10) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 L1: do {
  if ($16) {
   $$079$lcssa$i95 = $14;
  } else {
   $$07985$i = $14;$18 = $15;
   while(1) {
    $17 = ((($18)) + 12|0);
    $19 = HEAP32[$17>>2]|0;
    $20 = ($7|0)==($19|0);
    if ($20) {
     $21 = HEAP32[$3>>2]|0;
     $22 = ((($21)) + 52|0);
     $23 = HEAP32[$22>>2]|0;
     $24 = HEAP32[$18>>2]|0;
     $25 = (ftCall_iii($23|0,$24,$1)|0);
     $26 = ($25|0)==(0);
     $$pre$i = HEAP32[$$07985$i>>2]|0;
     if ($26) {
      $28 = $$pre$i;
     } else {
      break;
     }
    } else {
     $28 = $18;
    }
    $27 = ((($28)) + 8|0);
    $29 = HEAP32[$27>>2]|0;
    $30 = ($29|0)==(0|0);
    if ($30) {
     $$079$lcssa$i95 = $27;
     break L1;
    } else {
     $$07985$i = $27;$18 = $29;
    }
   }
   $31 = ($$pre$i|0)==(0|0);
   if ($31) {
    $$079$lcssa$i95 = $$07985$i;
   } else {
    $32 = ($2|0)==(0|0);
    if ($32) {
     $39 = $$pre$i;$48 = 0;
    } else {
     $33 = HEAP32[$3>>2]|0;
     $34 = ((($33)) + 16|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35|0)==(0|0);
     if ($36) {
      $39 = $$pre$i;$48 = $2;
     } else {
      $37 = (ftCall_ii($35|0,$2)|0);
      $$pre = HEAP32[$$07985$i>>2]|0;
      $39 = $$pre;$48 = $37;
     }
    }
    $38 = ((($39)) + 4|0);
    $40 = HEAP32[$38>>2]|0;
    $41 = ($40|0)==(0|0);
    if ($41) {
     $$pre$phiZ2D = $38;
    } else {
     $42 = HEAP32[$3>>2]|0;
     $43 = ((($42)) + 20|0);
     $44 = HEAP32[$43>>2]|0;
     $45 = ($44|0)==(0|0);
     if ($45) {
      $$pre$phiZ2D = $38;
     } else {
      ftCall_vi($44|0,$40);
      $46 = HEAP32[$$07985$i>>2]|0;
      $47 = ((($46)) + 4|0);
      HEAP32[$47>>2] = 0;
      $$pre98 = HEAP32[$$07985$i>>2]|0;
      $$pre99 = ((($$pre98)) + 4|0);
      $$pre$phiZ2D = $$pre99;
     }
    }
    HEAP32[$$pre$phiZ2D>>2] = $48;
    $74 = HEAP32[$3>>2]|0;
    $75 = ((($74)) + 44|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (($76) + 1)|0;
    HEAP32[$75>>2] = $77;
    return;
   }
  }
 } while(0);
 $49 = HEAP32[$3>>2]|0;
 $50 = ((($49)) + 48|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (ftCall_ii($51|0,$1)|0);
 $53 = ($1|0)==(0|0);
 if ($53) {
  $66 = 0;
 } else {
  $54 = HEAP32[$3>>2]|0;
  $55 = ((($54)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ($56|0)==(0|0);
  if ($57) {
   $66 = $1;
  } else {
   $58 = (ftCall_ii($56|0,$1)|0);
   $66 = $58;
  }
 }
 $59 = ($2|0)==(0|0);
 if ($59) {
  $68 = 0;
 } else {
  $60 = HEAP32[$3>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($62|0)==(0|0);
  if ($63) {
   $68 = $2;
  } else {
   $64 = (ftCall_ii($62|0,$2)|0);
   $68 = $64;
  }
 }
 $65 = (_g_slice_alloc0(16)|0);
 HEAP32[$65>>2] = $66;
 $67 = ((($65)) + 4|0);
 HEAP32[$67>>2] = $68;
 $69 = ((($65)) + 12|0);
 HEAP32[$69>>2] = $52;
 HEAP32[$$079$lcssa$i95>>2] = $65;
 $70 = HEAP32[$3>>2]|0;
 $71 = ((($70)) + 28|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = (($72) + 1)|0;
 HEAP32[$71>>2] = $73;
 _system_collections_generic_dictionary_resize($0);
 $74 = HEAP32[$3>>2]|0;
 $75 = ((($74)) + 44|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = (($76) + 1)|0;
 HEAP32[$75>>2] = $77;
 return;
}
function _system_collections_generic_dictionary_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07985$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi81Z2D = 0, $$pre$phiZ2D = 0, $$pre78 = 0, $$pre80 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$0 = 0;
  return ($$0|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$0 = 0;
   label = 14;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 14) {
  return ($$0|0);
 }
 $30 = ($$pre$i|0)==(0|0);
 if ($30) {
  $$0 = 0;
  return ($$0|0);
 }
 $31 = ((($$pre$i)) + 8|0);
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$31>>2] = 0;
 $33 = HEAP32[$$07985$i>>2]|0;
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 if ($35) {
  $$pre$phiZ2D = $33;
 } else {
  $36 = HEAP32[$2>>2]|0;
  $37 = ((($36)) + 8|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$phiZ2D = $33;
  } else {
   ftCall_vi($38|0,$34);
   $40 = HEAP32[$$07985$i>>2]|0;
   HEAP32[$40>>2] = 0;
   $$pre = HEAP32[$$07985$i>>2]|0;
   $$pre$phiZ2D = $$pre;
  }
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $41 = HEAP32[$$07985$i>>2]|0;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ($43|0)==(0|0);
 if ($44) {
  $$pre$phi81Z2D = $42;
 } else {
  $45 = HEAP32[$2>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = ($47|0)==(0|0);
  if ($48) {
   $$pre$phi81Z2D = $42;
  } else {
   ftCall_vi($47|0,$43);
   $49 = HEAP32[$$07985$i>>2]|0;
   $50 = ((($49)) + 4|0);
   HEAP32[$50>>2] = 0;
   $$pre78 = HEAP32[$$07985$i>>2]|0;
   $$pre80 = ((($$pre78)) + 4|0);
   $$pre$phi81Z2D = $$pre80;
  }
 }
 HEAP32[$$pre$phi81Z2D>>2] = 0;
 $51 = HEAP32[$$07985$i>>2]|0;
 _system_collections_generic_dictionary_node_free($51);
 HEAP32[$$07985$i>>2] = $32;
 $52 = HEAP32[$2>>2]|0;
 $53 = ((($52)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = (($54) + -1)|0;
 HEAP32[$53>>2] = $55;
 _system_collections_generic_dictionary_resize($0);
 $56 = HEAP32[$2>>2]|0;
 $57 = ((($56)) + 44|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = (($58) + 1)|0;
 HEAP32[$57>>2] = $59;
 $$0 = 1;
 return ($$0|0);
}
function _system_collections_generic_dictionary_real_Clear($0) {
 $0 = $0|0;
 var $$08489 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(0);
 if (!($5)) {
  $$lcssa = $2;
  $32 = ((($$lcssa)) + 28|0);
  HEAP32[$32>>2] = 0;
  _system_collections_generic_dictionary_resize($0);
  return;
 }
 $7 = $2;$spec$select90 = 0;
 while(1) {
  $6 = ((($7)) + 32|0);
  $8 = HEAP32[$6>>2]|0;
  $9 = (($8) + ($spec$select90<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$9>>2] = 0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   $$08489 = $10;
   while(1) {
    $12 = ((($$08489)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    HEAP32[$12>>2] = 0;
    $14 = HEAP32[$$08489>>2]|0;
    $15 = ($14|0)==(0|0);
    if (!($15)) {
     $16 = HEAP32[$1>>2]|0;
     $17 = ((($16)) + 8|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)==(0|0);
     if (!($19)) {
      ftCall_vi($18|0,$14);
      HEAP32[$$08489>>2] = 0;
     }
    }
    HEAP32[$$08489>>2] = 0;
    $20 = ((($$08489)) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ($21|0)==(0|0);
    if (!($22)) {
     $23 = HEAP32[$1>>2]|0;
     $24 = ((($23)) + 20|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ($25|0)==(0|0);
     if (!($26)) {
      ftCall_vi($25|0,$21);
      HEAP32[$20>>2] = 0;
     }
    }
    HEAP32[$20>>2] = 0;
    _system_collections_generic_dictionary_node_free($$08489);
    $27 = ($13|0)==(0|0);
    if ($27) {
     break;
    } else {
     $$08489 = $13;
    }
   }
  }
  $spec$select = (($spec$select90) + 1)|0;
  $28 = HEAP32[$1>>2]|0;
  $29 = ((($28)) + 24|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($spec$select|0)<($30|0);
  if ($31) {
   $7 = $28;$spec$select90 = $spec$select;
  } else {
   $$lcssa = $28;
   break;
  }
 }
 $32 = ((($$lcssa)) + 28|0);
 HEAP32[$32>>2] = 0;
 _system_collections_generic_dictionary_resize($0);
 return;
}
function _system_collections_generic_dictionary_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_collections_generic_dictionary_real_get_Keys($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(148776)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_set_get_type()|0);
  $17 = (_g_type_register_static($16,137649,119412,0)|0);
  _g_once_init_leave(148776,$17);
 }
 $18 = HEAP32[37194]|0;
 $19 = (_system_collections_generic_set_construct($18,$3,$5,$7)|0);
 $20 = ((($19)) + 28|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 return ($19|0);
}
function _system_collections_generic_dictionary_real_get_Values($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(148760)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_collection_get_type()|0);
  $17 = (_g_type_register_static($16,137057,119340,0)|0);
  _g_once_init_leave(148760,$17);
 }
 $18 = HEAP32[37190]|0;
 $19 = (_system_collections_generic_collection_construct($18,$9,$11,$13)|0);
 $20 = ((($19)) + 24|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 return ($19|0);
}
function __vala_system_collections_generic_dictionary_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148752)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_get_type()|0);
  $7 = (_g_type_register_static($6,136921,119304,0)|0);
  _g_once_init_leave(148752,$7);
 }
 $8 = HEAP32[37188]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_system_collections_generic_map_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
  break;
 }
 case 11:  {
  $11 = (_system_collections_generic_map_get_Keys($0)|0);
  _g_value_take_object($2,$11);
  STACKTOP = sp;return;
  break;
 }
 case 12:  {
  $12 = (_system_collections_generic_map_get_Values($0)|0);
  _g_value_take_object($2,$12);
  STACKTOP = sp;return;
  break;
 }
 default: {
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$3>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (_g_type_name($19)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2590;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $20;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function __vala_system_collections_generic_dictionary_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148752)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_get_type()|0);
  $7 = (_g_type_register_static($6,136921,119304,0)|0);
  _g_once_init_leave(148752,$7);
 }
 $8 = HEAP32[37188]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 do {
  switch ($1|0) {
  case 8:  {
   $10 = (_g_value_get_pointer($2)|0);
   $11 = ((($0)) + 20|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($12)) + 48|0);
   HEAP32[$13>>2] = $10;
   STACKTOP = sp;return;
   break;
  }
  case 9:  {
   $14 = (_g_value_get_pointer($2)|0);
   $15 = ((($0)) + 20|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($16)) + 52|0);
   HEAP32[$17>>2] = $14;
   STACKTOP = sp;return;
   break;
  }
  case 10:  {
   $18 = (_g_value_get_pointer($2)|0);
   $19 = ((($0)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 56|0);
   HEAP32[$21>>2] = $18;
   STACKTOP = sp;return;
   break;
  }
  case 1:  {
   $22 = (_g_value_get_gtype($2)|0);
   $23 = ((($0)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$24>>2] = $22;
   STACKTOP = sp;return;
   break;
  }
  case 2:  {
   $25 = (_g_value_get_pointer($2)|0);
   $26 = ((($0)) + 20|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$28>>2] = $25;
   STACKTOP = sp;return;
   break;
  }
  case 3:  {
   $29 = (_g_value_get_pointer($2)|0);
   $30 = ((($0)) + 20|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($31)) + 8|0);
   HEAP32[$32>>2] = $29;
   STACKTOP = sp;return;
   break;
  }
  case 4:  {
   $33 = (_g_value_get_gtype($2)|0);
   $34 = ((($0)) + 20|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($35)) + 12|0);
   HEAP32[$36>>2] = $33;
   STACKTOP = sp;return;
   break;
  }
  case 5:  {
   $37 = (_g_value_get_pointer($2)|0);
   $38 = ((($0)) + 20|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 16|0);
   HEAP32[$40>>2] = $37;
   STACKTOP = sp;return;
   break;
  }
  case 6:  {
   $41 = (_g_value_get_pointer($2)|0);
   $42 = ((($0)) + 20|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ((($43)) + 20|0);
   HEAP32[$44>>2] = $41;
   STACKTOP = sp;return;
   break;
  }
  default: {
   $45 = ((($3)) + 4|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = HEAP32[$3>>2]|0;
   $48 = HEAP32[$47>>2]|0;
   $49 = (_g_type_name($48)|0);
   $50 = HEAP32[$0>>2]|0;
   $51 = HEAP32[$50>>2]|0;
   $52 = (_g_type_name($51)|0);
   HEAP32[$vararg_buffer>>2] = 137002;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 2628;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = 142921;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $1;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $46;
   $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
   HEAP32[$vararg_ptr5>>2] = $49;
   $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
   HEAP32[$vararg_ptr6>>2] = $52;
   _g_log(0,16,142848,$vararg_buffer);
   STACKTOP = sp;return;
  }
  }
 } while(0);
}
function _system_collections_generic_dictionary_finalize($0) {
 $0 = $0|0;
 var $$01$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148752)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_get_type()|0);
  $4 = (_g_type_register_static($3,136921,119304,0)|0);
  _g_once_init_leave(148752,$4);
 }
 $5 = HEAP32[37188]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 _system_collections_generic_map_Clear($0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)!=(0|0);
 $14 = ($12|0)>(0);
 $or$cond$i$i = $13 & $14;
 if ($or$cond$i$i) {
  $$01$i$i = 0;
  while(1) {
   $15 = (($10) + ($$01$i$i<<2)|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($16|0)==(0|0);
   if (!($17)) {
    _system_collections_generic_dictionary_node_free($16);
   }
   $18 = (($$01$i$i) + 1)|0;
   $exitcond$i$i = ($18|0)==($12|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01$i$i = $18;
   }
  }
 }
 _g_free($10);
 $19 = HEAP32[$7>>2]|0;
 $20 = ((($19)) + 32|0);
 HEAP32[$20>>2] = 0;
 $21 = HEAP32[37189]|0;
 $22 = (_g_type_check_class_cast($21,80)|0);
 $23 = ((($21)) + 36|0);
 $24 = HEAP32[$23>>2]|0;
 ftCall_vi($24|0,$0);
 return;
}
function _system_collections_generic_dictionary_value_collection_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37191] = $1;
 _g_type_class_add_private($0,28);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 445;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 446;
 $4 = ((($0)) + 108|0);
 HEAP32[$4>>2] = 447;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 448;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 449;
 $7 = ((($0)) + 104|0);
 HEAP32[$7>>2] = 450;
 $8 = (_system_collections_generic_collection_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 451;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = 452;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 24|0);
 HEAP32[$14>>2] = 453;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 36|0);
 HEAP32[$16>>2] = 454;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_once_init_enter(148752)|0);
 $31 = ($30|0)==(0);
 if ($31) {
  $34 = HEAP32[37188]|0;
  $35 = (_g_param_spec_object(137107,137107,137107,$34,226)|0);
  HEAP32[36240] = $35;
  _g_object_class_install_property($0,7,$35);
  $36 = (_g_type_check_class_cast($0,80)|0);
  $37 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
  HEAP32[36244] = $37;
  _g_object_class_install_property($0,8,$37);
  return;
 }
 $32 = (_system_collections_generic_map_get_type()|0);
 $33 = (_g_type_register_static($32,136921,119304,0)|0);
 _g_once_init_leave(148752,$33);
 $34 = HEAP32[37188]|0;
 $35 = (_g_param_spec_object(137107,137107,137107,$34,226)|0);
 HEAP32[36240] = $35;
 _g_object_class_install_property($0,7,$35);
 $36 = (_g_type_check_class_cast($0,80)|0);
 $37 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[36244] = $37;
 _g_object_class_install_property($0,8,$37);
 return;
}
function _system_collections_generic_dictionary_value_collection_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148760)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,137057,119340,0)|0);
  _g_once_init_leave(148760,$4);
 }
 $5 = HEAP32[37190]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_dictionary_value_collection_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_collections_generic_dictionary_value_collection_real_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_once_init_enter(148768)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  $18 = (_system_collections_generic_iterator_get_type()|0);
  $19 = (_g_type_register_static($18,137308,119376,0)|0);
  _g_once_init_leave(148768,$19);
 }
 $20 = HEAP32[37192]|0;
 $21 = (_system_collections_generic_iterator_construct($20,$11,$13,$15)|0);
 $22 = ((($21)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$23>>2] = $5;
 $24 = ((($23)) + 4|0);
 HEAP32[$24>>2] = $7;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $9;
 $26 = ((($23)) + 12|0);
 HEAP32[$26>>2] = $11;
 $27 = ((($23)) + 16|0);
 HEAP32[$27>>2] = $13;
 $28 = ((($23)) + 20|0);
 HEAP32[$28>>2] = $15;
 $29 = ($4|0)==(0|0);
 if ($29) {
  $32 = $23;$37 = 0;
 } else {
  $30 = (_g_object_ref($4)|0);
  $$pre$i$i = HEAP32[$22>>2]|0;
  $32 = $$pre$i$i;$37 = $4;
 }
 $31 = ((($32)) + 24|0);
 $33 = HEAP32[$31>>2]|0;
 $34 = ($33|0)==(0|0);
 if ($34) {
  $$pre$phi$i$i$iZ2D = $31;$43 = $32;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
  $38 = ((($37)) + 20|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 44|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($43)) + 40|0);
  HEAP32[$42>>2] = $41;
  return ($21|0);
 }
 _g_object_unref($33);
 $35 = HEAP32[$22>>2]|0;
 $36 = ((($35)) + 24|0);
 HEAP32[$36>>2] = 0;
 $$pre$phi$i$i$iZ2D = $36;$43 = $35;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
 $38 = ((($37)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 44|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($43)) + 40|0);
 HEAP32[$42>>2] = $41;
 return ($21|0);
}
function _system_collections_generic_dictionary_value_collection_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,2057,137244,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_value_collection_real_Clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,2065,137178,0);
 // unreachable;
}
function _system_collections_generic_dictionary_value_collection_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,2073,137111,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_value_collection_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_collections_generic_iterable_iterator($0)|0);
 $3 = (_system_collections_generic_iterator_next($2)|0);
 $4 = ($3|0)==(0);
 L1: do {
  if (!($4)) {
   $5 = ((($0)) + 24|0);
   while(1) {
    $8 = HEAP32[$5>>2]|0;
    $9 = ((($8)) + 24|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($10)) + 20|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($12)) + 56|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (_system_collections_generic_iterator_get($2)|0);
    $16 = (ftCall_iii($14|0,$15,$1)|0);
    $17 = ($15|0)==(0|0);
    if (!($17)) {
     $18 = HEAP32[$5>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(0|0);
     if (!($21)) {
      ftCall_vi($20|0,$15);
     }
    }
    $22 = ($16|0)==(0);
    if (!($22)) {
     break;
    }
    $6 = (_system_collections_generic_iterator_next($2)|0);
    $7 = ($6|0)==(0);
    if ($7) {
     break L1;
    }
   }
   $23 = ($2|0)==(0|0);
   if ($23) {
    $$2 = 1;
    return ($$2|0);
   }
   _g_object_unref($2);
   $$2 = 1;
   return ($$2|0);
  }
 } while(0);
 $24 = ($2|0)==(0|0);
 if ($24) {
  $$2 = 0;
  return ($$2|0);
 }
 _g_object_unref($2);
 $$2 = 0;
 return ($$2|0);
}
function _system_collections_generic_dictionary_value_collection_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_map_get_Count($4)|0);
 return ($5|0);
}
function __vala_system_collections_generic_dictionary_value_collection_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148760)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,137057,119340,0)|0);
  _g_once_init_leave(148760,$7);
 }
 $8 = HEAP32[37190]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_collection_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2207;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_value_collection_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148760)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,137057,119340,0)|0);
  _g_once_init_leave(148760,$7);
 }
 $8 = HEAP32[37190]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 24|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$23>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $24 = (_g_value_get_pointer($2)|0);
  $25 = ((($0)) + 24|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  HEAP32[$27>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $28 = (_g_value_get_pointer($2)|0);
  $29 = ((($0)) + 24|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($30)) + 8|0);
  HEAP32[$31>>2] = $28;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $32 = (_g_value_get_gtype($2)|0);
  $33 = ((($0)) + 24|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 12|0);
  HEAP32[$35>>2] = $32;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $36 = (_g_value_get_pointer($2)|0);
  $37 = ((($0)) + 24|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($38)) + 16|0);
  HEAP32[$39>>2] = $36;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $40 = (_g_value_get_pointer($2)|0);
  $41 = ((($0)) + 24|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ((($42)) + 20|0);
  HEAP32[$43>>2] = $40;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $44 = ((($3)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$3>>2]|0;
  $47 = HEAP32[$46>>2]|0;
  $48 = (_g_type_name($47)|0);
  $49 = HEAP32[$0>>2]|0;
  $50 = HEAP32[$49>>2]|0;
  $51 = (_g_type_name($50)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2239;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $45;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $48;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $51;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_value_collection_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148760)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,137057,119340,0)|0);
  _g_once_init_leave(148760,$4);
 }
 $5 = HEAP32[37190]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37191]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_value_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37193] = $1;
 _g_type_class_add_private($0,44);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 455;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 456;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 457;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 458;
 $6 = (_system_collections_generic_iterator_get_type()|0);
 $7 = (_g_type_check_class_cast($0,$6)|0);
 $8 = ((($0)) + 112|0);
 HEAP32[$8>>2] = 459;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 460;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 24|0);
 HEAP32[$12>>2] = 461;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 36|0);
 HEAP32[$14>>2] = 462;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_once_init_enter(148752)|0);
 $29 = ($28|0)==(0);
 if ($29) {
  $32 = HEAP32[37188]|0;
  $33 = (_g_param_spec_object(137107,137107,137107,$32,226)|0);
  HEAP32[36248] = $33;
  _g_object_class_install_property($0,7,$33);
  $34 = (_g_type_check_class_cast($0,80)|0);
  $35 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
  HEAP32[36252] = $35;
  _g_object_class_install_property($0,8,$35);
  return;
 }
 $30 = (_system_collections_generic_map_get_type()|0);
 $31 = (_g_type_register_static($30,136921,119304,0)|0);
 _g_once_init_leave(148752,$31);
 $32 = HEAP32[37188]|0;
 $33 = (_g_param_spec_object(137107,137107,137107,$32,226)|0);
 HEAP32[36248] = $33;
 _g_object_class_install_property($0,7,$33);
 $34 = (_g_type_check_class_cast($0,80)|0);
 $35 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
 HEAP32[36252] = $35;
 _g_object_class_install_property($0,8,$35);
 return;
}
function _system_collections_generic_dictionary_value_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148768)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137308,119376,0)|0);
  _g_once_init_leave(148768,$4);
 }
 $5 = HEAP32[37192]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_value_iterator_real_next($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,2280,137586,137483);
  // unreachable;
 }
 $12 = (_system_collections_generic_iterator_has_next($0)|0);
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = HEAP32[$1>>2]|0;
 $15 = ((($14)) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($14)) + 32|0);
 HEAP32[$17>>2] = $16;
 HEAP32[$15>>2] = 0;
 $18 = ($16|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_collections_generic_dictionary_value_iterator_real_has_next($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,2307,137519,137483);
  // unreachable;
 }
 $12 = ((($2)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $38 = $13;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $15 = ((($2)) + 32|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ($16|0)==(0);
 $18 = $16;
 if ($17) {
  $24 = $18;
 } else {
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  HEAP32[$12>>2] = $20;
  $21 = $20;
  $24 = $21;
 }
 $22 = ((($2)) + 28|0);
 $23 = ($24|0)==(0|0);
 if (!($23)) {
  $38 = $24;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $25 = ((($8)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($8)) + 32|0);
 $$pre = HEAP32[$22>>2]|0;
 $29 = $$pre;$40 = $24;
 while(1) {
  $28 = (($29) + 1)|0;
  $30 = ($28|0)<($26|0);
  if (!($30)) {
   $38 = $40;
   label = 11;
   break;
  }
  HEAP32[$22>>2] = $28;
  $31 = HEAP32[$27>>2]|0;
  $32 = (($31) + ($28<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ($33|0)==(0);
  $35 = $33;
  if ($34) {
   $29 = $28;$40 = $35;
  } else {
   break;
  }
 }
 if ((label|0) == 11) {
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $36 = $33;
 $38 = $36;
 $37 = ($38|0)!=(0|0);
 $39 = $37&1;
 return ($39|0);
}
function _system_collections_generic_dictionary_value_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,2376,137421,137483);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,137002,2378,137421,137505);
  // unreachable;
 }
 $15 = ((($13)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $22 = 0;
  return ($22|0);
 }
 $18 = ((($2)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $22 = $16;
  return ($22|0);
 }
 $21 = (ftCall_ii($19|0,$16)|0);
 $22 = $21;
 return ($22|0);
}
function _system_collections_generic_dictionary_value_iterator_real_Remove($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,2390,137356,0);
 // unreachable;
}
function _system_collections_generic_dictionary_value_iterator_real_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_dictionary_value_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148768)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137308,119376,0)|0);
  _g_once_init_leave(148768,$7);
 }
 $8 = HEAP32[37192]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_iterator_get_valid($0)|0);
  _g_value_set_boolean($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2478;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_value_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148768)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137308,119376,0)|0);
  _g_once_init_leave(148768,$7);
 }
 $8 = HEAP32[37192]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 40|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2510;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_value_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148768)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137308,119376,0)|0);
  _g_once_init_leave(148768,$4);
 }
 $5 = HEAP32[37192]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37193]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_key_set_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37195] = $1;
 _g_type_class_add_private($0,28);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 463;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 464;
 $4 = ((($0)) + 108|0);
 HEAP32[$4>>2] = 465;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 466;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 467;
 $7 = ((($0)) + 104|0);
 HEAP32[$7>>2] = 468;
 $8 = (_system_collections_generic_collection_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 469;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = 470;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 24|0);
 HEAP32[$14>>2] = 471;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 36|0);
 HEAP32[$16>>2] = 472;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_once_init_enter(148752)|0);
 $31 = ($30|0)==(0);
 if ($31) {
  $34 = HEAP32[37188]|0;
  $35 = (_g_param_spec_object(137107,137107,137107,$34,226)|0);
  HEAP32[36256] = $35;
  _g_object_class_install_property($0,7,$35);
  $36 = (_g_type_check_class_cast($0,80)|0);
  $37 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
  HEAP32[36260] = $37;
  _g_object_class_install_property($0,8,$37);
  return;
 }
 $32 = (_system_collections_generic_map_get_type()|0);
 $33 = (_g_type_register_static($32,136921,119304,0)|0);
 _g_once_init_leave(148752,$33);
 $34 = HEAP32[37188]|0;
 $35 = (_g_param_spec_object(137107,137107,137107,$34,226)|0);
 HEAP32[36256] = $35;
 _g_object_class_install_property($0,7,$35);
 $36 = (_g_type_check_class_cast($0,80)|0);
 $37 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[36260] = $37;
 _g_object_class_install_property($0,8,$37);
 return;
}
function _system_collections_generic_dictionary_key_set_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148776)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_set_get_type()|0);
  $4 = (_g_type_register_static($3,137649,119412,0)|0);
  _g_once_init_leave(148776,$4);
 }
 $5 = HEAP32[37194]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_dictionary_key_set_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 return ($3|0);
}
function _system_collections_generic_dictionary_key_set_real_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_once_init_enter(148784)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  $18 = (_system_collections_generic_iterator_get_type()|0);
  $19 = (_g_type_register_static($18,137860,119448,0)|0);
  _g_once_init_leave(148784,$19);
 }
 $20 = HEAP32[37196]|0;
 $21 = (_system_collections_generic_iterator_construct($20,$5,$7,$9)|0);
 $22 = ((($21)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$23>>2] = $5;
 $24 = ((($23)) + 4|0);
 HEAP32[$24>>2] = $7;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $9;
 $26 = ((($23)) + 12|0);
 HEAP32[$26>>2] = $11;
 $27 = ((($23)) + 16|0);
 HEAP32[$27>>2] = $13;
 $28 = ((($23)) + 20|0);
 HEAP32[$28>>2] = $15;
 $29 = ($4|0)==(0|0);
 if ($29) {
  $32 = $23;$37 = 0;
 } else {
  $30 = (_g_object_ref($4)|0);
  $$pre$i$i = HEAP32[$22>>2]|0;
  $32 = $$pre$i$i;$37 = $4;
 }
 $31 = ((($32)) + 24|0);
 $33 = HEAP32[$31>>2]|0;
 $34 = ($33|0)==(0|0);
 if ($34) {
  $$pre$phi$i$i$iZ2D = $31;$43 = $32;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
  $38 = ((($37)) + 20|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 44|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($43)) + 40|0);
  HEAP32[$42>>2] = $41;
  return ($21|0);
 }
 _g_object_unref($33);
 $35 = HEAP32[$22>>2]|0;
 $36 = ((($35)) + 24|0);
 HEAP32[$36>>2] = 0;
 $$pre$phi$i$i$iZ2D = $36;$43 = $35;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
 $38 = ((($37)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 44|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($43)) + 40|0);
 HEAP32[$42>>2] = $41;
 return ($21|0);
}
function _system_collections_generic_dictionary_key_set_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,1345,137805,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_key_set_real_Clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,1353,137748,0);
 // unreachable;
}
function _system_collections_generic_dictionary_key_set_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,1361,137690,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_key_set_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_collections_generic_map_ContainsKey($5,$1)|0);
 return ($6|0);
}
function _system_collections_generic_dictionary_key_set_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_map_get_Count($4)|0);
 return ($5|0);
}
function __vala_system_collections_generic_dictionary_key_set_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148776)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_set_get_type()|0);
  $7 = (_g_type_register_static($6,137649,119412,0)|0);
  _g_once_init_leave(148776,$7);
 }
 $8 = HEAP32[37194]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_collection_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1470;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_key_set_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148776)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_set_get_type()|0);
  $7 = (_g_type_register_static($6,137649,119412,0)|0);
  _g_once_init_leave(148776,$7);
 }
 $8 = HEAP32[37194]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 28|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 28|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$23>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $24 = (_g_value_get_pointer($2)|0);
  $25 = ((($0)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  HEAP32[$27>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $28 = (_g_value_get_pointer($2)|0);
  $29 = ((($0)) + 28|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($30)) + 8|0);
  HEAP32[$31>>2] = $28;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $32 = (_g_value_get_gtype($2)|0);
  $33 = ((($0)) + 28|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 12|0);
  HEAP32[$35>>2] = $32;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $36 = (_g_value_get_pointer($2)|0);
  $37 = ((($0)) + 28|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($38)) + 16|0);
  HEAP32[$39>>2] = $36;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $40 = (_g_value_get_pointer($2)|0);
  $41 = ((($0)) + 28|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ((($42)) + 20|0);
  HEAP32[$43>>2] = $40;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $44 = ((($3)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$3>>2]|0;
  $47 = HEAP32[$46>>2]|0;
  $48 = (_g_type_name($47)|0);
  $49 = HEAP32[$0>>2]|0;
  $50 = HEAP32[$49>>2]|0;
  $51 = (_g_type_name($50)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1502;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $45;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $48;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $51;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_key_set_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148776)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_set_get_type()|0);
  $4 = (_g_type_register_static($3,137649,119412,0)|0);
  _g_once_init_leave(148776,$4);
 }
 $5 = HEAP32[37194]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37195]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_key_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37197] = $1;
 _g_type_class_add_private($0,44);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 473;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 474;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 475;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 476;
 $6 = (_system_collections_generic_iterator_get_type()|0);
 $7 = (_g_type_check_class_cast($0,$6)|0);
 $8 = ((($0)) + 112|0);
 HEAP32[$8>>2] = 477;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 478;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 24|0);
 HEAP32[$12>>2] = 479;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 36|0);
 HEAP32[$14>>2] = 480;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_once_init_enter(148752)|0);
 $29 = ($28|0)==(0);
 if ($29) {
  $32 = HEAP32[37188]|0;
  $33 = (_g_param_spec_object(137107,137107,137107,$32,226)|0);
  HEAP32[36264] = $33;
  _g_object_class_install_property($0,7,$33);
  $34 = (_g_type_check_class_cast($0,80)|0);
  $35 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
  HEAP32[36268] = $35;
  _g_object_class_install_property($0,8,$35);
  return;
 }
 $30 = (_system_collections_generic_map_get_type()|0);
 $31 = (_g_type_register_static($30,136921,119304,0)|0);
 _g_once_init_leave(148752,$31);
 $32 = HEAP32[37188]|0;
 $33 = (_g_param_spec_object(137107,137107,137107,$32,226)|0);
 HEAP32[36264] = $33;
 _g_object_class_install_property($0,7,$33);
 $34 = (_g_type_check_class_cast($0,80)|0);
 $35 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
 HEAP32[36268] = $35;
 _g_object_class_install_property($0,8,$35);
 return;
}
function _system_collections_generic_dictionary_key_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148784)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137860,119448,0)|0);
  _g_once_init_leave(148784,$4);
 }
 $5 = HEAP32[37196]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_key_iterator_real_next($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,1773,138094,137483);
  // unreachable;
 }
 $12 = (_system_collections_generic_iterator_has_next($0)|0);
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = HEAP32[$1>>2]|0;
 $15 = ((($14)) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($14)) + 32|0);
 HEAP32[$17>>2] = $16;
 HEAP32[$15>>2] = 0;
 $18 = ($16|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_collections_generic_dictionary_key_iterator_real_has_next($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,1800,138029,137483);
  // unreachable;
 }
 $12 = ((($2)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $38 = $13;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $15 = ((($2)) + 32|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ($16|0)==(0);
 $18 = $16;
 if ($17) {
  $24 = $18;
 } else {
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  HEAP32[$12>>2] = $20;
  $21 = $20;
  $24 = $21;
 }
 $22 = ((($2)) + 28|0);
 $23 = ($24|0)==(0|0);
 if (!($23)) {
  $38 = $24;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $25 = ((($8)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($8)) + 32|0);
 $$pre = HEAP32[$22>>2]|0;
 $29 = $$pre;$40 = $24;
 while(1) {
  $28 = (($29) + 1)|0;
  $30 = ($28|0)<($26|0);
  if (!($30)) {
   $38 = $40;
   label = 11;
   break;
  }
  HEAP32[$22>>2] = $28;
  $31 = HEAP32[$27>>2]|0;
  $32 = (($31) + ($28<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ($33|0)==(0);
  $35 = $33;
  if ($34) {
   $29 = $28;$40 = $35;
  } else {
   break;
  }
 }
 if ((label|0) == 11) {
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $36 = $33;
 $38 = $36;
 $37 = ($38|0)!=(0|0);
 $39 = $37&1;
 return ($39|0);
}
function _system_collections_generic_dictionary_key_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,1869,137969,137483);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,137002,1871,137969,137505);
  // unreachable;
 }
 $15 = HEAP32[$13>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $21 = 0;
  return ($21|0);
 }
 $17 = ((($2)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $21 = $15;
  return ($21|0);
 }
 $20 = (ftCall_ii($18|0,$15)|0);
 $21 = $20;
 return ($21|0);
}
function _system_collections_generic_dictionary_key_iterator_real_Remove($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,137002,1883,137906,0);
 // unreachable;
}
function _system_collections_generic_dictionary_key_iterator_real_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_dictionary_key_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148784)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137860,119448,0)|0);
  _g_once_init_leave(148784,$7);
 }
 $8 = HEAP32[37196]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_iterator_get_valid($0)|0);
  _g_value_set_boolean($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1971;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_key_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148784)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137860,119448,0)|0);
  _g_once_init_leave(148784,$7);
 }
 $8 = HEAP32[37196]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 40|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2003;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_key_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148784)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137860,119448,0)|0);
  _g_once_init_leave(148784,$4);
 }
 $5 = HEAP32[37196]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37197]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_resize($0) {
 $0 = $0|0;
 var $$01$i$i = 0, $$0227$not = 0, $$0232 = 0, $$0234 = 0, $$0239 = 0, $$1233 = 0, $$1235 = 0, $$lcssa = 0, $$lcssa243 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $spec$select = 0, $spec$select244 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6*3)|0;
 $8 = ($4|0)<($7|0);
 $9 = ($4|0)<(11);
 $10 = ($4*3)|0;
 $11 = ($10|0)>($6|0);
 $12 = ($4|0)>(13845162);
 $$0227$not = $9 | $8;
 $13 = $12 | $11;
 $or$cond = $13 & $$0227$not;
 if ($or$cond) {
  return;
 }
 $14 = (_g_spaced_primes_closest($6)|0);
 $15 = ($14|0)>(11);
 $16 = $15 ? $14 : 11;
 $17 = ($16|0)<(13845163);
 $18 = $17 ? $16 : 13845163;
 $19 = (($18) + 1)|0;
 $20 = (_g_malloc0_n($19,4)|0);
 $21 = HEAP32[$1>>2]|0;
 $22 = ((($21)) + 24|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)>(0);
 $25 = ((($21)) + 32|0);
 if ($24) {
  $27 = $25;$spec$select244 = 0;
  while(1) {
   $26 = HEAP32[$27>>2]|0;
   $28 = (($26) + ($spec$select244<<2)|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$28>>2] = 0;
   $$0232 = $29;$$0234 = 0;$$0239 = 1;
   while(1) {
    if ($$0239) {
     $$1233 = $$0232;$$1235 = $$0234;
    } else {
     $30 = ($$0232|0)==(0|0);
     if ($30) {
      $$1233 = $$0234;$$1235 = 0;
     } else {
      _system_collections_generic_dictionary_node_free($$0232);
      $$1233 = $$0234;$$1235 = 0;
     }
    }
    $31 = ($$1233|0)==(0|0);
    if ($31) {
     break;
    }
    $32 = ((($$1233)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    HEAP32[$32>>2] = 0;
    $34 = ($$1235|0)==(0|0);
    if (!($34)) {
     _system_collections_generic_dictionary_node_free($$1235);
    }
    $35 = ((($$1233)) + 12|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (($36>>>0) % ($18>>>0))&-1;
    $38 = (($20) + ($37<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP32[$38>>2] = 0;
    $40 = HEAP32[$32>>2]|0;
    $41 = ($40|0)==(0|0);
    if (!($41)) {
     _system_collections_generic_dictionary_node_free($40);
     HEAP32[$32>>2] = 0;
    }
    HEAP32[$32>>2] = $39;
    $42 = HEAP32[$38>>2]|0;
    $43 = ($42|0)==(0|0);
    if (!($43)) {
     _system_collections_generic_dictionary_node_free($42);
     HEAP32[$38>>2] = 0;
    }
    HEAP32[$38>>2] = $$1233;
    $$0232 = 0;$$0234 = $33;$$0239 = 0;
   }
   $44 = ($$1235|0)==(0|0);
   if (!($44)) {
    _system_collections_generic_dictionary_node_free($$1235);
   }
   $spec$select = (($spec$select244) + 1)|0;
   $45 = HEAP32[$1>>2]|0;
   $46 = ((($45)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ($spec$select|0)<($47|0);
   $49 = ((($45)) + 32|0);
   if ($48) {
    $27 = $49;$spec$select244 = $spec$select;
   } else {
    $$lcssa = $49;$$lcssa243 = $45;
    break;
   }
  }
 } else {
  $$lcssa = $25;$$lcssa243 = $21;
 }
 $50 = HEAP32[$$lcssa>>2]|0;
 $51 = ((($$lcssa243)) + 36|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($50|0)!=(0|0);
 $54 = ($52|0)>(0);
 $or$cond$i$i = $53 & $54;
 if ($or$cond$i$i) {
  $$01$i$i = 0;
  while(1) {
   $55 = (($50) + ($$01$i$i<<2)|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($56|0)==(0|0);
   if (!($57)) {
    _system_collections_generic_dictionary_node_free($56);
   }
   $58 = (($$01$i$i) + 1)|0;
   $exitcond$i$i = ($58|0)==($52|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01$i$i = $58;
   }
  }
 }
 _g_free($50);
 $59 = HEAP32[$1>>2]|0;
 $60 = ((($59)) + 32|0);
 HEAP32[$60>>2] = $20;
 $61 = ((($59)) + 36|0);
 HEAP32[$61>>2] = $18;
 $62 = ((($59)) + 40|0);
 HEAP32[$62>>2] = $18;
 $63 = ((($59)) + 24|0);
 HEAP32[$63>>2] = $18;
 _g_free(0);
 return;
}
function _system_collections_generic_dictionary_map_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37199] = $1;
 _g_type_class_add_private($0,40);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 481;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 482;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 483;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 484;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 24|0);
 HEAP32[$8>>2] = 485;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 36|0);
 HEAP32[$10>>2] = 486;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$12);
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$14);
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_once_init_enter(148752)|0);
 $25 = ($24|0)==(0);
 if ($25) {
  $28 = HEAP32[37188]|0;
  $29 = (_g_param_spec_object(137107,137107,137107,$28,226)|0);
  HEAP32[36272] = $29;
  _g_object_class_install_property($0,7,$29);
  return;
 }
 $26 = (_system_collections_generic_map_get_type()|0);
 $27 = (_g_type_register_static($26,136921,119304,0)|0);
 _g_once_init_leave(148752,$27);
 $28 = HEAP32[37188]|0;
 $29 = (_g_param_spec_object(137107,137107,137107,$28,226)|0);
 HEAP32[36272] = $29;
 _g_object_class_install_property($0,7,$29);
 return;
}
function _system_collections_generic_dictionary_map_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148792)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,138155,119484,0)|0);
  _g_once_init_leave(148792,$4);
 }
 $5 = HEAP32[37198]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_map_iterator_real_next($0) {
 $0 = $0|0;
 var $$lcssa = 0, $$phi$trans$insert = 0, $$phi$trans$insert72 = 0, $$pre = 0, $$pre70 = 0, $$pre71 = 0, $$pre73 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$3>>2] = $7;
  $8 = $7;
  $9 = ($7|0)==(0);
  if (!($9)) {
   $$lcssa = $8;
   $22 = ($$lcssa|0)!=(0|0);
   $23 = $22&1;
   return ($23|0);
  }
 }
 $10 = ((($2)) + 28|0);
 $11 = ((($2)) + 24|0);
 $$pre = HEAP32[$10>>2]|0;
 $$pre70 = HEAP32[$11>>2]|0;
 $$phi$trans$insert = ((($$pre70)) + 20|0);
 $$pre71 = HEAP32[$$phi$trans$insert>>2]|0;
 $$phi$trans$insert72 = ((($$pre71)) + 24|0);
 $$pre73 = HEAP32[$$phi$trans$insert72>>2]|0;
 $12 = ((($$pre71)) + 32|0);
 $14 = $$pre;$24 = 0;
 while(1) {
  $13 = (($14) + 1)|0;
  $15 = ($13|0)<($$pre73|0);
  if (!($15)) {
   $$lcssa = $24;
   label = 7;
   break;
  }
  HEAP32[$10>>2] = $13;
  $16 = HEAP32[$12>>2]|0;
  $17 = (($16) + ($13<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$3>>2] = $18;
  $19 = $18;
  $20 = ($18|0)==(0);
  if ($20) {
   $14 = $13;$24 = $19;
  } else {
   break;
  }
 }
 if ((label|0) == 7) {
  $22 = ($$lcssa|0)!=(0|0);
  $23 = $22&1;
  return ($23|0);
 }
 $21 = $18;
 $$lcssa = $21;
 $22 = ($$lcssa|0)!=(0|0);
 $23 = $22&1;
 return ($23|0);
}
function _system_collections_generic_dictionary_map_iterator_real_get_key($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,1597,138267,137483);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,137002,1599,138267,137505);
  // unreachable;
 }
 $15 = HEAP32[$13>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $21 = 0;
  return ($21|0);
 }
 $17 = ((($2)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $21 = $15;
  return ($21|0);
 }
 $20 = (ftCall_ii($18|0,$15)|0);
 $21 = $20;
 return ($21|0);
}
function _system_collections_generic_dictionary_map_iterator_real_get_value($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,137002,1622,138201,137483);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,137002,1624,138201,137505);
  // unreachable;
 }
 $15 = ((($13)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $22 = 0;
  return ($22|0);
 }
 $18 = ((($2)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $22 = $16;
  return ($22|0);
 }
 $21 = (ftCall_ii($19|0,$16)|0);
 $22 = $21;
 return ($22|0);
}
function __vala_system_collections_generic_dictionary_map_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148792)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,138155,119484,0)|0);
  _g_once_init_leave(148792,$7);
 }
 $8 = HEAP32[37198]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 137002;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1700;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_dictionary_map_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148792)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,138155,119484,0)|0);
  _g_once_init_leave(148792,$7);
 }
 $8 = HEAP32[37198]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 36|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 137002;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1732;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_map_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148792)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,138155,119484,0)|0);
  _g_once_init_leave(148792,$4);
 }
 $5 = HEAP32[37198]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37199]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_iterable_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterable_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_object_construct($0)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_iterable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148800)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37200]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,138331,119520,16)|0);
 _g_once_init_leave(148800,$3);
 $4 = HEAP32[37200]|0;
 return ($4|0);
}
function _system_collections_generic_iterable_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37201] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 487;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 488;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 489;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = 490;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$13);
 return;
}
function _system_collections_generic_iterable_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148800)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,138331,119520,16)|0);
  _g_once_init_leave(148800,$4);
 }
 $5 = HEAP32[37200]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_iterable_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138509,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterable_real_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138417,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_iterable_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148800)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138331,119520,16)|0);
  _g_once_init_leave(148800,$7);
 }
 $8 = HEAP32[37200]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 138364;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 218;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterable_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148800)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138331,119520,16)|0);
  _g_once_init_leave(148800,$7);
 }
 $8 = HEAP32[37200]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 138364;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 238;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_iterator_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 96|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_has_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_get($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 104|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_object_construct($0)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_iterator_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 112|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148808)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37202]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,138609,119556,16)|0);
 _g_once_init_leave(148808,$3);
 $4 = HEAP32[37202]|0;
 return ($4|0);
}
function _system_collections_generic_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37203] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 491;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 492;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 493;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 494;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = 495;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = ((($0)) + 24|0);
 HEAP32[$9>>2] = 496;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$13);
 $14 = (_g_type_check_class_cast($0,80)|0);
 $15 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$15);
 $16 = (_g_type_check_class_cast($0,80)|0);
 $17 = (_g_param_spec_boolean(138642,138642,138642,0,225)|0);
 HEAP32[(145120)>>2] = $17;
 _g_object_class_install_property($0,4,$17);
 return;
}
function _system_collections_generic_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148808)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,138609,119556,16)|0);
  _g_once_init_leave(148808,$4);
 }
 $5 = HEAP32[37202]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_iterator_real_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138970,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterator_real_has_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138878,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138791,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_iterator_real_Remove($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138701,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148808)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138609,119556,16)|0);
  _g_once_init_leave(148808,$7);
 }
 $8 = HEAP32[37202]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 138648;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 267;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148808)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138609,119556,16)|0);
  _g_once_init_leave(148808,$7);
 }
 $8 = HEAP32[37202]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 138648;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 287;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_list_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 136|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_list_IndexOf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 144|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_list_Insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 148|0);
 $5 = HEAP32[$4>>2]|0;
 ftCall_viii($5|0,$0,$1,$2);
 return;
}
function _system_collections_generic_list_RemoveAt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 152|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_list_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_system_collections_generic_collection_construct($0,$1,$2,$3)|0);
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_list_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148816)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37204]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_collection_get_type()|0);
 $3 = (_g_type_register_static($2,139058,119592,16)|0);
 _g_once_init_leave(148816,$3);
 $4 = HEAP32[37204]|0;
 return ($4|0);
}
function _system_collections_generic_list_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37205] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 136|0);
 HEAP32[$2>>2] = 497;
 $3 = ((($0)) + 140|0);
 HEAP32[$3>>2] = 498;
 $4 = ((($0)) + 144|0);
 HEAP32[$4>>2] = 499;
 $5 = ((($0)) + 148|0);
 HEAP32[$5>>2] = 500;
 $6 = ((($0)) + 152|0);
 HEAP32[$6>>2] = 501;
 $7 = ((($0)) + 156|0);
 HEAP32[$7>>2] = 502;
 $8 = ((($0)) + 160|0);
 HEAP32[$8>>2] = 503;
 $9 = ((($0)) + 164|0);
 HEAP32[$9>>2] = 504;
 $10 = ((($0)) + 168|0);
 HEAP32[$10>>2] = 505;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = 506;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 24|0);
 HEAP32[$14>>2] = 507;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$20);
 return;
}
function _system_collections_generic_list_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148816)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,139058,119592,16)|0);
  _g_once_init_leave(148816,$4);
 }
 $5 = HEAP32[37204]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_list_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,139480,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_list_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,139397,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_list_real_IndexOf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,139310,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_list_real_Insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,139224,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_list_real_RemoveAt($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,139136,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_list_real_First($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 136|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_iii($3|0,$0,0)|0);
 return ($4|0);
}
function _system_collections_generic_list_real_Last($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_system_collections_generic_collection_get_Count($0)|0);
 $2 = (($1) + -1)|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 136|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iii($5|0,$0,$2)|0);
 return ($6|0);
}
function _system_collections_generic_list_real_InsertAll($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$04649 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_system_collections_generic_iterable_iterator($2)|0);
 $4 = (_system_collections_generic_iterator_next($3)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = ((($0)) + 24|0);
  $$04649 = $1;
  while(1) {
   $7 = (_system_collections_generic_iterator_get($3)|0);
   $8 = HEAP32[$0>>2]|0;
   $9 = ((($8)) + 148|0);
   $10 = HEAP32[$9>>2]|0;
   ftCall_viii($10|0,$0,$$04649,$7);
   $11 = (($$04649) + 1)|0;
   $12 = ($7|0)==(0|0);
   if (!($12)) {
    $13 = HEAP32[$6>>2]|0;
    $14 = ((($13)) + 8|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($15|0)==(0|0);
    if (!($16)) {
     ftCall_vi($15|0,$7);
    }
   }
   $17 = (_system_collections_generic_iterator_next($3)|0);
   $18 = ($17|0)==(0);
   if ($18) {
    break;
   } else {
    $$04649 = $11;
   }
  }
 }
 $19 = ($3|0)==(0|0);
 if ($19) {
  return;
 }
 _g_object_unref($3);
 return;
}
function _system_collections_generic_list_real_Sort($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($5)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($5)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 _system_collections_generic_tim_sort_sort($6,$8,$10,$0,$1,$2);
 $11 = ($3|0)==(0|0);
 if ($11) {
  return;
 }
 ftCall_vi($3|0,$2);
 return;
}
function __vala_system_collections_generic_list_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148816)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,139058,119592,16)|0);
  _g_once_init_leave(148816,$7);
 }
 $8 = HEAP32[37204]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 139087;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 490;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_list_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148816)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,139058,119592,16)|0);
  _g_once_init_leave(148816,$7);
 }
 $8 = HEAP32[37204]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 24|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 24|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 24|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 139087;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 510;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_map_iterator_construct($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_object_construct($0)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $1;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $2;
 $11 = ((($9)) + 8|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($9)) + 12|0);
 HEAP32[$12>>2] = $4;
 $13 = ((($9)) + 16|0);
 HEAP32[$13>>2] = $5;
 $14 = ((($9)) + 20|0);
 HEAP32[$14>>2] = $6;
 return ($7|0);
}
function _system_collections_generic_map_iterator_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148824)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37206]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,139563,119628,16)|0);
 _g_once_init_leave(148824,$3);
 $4 = HEAP32[37206]|0;
 return ($4|0);
}
function _system_collections_generic_map_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37207] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 508;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 509;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 510;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 511;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 24|0);
 HEAP32[$8>>2] = 512;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$10);
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$12);
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$14);
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$20);
 return;
}
function _system_collections_generic_map_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148824)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,139563,119628,16)|0);
  _g_once_init_leave(148824,$4);
 }
 $5 = HEAP32[37206]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_map_iterator_real_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,139847,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_iterator_real_get_key($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,139752,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_map_iterator_real_get_value($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,139655,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_map_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148824)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,139563,119628,16)|0);
  _g_once_init_leave(148824,$7);
 }
 $8 = HEAP32[37206]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 139599;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 242;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_map_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148824)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,139563,119628,16)|0);
  _g_once_init_leave(148824,$7);
 }
 $8 = HEAP32[37206]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 12|0);
  HEAP32[$24>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $25 = (_g_value_get_pointer($2)|0);
  $26 = ((($0)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 16|0);
  HEAP32[$28>>2] = $25;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $29 = (_g_value_get_pointer($2)|0);
  $30 = ((($0)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 20|0);
  HEAP32[$32>>2] = $29;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $33 = ((($3)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$3>>2]|0;
  $36 = HEAP32[$35>>2]|0;
  $37 = (_g_type_name($36)|0);
  $38 = HEAP32[$0>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_g_type_name($39)|0);
  HEAP32[$vararg_buffer>>2] = 139599;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 271;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $34;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $37;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $40;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_map_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 96|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_map_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 100|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_map_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 104|0);
 $5 = HEAP32[$4>>2]|0;
 ftCall_viii($5|0,$0,$1,$2);
 return;
}
function _system_collections_generic_map_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 112|0);
 $3 = HEAP32[$2>>2]|0;
 ftCall_vi($3|0,$0);
 return;
}
function _system_collections_generic_map_construct($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_object_construct($0)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $1;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $2;
 $11 = ((($9)) + 8|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($9)) + 12|0);
 HEAP32[$12>>2] = $4;
 $13 = ((($9)) + 16|0);
 HEAP32[$13>>2] = $5;
 $14 = ((($9)) + 20|0);
 HEAP32[$14>>2] = $6;
 return ($7|0);
}
function _system_collections_generic_map_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 120|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_Keys($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 124|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_Values($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148832)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37208]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,139939,119664,16)|0);
 _g_once_init_leave(148832,$3);
 $4 = HEAP32[37208]|0;
 return ($4|0);
}
function _system_collections_generic_map_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37209] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 513;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 514;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 515;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 516;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 517;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 518;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = ((($0)) + 28|0);
 HEAP32[$9>>2] = 519;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 24|0);
 HEAP32[$11>>2] = 520;
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_gtype(139967,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$13);
 $14 = (_g_type_check_class_cast($0,80)|0);
 $15 = (_g_param_spec_pointer(139974,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$15);
 $16 = (_g_type_check_class_cast($0,80)|0);
 $17 = (_g_param_spec_pointer(139985,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$17);
 $18 = (_g_type_check_class_cast($0,80)|0);
 $19 = (_g_param_spec_gtype(140000,141944,141944,4,234)|0);
 _g_object_class_install_property($0,4,$19);
 $20 = (_g_type_check_class_cast($0,80)|0);
 $21 = (_g_param_spec_pointer(140007,141960,141960,234)|0);
 _g_object_class_install_property($0,5,$21);
 $22 = (_g_type_check_class_cast($0,80)|0);
 $23 = (_g_param_spec_pointer(140018,141984,141984,234)|0);
 _g_object_class_install_property($0,6,$23);
 $24 = (_g_type_check_class_cast($0,80)|0);
 $25 = (_g_param_spec_int(140033,140033,140033,-2147483648,2147483647,0,225)|0);
 HEAP32[(145164)>>2] = $25;
 _g_object_class_install_property($0,7,$25);
 $26 = (_g_type_check_class_cast($0,80)|0);
 $27 = (_system_collections_generic_set_get_type()|0);
 $28 = (_g_param_spec_object(140039,140039,140039,$27,225)|0);
 HEAP32[(145168)>>2] = $28;
 _g_object_class_install_property($0,8,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_system_collections_generic_collection_get_type()|0);
 $31 = (_g_param_spec_object(140044,140044,140044,$30,225)|0);
 HEAP32[(145172)>>2] = $31;
 _g_object_class_install_property($0,9,$31);
 return;
}
function _system_collections_generic_map_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148832)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,139939,119664,16)|0);
  _g_once_init_leave(148832,$4);
 }
 $5 = HEAP32[37208]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_map_real_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,140523,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,140441,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_map_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,140359,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_map_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,140274,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_real_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,140190,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_map_real_map_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,140099,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_map_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148832)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,139939,119664,16)|0);
  _g_once_init_leave(148832,$7);
 }
 $8 = HEAP32[37208]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 140051;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 402;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_map_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148832)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,139939,119664,16)|0);
  _g_once_init_leave(148832,$7);
 }
 $8 = HEAP32[37208]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 12|0);
  HEAP32[$24>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $25 = (_g_value_get_pointer($2)|0);
  $26 = ((($0)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 16|0);
  HEAP32[$28>>2] = $25;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $29 = (_g_value_get_pointer($2)|0);
  $30 = ((($0)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 20|0);
  HEAP32[$32>>2] = $29;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $33 = ((($3)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$3>>2]|0;
  $36 = HEAP32[$35>>2]|0;
  $37 = (_g_type_name($36)|0);
  $38 = HEAP32[$0>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_g_type_name($39)|0);
  HEAP32[$vararg_buffer>>2] = 140051;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 431;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $34;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $37;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $40;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_set_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_system_collections_generic_collection_construct($0,$1,$2,$3)|0);
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_set_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148840)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37210]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_collection_get_type()|0);
 $3 = (_g_type_register_static($2,140613,119700,16)|0);
 _g_once_init_leave(148840,$3);
 $4 = HEAP32[37210]|0;
 return ($4|0);
}
function _system_collections_generic_set_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37211] = $1;
 _g_type_class_add_private($0,12);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 521;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 522;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$7);
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$11);
 return;
}
function _system_collections_generic_set_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148840)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,140613,119700,16)|0);
  _g_once_init_leave(148840,$4);
 }
 $5 = HEAP32[37210]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_system_collections_generic_set_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148840)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,140613,119700,16)|0);
  _g_once_init_leave(148840,$7);
 }
 $8 = HEAP32[37210]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 140641;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 229;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_set_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148840)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,140613,119700,16)|0);
  _g_once_init_leave(148840,$7);
 }
 $8 = HEAP32[37210]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 24|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 24|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 24|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 140641;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 249;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_tim_sort_sort($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$011$i$i$i = 0, $$0143$i = 0, $$0143$us$i = 0, $$0143$us$us$i = 0, $$0143$us144$i = 0, $$pre$i = 0, $$pre$i48 = 0, $$pre$phi$i50Z2D = 0, $$pre$phi$iZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0;
 var $exitcond$i$i$i = 0, $exitcond149$i = 0, $exitcond150$i = 0, $exitcond151$i = 0, $or$cond$i$i$i = 0, $or$cond12$i$i$i = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $6 = sp;
 $7 = (_system_collections_generic_array_list_get_type()|0);
 $8 = ($3|0)==(0|0);
 do {
  if (!($8)) {
   $9 = HEAP32[$3>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    label = 4;
   } else {
    $11 = HEAP32[$9>>2]|0;
    $12 = ($11|0)==($7|0);
    if (!($12)) {
     label = 4;
    }
   }
   if ((label|0) == 4) {
    $13 = (_g_type_check_instance_is_a($3,$7)|0);
    $phitmp = ($13|0)==(0);
    if ($phitmp) {
     break;
    }
   }
   $14 = (_g_type_check_instance_cast($3,$7)|0);
   $15 = (_g_once_init_enter(148848)|0);
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = (_object_get_type()|0);
    $18 = (_g_type_register_static($17,140689,119736,0)|0);
    _g_once_init_leave(148848,$18);
   }
   $19 = HEAP32[37212]|0;
   $20 = (_object_construct($19)|0);
   $21 = ((($20)) + 16|0);
   $22 = HEAP32[$21>>2]|0;
   HEAP32[$22>>2] = $0;
   $23 = ((($22)) + 4|0);
   HEAP32[$23>>2] = $1;
   $24 = ((($22)) + 8|0);
   HEAP32[$24>>2] = $2;
   $25 = ($14|0)==(0|0);
   if ($25) {
    $28 = $22;$33 = 0;
   } else {
    $26 = (_g_object_ref($3)|0);
    $$pre$i = HEAP32[$21>>2]|0;
    $28 = $$pre$i;$33 = $3;
   }
   $27 = ((($28)) + 12|0);
   $29 = HEAP32[$27>>2]|0;
   $30 = ($29|0)==(0|0);
   if ($30) {
    $$pre$phi$iZ2D = $27;$37 = $28;
   } else {
    _g_object_unref($29);
    $31 = HEAP32[$21>>2]|0;
    $32 = ((($31)) + 12|0);
    HEAP32[$32>>2] = 0;
    $$pre$phi$iZ2D = $32;$37 = $31;
   }
   HEAP32[$$pre$phi$iZ2D>>2] = $33;
   $34 = ((($3)) + 32|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($37)) + 28|0);
   HEAP32[$36>>2] = $35;
   $38 = ((($37)) + 32|0);
   HEAP32[$38>>2] = 0;
   $39 = ((($3)) + 44|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($37)) + 36|0);
   HEAP32[$41>>2] = $40;
   $42 = ((($37)) + 56|0);
   HEAP32[$42>>2] = $4;
   $43 = ((($37)) + 60|0);
   HEAP32[$43>>2] = $5;
   _system_collections_generic_tim_sort_do_sort($20);
   _g_object_unref($20);
   STACKTOP = sp;return;
  }
 } while(0);
 $44 = (_g_once_init_enter(148848)|0);
 $45 = ($44|0)==(0);
 if (!($45)) {
  $46 = (_object_get_type()|0);
  $47 = (_g_type_register_static($46,140689,119736,0)|0);
  _g_once_init_leave(148848,$47);
 }
 $48 = HEAP32[37212]|0;
 $49 = (_object_construct($48)|0);
 $50 = ((($49)) + 16|0);
 $51 = HEAP32[$50>>2]|0;
 HEAP32[$51>>2] = $0;
 $52 = ((($51)) + 4|0);
 HEAP32[$52>>2] = $1;
 $53 = ((($51)) + 8|0);
 HEAP32[$53>>2] = $2;
 if ($8) {
  $56 = $51;$61 = 0;
 } else {
  $54 = (_g_object_ref($3)|0);
  $$pre$i48 = HEAP32[$50>>2]|0;
  $56 = $$pre$i48;$61 = $3;
 }
 $55 = ((($56)) + 12|0);
 $57 = HEAP32[$55>>2]|0;
 $58 = ($57|0)==(0|0);
 if ($58) {
  $$pre$phi$i50Z2D = $55;
 } else {
  _g_object_unref($57);
  $59 = HEAP32[$50>>2]|0;
  $60 = ((($59)) + 12|0);
  HEAP32[$60>>2] = 0;
  $$pre$phi$i50Z2D = $60;
 }
 HEAP32[$$pre$phi$i50Z2D>>2] = $61;
 $62 = (_system_collections_generic_collection_ToArray($3,$6)|0);
 $63 = HEAP32[$50>>2]|0;
 $64 = ((($63)) + 16|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = ((($63)) + 20|0);
 $67 = HEAP32[$66>>2]|0;
 $68 = ($65|0)!=(0|0);
 $69 = ($2|0)!=(0|0);
 $or$cond$i$i$i = $69 & $68;
 $70 = ($67|0)>(0);
 $or$cond12$i$i$i = $70 & $or$cond$i$i$i;
 if ($or$cond12$i$i$i) {
  $$011$i$i$i = 0;
  while(1) {
   $71 = (($65) + ($$011$i$i$i<<2)|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ($72|0)==(0|0);
   if (!($73)) {
    ftCall_vi($2|0,$72);
   }
   $74 = (($$011$i$i$i) + 1)|0;
   $exitcond$i$i$i = ($74|0)==($67|0);
   if ($exitcond$i$i$i) {
    break;
   } else {
    $$011$i$i$i = $74;
   }
  }
 }
 _g_free($65);
 $75 = HEAP32[$50>>2]|0;
 $76 = ((($75)) + 16|0);
 HEAP32[$76>>2] = $62;
 $77 = HEAP32[$6>>2]|0;
 $78 = ((($75)) + 20|0);
 HEAP32[$78>>2] = $77;
 $79 = ((($75)) + 24|0);
 HEAP32[$79>>2] = $77;
 $80 = $62;
 $81 = ((($75)) + 28|0);
 HEAP32[$81>>2] = $80;
 $82 = ((($75)) + 32|0);
 HEAP32[$82>>2] = 0;
 $83 = (_system_collections_generic_collection_get_Count($3)|0);
 $84 = HEAP32[$50>>2]|0;
 $85 = ((($84)) + 36|0);
 HEAP32[$85>>2] = $83;
 $86 = ((($84)) + 56|0);
 HEAP32[$86>>2] = $4;
 $87 = ((($84)) + 60|0);
 HEAP32[$87>>2] = $5;
 _system_collections_generic_tim_sort_do_sort($49);
 _system_collections_generic_collection_Clear($3);
 $88 = HEAP32[$50>>2]|0;
 $89 = ((($88)) + 16|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ((($88)) + 20|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ($92|0)>(0);
 if ($93) {
  $94 = ($1|0)==(0|0);
  $95 = ($2|0)==(0|0);
  L38: do {
   if ($94) {
    if ($95) {
     $$0143$us144$i = 0;
     while(1) {
      $108 = (($90) + ($$0143$us144$i<<2)|0);
      $109 = HEAP32[$108>>2]|0;
      (_system_collections_generic_collection_Add($3,$109)|0);
      $110 = (($$0143$us144$i) + 1)|0;
      $exitcond150$i = ($110|0)==($92|0);
      if ($exitcond150$i) {
       break L38;
      } else {
       $$0143$us144$i = $110;
      }
     }
    }
    $$0143$i = 0;
    while(1) {
     $111 = (($90) + ($$0143$i<<2)|0);
     $112 = HEAP32[$111>>2]|0;
     (_system_collections_generic_collection_Add($3,$112)|0);
     $113 = ($112|0)==(0|0);
     if (!($113)) {
      ftCall_vi($2|0,$112);
     }
     $114 = (($$0143$i) + 1)|0;
     $exitcond151$i = ($114|0)==($92|0);
     if ($exitcond151$i) {
      break;
     } else {
      $$0143$i = $114;
     }
    }
   } else {
    if ($95) {
     $$0143$us$us$i = 0;
     while(1) {
      $96 = (($90) + ($$0143$us$us$i<<2)|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $100 = 0;
      } else {
       $99 = (ftCall_ii($1|0,$97)|0);
       $100 = $99;
      }
      (_system_collections_generic_collection_Add($3,$100)|0);
      $101 = (($$0143$us$us$i) + 1)|0;
      $exitcond$i = ($101|0)==($92|0);
      if ($exitcond$i) {
       break L38;
      } else {
       $$0143$us$us$i = $101;
      }
     }
    }
    $$0143$us$i = 0;
    while(1) {
     $102 = (($90) + ($$0143$us$i<<2)|0);
     $103 = HEAP32[$102>>2]|0;
     $104 = ($103|0)==(0|0);
     if ($104) {
      (_system_collections_generic_collection_Add($3,0)|0);
     } else {
      $105 = (ftCall_ii($1|0,$103)|0);
      (_system_collections_generic_collection_Add($3,$105)|0);
      $106 = ($105|0)==(0|0);
      if (!($106)) {
       ftCall_vi($2|0,$105);
      }
     }
     $107 = (($$0143$us$i) + 1)|0;
     $exitcond149$i = ($107|0)==($92|0);
     if ($exitcond149$i) {
      break;
     } else {
      $$0143$us$i = $107;
     }
    }
   }
  } while(0);
  $115 = ($49|0)==(0|0);
  if (!($115)) {
   label = 44;
  }
 } else {
  label = 44;
 }
 if ((label|0) == 44) {
  _g_object_unref($49);
 }
 STACKTOP = sp;return;
}
function _system_collections_generic_tim_sort_do_sort($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i250 = 0, $$0$in$i = 0, $$0$in$i249 = 0, $$0$in169$i = 0, $$0$in75$i = 0, $$011$i$i = 0, $$0170$i = 0, $$0171$i = 0, $$0185$lcssa$i = 0, $$0185196$i = 0, $$0187$lcssa$i = 0, $$0187195$i = 0, $$0224254$i = 0, $$029$lcssa$i = 0, $$0294$i = 0, $$030$lcssa$i = 0, $$0303$i = 0, $$035$i = 0, $$035$i270 = 0;
 var $$035$i271 = 0, $$03539$i = 0, $$076$i = 0, $$077$i = 0, $$1$i = 0, $$1186$i = 0, $$1188$i = 0, $$2250$i = 0, $$idx$val$i = 0, $$idx$val$i235 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i236 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i237 = 0, $$idx$val$idx192$i = 0, $$idx$val$idx192$val$i = 0, $$idx$val$idx243$i = 0, $$idx$val$idx243$val$i = 0, $$idx239$val$i = 0, $$idx239$val$idx$i = 0;
 var $$idx239$val$idx$val$i = 0, $$idx239$val$idx242$i = 0, $$idx239$val$idx242$val$i = 0, $$idx240$val$i = 0, $$idx240$val$idx$i = 0, $$idx240$val$idx$val$i = 0, $$idx240$val$idx241$i = 0, $$idx240$val$idx241$val$i = 0, $$lobit$i = 0, $$lobit$not$i = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert173$i = 0, $$phi$trans$insert178$i = 0, $$pn$i = 0, $$pn$i248 = 0, $$pn168$i = 0, $$pre = 0, $$pre$i238 = 0, $$pre$i241 = 0, $$pre$phi175$iZ2D = 0;
 var $$pre172$i = 0, $$pre174$i = 0, $$pre177$i = 0, $$pre179$i = 0, $$pre23$i = 0, $$pre259 = 0, $$pre260 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $not$247$i = 0, $or$cond12$i$i = 0, $spec$select$i = 0, $spec$select$i239 = 0, $spec$select$i240 = 0, $spec$select198$i = 0, $spec$select234$i = 0, $spec$select234251$i = 0, $spec$select236$i = 0, $spec$select238$i = 0, $spec$select255$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)<(2);
 if ($5) {
  return;
 }
 $6 = (_g_malloc0_n(1,4)|0);
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 40|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 44|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($9|0)!=(0|0);
 $13 = ($11|0)>(0);
 $or$cond12$i$i = $12 & $13;
 if ($or$cond12$i$i) {
  $$011$i$i = 0;
  while(1) {
   $14 = (($9) + ($$011$i$i<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = ((($15)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0|0);
    if (!($19)) {
     _g_free($18);
    }
    _g_slice_free1(16,$15);
   }
   $20 = (($$011$i$i) + 1)|0;
   $exitcond$i$i = ($20|0)==($11|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$011$i$i = $20;
   }
  }
 }
 _g_free($9);
 $21 = HEAP32[$1>>2]|0;
 $22 = ((($21)) + 40|0);
 HEAP32[$22>>2] = $6;
 $23 = ((($21)) + 44|0);
 HEAP32[$23>>2] = 0;
 $24 = ((($21)) + 48|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($21)) + 52|0);
 HEAP32[$25>>2] = 7;
 $26 = ((($21)) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($21)) + 32|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ((($21)) + 36|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (_g_slice_alloc0(16)|0);
 HEAP32[$32>>2] = $27;
 $33 = ((($32)) + 8|0);
 HEAP32[$33>>2] = $29;
 $34 = ((($32)) + 12|0);
 HEAP32[$34>>2] = $31;
 $35 = ($31|0)>(63);
 if ($35) {
  $$0294$i = $31;$$0303$i = 0;
  while(1) {
   $36 = $$0294$i >> 1;
   $37 = $$0294$i & 1;
   $38 = $37 | $$0303$i;
   $39 = ($$0294$i|0)>(127);
   if ($39) {
    $$0294$i = $36;$$0303$i = $38;
   } else {
    $$029$lcssa$i = $36;$$030$lcssa$i = $38;
    break;
   }
  }
 } else {
  $$029$lcssa$i = $31;$$030$lcssa$i = 0;
 }
 $40 = (($$029$lcssa$i) + ($$030$lcssa$i))|0;
 $41 = ($31|0)>(0);
 do {
  if ($41) {
   $43 = $31;
   L22: while(1) {
    $42 = ($43|0)==(1);
    L24: do {
     if ($42) {
      $$1$i = 1;$88 = 1;
     } else {
      $44 = HEAP32[$32>>2]|0;
      $45 = HEAP32[$33>>2]|0;
      $46 = (($45) + 1)|0;
      $47 = (($44) + ($46<<2)|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = (($44) + ($45<<2)|0);
      $50 = HEAP32[$49>>2]|0;
      $$idx240$val$i = HEAP32[$1>>2]|0;
      $$idx240$val$idx$i = ((($$idx240$val$i)) + 56|0);
      $$idx240$val$idx$val$i = HEAP32[$$idx240$val$idx$i>>2]|0;
      $$idx240$val$idx241$i = ((($$idx240$val$i)) + 60|0);
      $$idx240$val$idx241$val$i = HEAP32[$$idx240$val$idx241$i>>2]|0;
      $51 = (ftCall_iiii($$idx240$val$idx$val$i|0,$48,$50,$$idx240$val$idx241$val$i)|0);
      $52 = ($51|0)>(-1);
      $53 = HEAP32[$33>>2]|0;
      $54 = (($53) + 2)|0;
      $55 = HEAP32[$34>>2]|0;
      $56 = (($55) + ($53))|0;
      $57 = ($54|0)<($56|0);
      if ($52) {
       if (!($57)) {
        $$1$i = 1;$88 = 2;
        break;
       }
       $$2250$i = 2;$spec$select234251$i = $54;
       while(1) {
        $75 = HEAP32[$32>>2]|0;
        $76 = (($75) + ($spec$select234251$i<<2)|0);
        $77 = HEAP32[$76>>2]|0;
        $78 = (($spec$select234251$i) + -1)|0;
        $79 = (($75) + ($78<<2)|0);
        $80 = HEAP32[$79>>2]|0;
        $$idx$val$i = HEAP32[$1>>2]|0;
        $$idx$val$idx$i = ((($$idx$val$i)) + 56|0);
        $$idx$val$idx$val$i = HEAP32[$$idx$val$idx$i>>2]|0;
        $$idx$val$idx243$i = ((($$idx$val$i)) + 60|0);
        $$idx$val$idx243$val$i = HEAP32[$$idx$val$idx243$i>>2]|0;
        $81 = (ftCall_iiii($$idx$val$idx$val$i|0,$77,$80,$$idx$val$idx243$val$i)|0);
        $82 = ($81|0)>(-1);
        $$lobit$i = $81 >>> 31;
        $$lobit$not$i = $$lobit$i ^ 1;
        $spec$select238$i = (($$lobit$not$i) + ($$2250$i))|0;
        if (!($82)) {
         $$1$i = 1;$88 = $spec$select238$i;
         break L24;
        }
        $spec$select234$i = (($spec$select234251$i) + 1)|0;
        $71 = HEAP32[$33>>2]|0;
        $72 = HEAP32[$34>>2]|0;
        $73 = (($72) + ($71))|0;
        $74 = ($spec$select234$i|0)<($73|0);
        if ($74) {
         $$2250$i = $spec$select238$i;$spec$select234251$i = $spec$select234$i;
        } else {
         $$1$i = 1;$88 = $spec$select238$i;
         break;
        }
       }
      } else {
       if (!($57)) {
        $$1$i = 0;$88 = 2;
        break;
       }
       $$0224254$i = 2;$spec$select255$i = $54;
       while(1) {
        $62 = HEAP32[$32>>2]|0;
        $63 = (($62) + ($spec$select255$i<<2)|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = (($spec$select255$i) + -1)|0;
        $66 = (($62) + ($65<<2)|0);
        $67 = HEAP32[$66>>2]|0;
        $$idx239$val$i = HEAP32[$1>>2]|0;
        $$idx239$val$idx$i = ((($$idx239$val$i)) + 56|0);
        $$idx239$val$idx$val$i = HEAP32[$$idx239$val$idx$i>>2]|0;
        $$idx239$val$idx242$i = ((($$idx239$val$i)) + 60|0);
        $$idx239$val$idx242$val$i = HEAP32[$$idx239$val$idx242$i>>2]|0;
        $68 = (ftCall_iiii($$idx239$val$idx$val$i|0,$64,$67,$$idx239$val$idx242$val$i)|0);
        $69 = ($68|0)>(-1);
        $not$247$i = $69 ^ 1;
        $70 = $not$247$i&1;
        $spec$select236$i = (($$0224254$i) + ($70))|0;
        if ($69) {
         $$1$i = 0;$88 = $spec$select236$i;
         break L24;
        }
        $spec$select$i = (($spec$select255$i) + 1)|0;
        $58 = HEAP32[$33>>2]|0;
        $59 = HEAP32[$34>>2]|0;
        $60 = (($59) + ($58))|0;
        $61 = ($spec$select$i|0)<($60|0);
        if ($61) {
         $$0224254$i = $spec$select236$i;$spec$select255$i = $spec$select$i;
        } else {
         $$1$i = 0;$88 = $spec$select236$i;
         break;
        }
       }
      }
     }
    } while(0);
    $83 = HEAP32[$32>>2]|0;
    $84 = HEAP32[$33>>2]|0;
    $85 = (_g_slice_alloc0(16)|0);
    HEAP32[$85>>2] = $83;
    $86 = ((($85)) + 8|0);
    HEAP32[$86>>2] = $84;
    $87 = ((($85)) + 12|0);
    HEAP32[$87>>2] = $88;
    $89 = $83;
    if (!($$1$i)) {
     $90 = (($84) + ($88))|0;
     $$03539$i = (($90) + -1)|0;
     $91 = ($84|0)<($$03539$i|0);
     if ($91) {
      $92 = (($84) + 1)|0;
      $93 = (($89) + ($84<<2)|0);
      $94 = HEAP32[$93>>2]|0;
      $95 = (($89) + ($$03539$i<<2)|0);
      $96 = HEAP32[$95>>2]|0;
      HEAP32[$93>>2] = $96;
      $97 = HEAP32[$85>>2]|0;
      $98 = (($97) + ($$03539$i<<2)|0);
      HEAP32[$98>>2] = $94;
      $$035$i270 = (($90) + -2)|0;
      $99 = ($92|0)<($$035$i270|0);
      if ($99) {
       $$035$i271 = $$035$i270;$101 = $92;
       while(1) {
        $$pre = HEAP32[$85>>2]|0;
        $100 = (($101) + 1)|0;
        $102 = (($$pre) + ($101<<2)|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = (($$pre) + ($$035$i271<<2)|0);
        $105 = HEAP32[$104>>2]|0;
        HEAP32[$102>>2] = $105;
        $106 = HEAP32[$85>>2]|0;
        $107 = (($106) + ($$035$i271<<2)|0);
        HEAP32[$107>>2] = $103;
        $$035$i = (($$035$i271) + -1)|0;
        $108 = ($100|0)<($$035$i|0);
        if ($108) {
         $$035$i271 = $$035$i;$101 = $100;
        } else {
         break;
        }
       }
      }
     }
    }
    $109 = ($88|0)<($40|0);
    if ($109) {
     $110 = HEAP32[$34>>2]|0;
     $111 = ($40|0)<($110|0);
     $112 = $111 ? $40 : $110;
     HEAP32[$87>>2] = $112;
     $113 = (($84) + ($88))|0;
     $114 = (($112) + ($84))|0;
     $115 = ($113|0)<($114|0);
     if ($115) {
      $120 = $84;$spec$select198$i = $113;
      while(1) {
       $116 = HEAP32[$85>>2]|0;
       $117 = (($116) + ($spec$select198$i<<2)|0);
       $118 = HEAP32[$117>>2]|0;
       $119 = ($spec$select198$i|0)>($120|0);
       L50: do {
        if ($119) {
         $$0185196$i = $120;$$0187195$i = $spec$select198$i;$125 = $116;
         while(1) {
          $121 = (($$0187195$i) - ($$0185196$i))|0;
          $122 = $121 >> 1;
          $123 = (($122) + ($$0185196$i))|0;
          $124 = (($125) + ($123<<2)|0);
          $126 = HEAP32[$124>>2]|0;
          $$idx$val$i235 = HEAP32[$1>>2]|0;
          $$idx$val$idx$i236 = ((($$idx$val$i235)) + 56|0);
          $$idx$val$idx$val$i237 = HEAP32[$$idx$val$idx$i236>>2]|0;
          $$idx$val$idx192$i = ((($$idx$val$i235)) + 60|0);
          $$idx$val$idx192$val$i = HEAP32[$$idx$val$idx192$i>>2]|0;
          $127 = (ftCall_iiii($$idx$val$idx$val$i237|0,$118,$126,$$idx$val$idx192$val$i)|0);
          $128 = ($127|0)>(-1);
          $129 = (($123) + 1)|0;
          $$1188$i = $128 ? $$0187195$i : $123;
          $$1186$i = $128 ? $129 : $$0185196$i;
          $130 = ($$1188$i|0)>($$1186$i|0);
          if (!($130)) {
           $$0185$lcssa$i = $$1186$i;$$0187$lcssa$i = $$1188$i;
           break L50;
          }
          $$pre$i238 = HEAP32[$85>>2]|0;
          $$0185196$i = $$1186$i;$$0187195$i = $$1188$i;$125 = $$pre$i238;
         }
        } else {
         $$0185$lcssa$i = $120;$$0187$lcssa$i = $spec$select198$i;
        }
       } while(0);
       $131 = ($$0187$lcssa$i|0)==($$0185$lcssa$i|0);
       if (!($131)) {
        label = 38;
        break L22;
       }
       $132 = HEAP32[$85>>2]|0;
       $133 = (($$0187$lcssa$i) + 1)|0;
       $134 = (($132) + ($133<<2)|0);
       $135 = (($132) + ($$0187$lcssa$i<<2)|0);
       $136 = (($spec$select198$i) - ($$0187$lcssa$i))|0;
       $137 = $136 << 2;
       _memmove(($134|0),($135|0),($137|0))|0;
       $138 = HEAP32[$85>>2]|0;
       $139 = (($138) + ($$0187$lcssa$i<<2)|0);
       HEAP32[$139>>2] = $118;
       $spec$select$i239 = (($spec$select198$i) + 1)|0;
       $140 = HEAP32[$86>>2]|0;
       $141 = HEAP32[$87>>2]|0;
       $142 = (($141) + ($140))|0;
       $143 = ($spec$select$i239|0)<($142|0);
       if ($143) {
        $120 = $140;$spec$select198$i = $spec$select$i239;
       } else {
        $146 = $141;
        break;
       }
      }
     } else {
      $146 = $112;
     }
    } else {
     $146 = $88;
    }
    $144 = HEAP32[$33>>2]|0;
    $145 = (($144) + ($146))|0;
    HEAP32[$33>>2] = $145;
    $147 = HEAP32[$34>>2]|0;
    $148 = (($147) - ($146))|0;
    HEAP32[$34>>2] = $148;
    $149 = HEAP32[$1>>2]|0;
    $150 = ((($149)) + 40|0);
    $151 = ((($149)) + 44|0);
    $152 = ((($149)) + 48|0);
    $153 = HEAP32[$151>>2]|0;
    $154 = HEAP32[$152>>2]|0;
    $155 = ($153|0)==($154|0);
    $156 = ($154|0)==(0);
    $157 = $154 << 1;
    $spec$select$i240 = $156 ? 4 : $157;
    if ($155) {
     $158 = $spec$select$i240 | 1;
     HEAP32[$152>>2] = $spec$select$i240;
     $159 = HEAP32[$150>>2]|0;
     $160 = (_g_realloc_n($159,$158,4)|0);
     HEAP32[$150>>2] = $160;
     $$pre23$i = HEAP32[$151>>2]|0;
     $162 = $$pre23$i;$164 = $160;
    } else {
     $$pre$i241 = HEAP32[$150>>2]|0;
     $162 = $153;$164 = $$pre$i241;
    }
    $161 = (($162) + 1)|0;
    HEAP32[$151>>2] = $161;
    $163 = (($164) + ($162<<2)|0);
    HEAP32[$163>>2] = $85;
    $165 = HEAP32[$150>>2]|0;
    $166 = (($165) + ($161<<2)|0);
    HEAP32[$166>>2] = 0;
    $$pn168$i = HEAP32[$1>>2]|0;
    $$0$in169$i = ((($$pn168$i)) + 44|0);
    $$0170$i = HEAP32[$$0$in169$i>>2]|0;
    $167 = ($$0170$i|0)>(1);
    L62: do {
     if ($167) {
      $$0171$i = $$0170$i;$170 = $$pn168$i;
      while(1) {
       $168 = ($$0171$i|0)==(2);
       $169 = ((($170)) + 40|0);
       $171 = HEAP32[$169>>2]|0;
       do {
        if ($168) {
         $$phi$trans$insert$i = ((($171)) + 4|0);
         $$pre172$i = HEAP32[$$phi$trans$insert$i>>2]|0;
         $$phi$trans$insert173$i = ((($$pre172$i)) + 12|0);
         $$pre174$i = HEAP32[$$phi$trans$insert173$i>>2]|0;
         $$pre177$i = HEAP32[$171>>2]|0;
         $$phi$trans$insert178$i = ((($$pre177$i)) + 12|0);
         $$pre179$i = HEAP32[$$phi$trans$insert178$i>>2]|0;
         $$pre$phi175$iZ2D = 0;$191 = $$pre179$i;$192 = $$pre174$i;
         label = 51;
        } else {
         $172 = (($$0171$i) + -3)|0;
         $173 = (($171) + ($172<<2)|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ((($174)) + 12|0);
         $176 = HEAP32[$175>>2]|0;
         $177 = (($$0171$i) + -2)|0;
         $178 = (($171) + ($177<<2)|0);
         $179 = HEAP32[$178>>2]|0;
         $180 = ((($179)) + 12|0);
         $181 = HEAP32[$180>>2]|0;
         $182 = (($$0171$i) + -1)|0;
         $183 = (($171) + ($182<<2)|0);
         $184 = HEAP32[$183>>2]|0;
         $185 = ((($184)) + 12|0);
         $186 = HEAP32[$185>>2]|0;
         $187 = (($186) + ($181))|0;
         $188 = ($176|0)>($187|0);
         if ($188) {
          $$pre$phi175$iZ2D = $177;$191 = $181;$192 = $186;
          label = 51;
         } else {
          $189 = ($176|0)<($186|0);
          if ($189) {
           _system_collections_generic_tim_sort_merge_at($0,$172);
           break;
          } else {
           _system_collections_generic_tim_sort_merge_at($0,$177);
           break;
          }
         }
        }
       } while(0);
       if ((label|0) == 51) {
        label = 0;
        $190 = ($191|0)>($192|0);
        if ($190) {
         $237 = $170;
         break L62;
        }
        _system_collections_generic_tim_sort_merge_at($0,$$pre$phi175$iZ2D);
       }
       $$pn$i = HEAP32[$1>>2]|0;
       $$0$in$i = ((($$pn$i)) + 44|0);
       $$0$i = HEAP32[$$0$in$i>>2]|0;
       $193 = ($$0$i|0)>(1);
       if ($193) {
        $$0171$i = $$0$i;$170 = $$pn$i;
       } else {
        $237 = $$pn$i;
        break;
       }
      }
     } else {
      $237 = $$pn168$i;
     }
    } while(0);
    $194 = HEAP32[$34>>2]|0;
    $195 = ($194|0)>(0);
    if ($195) {
     $43 = $194;
    } else {
     label = 55;
     break;
    }
   }
   if ((label|0) == 38) {
    _g_assertion_message_expr(0,140721,974,140773,140824);
    // unreachable;
   }
   else if ((label|0) == 55) {
    $$pre259 = HEAP32[$33>>2]|0;
    $197 = $237;$200 = $$pre259;
    break;
   }
  } else {
   $$pre260 = HEAP32[$1>>2]|0;
   $197 = $$pre260;$200 = $29;
  }
 } while(0);
 $196 = ((($197)) + 36|0);
 $198 = HEAP32[$196>>2]|0;
 $199 = ($200|0)==($198|0);
 if (!($199)) {
  _g_assertion_message_expr(0,140721,596,140838,140882);
  // unreachable;
 }
 $$0$in75$i = ((($197)) + 44|0);
 $$076$i = HEAP32[$$0$in75$i>>2]|0;
 $201 = ($$076$i|0)>(1);
 if ($201) {
  $$077$i = $$076$i;$204 = $197;
  while(1) {
   $202 = ($$077$i|0)==(2);
   if ($202) {
    label = 63;
   } else {
    $203 = ((($204)) + 40|0);
    $205 = HEAP32[$203>>2]|0;
    $206 = (($$077$i) + -3)|0;
    $207 = (($205) + ($206<<2)|0);
    $208 = HEAP32[$207>>2]|0;
    $209 = ((($208)) + 12|0);
    $210 = HEAP32[$209>>2]|0;
    $211 = (($$077$i) + -1)|0;
    $212 = (($205) + ($211<<2)|0);
    $213 = HEAP32[$212>>2]|0;
    $214 = ((($213)) + 12|0);
    $215 = HEAP32[$214>>2]|0;
    $216 = ($210|0)<($215|0);
    if ($216) {
     _system_collections_generic_tim_sort_merge_at($0,$206);
    } else {
     label = 63;
    }
   }
   if ((label|0) == 63) {
    label = 0;
    $217 = (($$077$i) + -2)|0;
    _system_collections_generic_tim_sort_merge_at($0,$217);
   }
   $$pn$i248 = HEAP32[$1>>2]|0;
   $$0$in$i249 = ((($$pn$i248)) + 44|0);
   $$0$i250 = HEAP32[$$0$in$i249>>2]|0;
   $218 = ($$0$i250|0)>(1);
   if ($218) {
    $$077$i = $$0$i250;$204 = $$pn$i248;
   } else {
    $220 = $$0$i250;$222 = $$pn$i248;
    break;
   }
  }
 } else {
  $220 = $$076$i;$222 = $197;
 }
 $219 = ($220|0)==(1);
 if (!($219)) {
  _g_assertion_message_expr(0,140721,600,140838,140906);
  // unreachable;
 }
 $221 = ((($222)) + 40|0);
 $223 = HEAP32[$221>>2]|0;
 $224 = HEAP32[$223>>2]|0;
 $225 = ((($224)) + 8|0);
 $226 = HEAP32[$225>>2]|0;
 $227 = ($226|0)==(0);
 if (!($227)) {
  _g_assertion_message_expr(0,140721,605,140838,140926);
  // unreachable;
 }
 $228 = ((($224)) + 12|0);
 $229 = HEAP32[$228>>2]|0;
 $230 = ((($222)) + 36|0);
 $231 = HEAP32[$230>>2]|0;
 $232 = ($229|0)==($231|0);
 if (!($232)) {
  _g_assertion_message_expr(0,140721,611,140838,140948);
  // unreachable;
 }
 $233 = ($32|0)==(0|0);
 if ($233) {
  return;
 }
 $234 = ((($32)) + 4|0);
 $235 = HEAP32[$234>>2]|0;
 $236 = ($235|0)==(0|0);
 if (!($236)) {
  _g_free($235);
 }
 _g_slice_free1(16,$32);
 return;
}
function _system_collections_generic_tim_sort_merge_at($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i279 = 0, $$01021$i = 0, $$01037$i = 0, $$01037$i$be = 0, $$01041$i = 0, $$01059$i = 0, $$01059$i$be = 0, $$01064$i = 0, $$01064$i$be = 0, $$01195$i = 0, $$01211$i = 0, $$01211$i$be = 0, $$01215$i = 0, $$01233$i = 0, $$01233$i$be = 0, $$01238$i = 0, $$01238$i$be = 0, $$1$idx$val$i = 0, $$1$idx$val$i281 = 0;
 var $$1$idx1102$i = 0, $$1$idx1102$val$i = 0, $$1$idx1114$val$i = 0, $$1$idx1116$val$i = 0, $$1$idx1277$i = 0, $$1$idx1277$val$i = 0, $$1$idx1278$i = 0, $$1$idx1278$val$i = 0, $$1$idx1292$val$i = 0, $$1090$i = 0, $$1098$i = 0, $$11022$idx$val$i = 0, $$11022$idx1103$i = 0, $$11022$idx1103$val$i = 0, $$11022$idx1115$val$i = 0, $$11038$i = 0, $$11042$i = 0, $$11196$idx$val$i = 0, $$11196$idx1279$i = 0, $$11196$idx1279$val$i = 0;
 var $$11196$idx1280$i = 0, $$11196$idx1280$val$i = 0, $$11196$idx1291$val$i = 0, $$11196$idx1293$val$i = 0, $$11212$i = 0, $$11216$i = 0, $$1264$i = 0, $$1271$i = 0, $$13$i = 0, $$13$i288 = 0, $$131034$i = 0, $$131208$i = 0, $$31057$i = 0, $$31231$i = 0, $$41045$i = 0, $$41219$i = 0, $$51046$i = 0, $$51220$i = 0, $$8$i = 0, $$8$i285 = 0;
 var $$8$idx$val$i = 0, $$8$idx$val$i286 = 0, $$8$idx1100$val$i = 0, $$8$idx1104$val$i = 0, $$8$idx1106$val$i = 0, $$8$idx1109$val$i = 0, $$8$idx1111$val$i = 0, $$8$idx1113$val$i = 0, $$8$idx1273$val$i = 0, $$8$idx1274$val$i = 0, $$8$idx1284$val$i = 0, $$8$idx1287$val$i = 0, $$8$idx1290$val$i = 0, $$81029$i = 0, $$81029$idx$val$i = 0, $$81029$idx1101$i = 0, $$81029$idx1101$val$i = 0, $$81029$idx1105$val$i = 0, $$81029$idx1108$val$i = 0, $$81029$idx1112$val$i = 0;
 var $$81203$i = 0, $$81203$idx$val$i = 0, $$81203$idx1275$i = 0, $$81203$idx1275$val$i = 0, $$81203$idx1276$i = 0, $$81203$idx1276$val$i = 0, $$81203$idx1281$val$i = 0, $$81203$idx1283$val$i = 0, $$81203$idx1285$val$i = 0, $$81203$idx1286$val$i = 0, $$81203$idx1288$val$i = 0, $$idx$val = 0, $$idx$val$i = 0, $$idx$val$i282 = 0, $$idx$val$idx$i = 0, $$idx$val$idx$i283 = 0, $$idx$val$idx$val$i = 0, $$idx$val$idx$val$i284 = 0, $$idx$val$idx1099$i = 0, $$idx$val$idx1099$val$i = 0;
 var $$idx$val$idx1272$i = 0, $$idx$val$idx1272$val$i = 0, $$idx1118$val$i = 0, $$idx1119$val$i = 0, $$idx1295$val$i = 0, $$idx1296$val$i = 0, $$idx269$val = 0, $$idx270$val = 0, $$pre$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0;
 var $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0;
 var $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0;
 var $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0;
 var $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0;
 var $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0;
 var $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0;
 var $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0;
 var $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0;
 var $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0;
 var $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0;
 var $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0;
 var $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0;
 var $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0;
 var $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0;
 var $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0;
 var $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0;
 var $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0;
 var $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0;
 var $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0;
 var $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0;
 var $669 = 0, $67 = 0, $670 = 0, $671 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond1$i = 0;
 var $cond1$i290 = 0, $phitmp$i = 0, $trunc$i = 0, $trunc$i$clear = 0, $trunc$i289 = 0, $trunc$i289$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 40|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + ($1<<2)|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$6>>2] = 0;
 $8 = HEAP32[$2>>2]|0;
 $9 = ((($8)) + 40|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($1) + 1)|0;
 $12 = (($10) + ($11<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$12>>2] = 0;
 $14 = ((($7)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)>(0);
 if (!($16)) {
  _g_assertion_message_expr(0,140721,1252,140974,141019);
  // unreachable;
 }
 $17 = ((($13)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)>(0);
 if (!($19)) {
  _g_assertion_message_expr(0,140721,1255,140974,141032);
  // unreachable;
 }
 $20 = ((($7)) + 8|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($13)) + 8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (($21) + ($15))|0;
 $25 = ($24|0)==($23|0);
 if (!($25)) {
  _g_assertion_message_expr(0,140721,1262,140974,141045);
  // unreachable;
 }
 $26 = HEAP32[$2>>2]|0;
 $27 = ((($26)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($26)) + 28|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = (($18) + ($15))|0;
 $32 = (_g_slice_alloc0(16)|0);
 HEAP32[$32>>2] = $30;
 $33 = ((($32)) + 8|0);
 HEAP32[$33>>2] = $21;
 $34 = ((($32)) + 12|0);
 HEAP32[$34>>2] = $31;
 $35 = (($28) + ($1<<2)|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  $38 = ((($36)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ($39|0)==(0|0);
  if (!($40)) {
   _g_free($39);
  }
  _g_slice_free1(16,$36);
  HEAP32[$35>>2] = 0;
 }
 HEAP32[$35>>2] = $32;
 $41 = HEAP32[$2>>2]|0;
 $42 = ((($41)) + 40|0);
 $43 = ((($41)) + 44|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = HEAP32[$42>>2]|0;
 $46 = (($1) + 2)|0;
 $47 = (($44) - ($1))|0;
 $48 = (($47) + -2)|0;
 $49 = $11 << 2;
 $50 = (($45) + ($49)|0);
 $51 = $46 << 2;
 $52 = (($45) + ($51)|0);
 $53 = $48 << 2;
 _memmove(($50|0),($52|0),($53|0))|0;
 $54 = (($48) + ($11))|0;
 $55 = ($54|0)>($46|0);
 if ($55) {
  $56 = $54 << 2;
  $57 = (($45) + ($56)|0);
  HEAP8[$57>>0]=0&255;HEAP8[$57+1>>0]=(0>>8)&255;HEAP8[$57+2>>0]=(0>>16)&255;HEAP8[$57+3>>0]=0>>24;
 } else {
  _memset(($52|0),0,($53|0))|0;
 }
 $58 = HEAP32[$2>>2]|0;
 $59 = ((($58)) + 44|0);
 $60 = HEAP32[$59>>2]|0;
 $61 = (($60) + -1)|0;
 HEAP32[$59>>2] = $61;
 $$idx$val = HEAP32[$13>>2]|0;
 $$idx269$val = HEAP32[$22>>2]|0;
 $62 = (($$idx$val) + ($$idx269$val<<2)|0);
 $63 = HEAP32[$62>>2]|0;
 $64 = (_system_collections_generic_tim_sort_gallop_rightmost($0,$63,$7,0)|0);
 $65 = HEAP32[$20>>2]|0;
 $66 = (($65) + ($64))|0;
 HEAP32[$20>>2] = $66;
 $67 = HEAP32[$14>>2]|0;
 $68 = (($67) - ($64))|0;
 HEAP32[$14>>2] = $68;
 $69 = ($68|0)==(0);
 if ($69) {
  $70 = ((($13)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ($71|0)==(0|0);
  if (!($72)) {
   _g_free($71);
  }
  _g_slice_free1(16,$13);
  $73 = ((($7)) + 4|0);
  $74 = HEAP32[$73>>2]|0;
  $75 = ($74|0)==(0|0);
  if (!($75)) {
   _g_free($74);
  }
  _g_slice_free1(16,$7);
  return;
 }
 $$idx270$val = HEAP32[$7>>2]|0;
 $76 = (($66) + -1)|0;
 $77 = (($76) + ($68))|0;
 $78 = (($$idx270$val) + ($77<<2)|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = HEAP32[$17>>2]|0;
 $81 = (($80) + -1)|0;
 $82 = (_system_collections_generic_tim_sort_gallop_leftmost($0,$79,$13,$81)|0);
 HEAP32[$17>>2] = $82;
 $83 = ($82|0)==(0);
 if ($83) {
  $84 = ((($13)) + 4|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ($85|0)==(0|0);
  if (!($86)) {
   _g_free($85);
  }
  _g_slice_free1(16,$13);
  $87 = ((($7)) + 4|0);
  $88 = HEAP32[$87>>2]|0;
  $89 = ($88|0)==(0|0);
  if (!($89)) {
   _g_free($88);
  }
  _g_slice_free1(16,$7);
  return;
 }
 $90 = HEAP32[$14>>2]|0;
 $91 = ($90|0)>($82|0);
 $92 = ($90|0)>(0);
 if ($91) {
  if (!($92)) {
   _g_assertion_message_expr(0,140721,2546,141149,141019);
   // unreachable;
  }
  $373 = ($82|0)>(0);
  if (!($373)) {
   _g_assertion_message_expr(0,140721,2549,141149,141032);
   // unreachable;
  }
  $374 = HEAP32[$20>>2]|0;
  $375 = HEAP32[$22>>2]|0;
  $376 = (($374) + ($90))|0;
  $377 = ($376|0)==($375|0);
  if (!($377)) {
   _g_assertion_message_expr(0,140721,2556,141149,141045);
   // unreachable;
  }
  $378 = HEAP32[$2>>2]|0;
  $379 = ((($378)) + 52|0);
  $380 = HEAP32[$379>>2]|0;
  $381 = HEAP32[$13>>2]|0;
  $382 = (($381) + ($375<<2)|0);
  $383 = $82 << 2;
  $384 = (_g_memdup($382,$383)|0);
  $385 = ((($13)) + 4|0);
  HEAP32[$385>>2] = $384;
  HEAP32[$13>>2] = $384;
  HEAP32[$22>>2] = 0;
  $386 = HEAP32[$2>>2]|0;
  $387 = ((($386)) + 28|0);
  $388 = HEAP32[$387>>2]|0;
  $389 = (($82) + -1)|0;
  $390 = (($389) + ($375))|0;
  $391 = HEAP32[$14>>2]|0;
  $392 = (($391) + -1)|0;
  HEAP32[$14>>2] = $392;
  $393 = HEAP32[$7>>2]|0;
  $394 = HEAP32[$20>>2]|0;
  $395 = (($394) + ($392))|0;
  $396 = (($393) + ($395<<2)|0);
  $397 = HEAP32[$396>>2]|0;
  $398 = (($388) + ($390<<2)|0);
  HEAP32[$398>>2] = $397;
  $399 = ($392|0)==(0);
  $$pre$i = HEAP32[$17>>2]|0;
  do {
   if ($399) {
    $phitmp$i = ($$pre$i|0)>(-1);
    if (!($phitmp$i)) {
     _g_assertion_message_expr(0,140721,2626,141149,141135);
     // unreachable;
    }
   } else {
    $400 = ($$pre$i|0)==(1);
    if ($400) {
     $401 = ($391|0)>(0);
     if ($401) {
      break;
     }
     _g_assertion_message_expr(0,140721,2623,141149,141121);
     // unreachable;
    }
    $$0$i = $7;$$01195$i = $13;$$01211$i = $380;$$01215$i = $390;
    L59: while(1) {
     $$11196$idx1279$i = ((($$01195$i)) + 8|0);
     $$11196$idx1280$i = ((($$01195$i)) + 12|0);
     $$1$idx1277$i = ((($$0$i)) + 8|0);
     $$1$idx1278$i = ((($$0$i)) + 12|0);
     $$01233$i = 0;$$01238$i = 0;$$11216$i = $$01215$i;
     while(1) {
      $$11196$idx$val$i = HEAP32[$$01195$i>>2]|0;
      $$11196$idx1279$val$i = HEAP32[$$11196$idx1279$i>>2]|0;
      $$11196$idx1280$val$i = HEAP32[$$11196$idx1280$i>>2]|0;
      $425 = (($$11196$idx1279$val$i) + -1)|0;
      $426 = (($425) + ($$11196$idx1280$val$i))|0;
      $427 = (($$11196$idx$val$i) + ($426<<2)|0);
      $428 = HEAP32[$427>>2]|0;
      $$1$idx$val$i = HEAP32[$$0$i>>2]|0;
      $$1$idx1277$val$i = HEAP32[$$1$idx1277$i>>2]|0;
      $$1$idx1278$val$i = HEAP32[$$1$idx1278$i>>2]|0;
      $429 = (($$1$idx1277$val$i) + -1)|0;
      $430 = (($429) + ($$1$idx1278$val$i))|0;
      $431 = (($$1$idx$val$i) + ($430<<2)|0);
      $432 = HEAP32[$431>>2]|0;
      $$idx$val$i = HEAP32[$2>>2]|0;
      $$idx$val$idx$i = ((($$idx$val$i)) + 56|0);
      $$idx$val$idx$val$i = HEAP32[$$idx$val$idx$i>>2]|0;
      $$idx$val$idx1272$i = ((($$idx$val$i)) + 60|0);
      $$idx$val$idx1272$val$i = HEAP32[$$idx$val$idx1272$i>>2]|0;
      $433 = (ftCall_iiii($$idx$val$idx$val$i|0,$428,$432,$$idx$val$idx1272$val$i)|0);
      $434 = ($433|0)>(-1);
      $435 = HEAP32[$2>>2]|0;
      $436 = ((($435)) + 28|0);
      $437 = HEAP32[$436>>2]|0;
      $438 = (($$11216$i) + -1)|0;
      if ($434) {
       $466 = HEAP32[$$11196$idx1280$i>>2]|0;
       $467 = (($466) + -1)|0;
       HEAP32[$$11196$idx1280$i>>2] = $467;
       $468 = HEAP32[$$01195$i>>2]|0;
       $469 = HEAP32[$$11196$idx1279$i>>2]|0;
       $470 = (($469) + ($467))|0;
       $471 = (($468) + ($470<<2)|0);
       $472 = HEAP32[$471>>2]|0;
       $473 = (($437) + ($438<<2)|0);
       HEAP32[$473>>2] = $472;
       $474 = ($467|0)==(1);
       if ($474) {
        label = 138;
        break L59;
       }
       $502 = (($$01238$i) + 1)|0;
       $503 = ($502|0)<($$01211$i|0);
       if ($503) {
        $$01233$i$be = 0;$$01238$i$be = $502;
       } else {
        break;
       }
      } else {
       $439 = HEAP32[$$1$idx1278$i>>2]|0;
       $440 = (($439) + -1)|0;
       HEAP32[$$1$idx1278$i>>2] = $440;
       $441 = HEAP32[$$0$i>>2]|0;
       $442 = HEAP32[$$1$idx1277$i>>2]|0;
       $443 = (($442) + ($440))|0;
       $444 = (($441) + ($443<<2)|0);
       $445 = HEAP32[$444>>2]|0;
       $446 = (($437) + ($438<<2)|0);
       HEAP32[$446>>2] = $445;
       $447 = ($440|0)==(0);
       if ($447) {
        label = 129;
        break L59;
       }
       $464 = (($$01233$i) + 1)|0;
       $465 = ($464|0)<($$01211$i|0);
       if ($465) {
        $$01233$i$be = $464;$$01238$i$be = 0;
       } else {
        break;
       }
      }
      $$01233$i = $$01233$i$be;$$01238$i = $$01238$i$be;$$11216$i = $438;
     }
     $504 = (($$01211$i) + 1)|0;
     $$11212$i = $504;$$41219$i = $438;$$8$i = $$0$i;$$81203$i = $$01195$i;
     L70: while(1) {
      $505 = ($$11212$i|0)>(1);
      $$1264$i = $505&1;
      $506 = (($$11212$i) - ($$1264$i))|0;
      $507 = HEAP32[$2>>2]|0;
      $508 = ((($507)) + 52|0);
      HEAP32[$508>>2] = $506;
      $$81203$idx$val$i = HEAP32[$$81203$i>>2]|0;
      $$81203$idx1275$i = ((($$81203$i)) + 8|0);
      $$81203$idx1275$val$i = HEAP32[$$81203$idx1275$i>>2]|0;
      $$81203$idx1276$i = ((($$81203$i)) + 12|0);
      $$81203$idx1276$val$i = HEAP32[$$81203$idx1276$i>>2]|0;
      $509 = (($$81203$idx1275$val$i) + -1)|0;
      $510 = (($509) + ($$81203$idx1276$val$i))|0;
      $511 = (($$81203$idx$val$i) + ($510<<2)|0);
      $512 = HEAP32[$511>>2]|0;
      $513 = ((($$8$i)) + 12|0);
      $514 = HEAP32[$513>>2]|0;
      $515 = (($514) + -1)|0;
      $516 = (_system_collections_generic_tim_sort_gallop_rightmost($0,$512,$$8$i,$515)|0);
      $517 = HEAP32[$513>>2]|0;
      $518 = (($517) - ($516))|0;
      $519 = HEAP32[$2>>2]|0;
      $520 = ((($519)) + 28|0);
      $521 = HEAP32[$520>>2]|0;
      $522 = ((($$8$i)) + 8|0);
      $523 = HEAP32[$522>>2]|0;
      $524 = (($523) + ($516))|0;
      $525 = (($$41219$i) - ($518))|0;
      $$8$idx1290$val$i = HEAP32[$$8$i>>2]|0;
      $526 = (($521) + ($525<<2)|0);
      $527 = (($$8$idx1290$val$i) + ($524<<2)|0);
      $528 = $518 << 2;
      _memmove(($526|0),($527|0),($528|0))|0;
      $529 = HEAP32[$513>>2]|0;
      $530 = (($529) - ($518))|0;
      HEAP32[$513>>2] = $530;
      $531 = ($530|0)==(0);
      do {
       if ($531) {
        $532 = HEAP32[$$81203$idx1276$i>>2]|0;
        $533 = ($532|0)>(-1);
        if (!($533)) {
         label = 150;
         break L59;
        }
        $534 = HEAP32[$2>>2]|0;
        $535 = ((($534)) + 28|0);
        $536 = HEAP32[$535>>2]|0;
        $537 = HEAP32[$$81203$idx1275$i>>2]|0;
        $538 = (($525) - ($532))|0;
        $$81203$idx1288$val$i = HEAP32[$$81203$i>>2]|0;
        $539 = (($536) + ($538<<2)|0);
        $540 = (($$81203$idx1288$val$i) + ($537<<2)|0);
        $541 = $532 << 2;
        _memmove(($539|0),($540|0),($541|0))|0;
        $542 = ($$8$i|0)==(0|0);
        if (!($542)) {
         $543 = ((($$8$i)) + 4|0);
         $544 = HEAP32[$543>>2]|0;
         $545 = ($544|0)==(0|0);
         if (!($545)) {
          _g_free($544);
         }
         _g_slice_free1(16,$$8$i);
        }
        $546 = ((($$81203$i)) + 4|0);
        $547 = HEAP32[$546>>2]|0;
        $548 = ($547|0)==(0|0);
        if (!($548)) {
         _g_free($547);
        }
        _g_slice_free1(16,$$81203$i);
        $$13$i = 0;$$131208$i = 0;$$31231$i = 1;$$51220$i = $525;
       } else {
        $549 = HEAP32[$2>>2]|0;
        $550 = ((($549)) + 28|0);
        $551 = HEAP32[$550>>2]|0;
        $552 = (($525) + -1)|0;
        $553 = HEAP32[$$81203$idx1276$i>>2]|0;
        $554 = (($553) + -1)|0;
        HEAP32[$$81203$idx1276$i>>2] = $554;
        $555 = HEAP32[$$81203$i>>2]|0;
        $556 = HEAP32[$$81203$idx1275$i>>2]|0;
        $557 = (($556) + ($554))|0;
        $558 = (($555) + ($557<<2)|0);
        $559 = HEAP32[$558>>2]|0;
        $560 = (($551) + ($552<<2)|0);
        HEAP32[$560>>2] = $559;
        $561 = ($554|0)==(1);
        if ($561) {
         $562 = HEAP32[$513>>2]|0;
         $563 = ($562|0)>(-1);
         if (!($563)) {
          label = 160;
          break L59;
         }
         $564 = HEAP32[$2>>2]|0;
         $565 = ((($564)) + 28|0);
         $566 = HEAP32[$565>>2]|0;
         $567 = HEAP32[$522>>2]|0;
         $568 = (($552) - ($562))|0;
         $$8$idx1287$val$i = HEAP32[$$8$i>>2]|0;
         $569 = (($566) + ($568<<2)|0);
         $570 = (($$8$idx1287$val$i) + ($567<<2)|0);
         $571 = $562 << 2;
         _memmove(($569|0),($570|0),($571|0))|0;
         $572 = HEAP32[$2>>2]|0;
         $573 = ((($572)) + 28|0);
         $574 = HEAP32[$573>>2]|0;
         $575 = HEAP32[$$81203$idx1275$i>>2]|0;
         $576 = HEAP32[$513>>2]|0;
         $577 = HEAP32[$$81203$idx1276$i>>2]|0;
         $578 = (($552) - ($576))|0;
         $579 = (($578) - ($577))|0;
         $$81203$idx1286$val$i = HEAP32[$$81203$i>>2]|0;
         $580 = (($574) + ($579<<2)|0);
         $581 = (($$81203$idx1286$val$i) + ($575<<2)|0);
         $582 = $577 << 2;
         _memmove(($580|0),($581|0),($582|0))|0;
         $583 = ((($$8$i)) + 4|0);
         $584 = HEAP32[$583>>2]|0;
         $585 = ($584|0)==(0|0);
         if (!($585)) {
          _g_free($584);
         }
         _g_slice_free1(16,$$8$i);
         $586 = ((($$81203$i)) + 4|0);
         $587 = HEAP32[$586>>2]|0;
         $588 = ($587|0)==(0|0);
         if (!($588)) {
          _g_free($587);
         }
         _g_slice_free1(16,$$81203$i);
         $$13$i = 0;$$131208$i = 0;$$31231$i = 1;$$51220$i = $552;
         break;
        }
        $$8$idx$val$i = HEAP32[$$8$i>>2]|0;
        $$8$idx1273$val$i = HEAP32[$522>>2]|0;
        $$8$idx1274$val$i = HEAP32[$513>>2]|0;
        $589 = (($$8$idx1273$val$i) + -1)|0;
        $590 = (($589) + ($$8$idx1274$val$i))|0;
        $591 = (($$8$idx$val$i) + ($590<<2)|0);
        $592 = HEAP32[$591>>2]|0;
        $593 = (($553) + -2)|0;
        $594 = (_system_collections_generic_tim_sort_gallop_leftmost($0,$592,$$81203$i,$593)|0);
        $595 = HEAP32[$$81203$idx1276$i>>2]|0;
        $596 = (($595) - ($594))|0;
        $597 = HEAP32[$2>>2]|0;
        $598 = ((($597)) + 28|0);
        $599 = HEAP32[$598>>2]|0;
        $600 = HEAP32[$$81203$idx1275$i>>2]|0;
        $601 = (($600) + ($594))|0;
        $602 = (($552) - ($596))|0;
        $$81203$idx1285$val$i = HEAP32[$$81203$i>>2]|0;
        $603 = (($599) + ($602<<2)|0);
        $604 = (($$81203$idx1285$val$i) + ($601<<2)|0);
        $605 = $596 << 2;
        _memmove(($603|0),($604|0),($605|0))|0;
        $606 = HEAP32[$$81203$idx1276$i>>2]|0;
        $607 = (($606) - ($596))|0;
        HEAP32[$$81203$idx1276$i>>2] = $607;
        $608 = ($607|0)<(2);
        if ($608) {
         $609 = HEAP32[$513>>2]|0;
         $610 = ($609|0)>(-1);
         if (!($610)) {
          label = 168;
          break L59;
         }
         $611 = ($607|0)>(-1);
         if (!($611)) {
          label = 170;
          break L59;
         }
         $612 = HEAP32[$2>>2]|0;
         $613 = ((($612)) + 28|0);
         $614 = HEAP32[$613>>2]|0;
         $615 = HEAP32[$522>>2]|0;
         $616 = (($602) - ($609))|0;
         $$8$idx1284$val$i = HEAP32[$$8$i>>2]|0;
         $617 = (($614) + ($616<<2)|0);
         $618 = (($$8$idx1284$val$i) + ($615<<2)|0);
         $619 = $609 << 2;
         _memmove(($617|0),($618|0),($619|0))|0;
         $620 = HEAP32[$2>>2]|0;
         $621 = ((($620)) + 28|0);
         $622 = HEAP32[$621>>2]|0;
         $623 = HEAP32[$$81203$idx1275$i>>2]|0;
         $624 = HEAP32[$513>>2]|0;
         $625 = HEAP32[$$81203$idx1276$i>>2]|0;
         $626 = (($602) - ($624))|0;
         $627 = (($626) - ($625))|0;
         $$81203$idx1283$val$i = HEAP32[$$81203$i>>2]|0;
         $628 = (($622) + ($627<<2)|0);
         $629 = (($$81203$idx1283$val$i) + ($623<<2)|0);
         $630 = $625 << 2;
         _memmove(($628|0),($629|0),($630|0))|0;
         $631 = ((($$8$i)) + 4|0);
         $632 = HEAP32[$631>>2]|0;
         $633 = ($632|0)==(0|0);
         if (!($633)) {
          _g_free($632);
         }
         _g_slice_free1(16,$$8$i);
         $634 = ((($$81203$i)) + 4|0);
         $635 = HEAP32[$634>>2]|0;
         $636 = ($635|0)==(0|0);
         if (!($636)) {
          _g_free($635);
         }
         _g_slice_free1(16,$$81203$i);
         $$13$i = 0;$$131208$i = 0;$$31231$i = 1;$$51220$i = $602;
         break;
        }
        $637 = HEAP32[$2>>2]|0;
        $638 = ((($637)) + 28|0);
        $639 = HEAP32[$638>>2]|0;
        $640 = (($602) + -1)|0;
        $641 = HEAP32[$513>>2]|0;
        $642 = (($641) + -1)|0;
        HEAP32[$513>>2] = $642;
        $643 = HEAP32[$$8$i>>2]|0;
        $644 = HEAP32[$522>>2]|0;
        $645 = (($644) + ($642))|0;
        $646 = (($643) + ($645<<2)|0);
        $647 = HEAP32[$646>>2]|0;
        $648 = (($639) + ($640<<2)|0);
        HEAP32[$648>>2] = $647;
        $649 = ($642|0)==(0);
        if (!($649)) {
         $666 = ($518|0)>(6);
         $667 = ($596|0)>(6);
         $668 = $666 | $667;
         $$1271$i = $668 ? 0 : 13;
         $$13$i = $$8$i;$$131208$i = $$81203$i;$$31231$i = $$1271$i;$$51220$i = $640;
         break;
        }
        $650 = HEAP32[$$81203$idx1276$i>>2]|0;
        $651 = ($650|0)>(-1);
        if (!($651)) {
         label = 178;
         break L59;
        }
        $652 = HEAP32[$2>>2]|0;
        $653 = ((($652)) + 28|0);
        $654 = HEAP32[$653>>2]|0;
        $655 = HEAP32[$$81203$idx1275$i>>2]|0;
        $656 = (($640) - ($650))|0;
        $$81203$idx1281$val$i = HEAP32[$$81203$i>>2]|0;
        $657 = (($654) + ($656<<2)|0);
        $658 = (($$81203$idx1281$val$i) + ($655<<2)|0);
        $659 = $650 << 2;
        _memmove(($657|0),($658|0),($659|0))|0;
        $660 = ((($$8$i)) + 4|0);
        $661 = HEAP32[$660>>2]|0;
        $662 = ($661|0)==(0|0);
        if (!($662)) {
         _g_free($661);
        }
        _g_slice_free1(16,$$8$i);
        $663 = ((($$81203$i)) + 4|0);
        $664 = HEAP32[$663>>2]|0;
        $665 = ($664|0)==(0|0);
        if (!($665)) {
         _g_free($664);
        }
        _g_slice_free1(16,$$81203$i);
        $$13$i = 0;$$131208$i = 0;$$31231$i = 1;$$51220$i = $640;
       }
      } while(0);
      $trunc$i = $$31231$i&255;
      $trunc$i$clear = $trunc$i & 15;
      switch ($trunc$i$clear<<24>>24) {
      case 0:  {
       $$11212$i = $506;$$41219$i = $$51220$i;$$8$i = $$13$i;$$81203$i = $$131208$i;
       break;
      }
      case 13:  {
       label = 186;
       break L70;
       break;
      }
      default: {
       label = 187;
       break L70;
      }
      }
     }
     if ((label|0) == 186) {
      label = 0;
      $669 = (($506) + 1)|0;
      $670 = HEAP32[$2>>2]|0;
      $671 = ((($670)) + 52|0);
      HEAP32[$671>>2] = $669;
      $$01211$i$be = $669;
     }
     else if ((label|0) == 187) {
      label = 0;
      $cond1$i = ($$31231$i|0)==(0);
      if ($cond1$i) {
       $$01211$i$be = $506;
      } else {
       label = 189;
       break;
      }
     }
     $$0$i = $$13$i;$$01195$i = $$131208$i;$$01211$i = $$01211$i$be;$$01215$i = $$51220$i;
    }
    if ((label|0) == 129) {
     $448 = HEAP32[$$11196$idx1280$i>>2]|0;
     $449 = ($448|0)>(-1);
     if (!($449)) {
      _g_assertion_message_expr(0,140721,2726,141149,141135);
      // unreachable;
     }
     $450 = HEAP32[$2>>2]|0;
     $451 = ((($450)) + 28|0);
     $452 = HEAP32[$451>>2]|0;
     $453 = HEAP32[$$11196$idx1279$i>>2]|0;
     $454 = (($438) - ($448))|0;
     $$11196$idx1293$val$i = HEAP32[$$01195$i>>2]|0;
     $455 = (($452) + ($454<<2)|0);
     $456 = (($$11196$idx1293$val$i) + ($453<<2)|0);
     $457 = $448 << 2;
     _memmove(($455|0),($456|0),($457|0))|0;
     $458 = ((($$0$i)) + 4|0);
     $459 = HEAP32[$458>>2]|0;
     $460 = ($459|0)==(0|0);
     if (!($460)) {
      _g_free($459);
     }
     _g_slice_free1(16,$$0$i);
     $461 = ((($$01195$i)) + 4|0);
     $462 = HEAP32[$461>>2]|0;
     $463 = ($462|0)==(0|0);
     if (!($463)) {
      _g_free($462);
     }
     _g_slice_free1(16,$$01195$i);
     return;
    }
    else if ((label|0) == 138) {
     $475 = HEAP32[$$1$idx1278$i>>2]|0;
     $476 = ($475|0)>(-1);
     if (!($476)) {
      _g_assertion_message_expr(0,140721,2812,141149,141121);
      // unreachable;
     }
     $477 = HEAP32[$2>>2]|0;
     $478 = ((($477)) + 28|0);
     $479 = HEAP32[$478>>2]|0;
     $480 = HEAP32[$$1$idx1277$i>>2]|0;
     $481 = (($438) - ($475))|0;
     $$1$idx1292$val$i = HEAP32[$$0$i>>2]|0;
     $482 = (($479) + ($481<<2)|0);
     $483 = (($$1$idx1292$val$i) + ($480<<2)|0);
     $484 = $475 << 2;
     _memmove(($482|0),($483|0),($484|0))|0;
     $485 = HEAP32[$2>>2]|0;
     $486 = ((($485)) + 28|0);
     $487 = HEAP32[$486>>2]|0;
     $488 = HEAP32[$$11196$idx1279$i>>2]|0;
     $489 = HEAP32[$$1$idx1278$i>>2]|0;
     $490 = HEAP32[$$11196$idx1280$i>>2]|0;
     $491 = (($438) - ($489))|0;
     $492 = (($491) - ($490))|0;
     $$11196$idx1291$val$i = HEAP32[$$01195$i>>2]|0;
     $493 = (($487) + ($492<<2)|0);
     $494 = (($$11196$idx1291$val$i) + ($488<<2)|0);
     $495 = $490 << 2;
     _memmove(($493|0),($494|0),($495|0))|0;
     $496 = ((($$0$i)) + 4|0);
     $497 = HEAP32[$496>>2]|0;
     $498 = ($497|0)==(0|0);
     if (!($498)) {
      _g_free($497);
     }
     _g_slice_free1(16,$$0$i);
     $499 = ((($$01195$i)) + 4|0);
     $500 = HEAP32[$499>>2]|0;
     $501 = ($500|0)==(0|0);
     if (!($501)) {
      _g_free($500);
     }
     _g_slice_free1(16,$$01195$i);
     return;
    }
    else if ((label|0) == 150) {
     _g_assertion_message_expr(0,140721,2994,141149,141135);
     // unreachable;
    }
    else if ((label|0) == 160) {
     _g_assertion_message_expr(0,140721,3060,141149,141121);
     // unreachable;
    }
    else if ((label|0) == 168) {
     _g_assertion_message_expr(0,140721,3147,141149,141121);
     // unreachable;
    }
    else if ((label|0) == 170) {
     _g_assertion_message_expr(0,140721,3150,141149,141135);
     // unreachable;
    }
    else if ((label|0) == 178) {
     _g_assertion_message_expr(0,140721,3219,141149,141135);
     // unreachable;
    }
    else if ((label|0) == 189) {
     return;
    }
   }
  } while(0);
  $402 = HEAP32[$2>>2]|0;
  $403 = ((($402)) + 28|0);
  $404 = HEAP32[$403>>2]|0;
  $405 = (($390) - ($392))|0;
  $$idx1296$val$i = HEAP32[$7>>2]|0;
  $406 = (($404) + ($405<<2)|0);
  $407 = (($$idx1296$val$i) + ($394<<2)|0);
  $408 = $392 << 2;
  _memmove(($406|0),($407|0),($408|0))|0;
  $409 = HEAP32[$2>>2]|0;
  $410 = ((($409)) + 28|0);
  $411 = HEAP32[$410>>2]|0;
  $412 = HEAP32[$22>>2]|0;
  $413 = HEAP32[$14>>2]|0;
  $414 = HEAP32[$17>>2]|0;
  $415 = (($390) - ($413))|0;
  $416 = (($415) - ($414))|0;
  $$idx1295$val$i = HEAP32[$13>>2]|0;
  $417 = (($411) + ($416<<2)|0);
  $418 = (($$idx1295$val$i) + ($412<<2)|0);
  $419 = $414 << 2;
  _memmove(($417|0),($418|0),($419|0))|0;
  $420 = ((($7)) + 4|0);
  $421 = HEAP32[$420>>2]|0;
  $422 = ($421|0)==(0|0);
  if (!($422)) {
   _g_free($421);
  }
  _g_slice_free1(16,$7);
  $423 = HEAP32[$385>>2]|0;
  $424 = ($423|0)==(0|0);
  if (!($424)) {
   _g_free($423);
  }
  _g_slice_free1(16,$13);
  return;
 } else {
  if (!($92)) {
   _g_assertion_message_expr(0,140721,1846,141075,141019);
   // unreachable;
  }
  $93 = ($82|0)>(0);
  if (!($93)) {
   _g_assertion_message_expr(0,140721,1849,141075,141032);
   // unreachable;
  }
  $94 = HEAP32[$20>>2]|0;
  $95 = HEAP32[$22>>2]|0;
  $96 = (($94) + ($90))|0;
  $97 = ($96|0)==($95|0);
  if (!($97)) {
   _g_assertion_message_expr(0,140721,1856,141075,141045);
   // unreachable;
  }
  $98 = HEAP32[$2>>2]|0;
  $99 = ((($98)) + 52|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = HEAP32[$7>>2]|0;
  $102 = (($101) + ($94<<2)|0);
  $103 = $90 << 2;
  $104 = (_g_memdup($102,$103)|0);
  $105 = ((($7)) + 4|0);
  HEAP32[$105>>2] = $104;
  HEAP32[$7>>2] = $104;
  HEAP32[$20>>2] = 0;
  $106 = HEAP32[$2>>2]|0;
  $107 = ((($106)) + 28|0);
  $108 = HEAP32[$107>>2]|0;
  $109 = (($94) + 1)|0;
  $110 = HEAP32[$17>>2]|0;
  $111 = (($110) + -1)|0;
  HEAP32[$17>>2] = $111;
  $112 = HEAP32[$13>>2]|0;
  $113 = HEAP32[$22>>2]|0;
  $114 = (($113) + 1)|0;
  HEAP32[$22>>2] = $114;
  $115 = (($112) + ($113<<2)|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = (($108) + ($94<<2)|0);
  HEAP32[$117>>2] = $116;
  $118 = HEAP32[$14>>2]|0;
  $119 = ($118|0)==(1);
  do {
   if ($119) {
    $122 = ($110|0)>(0);
    if (!($122)) {
     _g_assertion_message_expr(0,140721,1918,141075,141135);
     // unreachable;
    }
   } else {
    $120 = ($111|0)==(0);
    if ($120) {
     $121 = ($118|0)>(-1);
     if ($121) {
      break;
     }
     _g_assertion_message_expr(0,140721,1915,141075,141121);
     // unreachable;
    }
    $$0$i279 = $7;$$01021$i = $13;$$01037$i = $100;$$01041$i = $109;
    L176: while(1) {
     $$11022$idx1103$i = ((($$01021$i)) + 8|0);
     $$1$idx1102$i = ((($$0$i279)) + 8|0);
     $144 = ((($$0$i279)) + 12|0);
     $145 = ((($$01021$i)) + 12|0);
     $$01059$i = 0;$$01064$i = 0;$$11042$i = $$01041$i;
     while(1) {
      $$11022$idx$val$i = HEAP32[$$01021$i>>2]|0;
      $$11022$idx1103$val$i = HEAP32[$$11022$idx1103$i>>2]|0;
      $146 = (($$11022$idx$val$i) + ($$11022$idx1103$val$i<<2)|0);
      $147 = HEAP32[$146>>2]|0;
      $$1$idx$val$i281 = HEAP32[$$0$i279>>2]|0;
      $$1$idx1102$val$i = HEAP32[$$1$idx1102$i>>2]|0;
      $148 = (($$1$idx$val$i281) + ($$1$idx1102$val$i<<2)|0);
      $149 = HEAP32[$148>>2]|0;
      $$idx$val$i282 = HEAP32[$2>>2]|0;
      $$idx$val$idx$i283 = ((($$idx$val$i282)) + 56|0);
      $$idx$val$idx$val$i284 = HEAP32[$$idx$val$idx$i283>>2]|0;
      $$idx$val$idx1099$i = ((($$idx$val$i282)) + 60|0);
      $$idx$val$idx1099$val$i = HEAP32[$$idx$val$idx1099$i>>2]|0;
      $150 = (ftCall_iiii($$idx$val$idx$val$i284|0,$147,$149,$$idx$val$idx1099$val$i)|0);
      $151 = ($150|0)>(-1);
      $152 = HEAP32[$2>>2]|0;
      $153 = ((($152)) + 28|0);
      $154 = HEAP32[$153>>2]|0;
      $155 = (($$11042$i) + 1)|0;
      if ($151) {
       $182 = HEAP32[$144>>2]|0;
       $183 = (($182) + -1)|0;
       HEAP32[$144>>2] = $183;
       $184 = HEAP32[$$0$i279>>2]|0;
       $185 = HEAP32[$$1$idx1102$i>>2]|0;
       $186 = (($185) + 1)|0;
       HEAP32[$$1$idx1102$i>>2] = $186;
       $187 = (($184) + ($185<<2)|0);
       $188 = HEAP32[$187>>2]|0;
       $189 = (($154) + ($$11042$i<<2)|0);
       HEAP32[$189>>2] = $188;
       $190 = ($183|0)==(1);
       if ($190) {
        label = 57;
        break L176;
       }
       $216 = (($$01059$i) + 1)|0;
       $217 = ($216|0)<($$01037$i|0);
       if ($217) {
        $$01059$i$be = $216;$$01064$i$be = 0;
       } else {
        break;
       }
      } else {
       $156 = HEAP32[$145>>2]|0;
       $157 = (($156) + -1)|0;
       HEAP32[$145>>2] = $157;
       $158 = HEAP32[$$01021$i>>2]|0;
       $159 = HEAP32[$$11022$idx1103$i>>2]|0;
       $160 = (($159) + 1)|0;
       HEAP32[$$11022$idx1103$i>>2] = $160;
       $161 = (($158) + ($159<<2)|0);
       $162 = HEAP32[$161>>2]|0;
       $163 = (($154) + ($$11042$i<<2)|0);
       HEAP32[$163>>2] = $162;
       $164 = ($157|0)==(0);
       if ($164) {
        label = 48;
        break L176;
       }
       $180 = (($$01064$i) + 1)|0;
       $181 = ($180|0)<($$01037$i|0);
       if ($181) {
        $$01059$i$be = 0;$$01064$i$be = $180;
       } else {
        break;
       }
      }
      $$01059$i = $$01059$i$be;$$01064$i = $$01064$i$be;$$11042$i = $155;
     }
     $218 = (($$01037$i) + 1)|0;
     $$11038$i = $218;$$41045$i = $155;$$8$i285 = $$0$i279;$$81029$i = $$01021$i;
     L187: while(1) {
      $219 = ($$11038$i|0)>(1);
      $$1090$i = $219&1;
      $220 = (($$11038$i) - ($$1090$i))|0;
      $221 = HEAP32[$2>>2]|0;
      $222 = ((($221)) + 52|0);
      HEAP32[$222>>2] = $220;
      $$81029$idx$val$i = HEAP32[$$81029$i>>2]|0;
      $$81029$idx1101$i = ((($$81029$i)) + 8|0);
      $$81029$idx1101$val$i = HEAP32[$$81029$idx1101$i>>2]|0;
      $223 = (($$81029$idx$val$i) + ($$81029$idx1101$val$i<<2)|0);
      $224 = HEAP32[$223>>2]|0;
      $225 = (_system_collections_generic_tim_sort_gallop_rightmost($0,$224,$$8$i285,0)|0);
      $226 = HEAP32[$2>>2]|0;
      $227 = ((($226)) + 28|0);
      $228 = HEAP32[$227>>2]|0;
      $229 = ((($$8$i285)) + 8|0);
      $230 = HEAP32[$229>>2]|0;
      $$8$idx1113$val$i = HEAP32[$$8$i285>>2]|0;
      $231 = (($228) + ($$41045$i<<2)|0);
      $232 = (($$8$idx1113$val$i) + ($230<<2)|0);
      $233 = $225 << 2;
      _memmove(($231|0),($232|0),($233|0))|0;
      $234 = (($225) + ($$41045$i))|0;
      $235 = HEAP32[$229>>2]|0;
      $236 = (($235) + ($225))|0;
      HEAP32[$229>>2] = $236;
      $237 = ((($$8$i285)) + 12|0);
      $238 = HEAP32[$237>>2]|0;
      $239 = (($238) - ($225))|0;
      HEAP32[$237>>2] = $239;
      $240 = ($239|0)<(2);
      do {
       if ($240) {
        $241 = ($239|0)>(-1);
        if (!($241)) {
         label = 69;
         break L176;
        }
        $242 = ((($$81029$i)) + 12|0);
        $243 = HEAP32[$242>>2]|0;
        $244 = ($243|0)>(-1);
        if (!($244)) {
         label = 71;
         break L176;
        }
        $245 = HEAP32[$2>>2]|0;
        $246 = ((($245)) + 28|0);
        $247 = HEAP32[$246>>2]|0;
        $248 = HEAP32[$$81029$idx1101$i>>2]|0;
        $$81029$idx1112$val$i = HEAP32[$$81029$i>>2]|0;
        $249 = (($247) + ($234<<2)|0);
        $250 = (($$81029$idx1112$val$i) + ($248<<2)|0);
        $251 = $243 << 2;
        _memmove(($249|0),($250|0),($251|0))|0;
        $252 = HEAP32[$2>>2]|0;
        $253 = ((($252)) + 28|0);
        $254 = HEAP32[$253>>2]|0;
        $255 = HEAP32[$229>>2]|0;
        $256 = HEAP32[$242>>2]|0;
        $257 = HEAP32[$237>>2]|0;
        $258 = (($256) + ($234))|0;
        $$8$idx1111$val$i = HEAP32[$$8$i285>>2]|0;
        $259 = (($254) + ($258<<2)|0);
        $260 = (($$8$idx1111$val$i) + ($255<<2)|0);
        $261 = $257 << 2;
        _memmove(($259|0),($260|0),($261|0))|0;
        $262 = ($$8$i285|0)==(0|0);
        if (!($262)) {
         $263 = ((($$8$i285)) + 4|0);
         $264 = HEAP32[$263>>2]|0;
         $265 = ($264|0)==(0|0);
         if (!($265)) {
          _g_free($264);
         }
         _g_slice_free1(16,$$8$i285);
        }
        $266 = ((($$81029$i)) + 4|0);
        $267 = HEAP32[$266>>2]|0;
        $268 = ($267|0)==(0|0);
        if (!($268)) {
         _g_free($267);
        }
        _g_slice_free1(16,$$81029$i);
        $$13$i288 = 0;$$131034$i = 0;$$31057$i = 1;$$51046$i = $234;
       } else {
        $269 = HEAP32[$2>>2]|0;
        $270 = ((($269)) + 28|0);
        $271 = HEAP32[$270>>2]|0;
        $272 = (($234) + 1)|0;
        $273 = ((($$81029$i)) + 12|0);
        $274 = HEAP32[$273>>2]|0;
        $275 = (($274) + -1)|0;
        HEAP32[$273>>2] = $275;
        $276 = HEAP32[$$81029$i>>2]|0;
        $277 = HEAP32[$$81029$idx1101$i>>2]|0;
        $278 = (($277) + 1)|0;
        HEAP32[$$81029$idx1101$i>>2] = $278;
        $279 = (($276) + ($277<<2)|0);
        $280 = HEAP32[$279>>2]|0;
        $281 = (($271) + ($234<<2)|0);
        HEAP32[$281>>2] = $280;
        $282 = ($275|0)==(0);
        if ($282) {
         $283 = HEAP32[$237>>2]|0;
         $284 = ($283|0)>(-1);
         if (!($284)) {
          label = 81;
          break L176;
         }
         $285 = HEAP32[$2>>2]|0;
         $286 = ((($285)) + 28|0);
         $287 = HEAP32[$286>>2]|0;
         $288 = (($287) + ($272<<2)|0);
         $289 = HEAP32[$229>>2]|0;
         $$8$idx1109$val$i = HEAP32[$$8$i285>>2]|0;
         $290 = (($$8$idx1109$val$i) + ($289<<2)|0);
         $291 = $283 << 2;
         _memmove(($288|0),($290|0),($291|0))|0;
         $292 = ((($$8$i285)) + 4|0);
         $293 = HEAP32[$292>>2]|0;
         $294 = ($293|0)==(0|0);
         if (!($294)) {
          _g_free($293);
         }
         _g_slice_free1(16,$$8$i285);
         $295 = ((($$81029$i)) + 4|0);
         $296 = HEAP32[$295>>2]|0;
         $297 = ($296|0)==(0|0);
         if (!($297)) {
          _g_free($296);
         }
         _g_slice_free1(16,$$81029$i);
         $$13$i288 = 0;$$131034$i = 0;$$31057$i = 1;$$51046$i = $272;
         break;
        }
        $$8$idx$val$i286 = HEAP32[$$8$i285>>2]|0;
        $$8$idx1100$val$i = HEAP32[$229>>2]|0;
        $298 = (($$8$idx$val$i286) + ($$8$idx1100$val$i<<2)|0);
        $299 = HEAP32[$298>>2]|0;
        $300 = (_system_collections_generic_tim_sort_gallop_leftmost($0,$299,$$81029$i,0)|0);
        $301 = HEAP32[$2>>2]|0;
        $302 = ((($301)) + 28|0);
        $303 = HEAP32[$302>>2]|0;
        $304 = HEAP32[$$81029$idx1101$i>>2]|0;
        $$81029$idx1108$val$i = HEAP32[$$81029$i>>2]|0;
        $305 = (($303) + ($272<<2)|0);
        $306 = (($$81029$idx1108$val$i) + ($304<<2)|0);
        $307 = $300 << 2;
        _memmove(($305|0),($306|0),($307|0))|0;
        $308 = (($300) + ($272))|0;
        $309 = HEAP32[$$81029$idx1101$i>>2]|0;
        $310 = (($309) + ($300))|0;
        HEAP32[$$81029$idx1101$i>>2] = $310;
        $311 = HEAP32[$273>>2]|0;
        $312 = (($311) - ($300))|0;
        HEAP32[$273>>2] = $312;
        $313 = ($312|0)==(0);
        if ($313) {
         $314 = HEAP32[$237>>2]|0;
         $315 = ($314|0)>(-1);
         if (!($315)) {
          label = 89;
          break L176;
         }
         $316 = HEAP32[$2>>2]|0;
         $317 = ((($316)) + 28|0);
         $318 = HEAP32[$317>>2]|0;
         $319 = (($318) + ($308<<2)|0);
         $320 = HEAP32[$229>>2]|0;
         $$8$idx1106$val$i = HEAP32[$$8$i285>>2]|0;
         $321 = (($$8$idx1106$val$i) + ($320<<2)|0);
         $322 = $314 << 2;
         _memmove(($319|0),($321|0),($322|0))|0;
         $323 = ((($$8$i285)) + 4|0);
         $324 = HEAP32[$323>>2]|0;
         $325 = ($324|0)==(0|0);
         if (!($325)) {
          _g_free($324);
         }
         _g_slice_free1(16,$$8$i285);
         $326 = ((($$81029$i)) + 4|0);
         $327 = HEAP32[$326>>2]|0;
         $328 = ($327|0)==(0|0);
         if (!($328)) {
          _g_free($327);
         }
         _g_slice_free1(16,$$81029$i);
         $$13$i288 = 0;$$131034$i = 0;$$31057$i = 1;$$51046$i = $308;
         break;
        }
        $329 = HEAP32[$2>>2]|0;
        $330 = ((($329)) + 28|0);
        $331 = HEAP32[$330>>2]|0;
        $332 = (($308) + 1)|0;
        $333 = HEAP32[$237>>2]|0;
        $334 = (($333) + -1)|0;
        HEAP32[$237>>2] = $334;
        $335 = HEAP32[$$8$i285>>2]|0;
        $336 = HEAP32[$229>>2]|0;
        $337 = (($336) + 1)|0;
        HEAP32[$229>>2] = $337;
        $338 = (($335) + ($336<<2)|0);
        $339 = HEAP32[$338>>2]|0;
        $340 = (($331) + ($308<<2)|0);
        HEAP32[$340>>2] = $339;
        $341 = ($334|0)==(1);
        if (!($341)) {
         $367 = ($225|0)>(6);
         $368 = ($300|0)>(6);
         $369 = $367 | $368;
         $$1098$i = $369 ? 0 : 13;
         $$13$i288 = $$8$i285;$$131034$i = $$81029$i;$$31057$i = $$1098$i;$$51046$i = $332;
         break;
        }
        $342 = HEAP32[$273>>2]|0;
        $343 = ($342|0)>(-1);
        if (!($343)) {
         label = 97;
         break L176;
        }
        $344 = HEAP32[$2>>2]|0;
        $345 = ((($344)) + 28|0);
        $346 = HEAP32[$345>>2]|0;
        $347 = HEAP32[$$81029$idx1101$i>>2]|0;
        $$81029$idx1105$val$i = HEAP32[$$81029$i>>2]|0;
        $348 = (($346) + ($332<<2)|0);
        $349 = (($$81029$idx1105$val$i) + ($347<<2)|0);
        $350 = $342 << 2;
        _memmove(($348|0),($349|0),($350|0))|0;
        $351 = HEAP32[$2>>2]|0;
        $352 = ((($351)) + 28|0);
        $353 = HEAP32[$352>>2]|0;
        $354 = HEAP32[$229>>2]|0;
        $355 = HEAP32[$273>>2]|0;
        $356 = HEAP32[$237>>2]|0;
        $357 = (($355) + ($332))|0;
        $$8$idx1104$val$i = HEAP32[$$8$i285>>2]|0;
        $358 = (($353) + ($357<<2)|0);
        $359 = (($$8$idx1104$val$i) + ($354<<2)|0);
        $360 = $356 << 2;
        _memmove(($358|0),($359|0),($360|0))|0;
        $361 = ((($$8$i285)) + 4|0);
        $362 = HEAP32[$361>>2]|0;
        $363 = ($362|0)==(0|0);
        if (!($363)) {
         _g_free($362);
        }
        _g_slice_free1(16,$$8$i285);
        $364 = ((($$81029$i)) + 4|0);
        $365 = HEAP32[$364>>2]|0;
        $366 = ($365|0)==(0|0);
        if (!($366)) {
         _g_free($365);
        }
        _g_slice_free1(16,$$81029$i);
        $$13$i288 = 0;$$131034$i = 0;$$31057$i = 1;$$51046$i = $332;
       }
      } while(0);
      $trunc$i289 = $$31057$i&255;
      $trunc$i289$clear = $trunc$i289 & 15;
      switch ($trunc$i289$clear<<24>>24) {
      case 0:  {
       $$11038$i = $220;$$41045$i = $$51046$i;$$8$i285 = $$13$i288;$$81029$i = $$131034$i;
       break;
      }
      case 13:  {
       label = 105;
       break L187;
       break;
      }
      default: {
       label = 106;
       break L187;
      }
      }
     }
     if ((label|0) == 105) {
      label = 0;
      $370 = (($220) + 1)|0;
      $371 = HEAP32[$2>>2]|0;
      $372 = ((($371)) + 52|0);
      HEAP32[$372>>2] = $370;
      $$01037$i$be = $370;
     }
     else if ((label|0) == 106) {
      label = 0;
      $cond1$i290 = ($$31057$i|0)==(0);
      if ($cond1$i290) {
       $$01037$i$be = $220;
      } else {
       label = 189;
       break;
      }
     }
     $$0$i279 = $$13$i288;$$01021$i = $$131034$i;$$01037$i = $$01037$i$be;$$01041$i = $$51046$i;
    }
    if ((label|0) == 48) {
     $165 = HEAP32[$144>>2]|0;
     $166 = ($165|0)>(-1);
     if (!($166)) {
      _g_assertion_message_expr(0,140721,2005,141075,141121);
      // unreachable;
     }
     $167 = HEAP32[$2>>2]|0;
     $168 = ((($167)) + 28|0);
     $169 = HEAP32[$168>>2]|0;
     $170 = (($169) + ($155<<2)|0);
     $171 = HEAP32[$$1$idx1102$i>>2]|0;
     $$1$idx1116$val$i = HEAP32[$$0$i279>>2]|0;
     $172 = (($$1$idx1116$val$i) + ($171<<2)|0);
     $173 = $165 << 2;
     _memmove(($170|0),($172|0),($173|0))|0;
     $174 = ((($$0$i279)) + 4|0);
     $175 = HEAP32[$174>>2]|0;
     $176 = ($175|0)==(0|0);
     if (!($176)) {
      _g_free($175);
     }
     _g_slice_free1(16,$$0$i279);
     $177 = ((($$01021$i)) + 4|0);
     $178 = HEAP32[$177>>2]|0;
     $179 = ($178|0)==(0|0);
     if (!($179)) {
      _g_free($178);
     }
     _g_slice_free1(16,$$01021$i);
     return;
    }
    else if ((label|0) == 57) {
     $191 = HEAP32[$145>>2]|0;
     $192 = ($191|0)>(-1);
     if (!($192)) {
      _g_assertion_message_expr(0,140721,2087,141075,141135);
      // unreachable;
     }
     $193 = HEAP32[$2>>2]|0;
     $194 = ((($193)) + 28|0);
     $195 = HEAP32[$194>>2]|0;
     $196 = HEAP32[$$11022$idx1103$i>>2]|0;
     $$11022$idx1115$val$i = HEAP32[$$01021$i>>2]|0;
     $197 = (($195) + ($155<<2)|0);
     $198 = (($$11022$idx1115$val$i) + ($196<<2)|0);
     $199 = $191 << 2;
     _memmove(($197|0),($198|0),($199|0))|0;
     $200 = HEAP32[$2>>2]|0;
     $201 = ((($200)) + 28|0);
     $202 = HEAP32[$201>>2]|0;
     $203 = HEAP32[$$1$idx1102$i>>2]|0;
     $204 = HEAP32[$145>>2]|0;
     $205 = HEAP32[$144>>2]|0;
     $206 = (($204) + ($155))|0;
     $$1$idx1114$val$i = HEAP32[$$0$i279>>2]|0;
     $207 = (($202) + ($206<<2)|0);
     $208 = (($$1$idx1114$val$i) + ($203<<2)|0);
     $209 = $205 << 2;
     _memmove(($207|0),($208|0),($209|0))|0;
     $210 = ((($$0$i279)) + 4|0);
     $211 = HEAP32[$210>>2]|0;
     $212 = ($211|0)==(0|0);
     if (!($212)) {
      _g_free($211);
     }
     _g_slice_free1(16,$$0$i279);
     $213 = ((($$01021$i)) + 4|0);
     $214 = HEAP32[$213>>2]|0;
     $215 = ($214|0)==(0|0);
     if (!($215)) {
      _g_free($214);
     }
     _g_slice_free1(16,$$01021$i);
     return;
    }
    else if ((label|0) == 69) {
     _g_assertion_message_expr(0,140721,2230,141075,141121);
     // unreachable;
    }
    else if ((label|0) == 71) {
     _g_assertion_message_expr(0,140721,2233,141075,141135);
     // unreachable;
    }
    else if ((label|0) == 81) {
     _g_assertion_message_expr(0,140721,2290,141075,141121);
     // unreachable;
    }
    else if ((label|0) == 89) {
     _g_assertion_message_expr(0,140721,2361,141075,141121);
     // unreachable;
    }
    else if ((label|0) == 97) {
     _g_assertion_message_expr(0,140721,2424,141075,141135);
     // unreachable;
    }
    else if ((label|0) == 189) {
     return;
    }
   }
  } while(0);
  $123 = HEAP32[$2>>2]|0;
  $124 = ((($123)) + 28|0);
  $125 = HEAP32[$124>>2]|0;
  $$idx1119$val$i = HEAP32[$13>>2]|0;
  $126 = (($125) + ($109<<2)|0);
  $127 = (($$idx1119$val$i) + ($114<<2)|0);
  $128 = $111 << 2;
  _memmove(($126|0),($127|0),($128|0))|0;
  $129 = HEAP32[$2>>2]|0;
  $130 = ((($129)) + 28|0);
  $131 = HEAP32[$130>>2]|0;
  $132 = HEAP32[$20>>2]|0;
  $133 = HEAP32[$17>>2]|0;
  $134 = HEAP32[$14>>2]|0;
  $135 = (($133) + ($109))|0;
  $$idx1118$val$i = HEAP32[$7>>2]|0;
  $136 = (($131) + ($135<<2)|0);
  $137 = (($$idx1118$val$i) + ($132<<2)|0);
  $138 = $134 << 2;
  _memmove(($136|0),($137|0),($138|0))|0;
  $139 = HEAP32[$105>>2]|0;
  $140 = ($139|0)==(0|0);
  if (!($140)) {
   _g_free($139);
  }
  _g_slice_free1(16,$7);
  $141 = ((($13)) + 4|0);
  $142 = HEAP32[$141>>2]|0;
  $143 = ($142|0)==(0|0);
  if (!($143)) {
   _g_free($142);
  }
  _g_slice_free1(16,$13);
  return;
 }
}
function _system_collections_generic_tim_sort_gallop_rightmost($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0358$lcssa = 0, $$0358408 = 0, $$0358408$phi = 0, $$0359$lcssa = 0, $$0359407 = 0, $$2$lcssa = 0, $$2398 = 0, $$2398$phi = 0, $$3362$lcssa = 0, $$3362397 = 0, $$4 = 0, $$5$lcssa = 0, $$5395 = 0, $$6 = 0, $$6365 = 0, $$7366$lcssa = 0, $$7366394 = 0, $$8 = 0, $$idx$val = 0, $$idx$val$idx = 0;
 var $$idx$val$idx$val = 0, $$idx$val$idx387 = 0, $$idx$val$idx387$val = 0, $$idx381$val = 0, $$idx381$val$idx = 0, $$idx381$val$idx$val = 0, $$idx381$val$idx386 = 0, $$idx381$val$idx386$val = 0, $$idx382$val = 0, $$idx382$val$idx = 0, $$idx382$val$idx$val = 0, $$idx382$val$idx385 = 0, $$idx382$val$idx385$val = 0, $$idx383 = 0, $$idx383$val = 0, $$idx383$val$idx = 0, $$idx383$val$idx$val = 0, $$idx383$val$idx384 = 0, $$idx383$val$idx384$val = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 var $spec$select376 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(-1);
 if (!($4)) {
  _g_assertion_message_expr(0,140721,1612,141354,141248);
  // unreachable;
 }
 $5 = ((($2)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($3|0);
 if (!($7)) {
  _g_assertion_message_expr(0,140721,1616,141354,141258);
  // unreachable;
 }
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($3))|0;
 $11 = HEAP32[$2>>2]|0;
 $12 = (($11) + ($10<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $$idx383 = ((($0)) + 16|0);
 $$idx383$val = HEAP32[$$idx383>>2]|0;
 $$idx383$val$idx = ((($$idx383$val)) + 56|0);
 $$idx383$val$idx$val = HEAP32[$$idx383$val$idx>>2]|0;
 $$idx383$val$idx384 = ((($$idx383$val)) + 60|0);
 $$idx383$val$idx384$val = HEAP32[$$idx383$val$idx384>>2]|0;
 $14 = (ftCall_iiii($$idx383$val$idx$val|0,$13,$1,$$idx383$val$idx384$val)|0);
 $15 = ($14|0)>(0);
 if ($15) {
  $31 = (($3) + 1)|0;
  $32 = ($3|0)<(1);
  L9: do {
   if ($32) {
    $$2$lcssa = 0;$$3362$lcssa = 1;
   } else {
    $$2398 = 0;$$3362397 = 1;
    while(1) {
     $33 = HEAP32[$2>>2]|0;
     $34 = (($10) - ($$3362397))|0;
     $35 = (($33) + ($34<<2)|0);
     $36 = HEAP32[$35>>2]|0;
     $$idx381$val = HEAP32[$$idx383>>2]|0;
     $$idx381$val$idx = ((($$idx381$val)) + 56|0);
     $$idx381$val$idx$val = HEAP32[$$idx381$val$idx>>2]|0;
     $$idx381$val$idx386 = ((($$idx381$val)) + 60|0);
     $$idx381$val$idx386$val = HEAP32[$$idx381$val$idx386>>2]|0;
     $37 = (ftCall_iiii($$idx381$val$idx$val|0,$36,$1,$$idx381$val$idx386$val)|0);
     $38 = ($37|0)>(0);
     if (!($38)) {
      $$2$lcssa = $$2398;$$3362$lcssa = $$3362397;
      break L9;
     }
     $39 = $$3362397 << 1;
     $40 = $39 | 1;
     $41 = ($40|0)>($3|0);
     if ($41) {
      $$2$lcssa = $$3362397;$$3362$lcssa = $40;
      break;
     } else {
      $$2398$phi = $$3362397;$$3362397 = $40;$$2398 = $$2398$phi;
     }
    }
   }
  } while(0);
  $42 = ($$3362$lcssa|0)>($31|0);
  $spec$select376 = $42 ? $31 : $$3362$lcssa;
  $43 = (($3) - ($spec$select376))|0;
  $44 = (($3) - ($$2$lcssa))|0;
  $$4 = $43;$$6365 = $44;
 } else {
  $16 = HEAP32[$5>>2]|0;
  $17 = (($16) - ($3))|0;
  $18 = ($17|0)>(1);
  L16: do {
   if ($18) {
    $$0358408 = 0;$$0359407 = 1;
    while(1) {
     $19 = HEAP32[$2>>2]|0;
     $20 = (($$0359407) + ($10))|0;
     $21 = (($19) + ($20<<2)|0);
     $22 = HEAP32[$21>>2]|0;
     $$idx382$val = HEAP32[$$idx383>>2]|0;
     $$idx382$val$idx = ((($$idx382$val)) + 56|0);
     $$idx382$val$idx$val = HEAP32[$$idx382$val$idx>>2]|0;
     $$idx382$val$idx385 = ((($$idx382$val)) + 60|0);
     $$idx382$val$idx385$val = HEAP32[$$idx382$val$idx385>>2]|0;
     $23 = (ftCall_iiii($$idx382$val$idx$val|0,$22,$1,$$idx382$val$idx385$val)|0);
     $24 = ($23|0)>(0);
     if ($24) {
      $$0358$lcssa = $$0358408;$$0359$lcssa = $$0359407;
      break L16;
     }
     $25 = $$0359407 << 1;
     $26 = $25 | 1;
     $27 = ($26|0)<($17|0);
     if ($27) {
      $$0358408$phi = $$0359407;$$0359407 = $26;$$0358408 = $$0358408$phi;
     } else {
      $$0358$lcssa = $$0359407;$$0359$lcssa = $26;
      break;
     }
    }
   } else {
    $$0358$lcssa = 0;$$0359$lcssa = 1;
   }
  } while(0);
  $28 = ($$0359$lcssa|0)>($17|0);
  $spec$select = $28 ? $17 : $$0359$lcssa;
  $29 = (($$0358$lcssa) + ($3))|0;
  $30 = (($spec$select) + ($3))|0;
  $$4 = $29;$$6365 = $30;
 }
 $45 = ($$4|0)>(-2);
 if (!($45)) {
  _g_assertion_message_expr(0,140721,1763,141354,141274);
  // unreachable;
 }
 $46 = ($$4|0)<($$6365|0);
 if (!($46)) {
  _g_assertion_message_expr(0,140721,1766,141354,141292);
  // unreachable;
 }
 $47 = HEAP32[$5>>2]|0;
 $48 = ($$6365|0)>($47|0);
 if ($48) {
  _g_assertion_message_expr(0,140721,1770,141354,141313);
  // unreachable;
 }
 $49 = (($$4) + 1)|0;
 $50 = ($$6365|0)>($49|0);
 if ($50) {
  $$5395 = $49;$$7366394 = $$6365;
  while(1) {
   $51 = (($$7366394) - ($$5395))|0;
   $52 = $51 >> 1;
   $53 = (($52) + ($$5395))|0;
   $54 = HEAP32[$2>>2]|0;
   $55 = HEAP32[$8>>2]|0;
   $56 = (($55) + ($53))|0;
   $57 = (($54) + ($56<<2)|0);
   $58 = HEAP32[$57>>2]|0;
   $$idx$val = HEAP32[$$idx383>>2]|0;
   $$idx$val$idx = ((($$idx$val)) + 56|0);
   $$idx$val$idx$val = HEAP32[$$idx$val$idx>>2]|0;
   $$idx$val$idx387 = ((($$idx$val)) + 60|0);
   $$idx$val$idx387$val = HEAP32[$$idx$val$idx387>>2]|0;
   $59 = (ftCall_iiii($$idx$val$idx$val|0,$58,$1,$$idx$val$idx387$val)|0);
   $60 = ($59|0)>(0);
   $61 = (($53) + 1)|0;
   $$8 = $60 ? $53 : $$7366394;
   $$6 = $60 ? $$5395 : $61;
   $62 = ($$8|0)>($$6|0);
   if ($62) {
    $$5395 = $$6;$$7366394 = $$8;
   } else {
    $$5$lcssa = $$6;$$7366$lcssa = $$8;
    break;
   }
  }
 } else {
  $$5$lcssa = $49;$$7366$lcssa = $$6365;
 }
 $63 = ($$7366$lcssa|0)==($$5$lcssa|0);
 if ($63) {
  return ($$7366$lcssa|0);
 } else {
  _g_assertion_message_expr(0,140721,1817,141354,141332);
  // unreachable;
 }
 return (0)|0;
}
function _system_collections_generic_tim_sort_gallop_leftmost($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0358$lcssa = 0, $$0358411 = 0, $$0358411$phi = 0, $$0359$lcssa = 0, $$0359410 = 0, $$2$lcssa = 0, $$2401 = 0, $$2401$phi = 0, $$3362$lcssa = 0, $$3362400 = 0, $$4 = 0, $$5$lcssa = 0, $$5398 = 0, $$6 = 0, $$6365 = 0, $$7366$lcssa = 0, $$7366397 = 0, $$8 = 0, $$idx$val = 0, $$idx$val$idx = 0;
 var $$idx$val$idx$val = 0, $$idx$val$idx387 = 0, $$idx$val$idx387$val = 0, $$idx381$val = 0, $$idx381$val$idx = 0, $$idx381$val$idx$val = 0, $$idx381$val$idx386 = 0, $$idx381$val$idx386$val = 0, $$idx382$val = 0, $$idx382$val$idx = 0, $$idx382$val$idx$val = 0, $$idx382$val$idx385 = 0, $$idx382$val$idx385$val = 0, $$idx383 = 0, $$idx383$val = 0, $$idx383$val$idx = 0, $$idx383$val$idx$val = 0, $$idx383$val$idx384 = 0, $$idx383$val$idx384$val = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0;
 var $spec$select376 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)>(-1);
 if (!($4)) {
  _g_assertion_message_expr(0,140721,1371,141196,141248);
  // unreachable;
 }
 $5 = ((($2)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)>($3|0);
 if (!($7)) {
  _g_assertion_message_expr(0,140721,1375,141196,141258);
  // unreachable;
 }
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (($9) + ($3))|0;
 $11 = HEAP32[$2>>2]|0;
 $12 = (($11) + ($10<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $$idx383 = ((($0)) + 16|0);
 $$idx383$val = HEAP32[$$idx383>>2]|0;
 $$idx383$val$idx = ((($$idx383$val)) + 56|0);
 $$idx383$val$idx$val = HEAP32[$$idx383$val$idx>>2]|0;
 $$idx383$val$idx384 = ((($$idx383$val)) + 60|0);
 $$idx383$val$idx384$val = HEAP32[$$idx383$val$idx384>>2]|0;
 $14 = (ftCall_iiii($$idx383$val$idx$val|0,$13,$1,$$idx383$val$idx384$val)|0);
 $15 = ($14|0)>(-1);
 if ($15) {
  $31 = (($3) + 1)|0;
  $32 = ($3|0)<(1);
  L9: do {
   if ($32) {
    $$2$lcssa = 0;$$3362$lcssa = 1;
   } else {
    $$2401 = 0;$$3362400 = 1;
    while(1) {
     $33 = HEAP32[$2>>2]|0;
     $34 = (($10) - ($$3362400))|0;
     $35 = (($33) + ($34<<2)|0);
     $36 = HEAP32[$35>>2]|0;
     $$idx381$val = HEAP32[$$idx383>>2]|0;
     $$idx381$val$idx = ((($$idx381$val)) + 56|0);
     $$idx381$val$idx$val = HEAP32[$$idx381$val$idx>>2]|0;
     $$idx381$val$idx386 = ((($$idx381$val)) + 60|0);
     $$idx381$val$idx386$val = HEAP32[$$idx381$val$idx386>>2]|0;
     $37 = (ftCall_iiii($$idx381$val$idx$val|0,$36,$1,$$idx381$val$idx386$val)|0);
     $38 = ($37|0)>(-1);
     if (!($38)) {
      $$2$lcssa = $$2401;$$3362$lcssa = $$3362400;
      break L9;
     }
     $39 = $$3362400 << 1;
     $40 = $39 | 1;
     $41 = ($40|0)>($3|0);
     if ($41) {
      $$2$lcssa = $$3362400;$$3362$lcssa = $40;
      break;
     } else {
      $$2401$phi = $$3362400;$$3362400 = $40;$$2401 = $$2401$phi;
     }
    }
   }
  } while(0);
  $42 = ($$3362$lcssa|0)>($31|0);
  $spec$select376 = $42 ? $31 : $$3362$lcssa;
  $43 = (($3) - ($spec$select376))|0;
  $44 = (($3) - ($$2$lcssa))|0;
  $$4 = $43;$$6365 = $44;
 } else {
  $16 = HEAP32[$5>>2]|0;
  $17 = (($16) - ($3))|0;
  $18 = ($17|0)>(1);
  L16: do {
   if ($18) {
    $$0358411 = 0;$$0359410 = 1;
    while(1) {
     $19 = HEAP32[$2>>2]|0;
     $20 = (($$0359410) + ($10))|0;
     $21 = (($19) + ($20<<2)|0);
     $22 = HEAP32[$21>>2]|0;
     $$idx382$val = HEAP32[$$idx383>>2]|0;
     $$idx382$val$idx = ((($$idx382$val)) + 56|0);
     $$idx382$val$idx$val = HEAP32[$$idx382$val$idx>>2]|0;
     $$idx382$val$idx385 = ((($$idx382$val)) + 60|0);
     $$idx382$val$idx385$val = HEAP32[$$idx382$val$idx385>>2]|0;
     $23 = (ftCall_iiii($$idx382$val$idx$val|0,$22,$1,$$idx382$val$idx385$val)|0);
     $24 = ($23|0)>(-1);
     if ($24) {
      $$0358$lcssa = $$0358411;$$0359$lcssa = $$0359410;
      break L16;
     }
     $25 = $$0359410 << 1;
     $26 = $25 | 1;
     $27 = ($26|0)<($17|0);
     if ($27) {
      $$0358411$phi = $$0359410;$$0359410 = $26;$$0358411 = $$0358411$phi;
     } else {
      $$0358$lcssa = $$0359410;$$0359$lcssa = $26;
      break;
     }
    }
   } else {
    $$0358$lcssa = 0;$$0359$lcssa = 1;
   }
  } while(0);
  $28 = ($$0359$lcssa|0)>($17|0);
  $spec$select = $28 ? $17 : $$0359$lcssa;
  $29 = (($$0358$lcssa) + ($3))|0;
  $30 = (($spec$select) + ($3))|0;
  $$4 = $29;$$6365 = $30;
 }
 $45 = ($$4|0)>(-2);
 if (!($45)) {
  _g_assertion_message_expr(0,140721,1522,141196,141274);
  // unreachable;
 }
 $46 = ($$4|0)<($$6365|0);
 if (!($46)) {
  _g_assertion_message_expr(0,140721,1525,141196,141292);
  // unreachable;
 }
 $47 = HEAP32[$5>>2]|0;
 $48 = ($$6365|0)>($47|0);
 if ($48) {
  _g_assertion_message_expr(0,140721,1529,141196,141313);
  // unreachable;
 }
 $49 = (($$4) + 1)|0;
 $50 = ($$6365|0)>($49|0);
 if ($50) {
  $$5398 = $49;$$7366397 = $$6365;
  while(1) {
   $51 = (($$7366397) - ($$5398))|0;
   $52 = $51 >> 1;
   $53 = (($52) + ($$5398))|0;
   $54 = HEAP32[$2>>2]|0;
   $55 = HEAP32[$8>>2]|0;
   $56 = (($55) + ($53))|0;
   $57 = (($54) + ($56<<2)|0);
   $58 = HEAP32[$57>>2]|0;
   $$idx$val = HEAP32[$$idx383>>2]|0;
   $$idx$val$idx = ((($$idx$val)) + 56|0);
   $$idx$val$idx$val = HEAP32[$$idx$val$idx>>2]|0;
   $$idx$val$idx387 = ((($$idx$val)) + 60|0);
   $$idx$val$idx387$val = HEAP32[$$idx$val$idx387>>2]|0;
   $59 = (ftCall_iiii($$idx$val$idx$val|0,$58,$1,$$idx$val$idx387$val)|0);
   $60 = ($59|0)>(-1);
   $61 = (($53) + 1)|0;
   $$8 = $60 ? $53 : $$7366397;
   $$6 = $60 ? $$5398 : $61;
   $62 = ($$8|0)>($$6|0);
   if ($62) {
    $$5398 = $$6;$$7366397 = $$8;
   } else {
    $$5$lcssa = $$6;$$7366$lcssa = $$8;
    break;
   }
  }
 } else {
  $$5$lcssa = $49;$$7366$lcssa = $$6365;
 }
 $63 = ($$7366$lcssa|0)==($$5$lcssa|0);
 if ($63) {
  return ($$7366$lcssa|0);
 } else {
  _g_assertion_message_expr(0,140721,1576,141196,141332);
  // unreachable;
 }
 return (0)|0;
}
function _system_collections_generic_tim_sort_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37213] = $1;
 _g_type_class_add_private($0,64);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 523;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 524;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 525;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$13);
 return;
}
function _system_collections_generic_tim_sort_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148848)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140689,119736,0)|0);
  _g_once_init_leave(148848,$4);
 }
 $5 = HEAP32[37212]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_system_collections_generic_tim_sort_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148848)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,140689,119736,0)|0);
  _g_once_init_leave(148848,$7);
 }
 $8 = HEAP32[37212]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 140721;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 3650;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_tim_sort_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148848)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,140689,119736,0)|0);
  _g_once_init_leave(148848,$7);
 }
 $8 = HEAP32[37212]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 140721;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 3670;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_tim_sort_finalize($0) {
 $0 = $0|0;
 var $$011$i$i = 0, $$011$i$i15 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $exitcond$i$i16 = 0, $or$cond$i$i = 0, $or$cond12$i$i = 0, $or$cond12$i$i13 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148848)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140689,119736,0)|0);
  _g_once_init_leave(148848,$4);
 }
 $5 = HEAP32[37212]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 16|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ((($15)) + 20|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($15)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($16|0)!=(0|0);
 $22 = ($20|0)!=(0|0);
 $or$cond$i$i = $21 & $22;
 $23 = ($18|0)>(0);
 $or$cond12$i$i = $23 & $or$cond$i$i;
 if ($or$cond12$i$i) {
  $$011$i$i = 0;
  while(1) {
   $24 = (($16) + ($$011$i$i<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(0|0);
   if (!($26)) {
    ftCall_vi($20|0,$25);
   }
   $27 = (($$011$i$i) + 1)|0;
   $exitcond$i$i = ($27|0)==($18|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$011$i$i = $27;
   }
  }
 }
 _g_free($16);
 $28 = HEAP32[$7>>2]|0;
 $29 = ((($28)) + 16|0);
 HEAP32[$29>>2] = 0;
 $30 = ((($28)) + 40|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ((($28)) + 44|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($31|0)!=(0|0);
 $35 = ($33|0)>(0);
 $or$cond12$i$i13 = $34 & $35;
 if (!($or$cond12$i$i13)) {
  _g_free($31);
  $43 = HEAP32[$7>>2]|0;
  $44 = ((($43)) + 40|0);
  HEAP32[$44>>2] = 0;
  $45 = HEAP32[37213]|0;
  $46 = (_g_type_check_class_cast($45,80)|0);
  $47 = ((($45)) + 36|0);
  $48 = HEAP32[$47>>2]|0;
  ftCall_vi($48|0,$0);
  return;
 }
 $$011$i$i15 = 0;
 while(1) {
  $36 = (($31) + ($$011$i$i15<<2)|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ($37|0)==(0|0);
  if (!($38)) {
   $39 = ((($37)) + 4|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ($40|0)==(0|0);
   if (!($41)) {
    _g_free($40);
   }
   _g_slice_free1(16,$37);
  }
  $42 = (($$011$i$i15) + 1)|0;
  $exitcond$i$i16 = ($42|0)==($33|0);
  if ($exitcond$i$i16) {
   break;
  } else {
   $$011$i$i15 = $42;
  }
 }
 _g_free($31);
 $43 = HEAP32[$7>>2]|0;
 $44 = ((($43)) + 40|0);
 HEAP32[$44>>2] = 0;
 $45 = HEAP32[37213]|0;
 $46 = (_g_type_check_class_cast($45,80)|0);
 $47 = ((($45)) + 36|0);
 $48 = HEAP32[$47>>2]|0;
 ftCall_vi($48|0,$0);
 return;
}
function _jasmine_block_GetSpec($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = 0;
  return ($7|0);
 }
 $6 = (_g_object_ref($4)|0);
 $7 = $4;
 return ($7|0);
}
function _jasmine_block_construct($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$pre = 0, $$pre$phi44Z2D = 0, $$pre$phiZ2D = 0, $$pre42 = 0, $$pre43 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (_jasmine_executable_construct($0)|0);
 $6 = ($1|0)==(0|0);
 if ($6) {
  $13 = 0;
 } else {
  $7 = (_g_object_ref($1)|0);
  $13 = $1;
 }
 $8 = ((($5)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $14 = $9;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$8>>2]|0;
  HEAP32[$12>>2] = 0;
  $14 = $12;
 }
 HEAP32[$14>>2] = $13;
 $15 = ((($14)) + 12|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $$pre$phiZ2D = $15;$21 = $14;
 } else {
  $18 = ((($14)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  ftCall_vi($16|0,$19);
  $$pre = HEAP32[$8>>2]|0;
  $$pre43 = ((($$pre)) + 12|0);
  $$pre$phiZ2D = $$pre43;$21 = $$pre;
 }
 $20 = ((($21)) + 4|0);
 $22 = ((($21)) + 8|0);
 HEAP32[$20>>2] = $2;
 HEAP32[$22>>2] = $3;
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $23 = ($4|0)==(0|0);
 if ($23) {
  $26 = $21;$31 = 0;
 } else {
  $24 = (_g_object_ref($4)|0);
  $$pre42 = HEAP32[$8>>2]|0;
  $26 = $$pre42;$31 = $4;
 }
 $25 = ((($26)) + 16|0);
 $27 = HEAP32[$25>>2]|0;
 $28 = ($27|0)==(0|0);
 if ($28) {
  $$pre$phi44Z2D = $25;
  HEAP32[$$pre$phi44Z2D>>2] = $31;
  return ($5|0);
 }
 _g_object_unref($27);
 $29 = HEAP32[$8>>2]|0;
 $30 = ((($29)) + 16|0);
 HEAP32[$30>>2] = 0;
 $$pre$phi44Z2D = $30;
 HEAP32[$$pre$phi44Z2D>>2] = $31;
 return ($5|0);
}
function _jasmine_block_new($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_g_once_init_enter(148856)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_jasmine_executable_get_type()|0);
  $7 = (_g_type_register_static($6,141407,119772,0)|0);
  _g_once_init_leave(148856,$7);
 }
 $8 = HEAP32[37214]|0;
 $9 = (_jasmine_block_construct($8,$0,$1,$2,$3)|0);
 return ($9|0);
}
function _jasmine_block_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37215] = $1;
 _g_type_class_add_private($0,20);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 526;
 $3 = (_g_type_check_class_cast($0,80)|0);
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 527;
 return;
}
function _jasmine_block_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148856)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,141407,119772,0)|0);
  _g_once_init_leave(148856,$4);
 }
 $5 = HEAP32[37214]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _jasmine_block_real_Execute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($4)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 ftCall_vi($6|0,$8);
 ftCall_vi($1|0,$2);
 return;
}
function _jasmine_block_finalize($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre15 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148856)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,141407,119772,0)|0);
  _g_once_init_leave(148856,$4);
 }
 $5 = HEAP32[37214]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 12|0);
 $14 = HEAP32[$12>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$pre$phiZ2D = $12;$19 = $13;
 } else {
  $16 = ((($13)) + 8|0);
  $17 = HEAP32[$16>>2]|0;
  ftCall_vi($14|0,$17);
  $$pre = HEAP32[$7>>2]|0;
  $$pre15 = ((($$pre)) + 12|0);
  $$pre$phiZ2D = $$pre15;$19 = $$pre;
 }
 $18 = ((($19)) + 4|0);
 HEAP32[$18>>2] = 0;
 $20 = ((($19)) + 8|0);
 HEAP32[$20>>2] = 0;
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $21 = ((($19)) + 16|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  $26 = HEAP32[37215]|0;
  $27 = (_g_type_check_class_cast($26,80)|0);
  $28 = ((($26)) + 36|0);
  $29 = HEAP32[$28>>2]|0;
  ftCall_vi($29|0,$0);
  return;
 }
 _g_object_unref($22);
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + 16|0);
 HEAP32[$25>>2] = 0;
 $26 = HEAP32[37215]|0;
 $27 = (_g_type_check_class_cast($26,80)|0);
 $28 = ((($26)) + 36|0);
 $29 = HEAP32[$28>>2]|0;
 ftCall_vi($29|0,$0);
 return;
}
function _jasmine_block_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148856)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37214]|0;
  return ($4|0);
 }
 $2 = (_jasmine_executable_get_type()|0);
 $3 = (_g_type_register_static($2,141407,119772,0)|0);
 _g_once_init_leave(148856,$3);
 $4 = HEAP32[37214]|0;
 return ($4|0);
}
function _jasmine_console_reporter_new() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148864)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_jasmine_reporter_get_type()|0);
  $3 = (_g_type_register_static($2,141420,119808,0)|0);
  _g_once_init_leave(148864,$3);
 }
 $4 = HEAP32[37216]|0;
 $5 = (_jasmine_reporter_construct($4)|0);
 return ($5|0);
}
function _jasmine_console_reporter_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37217] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 528;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 529;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 530;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 531;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 532;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 533;
 return;
}
function _jasmine_console_reporter_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_console_reporter_real_ReportRunnerStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select66 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_jasmine_runner_Specs($1)|0);
 $3 = (_system_collections_generic_collection_get_Count($2)|0);
 $4 = ($3|0)>(0);
 if ($4) {
  $spec$select66 = 0;
  while(1) {
   $5 = (_system_collections_generic_list_get($2,$spec$select66)|0);
   $6 = (_jasmine_spec_Queue($5)|0);
   _jasmine_runner_AddSpecs($1,$6);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    _g_object_unref($6);
   }
   $8 = ($5|0)==(0|0);
   if (!($8)) {
    _g_object_unref($5);
   }
   $spec$select = (($spec$select66) + 1)|0;
   $9 = (_system_collections_generic_collection_get_Count($2)|0);
   $10 = ($spec$select|0)<($9|0);
   if ($10) {
    $spec$select66 = $spec$select;
   } else {
    break;
   }
  }
 }
 $11 = ($2|0)==(0|0);
 if ($11) {
  return;
 }
 _g_object_unref($2);
 return;
}
function _jasmine_console_reporter_real_ReportRunnerResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(141575,$vararg_buffer);
 STACKTOP = sp;return;
}
function _jasmine_console_reporter_real_ReportSuiteResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(141538,$vararg_buffer);
 STACKTOP = sp;return;
}
function _jasmine_console_reporter_real_ReportSpecStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(141501,$vararg_buffer);
 STACKTOP = sp;return;
}
function _jasmine_console_reporter_real_ReportSpecResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(141465,$vararg_buffer);
 STACKTOP = sp;return;
}
function _jasmine_console_reporter_real_Log($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(141443,$vararg_buffer);
 STACKTOP = sp;return;
}
function _jasmine_executable_Execute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 96|0);
 $5 = HEAP32[$4>>2]|0;
 ftCall_viii($5|0,$0,$1,$2);
 return;
}
function _jasmine_executable_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _jasmine_executable_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37219] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 534;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 535;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 536;
 return;
}
function _jasmine_executable_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_executable_real_Execute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_executable_real_Results($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_nested_results_new()|0);
 return ($1|0);
}
function _jasmine_executable_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148872)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141613,119844,0)|0);
  _g_once_init_leave(148872,$4);
 }
 $5 = HEAP32[37218]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[$7>>2] = 0;
 }
 $10 = HEAP32[37219]|0;
 $11 = (_g_type_check_class_cast($10,80)|0);
 $12 = ((($10)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 ftCall_vi($13|0,$0);
 return;
}
function _jasmine_executable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148872)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37218]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,141613,119844,0)|0);
 _g_once_init_leave(148872,$3);
 $4 = HEAP32[37218]|0;
 return ($4|0);
}
function _jasmine_resultable_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _jasmine_resultable_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37221] = $1;
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 537;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 538;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 539;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_boolean(141649,141649,141649,0,227)|0);
 HEAP32[37222] = $9;
 _g_object_class_install_property($0,1,$9);
 return;
}
function _jasmine_resultable_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function __vala_jasmine_resultable_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148880)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141631,119880,0)|0);
  _g_once_init_leave(148880,$7);
 }
 $8 = HEAP32[37220]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(1);
 if ($cond) {
  $10 = ((($0)) + 36|0);
  $11 = HEAP32[$10>>2]|0;
  _g_value_set_boolean($2,$11);
  STACKTOP = sp;return;
 } else {
  $12 = ((($3)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$3>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = (_g_type_name($15)|0);
  $17 = HEAP32[$0>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer>>2] = 141657;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 486;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $16;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $19;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_jasmine_resultable_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148880)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141631,119880,0)|0);
  _g_once_init_leave(148880,$7);
 }
 $8 = HEAP32[37220]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(1);
 if ($cond) {
  $10 = (_g_value_get_boolean($2)|0);
  $11 = ((($0)) + 36|0);
  HEAP32[$11>>2] = $10;
  STACKTOP = sp;return;
 } else {
  $12 = ((($3)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$3>>2]|0;
  $15 = HEAP32[$14>>2]|0;
  $16 = (_g_type_name($15)|0);
  $17 = HEAP32[$0>>2]|0;
  $18 = HEAP32[$17>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer>>2] = 141657;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 500;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $16;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $19;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function _jasmine_resultable_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148880)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141631,119880,0)|0);
  _g_once_init_leave(148880,$4);
 }
 $5 = HEAP32[37220]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 _g_free($8);
 HEAP32[$7>>2] = 0;
 $9 = ((($0)) + 40|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  HEAP32[$9>>2] = 0;
 }
 $12 = HEAP32[37221]|0;
 $13 = (_g_type_check_class_cast($12,80)|0);
 $14 = ((($12)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$0);
 return;
}
function _jasmine_resultable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148880)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37220]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,141631,119880,0)|0);
 _g_once_init_leave(148880,$3);
 $4 = HEAP32[37220]|0;
 return ($4|0);
}
function _jasmine_resultable_set_Skipped($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 36|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _jasmine_reporter_ReportRunnerStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 96|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_ReportRunnerResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 100|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_ReportSuiteResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 104|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_ReportSpecStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_ReportSpecResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 112|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_Log($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 116|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _jasmine_reporter_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _jasmine_reporter_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37224] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 540;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 541;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 542;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 543;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 544;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 545;
 return;
}
function _jasmine_reporter_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_ReportRunnerStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_ReportRunnerResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_ReportSuiteResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_ReportSpecStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_ReportSpecResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_real_Log($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_reporter_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148892)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37223]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,141687,119916,0)|0);
 _g_once_init_leave(148892,$3);
 $4 = HEAP32[37223]|0;
 return ($4|0);
}
function _jasmine_callback_wrapper_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37226] = $1;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 546;
 _g_type_class_add_private($0,12);
 return;
}
function _jasmine_callback_wrapper_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148900)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_g_type_fundamental_next()|0);
  $4 = (_g_type_register_fundamental($3,141703,119952,119988,0)|0);
  _g_once_init_leave(148900,$4);
 }
 $5 = HEAP32[37225]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 4|0);
 HEAP32[$8>>2] = 1;
 return;
}
function _jasmine_value_callback_wrapper_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _jasmine_value_callback_wrapper_free_value($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 4|0);
 $5 = (_g_atomic_int_dec_and_test($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$2);
 _g_type_free_instance($2);
 return;
}
function _jasmine_value_callback_wrapper_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = ((($3)) + 4|0);
  _g_atomic_int_inc($5);
  $$sink = $3;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 return;
}
function _jasmine_value_callback_wrapper_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _jasmine_value_callback_wrapper_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = (_g_type_name($8)|0);
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 141817;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 0;
  $10 = (_g_strconcat(141767,$vararg_buffer)|0);
  $$1 = $10;
  STACKTOP = sp;return ($$1|0);
 }
 $11 = HEAP32[$6>>2]|0;
 $12 = HEAP32[$0>>2]|0;
 $13 = (_g_value_type_compatible($11,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$4>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = 141841;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $19;
  $vararg_ptr8 = ((($vararg_buffer3)) + 12|0);
  HEAP32[$vararg_ptr8>>2] = 141817;
  $vararg_ptr9 = ((($vararg_buffer3)) + 16|0);
  HEAP32[$vararg_ptr9>>2] = 0;
  $20 = (_g_strconcat(141819,$vararg_buffer3)|0);
  $$1 = $20;
  STACKTOP = sp;return ($$1|0);
 } else {
  $21 = ((($4)) + 4|0);
  _g_atomic_int_inc($21);
  $22 = ((($0)) + 8|0);
  HEAP32[$22>>2] = $4;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _jasmine_value_callback_wrapper_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(141728,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = ((($10)) + 4|0);
    _g_atomic_int_inc($14);
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _jasmine_callback_wrapper_finalize($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre9 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148900)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_g_type_fundamental_next()|0);
  $4 = (_g_type_register_fundamental($3,141703,119952,119988,0)|0);
  _g_once_init_leave(148900,$4);
 }
 $5 = HEAP32[37225]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 _g_signal_handlers_destroy($0);
 $7 = ((($0)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$pre$phiZ2D = $9;$14 = $8;
  HEAP32[$14>>2] = 0;
  $15 = ((($14)) + 4|0);
  HEAP32[$15>>2] = 0;
  HEAP32[$$pre$phiZ2D>>2] = 0;
  return;
 }
 $12 = ((($8)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 ftCall_vi($10|0,$13);
 $$pre = HEAP32[$7>>2]|0;
 $$pre9 = ((($$pre)) + 8|0);
 $$pre$phiZ2D = $$pre9;$14 = $$pre;
 HEAP32[$14>>2] = 0;
 $15 = ((($14)) + 4|0);
 HEAP32[$15>>2] = 0;
 HEAP32[$$pre$phiZ2D>>2] = 0;
 return;
}
function _jasmine_callback_wrapper_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148900)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37225]|0;
  return ($4|0);
 }
 $2 = (_g_type_fundamental_next()|0);
 $3 = (_g_type_register_fundamental($2,141703,119952,119988,0)|0);
 _g_once_init_leave(148900,$3);
 $4 = HEAP32[37225]|0;
 return ($4|0);
}
function _jasmine_callback_wrapper_ref($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 _g_atomic_int_inc($1);
 return ($0|0);
}
function _jasmine_callback_wrapper_unref($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 $2 = (_g_atomic_int_dec_and_test($1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 ftCall_vi($6|0,$0);
 _g_type_free_instance($0);
 return;
}
function _jasmine_env_construct($0) {
 $0 = $0|0;
 var $$pre$phi27Z2D = 0, $$pre$phi28Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 $2 = (_jasmine_runner_new($1)|0);
 $3 = ((($1)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$pre$phiZ2D = $5;
 } else {
  _g_object_unref($6);
  $8 = HEAP32[$3>>2]|0;
  $9 = ((($8)) + 4|0);
  HEAP32[$9>>2] = 0;
  $$pre$phiZ2D = $9;
 }
 HEAP32[$$pre$phiZ2D>>2] = $2;
 $10 = (_jasmine_multi_reporter_new()|0);
 $11 = HEAP32[$3>>2]|0;
 $12 = ((($11)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  $$pre$phi27Z2D = $12;
 } else {
  _g_object_unref($13);
  $15 = HEAP32[$3>>2]|0;
  $16 = ((($15)) + 8|0);
  HEAP32[$16>>2] = 0;
  $$pre$phi27Z2D = $16;
 }
 HEAP32[$$pre$phi27Z2D>>2] = $10;
 $17 = (_system_collections_generic_array_list_new(64,335,336,432)|0);
 $18 = HEAP32[$3>>2]|0;
 $19 = ((($18)) + 24|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $$pre$phi28Z2D = $19;
  HEAP32[$$pre$phi28Z2D>>2] = $17;
  return ($1|0);
 }
 _g_object_unref($20);
 $22 = HEAP32[$3>>2]|0;
 $23 = ((($22)) + 24|0);
 HEAP32[$23>>2] = 0;
 $$pre$phi28Z2D = $23;
 HEAP32[$$pre$phi28Z2D>>2] = $17;
 return ($1|0);
}
function _jasmine_env_new() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148908)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_object_get_type()|0);
  $3 = (_g_type_register_static($2,141860,120024,0)|0);
  _g_once_init_leave(148908,$3);
 }
 $4 = HEAP32[37227]|0;
 $5 = (_jasmine_env_construct($4)|0);
 return ($5|0);
}
function _jasmine_env_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37228] = $1;
 _g_type_class_add_private($0,28);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 547;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 548;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 549;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_jasmine_spec_get_type()|0);
 $10 = (_g_param_spec_object(141871,141871,141871,$9,227)|0);
 HEAP32[37229] = $10;
 _g_object_class_install_property($0,1,$10);
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_jasmine_multi_reporter_get_type()|0);
 $13 = (_g_param_spec_object(141883,141883,141883,$12,225)|0);
 HEAP32[37230] = $13;
 _g_object_class_install_property($0,2,$13);
 return;
}
function _jasmine_env_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148908)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141860,120024,0)|0);
  _g_once_init_leave(148908,$4);
 }
 $5 = HEAP32[37227]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 12|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($6)) + 16|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($6)) + 20|0);
 HEAP32[$10>>2] = 0;
 return;
}
function __vala_jasmine_env_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148908)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141860,120024,0)|0);
  _g_once_init_leave(148908,$7);
 }
 $8 = HEAP32[37227]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = ((($0)) + 20|0);
  $11 = HEAP32[$10>>2]|0;
  _g_value_set_object($2,$11);
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $12 = ((($0)) + 16|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($13)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  _g_value_set_object($2,$15);
  STACKTOP = sp;return;
  break;
 }
 default: {
  $16 = ((($3)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = HEAP32[$3>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (_g_type_name($19)|0);
  $21 = HEAP32[$0>>2]|0;
  $22 = HEAP32[$21>>2]|0;
  $23 = (_g_type_name($22)|0);
  HEAP32[$vararg_buffer>>2] = 141892;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 743;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $17;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $20;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $23;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function __vala_jasmine_env_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148908)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141860,120024,0)|0);
  _g_once_init_leave(148908,$7);
 }
 $8 = HEAP32[37227]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(1);
 if (!($cond)) {
  $17 = ((($3)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$3>>2]|0;
  $20 = HEAP32[$19>>2]|0;
  $21 = (_g_type_name($20)|0);
  $22 = HEAP32[$0>>2]|0;
  $23 = HEAP32[$22>>2]|0;
  $24 = (_g_type_name($23)|0);
  HEAP32[$vararg_buffer>>2] = 141892;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 757;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $18;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $21;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $24;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 $10 = (_g_value_get_object($2)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $16 = 0;
 } else {
  $12 = (_g_object_ref($10)|0);
  $16 = $10;
 }
 $13 = ((($0)) + 20|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  _g_object_unref($14);
  HEAP32[$13>>2] = 0;
 }
 HEAP32[$13>>2] = $16;
 STACKTOP = sp;return;
}
function _jasmine_env_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148908)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141860,120024,0)|0);
  _g_once_init_leave(148908,$4);
 }
 $5 = HEAP32[37227]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[$7>>2] = 0;
 }
 $10 = ((($0)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $16 = $11;
 } else {
  _g_object_unref($12);
  $14 = HEAP32[$10>>2]|0;
  HEAP32[$14>>2] = 0;
  $16 = $14;
 }
 $15 = ((($16)) + 4|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $22 = $16;
 } else {
  _g_object_unref($17);
  $19 = HEAP32[$10>>2]|0;
  $20 = ((($19)) + 4|0);
  HEAP32[$20>>2] = 0;
  $22 = $19;
 }
 $21 = ((($22)) + 8|0);
 $23 = HEAP32[$21>>2]|0;
 $24 = ($23|0)==(0|0);
 if ($24) {
  $28 = $22;
 } else {
  _g_object_unref($23);
  $25 = HEAP32[$10>>2]|0;
  $26 = ((($25)) + 8|0);
  HEAP32[$26>>2] = 0;
  $28 = $25;
 }
 $27 = ((($28)) + 24|0);
 $29 = HEAP32[$27>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $33 = HEAP32[37228]|0;
  $34 = (_g_type_check_class_cast($33,80)|0);
  $35 = ((($33)) + 36|0);
  $36 = HEAP32[$35>>2]|0;
  ftCall_vi($36|0,$0);
  return;
 }
 _g_object_unref($29);
 $31 = HEAP32[$10>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $33 = HEAP32[37228]|0;
 $34 = (_g_type_check_class_cast($33,80)|0);
 $35 = ((($33)) + 36|0);
 $36 = HEAP32[$35>>2]|0;
 ftCall_vi($36|0,$0);
 return;
}
function _jasmine_env_NextSpecId($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 return ($4|0);
}
function _jasmine_env_NextSuiteId($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 HEAP32[$3>>2] = $5;
 return ($4|0);
}
function _jasmine_env_SpecFilter($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function _jasmine_env_AddReporter($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 _jasmine_multi_reporter_AddReporter($5,$1);
 return;
}
function _jasmine_env_get_Reporter($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _jasmine_env_Execute($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 _jasmine_runner_Execute($4);
 return;
}
function _jasmine_env_Describe($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$in = 0, $$in116 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = sp + 20|0;
 HEAP32[$4>>2] = 0;
 $5 = (_g_slice_alloc0(12)|0);
 HEAP32[$5>>2] = 1;
 $6 = (_g_object_ref($0)|0);
 $7 = ((($5)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_jasmine_suite_new($0,$1,$2,$3,$10)|0);
 $12 = HEAP32[$8>>2]|0;
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 do {
  if ($14) {
   $18 = $12;
   label = 5;
  } else {
   $15 = (_g_object_ref($13)|0);
   $16 = ($15|0)==(0|0);
   if ($16) {
    $$pre = HEAP32[$8>>2]|0;
    $18 = $$pre;
    label = 5;
    break;
   } else {
    _jasmine_suite_AddSuite($13,$11);
    $30 = $13;$55 = 0;
    break;
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $17 = ((($18)) + 4|0);
  $19 = HEAP32[$17>>2]|0;
  _jasmine_runner_AddSuite($19,$11);
  $30 = 0;$55 = 1;
 }
 $20 = ($11|0)==(0|0);
 if ($20) {
  $26 = 0;
 } else {
  $21 = (_g_object_ref($11)|0);
  $26 = $11;
 }
 $22 = HEAP32[$8>>2]|0;
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(0|0);
 if ($24) {
  $$in = $22;
 } else {
  _g_object_unref($23);
  $25 = HEAP32[$8>>2]|0;
  HEAP32[$25>>2] = 0;
  $$in = $25;
 }
 HEAP32[$$in>>2] = $26;
 $27 = ((($5)) + 8|0);
 HEAP32[$27>>2] = 0;
 ftCall_vi($2|0,$3);
 $28 = HEAP32[$4>>2]|0;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  if (!($55)) {
   _g_object_unref($30);
  }
  if (!($20)) {
   _g_object_unref($11);
  }
  $31 = (_g_atomic_int_dec_and_test($5)|0);
  $32 = ($31|0)==(0);
  if (!($32)) {
   $33 = HEAP32[$7>>2]|0;
   $34 = HEAP32[$27>>2]|0;
   $35 = ($34|0)==(0|0);
   if (!($35)) {
    _g_error_free($34);
    HEAP32[$27>>2] = 0;
   }
   $36 = ($33|0)==(0|0);
   if (!($36)) {
    _g_object_unref($33);
   }
   _g_slice_free1(12,$5);
  }
  $37 = ((($28)) + 8|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = HEAP32[$28>>2]|0;
  $40 = (_g_quark_to_string($39)|0);
  $41 = ((($28)) + 4|0);
  $42 = HEAP32[$41>>2]|0;
  HEAP32[$vararg_buffer>>2] = 141892;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 498;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $38;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $40;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $42;
  _g_log(0,8,143216,$vararg_buffer);
  _g_clear_error($4);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 if ($55) {
  $48 = 0;
 } else {
  $43 = (_g_object_ref($30)|0);
  $48 = $30;
 }
 $44 = HEAP32[$8>>2]|0;
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 if ($46) {
  $$in116 = $44;
 } else {
  _g_object_unref($45);
  $47 = HEAP32[$8>>2]|0;
  HEAP32[$47>>2] = 0;
  $$in116 = $47;
 }
 HEAP32[$$in116>>2] = $48;
 if (!($55)) {
  _g_object_unref($30);
 }
 $49 = (_g_atomic_int_dec_and_test($5)|0);
 $50 = ($49|0)==(0);
 if ($50) {
  $$0 = $11;
  STACKTOP = sp;return ($$0|0);
 }
 $51 = HEAP32[$7>>2]|0;
 $52 = HEAP32[$27>>2]|0;
 $53 = ($52|0)==(0|0);
 if (!($53)) {
  _g_error_free($52);
  HEAP32[$27>>2] = 0;
 }
 $54 = ($51|0)==(0|0);
 if (!($54)) {
  _g_object_unref($51);
 }
 _g_slice_free1(12,$5);
 $$0 = $11;
 STACKTOP = sp;return ($$0|0);
}
function _jasmine_env_It($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_jasmine_spec_new($0,$6,$1)|0);
 $8 = HEAP32[$4>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 _jasmine_suite_AddSpec($9,$7);
 $10 = ($7|0)==(0|0);
 if ($10) {
  $15 = 0;
 } else {
  $11 = (_g_object_ref($7)|0);
  $15 = $7;
 }
 $12 = ((($0)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  _g_object_unref($13);
  HEAP32[$12>>2] = 0;
 }
 HEAP32[$12>>2] = $15;
 $16 = (_jasmine_spec_Runs($7,$2,$3)|0);
 $17 = ($16|0)==(0|0);
 if ($17) {
  return ($7|0);
 }
 _g_object_unref($16);
 return ($7|0);
}
function _jasmine_env_CurrentRunner($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = 0;
  return ($7|0);
 }
 $6 = (_g_object_ref($4)|0);
 $7 = $4;
 return ($7|0);
}
function _jasmine_env_get_CurrentSpec($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _jasmine_env_set_CurrentSpec($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $7 = 0;
 } else {
  $3 = (_g_object_ref($1)|0);
  $7 = $1;
 }
 $4 = ((($0)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  HEAP32[$4>>2] = $7;
  return;
 }
 _g_object_unref($5);
 HEAP32[$4>>2] = 0;
 HEAP32[$4>>2] = $7;
 return;
}
function _jasmine_GetEnv() {
 var $$0 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37231]|0;
 $1 = ($0|0)==(0|0);
 if ($1) {
  label = 3;
 } else {
  $2 = (_g_object_ref($0)|0);
  $3 = ($2|0)==(0|0);
  if ($3) {
   label = 3;
  } else {
   $$0 = $0;
  }
 }
 if ((label|0) == 3) {
  $4 = (_jasmine_env_new()|0);
  $$0 = $4;
 }
 $5 = HEAP32[37231]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  _g_object_unref($5);
  HEAP32[37231] = 0;
 }
 HEAP32[37231] = $$0;
 $7 = ($$0|0)==(0|0);
 if ($7) {
  $9 = 0;
  return ($9|0);
 }
 $8 = (_g_object_ref($$0)|0);
 $9 = $$0;
 return ($9|0);
}
function _jasmine_It($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37231]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  label = 3;
 } else {
  $5 = (_g_object_ref($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   label = 3;
  } else {
   $$0$i = $3;
  }
 }
 if ((label|0) == 3) {
  $7 = (_jasmine_env_new()|0);
  $$0$i = $7;
 }
 $8 = HEAP32[37231]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[37231] = 0;
 }
 HEAP32[37231] = $$0$i;
 $10 = ($$0$i|0)==(0|0);
 if ($10) {
  $11 = (_jasmine_env_It(0,$0,$1,$2)|0);
  $15 = $11;
  return ($15|0);
 }
 $12 = (_g_object_ref($$0$i)|0);
 $13 = (_jasmine_env_It($$0$i,$0,$1,$2)|0);
 $14 = ($12|0)==(0|0);
 if ($14) {
  $15 = $13;
  return ($15|0);
 }
 _g_object_unref($12);
 $15 = $13;
 return ($15|0);
}
function _jasmine_Describe($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37231]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  label = 3;
 } else {
  $5 = (_g_object_ref($3)|0);
  $6 = ($5|0)==(0|0);
  if ($6) {
   label = 3;
  } else {
   $$0$i = $3;
  }
 }
 if ((label|0) == 3) {
  $7 = (_jasmine_env_new()|0);
  $$0$i = $7;
 }
 $8 = HEAP32[37231]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[37231] = 0;
 }
 HEAP32[37231] = $$0$i;
 $10 = ($$0$i|0)==(0|0);
 if ($10) {
  $11 = (_jasmine_env_Describe(0,$0,$1,$2)|0);
  $15 = $11;
  return ($15|0);
 }
 $12 = (_g_object_ref($$0$i)|0);
 $13 = (_jasmine_env_Describe($$0$i,$0,$1,$2)|0);
 $14 = ($12|0)==(0|0);
 if ($14) {
  $15 = $13;
  return ($15|0);
 }
 _g_object_unref($12);
 $15 = $13;
 return ($15|0);
}
function _jasmine_Expect($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[37231]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  label = 3;
 } else {
  $6 = (_g_object_ref($4)|0);
  $7 = ($6|0)==(0|0);
  if ($7) {
   label = 3;
  } else {
   $$0$i = $4;
  }
 }
 if ((label|0) == 3) {
  $8 = (_jasmine_env_new()|0);
  $$0$i = $8;
 }
 $9 = HEAP32[37231]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
  HEAP32[37231] = 0;
 }
 HEAP32[37231] = $$0$i;
 $11 = ($$0$i|0)==(0|0);
 if ($11) {
  $13 = 0;
 } else {
  $12 = (_g_object_ref($$0$i)|0);
  $13 = $$0$i;
 }
 $14 = (_jasmine_env_get_CurrentSpec($13)|0);
 $15 = (_jasmine_spec_Expect($14,$0,$1,$2,$3)|0);
 $16 = ($13|0)==(0|0);
 if ($16) {
  return ($15|0);
 }
 _g_object_unref($13);
 return ($15|0);
}
function _jasmine_matchers_construct($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$pre = 0, $$pre$phi59Z2D = 0, $$pre$phi60Z2D = 0, $$pre$phiZ2D = 0, $$pre57 = 0, $$pre58 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = (_object_construct($0)|0);
 $9 = ((($8)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 HEAP32[$10>>2] = $1;
 $11 = ((($10)) + 4|0);
 HEAP32[$11>>2] = $2;
 $12 = ((($10)) + 8|0);
 HEAP32[$12>>2] = $3;
 $13 = ($4|0)==(0|0);
 if ($13) {
  $16 = $10;$21 = 0;
 } else {
  $14 = (_g_object_ref($4)|0);
  $$pre = HEAP32[$9>>2]|0;
  $16 = $$pre;$21 = $4;
 }
 $15 = ((($16)) + 12|0);
 $17 = HEAP32[$15>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $$pre$phiZ2D = $15;$45 = $16;
 } else {
  _g_object_unref($17);
  $19 = HEAP32[$9>>2]|0;
  $20 = ((($19)) + 12|0);
  HEAP32[$20>>2] = 0;
  $$pre$phiZ2D = $20;$45 = $19;
 }
 HEAP32[$$pre$phiZ2D>>2] = $21;
 $22 = ($5|0)!=(0|0);
 $23 = ($2|0)!=(0|0);
 $or$cond = $23 & $22;
 if ($or$cond) {
  $24 = (ftCall_ii($2|0,$5)|0);
  $$pre57 = HEAP32[$9>>2]|0;
  $26 = $$pre57;$32 = $24;
 } else {
  $26 = $45;$32 = $5;
 }
 $25 = ((($26)) + 16|0);
 $27 = HEAP32[$25>>2]|0;
 $28 = ($27|0)==(0|0);
 $29 = ($3|0)==(0|0);
 $or$cond3 = $29 | $28;
 if ($or$cond3) {
  $$pre$phi59Z2D = $25;$46 = $26;
 } else {
  ftCall_vi($3|0,$27);
  $30 = HEAP32[$9>>2]|0;
  $31 = ((($30)) + 16|0);
  HEAP32[$31>>2] = 0;
  $$pre$phi59Z2D = $31;$46 = $30;
 }
 HEAP32[$$pre$phi59Z2D>>2] = $32;
 $33 = ($6|0)==(0|0);
 if ($33) {
  $36 = $46;$41 = 0;
 } else {
  $34 = (_g_object_ref($6)|0);
  $$pre58 = HEAP32[$9>>2]|0;
  $36 = $$pre58;$41 = $6;
 }
 $35 = ((($36)) + 20|0);
 $37 = HEAP32[$35>>2]|0;
 $38 = ($37|0)==(0|0);
 if ($38) {
  $$pre$phi60Z2D = $35;$43 = $36;
  HEAP32[$$pre$phi60Z2D>>2] = $41;
  $42 = ((($43)) + 24|0);
  HEAP32[$42>>2] = $7;
  $44 = ((($43)) + 28|0);
  HEAP32[$44>>2] = 0;
  return ($8|0);
 }
 _g_object_unref($37);
 $39 = HEAP32[$9>>2]|0;
 $40 = ((($39)) + 20|0);
 HEAP32[$40>>2] = 0;
 $$pre$phi60Z2D = $40;$43 = $39;
 HEAP32[$$pre$phi60Z2D>>2] = $41;
 $42 = ((($43)) + 24|0);
 HEAP32[$42>>2] = $7;
 $44 = ((($43)) + 28|0);
 HEAP32[$44>>2] = 0;
 return ($8|0);
}
function _jasmine_matchers_new($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_g_once_init_enter(148928)|0);
 $8 = ($7|0)==(0);
 if (!($8)) {
  $9 = (_object_get_type()|0);
  $10 = (_g_type_register_static($9,141921,120060,0)|0);
  _g_once_init_leave(148928,$10);
 }
 $11 = HEAP32[37232]|0;
 $12 = (_jasmine_matchers_construct($11,$0,$1,$2,$3,$4,$5,$6)|0);
 return ($12|0);
}
function _jasmine_matchers_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37233] = $1;
 _g_type_class_add_private($0,32);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 550;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 551;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 552;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_gtype(141937,141944,141944,4,234)|0);
 _g_object_class_install_property($0,1,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(141949,141960,141960,234)|0);
 _g_object_class_install_property($0,2,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(141969,141984,141984,234)|0);
 _g_object_class_install_property($0,3,$13);
 return;
}
function _jasmine_matchers_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148928)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141921,120060,0)|0);
  _g_once_init_leave(148928,$4);
 }
 $5 = HEAP32[37232]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_jasmine_matchers_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148928)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141921,120060,0)|0);
  _g_once_init_leave(148928,$7);
 }
 $8 = HEAP32[37232]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 141997;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 473;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 142921;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,142848,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_jasmine_matchers_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148928)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,141921,120060,0)|0);
  _g_once_init_leave(148928,$7);
 }
 $8 = HEAP32[37232]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 141997;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 493;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _jasmine_matchers_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148928)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,141921,120060,0)|0);
  _g_once_init_leave(148928,$4);
 }
 $5 = HEAP32[37232]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 16|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $24 = $15;
 } else {
  $18 = ((($15)) + 8|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ($19|0)==(0|0);
  if ($20) {
   $24 = $15;
  } else {
   ftCall_vi($19|0,$16);
   $21 = HEAP32[$7>>2]|0;
   $22 = ((($21)) + 16|0);
   HEAP32[$22>>2] = 0;
   $24 = $21;
  }
 }
 $23 = ((($24)) + 20|0);
 $25 = HEAP32[$23>>2]|0;
 $26 = ($25|0)==(0|0);
 if (!($26)) {
  _g_object_unref($25);
  $27 = HEAP32[$7>>2]|0;
  $28 = ((($27)) + 20|0);
  HEAP32[$28>>2] = 0;
 }
 $29 = ((($0)) + 20|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($30|0)==(0|0);
 if ($31) {
  $32 = HEAP32[37233]|0;
  $33 = (_g_type_check_class_cast($32,80)|0);
  $34 = ((($32)) + 36|0);
  $35 = HEAP32[$34>>2]|0;
  ftCall_vi($35|0,$0);
  return;
 }
 _g_object_unref($30);
 HEAP32[$29>>2] = 0;
 $32 = HEAP32[37233]|0;
 $33 = (_g_type_check_class_cast($32,80)|0);
 $34 = ((($32)) + 36|0);
 $35 = HEAP32[$34>>2]|0;
 ftCall_vi($35|0,$0);
 return;
}
function _jasmine_matchers_ToBe($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (_jasmine_matchers_IsEqual($1,$8,$4)|0);
 $10 = ($9|0)==(0);
 if ($10) {
  _g_print(142037,$vararg_buffer1);
  STACKTOP = sp;return ($9|0);
 } else {
  _g_print(142031,$vararg_buffer);
  STACKTOP = sp;return ($9|0);
 }
 return (0)|0;
}
function _jasmine_matchers_IsEqual($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$in = 0, $$mask = 0, $$unshifted = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = Math_fround(0), $22 = Math_fround(0), $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (($0) + -12)|0;
 $4 = $3 >>> 2;
 $5 = $3 << 30;
 $6 = $4 | $5;
 do {
  switch ($6|0) {
  case 2:  {
   $7 = ($1|0)==($2|0);
   $$0$in = $7;
   break;
  }
  case 0:  {
   $8 = $1;
   $9 = $2;
   $$unshifted = $9 ^ $8;
   $$mask = $$unshifted & 255;
   $10 = ($$mask|0)==(0);
   $$0$in = $10;
   break;
  }
  case 12:  {
   $11 = ($1|0)==($2|0);
   if ($11) {
    $$0$in = 1;
   } else {
    $12 = ($1|0)==(0|0);
    $13 = ($2|0)==(0|0);
    $or$cond$i = $12 | $13;
    if ($or$cond$i) {
     $$0$in = 0;
    } else {
     $14 = +HEAPF64[$1>>3];
     $15 = +HEAPF64[$2>>3];
     $16 = $14 == $15;
     $$0$in = $16;
    }
   }
   break;
  }
  case 9:  {
   $17 = ($1|0)==($2|0);
   $$0$in = $17;
   break;
  }
  case 11:  {
   $18 = ($1|0)==($2|0);
   if ($18) {
    $$0$in = 1;
   } else {
    $19 = ($1|0)==(0|0);
    $20 = ($2|0)==(0|0);
    $or$cond$i2 = $19 | $20;
    if ($or$cond$i2) {
     $$0$in = 0;
    } else {
     $21 = Math_fround(HEAPF32[$1>>2]);
     $22 = Math_fround(HEAPF32[$2>>2]);
     $23 = $21 == $22;
     $$0$in = $23;
    }
   }
   break;
  }
  case 3:  {
   $24 = ($1|0)==($2|0);
   $$0$in = $24;
   break;
  }
  case 7:  {
   $25 = ($1|0)==($2|0);
   $$0$in = $25;
   break;
  }
  case 5:  {
   $26 = ($1|0)==($2|0);
   $$0$in = $26;
   break;
  }
  case 17:  {
   $27 = (_object_get_type()|0);
   $28 = (_g_type_check_instance_cast($1,$27)|0);
   $29 = (_g_type_check_instance_cast($2,$27)|0);
   $30 = ($28|0)==($29|0);
   $$0$in = $30;
   break;
  }
  case 14:  {
   $31 = ($1|0)==($2|0);
   $$0$in = $31;
   break;
  }
  case 13:  {
   $32 = (_g_strcmp0($1,$2)|0);
   $33 = ($32|0)==(0);
   $$0$in = $33;
   break;
  }
  case 1:  {
   $34 = $1;
   $35 = $2;
   $36 = $35 ^ $34;
   $37 = $36 & 255;
   $38 = ($37|0)==(0);
   $$0$in = $38;
   break;
  }
  case 4:  {
   $39 = ($1|0)==($2|0);
   $$0$in = $39;
   break;
  }
  case 8:  {
   $40 = ($1|0)==($2|0);
   $$0$in = $40;
   break;
  }
  case 6:  {
   $41 = ($1|0)==($2|0);
   $$0$in = $41;
   break;
  }
  default: {
   _g_assertion_message_expr(0,141997,416,142043,0);
   // unreachable;
  }
  }
 } while(0);
 $$0 = $$0$in&1;
 return ($$0|0);
}
function _jasmine_multi_reporter_new() {
 var $$pre$phi$iZ2D = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148936)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_jasmine_reporter_get_type()|0);
  $3 = (_g_type_register_static($2,142068,120096,0)|0);
  _g_once_init_leave(148936,$3);
 }
 $4 = HEAP32[37234]|0;
 $5 = (_jasmine_reporter_construct($4)|0);
 $6 = (_jasmine_reporter_get_type()|0);
 $7 = (_system_collections_generic_array_list_new($6,337,338,432)|0);
 $8 = ((($5)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$pre$phi$iZ2D = $9;
  HEAP32[$$pre$phi$iZ2D>>2] = $7;
  return ($5|0);
 }
 _g_object_unref($10);
 $12 = HEAP32[$8>>2]|0;
 HEAP32[$12>>2] = 0;
 $$pre$phi$iZ2D = $12;
 HEAP32[$$pre$phi$iZ2D>>2] = $7;
 return ($5|0);
}
function _jasmine_multi_reporter_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37235] = $1;
 _g_type_class_add_private($0,4);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 553;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 554;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 555;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 556;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 557;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 558;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = ((($0)) + 36|0);
 HEAP32[$9>>2] = 559;
 return;
}
function _jasmine_multi_reporter_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148936)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_reporter_get_type()|0);
  $4 = (_g_type_register_static($3,142068,120096,0)|0);
  _g_once_init_leave(148936,$4);
 }
 $5 = HEAP32[37234]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _jasmine_multi_reporter_real_ReportRunnerStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_ReportRunnerStarting($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_real_ReportRunnerResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_ReportRunnerResults($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_real_ReportSuiteResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_ReportSuiteResults($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_real_ReportSpecStarting($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_ReportSpecStarting($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_real_ReportSpecResults($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_ReportSpecResults($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_real_Log($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_iterable_iterator($4)|0);
 $6 = (_system_collections_generic_iterator_next($5)|0);
 $7 = ($6|0)==(0);
 if (!($7)) {
  while(1) {
   $8 = (_system_collections_generic_iterator_get($5)|0);
   _jasmine_reporter_Log($8,$1);
   $9 = ($8|0)==(0|0);
   if (!($9)) {
    _g_object_unref($8);
   }
   $10 = (_system_collections_generic_iterator_next($5)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    break;
   }
  }
 }
 $12 = ($5|0)==(0|0);
 if ($12) {
  return;
 }
 _g_object_unref($5);
 return;
}
function _jasmine_multi_reporter_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148936)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_reporter_get_type()|0);
  $4 = (_g_type_register_static($3,142068,120096,0)|0);
  _g_once_init_leave(148936,$4);
 }
 $5 = HEAP32[37234]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
 }
 $12 = HEAP32[37235]|0;
 $13 = (_g_type_check_class_cast($12,80)|0);
 $14 = ((($12)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$0);
 return;
}
function _jasmine_multi_reporter_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148936)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37234]|0;
  return ($4|0);
 }
 $2 = (_jasmine_reporter_get_type()|0);
 $3 = (_g_type_register_static($2,142068,120096,0)|0);
 _g_once_init_leave(148936,$3);
 $4 = HEAP32[37234]|0;
 return ($4|0);
}
function _jasmine_multi_reporter_AddReporter($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 (_system_collections_generic_collection_Add($4,$1)|0);
 return;
}
function _jasmine_nested_results_new() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148944)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_jasmine_resultable_get_type()|0);
  $3 = (_g_type_register_static($2,142089,120132,0)|0);
  _g_once_init_leave(148944,$3);
 }
 $4 = HEAP32[37236]|0;
 $5 = (_jasmine_resultable_construct($4)|0);
 $6 = ((($5)) + 24|0);
 $7 = (_jasmine_resultable_get_type()|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 $8 = (_system_collections_generic_array_list_new($7,337,338,432)|0);
 $9 = ((($5)) + 40|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  HEAP32[$9>>2] = $8;
  return ($5|0);
 }
 _g_object_unref($10);
 HEAP32[$9>>2] = 0;
 HEAP32[$9>>2] = $8;
 return ($5|0);
}
function _jasmine_nested_results_class_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37237] = $1;
 return;
}
function _jasmine_nested_results_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _jasmine_queue_construct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_object_construct($0)|0);
 $3 = ($1|0)==(0|0);
 if ($3) {
  $10 = 0;
 } else {
  $4 = (_g_object_ref($1)|0);
  $10 = $1;
 }
 $5 = ((($2)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$in = $6;
 } else {
  _g_object_unref($7);
  $9 = HEAP32[$5>>2]|0;
  HEAP32[$9>>2] = 0;
  $$in = $9;
 }
 HEAP32[$$in>>2] = $10;
 $11 = (_system_collections_generic_array_list_new(20,0,0,432)|0);
 $12 = HEAP32[$5>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$pre$phiZ2D = $13;
 } else {
  _g_object_unref($14);
  $16 = HEAP32[$5>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
  $$pre$phiZ2D = $17;
 }
 HEAP32[$$pre$phiZ2D>>2] = $11;
 $18 = (_jasmine_executable_get_type()|0);
 $19 = (_system_collections_generic_array_list_new($18,337,338,432)|0);
 $20 = ((($2)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0|0);
 if ($22) {
  HEAP32[$20>>2] = $19;
  return ($2|0);
 }
 _g_object_unref($21);
 HEAP32[$20>>2] = 0;
 HEAP32[$20>>2] = $19;
 return ($2|0);
}
function _jasmine_queue_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148952)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142110,120168,0)|0);
  _g_once_init_leave(148952,$4);
 }
 $5 = HEAP32[37238]|0;
 $6 = (_jasmine_queue_construct($5,$0)|0);
 return ($6|0);
}
function _jasmine_queue_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37239] = $1;
 _g_type_class_add_private($0,48);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 560;
 return;
}
function _jasmine_queue_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148952)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142110,120168,0)|0);
  _g_once_init_leave(148952,$4);
 }
 $5 = HEAP32[37238]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($6)) + 12|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($6)) + 16|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($6)) + 20|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($6)) + 24|0);
 HEAP32[$12>>2] = 1;
 $13 = ((($6)) + 28|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($6)) + 32|0);
 HEAP32[$14>>2] = 1;
 return;
}
function _jasmine_queue_finalize($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre18 = 0, $$pre19 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148952)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142110,120168,0)|0);
  _g_once_init_leave(148952,$4);
 }
 $5 = HEAP32[37238]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $34 = $13;
 } else {
  _g_object_unref($14);
  $16 = HEAP32[$7>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
  $34 = $16;
 }
 $18 = ((($0)) + 20|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $22 = $34;
 } else {
  _g_object_unref($19);
  HEAP32[$18>>2] = 0;
  $$pre = HEAP32[$7>>2]|0;
  $22 = $$pre;
 }
 $21 = ((($22)) + 44|0);
 $23 = HEAP32[$21>>2]|0;
 $24 = ($23|0)==(0|0);
 if ($24) {
  $$pre$phiZ2D = $21;$28 = $22;
 } else {
  $25 = ((($22)) + 40|0);
  $26 = HEAP32[$25>>2]|0;
  ftCall_vi($23|0,$26);
  $$pre18 = HEAP32[$7>>2]|0;
  $$pre19 = ((($$pre18)) + 44|0);
  $$pre$phiZ2D = $$pre19;$28 = $$pre18;
 }
 $27 = ((($28)) + 36|0);
 HEAP32[$27>>2] = 0;
 $29 = ((($28)) + 40|0);
 HEAP32[$29>>2] = 0;
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $30 = HEAP32[37239]|0;
 $31 = (_g_type_check_class_cast($30,80)|0);
 $32 = ((($30)) + 36|0);
 $33 = HEAP32[$32>>2]|0;
 ftCall_vi($33|0,$0);
 return;
}
function _jasmine_queue_Copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select61 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_system_collections_generic_collection_get_Count($3)|0);
 $5 = ($4|0)>(0);
 if (!($5)) {
  return;
 }
 $6 = ((($1)) + 16|0);
 $7 = ((($0)) + 20|0);
 $8 = ((($0)) + 16|0);
 $spec$select61 = 0;
 while(1) {
  $9 = HEAP32[$2>>2]|0;
  $10 = (_system_collections_generic_list_get($9,$spec$select61)|0);
  $11 = HEAP32[$6>>2]|0;
  $12 = ((($11)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (_system_collections_generic_list_get($13,$spec$select61)|0);
  $15 = HEAP32[$7>>2]|0;
  (_system_collections_generic_collection_Add($15,$10)|0);
  $16 = HEAP32[$8>>2]|0;
  $17 = ((($16)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  (_system_collections_generic_collection_Add($18,$14)|0);
  $19 = ($10|0)==(0|0);
  if (!($19)) {
   _g_object_unref($10);
  }
  $spec$select = (($spec$select61) + 1)|0;
  $20 = HEAP32[$2>>2]|0;
  $21 = (_system_collections_generic_collection_get_Count($20)|0);
  $22 = ($spec$select|0)<($21|0);
  if ($22) {
   $spec$select61 = $spec$select;
  } else {
   break;
  }
 }
 return;
}
function _jasmine_queue_Add($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 (_system_collections_generic_collection_Add($4,$1)|0);
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $2;
 (_system_collections_generic_collection_Add($8,$9)|0);
 return;
}
function _jasmine_queue_InsertNext($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 12|0);
 $8 = HEAP32[$7>>2]|0;
 _system_collections_generic_list_Insert($4,$8,$1);
 $9 = HEAP32[$5>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($9)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $2;
 _system_collections_generic_list_Insert($11,$13,$14);
 $15 = HEAP32[$5>>2]|0;
 $16 = ((($15)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (($17) + 1)|0;
 HEAP32[$16>>2] = $18;
 return;
}
function _jasmine_queue_Start($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $$pre$phiZ2D = 0, $$pre18 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 44|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$pre$phiZ2D = $5;$11 = $4;
 } else {
  $8 = ((($4)) + 40|0);
  $9 = HEAP32[$8>>2]|0;
  ftCall_vi($6|0,$9);
  $$pre = HEAP32[$3>>2]|0;
  $$pre18 = ((($$pre)) + 44|0);
  $$pre$phiZ2D = $$pre18;$11 = $$pre;
 }
 $10 = ((($11)) + 36|0);
 $12 = ((($11)) + 40|0);
 HEAP32[$10>>2] = $1;
 HEAP32[$12>>2] = $2;
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $13 = ((($11)) + 20|0);
 HEAP32[$13>>2] = 1;
 _jasmine_queue_Next($0);
 return;
}
function _jasmine_queue_Next($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre140 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_system_collections_generic_collection_get_Count($2)|0);
 $4 = ($3|0)==(0);
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 if ($4) {
  $7 = ((($6)) + 20|0);
  HEAP32[$7>>2] = 0;
  STACKTOP = sp;return;
 }
 $8 = ((($6)) + 32|0);
 HEAP32[$8>>2] = 1;
 $11 = $6;$9 = $8;
 while(1) {
  HEAP32[$9>>2] = 0;
  $10 = ((($11)) + 8|0);
  $12 = HEAP32[$10>>2]|0;
  $13 = HEAP32[$1>>2]|0;
  $14 = (_system_collections_generic_collection_get_Count($13)|0);
  $15 = ($12|0)<($14|0);
  $16 = HEAP32[$5>>2]|0;
  do {
   if ($15) {
    $17 = ((($16)) + 16|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0);
    if ($19) {
     $28 = $16;
    } else {
     $20 = ((($16)) + 4|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ((($16)) + 8|0);
     $23 = HEAP32[$22>>2]|0;
     $24 = (_system_collections_generic_list_get($21,$23)|0);
     $25 = ($24|0)==(0|0);
     $26 = HEAP32[$5>>2]|0;
     if ($25) {
      $82 = $26;
      label = 25;
      break;
     } else {
      $28 = $26;
     }
    }
    $27 = ((($28)) + 24|0);
    HEAP32[$27>>2] = 1;
    $29 = ((($28)) + 28|0);
    HEAP32[$29>>2] = 0;
    $30 = (_jasmine_GetEnv()|0);
    $31 = HEAP32[$1>>2]|0;
    $32 = HEAP32[$5>>2]|0;
    $33 = ((($32)) + 8|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = (_system_collections_generic_list_get($31,$34)|0);
    $36 = (_jasmine_block_get_type()|0);
    $37 = (_g_type_check_instance_cast($35,$36)|0);
    $38 = (_jasmine_block_GetSpec($35)|0);
    $39 = ((($30)) + 20|0);
    $40 = HEAP32[$39>>2]|0;
    $41 = ($40|0)==(0|0);
    if (!($41)) {
     _g_object_unref($40);
     HEAP32[$39>>2] = 0;
    }
    HEAP32[$39>>2] = $38;
    $42 = ($37|0)==(0|0);
    if (!($42)) {
     _g_object_unref($35);
    }
    _g_object_unref($30);
    $43 = HEAP32[$1>>2]|0;
    $44 = HEAP32[$5>>2]|0;
    $45 = ((($44)) + 8|0);
    $46 = HEAP32[$45>>2]|0;
    $47 = (_system_collections_generic_list_get($43,$46)|0);
    $48 = (_g_type_check_instance_cast($47,$36)|0);
    $49 = (_jasmine_block_GetSpec($47)|0);
    $50 = (_jasmine_spec_GetFullName($49)|0);
    HEAP32[$vararg_buffer>>2] = $50;
    _g_print(142123,$vararg_buffer);
    _g_free($50);
    $51 = ($49|0)==(0|0);
    if (!($51)) {
     _g_object_unref($49);
    }
    $52 = ($48|0)==(0|0);
    if (!($52)) {
     _g_object_unref($47);
    }
    $53 = HEAP32[$1>>2]|0;
    $54 = HEAP32[$5>>2]|0;
    $55 = ((($54)) + 8|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = (_system_collections_generic_list_get($53,$56)|0);
    _jasmine_executable_Execute($57,561,$0);
    $58 = ($57|0)==(0|0);
    if (!($58)) {
     _g_object_unref($57);
    }
    $59 = HEAP32[$5>>2]|0;
    $60 = ((($59)) + 24|0);
    HEAP32[$60>>2] = 0;
    $61 = ((($59)) + 28|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = ($62|0)==(0);
    if ($63) {
     $84 = $59;
    } else {
     $64 = HEAP32[$1>>2]|0;
     $65 = ((($59)) + 8|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = (_system_collections_generic_list_get($64,$66)|0);
     $68 = ((($67)) + 20|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($67|0)==(0|0);
     if (!($70)) {
      _g_object_unref($67);
     }
     $71 = ($69|0)==(0);
     $$pre = HEAP32[$5>>2]|0;
     if (!($71)) {
      $72 = ((($$pre)) + 16|0);
      HEAP32[$72>>2] = 1;
     }
     $73 = ((($$pre)) + 12|0);
     HEAP32[$73>>2] = 0;
     $74 = ((($$pre)) + 8|0);
     $75 = HEAP32[$74>>2]|0;
     $76 = (($75) + 1)|0;
     HEAP32[$74>>2] = $76;
     $77 = ((($$pre)) + 28|0);
     $78 = HEAP32[$77>>2]|0;
     $79 = ($78|0)==(0);
     if ($79) {
      _jasmine_queue_Next($0);
      $$pre140 = HEAP32[$5>>2]|0;
      $84 = $$pre140;
      break;
     } else {
      $80 = ((($$pre)) + 32|0);
      HEAP32[$80>>2] = 1;
      $84 = $$pre;
      break;
     }
    }
   } else {
    $82 = $16;
    label = 25;
   }
  } while(0);
  if ((label|0) == 25) {
   label = 0;
   $81 = ((($82)) + 20|0);
   HEAP32[$81>>2] = 0;
   $84 = $82;
  }
  $83 = ((($84)) + 32|0);
  $85 = HEAP32[$83>>2]|0;
  $86 = ($85|0)==(0);
  if ($86) {
   break;
  } else {
   $11 = $84;$9 = $83;
  }
 }
 STACKTOP = sp;return;
}
function __jasmine_queue_OnComplete_jasmine_on_complete_delegate($0) {
 $0 = $0|0;
 var $$pre$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = ((($2)) + 28|0);
  HEAP32[$6>>2] = 1;
  return;
 }
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($2)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_system_collections_generic_list_get($8,$10)|0);
 $12 = ((($11)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($11|0)==(0|0);
 if (!($14)) {
  _g_object_unref($11);
 }
 $15 = ($13|0)==(0);
 $$pre$i = HEAP32[$1>>2]|0;
 if (!($15)) {
  $16 = ((($$pre$i)) + 16|0);
  HEAP32[$16>>2] = 1;
 }
 $17 = ((($$pre$i)) + 12|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($$pre$i)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($19) + 1)|0;
 HEAP32[$18>>2] = $20;
 $21 = ((($$pre$i)) + 28|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0);
 if ($23) {
  _jasmine_queue_Next($0);
  return;
 } else {
  $24 = ((($$pre$i)) + 32|0);
  HEAP32[$24>>2] = 1;
  return;
 }
}
function _jasmine_queue_IsRunning($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _jasmine_runner_construct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$in = 0, $$pre$phi54Z2D = 0, $$pre$phi55Z2D = 0, $$pre$phi56Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_object_construct($0)|0);
 $3 = ($1|0)==(0|0);
 if ($3) {
  $10 = 0;
 } else {
  $4 = (_g_object_ref($1)|0);
  $10 = $1;
 }
 $5 = ((($2)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$in = $6;
 } else {
  _g_object_unref($7);
  $9 = HEAP32[$5>>2]|0;
  HEAP32[$9>>2] = 0;
  $$in = $9;
 }
 HEAP32[$$in>>2] = $10;
 $11 = (_jasmine_queue_new($1)|0);
 $12 = HEAP32[$5>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$pre$phiZ2D = $13;
 } else {
  _g_object_unref($14);
  $16 = HEAP32[$5>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
  $$pre$phiZ2D = $17;
 }
 HEAP32[$$pre$phiZ2D>>2] = $11;
 $18 = (_jasmine_callback_wrapper_get_type()|0);
 $19 = (_system_collections_generic_array_list_new($18,562,563,432)|0);
 $20 = HEAP32[$5>>2]|0;
 $21 = ((($20)) + 8|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  $$pre$phi54Z2D = $21;
 } else {
  _g_object_unref($22);
  $24 = HEAP32[$5>>2]|0;
  $25 = ((($24)) + 8|0);
  HEAP32[$25>>2] = 0;
  $$pre$phi54Z2D = $25;
 }
 HEAP32[$$pre$phi54Z2D>>2] = $19;
 $26 = (_system_collections_generic_array_list_new($18,562,563,432)|0);
 $27 = HEAP32[$5>>2]|0;
 $28 = ((($27)) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi55Z2D = $28;
 } else {
  _g_object_unref($29);
  $31 = HEAP32[$5>>2]|0;
  $32 = ((($31)) + 12|0);
  HEAP32[$32>>2] = 0;
  $$pre$phi55Z2D = $32;
 }
 HEAP32[$$pre$phi55Z2D>>2] = $26;
 $33 = (_jasmine_suite_get_type()|0);
 $34 = (_system_collections_generic_array_list_new($33,337,338,432)|0);
 $35 = HEAP32[$5>>2]|0;
 $36 = ((($35)) + 16|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if ($38) {
  $$pre$phi56Z2D = $36;
  HEAP32[$$pre$phi56Z2D>>2] = $34;
  return ($2|0);
 }
 _g_object_unref($37);
 $39 = HEAP32[$5>>2]|0;
 $40 = ((($39)) + 16|0);
 HEAP32[$40>>2] = 0;
 $$pre$phi56Z2D = $40;
 HEAP32[$$pre$phi56Z2D>>2] = $34;
 return ($2|0);
}
function _jasmine_runner_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148960)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142128,120204,0)|0);
  _g_once_init_leave(148960,$4);
 }
 $5 = HEAP32[37240]|0;
 $6 = (_jasmine_runner_construct($5,$0)|0);
 return ($6|0);
}
function _jasmine_runner_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37241] = $1;
 _g_type_class_add_private($0,20);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 564;
 return;
}
function _jasmine_runner_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148960)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142128,120204,0)|0);
  _g_once_init_leave(148960,$4);
 }
 $5 = HEAP32[37240]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _jasmine_runner_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148960)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142128,120204,0)|0);
  _g_once_init_leave(148960,$4);
 }
 $5 = HEAP32[37240]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $19 = $13;
 } else {
  _g_object_unref($14);
  $16 = HEAP32[$7>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
  $19 = $16;
 }
 $18 = ((($19)) + 8|0);
 $20 = HEAP32[$18>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $25 = $19;
 } else {
  _g_object_unref($20);
  $22 = HEAP32[$7>>2]|0;
  $23 = ((($22)) + 8|0);
  HEAP32[$23>>2] = 0;
  $25 = $22;
 }
 $24 = ((($25)) + 12|0);
 $26 = HEAP32[$24>>2]|0;
 $27 = ($26|0)==(0|0);
 if ($27) {
  $31 = $25;
 } else {
  _g_object_unref($26);
  $28 = HEAP32[$7>>2]|0;
  $29 = ((($28)) + 12|0);
  HEAP32[$29>>2] = 0;
  $31 = $28;
 }
 $30 = ((($31)) + 16|0);
 $32 = HEAP32[$30>>2]|0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $36 = HEAP32[37241]|0;
  $37 = (_g_type_check_class_cast($36,80)|0);
  $38 = ((($36)) + 36|0);
  $39 = HEAP32[$38>>2]|0;
  ftCall_vi($39|0,$0);
  return;
 }
 _g_object_unref($32);
 $34 = HEAP32[$7>>2]|0;
 $35 = ((($34)) + 16|0);
 HEAP32[$35>>2] = 0;
 $36 = HEAP32[37241]|0;
 $37 = (_g_type_check_class_cast($36,80)|0);
 $38 = ((($36)) + 36|0);
 $39 = HEAP32[$38>>2]|0;
 ftCall_vi($39|0,$0);
 return;
}
function _jasmine_runner_Execute($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_slice_alloc0(12)|0);
 HEAP32[$1>>2] = 1;
 $2 = (_g_object_ref($0)|0);
 $3 = ((($1)) + 4|0);
 HEAP32[$3>>2] = $2;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $7 = 0;
 } else {
  $5 = (_g_object_ref($0)|0);
  $7 = $0;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $7;
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_jasmine_env_get_Reporter($10)|0);
 _jasmine_reporter_ReportRunnerStarting($11,$7);
 $12 = HEAP32[$8>>2]|0;
 $13 = ((($12)) + 4|0);
 $14 = HEAP32[$13>>2]|0;
 _jasmine_queue_Start($14,565,$1);
 $15 = (_g_atomic_int_dec_and_test($1)|0);
 $16 = ($15|0)==(0);
 if ($16) {
  return;
 }
 $17 = HEAP32[$3>>2]|0;
 $18 = HEAP32[$6>>2]|0;
 $19 = ($18|0)==(0|0);
 if (!($19)) {
  _g_object_unref($18);
  HEAP32[$6>>2] = 0;
 }
 $20 = ($17|0)==(0|0);
 if (!($20)) {
  _g_object_unref($17);
 }
 _g_slice_free1(12,$1);
 return;
}
function ____lambda42__jasmine_on_complete_delegate($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 _g_print(142142,$vararg_buffer);
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_jasmine_env_get_Reporter($5)|0);
 _jasmine_reporter_ReportRunnerResults($6,$2);
 STACKTOP = sp;return;
}
function _jasmine_runner_AddSpecs($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 _jasmine_queue_Copy($5,$1);
 return;
}
function _jasmine_runner_AddSuite($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 (_system_collections_generic_collection_Add($5,$1)|0);
 return;
}
function _jasmine_runner_Specs($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_spec_get_type()|0);
 $2 = (_system_collections_generic_array_list_new($1,337,338,432)|0);
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_system_collections_generic_iterable_iterator($6)|0);
 $8 = (_system_collections_generic_iterator_next($7)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  while(1) {
   $10 = (_system_collections_generic_iterator_get($7)|0);
   $11 = (_jasmine_suite_Specs($10)|0);
   $12 = (_system_collections_generic_iterable_iterator($11)|0);
   $13 = ($11|0)==(0|0);
   if (!($13)) {
    _g_object_unref($11);
   }
   $14 = (_system_collections_generic_iterator_next($12)|0);
   $15 = ($14|0)==(0);
   if (!($15)) {
    while(1) {
     $16 = (_system_collections_generic_iterator_get($12)|0);
     (_system_collections_generic_collection_Add($2,$16)|0);
     $17 = ($16|0)==(0|0);
     if (!($17)) {
      _g_object_unref($16);
     }
     $18 = (_system_collections_generic_iterator_next($12)|0);
     $19 = ($18|0)==(0);
     if ($19) {
      break;
     }
    }
   }
   $20 = ($12|0)==(0|0);
   if (!($20)) {
    _g_object_unref($12);
   }
   $21 = ($10|0)==(0|0);
   if (!($21)) {
    _g_object_unref($10);
   }
   $22 = (_system_collections_generic_iterator_next($7)|0);
   $23 = ($22|0)==(0);
   if ($23) {
    break;
   }
  }
 }
 $24 = ($7|0)==(0|0);
 if ($24) {
  return ($2|0);
 }
 _g_object_unref($7);
 return ($2|0);
}
function _jasmine_spec_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre = 0, $$pre$phi72Z2D = 0, $$pre$phi73Z2D = 0, $$pre$phi74Z2D = 0, $$pre$phiZ2D = 0, $$pre71 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_jasmine_executable_construct($0)|0);
 $5 = (_jasmine_env_NextSpecId($1)|0);
 $6 = ((($4)) + 28|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP32[$7>>2] = $5;
 $8 = ($1|0)==(0|0);
 if ($8) {
  $11 = $7;$16 = 0;
 } else {
  $9 = (_g_object_ref($1)|0);
  $$pre = HEAP32[$6>>2]|0;
  $11 = $$pre;$16 = $1;
 }
 $10 = ((($11)) + 4|0);
 $12 = HEAP32[$10>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $$pre$phiZ2D = $10;$51 = $11;
 } else {
  _g_object_unref($12);
  $14 = HEAP32[$6>>2]|0;
  $15 = ((($14)) + 4|0);
  HEAP32[$15>>2] = 0;
  $$pre$phiZ2D = $15;$51 = $14;
 }
 HEAP32[$$pre$phiZ2D>>2] = $16;
 $17 = ($2|0)==(0|0);
 if ($17) {
  $20 = $51;$25 = 0;
 } else {
  $18 = (_g_object_ref($2)|0);
  $$pre71 = HEAP32[$6>>2]|0;
  $20 = $$pre71;$25 = $2;
 }
 $19 = ((($20)) + 8|0);
 $21 = HEAP32[$19>>2]|0;
 $22 = ($21|0)==(0|0);
 if ($22) {
  $$pre$phi72Z2D = $19;
 } else {
  _g_object_unref($21);
  $23 = HEAP32[$6>>2]|0;
  $24 = ((($23)) + 8|0);
  HEAP32[$24>>2] = 0;
  $$pre$phi72Z2D = $24;
 }
 HEAP32[$$pre$phi72Z2D>>2] = $25;
 $26 = (_g_strdup($3)|0);
 $27 = HEAP32[$6>>2]|0;
 $28 = ((($27)) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 _g_free($29);
 $30 = HEAP32[$6>>2]|0;
 $31 = ((($30)) + 12|0);
 HEAP32[$31>>2] = $26;
 $32 = (_jasmine_queue_new($1)|0);
 $33 = ((($4)) + 24|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 if (!($35)) {
  _g_object_unref($34);
  HEAP32[$33>>2] = 0;
 }
 HEAP32[$33>>2] = $32;
 $36 = (_jasmine_callback_wrapper_get_type()|0);
 $37 = (_system_collections_generic_array_list_new($36,562,563,432)|0);
 $38 = HEAP32[$6>>2]|0;
 $39 = ((($38)) + 16|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($40|0)==(0|0);
 if ($41) {
  $$pre$phi73Z2D = $39;
 } else {
  _g_object_unref($40);
  $42 = HEAP32[$6>>2]|0;
  $43 = ((($42)) + 16|0);
  HEAP32[$43>>2] = 0;
  $$pre$phi73Z2D = $43;
 }
 HEAP32[$$pre$phi73Z2D>>2] = $37;
 $44 = (_jasmine_nested_results_new()|0);
 $45 = HEAP32[$6>>2]|0;
 $46 = ((($45)) + 20|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($47|0)==(0|0);
 if ($48) {
  $$pre$phi74Z2D = $46;
  HEAP32[$$pre$phi74Z2D>>2] = $44;
  return ($4|0);
 }
 _g_object_unref($47);
 $49 = HEAP32[$6>>2]|0;
 $50 = ((($49)) + 20|0);
 HEAP32[$50>>2] = 0;
 $$pre$phi74Z2D = $50;
 HEAP32[$$pre$phi74Z2D>>2] = $44;
 return ($4|0);
}
function _jasmine_spec_new($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_once_init_enter(148968)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (_jasmine_executable_get_type()|0);
  $6 = (_g_type_register_static($5,142153,120240,0)|0);
  _g_once_init_leave(148968,$6);
 }
 $7 = HEAP32[37242]|0;
 $8 = (_jasmine_spec_construct($7,$0,$1,$2)|0);
 return ($8|0);
}
function _jasmine_spec_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37243] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 566;
 $3 = (_g_type_check_class_cast($0,80)|0);
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 567;
 return;
}
function _jasmine_spec_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148968)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,142153,120240,0)|0);
  _g_once_init_leave(148968,$4);
 }
 $5 = HEAP32[37242]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _jasmine_spec_real_Execute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_slice_alloc0(20)|0);
 HEAP32[$3>>2] = 1;
 $4 = (_g_object_ref($0)|0);
 $5 = ((($3)) + 4|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($3)) + 12|0);
 HEAP32[$6>>2] = $1;
 $7 = ((($3)) + 16|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($0)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_jasmine_env_SpecFilter($11)|0);
 $13 = ($12|0)==(0);
 $14 = HEAP32[$8>>2]|0;
 if ($13) {
  $15 = ((($14)) + 20|0);
  $16 = HEAP32[$15>>2]|0;
  _jasmine_resultable_set_Skipped($16,1);
  $17 = HEAP32[$6>>2]|0;
  $18 = HEAP32[$7>>2]|0;
  $19 = HEAP32[$8>>2]|0;
  $20 = ((($19)) + 4|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (_jasmine_env_get_Reporter($21)|0);
  _jasmine_reporter_ReportSpecResults($22,$0);
  ftCall_vi($17|0,$18);
  $23 = (_g_atomic_int_dec_and_test($3)|0);
  $24 = ($23|0)==(0);
  if ($24) {
   return;
  }
  $25 = HEAP32[$5>>2]|0;
  $26 = ((($3)) + 8|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)==(0|0);
  if (!($28)) {
   _g_object_unref($27);
   HEAP32[$26>>2] = 0;
  }
  $29 = ($25|0)==(0|0);
  if (!($29)) {
   _g_object_unref($25);
  }
  _g_slice_free1(20,$3);
  return;
 } else {
  $30 = ((($14)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = (_jasmine_env_get_Reporter($31)|0);
  _jasmine_reporter_ReportSpecStarting($32,$0);
  $33 = HEAP32[$8>>2]|0;
  $34 = ((($33)) + 4|0);
  $35 = HEAP32[$34>>2]|0;
  _jasmine_env_set_CurrentSpec($35,$0);
  $36 = (_g_object_ref($0)|0);
  $37 = ((($3)) + 8|0);
  HEAP32[$37>>2] = $36;
  $38 = ((($0)) + 24|0);
  $39 = HEAP32[$38>>2]|0;
  _jasmine_queue_Start($39,568,$3);
  $40 = (_g_atomic_int_dec_and_test($3)|0);
  $41 = ($40|0)==(0);
  if ($41) {
   return;
  }
  $42 = HEAP32[$5>>2]|0;
  $43 = HEAP32[$37>>2]|0;
  $44 = ($43|0)==(0|0);
  if (!($44)) {
   _g_object_unref($43);
   HEAP32[$37>>2] = 0;
  }
  $45 = ($42|0)==(0|0);
  if (!($45)) {
   _g_object_unref($42);
  }
  _g_slice_free1(20,$3);
  return;
 }
}
function _jasmine_spec_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148968)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,142153,120240,0)|0);
  _g_once_init_leave(148968,$4);
 }
 $5 = HEAP32[37242]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 4|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 8|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $21 = $15;
 } else {
  _g_object_unref($16);
  $18 = HEAP32[$7>>2]|0;
  $19 = ((($18)) + 8|0);
  HEAP32[$19>>2] = 0;
  $21 = $18;
 }
 $20 = ((($21)) + 12|0);
 $22 = HEAP32[$20>>2]|0;
 _g_free($22);
 $23 = HEAP32[$7>>2]|0;
 $24 = ((($23)) + 12|0);
 HEAP32[$24>>2] = 0;
 $25 = ((($23)) + 16|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($26|0)==(0|0);
 if ($27) {
  $31 = $23;
 } else {
  _g_object_unref($26);
  $28 = HEAP32[$7>>2]|0;
  $29 = ((($28)) + 16|0);
  HEAP32[$29>>2] = 0;
  $31 = $28;
 }
 $30 = ((($31)) + 20|0);
 $32 = HEAP32[$30>>2]|0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $36 = HEAP32[37243]|0;
  $37 = (_g_type_check_class_cast($36,80)|0);
  $38 = ((($36)) + 36|0);
  $39 = HEAP32[$38>>2]|0;
  ftCall_vi($39|0,$0);
  return;
 }
 _g_object_unref($32);
 $34 = HEAP32[$7>>2]|0;
 $35 = ((($34)) + 20|0);
 HEAP32[$35>>2] = 0;
 $36 = HEAP32[37243]|0;
 $37 = (_g_type_check_class_cast($36,80)|0);
 $38 = ((($36)) + 36|0);
 $39 = HEAP32[$38>>2]|0;
 ftCall_vi($39|0,$0);
 return;
}
function ____lambda44__jasmine_on_complete_delegate($0) {
 $0 = $0|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $$idx2 = 0, $$idx2$val = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx = ((($0)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = ((($0)) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $$idx2 = ((($0)) + 16|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $1 = ((($$idx$val)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_jasmine_env_get_Reporter($4)|0);
 _jasmine_reporter_ReportSpecResults($5,$$idx$val);
 ftCall_vi($$idx1$val|0,$$idx2$val);
 return;
}
function _jasmine_spec_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148968)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37242]|0;
  return ($4|0);
 }
 $2 = (_jasmine_executable_get_type()|0);
 $3 = (_g_type_register_static($2,142153,120240,0)|0);
 _g_once_init_leave(148968,$3);
 $4 = HEAP32[37242]|0;
 return ($4|0);
}
function _jasmine_spec_GetFullName($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_jasmine_suite_GetFullName($4)|0);
 HEAP32[$vararg_buffer>>2] = 142178;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $6 = (_g_strconcat($5,$vararg_buffer)|0);
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$vararg_buffer2>>2] = $9;
 $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
 HEAP32[$vararg_ptr5>>2] = 0;
 $10 = (_g_strconcat($6,$vararg_buffer2)|0);
 HEAP32[$vararg_buffer6>>2] = 143379;
 $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
 HEAP32[$vararg_ptr9>>2] = 0;
 $11 = (_g_strconcat($10,$vararg_buffer6)|0);
 _g_free($10);
 _g_free($6);
 _g_free($5);
 STACKTOP = sp;return ($11|0);
}
function _jasmine_spec_Queue($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $5 = 0;
  return ($5|0);
 }
 $4 = (_g_object_ref($2)|0);
 $5 = $2;
 return ($5|0);
}
function _jasmine_spec_Runs($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_jasmine_block_new($6,$1,$2,$0)|0);
 $8 = ((($0)) + 24|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_jasmine_queue_IsRunning($9)|0);
 $11 = ($10|0)==(0);
 $12 = HEAP32[$8>>2]|0;
 if ($11) {
  _jasmine_queue_Add($12,$7,0);
 } else {
  _jasmine_queue_InsertNext($12,$7,0);
 }
 $13 = (_g_object_ref($0)|0);
 $14 = ($7|0)==(0|0);
 if ($14) {
  return ($0|0);
 }
 _g_object_unref($7);
 return ($0|0);
}
function _jasmine_spec_Expect($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ((($0)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (_jasmine_matchers_new($1,$2,$3,$8,$4,$0,0)|0);
 $10 = HEAP32[$5>>2]|0;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_jasmine_matchers_new($1,$2,$3,$12,$4,$0,1)|0);
 $14 = ((($9)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  HEAP32[$14>>2] = $13;
  return ($9|0);
 }
 _g_object_unref($15);
 HEAP32[$14>>2] = 0;
 HEAP32[$14>>2] = $13;
 return ($9|0);
}
function _jasmine_suite_construct($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$pre = 0, $$pre$phi106Z2D = 0, $$pre$phi107Z2D = 0, $$pre$phi108Z2D = 0, $$pre$phi109Z2D = 0, $$pre$phi110Z2D = 0, $$pre$phi111Z2D = 0, $$pre$phiZ2D = 0, $$pre105 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = (_jasmine_executable_construct($0)|0);
 $7 = (_jasmine_env_NextSuiteId($1)|0);
 $8 = ((($6)) + 28|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $7;
 $10 = (_g_strdup($2)|0);
 $11 = HEAP32[$8>>2]|0;
 $12 = ((($11)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 _g_free($13);
 $14 = HEAP32[$8>>2]|0;
 $15 = ((($14)) + 4|0);
 HEAP32[$15>>2] = $10;
 $16 = ($5|0)==(0|0);
 if ($16) {
  $19 = $14;$24 = 0;
 } else {
  $17 = (_g_object_ref($5)|0);
  $$pre = HEAP32[$8>>2]|0;
  $19 = $$pre;$24 = $5;
 }
 $18 = ((($19)) + 8|0);
 $20 = HEAP32[$18>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $$pre$phiZ2D = $18;$83 = $19;
 } else {
  _g_object_unref($20);
  $22 = HEAP32[$8>>2]|0;
  $23 = ((($22)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$pre$phiZ2D = $23;$83 = $22;
 }
 HEAP32[$$pre$phiZ2D>>2] = $24;
 $25 = ($1|0)==(0|0);
 if ($25) {
  $28 = $83;$33 = 0;
 } else {
  $26 = (_g_object_ref($1)|0);
  $$pre105 = HEAP32[$8>>2]|0;
  $28 = $$pre105;$33 = $1;
 }
 $27 = ((($28)) + 12|0);
 $29 = HEAP32[$27>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi106Z2D = $27;
 } else {
  _g_object_unref($29);
  $31 = HEAP32[$8>>2]|0;
  $32 = ((($31)) + 12|0);
  HEAP32[$32>>2] = 0;
  $$pre$phi106Z2D = $32;
 }
 HEAP32[$$pre$phi106Z2D>>2] = $33;
 $34 = (_jasmine_queue_new($1)|0);
 $35 = ((($6)) + 24|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(0|0);
 if (!($37)) {
  _g_object_unref($36);
  HEAP32[$35>>2] = 0;
 }
 HEAP32[$35>>2] = $34;
 $38 = (_jasmine_callback_wrapper_get_type()|0);
 $39 = (_system_collections_generic_array_list_new($38,562,563,432)|0);
 $40 = HEAP32[$8>>2]|0;
 $41 = ((($40)) + 20|0);
 $42 = HEAP32[$41>>2]|0;
 $43 = ($42|0)==(0|0);
 if ($43) {
  $$pre$phi107Z2D = $41;
 } else {
  _g_object_unref($42);
  $44 = HEAP32[$8>>2]|0;
  $45 = ((($44)) + 20|0);
  HEAP32[$45>>2] = 0;
  $$pre$phi107Z2D = $45;
 }
 HEAP32[$$pre$phi107Z2D>>2] = $39;
 $46 = (_system_collections_generic_array_list_new($38,562,563,432)|0);
 $47 = HEAP32[$8>>2]|0;
 $48 = ((($47)) + 24|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if ($50) {
  $$pre$phi108Z2D = $48;
 } else {
  _g_object_unref($49);
  $51 = HEAP32[$8>>2]|0;
  $52 = ((($51)) + 24|0);
  HEAP32[$52>>2] = 0;
  $$pre$phi108Z2D = $52;
 }
 HEAP32[$$pre$phi108Z2D>>2] = $46;
 $53 = (_object_get_type()|0);
 $54 = (_system_collections_generic_array_list_new($53,337,338,432)|0);
 $55 = HEAP32[$8>>2]|0;
 $56 = ((($55)) + 28|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ($57|0)==(0|0);
 if ($58) {
  $$pre$phi109Z2D = $56;
 } else {
  _g_object_unref($57);
  $59 = HEAP32[$8>>2]|0;
  $60 = ((($59)) + 28|0);
  HEAP32[$60>>2] = 0;
  $$pre$phi109Z2D = $60;
 }
 HEAP32[$$pre$phi109Z2D>>2] = $54;
 $61 = (_g_once_init_enter(148976)|0);
 $62 = ($61|0)==(0);
 if (!($62)) {
  $63 = (_jasmine_executable_get_type()|0);
  $64 = (_g_type_register_static($63,142165,120276,0)|0);
  _g_once_init_leave(148976,$64);
 }
 $65 = HEAP32[37244]|0;
 $66 = (_system_collections_generic_array_list_new($65,337,338,432)|0);
 $67 = HEAP32[$8>>2]|0;
 $68 = ((($67)) + 32|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)==(0|0);
 if ($70) {
  $$pre$phi110Z2D = $68;
 } else {
  _g_object_unref($69);
  $71 = HEAP32[$8>>2]|0;
  $72 = ((($71)) + 32|0);
  HEAP32[$72>>2] = 0;
  $$pre$phi110Z2D = $72;
 }
 HEAP32[$$pre$phi110Z2D>>2] = $66;
 $73 = (_jasmine_spec_get_type()|0);
 $74 = (_system_collections_generic_array_list_new($73,337,338,432)|0);
 $75 = HEAP32[$8>>2]|0;
 $76 = ((($75)) + 36|0);
 $77 = HEAP32[$76>>2]|0;
 $78 = ($77|0)==(0|0);
 if ($78) {
  $$pre$phi111Z2D = $76;$82 = $75;
  HEAP32[$$pre$phi111Z2D>>2] = $74;
  $81 = ((($82)) + 16|0);
  HEAP32[$81>>2] = 0;
  return ($6|0);
 }
 _g_object_unref($77);
 $79 = HEAP32[$8>>2]|0;
 $80 = ((($79)) + 36|0);
 HEAP32[$80>>2] = 0;
 $$pre$phi111Z2D = $80;$82 = $79;
 HEAP32[$$pre$phi111Z2D>>2] = $74;
 $81 = ((($82)) + 16|0);
 HEAP32[$81>>2] = 0;
 return ($6|0);
}
function _jasmine_suite_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37245] = $1;
 _g_type_class_add_private($0,40);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 569;
 $3 = (_g_type_check_class_cast($0,80)|0);
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 570;
 return;
}
function _jasmine_suite_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148976)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,142165,120276,0)|0);
  _g_once_init_leave(148976,$4);
 }
 $5 = HEAP32[37244]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _jasmine_suite_real_Execute($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_slice_alloc0(20)|0);
 HEAP32[$3>>2] = 1;
 $4 = (_g_object_ref($0)|0);
 $5 = ((($3)) + 4|0);
 HEAP32[$5>>2] = $4;
 $6 = ((($3)) + 12|0);
 HEAP32[$6>>2] = $1;
 $7 = ((($3)) + 16|0);
 HEAP32[$7>>2] = $2;
 $8 = ($0|0)==(0|0);
 if ($8) {
  $11 = 0;
 } else {
  $9 = (_g_object_ref($0)|0);
  $11 = $0;
 }
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $11;
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 _jasmine_queue_Start($13,571,$3);
 $14 = (_g_atomic_int_dec_and_test($3)|0);
 $15 = ($14|0)==(0);
 if ($15) {
  return;
 }
 $16 = HEAP32[$5>>2]|0;
 $17 = HEAP32[$10>>2]|0;
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  _g_object_unref($17);
  HEAP32[$10>>2] = 0;
 }
 $19 = ($16|0)==(0|0);
 if (!($19)) {
  _g_object_unref($16);
 }
 _g_slice_free1(20,$3);
 return;
}
function _jasmine_suite_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148976)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_jasmine_executable_get_type()|0);
  $4 = (_g_type_register_static($3,142165,120276,0)|0);
  _g_once_init_leave(148976,$4);
 }
 $5 = HEAP32[37244]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 _g_free($10);
 $11 = HEAP32[$7>>2]|0;
 $12 = ((($11)) + 4|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($11)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $19 = $11;
 } else {
  _g_object_unref($14);
  $16 = HEAP32[$7>>2]|0;
  $17 = ((($16)) + 8|0);
  HEAP32[$17>>2] = 0;
  $19 = $16;
 }
 $18 = ((($19)) + 12|0);
 $20 = HEAP32[$18>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $25 = $19;
 } else {
  _g_object_unref($20);
  $22 = HEAP32[$7>>2]|0;
  $23 = ((($22)) + 12|0);
  HEAP32[$23>>2] = 0;
  $25 = $22;
 }
 $24 = ((($25)) + 20|0);
 $26 = HEAP32[$24>>2]|0;
 $27 = ($26|0)==(0|0);
 if ($27) {
  $31 = $25;
 } else {
  _g_object_unref($26);
  $28 = HEAP32[$7>>2]|0;
  $29 = ((($28)) + 20|0);
  HEAP32[$29>>2] = 0;
  $31 = $28;
 }
 $30 = ((($31)) + 24|0);
 $32 = HEAP32[$30>>2]|0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $37 = $31;
 } else {
  _g_object_unref($32);
  $34 = HEAP32[$7>>2]|0;
  $35 = ((($34)) + 24|0);
  HEAP32[$35>>2] = 0;
  $37 = $34;
 }
 $36 = ((($37)) + 28|0);
 $38 = HEAP32[$36>>2]|0;
 $39 = ($38|0)==(0|0);
 if ($39) {
  $43 = $37;
 } else {
  _g_object_unref($38);
  $40 = HEAP32[$7>>2]|0;
  $41 = ((($40)) + 28|0);
  HEAP32[$41>>2] = 0;
  $43 = $40;
 }
 $42 = ((($43)) + 32|0);
 $44 = HEAP32[$42>>2]|0;
 $45 = ($44|0)==(0|0);
 if ($45) {
  $49 = $43;
 } else {
  _g_object_unref($44);
  $46 = HEAP32[$7>>2]|0;
  $47 = ((($46)) + 32|0);
  HEAP32[$47>>2] = 0;
  $49 = $46;
 }
 $48 = ((($49)) + 36|0);
 $50 = HEAP32[$48>>2]|0;
 $51 = ($50|0)==(0|0);
 if ($51) {
  $54 = HEAP32[37245]|0;
  $55 = (_g_type_check_class_cast($54,80)|0);
  $56 = ((($54)) + 36|0);
  $57 = HEAP32[$56>>2]|0;
  ftCall_vi($57|0,$0);
  return;
 }
 _g_object_unref($50);
 $52 = HEAP32[$7>>2]|0;
 $53 = ((($52)) + 36|0);
 HEAP32[$53>>2] = 0;
 $54 = HEAP32[37245]|0;
 $55 = (_g_type_check_class_cast($54,80)|0);
 $56 = ((($54)) + 36|0);
 $57 = HEAP32[$56>>2]|0;
 ftCall_vi($57|0,$0);
 return;
}
function ____lambda43__jasmine_on_complete_delegate($0) {
 $0 = $0|0;
 var $$idx = 0, $$idx$val = 0, $$idx1 = 0, $$idx1$val = 0, $$idx2 = 0, $$idx2$val = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$idx = ((($0)) + 8|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $$idx1 = ((($0)) + 12|0);
 $$idx1$val = HEAP32[$$idx1>>2]|0;
 $$idx2 = ((($0)) + 16|0);
 $$idx2$val = HEAP32[$$idx2>>2]|0;
 $1 = ((($$idx$val)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_jasmine_env_get_Reporter($4)|0);
 _jasmine_reporter_ReportSuiteResults($5,$$idx$val);
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 16|0);
 HEAP32[$7>>2] = 1;
 ftCall_vi($$idx1$val|0,$$idx2$val);
 return;
}
function _jasmine_suite_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148976)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[37244]|0;
  return ($4|0);
 }
 $2 = (_jasmine_executable_get_type()|0);
 $3 = (_g_type_register_static($2,142165,120276,0)|0);
 _g_once_init_leave(148976,$3);
 $4 = HEAP32[37244]|0;
 return ($4|0);
}
function _jasmine_suite_new($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $10 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = (_g_once_init_enter(148976)|0);
 $6 = ($5|0)==(0);
 if (!($6)) {
  $7 = (_jasmine_executable_get_type()|0);
  $8 = (_g_type_register_static($7,142165,120276,0)|0);
  _g_once_init_leave(148976,$8);
 }
 $9 = HEAP32[37244]|0;
 $10 = (_jasmine_suite_construct($9,$0,$1,0,0,$4)|0);
 return ($10|0);
}
function _jasmine_suite_Specs($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = 0;
  return ($7|0);
 }
 $6 = (_g_object_ref($4)|0);
 $7 = $4;
 return ($7|0);
}
function _jasmine_suite_GetFullName($0) {
 $0 = $0|0;
 var $$064 = 0, $$065 = 0, $$067 = 0, $$166 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_strdup($4)|0);
 $6 = HEAP32[$1>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $25 = 0;
 } else {
  $10 = (_g_object_ref($8)|0);
  $25 = $8;
 }
 $$064 = $5;$$065 = $25;$$067 = 1;$17 = $25;
 while(1) {
  if ($$067) {
   $$166 = $$065;$26 = $17;
  } else {
   $11 = ((($$065)) + 28|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($12)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if ($15) {
    $27 = 0;
   } else {
    $16 = (_g_object_ref($14)|0);
    $27 = $14;
   }
   _g_object_unref($17);
   $$166 = $27;$26 = $27;
  }
  $18 = ($$166|0)==(0|0);
  if ($18) {
   break;
  }
  $19 = ((($$166)) + 28|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($20)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  HEAP32[$vararg_buffer>>2] = 142178;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 0;
  $23 = (_g_strconcat($22,$vararg_buffer)|0);
  HEAP32[$vararg_buffer2>>2] = $$064;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = 0;
  $24 = (_g_strconcat($23,$vararg_buffer2)|0);
  _g_free($$064);
  _g_free($23);
  $$064 = $24;$$065 = $$166;$$067 = 0;$17 = $26;
 }
 STACKTOP = sp;return ($$064|0);
}
function _jasmine_suite_AddSuite($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 (_system_collections_generic_collection_Add($5,$1)|0);
 $6 = HEAP32[$2>>2]|0;
 $7 = ((($6)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 (_system_collections_generic_collection_Add($8,$1)|0);
 $9 = HEAP32[$2>>2]|0;
 $10 = ((($9)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_jasmine_env_CurrentRunner($11)|0);
 _jasmine_runner_AddSuite($12,$1);
 $13 = ($12|0)==(0|0);
 if ($13) {
  $14 = ((($0)) + 24|0);
  $15 = HEAP32[$14>>2]|0;
  _jasmine_queue_Add($15,$1,0);
  return;
 }
 _g_object_unref($12);
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 _jasmine_queue_Add($15,$1,0);
 return;
}
function _jasmine_suite_AddSpec($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 (_system_collections_generic_collection_Add($5,$1)|0);
 $6 = HEAP32[$2>>2]|0;
 $7 = ((($6)) + 36|0);
 $8 = HEAP32[$7>>2]|0;
 (_system_collections_generic_collection_Add($8,$1)|0);
 $9 = ((($0)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 _jasmine_queue_Add($10,$1,0);
 return;
}
function _test() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_jasmine_Describe(142436,572,0)|0);
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _g_object_unref($0);
 }
 $2 = (_jasmine_GetEnv()|0);
 $3 = (_jasmine_console_reporter_new()|0);
 _jasmine_env_AddReporter($2,$3);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _g_object_unref($3);
 }
 _jasmine_env_Execute($2);
 $5 = ($2|0)==(0|0);
 if ($5) {
  return;
 }
 _g_object_unref($2);
 return;
}
function _game_new() {
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(148988)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_object_get_type()|0);
  $3 = (_g_type_register_static($2,142431,120312,0)|0);
  _g_once_init_leave(148988,$3);
 }
 $4 = HEAP32[37247]|0;
 $5 = (_object_construct($4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $10 = 0;
 } else {
  $7 = (_g_object_ref($5)|0);
  $10 = $5;
 }
 $8 = HEAP32[37246]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  HEAP32[37246] = $10;
  return ($5|0);
 }
 _g_object_unref($8);
 HEAP32[37246] = 0;
 HEAP32[37246] = $10;
 return ($5|0);
}
function _game_Run($0) {
 $0 = $0|0;
 var $$0 = 0, $$01$i$i = 0, $$pre$phi600Z2D = 0, $$pre$phi601Z2D = 0, $$pre$phi602Z2D = 0, $$pre$phi603Z2D = 0, $$pre$phi604Z2D = 0, $$pre$phiZ2D = 0, $$sroa$10$0$$sroa_idx160 = 0, $$sroa$100$0$$sroa_idx340 = 0, $$sroa$101$0$$sroa_idx342 = 0, $$sroa$102$0$$sroa_idx344 = 0, $$sroa$103$0$$sroa_idx346 = 0, $$sroa$104$0$$sroa_idx348 = 0, $$sroa$105$0$$sroa_idx350 = 0, $$sroa$106$0$$sroa_idx352 = 0, $$sroa$107$0$$sroa_idx354 = 0, $$sroa$108$0$$sroa_idx356 = 0, $$sroa$109$0$$sroa_idx358 = 0, $$sroa$11$0$$sroa_idx162 = 0;
 var $$sroa$110$0$$sroa_idx360 = 0, $$sroa$111$0$$sroa_idx362 = 0, $$sroa$112$0$$sroa_idx364 = 0, $$sroa$113$0$$sroa_idx366 = 0, $$sroa$114$0$$sroa_idx368 = 0, $$sroa$115$0$$sroa_idx370 = 0, $$sroa$116$0$$sroa_idx372 = 0, $$sroa$117$0$$sroa_idx374 = 0, $$sroa$118$0$$sroa_idx376 = 0, $$sroa$119$0$$sroa_idx378 = 0, $$sroa$12$0$$sroa_idx164 = 0, $$sroa$120$0$$sroa_idx380 = 0, $$sroa$121$0$$sroa_idx382 = 0, $$sroa$122$0$$sroa_idx384 = 0, $$sroa$123$0$$sroa_idx386 = 0, $$sroa$124$0$$sroa_idx388 = 0, $$sroa$125$0$$sroa_idx390 = 0, $$sroa$126$0$$sroa_idx392 = 0, $$sroa$127$0$$sroa_idx394 = 0, $$sroa$128$0$$sroa_idx396 = 0;
 var $$sroa$129$0$$sroa_idx398 = 0, $$sroa$13$0$$sroa_idx166 = 0, $$sroa$130$0$$sroa_idx400 = 0, $$sroa$131$0$$sroa_idx402 = 0, $$sroa$132$0$$sroa_idx404 = 0, $$sroa$133$0$$sroa_idx406 = 0, $$sroa$134$0$$sroa_idx408 = 0, $$sroa$135$0$$sroa_idx410 = 0, $$sroa$136$0$$sroa_idx412 = 0, $$sroa$137$0$$sroa_idx414 = 0, $$sroa$138$0$$sroa_idx416 = 0, $$sroa$139$0$$sroa_idx418 = 0, $$sroa$14$0$$sroa_idx168 = 0, $$sroa$140$0$$sroa_idx420 = 0, $$sroa$141$0$$sroa_idx422 = 0, $$sroa$142$0$$sroa_idx424 = 0, $$sroa$143$0$$sroa_idx426 = 0, $$sroa$144$0$$sroa_idx428 = 0, $$sroa$145$0$$sroa_idx430 = 0, $$sroa$146$0$$sroa_idx432 = 0;
 var $$sroa$147$0$$sroa_idx434 = 0, $$sroa$148$0$$sroa_idx436 = 0, $$sroa$149$0$$sroa_idx438 = 0, $$sroa$15$0$$sroa_idx170 = 0, $$sroa$150$0$$sroa_idx440 = 0, $$sroa$151$0$$sroa_idx442 = 0, $$sroa$152$0$$sroa_idx444 = 0, $$sroa$153$0$$sroa_idx446 = 0, $$sroa$154$0$$sroa_idx448 = 0, $$sroa$155$0$$sroa_idx450 = 0, $$sroa$156$0$$sroa_idx452 = 0, $$sroa$157$0$$sroa_idx454 = 0, $$sroa$158$0$$sroa_idx456 = 0, $$sroa$159$0$$sroa_idx458 = 0, $$sroa$16$0$$sroa_idx172 = 0, $$sroa$160$0$$sroa_idx460 = 0, $$sroa$161$0$$sroa_idx462 = 0, $$sroa$162$0$$sroa_idx464 = 0, $$sroa$163$0$$sroa_idx466 = 0, $$sroa$164$0$$sroa_idx468 = 0;
 var $$sroa$165$0$$sroa_idx470 = 0, $$sroa$166$0$$sroa_idx472 = 0, $$sroa$167$0$$sroa_idx474 = 0, $$sroa$168$0$$sroa_idx476 = 0, $$sroa$169$0$$sroa_idx478 = 0, $$sroa$17$0$$sroa_idx174 = 0, $$sroa$170$0$$sroa_idx480 = 0, $$sroa$171$0$$sroa_idx482 = 0, $$sroa$172$0$$sroa_idx484 = 0, $$sroa$173$0$$sroa_idx486 = 0, $$sroa$174$0$$sroa_idx488 = 0, $$sroa$175$0$$sroa_idx490 = 0, $$sroa$176$0$$sroa_idx492 = 0, $$sroa$177$0$$sroa_idx494 = 0, $$sroa$178$0$$sroa_idx496 = 0, $$sroa$179$0$$sroa_idx498 = 0, $$sroa$18$0$$sroa_idx176 = 0, $$sroa$180$0$$sroa_idx500 = 0, $$sroa$181$0$$sroa_idx502 = 0, $$sroa$182$0$$sroa_idx504 = 0;
 var $$sroa$183$0$$sroa_idx506 = 0, $$sroa$19$0$$sroa_idx178 = 0, $$sroa$20$0$$sroa_idx180 = 0, $$sroa$21$0$$sroa_idx182 = 0, $$sroa$22$0$$sroa_idx184 = 0, $$sroa$23$0$$sroa_idx186 = 0, $$sroa$24$0$$sroa_idx188 = 0, $$sroa$25$0$$sroa_idx190 = 0, $$sroa$26$0$$sroa_idx192 = 0, $$sroa$27$0$$sroa_idx194 = 0, $$sroa$28$0$$sroa_idx196 = 0, $$sroa$29$0$$sroa_idx198 = 0, $$sroa$30$0$$sroa_idx200 = 0, $$sroa$31$0$$sroa_idx202 = 0, $$sroa$32$0$$sroa_idx204 = 0, $$sroa$33$0$$sroa_idx206 = 0, $$sroa$34$0$$sroa_idx208 = 0, $$sroa$35$0$$sroa_idx210 = 0, $$sroa$36$0$$sroa_idx212 = 0, $$sroa$37$0$$sroa_idx214 = 0;
 var $$sroa$38$0$$sroa_idx216 = 0, $$sroa$39$0$$sroa_idx218 = 0, $$sroa$40$0$$sroa_idx220 = 0, $$sroa$41$0$$sroa_idx222 = 0, $$sroa$42$0$$sroa_idx224 = 0, $$sroa$43$0$$sroa_idx226 = 0, $$sroa$44$0$$sroa_idx228 = 0, $$sroa$45$0$$sroa_idx230 = 0, $$sroa$46$0$$sroa_idx232 = 0, $$sroa$47$0$$sroa_idx234 = 0, $$sroa$48$0$$sroa_idx236 = 0, $$sroa$49$0$$sroa_idx238 = 0, $$sroa$5$0$$sroa_idx150 = 0, $$sroa$50$0$$sroa_idx240 = 0, $$sroa$51$0$$sroa_idx242 = 0, $$sroa$52$0$$sroa_idx244 = 0, $$sroa$53$0$$sroa_idx246 = 0, $$sroa$54$0$$sroa_idx248 = 0, $$sroa$55$0$$sroa_idx250 = 0, $$sroa$56$0$$sroa_idx252 = 0;
 var $$sroa$57$0$$sroa_idx254 = 0, $$sroa$58$0$$sroa_idx256 = 0, $$sroa$59$0$$sroa_idx258 = 0, $$sroa$6$0$$sroa_idx152 = 0, $$sroa$60$0$$sroa_idx260 = 0, $$sroa$61$0$$sroa_idx262 = 0, $$sroa$62$0$$sroa_idx264 = 0, $$sroa$63$0$$sroa_idx266 = 0, $$sroa$64$0$$sroa_idx268 = 0, $$sroa$65$0$$sroa_idx270 = 0, $$sroa$66$0$$sroa_idx272 = 0, $$sroa$67$0$$sroa_idx274 = 0, $$sroa$68$0$$sroa_idx276 = 0, $$sroa$69$0$$sroa_idx278 = 0, $$sroa$7$0$$sroa_idx154 = 0, $$sroa$70$0$$sroa_idx280 = 0, $$sroa$71$0$$sroa_idx282 = 0, $$sroa$72$0$$sroa_idx284 = 0, $$sroa$73$0$$sroa_idx286 = 0, $$sroa$74$0$$sroa_idx288 = 0;
 var $$sroa$75$0$$sroa_idx290 = 0, $$sroa$76$0$$sroa_idx292 = 0, $$sroa$77$0$$sroa_idx294 = 0, $$sroa$78$0$$sroa_idx296 = 0, $$sroa$79$0$$sroa_idx298 = 0, $$sroa$8$0$$sroa_idx156 = 0, $$sroa$80$0$$sroa_idx300 = 0, $$sroa$81$0$$sroa_idx302 = 0, $$sroa$82$0$$sroa_idx304 = 0, $$sroa$83$0$$sroa_idx306 = 0, $$sroa$84$0$$sroa_idx308 = 0, $$sroa$85$0$$sroa_idx310 = 0, $$sroa$86$0$$sroa_idx312 = 0, $$sroa$87$0$$sroa_idx314 = 0, $$sroa$88$0$$sroa_idx316 = 0, $$sroa$89$0$$sroa_idx318 = 0, $$sroa$9$0$$sroa_idx158 = 0, $$sroa$90$0$$sroa_idx320 = 0, $$sroa$91$0$$sroa_idx322 = 0, $$sroa$92$0$$sroa_idx324 = 0;
 var $$sroa$93$0$$sroa_idx326 = 0, $$sroa$94$0$$sroa_idx328 = 0, $$sroa$95$0$$sroa_idx330 = 0, $$sroa$96$0$$sroa_idx332 = 0, $$sroa$97$0$$sroa_idx334 = 0, $$sroa$98$0$$sroa_idx336 = 0, $$sroa$99$0$$sroa_idx338 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 752|0;
 $vararg_buffer3 = sp + 736|0;
 $vararg_buffer1 = sp + 728|0;
 $vararg_buffer = sp + 720|0;
 $1 = sp;
 _memset(($1|0),0,720)|0;
 HEAP32[$vararg_buffer>>2] = 142203;
 _g_print(142180,$vararg_buffer);
 _g_print(142216,$vararg_buffer1);
 (_glfwInit()|0);
 _glfwWindowHint(3,3);
 _glfwWindowHint(2,0);
 $2 = (_glfwCreateWindow(800,600,(142251|0),(0|0),(0|0))|0);
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 HEAP32[$5>>2] = $2;
 $6 = ($2|0)==(0|0);
 if ($6) {
  _g_print(142273,$vararg_buffer3);
  _glfwTerminate();
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 _glfwMakeContextCurrent(($2|0));
 $7 = HEAP32[$3>>2]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 (_glfwSetFramebufferSizeCallback(($9|0),(573|0))|0);
 $10 = HEAP32[$3>>2]|0;
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 (_glfwSetCursorPosCallback(($12|0),(574|0))|0);
 $13 = HEAP32[$3>>2]|0;
 $14 = ((($13)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 (_glfwSetScrollCallback(($15|0),(575|0))|0);
 _glEnable(2929);
 $16 = (_shader_new(300,142302)|0);
 $17 = (_shader_Load($16,142305,142319,0)|0);
 $18 = HEAP32[$3>>2]|0;
 $19 = ((($18)) + 20|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $$pre$phiZ2D = $19;
 } else {
  _g_object_unref($20);
  $22 = HEAP32[$3>>2]|0;
  $23 = ((($22)) + 20|0);
  HEAP32[$23>>2] = 0;
  $$pre$phiZ2D = $23;
 }
 HEAP32[$$pre$phiZ2D>>2] = $17;
 $24 = ($16|0)==(0|0);
 if (!($24)) {
  _g_object_unref($16);
 }
 HEAPF32[$1>>2] = Math_fround(-0.5);
 $$sroa$5$0$$sroa_idx150 = ((($1)) + 4|0);
 HEAPF32[$$sroa$5$0$$sroa_idx150>>2] = Math_fround(-0.5);
 $$sroa$6$0$$sroa_idx152 = ((($1)) + 8|0);
 HEAPF32[$$sroa$6$0$$sroa_idx152>>2] = Math_fround(-0.5);
 $$sroa$7$0$$sroa_idx154 = ((($1)) + 12|0);
 HEAPF32[$$sroa$7$0$$sroa_idx154>>2] = Math_fround(0.0);
 $$sroa$8$0$$sroa_idx156 = ((($1)) + 16|0);
 HEAPF32[$$sroa$8$0$$sroa_idx156>>2] = Math_fround(0.0);
 $$sroa$9$0$$sroa_idx158 = ((($1)) + 20|0);
 HEAPF32[$$sroa$9$0$$sroa_idx158>>2] = Math_fround(0.5);
 $$sroa$10$0$$sroa_idx160 = ((($1)) + 24|0);
 HEAPF32[$$sroa$10$0$$sroa_idx160>>2] = Math_fround(-0.5);
 $$sroa$11$0$$sroa_idx162 = ((($1)) + 28|0);
 HEAPF32[$$sroa$11$0$$sroa_idx162>>2] = Math_fround(-0.5);
 $$sroa$12$0$$sroa_idx164 = ((($1)) + 32|0);
 HEAPF32[$$sroa$12$0$$sroa_idx164>>2] = Math_fround(1.0);
 $$sroa$13$0$$sroa_idx166 = ((($1)) + 36|0);
 HEAPF32[$$sroa$13$0$$sroa_idx166>>2] = Math_fround(0.0);
 $$sroa$14$0$$sroa_idx168 = ((($1)) + 40|0);
 HEAPF32[$$sroa$14$0$$sroa_idx168>>2] = Math_fround(0.5);
 $$sroa$15$0$$sroa_idx170 = ((($1)) + 44|0);
 HEAPF32[$$sroa$15$0$$sroa_idx170>>2] = Math_fround(0.5);
 $$sroa$16$0$$sroa_idx172 = ((($1)) + 48|0);
 HEAPF32[$$sroa$16$0$$sroa_idx172>>2] = Math_fround(-0.5);
 $$sroa$17$0$$sroa_idx174 = ((($1)) + 52|0);
 HEAPF32[$$sroa$17$0$$sroa_idx174>>2] = Math_fround(1.0);
 $$sroa$18$0$$sroa_idx176 = ((($1)) + 56|0);
 HEAPF32[$$sroa$18$0$$sroa_idx176>>2] = Math_fround(1.0);
 $$sroa$19$0$$sroa_idx178 = ((($1)) + 60|0);
 HEAPF32[$$sroa$19$0$$sroa_idx178>>2] = Math_fround(0.5);
 $$sroa$20$0$$sroa_idx180 = ((($1)) + 64|0);
 HEAPF32[$$sroa$20$0$$sroa_idx180>>2] = Math_fround(0.5);
 $$sroa$21$0$$sroa_idx182 = ((($1)) + 68|0);
 HEAPF32[$$sroa$21$0$$sroa_idx182>>2] = Math_fround(-0.5);
 $$sroa$22$0$$sroa_idx184 = ((($1)) + 72|0);
 HEAPF32[$$sroa$22$0$$sroa_idx184>>2] = Math_fround(1.0);
 $$sroa$23$0$$sroa_idx186 = ((($1)) + 76|0);
 HEAPF32[$$sroa$23$0$$sroa_idx186>>2] = Math_fround(1.0);
 $$sroa$24$0$$sroa_idx188 = ((($1)) + 80|0);
 HEAPF32[$$sroa$24$0$$sroa_idx188>>2] = Math_fround(-0.5);
 $$sroa$25$0$$sroa_idx190 = ((($1)) + 84|0);
 HEAPF32[$$sroa$25$0$$sroa_idx190>>2] = Math_fround(0.5);
 $$sroa$26$0$$sroa_idx192 = ((($1)) + 88|0);
 HEAPF32[$$sroa$26$0$$sroa_idx192>>2] = Math_fround(-0.5);
 $$sroa$27$0$$sroa_idx194 = ((($1)) + 92|0);
 HEAPF32[$$sroa$27$0$$sroa_idx194>>2] = Math_fround(0.0);
 $$sroa$28$0$$sroa_idx196 = ((($1)) + 96|0);
 HEAPF32[$$sroa$28$0$$sroa_idx196>>2] = Math_fround(1.0);
 $$sroa$29$0$$sroa_idx198 = ((($1)) + 100|0);
 HEAPF32[$$sroa$29$0$$sroa_idx198>>2] = Math_fround(-0.5);
 $$sroa$30$0$$sroa_idx200 = ((($1)) + 104|0);
 HEAPF32[$$sroa$30$0$$sroa_idx200>>2] = Math_fround(-0.5);
 $$sroa$31$0$$sroa_idx202 = ((($1)) + 108|0);
 HEAPF32[$$sroa$31$0$$sroa_idx202>>2] = Math_fround(-0.5);
 $$sroa$32$0$$sroa_idx204 = ((($1)) + 112|0);
 HEAPF32[$$sroa$32$0$$sroa_idx204>>2] = Math_fround(0.0);
 $$sroa$33$0$$sroa_idx206 = ((($1)) + 116|0);
 HEAPF32[$$sroa$33$0$$sroa_idx206>>2] = Math_fround(0.0);
 $$sroa$34$0$$sroa_idx208 = ((($1)) + 120|0);
 HEAPF32[$$sroa$34$0$$sroa_idx208>>2] = Math_fround(-0.5);
 $$sroa$35$0$$sroa_idx210 = ((($1)) + 124|0);
 HEAPF32[$$sroa$35$0$$sroa_idx210>>2] = Math_fround(-0.5);
 $$sroa$36$0$$sroa_idx212 = ((($1)) + 128|0);
 HEAPF32[$$sroa$36$0$$sroa_idx212>>2] = Math_fround(0.5);
 $$sroa$37$0$$sroa_idx214 = ((($1)) + 132|0);
 HEAPF32[$$sroa$37$0$$sroa_idx214>>2] = Math_fround(0.0);
 $$sroa$38$0$$sroa_idx216 = ((($1)) + 136|0);
 HEAPF32[$$sroa$38$0$$sroa_idx216>>2] = Math_fround(0.0);
 $$sroa$39$0$$sroa_idx218 = ((($1)) + 140|0);
 HEAPF32[$$sroa$39$0$$sroa_idx218>>2] = Math_fround(0.5);
 $$sroa$40$0$$sroa_idx220 = ((($1)) + 144|0);
 HEAPF32[$$sroa$40$0$$sroa_idx220>>2] = Math_fround(-0.5);
 $$sroa$41$0$$sroa_idx222 = ((($1)) + 148|0);
 HEAPF32[$$sroa$41$0$$sroa_idx222>>2] = Math_fround(0.5);
 $$sroa$42$0$$sroa_idx224 = ((($1)) + 152|0);
 HEAPF32[$$sroa$42$0$$sroa_idx224>>2] = Math_fround(1.0);
 $$sroa$43$0$$sroa_idx226 = ((($1)) + 156|0);
 HEAPF32[$$sroa$43$0$$sroa_idx226>>2] = Math_fround(0.0);
 $$sroa$44$0$$sroa_idx228 = ((($1)) + 160|0);
 HEAPF32[$$sroa$44$0$$sroa_idx228>>2] = Math_fround(0.5);
 $$sroa$45$0$$sroa_idx230 = ((($1)) + 164|0);
 HEAPF32[$$sroa$45$0$$sroa_idx230>>2] = Math_fround(0.5);
 $$sroa$46$0$$sroa_idx232 = ((($1)) + 168|0);
 HEAPF32[$$sroa$46$0$$sroa_idx232>>2] = Math_fround(0.5);
 $$sroa$47$0$$sroa_idx234 = ((($1)) + 172|0);
 HEAPF32[$$sroa$47$0$$sroa_idx234>>2] = Math_fround(1.0);
 $$sroa$48$0$$sroa_idx236 = ((($1)) + 176|0);
 HEAPF32[$$sroa$48$0$$sroa_idx236>>2] = Math_fround(1.0);
 $$sroa$49$0$$sroa_idx238 = ((($1)) + 180|0);
 HEAPF32[$$sroa$49$0$$sroa_idx238>>2] = Math_fround(0.5);
 $$sroa$50$0$$sroa_idx240 = ((($1)) + 184|0);
 HEAPF32[$$sroa$50$0$$sroa_idx240>>2] = Math_fround(0.5);
 $$sroa$51$0$$sroa_idx242 = ((($1)) + 188|0);
 HEAPF32[$$sroa$51$0$$sroa_idx242>>2] = Math_fround(0.5);
 $$sroa$52$0$$sroa_idx244 = ((($1)) + 192|0);
 HEAPF32[$$sroa$52$0$$sroa_idx244>>2] = Math_fround(1.0);
 $$sroa$53$0$$sroa_idx246 = ((($1)) + 196|0);
 HEAPF32[$$sroa$53$0$$sroa_idx246>>2] = Math_fround(1.0);
 $$sroa$54$0$$sroa_idx248 = ((($1)) + 200|0);
 HEAPF32[$$sroa$54$0$$sroa_idx248>>2] = Math_fround(-0.5);
 $$sroa$55$0$$sroa_idx250 = ((($1)) + 204|0);
 HEAPF32[$$sroa$55$0$$sroa_idx250>>2] = Math_fround(0.5);
 $$sroa$56$0$$sroa_idx252 = ((($1)) + 208|0);
 HEAPF32[$$sroa$56$0$$sroa_idx252>>2] = Math_fround(0.5);
 $$sroa$57$0$$sroa_idx254 = ((($1)) + 212|0);
 HEAPF32[$$sroa$57$0$$sroa_idx254>>2] = Math_fround(0.0);
 $$sroa$58$0$$sroa_idx256 = ((($1)) + 216|0);
 HEAPF32[$$sroa$58$0$$sroa_idx256>>2] = Math_fround(1.0);
 $$sroa$59$0$$sroa_idx258 = ((($1)) + 220|0);
 HEAPF32[$$sroa$59$0$$sroa_idx258>>2] = Math_fround(-0.5);
 $$sroa$60$0$$sroa_idx260 = ((($1)) + 224|0);
 HEAPF32[$$sroa$60$0$$sroa_idx260>>2] = Math_fround(-0.5);
 $$sroa$61$0$$sroa_idx262 = ((($1)) + 228|0);
 HEAPF32[$$sroa$61$0$$sroa_idx262>>2] = Math_fround(0.5);
 $$sroa$62$0$$sroa_idx264 = ((($1)) + 232|0);
 HEAPF32[$$sroa$62$0$$sroa_idx264>>2] = Math_fround(0.0);
 $$sroa$63$0$$sroa_idx266 = ((($1)) + 236|0);
 HEAPF32[$$sroa$63$0$$sroa_idx266>>2] = Math_fround(0.0);
 $$sroa$64$0$$sroa_idx268 = ((($1)) + 240|0);
 HEAPF32[$$sroa$64$0$$sroa_idx268>>2] = Math_fround(-0.5);
 $$sroa$65$0$$sroa_idx270 = ((($1)) + 244|0);
 HEAPF32[$$sroa$65$0$$sroa_idx270>>2] = Math_fround(0.5);
 $$sroa$66$0$$sroa_idx272 = ((($1)) + 248|0);
 HEAPF32[$$sroa$66$0$$sroa_idx272>>2] = Math_fround(0.5);
 $$sroa$67$0$$sroa_idx274 = ((($1)) + 252|0);
 HEAPF32[$$sroa$67$0$$sroa_idx274>>2] = Math_fround(1.0);
 $$sroa$68$0$$sroa_idx276 = ((($1)) + 256|0);
 HEAPF32[$$sroa$68$0$$sroa_idx276>>2] = Math_fround(0.0);
 $$sroa$69$0$$sroa_idx278 = ((($1)) + 260|0);
 HEAPF32[$$sroa$69$0$$sroa_idx278>>2] = Math_fround(-0.5);
 $$sroa$70$0$$sroa_idx280 = ((($1)) + 264|0);
 HEAPF32[$$sroa$70$0$$sroa_idx280>>2] = Math_fround(0.5);
 $$sroa$71$0$$sroa_idx282 = ((($1)) + 268|0);
 HEAPF32[$$sroa$71$0$$sroa_idx282>>2] = Math_fround(-0.5);
 $$sroa$72$0$$sroa_idx284 = ((($1)) + 272|0);
 HEAPF32[$$sroa$72$0$$sroa_idx284>>2] = Math_fround(1.0);
 $$sroa$73$0$$sroa_idx286 = ((($1)) + 276|0);
 HEAPF32[$$sroa$73$0$$sroa_idx286>>2] = Math_fround(1.0);
 $$sroa$74$0$$sroa_idx288 = ((($1)) + 280|0);
 HEAPF32[$$sroa$74$0$$sroa_idx288>>2] = Math_fround(-0.5);
 $$sroa$75$0$$sroa_idx290 = ((($1)) + 284|0);
 HEAPF32[$$sroa$75$0$$sroa_idx290>>2] = Math_fround(-0.5);
 $$sroa$76$0$$sroa_idx292 = ((($1)) + 288|0);
 HEAPF32[$$sroa$76$0$$sroa_idx292>>2] = Math_fround(-0.5);
 $$sroa$77$0$$sroa_idx294 = ((($1)) + 292|0);
 HEAPF32[$$sroa$77$0$$sroa_idx294>>2] = Math_fround(0.0);
 $$sroa$78$0$$sroa_idx296 = ((($1)) + 296|0);
 HEAPF32[$$sroa$78$0$$sroa_idx296>>2] = Math_fround(1.0);
 $$sroa$79$0$$sroa_idx298 = ((($1)) + 300|0);
 HEAPF32[$$sroa$79$0$$sroa_idx298>>2] = Math_fround(-0.5);
 $$sroa$80$0$$sroa_idx300 = ((($1)) + 304|0);
 HEAPF32[$$sroa$80$0$$sroa_idx300>>2] = Math_fround(-0.5);
 $$sroa$81$0$$sroa_idx302 = ((($1)) + 308|0);
 HEAPF32[$$sroa$81$0$$sroa_idx302>>2] = Math_fround(-0.5);
 $$sroa$82$0$$sroa_idx304 = ((($1)) + 312|0);
 HEAPF32[$$sroa$82$0$$sroa_idx304>>2] = Math_fround(0.0);
 $$sroa$83$0$$sroa_idx306 = ((($1)) + 316|0);
 HEAPF32[$$sroa$83$0$$sroa_idx306>>2] = Math_fround(1.0);
 $$sroa$84$0$$sroa_idx308 = ((($1)) + 320|0);
 HEAPF32[$$sroa$84$0$$sroa_idx308>>2] = Math_fround(-0.5);
 $$sroa$85$0$$sroa_idx310 = ((($1)) + 324|0);
 HEAPF32[$$sroa$85$0$$sroa_idx310>>2] = Math_fround(-0.5);
 $$sroa$86$0$$sroa_idx312 = ((($1)) + 328|0);
 HEAPF32[$$sroa$86$0$$sroa_idx312>>2] = Math_fround(0.5);
 $$sroa$87$0$$sroa_idx314 = ((($1)) + 332|0);
 HEAPF32[$$sroa$87$0$$sroa_idx314>>2] = Math_fround(0.0);
 $$sroa$88$0$$sroa_idx316 = ((($1)) + 336|0);
 HEAPF32[$$sroa$88$0$$sroa_idx316>>2] = Math_fround(0.0);
 $$sroa$89$0$$sroa_idx318 = ((($1)) + 340|0);
 HEAPF32[$$sroa$89$0$$sroa_idx318>>2] = Math_fround(-0.5);
 $$sroa$90$0$$sroa_idx320 = ((($1)) + 344|0);
 HEAPF32[$$sroa$90$0$$sroa_idx320>>2] = Math_fround(0.5);
 $$sroa$91$0$$sroa_idx322 = ((($1)) + 348|0);
 HEAPF32[$$sroa$91$0$$sroa_idx322>>2] = Math_fround(0.5);
 $$sroa$92$0$$sroa_idx324 = ((($1)) + 352|0);
 HEAPF32[$$sroa$92$0$$sroa_idx324>>2] = Math_fround(1.0);
 $$sroa$93$0$$sroa_idx326 = ((($1)) + 356|0);
 HEAPF32[$$sroa$93$0$$sroa_idx326>>2] = Math_fround(0.0);
 $$sroa$94$0$$sroa_idx328 = ((($1)) + 360|0);
 HEAPF32[$$sroa$94$0$$sroa_idx328>>2] = Math_fround(0.5);
 $$sroa$95$0$$sroa_idx330 = ((($1)) + 364|0);
 HEAPF32[$$sroa$95$0$$sroa_idx330>>2] = Math_fround(0.5);
 $$sroa$96$0$$sroa_idx332 = ((($1)) + 368|0);
 HEAPF32[$$sroa$96$0$$sroa_idx332>>2] = Math_fround(0.5);
 $$sroa$97$0$$sroa_idx334 = ((($1)) + 372|0);
 HEAPF32[$$sroa$97$0$$sroa_idx334>>2] = Math_fround(1.0);
 $$sroa$98$0$$sroa_idx336 = ((($1)) + 376|0);
 HEAPF32[$$sroa$98$0$$sroa_idx336>>2] = Math_fround(0.0);
 $$sroa$99$0$$sroa_idx338 = ((($1)) + 380|0);
 HEAPF32[$$sroa$99$0$$sroa_idx338>>2] = Math_fround(0.5);
 $$sroa$100$0$$sroa_idx340 = ((($1)) + 384|0);
 HEAPF32[$$sroa$100$0$$sroa_idx340>>2] = Math_fround(0.5);
 $$sroa$101$0$$sroa_idx342 = ((($1)) + 388|0);
 HEAPF32[$$sroa$101$0$$sroa_idx342>>2] = Math_fround(-0.5);
 $$sroa$102$0$$sroa_idx344 = ((($1)) + 392|0);
 HEAPF32[$$sroa$102$0$$sroa_idx344>>2] = Math_fround(1.0);
 $$sroa$103$0$$sroa_idx346 = ((($1)) + 396|0);
 HEAPF32[$$sroa$103$0$$sroa_idx346>>2] = Math_fround(1.0);
 $$sroa$104$0$$sroa_idx348 = ((($1)) + 400|0);
 HEAPF32[$$sroa$104$0$$sroa_idx348>>2] = Math_fround(0.5);
 $$sroa$105$0$$sroa_idx350 = ((($1)) + 404|0);
 HEAPF32[$$sroa$105$0$$sroa_idx350>>2] = Math_fround(-0.5);
 $$sroa$106$0$$sroa_idx352 = ((($1)) + 408|0);
 HEAPF32[$$sroa$106$0$$sroa_idx352>>2] = Math_fround(-0.5);
 $$sroa$107$0$$sroa_idx354 = ((($1)) + 412|0);
 HEAPF32[$$sroa$107$0$$sroa_idx354>>2] = Math_fround(0.0);
 $$sroa$108$0$$sroa_idx356 = ((($1)) + 416|0);
 HEAPF32[$$sroa$108$0$$sroa_idx356>>2] = Math_fround(1.0);
 $$sroa$109$0$$sroa_idx358 = ((($1)) + 420|0);
 HEAPF32[$$sroa$109$0$$sroa_idx358>>2] = Math_fround(0.5);
 $$sroa$110$0$$sroa_idx360 = ((($1)) + 424|0);
 HEAPF32[$$sroa$110$0$$sroa_idx360>>2] = Math_fround(-0.5);
 $$sroa$111$0$$sroa_idx362 = ((($1)) + 428|0);
 HEAPF32[$$sroa$111$0$$sroa_idx362>>2] = Math_fround(-0.5);
 $$sroa$112$0$$sroa_idx364 = ((($1)) + 432|0);
 HEAPF32[$$sroa$112$0$$sroa_idx364>>2] = Math_fround(0.0);
 $$sroa$113$0$$sroa_idx366 = ((($1)) + 436|0);
 HEAPF32[$$sroa$113$0$$sroa_idx366>>2] = Math_fround(1.0);
 $$sroa$114$0$$sroa_idx368 = ((($1)) + 440|0);
 HEAPF32[$$sroa$114$0$$sroa_idx368>>2] = Math_fround(0.5);
 $$sroa$115$0$$sroa_idx370 = ((($1)) + 444|0);
 HEAPF32[$$sroa$115$0$$sroa_idx370>>2] = Math_fround(-0.5);
 $$sroa$116$0$$sroa_idx372 = ((($1)) + 448|0);
 HEAPF32[$$sroa$116$0$$sroa_idx372>>2] = Math_fround(0.5);
 $$sroa$117$0$$sroa_idx374 = ((($1)) + 452|0);
 HEAPF32[$$sroa$117$0$$sroa_idx374>>2] = Math_fround(0.0);
 $$sroa$118$0$$sroa_idx376 = ((($1)) + 456|0);
 HEAPF32[$$sroa$118$0$$sroa_idx376>>2] = Math_fround(0.0);
 $$sroa$119$0$$sroa_idx378 = ((($1)) + 460|0);
 HEAPF32[$$sroa$119$0$$sroa_idx378>>2] = Math_fround(0.5);
 $$sroa$120$0$$sroa_idx380 = ((($1)) + 464|0);
 HEAPF32[$$sroa$120$0$$sroa_idx380>>2] = Math_fround(0.5);
 $$sroa$121$0$$sroa_idx382 = ((($1)) + 468|0);
 HEAPF32[$$sroa$121$0$$sroa_idx382>>2] = Math_fround(0.5);
 $$sroa$122$0$$sroa_idx384 = ((($1)) + 472|0);
 HEAPF32[$$sroa$122$0$$sroa_idx384>>2] = Math_fround(1.0);
 $$sroa$123$0$$sroa_idx386 = ((($1)) + 476|0);
 HEAPF32[$$sroa$123$0$$sroa_idx386>>2] = Math_fround(0.0);
 $$sroa$124$0$$sroa_idx388 = ((($1)) + 480|0);
 HEAPF32[$$sroa$124$0$$sroa_idx388>>2] = Math_fround(-0.5);
 $$sroa$125$0$$sroa_idx390 = ((($1)) + 484|0);
 HEAPF32[$$sroa$125$0$$sroa_idx390>>2] = Math_fround(-0.5);
 $$sroa$126$0$$sroa_idx392 = ((($1)) + 488|0);
 HEAPF32[$$sroa$126$0$$sroa_idx392>>2] = Math_fround(-0.5);
 $$sroa$127$0$$sroa_idx394 = ((($1)) + 492|0);
 HEAPF32[$$sroa$127$0$$sroa_idx394>>2] = Math_fround(0.0);
 $$sroa$128$0$$sroa_idx396 = ((($1)) + 496|0);
 HEAPF32[$$sroa$128$0$$sroa_idx396>>2] = Math_fround(1.0);
 $$sroa$129$0$$sroa_idx398 = ((($1)) + 500|0);
 HEAPF32[$$sroa$129$0$$sroa_idx398>>2] = Math_fround(0.5);
 $$sroa$130$0$$sroa_idx400 = ((($1)) + 504|0);
 HEAPF32[$$sroa$130$0$$sroa_idx400>>2] = Math_fround(-0.5);
 $$sroa$131$0$$sroa_idx402 = ((($1)) + 508|0);
 HEAPF32[$$sroa$131$0$$sroa_idx402>>2] = Math_fround(-0.5);
 $$sroa$132$0$$sroa_idx404 = ((($1)) + 512|0);
 HEAPF32[$$sroa$132$0$$sroa_idx404>>2] = Math_fround(1.0);
 $$sroa$133$0$$sroa_idx406 = ((($1)) + 516|0);
 HEAPF32[$$sroa$133$0$$sroa_idx406>>2] = Math_fround(1.0);
 $$sroa$134$0$$sroa_idx408 = ((($1)) + 520|0);
 HEAPF32[$$sroa$134$0$$sroa_idx408>>2] = Math_fround(0.5);
 $$sroa$135$0$$sroa_idx410 = ((($1)) + 524|0);
 HEAPF32[$$sroa$135$0$$sroa_idx410>>2] = Math_fround(-0.5);
 $$sroa$136$0$$sroa_idx412 = ((($1)) + 528|0);
 HEAPF32[$$sroa$136$0$$sroa_idx412>>2] = Math_fround(0.5);
 $$sroa$137$0$$sroa_idx414 = ((($1)) + 532|0);
 HEAPF32[$$sroa$137$0$$sroa_idx414>>2] = Math_fround(1.0);
 $$sroa$138$0$$sroa_idx416 = ((($1)) + 536|0);
 HEAPF32[$$sroa$138$0$$sroa_idx416>>2] = Math_fround(0.0);
 $$sroa$139$0$$sroa_idx418 = ((($1)) + 540|0);
 HEAPF32[$$sroa$139$0$$sroa_idx418>>2] = Math_fround(0.5);
 $$sroa$140$0$$sroa_idx420 = ((($1)) + 544|0);
 HEAPF32[$$sroa$140$0$$sroa_idx420>>2] = Math_fround(-0.5);
 $$sroa$141$0$$sroa_idx422 = ((($1)) + 548|0);
 HEAPF32[$$sroa$141$0$$sroa_idx422>>2] = Math_fround(0.5);
 $$sroa$142$0$$sroa_idx424 = ((($1)) + 552|0);
 HEAPF32[$$sroa$142$0$$sroa_idx424>>2] = Math_fround(1.0);
 $$sroa$143$0$$sroa_idx426 = ((($1)) + 556|0);
 HEAPF32[$$sroa$143$0$$sroa_idx426>>2] = Math_fround(0.0);
 $$sroa$144$0$$sroa_idx428 = ((($1)) + 560|0);
 HEAPF32[$$sroa$144$0$$sroa_idx428>>2] = Math_fround(-0.5);
 $$sroa$145$0$$sroa_idx430 = ((($1)) + 564|0);
 HEAPF32[$$sroa$145$0$$sroa_idx430>>2] = Math_fround(-0.5);
 $$sroa$146$0$$sroa_idx432 = ((($1)) + 568|0);
 HEAPF32[$$sroa$146$0$$sroa_idx432>>2] = Math_fround(0.5);
 $$sroa$147$0$$sroa_idx434 = ((($1)) + 572|0);
 HEAPF32[$$sroa$147$0$$sroa_idx434>>2] = Math_fround(0.0);
 $$sroa$148$0$$sroa_idx436 = ((($1)) + 576|0);
 HEAPF32[$$sroa$148$0$$sroa_idx436>>2] = Math_fround(0.0);
 $$sroa$149$0$$sroa_idx438 = ((($1)) + 580|0);
 HEAPF32[$$sroa$149$0$$sroa_idx438>>2] = Math_fround(-0.5);
 $$sroa$150$0$$sroa_idx440 = ((($1)) + 584|0);
 HEAPF32[$$sroa$150$0$$sroa_idx440>>2] = Math_fround(-0.5);
 $$sroa$151$0$$sroa_idx442 = ((($1)) + 588|0);
 HEAPF32[$$sroa$151$0$$sroa_idx442>>2] = Math_fround(-0.5);
 $$sroa$152$0$$sroa_idx444 = ((($1)) + 592|0);
 HEAPF32[$$sroa$152$0$$sroa_idx444>>2] = Math_fround(0.0);
 $$sroa$153$0$$sroa_idx446 = ((($1)) + 596|0);
 HEAPF32[$$sroa$153$0$$sroa_idx446>>2] = Math_fround(1.0);
 $$sroa$154$0$$sroa_idx448 = ((($1)) + 600|0);
 HEAPF32[$$sroa$154$0$$sroa_idx448>>2] = Math_fround(-0.5);
 $$sroa$155$0$$sroa_idx450 = ((($1)) + 604|0);
 HEAPF32[$$sroa$155$0$$sroa_idx450>>2] = Math_fround(0.5);
 $$sroa$156$0$$sroa_idx452 = ((($1)) + 608|0);
 HEAPF32[$$sroa$156$0$$sroa_idx452>>2] = Math_fround(-0.5);
 $$sroa$157$0$$sroa_idx454 = ((($1)) + 612|0);
 HEAPF32[$$sroa$157$0$$sroa_idx454>>2] = Math_fround(0.0);
 $$sroa$158$0$$sroa_idx456 = ((($1)) + 616|0);
 HEAPF32[$$sroa$158$0$$sroa_idx456>>2] = Math_fround(1.0);
 $$sroa$159$0$$sroa_idx458 = ((($1)) + 620|0);
 HEAPF32[$$sroa$159$0$$sroa_idx458>>2] = Math_fround(0.5);
 $$sroa$160$0$$sroa_idx460 = ((($1)) + 624|0);
 HEAPF32[$$sroa$160$0$$sroa_idx460>>2] = Math_fround(0.5);
 $$sroa$161$0$$sroa_idx462 = ((($1)) + 628|0);
 HEAPF32[$$sroa$161$0$$sroa_idx462>>2] = Math_fround(-0.5);
 $$sroa$162$0$$sroa_idx464 = ((($1)) + 632|0);
 HEAPF32[$$sroa$162$0$$sroa_idx464>>2] = Math_fround(1.0);
 $$sroa$163$0$$sroa_idx466 = ((($1)) + 636|0);
 HEAPF32[$$sroa$163$0$$sroa_idx466>>2] = Math_fround(1.0);
 $$sroa$164$0$$sroa_idx468 = ((($1)) + 640|0);
 HEAPF32[$$sroa$164$0$$sroa_idx468>>2] = Math_fround(0.5);
 $$sroa$165$0$$sroa_idx470 = ((($1)) + 644|0);
 HEAPF32[$$sroa$165$0$$sroa_idx470>>2] = Math_fround(0.5);
 $$sroa$166$0$$sroa_idx472 = ((($1)) + 648|0);
 HEAPF32[$$sroa$166$0$$sroa_idx472>>2] = Math_fround(0.5);
 $$sroa$167$0$$sroa_idx474 = ((($1)) + 652|0);
 HEAPF32[$$sroa$167$0$$sroa_idx474>>2] = Math_fround(1.0);
 $$sroa$168$0$$sroa_idx476 = ((($1)) + 656|0);
 HEAPF32[$$sroa$168$0$$sroa_idx476>>2] = Math_fround(0.0);
 $$sroa$169$0$$sroa_idx478 = ((($1)) + 660|0);
 HEAPF32[$$sroa$169$0$$sroa_idx478>>2] = Math_fround(0.5);
 $$sroa$170$0$$sroa_idx480 = ((($1)) + 664|0);
 HEAPF32[$$sroa$170$0$$sroa_idx480>>2] = Math_fround(0.5);
 $$sroa$171$0$$sroa_idx482 = ((($1)) + 668|0);
 HEAPF32[$$sroa$171$0$$sroa_idx482>>2] = Math_fround(0.5);
 $$sroa$172$0$$sroa_idx484 = ((($1)) + 672|0);
 HEAPF32[$$sroa$172$0$$sroa_idx484>>2] = Math_fround(1.0);
 $$sroa$173$0$$sroa_idx486 = ((($1)) + 676|0);
 HEAPF32[$$sroa$173$0$$sroa_idx486>>2] = Math_fround(0.0);
 $$sroa$174$0$$sroa_idx488 = ((($1)) + 680|0);
 HEAPF32[$$sroa$174$0$$sroa_idx488>>2] = Math_fround(-0.5);
 $$sroa$175$0$$sroa_idx490 = ((($1)) + 684|0);
 HEAPF32[$$sroa$175$0$$sroa_idx490>>2] = Math_fround(0.5);
 $$sroa$176$0$$sroa_idx492 = ((($1)) + 688|0);
 HEAPF32[$$sroa$176$0$$sroa_idx492>>2] = Math_fround(0.5);
 $$sroa$177$0$$sroa_idx494 = ((($1)) + 692|0);
 HEAPF32[$$sroa$177$0$$sroa_idx494>>2] = Math_fround(0.0);
 $$sroa$178$0$$sroa_idx496 = ((($1)) + 696|0);
 HEAPF32[$$sroa$178$0$$sroa_idx496>>2] = Math_fround(0.0);
 $$sroa$179$0$$sroa_idx498 = ((($1)) + 700|0);
 HEAPF32[$$sroa$179$0$$sroa_idx498>>2] = Math_fround(-0.5);
 $$sroa$180$0$$sroa_idx500 = ((($1)) + 704|0);
 HEAPF32[$$sroa$180$0$$sroa_idx500>>2] = Math_fround(0.5);
 $$sroa$181$0$$sroa_idx502 = ((($1)) + 708|0);
 HEAPF32[$$sroa$181$0$$sroa_idx502>>2] = Math_fround(-0.5);
 $$sroa$182$0$$sroa_idx504 = ((($1)) + 712|0);
 HEAPF32[$$sroa$182$0$$sroa_idx504>>2] = Math_fround(0.0);
 $$sroa$183$0$$sroa_idx506 = ((($1)) + 716|0);
 HEAPF32[$$sroa$183$0$$sroa_idx506>>2] = Math_fround(1.0);
 $25 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(0.0))|0);
 $26 = (_glm_vec3_new(Math_fround(2.0),Math_fround(5.0),Math_fround(-15.0))|0);
 $27 = (_glm_vec3_new(Math_fround(-1.5),Math_fround(-2.20000005),Math_fround(-2.5))|0);
 $28 = (_glm_vec3_new(Math_fround(-3.79999995),Math_fround(-2.0),Math_fround(-12.3000002))|0);
 $29 = (_glm_vec3_new(Math_fround(2.4000001),Math_fround(-0.400000006),Math_fround(-3.5))|0);
 $30 = (_glm_vec3_new(Math_fround(-1.70000005),Math_fround(3.0),Math_fround(-7.5))|0);
 $31 = (_glm_vec3_new(Math_fround(1.29999995),Math_fround(-2.0),Math_fround(-2.5))|0);
 $32 = (_glm_vec3_new(Math_fround(1.5),Math_fround(2.0),Math_fround(-2.5))|0);
 $33 = (_glm_vec3_new(Math_fround(1.5),Math_fround(0.200000003),Math_fround(-1.5))|0);
 $34 = (_glm_vec3_new(Math_fround(-1.29999995),Math_fround(1.0),Math_fround(-1.5))|0);
 $35 = (_g_malloc0_n(11,4)|0);
 HEAP32[$35>>2] = $25;
 $36 = ((($35)) + 4|0);
 HEAP32[$36>>2] = $26;
 $37 = ((($35)) + 8|0);
 HEAP32[$37>>2] = $27;
 $38 = ((($35)) + 12|0);
 HEAP32[$38>>2] = $28;
 $39 = ((($35)) + 16|0);
 HEAP32[$39>>2] = $29;
 $40 = ((($35)) + 20|0);
 HEAP32[$40>>2] = $30;
 $41 = ((($35)) + 24|0);
 HEAP32[$41>>2] = $31;
 $42 = ((($35)) + 28|0);
 HEAP32[$42>>2] = $32;
 $43 = ((($35)) + 32|0);
 HEAP32[$43>>2] = $33;
 $44 = ((($35)) + 36|0);
 HEAP32[$44>>2] = $34;
 $45 = HEAP32[$3>>2]|0;
 $46 = ((($45)) + 72|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ((($45)) + 76|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($47|0)!=(0|0);
 $51 = ($49|0)>(0);
 $or$cond$i$i = $50 & $51;
 if ($or$cond$i$i) {
  $$01$i$i = 0;
  while(1) {
   $52 = (($47) + ($$01$i$i<<2)|0);
   $53 = HEAP32[$52>>2]|0;
   $54 = ($53|0)==(0|0);
   if (!($54)) {
    _glm_vec3_unref($53);
   }
   $55 = (($$01$i$i) + 1)|0;
   $exitcond$i$i = ($55|0)==($49|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01$i$i = $55;
   }
  }
 }
 _g_free($47);
 $56 = HEAP32[$3>>2]|0;
 $57 = ((($56)) + 72|0);
 HEAP32[$57>>2] = $35;
 $58 = ((($56)) + 76|0);
 HEAP32[$58>>2] = 10;
 $59 = ((($56)) + 80|0);
 HEAP32[$59>>2] = 10;
 HEAP32[$56>>2] = 0;
 $60 = ((($56)) + 4|0);
 HEAP32[$60>>2] = 0;
 _glGenVertexArrays(1,($60|0));
 $61 = HEAP32[$3>>2]|0;
 _glGenBuffers(1,($61|0));
 $62 = HEAP32[$3>>2]|0;
 $63 = ((($62)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 _glBindVertexArray(($64|0));
 $65 = HEAP32[$3>>2]|0;
 $66 = HEAP32[$65>>2]|0;
 _glBindBuffer(34962,($66|0));
 _glBufferData(34962,720,($1|0),35044);
 _glVertexAttribPointer(0,3,5126,0,20,(0|0));
 _glEnableVertexAttribArray(0);
 _glVertexAttribPointer(1,2,5126,0,20,((12)|0));
 _glEnableVertexAttribArray(1);
 $67 = HEAP32[$3>>2]|0;
 $68 = ((($67)) + 8|0);
 _glGenTextures(1,($68|0));
 $69 = HEAP32[$3>>2]|0;
 $70 = ((($69)) + 8|0);
 $71 = HEAP32[$70>>2]|0;
 _glBindTexture(3553,($71|0));
 _glTexParameteri(3553,10242,10497);
 _glTexParameteri(3553,10243,10497);
 _glTexParameteri(3553,10241,9729);
 _glTexParameteri(3553,10240,9729);
 $72 = (_image_new(142333)|0);
 $73 = HEAP32[$3>>2]|0;
 $74 = ((($73)) + 24|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ($75|0)==(0|0);
 if ($76) {
  $$pre$phi600Z2D = $74;
 } else {
  _g_object_unref($75);
  $77 = HEAP32[$3>>2]|0;
  $78 = ((($77)) + 24|0);
  HEAP32[$78>>2] = 0;
  $$pre$phi600Z2D = $78;
 }
 HEAP32[$$pre$phi600Z2D>>2] = $72;
 $79 = (_image_get_Width($72)|0);
 $80 = HEAP32[$3>>2]|0;
 $81 = ((($80)) + 24|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = (_image_get_Height($82)|0);
 $84 = HEAP32[$3>>2]|0;
 $85 = ((($84)) + 24|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = (_image_get_Pixels($86)|0);
 _glTexImage2D(3553,0,6407,($79|0),($83|0),0,6407,5121,($87|0));
 _glGenerateMipmap(3553);
 $88 = HEAP32[$3>>2]|0;
 $89 = ((($88)) + 12|0);
 _glGenTextures(1,($89|0));
 $90 = HEAP32[$3>>2]|0;
 $91 = ((($90)) + 12|0);
 $92 = HEAP32[$91>>2]|0;
 _glBindTexture(3553,($92|0));
 _glTexParameteri(3553,10242,10497);
 _glTexParameteri(3553,10243,10497);
 _glTexParameteri(3553,10241,9729);
 _glTexParameteri(3553,10240,9729);
 $93 = (_image_new(142361)|0);
 $94 = HEAP32[$3>>2]|0;
 $95 = ((($94)) + 24|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($96|0)==(0|0);
 if ($97) {
  $$pre$phi601Z2D = $95;
 } else {
  _g_object_unref($96);
  $98 = HEAP32[$3>>2]|0;
  $99 = ((($98)) + 24|0);
  HEAP32[$99>>2] = 0;
  $$pre$phi601Z2D = $99;
 }
 HEAP32[$$pre$phi601Z2D>>2] = $93;
 $100 = (_image_get_Width($93)|0);
 $101 = HEAP32[$3>>2]|0;
 $102 = ((($101)) + 24|0);
 $103 = HEAP32[$102>>2]|0;
 $104 = (_image_get_Height($103)|0);
 $105 = HEAP32[$3>>2]|0;
 $106 = ((($105)) + 24|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = (_image_get_Pixels($107)|0);
 _glTexImage2D(3553,0,6408,($100|0),($104|0),0,6408,5121,($108|0));
 _glGenerateMipmap(3553);
 $109 = (_glm_mat4_new(Math_fround(1.0))|0);
 $110 = HEAP32[$3>>2]|0;
 $111 = ((($110)) + 32|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ($112|0)==(0|0);
 if ($113) {
  $$pre$phi602Z2D = $111;
 } else {
  _glm_mat4_unref($112);
  $114 = HEAP32[$3>>2]|0;
  $115 = ((($114)) + 32|0);
  HEAP32[$115>>2] = 0;
  $$pre$phi602Z2D = $115;
 }
 HEAP32[$$pre$phi602Z2D>>2] = $109;
 $116 = (_glm_mat4_new(Math_fround(1.0))|0);
 $117 = HEAP32[$3>>2]|0;
 $118 = ((($117)) + 36|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = ($119|0)==(0|0);
 if ($120) {
  $$pre$phi603Z2D = $118;
 } else {
  _glm_mat4_unref($119);
  $121 = HEAP32[$3>>2]|0;
  $122 = ((($121)) + 36|0);
  HEAP32[$122>>2] = 0;
  $$pre$phi603Z2D = $122;
 }
 HEAP32[$$pre$phi603Z2D>>2] = $116;
 $123 = (_glm_mat4_new(Math_fround(1.0))|0);
 $124 = HEAP32[$3>>2]|0;
 $125 = ((($124)) + 28|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = ($126|0)==(0|0);
 if ($127) {
  $$pre$phi604Z2D = $125;$131 = $124;
 } else {
  _glm_mat4_unref($126);
  $128 = HEAP32[$3>>2]|0;
  $129 = ((($128)) + 28|0);
  HEAP32[$129>>2] = 0;
  $$pre$phi604Z2D = $129;$131 = $128;
 }
 HEAP32[$$pre$phi604Z2D>>2] = $123;
 $130 = ((($131)) + 20|0);
 $132 = HEAP32[$130>>2]|0;
 _shader_Use($132);
 $133 = HEAP32[$3>>2]|0;
 $134 = ((($133)) + 20|0);
 $135 = HEAP32[$134>>2]|0;
 _shader_SetInt($135,142391,0);
 $136 = HEAP32[$3>>2]|0;
 $137 = ((($136)) + 20|0);
 $138 = HEAP32[$137>>2]|0;
 _shader_SetInt($138,142400,1);
 $139 = HEAP32[$3>>2]|0;
 $140 = ((($139)) + 20|0);
 $141 = HEAP32[$140>>2]|0;
 $142 = ((($139)) + 28|0);
 $143 = HEAP32[$142>>2]|0;
 _shader_SetMat4($141,142409,$143);
 _emscripten_set_main_loop((576|0),-1,0);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function ____lambda64__glf_wframebuffersizefun($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _glViewport(0,0,($1|0),($2|0));
 return;
}
function ____lambda65__glf_wcursorposfun($0,$1,$2) {
 $0 = $0|0;
 $1 = +$1;
 $2 = +$2;
 var $$phi$trans$insert$i = 0, $$phi$trans$insert1$i = 0, $$pre$i = Math_fround(0), $$pre$phi$iZ2D = 0, $$pre$phi4$iZ2D = Math_fround(0), $$pre$phi5$iZ2D = 0, $$pre$phi7$iZ2D = Math_fround(0), $$pre2$i = Math_fround(0), $$pre3$i = Math_fround(0), $$pre6$i = Math_fround(0), $$sink = Math_fround(0), $10 = Math_fround(0), $11 = Math_fround(0), $12 = Math_fround(0), $13 = Math_fround(0), $14 = Math_fround(0), $15 = Math_fround(0), $16 = Math_fround(0), $17 = 0, $18 = Math_fround(0);
 var $19 = Math_fround(0), $20 = 0, $21 = Math_fround(0), $22 = Math_fround(0), $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $3 = 0, $30 = Math_fround(0), $31 = Math_fround(0), $32 = 0, $33 = Math_fround(0), $34 = Math_fround(0), $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0);
 var $38 = Math_fround(0), $39 = Math_fround(0), $4 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = 0, $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = 0, $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = Math_fround(0), $7 = 0, $70 = Math_fround(0), $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $8 = Math_fround(0), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37246]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$phi$trans$insert$i = ((($3)) + 32|0);
  $$pre$i = Math_fround(HEAPF32[$$phi$trans$insert$i>>2]);
  $$phi$trans$insert1$i = ((($3)) + 36|0);
  $$pre2$i = Math_fround(HEAPF32[$$phi$trans$insert1$i>>2]);
  $$pre3$i = Math_fround($1);
  $$pre6$i = Math_fround($2);
  $$pre$phi$iZ2D = $$phi$trans$insert$i;$$pre$phi4$iZ2D = $$pre3$i;$$pre$phi5$iZ2D = $$phi$trans$insert1$i;$$pre$phi7$iZ2D = $$pre6$i;$12 = $$pre$i;$14 = $$pre2$i;
 } else {
  $7 = ((($3)) + 36|0);
  $8 = Math_fround($2);
  $9 = ((($3)) + 32|0);
  $10 = Math_fround($1);
  HEAPF32[$9>>2] = $10;
  HEAPF32[$7>>2] = $8;
  HEAP32[$4>>2] = 0;
  $$pre$phi$iZ2D = $9;$$pre$phi4$iZ2D = $10;$$pre$phi5$iZ2D = $7;$$pre$phi7$iZ2D = $8;$12 = $10;$14 = $8;
 }
 $11 = Math_fround($$pre$phi4$iZ2D - $12);
 $13 = Math_fround($14 - $$pre$phi7$iZ2D);
 HEAPF32[$$pre$phi$iZ2D>>2] = $$pre$phi4$iZ2D;
 HEAPF32[$$pre$phi5$iZ2D>>2] = $$pre$phi7$iZ2D;
 $15 = Math_fround($11 * Math_fround(0.0500000007));
 $16 = Math_fround($13 * Math_fround(0.0500000007));
 $17 = ((($3)) + 24|0);
 $18 = Math_fround(HEAPF32[$17>>2]);
 $19 = Math_fround($15 + $18);
 HEAPF32[$17>>2] = $19;
 $20 = ((($3)) + 28|0);
 $21 = Math_fround(HEAPF32[$20>>2]);
 $22 = Math_fround($16 + $21);
 HEAPF32[$20>>2] = $22;
 $23 = $22 > Math_fround(89.0);
 if ($23) {
  $$sink = Math_fround(89.0);
  label = 6;
 } else {
  $24 = $22 < Math_fround(-89.0);
  if ($24) {
   $$sink = Math_fround(-89.0);
   label = 6;
  }
 }
 if ((label|0) == 6) {
  HEAPF32[$20>>2] = $$sink;
 }
 $25 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(0.0))|0);
 $26 = HEAP32[37246]|0;
 $27 = ((($26)) + 24|0);
 $28 = Math_fround(HEAPF32[$27>>2]);
 $29 = Math_fround($28 * Math_fround(3.14159274));
 $30 = Math_fround($29 / Math_fround(180.0));
 $31 = (Math_fround(_cosf($30)));
 $32 = ((($26)) + 28|0);
 $33 = Math_fround(HEAPF32[$32>>2]);
 $34 = Math_fround($33 * Math_fround(3.14159274));
 $35 = Math_fround($34 / Math_fround(180.0));
 $36 = (Math_fround(_cosf($35)));
 $37 = Math_fround($31 * $36);
 HEAPF32[$25>>2] = $37;
 $38 = Math_fround(HEAPF32[$32>>2]);
 $39 = Math_fround($38 * Math_fround(3.14159274));
 $40 = Math_fround($39 / Math_fround(180.0));
 $41 = (Math_fround(_sinf($40)));
 $42 = ((($25)) + 4|0);
 HEAPF32[$42>>2] = $41;
 $43 = Math_fround(HEAPF32[$27>>2]);
 $44 = Math_fround($43 * Math_fround(3.14159274));
 $45 = Math_fround($44 / Math_fround(180.0));
 $46 = (Math_fround(_sinf($45)));
 $47 = Math_fround(HEAPF32[$32>>2]);
 $48 = Math_fround($47 * Math_fround(3.14159274));
 $49 = Math_fround($48 / Math_fround(180.0));
 $50 = (Math_fround(_cosf($49)));
 $51 = Math_fround($46 * $50);
 $52 = ((($25)) + 8|0);
 HEAPF32[$52>>2] = $51;
 $53 = ((($26)) + 16|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ((($54)) + 64|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = Math_fround($37 * $37);
 $58 = Math_fround($41 * $41);
 $59 = Math_fround($57 + $58);
 $60 = Math_fround($51 * $51);
 $61 = Math_fround($59 + $60);
 $62 = (Math_fround(Math_sqrt((Math_fround($61)))));
 $63 = $62 == Math_fround(0.0);
 if ($63) {
  HEAPF32[$56>>2] = Math_fround(0.0);
  $72 = ((($56)) + 4|0);
  HEAPF32[$72>>2] = Math_fround(0.0);
  $73 = ((($56)) + 8|0);
  HEAPF32[$73>>2] = Math_fround(0.0);
  $74 = ($25|0)==(0|0);
  if ($74) {
   return;
  }
 } else {
  $64 = Math_fround(Math_fround(1.0) / $62);
  $65 = Math_fround($37 * $64);
  HEAPF32[$56>>2] = $65;
  $66 = Math_fround(HEAPF32[$42>>2]);
  $67 = Math_fround($64 * $66);
  $68 = ((($56)) + 4|0);
  HEAPF32[$68>>2] = $67;
  $69 = Math_fround(HEAPF32[$52>>2]);
  $70 = Math_fround($64 * $69);
  $71 = ((($56)) + 8|0);
  HEAPF32[$71>>2] = $70;
 }
 _glm_vec3_unref($25);
 return;
}
function ____lambda66__glf_wscrollfun($0,$1,$2) {
 $0 = $0|0;
 $1 = +$1;
 $2 = +$2;
 var $$0$i = 0, $$pr2$i = Math_fround(0), $$sink = Math_fround(0), $10 = 0, $11 = 0, $3 = 0, $4 = 0, $5 = Math_fround(0), $6 = 0, $7 = 0, $8 = Math_fround(0), $9 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[37246]|0;
 $4 = ((($3)) + 40|0);
 $5 = Math_fround(HEAPF32[$4>>2]);
 $6 = $5 >= Math_fround(1.0);
 $7 = $5 <= Math_fround(45.0);
 $$0$i = $7 & $6;
 $8 = Math_fround($2);
 $9 = Math_fround($5 - $8);
 if ($$0$i) {
  HEAPF32[$4>>2] = $9;
  $$pr2$i = $9;
 } else {
  $$pr2$i = $5;
 }
 $10 = !($$pr2$i <= Math_fround(1.0));
 if ($10) {
  $11 = !($$pr2$i >= Math_fround(45.0));
  if ($11) {
   return;
  } else {
   $$sink = Math_fround(45.0);
  }
 } else {
  $$sink = Math_fround(1.0);
 }
 HEAPF32[$4>>2] = $$sink;
 return;
}
function ____lambda67__em_callback_func() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[37246]|0;
 _game_Update($0);
 return;
}
function _game_Update($0) {
 $0 = $0|0;
 var $$idx181 = 0, $$idx181$val = Math_fround(0), $$idx182 = 0, $$idx182$val = Math_fround(0), $$idx184 = 0, $$idx184$val = Math_fround(0), $$idx185 = 0, $$idx185$val = Math_fround(0), $$idx24$val$i = Math_fround(0), $$idx25$val$i = Math_fround(0), $$idx30$val$i = Math_fround(0), $$idx31$val$i = Math_fround(0), $$idx36$val$i = Math_fround(0), $$idx37$val$i = Math_fround(0), $$sink$i$i$i = Math_fround(0), $$sroa$011$0$i$i = Math_fround(0), $$sroa$014$0$i = Math_fround(0), $$sroa$12$0$i = Math_fround(0), $$sroa$22$0$i = Math_fround(0), $$sroa$9$0$i$i = Math_fround(0);
 var $$val180 = Math_fround(0), $$val183 = Math_fround(0), $$val23$i = Math_fround(0), $$val29$i = Math_fround(0), $$val35$i = Math_fround(0), $1 = 0.0, $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = 0, $103 = Math_fround(0), $104 = Math_fround(0), $105 = Math_fround(0), $106 = Math_fround(0), $107 = 0, $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = 0, $111 = Math_fround(0);
 var $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = Math_fround(0), $117 = Math_fround(0), $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0), $124 = Math_fround(0), $125 = Math_fround(0), $126 = Math_fround(0), $127 = 0, $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0;
 var $130 = Math_fround(0), $131 = Math_fround(0), $132 = Math_fround(0), $133 = Math_fround(0), $134 = Math_fround(0), $135 = Math_fround(0), $136 = Math_fround(0), $137 = Math_fround(0), $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = Math_fround(0), $141 = Math_fround(0), $142 = Math_fround(0), $143 = Math_fround(0), $144 = 0, $145 = Math_fround(0), $146 = 0, $147 = 0, $148 = 0;
 var $149 = Math_fround(0), $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = Math_fround(0), $154 = 0, $155 = Math_fround(0), $156 = Math_fround(0), $157 = Math_fround(0), $158 = Math_fround(0), $159 = Math_fround(0), $16 = 0, $160 = Math_fround(0), $161 = 0, $162 = Math_fround(0), $163 = Math_fround(0), $164 = Math_fround(0), $165 = Math_fround(0), $166 = Math_fround(0);
 var $167 = Math_fround(0), $168 = 0, $169 = Math_fround(0), $17 = 0, $170 = Math_fround(0), $171 = Math_fround(0), $172 = Math_fround(0), $173 = Math_fround(0), $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = Math_fround(0), $20 = 0, $200 = 0, $201 = 0;
 var $202 = Math_fround(0), $203 = Math_fround(0), $204 = 0, $205 = Math_fround(0), $206 = Math_fround(0), $207 = 0, $208 = Math_fround(0), $209 = Math_fround(0), $21 = 0, $210 = 0, $211 = Math_fround(0), $212 = Math_fround(0), $213 = 0, $214 = Math_fround(0), $215 = Math_fround(0), $216 = 0, $217 = Math_fround(0), $218 = Math_fround(0), $219 = 0, $22 = 0;
 var $220 = Math_fround(0), $221 = Math_fround(0), $222 = 0, $223 = Math_fround(0), $224 = Math_fround(0), $225 = 0, $226 = Math_fround(0), $227 = Math_fround(0), $228 = 0, $229 = Math_fround(0), $23 = 0, $230 = Math_fround(0), $231 = 0, $232 = Math_fround(0), $233 = Math_fround(0), $234 = 0, $235 = Math_fround(0), $236 = Math_fround(0), $237 = 0, $238 = Math_fround(0);
 var $239 = Math_fround(0), $24 = 0, $240 = 0, $241 = Math_fround(0), $242 = Math_fround(0), $243 = 0, $244 = Math_fround(0), $245 = Math_fround(0), $246 = 0, $247 = Math_fround(0), $248 = Math_fround(0), $249 = Math_fround(0), $25 = 0, $250 = Math_fround(0), $251 = Math_fround(0), $252 = Math_fround(0), $253 = Math_fround(0), $254 = Math_fround(0), $255 = Math_fround(0), $256 = Math_fround(0);
 var $257 = Math_fround(0), $258 = Math_fround(0), $259 = Math_fround(0), $26 = 0, $260 = Math_fround(0), $261 = 0, $262 = 0, $263 = Math_fround(0), $264 = Math_fround(0), $265 = Math_fround(0), $266 = Math_fround(0), $267 = Math_fround(0), $268 = Math_fround(0), $269 = Math_fround(0), $27 = 0, $270 = 0, $271 = Math_fround(0), $272 = Math_fround(0), $273 = Math_fround(0), $274 = Math_fround(0);
 var $275 = Math_fround(0), $276 = Math_fround(0), $277 = Math_fround(0), $278 = Math_fround(0), $279 = Math_fround(0), $28 = 0, $280 = Math_fround(0), $281 = Math_fround(0), $282 = Math_fround(0), $283 = Math_fround(0), $284 = Math_fround(0), $285 = Math_fround(0), $286 = Math_fround(0), $287 = Math_fround(0), $288 = Math_fround(0), $289 = Math_fround(0), $29 = 0, $290 = Math_fround(0), $291 = Math_fround(0), $292 = Math_fround(0);
 var $293 = Math_fround(0), $294 = Math_fround(0), $295 = Math_fround(0), $296 = Math_fround(0), $297 = Math_fround(0), $298 = Math_fround(0), $299 = Math_fround(0), $3 = 0, $30 = 0, $300 = Math_fround(0), $301 = Math_fround(0), $302 = Math_fround(0), $303 = Math_fround(0), $304 = Math_fround(0), $305 = Math_fround(0), $306 = Math_fround(0), $307 = Math_fround(0), $308 = Math_fround(0), $309 = Math_fround(0), $31 = 0;
 var $310 = Math_fround(0), $311 = Math_fround(0), $312 = Math_fround(0), $313 = Math_fround(0), $314 = Math_fround(0), $315 = Math_fround(0), $316 = Math_fround(0), $317 = Math_fround(0), $318 = Math_fround(0), $319 = Math_fround(0), $32 = 0, $320 = Math_fround(0), $321 = Math_fround(0), $322 = Math_fround(0), $323 = Math_fround(0), $324 = Math_fround(0), $325 = Math_fround(0), $326 = Math_fround(0), $327 = Math_fround(0), $328 = Math_fround(0);
 var $329 = Math_fround(0), $33 = 0, $330 = Math_fround(0), $331 = Math_fround(0), $332 = Math_fround(0), $333 = Math_fround(0), $334 = Math_fround(0), $335 = Math_fround(0), $336 = Math_fround(0), $337 = Math_fround(0), $338 = Math_fround(0), $339 = Math_fround(0), $34 = 0, $340 = Math_fround(0), $341 = Math_fround(0), $342 = Math_fround(0), $343 = Math_fround(0), $344 = Math_fround(0), $345 = Math_fround(0), $346 = Math_fround(0);
 var $347 = Math_fround(0), $348 = Math_fround(0), $349 = Math_fround(0), $35 = Math_fround(0), $350 = Math_fround(0), $351 = Math_fround(0), $352 = Math_fround(0), $353 = Math_fround(0), $354 = Math_fround(0), $355 = Math_fround(0), $356 = Math_fround(0), $357 = Math_fround(0), $358 = Math_fround(0), $359 = Math_fround(0), $36 = Math_fround(0), $360 = Math_fround(0), $361 = Math_fround(0), $362 = Math_fround(0), $363 = Math_fround(0), $364 = Math_fround(0);
 var $365 = Math_fround(0), $366 = Math_fround(0), $367 = Math_fround(0), $368 = 0, $369 = 0, $37 = Math_fround(0), $370 = 0, $371 = 0, $372 = 0, $373 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = Math_fround(0), $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = Math_fround(0), $70 = 0, $71 = Math_fround(0), $72 = Math_fround(0), $73 = Math_fround(0), $74 = 0, $75 = Math_fround(0), $76 = 0, $77 = Math_fround(0), $78 = Math_fround(0), $79 = 0, $8 = 0, $80 = 0, $81 = Math_fround(0), $82 = 0;
 var $83 = Math_fround(0), $84 = Math_fround(0), $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0), $exitcond = 0, $spec$select = 0;
 var $spec$select186 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $1 = (+_glfwGetTime());
 $2 = Math_fround($1);
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 88|0);
 $6 = Math_fround(HEAPF32[$5>>2]);
 $7 = Math_fround($2 - $6);
 $8 = ((($4)) + 84|0);
 HEAPF32[$8>>2] = $7;
 HEAPF32[$5>>2] = $2;
 $9 = ((($4)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 _game_ProcessInput($0,$10);
 $11 = HEAP32[$3>>2]|0;
 $12 = ((($11)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_glfwWindowShouldClose(($13|0))|0);
 $15 = ($14|0)==(1);
 if ($15) {
  return;
 }
 _glClearColor(0.200000003,0.300000012,0.300000012,1.0);
 _glClear(16640);
 _glActiveTexture(33984);
 $16 = HEAP32[$3>>2]|0;
 $17 = ((($16)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 _glBindTexture(3553,($18|0));
 _glActiveTexture(33985);
 $19 = HEAP32[$3>>2]|0;
 $20 = ((($19)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 _glBindTexture(3553,($21|0));
 $22 = HEAP32[$3>>2]|0;
 $23 = ((($22)) + 20|0);
 $24 = HEAP32[$23>>2]|0;
 _shader_Use($24);
 $25 = HEAP32[$3>>2]|0;
 $26 = ((($25)) + 28|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ((($27)) + 4|0);
 HEAP32[$27>>2] = 1065353216;
 $29 = ((($27)) + 20|0);
 $30 = ((($27)) + 24|0);
 ;HEAP32[$28>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;HEAP32[$28+12>>2]=0|0;
 HEAP32[$29>>2] = 1065353216;
 $31 = ((($27)) + 40|0);
 $32 = ((($27)) + 44|0);
 ;HEAP32[$30>>2]=0|0;HEAP32[$30+4>>2]=0|0;HEAP32[$30+8>>2]=0|0;HEAP32[$30+12>>2]=0|0;
 HEAP32[$31>>2] = 1065353216;
 $33 = ((($27)) + 60|0);
 ;HEAP32[$32>>2]=0|0;HEAP32[$32+4>>2]=0|0;HEAP32[$32+8>>2]=0|0;HEAP32[$32+12>>2]=0|0;
 HEAP32[$33>>2] = 1065353216;
 $34 = ((($0)) + 40|0);
 $35 = Math_fround(HEAPF32[$34>>2]);
 $36 = Math_fround($35 * Math_fround(3.14159274));
 $37 = Math_fround($36 / Math_fround(180.0));
 $38 = HEAP32[$3>>2]|0;
 $39 = ((($38)) + 28|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ((($40)) + 4|0);
 dest=$41; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $42 = Math_fround($37 * Math_fround(0.5));
 $43 = (Math_fround(_tanf($42)));
 $44 = Math_fround(Math_fround(1.0) / $43);
 $45 = Math_fround($44 / Math_fround(1.33333337));
 HEAPF32[$40>>2] = $45;
 $46 = ((($40)) + 20|0);
 HEAPF32[$46>>2] = $44;
 $47 = ((($40)) + 40|0);
 HEAPF32[$47>>2] = Math_fround(-1.002002);
 $48 = ((($40)) + 44|0);
 HEAPF32[$48>>2] = Math_fround(-1.0);
 $49 = ((($40)) + 56|0);
 HEAPF32[$49>>2] = Math_fround(-0.2002002);
 $50 = HEAP32[$3>>2]|0;
 $51 = ((($50)) + 20|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ((($50)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 _shader_SetMat4($52,142409,$54);
 $55 = HEAP32[$3>>2]|0;
 $56 = ((($55)) + 36|0);
 $57 = HEAP32[$56>>2]|0;
 $58 = ((($57)) + 4|0);
 HEAP32[$57>>2] = 1065353216;
 $59 = ((($57)) + 20|0);
 $60 = ((($57)) + 24|0);
 ;HEAP32[$58>>2]=0|0;HEAP32[$58+4>>2]=0|0;HEAP32[$58+8>>2]=0|0;HEAP32[$58+12>>2]=0|0;
 HEAP32[$59>>2] = 1065353216;
 $61 = ((($57)) + 40|0);
 $62 = ((($57)) + 44|0);
 ;HEAP32[$60>>2]=0|0;HEAP32[$60+4>>2]=0|0;HEAP32[$60+8>>2]=0|0;HEAP32[$60+12>>2]=0|0;
 HEAP32[$61>>2] = 1065353216;
 $63 = ((($57)) + 60|0);
 ;HEAP32[$62>>2]=0|0;HEAP32[$62+4>>2]=0|0;HEAP32[$62+8>>2]=0|0;HEAP32[$62+12>>2]=0|0;
 HEAP32[$63>>2] = 1065353216;
 $64 = HEAP32[$3>>2]|0;
 $65 = ((($64)) + 60|0);
 $66 = HEAP32[$65>>2]|0;
 $67 = ((($64)) + 64|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ((($64)) + 52|0);
 $70 = HEAP32[$69>>2]|0;
 $71 = Math_fround(HEAPF32[$66>>2]);
 $72 = Math_fround(HEAPF32[$68>>2]);
 $73 = Math_fround($71 + $72);
 HEAPF32[$70>>2] = $73;
 $74 = ((($66)) + 4|0);
 $75 = Math_fround(HEAPF32[$74>>2]);
 $76 = ((($68)) + 4|0);
 $77 = Math_fround(HEAPF32[$76>>2]);
 $78 = Math_fround($75 + $77);
 $79 = ((($70)) + 4|0);
 HEAPF32[$79>>2] = $78;
 $80 = ((($66)) + 8|0);
 $81 = Math_fround(HEAPF32[$80>>2]);
 $82 = ((($68)) + 8|0);
 $83 = Math_fround(HEAPF32[$82>>2]);
 $84 = Math_fround($81 + $83);
 $85 = ((($70)) + 8|0);
 HEAPF32[$85>>2] = $84;
 $86 = ((($64)) + 68|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = ((($64)) + 36|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = Math_fround(HEAPF32[$66>>2]);
 $91 = Math_fround($73 - $90);
 $92 = Math_fround(HEAPF32[$74>>2]);
 $93 = Math_fround($78 - $92);
 $94 = Math_fround(HEAPF32[$80>>2]);
 $95 = Math_fround($84 - $94);
 $96 = Math_fround($91 * $91);
 $97 = Math_fround($93 * $93);
 $98 = Math_fround($96 + $97);
 $99 = Math_fround($95 * $95);
 $100 = Math_fround($98 + $99);
 $101 = (Math_fround(Math_sqrt((Math_fround($100)))));
 $102 = $101 == Math_fround(0.0);
 $103 = Math_fround(Math_fround(1.0) / $101);
 $104 = Math_fround($91 * $103);
 $105 = Math_fround($93 * $103);
 $106 = Math_fround($95 * $103);
 $$sroa$014$0$i = $102 ? Math_fround(0.0) : $104;
 $$sroa$12$0$i = $102 ? Math_fround(0.0) : $105;
 $$sroa$22$0$i = $102 ? Math_fround(0.0) : $106;
 $107 = ((($87)) + 8|0);
 $108 = Math_fround(HEAPF32[$107>>2]);
 $109 = Math_fround($108 * $$sroa$12$0$i);
 $110 = ((($87)) + 4|0);
 $111 = Math_fround(HEAPF32[$110>>2]);
 $112 = Math_fround($111 * $$sroa$22$0$i);
 $113 = Math_fround($109 - $112);
 $114 = Math_fround(HEAPF32[$87>>2]);
 $115 = Math_fround($114 * $$sroa$22$0$i);
 $116 = Math_fround($108 * $$sroa$014$0$i);
 $117 = Math_fround($115 - $116);
 $118 = Math_fround($111 * $$sroa$014$0$i);
 $119 = Math_fround($114 * $$sroa$12$0$i);
 $120 = Math_fround($118 - $119);
 $121 = Math_fround($113 * $113);
 $122 = Math_fround($117 * $117);
 $123 = Math_fround($121 + $122);
 $124 = Math_fround($120 * $120);
 $125 = Math_fround($124 + $123);
 $126 = (Math_fround(Math_sqrt((Math_fround($125)))));
 $127 = $126 == Math_fround(0.0);
 $128 = Math_fround(Math_fround(1.0) / $126);
 $129 = Math_fround($113 * $128);
 $130 = Math_fround($117 * $128);
 $131 = Math_fround($120 * $128);
 $132 = $127 ? Math_fround(0.0) : $131;
 $133 = $127 ? Math_fround(0.0) : $130;
 $134 = $127 ? Math_fround(0.0) : $129;
 $135 = Math_fround($$sroa$22$0$i * $133);
 $136 = Math_fround($$sroa$12$0$i * $132);
 $137 = Math_fround($135 - $136);
 $138 = Math_fround($$sroa$014$0$i * $132);
 $139 = Math_fround($$sroa$22$0$i * $134);
 $140 = Math_fround($138 - $139);
 $141 = Math_fround($$sroa$12$0$i * $134);
 $142 = Math_fround($$sroa$014$0$i * $133);
 $143 = Math_fround($141 - $142);
 HEAPF32[$89>>2] = $134;
 $144 = ((($89)) + 4|0);
 HEAPF32[$144>>2] = $137;
 $145 = Math_fround(- $$sroa$014$0$i);
 $146 = ((($89)) + 8|0);
 HEAPF32[$146>>2] = $145;
 $147 = ((($89)) + 16|0);
 HEAPF32[$147>>2] = $133;
 $148 = ((($89)) + 20|0);
 HEAPF32[$148>>2] = $140;
 $149 = Math_fround(- $$sroa$12$0$i);
 $150 = ((($89)) + 24|0);
 HEAPF32[$150>>2] = $149;
 $151 = ((($89)) + 32|0);
 HEAPF32[$151>>2] = $132;
 $152 = ((($89)) + 36|0);
 HEAPF32[$152>>2] = $143;
 $153 = Math_fround(- $$sroa$22$0$i);
 $154 = ((($89)) + 40|0);
 HEAPF32[$154>>2] = $153;
 $$val35$i = Math_fround(HEAPF32[$66>>2]);
 $$idx36$val$i = Math_fround(HEAPF32[$74>>2]);
 $$idx37$val$i = Math_fround(HEAPF32[$80>>2]);
 $155 = Math_fround($$val35$i * $134);
 $156 = Math_fround($$idx36$val$i * $133);
 $157 = Math_fround($155 + $156);
 $158 = Math_fround($$idx37$val$i * $132);
 $159 = Math_fround($158 + $157);
 $160 = Math_fround(- $159);
 $161 = ((($89)) + 48|0);
 HEAPF32[$161>>2] = $160;
 $$val29$i = Math_fround(HEAPF32[$66>>2]);
 $$idx30$val$i = Math_fround(HEAPF32[$74>>2]);
 $$idx31$val$i = Math_fround(HEAPF32[$80>>2]);
 $162 = Math_fround($$val29$i * $137);
 $163 = Math_fround($140 * $$idx30$val$i);
 $164 = Math_fround($162 + $163);
 $165 = Math_fround($143 * $$idx31$val$i);
 $166 = Math_fround($164 + $165);
 $167 = Math_fround(- $166);
 $168 = ((($89)) + 52|0);
 HEAPF32[$168>>2] = $167;
 $$val23$i = Math_fround(HEAPF32[$66>>2]);
 $$idx24$val$i = Math_fround(HEAPF32[$74>>2]);
 $$idx25$val$i = Math_fround(HEAPF32[$80>>2]);
 $169 = Math_fround($$sroa$014$0$i * $$val23$i);
 $170 = Math_fround($$sroa$12$0$i * $$idx24$val$i);
 $171 = Math_fround($169 + $170);
 $172 = Math_fround($$sroa$22$0$i * $$idx25$val$i);
 $173 = Math_fround($171 + $172);
 $174 = ((($89)) + 56|0);
 HEAPF32[$174>>2] = $173;
 $175 = ((($89)) + 44|0);
 HEAPF32[$175>>2] = Math_fround(0.0);
 $176 = ((($89)) + 28|0);
 HEAPF32[$176>>2] = Math_fround(0.0);
 $177 = ((($89)) + 12|0);
 HEAPF32[$177>>2] = Math_fround(0.0);
 $178 = ((($89)) + 60|0);
 HEAPF32[$178>>2] = Math_fround(1.0);
 $179 = ((($64)) + 20|0);
 $180 = HEAP32[$179>>2]|0;
 $181 = HEAP32[$88>>2]|0;
 _shader_SetMat4($180,142420,$181);
 $182 = HEAP32[$3>>2]|0;
 $183 = ((($182)) + 4|0);
 $184 = HEAP32[$183>>2]|0;
 _glBindVertexArray(($184|0));
 $185 = HEAP32[$3>>2]|0;
 $187 = $185;$spec$select186 = 0;
 while(1) {
  $186 = ((($187)) + 32|0);
  $188 = HEAP32[$186>>2]|0;
  $189 = ((($188)) + 4|0);
  HEAP32[$188>>2] = 1065353216;
  $190 = ((($188)) + 20|0);
  $191 = ((($188)) + 24|0);
  ;HEAP32[$189>>2]=0|0;HEAP32[$189+4>>2]=0|0;HEAP32[$189+8>>2]=0|0;HEAP32[$189+12>>2]=0|0;
  HEAP32[$190>>2] = 1065353216;
  $192 = ((($188)) + 40|0);
  $193 = ((($188)) + 44|0);
  ;HEAP32[$191>>2]=0|0;HEAP32[$191+4>>2]=0|0;HEAP32[$191+8>>2]=0|0;HEAP32[$191+12>>2]=0|0;
  HEAP32[$192>>2] = 1065353216;
  $194 = ((($188)) + 60|0);
  ;HEAP32[$193>>2]=0|0;HEAP32[$193+4>>2]=0|0;HEAP32[$193+8>>2]=0|0;HEAP32[$193+12>>2]=0|0;
  HEAP32[$194>>2] = 1065353216;
  $195 = HEAP32[$3>>2]|0;
  $196 = ((($195)) + 32|0);
  $197 = HEAP32[$196>>2]|0;
  $198 = ((($195)) + 72|0);
  $199 = HEAP32[$198>>2]|0;
  $200 = (($199) + ($spec$select186<<2)|0);
  $201 = HEAP32[$200>>2]|0;
  $$val180 = Math_fround(HEAPF32[$201>>2]);
  $$idx181 = ((($201)) + 4|0);
  $$idx181$val = Math_fround(HEAPF32[$$idx181>>2]);
  $$idx182 = ((($201)) + 8|0);
  $$idx182$val = Math_fround(HEAPF32[$$idx182>>2]);
  $202 = Math_fround(HEAPF32[$197>>2]);
  $203 = Math_fround($$val180 * $202);
  $204 = ((($197)) + 4|0);
  $205 = Math_fround(HEAPF32[$204>>2]);
  $206 = Math_fround($$val180 * $205);
  $207 = ((($197)) + 8|0);
  $208 = Math_fround(HEAPF32[$207>>2]);
  $209 = Math_fround($$val180 * $208);
  $210 = ((($197)) + 12|0);
  $211 = Math_fround(HEAPF32[$210>>2]);
  $212 = Math_fround($$val180 * $211);
  $213 = ((($197)) + 16|0);
  $214 = Math_fround(HEAPF32[$213>>2]);
  $215 = Math_fround($$idx181$val * $214);
  $216 = ((($197)) + 20|0);
  $217 = Math_fround(HEAPF32[$216>>2]);
  $218 = Math_fround($$idx181$val * $217);
  $219 = ((($197)) + 24|0);
  $220 = Math_fround(HEAPF32[$219>>2]);
  $221 = Math_fround($$idx181$val * $220);
  $222 = ((($197)) + 28|0);
  $223 = Math_fround(HEAPF32[$222>>2]);
  $224 = Math_fround($$idx181$val * $223);
  $225 = ((($197)) + 32|0);
  $226 = Math_fround(HEAPF32[$225>>2]);
  $227 = Math_fround($$idx182$val * $226);
  $228 = ((($197)) + 36|0);
  $229 = Math_fround(HEAPF32[$228>>2]);
  $230 = Math_fround($$idx182$val * $229);
  $231 = ((($197)) + 40|0);
  $232 = Math_fround(HEAPF32[$231>>2]);
  $233 = Math_fround($$idx182$val * $232);
  $234 = ((($197)) + 44|0);
  $235 = Math_fround(HEAPF32[$234>>2]);
  $236 = Math_fround($$idx182$val * $235);
  $237 = ((($197)) + 48|0);
  $238 = Math_fround(HEAPF32[$237>>2]);
  $239 = Math_fround($203 + $238);
  $240 = ((($197)) + 52|0);
  $241 = Math_fround(HEAPF32[$240>>2]);
  $242 = Math_fround($206 + $241);
  $243 = ((($197)) + 56|0);
  $244 = Math_fround(HEAPF32[$243>>2]);
  $245 = Math_fround($209 + $244);
  $246 = ((($197)) + 60|0);
  $247 = Math_fround(HEAPF32[$246>>2]);
  $248 = Math_fround($212 + $247);
  $249 = Math_fround($215 + $239);
  $250 = Math_fround($218 + $242);
  $251 = Math_fround($221 + $245);
  $252 = Math_fround($224 + $248);
  $253 = Math_fround($227 + $249);
  HEAPF32[$237>>2] = $253;
  $254 = Math_fround($230 + $250);
  HEAPF32[$240>>2] = $254;
  $255 = Math_fround($233 + $251);
  HEAPF32[$243>>2] = $255;
  $256 = Math_fround($236 + $252);
  HEAPF32[$246>>2] = $256;
  $257 = (Math_fround(($spec$select186|0)));
  $258 = Math_fround($257 * Math_fround(20.0));
  $259 = Math_fround($258 * Math_fround(3.14159274));
  $260 = Math_fround($259 / Math_fround(180.0));
  $261 = ((($195)) + 44|0);
  $262 = HEAP32[$261>>2]|0;
  $$val183 = Math_fround(HEAPF32[$262>>2]);
  $$idx184 = ((($262)) + 4|0);
  $$idx184$val = Math_fround(HEAPF32[$$idx184>>2]);
  $$idx185 = ((($262)) + 8|0);
  $$idx185$val = Math_fround(HEAPF32[$$idx185>>2]);
  $263 = (Math_fround(_cosf($260)));
  $264 = Math_fround($$val183 * $$val183);
  $265 = Math_fround($$idx184$val * $$idx184$val);
  $266 = Math_fround($264 + $265);
  $267 = Math_fround($$idx185$val * $$idx185$val);
  $268 = Math_fround($266 + $267);
  $269 = (Math_fround(Math_sqrt((Math_fround($268)))));
  $270 = $269 == Math_fround(0.0);
  $271 = Math_fround(Math_fround(1.0) / $269);
  $272 = Math_fround($$val183 * $271);
  $273 = Math_fround($$idx184$val * $271);
  $274 = Math_fround($$idx185$val * $271);
  $$sroa$011$0$i$i = $270 ? Math_fround(0.0) : $272;
  $$sroa$9$0$i$i = $270 ? Math_fround(0.0) : $273;
  $$sink$i$i$i = $270 ? Math_fround(0.0) : $274;
  $275 = Math_fround(Math_fround(1.0) - $263);
  $276 = Math_fround($275 * $$sroa$011$0$i$i);
  $277 = Math_fround($275 * $$sroa$9$0$i$i);
  $278 = Math_fround($275 * $$sink$i$i$i);
  $279 = (Math_fround(_sinf($260)));
  $280 = Math_fround($279 * $$sroa$011$0$i$i);
  $281 = Math_fround($279 * $$sroa$9$0$i$i);
  $282 = Math_fround($279 * $$sink$i$i$i);
  $283 = Math_fround($$sroa$011$0$i$i * $276);
  $284 = Math_fround($$sroa$9$0$i$i * $276);
  $285 = Math_fround($$sink$i$i$i * $276);
  $286 = Math_fround($$sroa$011$0$i$i * $277);
  $287 = Math_fround($$sroa$9$0$i$i * $277);
  $288 = Math_fround($$sink$i$i$i * $277);
  $289 = Math_fround($$sroa$011$0$i$i * $278);
  $290 = Math_fround($$sroa$9$0$i$i * $278);
  $291 = Math_fround($$sink$i$i$i * $278);
  $292 = Math_fround($263 + $283);
  $293 = Math_fround($286 - $282);
  $294 = Math_fround($281 + $289);
  $295 = Math_fround($282 + $284);
  $296 = Math_fround($263 + $287);
  $297 = Math_fround($290 - $280);
  $298 = Math_fround($285 - $281);
  $299 = Math_fround($280 + $288);
  $300 = Math_fround($263 + $291);
  $301 = Math_fround(HEAPF32[$197>>2]);
  $302 = Math_fround(HEAPF32[$204>>2]);
  $303 = Math_fround(HEAPF32[$207>>2]);
  $304 = Math_fround(HEAPF32[$210>>2]);
  $305 = Math_fround(HEAPF32[$213>>2]);
  $306 = Math_fround(HEAPF32[$216>>2]);
  $307 = Math_fround(HEAPF32[$219>>2]);
  $308 = Math_fround($301 * $292);
  $309 = Math_fround($305 * $295);
  $310 = Math_fround($308 + $309);
  $311 = Math_fround($298 * $226);
  $312 = Math_fround($311 + $310);
  HEAPF32[$197>>2] = $312;
  $313 = Math_fround($302 * $292);
  $314 = Math_fround($306 * $295);
  $315 = Math_fround($313 + $314);
  $316 = Math_fround($298 * $229);
  $317 = Math_fround($315 + $316);
  HEAPF32[$204>>2] = $317;
  $318 = Math_fround($303 * $292);
  $319 = Math_fround($307 * $295);
  $320 = Math_fround($318 + $319);
  $321 = Math_fround($298 * $232);
  $322 = Math_fround($320 + $321);
  HEAPF32[$207>>2] = $322;
  $323 = Math_fround($304 * $292);
  $324 = Math_fround($223 * $295);
  $325 = Math_fround($323 + $324);
  $326 = Math_fround($298 * $235);
  $327 = Math_fround($325 + $326);
  HEAPF32[$210>>2] = $327;
  $328 = Math_fround($301 * $293);
  $329 = Math_fround($305 * $296);
  $330 = Math_fround($328 + $329);
  $331 = Math_fround($299 * $226);
  $332 = Math_fround($331 + $330);
  HEAPF32[$213>>2] = $332;
  $333 = Math_fround($302 * $293);
  $334 = Math_fround($306 * $296);
  $335 = Math_fround($333 + $334);
  $336 = Math_fround($299 * $229);
  $337 = Math_fround($335 + $336);
  HEAPF32[$216>>2] = $337;
  $338 = Math_fround($303 * $293);
  $339 = Math_fround($307 * $296);
  $340 = Math_fround($338 + $339);
  $341 = Math_fround($299 * $232);
  $342 = Math_fround($340 + $341);
  HEAPF32[$219>>2] = $342;
  $343 = Math_fround($304 * $293);
  $344 = Math_fround($223 * $296);
  $345 = Math_fround($343 + $344);
  $346 = Math_fround($299 * $235);
  $347 = Math_fround($345 + $346);
  HEAPF32[$222>>2] = $347;
  $348 = Math_fround($301 * $294);
  $349 = Math_fround($305 * $297);
  $350 = Math_fround($348 + $349);
  $351 = Math_fround($300 * $226);
  $352 = Math_fround($351 + $350);
  HEAPF32[$225>>2] = $352;
  $353 = Math_fround($302 * $294);
  $354 = Math_fround($306 * $297);
  $355 = Math_fround($353 + $354);
  $356 = Math_fround($300 * $229);
  $357 = Math_fround($355 + $356);
  HEAPF32[$228>>2] = $357;
  $358 = Math_fround($303 * $294);
  $359 = Math_fround($307 * $297);
  $360 = Math_fround($358 + $359);
  $361 = Math_fround($300 * $232);
  $362 = Math_fround($360 + $361);
  HEAPF32[$231>>2] = $362;
  $363 = Math_fround($304 * $294);
  $364 = Math_fround($223 * $297);
  $365 = Math_fround($363 + $364);
  $366 = Math_fround($300 * $235);
  $367 = Math_fround($365 + $366);
  HEAPF32[$234>>2] = $367;
  $368 = ((($195)) + 20|0);
  $369 = HEAP32[$368>>2]|0;
  $370 = HEAP32[$196>>2]|0;
  _shader_SetMat4($369,142425,$370);
  _glDrawArrays(4,0,36);
  $spec$select = (($spec$select186) + 1)|0;
  $371 = HEAP32[$3>>2]|0;
  $exitcond = ($spec$select|0)==(10);
  if ($exitcond) {
   break;
  } else {
   $187 = $371;$spec$select186 = $spec$select;
  }
 }
 $372 = ((($371)) + 16|0);
 $373 = HEAP32[$372>>2]|0;
 _glfwSwapBuffers(($373|0));
 _glfwPollEvents();
 return;
}
function _game_ProcessInput($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = Math_fround(0), $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = Math_fround(0), $104 = Math_fround(0), $105 = 0, $106 = Math_fround(0), $107 = Math_fround(0), $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = Math_fround(0), $111 = Math_fround(0), $112 = Math_fround(0), $113 = Math_fround(0), $114 = Math_fround(0), $115 = Math_fround(0), $116 = 0, $117 = 0;
 var $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = 0, $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = Math_fround(0), $127 = Math_fround(0), $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = Math_fround(0), $137 = 0, $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = 0, $141 = Math_fround(0), $142 = 0, $143 = Math_fround(0), $144 = Math_fround(0), $145 = Math_fround(0), $146 = Math_fround(0), $147 = Math_fround(0), $148 = Math_fround(0), $149 = Math_fround(0), $15 = 0, $150 = Math_fround(0), $151 = Math_fround(0), $152 = Math_fround(0), $153 = 0;
 var $154 = Math_fround(0), $155 = Math_fround(0), $156 = Math_fround(0), $157 = Math_fround(0), $158 = Math_fround(0), $159 = Math_fround(0), $16 = Math_fround(0), $160 = Math_fround(0), $161 = 0, $162 = Math_fround(0), $163 = Math_fround(0), $164 = Math_fround(0), $165 = Math_fround(0), $166 = Math_fround(0), $167 = Math_fround(0), $168 = 0, $169 = Math_fround(0), $17 = Math_fround(0), $170 = Math_fround(0), $171 = Math_fround(0);
 var $172 = Math_fround(0), $173 = Math_fround(0), $174 = Math_fround(0), $175 = Math_fround(0), $176 = Math_fround(0), $177 = Math_fround(0), $178 = Math_fround(0), $179 = 0, $18 = 0, $180 = 0, $181 = Math_fround(0), $182 = Math_fround(0), $183 = 0, $184 = Math_fround(0), $185 = Math_fround(0), $186 = Math_fround(0), $187 = 0, $188 = Math_fround(0), $189 = Math_fround(0), $19 = Math_fround(0);
 var $190 = Math_fround(0), $191 = 0, $192 = 0, $2 = 0, $20 = Math_fround(0), $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = Math_fround(0), $25 = 0, $26 = 0, $27 = 0, $28 = Math_fround(0), $29 = Math_fround(0), $3 = 0, $30 = 0, $31 = Math_fround(0), $32 = Math_fround(0), $33 = Math_fround(0), $34 = 0;
 var $35 = Math_fround(0), $36 = Math_fround(0), $37 = Math_fround(0), $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = Math_fround(0), $44 = Math_fround(0), $45 = 0, $46 = Math_fround(0), $47 = Math_fround(0), $48 = 0, $49 = 0, $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = 0;
 var $53 = 0, $54 = 0, $55 = Math_fround(0), $56 = Math_fround(0), $57 = 0, $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = 0, $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = Math_fround(0), $74 = 0, $75 = Math_fround(0), $76 = Math_fround(0), $77 = 0, $78 = Math_fround(0), $79 = 0, $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = Math_fround(0);
 var $9 = Math_fround(0), $90 = 0, $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = 0, $99 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(0.0))|0);
 $3 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(0.0))|0);
 $4 = (_glfwGetKey(($1|0),256)|0);
 $5 = ($4|0)==(1);
 if ($5) {
  _glfwSetWindowShouldClose(($1|0),1);
 }
 $6 = ((($0)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($7)) + 84|0);
 $9 = Math_fround(HEAPF32[$8>>2]);
 $10 = Math_fround($9 * Math_fround(2.5));
 $11 = (_glfwGetKey(($1|0),87)|0);
 $12 = ($11|0)==(1);
 if ($12) {
  $13 = HEAP32[$6>>2]|0;
  $14 = ((($13)) + 64|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = Math_fround(HEAPF32[$15>>2]);
  $17 = Math_fround($10 * $16);
  HEAPF32[$2>>2] = $17;
  $18 = ((($15)) + 4|0);
  $19 = Math_fround(HEAPF32[$18>>2]);
  $20 = Math_fround($10 * $19);
  $21 = ((($2)) + 4|0);
  HEAPF32[$21>>2] = $20;
  $22 = ((($15)) + 8|0);
  $23 = Math_fround(HEAPF32[$22>>2]);
  $24 = Math_fround($10 * $23);
  $25 = ((($2)) + 8|0);
  HEAPF32[$25>>2] = $24;
  $26 = ((($13)) + 60|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = Math_fround(HEAPF32[$27>>2]);
  $29 = Math_fround($17 + $28);
  HEAPF32[$27>>2] = $29;
  $30 = ((($27)) + 4|0);
  $31 = Math_fround(HEAPF32[$30>>2]);
  $32 = Math_fround(HEAPF32[$21>>2]);
  $33 = Math_fround($31 + $32);
  HEAPF32[$30>>2] = $33;
  $34 = ((($27)) + 8|0);
  $35 = Math_fround(HEAPF32[$34>>2]);
  $36 = Math_fround(HEAPF32[$25>>2]);
  $37 = Math_fround($35 + $36);
  HEAPF32[$34>>2] = $37;
 }
 $38 = (_glfwGetKey(($1|0),83)|0);
 $39 = ($38|0)==(1);
 if ($39) {
  $40 = HEAP32[$6>>2]|0;
  $41 = ((($40)) + 64|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = Math_fround(HEAPF32[$42>>2]);
  $44 = Math_fround($10 * $43);
  HEAPF32[$2>>2] = $44;
  $45 = ((($42)) + 4|0);
  $46 = Math_fround(HEAPF32[$45>>2]);
  $47 = Math_fround($10 * $46);
  $48 = ((($2)) + 4|0);
  HEAPF32[$48>>2] = $47;
  $49 = ((($42)) + 8|0);
  $50 = Math_fround(HEAPF32[$49>>2]);
  $51 = Math_fround($10 * $50);
  $52 = ((($2)) + 8|0);
  HEAPF32[$52>>2] = $51;
  $53 = ((($40)) + 60|0);
  $54 = HEAP32[$53>>2]|0;
  $55 = Math_fround(HEAPF32[$54>>2]);
  $56 = Math_fround($55 - $44);
  HEAPF32[$54>>2] = $56;
  $57 = ((($54)) + 4|0);
  $58 = Math_fround(HEAPF32[$57>>2]);
  $59 = Math_fround(HEAPF32[$48>>2]);
  $60 = Math_fround($58 - $59);
  HEAPF32[$57>>2] = $60;
  $61 = ((($54)) + 8|0);
  $62 = Math_fround(HEAPF32[$61>>2]);
  $63 = Math_fround(HEAPF32[$52>>2]);
  $64 = Math_fround($62 - $63);
  HEAPF32[$61>>2] = $64;
 }
 $65 = (_glfwGetKey(($1|0),65)|0);
 $66 = ($65|0)==(1);
 if ($66) {
  $67 = HEAP32[$6>>2]|0;
  $68 = ((($67)) + 64|0);
  $69 = HEAP32[$68>>2]|0;
  $70 = ((($67)) + 68|0);
  $71 = HEAP32[$70>>2]|0;
  $72 = ((($69)) + 4|0);
  $73 = Math_fround(HEAPF32[$72>>2]);
  $74 = ((($71)) + 8|0);
  $75 = Math_fround(HEAPF32[$74>>2]);
  $76 = Math_fround($73 * $75);
  $77 = ((($69)) + 8|0);
  $78 = Math_fround(HEAPF32[$77>>2]);
  $79 = ((($71)) + 4|0);
  $80 = Math_fround(HEAPF32[$79>>2]);
  $81 = Math_fround($78 * $80);
  $82 = Math_fround($76 - $81);
  HEAPF32[$3>>2] = $82;
  $83 = Math_fround(HEAPF32[$77>>2]);
  $84 = Math_fround(HEAPF32[$71>>2]);
  $85 = Math_fround($83 * $84);
  $86 = Math_fround(HEAPF32[$69>>2]);
  $87 = Math_fround(HEAPF32[$74>>2]);
  $88 = Math_fround($86 * $87);
  $89 = Math_fround($85 - $88);
  $90 = ((($3)) + 4|0);
  HEAPF32[$90>>2] = $89;
  $91 = Math_fround(HEAPF32[$69>>2]);
  $92 = Math_fround(HEAPF32[$79>>2]);
  $93 = Math_fround($91 * $92);
  $94 = Math_fround(HEAPF32[$72>>2]);
  $95 = Math_fround(HEAPF32[$71>>2]);
  $96 = Math_fround($94 * $95);
  $97 = Math_fround($93 - $96);
  $98 = ((($3)) + 8|0);
  HEAPF32[$98>>2] = $97;
  $99 = Math_fround($82 * $82);
  $100 = Math_fround($89 * $89);
  $101 = Math_fround($99 + $100);
  $102 = Math_fround($97 * $97);
  $103 = Math_fround($101 + $102);
  $104 = (Math_fround(Math_sqrt((Math_fround($103)))));
  $105 = $104 == Math_fround(0.0);
  if ($105) {
   HEAPF32[$98>>2] = Math_fround(0.0);
   HEAPF32[$90>>2] = Math_fround(0.0);
   HEAPF32[$3>>2] = Math_fround(0.0);
   $111 = Math_fround(0.0);$113 = Math_fround(0.0);$115 = Math_fround(0.0);
  } else {
   $106 = Math_fround(Math_fround(1.0) / $104);
   $107 = Math_fround($82 * $106);
   HEAPF32[$3>>2] = $107;
   $108 = Math_fround($89 * $106);
   HEAPF32[$90>>2] = $108;
   $109 = Math_fround($97 * $106);
   HEAPF32[$98>>2] = $109;
   $111 = $107;$113 = $108;$115 = $109;
  }
  $110 = Math_fround($10 * $111);
  HEAPF32[$3>>2] = $110;
  $112 = Math_fround($10 * $113);
  HEAPF32[$90>>2] = $112;
  $114 = Math_fround($10 * $115);
  HEAPF32[$98>>2] = $114;
  $116 = ((($67)) + 60|0);
  $117 = HEAP32[$116>>2]|0;
  $118 = Math_fround(HEAPF32[$117>>2]);
  $119 = Math_fround($118 - $110);
  HEAPF32[$117>>2] = $119;
  $120 = ((($117)) + 4|0);
  $121 = Math_fround(HEAPF32[$120>>2]);
  $122 = Math_fround(HEAPF32[$90>>2]);
  $123 = Math_fround($121 - $122);
  HEAPF32[$120>>2] = $123;
  $124 = ((($117)) + 8|0);
  $125 = Math_fround(HEAPF32[$124>>2]);
  $126 = Math_fround(HEAPF32[$98>>2]);
  $127 = Math_fround($125 - $126);
  HEAPF32[$124>>2] = $127;
 }
 $128 = (_glfwGetKey(($1|0),68)|0);
 $129 = ($128|0)==(1);
 if ($129) {
  $130 = HEAP32[$6>>2]|0;
  $131 = ((($130)) + 64|0);
  $132 = HEAP32[$131>>2]|0;
  $133 = ((($130)) + 68|0);
  $134 = HEAP32[$133>>2]|0;
  $135 = ((($132)) + 4|0);
  $136 = Math_fround(HEAPF32[$135>>2]);
  $137 = ((($134)) + 8|0);
  $138 = Math_fround(HEAPF32[$137>>2]);
  $139 = Math_fround($136 * $138);
  $140 = ((($132)) + 8|0);
  $141 = Math_fround(HEAPF32[$140>>2]);
  $142 = ((($134)) + 4|0);
  $143 = Math_fround(HEAPF32[$142>>2]);
  $144 = Math_fround($141 * $143);
  $145 = Math_fround($139 - $144);
  HEAPF32[$3>>2] = $145;
  $146 = Math_fround(HEAPF32[$140>>2]);
  $147 = Math_fround(HEAPF32[$134>>2]);
  $148 = Math_fround($146 * $147);
  $149 = Math_fround(HEAPF32[$132>>2]);
  $150 = Math_fround(HEAPF32[$137>>2]);
  $151 = Math_fround($149 * $150);
  $152 = Math_fround($148 - $151);
  $153 = ((($3)) + 4|0);
  HEAPF32[$153>>2] = $152;
  $154 = Math_fround(HEAPF32[$132>>2]);
  $155 = Math_fround(HEAPF32[$142>>2]);
  $156 = Math_fround($154 * $155);
  $157 = Math_fround(HEAPF32[$135>>2]);
  $158 = Math_fround(HEAPF32[$134>>2]);
  $159 = Math_fround($157 * $158);
  $160 = Math_fround($156 - $159);
  $161 = ((($3)) + 8|0);
  HEAPF32[$161>>2] = $160;
  $162 = Math_fround($145 * $145);
  $163 = Math_fround($152 * $152);
  $164 = Math_fround($162 + $163);
  $165 = Math_fround($160 * $160);
  $166 = Math_fround($164 + $165);
  $167 = (Math_fround(Math_sqrt((Math_fround($166)))));
  $168 = $167 == Math_fround(0.0);
  if ($168) {
   HEAPF32[$161>>2] = Math_fround(0.0);
   HEAPF32[$153>>2] = Math_fround(0.0);
   HEAPF32[$3>>2] = Math_fround(0.0);
   $174 = Math_fround(0.0);$176 = Math_fround(0.0);$178 = Math_fround(0.0);
  } else {
   $169 = Math_fround(Math_fround(1.0) / $167);
   $170 = Math_fround($145 * $169);
   HEAPF32[$3>>2] = $170;
   $171 = Math_fround($152 * $169);
   HEAPF32[$153>>2] = $171;
   $172 = Math_fround($160 * $169);
   HEAPF32[$161>>2] = $172;
   $174 = $170;$176 = $171;$178 = $172;
  }
  $173 = Math_fround($10 * $174);
  HEAPF32[$3>>2] = $173;
  $175 = Math_fround($10 * $176);
  HEAPF32[$153>>2] = $175;
  $177 = Math_fround($10 * $178);
  HEAPF32[$161>>2] = $177;
  $179 = ((($130)) + 60|0);
  $180 = HEAP32[$179>>2]|0;
  $181 = Math_fround(HEAPF32[$180>>2]);
  $182 = Math_fround($173 + $181);
  HEAPF32[$180>>2] = $182;
  $183 = ((($180)) + 4|0);
  $184 = Math_fround(HEAPF32[$183>>2]);
  $185 = Math_fround(HEAPF32[$153>>2]);
  $186 = Math_fround($184 + $185);
  HEAPF32[$183>>2] = $186;
  $187 = ((($180)) + 8|0);
  $188 = Math_fround(HEAPF32[$187>>2]);
  $189 = Math_fround(HEAPF32[$161>>2]);
  $190 = Math_fround($188 + $189);
  HEAPF32[$187>>2] = $190;
  label = 18;
 } else {
  $191 = ($3|0)==(0|0);
  if (!($191)) {
   label = 18;
  }
 }
 if ((label|0) == 18) {
  _glm_vec3_unref($3);
 }
 $192 = ($2|0)==(0|0);
 if ($192) {
  return;
 }
 _glm_vec3_unref($2);
 return;
}
function _game_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37248] = $1;
 _g_type_class_add_private($0,92);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 577;
 return;
}
function _game_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148988)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142431,120312,0)|0);
  _g_once_init_leave(148988,$4);
 }
 $5 = HEAP32[37247]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 $8 = (_glm_vec3_new(Math_fround(1.0),Math_fround(0.300000012),Math_fround(0.5))|0);
 $9 = HEAP32[$7>>2]|0;
 $10 = ((($9)) + 44|0);
 HEAP32[$10>>2] = $8;
 $11 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(-3.0))|0);
 $12 = HEAP32[$7>>2]|0;
 $13 = ((($12)) + 48|0);
 HEAP32[$13>>2] = $11;
 $14 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(0.0))|0);
 $15 = HEAP32[$7>>2]|0;
 $16 = ((($15)) + 52|0);
 HEAP32[$16>>2] = $14;
 $17 = (_glm_vec3_new(Math_fround(0.0),Math_fround(1.0),Math_fround(0.0))|0);
 $18 = HEAP32[$7>>2]|0;
 $19 = ((($18)) + 56|0);
 HEAP32[$19>>2] = $17;
 $20 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(3.0))|0);
 $21 = HEAP32[$7>>2]|0;
 $22 = ((($21)) + 60|0);
 HEAP32[$22>>2] = $20;
 $23 = (_glm_vec3_new(Math_fround(0.0),Math_fround(0.0),Math_fround(-1.0))|0);
 $24 = HEAP32[$7>>2]|0;
 $25 = ((($24)) + 64|0);
 HEAP32[$25>>2] = $23;
 $26 = (_glm_vec3_new(Math_fround(0.0),Math_fround(1.0),Math_fround(0.0))|0);
 $27 = HEAP32[$7>>2]|0;
 $28 = ((($27)) + 68|0);
 HEAP32[$28>>2] = $26;
 $29 = ((($0)) + 20|0);
 HEAP32[$29>>2] = 1;
 $30 = ((($0)) + 24|0);
 HEAPF32[$30>>2] = Math_fround(-90.0);
 $31 = ((($0)) + 28|0);
 HEAPF32[$31>>2] = Math_fround(0.0);
 $32 = ((($0)) + 32|0);
 HEAPF32[$32>>2] = Math_fround(400.0);
 $33 = ((($0)) + 36|0);
 HEAPF32[$33>>2] = Math_fround(300.0);
 $34 = ((($0)) + 40|0);
 HEAPF32[$34>>2] = Math_fround(45.0);
 $35 = ((($27)) + 84|0);
 HEAPF32[$35>>2] = Math_fround(0.0);
 $36 = ((($27)) + 88|0);
 HEAPF32[$36>>2] = Math_fround(0.0);
 return;
}
function _game_finalize($0) {
 $0 = $0|0;
 var $$01$i$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond$i$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148988)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142431,120312,0)|0);
  _g_once_init_leave(148988,$4);
 }
 $5 = HEAP32[37247]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 20|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 24|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $21 = $15;
 } else {
  _g_object_unref($16);
  $18 = HEAP32[$7>>2]|0;
  $19 = ((($18)) + 24|0);
  HEAP32[$19>>2] = 0;
  $21 = $18;
 }
 $20 = ((($21)) + 28|0);
 $22 = HEAP32[$20>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  $27 = $21;
 } else {
  _glm_mat4_unref($22);
  $24 = HEAP32[$7>>2]|0;
  $25 = ((($24)) + 28|0);
  HEAP32[$25>>2] = 0;
  $27 = $24;
 }
 $26 = ((($27)) + 32|0);
 $28 = HEAP32[$26>>2]|0;
 $29 = ($28|0)==(0|0);
 if ($29) {
  $33 = $27;
 } else {
  _glm_mat4_unref($28);
  $30 = HEAP32[$7>>2]|0;
  $31 = ((($30)) + 32|0);
  HEAP32[$31>>2] = 0;
  $33 = $30;
 }
 $32 = ((($33)) + 36|0);
 $34 = HEAP32[$32>>2]|0;
 $35 = ($34|0)==(0|0);
 if ($35) {
  $39 = $33;
 } else {
  _glm_mat4_unref($34);
  $36 = HEAP32[$7>>2]|0;
  $37 = ((($36)) + 36|0);
  HEAP32[$37>>2] = 0;
  $39 = $36;
 }
 $38 = ((($39)) + 40|0);
 $40 = HEAP32[$38>>2]|0;
 $41 = ($40|0)==(0|0);
 if ($41) {
  $45 = $39;
 } else {
  _glm_vec3_unref($40);
  $42 = HEAP32[$7>>2]|0;
  $43 = ((($42)) + 40|0);
  HEAP32[$43>>2] = 0;
  $45 = $42;
 }
 $44 = ((($45)) + 44|0);
 $46 = HEAP32[$44>>2]|0;
 $47 = ($46|0)==(0|0);
 if ($47) {
  $51 = $45;
 } else {
  _glm_vec3_unref($46);
  $48 = HEAP32[$7>>2]|0;
  $49 = ((($48)) + 44|0);
  HEAP32[$49>>2] = 0;
  $51 = $48;
 }
 $50 = ((($51)) + 48|0);
 $52 = HEAP32[$50>>2]|0;
 $53 = ($52|0)==(0|0);
 if ($53) {
  $57 = $51;
 } else {
  _glm_vec3_unref($52);
  $54 = HEAP32[$7>>2]|0;
  $55 = ((($54)) + 48|0);
  HEAP32[$55>>2] = 0;
  $57 = $54;
 }
 $56 = ((($57)) + 52|0);
 $58 = HEAP32[$56>>2]|0;
 $59 = ($58|0)==(0|0);
 if ($59) {
  $63 = $57;
 } else {
  _glm_vec3_unref($58);
  $60 = HEAP32[$7>>2]|0;
  $61 = ((($60)) + 52|0);
  HEAP32[$61>>2] = 0;
  $63 = $60;
 }
 $62 = ((($63)) + 56|0);
 $64 = HEAP32[$62>>2]|0;
 $65 = ($64|0)==(0|0);
 if ($65) {
  $69 = $63;
 } else {
  _glm_vec3_unref($64);
  $66 = HEAP32[$7>>2]|0;
  $67 = ((($66)) + 56|0);
  HEAP32[$67>>2] = 0;
  $69 = $66;
 }
 $68 = ((($69)) + 60|0);
 $70 = HEAP32[$68>>2]|0;
 $71 = ($70|0)==(0|0);
 if ($71) {
  $75 = $69;
 } else {
  _glm_vec3_unref($70);
  $72 = HEAP32[$7>>2]|0;
  $73 = ((($72)) + 60|0);
  HEAP32[$73>>2] = 0;
  $75 = $72;
 }
 $74 = ((($75)) + 64|0);
 $76 = HEAP32[$74>>2]|0;
 $77 = ($76|0)==(0|0);
 if ($77) {
  $81 = $75;
 } else {
  _glm_vec3_unref($76);
  $78 = HEAP32[$7>>2]|0;
  $79 = ((($78)) + 64|0);
  HEAP32[$79>>2] = 0;
  $81 = $78;
 }
 $80 = ((($81)) + 68|0);
 $82 = HEAP32[$80>>2]|0;
 $83 = ($82|0)==(0|0);
 if ($83) {
  $87 = $81;
 } else {
  _glm_vec3_unref($82);
  $84 = HEAP32[$7>>2]|0;
  $85 = ((($84)) + 68|0);
  HEAP32[$85>>2] = 0;
  $87 = $84;
 }
 $86 = ((($87)) + 72|0);
 $88 = HEAP32[$86>>2]|0;
 $89 = ((($87)) + 76|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = ($88|0)!=(0|0);
 $92 = ($90|0)>(0);
 $or$cond$i$i = $91 & $92;
 if (!($or$cond$i$i)) {
  _g_free($88);
  $97 = HEAP32[$7>>2]|0;
  $98 = ((($97)) + 72|0);
  HEAP32[$98>>2] = 0;
  $99 = HEAP32[37248]|0;
  $100 = (_g_type_check_class_cast($99,80)|0);
  $101 = ((($99)) + 36|0);
  $102 = HEAP32[$101>>2]|0;
  ftCall_vi($102|0,$0);
  return;
 }
 $$01$i$i = 0;
 while(1) {
  $93 = (($88) + ($$01$i$i<<2)|0);
  $94 = HEAP32[$93>>2]|0;
  $95 = ($94|0)==(0|0);
  if (!($95)) {
   _glm_vec3_unref($94);
  }
  $96 = (($$01$i$i) + 1)|0;
  $exitcond$i$i = ($96|0)==($90|0);
  if ($exitcond$i$i) {
   break;
  } else {
   $$01$i$i = $96;
  }
 }
 _g_free($88);
 $97 = HEAP32[$7>>2]|0;
 $98 = ((($97)) + 72|0);
 HEAP32[$98>>2] = 0;
 $99 = HEAP32[37248]|0;
 $100 = (_g_type_check_class_cast($99,80)|0);
 $101 = ((($99)) + 36|0);
 $102 = HEAP32[$101>>2]|0;
 ftCall_vi($102|0,$0);
 return;
}
function ____lambda53__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_It(142449,578,0)|0);
 $2 = ($1|0)==(0|0);
 if (!($2)) {
  _g_object_unref($1);
 }
 $3 = (_jasmine_It(142476,579,0)|0);
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  _g_object_unref($3);
 }
 $5 = (_jasmine_It(142505,580,0)|0);
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  _g_object_unref($5);
 }
 $7 = (_jasmine_It(142537,581,0)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  _g_object_unref($7);
 }
 $9 = (_jasmine_It(142568,582,0)|0);
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
 }
 $11 = (_jasmine_It(142598,583,0)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  _g_object_unref($11);
 }
 $13 = (_jasmine_It(142630,584,0)|0);
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  _g_object_unref($13);
 }
 $15 = (_jasmine_It(142674,585,0)|0);
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  _g_object_unref($15);
 }
 $17 = (_jasmine_It(142714,586,0)|0);
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  _g_object_unref($17);
 }
 $19 = (_jasmine_It(142741,587,0)|0);
 $20 = ($19|0)==(0|0);
 if ($20) {
  return;
 }
 _g_object_unref($19);
 return;
}
function ____lambda54__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda55__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda56__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda57__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda58__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda59__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda60__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda61__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda62__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function ____lambda63__jasmine_callback($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_jasmine_Expect(20,0,0,0)|0);
 (_jasmine_matchers_ToBe($1,20,0,0,0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return;
 }
 _g_object_unref($1);
 return;
}
function _main($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 _test();
 $2 = (_game_new()|0);
 $3 = (_game_Run($2)|0);
 $4 = ($2|0)==(0|0);
 if ($4) {
  return ($3|0);
 }
 _g_object_unref($2);
 return ($3|0);
}
function _image_new($0) {
 $0 = $0|0;
 var $$pre$phi$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 12|0;
 $2 = sp + 8|0;
 $3 = sp + 4|0;
 $4 = (_g_once_init_enter(148996)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,142785,120348,0)|0);
  _g_once_init_leave(148996,$7);
 }
 $8 = HEAP32[37249]|0;
 HEAP32[$1>>2] = 0;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 $9 = (_object_construct($8)|0);
 $10 = (_SOIL_load_image($0,$1,$2,$3,0)|0);
 $11 = HEAP32[$1>>2]|0;
 $12 = ((($9)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$13>>2] = $11;
 $14 = HEAP32[$2>>2]|0;
 $15 = ((($13)) + 4|0);
 HEAP32[$15>>2] = $14;
 $16 = HEAP32[$3>>2]|0;
 $17 = ((($13)) + 8|0);
 HEAP32[$17>>2] = $16;
 $18 = ((($13)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $$pre$phi$iZ2D = $18;
 } else {
  _SOIL_free_image_data($19);
  $21 = HEAP32[$12>>2]|0;
  $22 = ((($21)) + 12|0);
  HEAP32[$22>>2] = 0;
  $$pre$phi$iZ2D = $22;
 }
 HEAP32[$$pre$phi$iZ2D>>2] = $10;
 $23 = ($10|0)==(0|0);
 if (!($23)) {
  STACKTOP = sp;return ($9|0);
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_print(142766,$vararg_buffer);
 STACKTOP = sp;return ($9|0);
}
function _image_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37250] = $1;
 _g_type_class_add_private($0,16);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 588;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 589;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_int(142791,142791,142791,-2147483648,2147483647,0,225)|0);
 HEAP32[(145188)>>2] = $7;
 _g_object_class_install_property($0,1,$7);
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_int(142797,142797,142797,-2147483648,2147483647,0,225)|0);
 HEAP32[(145192)>>2] = $9;
 _g_object_class_install_property($0,2,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_int(142804,142804,142804,-2147483648,2147483647,0,225)|0);
 HEAP32[(145196)>>2] = $11;
 _g_object_class_install_property($0,3,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(142813,142813,142813,225)|0);
 HEAP32[(145200)>>2] = $13;
 _g_object_class_install_property($0,4,$13);
 return;
}
function _image_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148996)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142785,120348,0)|0);
  _g_once_init_leave(148996,$4);
 }
 $5 = HEAP32[37249]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_image_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(148996)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,142785,120348,0)|0);
  _g_once_init_leave(148996,$7);
 }
 $8 = HEAP32[37249]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$11>>2]|0;
  _g_value_set_int($2,$12);
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = ((($0)) + 16|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  _g_value_set_int($2,$16);
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = ((($0)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  _g_value_set_int($2,$20);
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = ((($0)) + 16|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  _g_value_set_pointer($2,$24);
  STACKTOP = sp;return;
  break;
 }
 default: {
  $25 = ((($3)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = HEAP32[$3>>2]|0;
  $28 = HEAP32[$27>>2]|0;
  $29 = (_g_type_name($28)|0);
  $30 = HEAP32[$0>>2]|0;
  $31 = HEAP32[$30>>2]|0;
  $32 = (_g_type_name($31)|0);
  HEAP32[$vararg_buffer>>2] = 142820;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 271;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $26;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $29;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $32;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _image_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(148996)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142785,120348,0)|0);
  _g_once_init_leave(148996,$4);
 }
 $5 = HEAP32[37249]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _SOIL_free_image_data($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[37250]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _image_get_Width($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 return ($3|0);
}
function _image_get_Height($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _image_get_Pixels($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _shader_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(149004)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_object_get_type()|0);
  $5 = (_g_type_register_static($4,142838,120384,0)|0);
  _g_once_init_leave(149004,$5);
 }
 $6 = HEAP32[37251]|0;
 $7 = (_object_construct($6)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $0;
 $11 = (_g_strdup($1)|0);
 $12 = HEAP32[$8>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 _g_free($14);
 $15 = HEAP32[$8>>2]|0;
 $16 = ((($15)) + 8|0);
 HEAP32[$16>>2] = $11;
 return ($7|0);
}
function _shader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[37252] = $1;
 _g_type_class_add_private($0,12);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 590;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 591;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_uint(142845,142845,142845,0,-1,0,225)|0);
 HEAP32[(149016)>>2] = $7;
 _g_object_class_install_property($0,1,$7);
 return;
}
function _shader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(149004)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142838,120384,0)|0);
  _g_once_init_leave(149004,$4);
 }
 $5 = HEAP32[37251]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_shader_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(149004)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,142838,120384,0)|0);
  _g_once_init_leave(149004,$7);
 }
 $8 = HEAP32[37251]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(1);
 if ($cond) {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$11>>2]|0;
  _g_value_set_uint($2,$12);
  STACKTOP = sp;return;
 } else {
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$3>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (_g_type_name($19)|0);
  HEAP32[$vararg_buffer>>2] = 142902;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 872;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 142921;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $20;
  _g_log(0,16,142848,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function _shader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(149004)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,142838,120384,0)|0);
  _g_once_init_leave(149004,$4);
 }
 $5 = HEAP32[37251]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 _g_free($10);
 $11 = HEAP32[$7>>2]|0;
 $12 = ((($11)) + 8|0);
 HEAP32[$12>>2] = 0;
 $13 = HEAP32[37252]|0;
 $14 = (_g_type_check_class_cast($13,80)|0);
 $15 = ((($13)) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 ftCall_vi($16|0,$0);
 return;
}
function _shader_Load($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_shader_loadShader($0,35633,$1)|0);
 $5 = (_shader_loadShader($0,35632,$2)|0);
 $6 = (_glCreateProgram()|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 HEAP32[$8>>2] = $6;
 _glAttachShader(($6|0),($4|0));
 $9 = HEAP32[$7>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 _glAttachShader(($10|0),($5|0));
 $11 = HEAP32[$7>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 _glLinkProgram(($12|0));
 $13 = HEAP32[$7>>2]|0;
 $14 = HEAP32[$13>>2]|0;
 _shader_checkCompileErrors($14,-1);
 _glDeleteShader(($4|0));
 _glDeleteShader(($5|0));
 $15 = ($0|0)==(0|0);
 if ($15) {
  $17 = 0;
  return ($17|0);
 }
 $16 = (_g_object_ref($0)|0);
 $17 = $0;
 return ($17|0);
}
function _shader_loadShader($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$014122$i = 0, $$014321$i = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $8 = 0, $9 = 0;
 var $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer2 = 0, $vararg_buffer20 = 0, $vararg_buffer27 = 0, $vararg_buffer31 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr26 = 0, $vararg_ptr30 = 0;
 var $vararg_ptr34 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer31 = sp + 96|0;
 $vararg_buffer27 = sp + 88|0;
 $vararg_buffer20 = sp + 64|0;
 $vararg_buffer13 = sp + 40|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($5)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$vararg_buffer>>2] = $7;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $9;
 $10 = (_g_strdup_printf(143185,$vararg_buffer)|0);
 HEAP32[$vararg_buffer>>2] = 0;
 $11 = (_g_strdup(149641)|0);
 HEAP32[$vararg_buffer2>>2] = $2;
 $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
 HEAP32[$vararg_ptr5>>2] = 0;
 $12 = (_g_strconcat(143200,$vararg_buffer2)|0);
 $13 = (_system_io_file_handle_new($12,4)|0);
 _g_free($12);
 $14 = ((($13)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (_system_io_file_input_stream_new_FromFile($15,$vararg_buffer)|0);
 $17 = HEAP32[$vararg_buffer>>2]|0;
 $18 = ($17|0)==(0|0);
 do {
  if ($18) {
   $27 = (_system_io_input_stream_reader_new($16)|0);
   $28 = (_system_io_buffered_reader_new($27,8192,$vararg_buffer)|0);
   $29 = ($27|0)==(0|0);
   if (!($29)) {
    _g_object_unref($27);
   }
   $30 = HEAP32[$vararg_buffer>>2]|0;
   $31 = ($30|0)==(0|0);
   if (!($31)) {
    $32 = ($16|0)==(0|0);
    if (!($32)) {
     _g_object_unref($16);
    }
    $33 = ($13|0)==(0|0);
    if (!($33)) {
     _g_object_unref($13);
    }
    _g_free($11);
    _g_free(0);
    $34 = HEAP32[$vararg_buffer>>2]|0;
    $35 = ((($34)) + 8|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = HEAP32[$34>>2]|0;
    $38 = (_g_quark_to_string($37)|0);
    $39 = ((($34)) + 4|0);
    $40 = HEAP32[$39>>2]|0;
    HEAP32[$vararg_buffer13>>2] = 142902;
    $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);
    HEAP32[$vararg_ptr16>>2] = 753;
    $vararg_ptr17 = ((($vararg_buffer13)) + 8|0);
    HEAP32[$vararg_ptr17>>2] = $36;
    $vararg_ptr18 = ((($vararg_buffer13)) + 12|0);
    HEAP32[$vararg_ptr18>>2] = $38;
    $vararg_ptr19 = ((($vararg_buffer13)) + 16|0);
    HEAP32[$vararg_ptr19>>2] = $40;
    _g_log(0,8,143216,$vararg_buffer13);
    _g_clear_error($vararg_buffer);
    $$2$i = 0;
    break;
   }
   $$014122$i = 0;$$014321$i = $11;
   while(1) {
    $41 = (_system_io_buffered_reader_ReadLine($28,0,$vararg_buffer)|0);
    $42 = HEAP32[$vararg_buffer>>2]|0;
    $43 = ($42|0)==(0|0);
    if (!($43)) {
     label = 16;
     break;
    }
    _g_free($$014122$i);
    HEAP32[$vararg_buffer27>>2] = $41;
    $vararg_ptr30 = ((($vararg_buffer27)) + 4|0);
    HEAP32[$vararg_ptr30>>2] = 0;
    $54 = (_g_strconcat($$014321$i,$vararg_buffer27)|0);
    HEAP32[$vararg_buffer31>>2] = 143262;
    $vararg_ptr34 = ((($vararg_buffer31)) + 4|0);
    HEAP32[$vararg_ptr34>>2] = 0;
    $55 = (_g_strconcat($54,$vararg_buffer31)|0);
    _g_free($$014321$i);
    _g_free($54);
    _g_free(0);
    $56 = ($41|0)==(0|0);
    if ($56) {
     label = 24;
     break;
    } else {
     $$014122$i = $41;$$014321$i = $55;
    }
   }
   if ((label|0) == 16) {
    $44 = ($28|0)==(0|0);
    if (!($44)) {
     _g_object_unref($28);
    }
    $45 = ($16|0)==(0|0);
    if (!($45)) {
     _g_object_unref($16);
    }
    $46 = ($13|0)==(0|0);
    if (!($46)) {
     _g_object_unref($13);
    }
    _g_free($$014321$i);
    _g_free($$014122$i);
    $47 = HEAP32[$vararg_buffer>>2]|0;
    $48 = ((($47)) + 8|0);
    $49 = HEAP32[$48>>2]|0;
    $50 = HEAP32[$47>>2]|0;
    $51 = (_g_quark_to_string($50)|0);
    $52 = ((($47)) + 4|0);
    $53 = HEAP32[$52>>2]|0;
    HEAP32[$vararg_buffer20>>2] = 142902;
    $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);
    HEAP32[$vararg_ptr23>>2] = 787;
    $vararg_ptr24 = ((($vararg_buffer20)) + 8|0);
    HEAP32[$vararg_ptr24>>2] = $49;
    $vararg_ptr25 = ((($vararg_buffer20)) + 12|0);
    HEAP32[$vararg_ptr25>>2] = $51;
    $vararg_ptr26 = ((($vararg_buffer20)) + 16|0);
    HEAP32[$vararg_ptr26>>2] = $53;
    _g_log(0,8,143216,$vararg_buffer20);
    _g_clear_error($vararg_buffer);
    $$2$i = 0;
    break;
   }
   else if ((label|0) == 24) {
    $57 = ($28|0)==(0|0);
    if (!($57)) {
     _g_object_unref($28);
    }
    $58 = ($16|0)==(0|0);
    if (!($58)) {
     _g_object_unref($16);
    }
    $59 = ($13|0)==(0|0);
    if (!($59)) {
     _g_object_unref($13);
    }
    _g_free(0);
    $$2$i = $55;
    break;
   }
  } else {
   $19 = ($13|0)==(0|0);
   if (!($19)) {
    _g_object_unref($13);
   }
   _g_free($11);
   _g_free(0);
   $20 = HEAP32[$vararg_buffer>>2]|0;
   $21 = ((($20)) + 8|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$20>>2]|0;
   $24 = (_g_quark_to_string($23)|0);
   $25 = ((($20)) + 4|0);
   $26 = HEAP32[$25>>2]|0;
   HEAP32[$vararg_buffer6>>2] = 142902;
   $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
   HEAP32[$vararg_ptr9>>2] = 738;
   $vararg_ptr10 = ((($vararg_buffer6)) + 8|0);
   HEAP32[$vararg_ptr10>>2] = $22;
   $vararg_ptr11 = ((($vararg_buffer6)) + 12|0);
   HEAP32[$vararg_ptr11>>2] = $24;
   $vararg_ptr12 = ((($vararg_buffer6)) + 16|0);
   HEAP32[$vararg_ptr12>>2] = $26;
   _g_log(0,8,143216,$vararg_buffer6);
   _g_clear_error($vararg_buffer);
   $$2$i = 0;
  }
 } while(0);
 $60 = (_g_strdup($10)|0);
 $61 = (_g_strdup(143264)|0);
 $62 = (_g_strdup($$2$i)|0);
 $63 = (_g_malloc0_n(4,4)|0);
 HEAP32[$63>>2] = $60;
 $64 = ((($63)) + 4|0);
 HEAP32[$64>>2] = $61;
 $65 = ((($63)) + 8|0);
 HEAP32[$65>>2] = $62;
 $66 = (_strlen($10)|0);
 $67 = (_strlen($$2$i)|0);
 $68 = (_g_malloc0_n(3,4)|0);
 HEAP32[$68>>2] = $66;
 $69 = ((($68)) + 4|0);
 HEAP32[$69>>2] = 53;
 $70 = ((($68)) + 8|0);
 HEAP32[$70>>2] = $67;
 $71 = (_glCreateShader(($1|0))|0);
 _glShaderSource(($71|0),3,($63|0),($68|0));
 _glCompileShader(($71|0));
 _shader_checkCompileErrors($71,$1);
 _g_free($68);
 $72 = ($63|0)==(0|0);
 if (!($72)) {
  $73 = HEAP32[$63>>2]|0;
  $74 = ($73|0)==(0|0);
  if (!($74)) {
   _g_free($73);
  }
  $75 = HEAP32[$64>>2]|0;
  $76 = ($75|0)==(0|0);
  if (!($76)) {
   _g_free($75);
  }
  $77 = HEAP32[$65>>2]|0;
  $78 = ($77|0)==(0|0);
  if (!($78)) {
   _g_free($77);
  }
 }
 _g_free($63);
 _g_free($$2$i);
 _g_free($10);
 $$0 = $71;
 STACKTOP = sp;return ($$0|0);
}
function _shader_checkCompileErrors($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0;
 $vararg_buffer2 = sp + 1032|0;
 $vararg_buffer = sp + 1024|0;
 $2 = sp + 1040|0;
 $3 = sp;
 _memset(($3|0),0,1024)|0;
 HEAP32[$2>>2] = 0;
 $4 = ($1|0)==(-1);
 if ($4) {
  _glGetProgramiv(($0|0),35714,($2|0));
  $17 = HEAP32[$2>>2]|0;
  $18 = ($17|0)==(1);
  if ($18) {
   STACKTOP = sp;return;
  }
  _glGetProgramInfoLog(($0|0),1024,(0|0),($3|0));
  $19 = (_g_once_init_enter(149020)|0);
  $20 = ($19|0)==(0);
  if (!($20)) {
   $21 = (_g_enum_register_static(142930,114256)|0);
   _g_once_init_leave(149020,$21);
  }
  $22 = HEAP32[37255]|0;
  $23 = (_g_type_class_ref($22)|0);
  $24 = (_g_enum_get_value($23,-1)|0);
  $25 = ($24|0)==(0|0);
  if ($25) {
   $28 = 0;
  } else {
   $26 = ((($24)) + 4|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = $27;
  }
  HEAP32[$vararg_buffer2>>2] = $3;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $28;
  _g_print(143022,$vararg_buffer2);
  STACKTOP = sp;return;
 } else {
  _glGetShaderiv(($0|0),35713,($2|0));
  $5 = HEAP32[$2>>2]|0;
  $6 = ($5|0)==(1);
  if ($6) {
   STACKTOP = sp;return;
  }
  _glGetShaderInfoLog(($0|0),1024,(0|0),($3|0));
  $7 = (_g_once_init_enter(149020)|0);
  $8 = ($7|0)==(0);
  if (!($8)) {
   $9 = (_g_enum_register_static(142930,114256)|0);
   _g_once_init_leave(149020,$9);
  }
  $10 = HEAP32[37255]|0;
  $11 = (_g_type_class_ref($10)|0);
  $12 = (_g_enum_get_value($11,$1)|0);
  $13 = ($12|0)==(0|0);
  if ($13) {
   $16 = 0;
  } else {
   $14 = ((($12)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $15;
  }
  HEAP32[$vararg_buffer>>2] = $3;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $16;
  _g_print(142941,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function _shader_Use($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 _glUseProgram(($3|0));
 return;
}
function _shader_SetInt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_glGetUniformLocation(($5|0),($1|0))|0);
 _glUniform1i(($6|0),($2|0));
 return;
}
function _shader_SetMat4($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_glGetUniformLocation(($5|0),($1|0))|0);
 _glUniformMatrix4fv(($6|0),1,0,($2|0));
 return;
}
function _malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0169$i = 0, $$0170$i = 0, $$0171$i = 0, $$0192 = 0, $$0194 = 0, $$02014$i$i = 0, $$0202$lcssa$i$i = 0, $$02023$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$024372$i = 0, $$0259$i$i = 0, $$02604$i$i = 0, $$0261$lcssa$i$i = 0, $$02613$i$i = 0;
 var $$0267$i$i = 0, $$0268$i$i = 0, $$0318$i = 0, $$032012$i = 0, $$0321$lcssa$i = 0, $$032111$i = 0, $$0323$i = 0, $$0329$i = 0, $$0335$i = 0, $$0336$i = 0, $$0338$i = 0, $$0339$i = 0, $$0344$i = 0, $$1174$i = 0, $$1174$i$be = 0, $$1174$i$ph = 0, $$1176$i = 0, $$1176$i$be = 0, $$1176$i$ph = 0, $$124471$i = 0;
 var $$1263$i$i = 0, $$1263$i$i$be = 0, $$1263$i$i$ph = 0, $$1265$i$i = 0, $$1265$i$i$be = 0, $$1265$i$i$ph = 0, $$1319$i = 0, $$1324$i = 0, $$1340$i = 0, $$1346$i = 0, $$1346$i$be = 0, $$1346$i$ph = 0, $$1350$i = 0, $$1350$i$be = 0, $$1350$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2331$i = 0, $$3$i = 0;
 var $$3$i$i = 0, $$3$i198 = 0, $$3$i198211 = 0, $$3326$i = 0, $$3348$i = 0, $$4$lcssa$i = 0, $$415$i = 0, $$415$i$ph = 0, $$4236$i = 0, $$4327$lcssa$i = 0, $$432714$i = 0, $$432714$i$ph = 0, $$4333$i = 0, $$533413$i = 0, $$533413$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$i16$i = 0, $$pre$i195 = 0, $$pre$i204 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink320 = 0, $$sink321 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i203 = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i199 = 0, $or$cond1$i = 0, $or$cond1$i197 = 0, $or$cond11$i = 0, $or$cond2$i = 0;
 var $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond8$not$i = 0, $spec$select$i = 0, $spec$select$i201 = 0, $spec$select1$i = 0, $spec$select2$i = 0, $spec$select4$i = 0, $spec$select49$i = 0, $spec$select9$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[37256]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (149064 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[37256] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(149032)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (149064 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[37256] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($67) + ($75)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(149044)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (149064 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[37256] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(149032)>>2] = $76;
     HEAP32[(149044)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(149028)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (149328 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $$0169$i = $124;$$0170$i = $124;$$0171$i = $128;
     while(1) {
      $129 = ((($$0169$i)) + 16|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = ($130|0)==(0|0);
      if ($131) {
       $132 = ((($$0169$i)) + 20|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($133|0)==(0|0);
       if ($134) {
        break;
       } else {
        $136 = $133;
       }
      } else {
       $136 = $130;
      }
      $135 = ((($136)) + 4|0);
      $137 = HEAP32[$135>>2]|0;
      $138 = $137 & -8;
      $139 = (($138) - ($6))|0;
      $140 = ($139>>>0)<($$0171$i>>>0);
      $spec$select$i = $140 ? $139 : $$0171$i;
      $spec$select1$i = $140 ? $136 : $$0170$i;
      $$0169$i = $136;$$0170$i = $spec$select1$i;$$0171$i = $spec$select$i;
     }
     $141 = (($$0170$i) + ($6)|0);
     $142 = ($141>>>0)>($$0170$i>>>0);
     if ($142) {
      $143 = ((($$0170$i)) + 24|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$0170$i)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($146|0)==($$0170$i|0);
      do {
       if ($147) {
        $152 = ((($$0170$i)) + 20|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ($153|0)==(0|0);
        if ($154) {
         $155 = ((($$0170$i)) + 16|0);
         $156 = HEAP32[$155>>2]|0;
         $157 = ($156|0)==(0|0);
         if ($157) {
          $$3$i = 0;
          break;
         } else {
          $$1174$i$ph = $156;$$1176$i$ph = $155;
         }
        } else {
         $$1174$i$ph = $153;$$1176$i$ph = $152;
        }
        $$1174$i = $$1174$i$ph;$$1176$i = $$1176$i$ph;
        while(1) {
         $158 = ((($$1174$i)) + 20|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ($159|0)==(0|0);
         if ($160) {
          $161 = ((($$1174$i)) + 16|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ($162|0)==(0|0);
          if ($163) {
           break;
          } else {
           $$1174$i$be = $162;$$1176$i$be = $161;
          }
         } else {
          $$1174$i$be = $159;$$1176$i$be = $158;
         }
         $$1174$i = $$1174$i$be;$$1176$i = $$1176$i$be;
        }
        HEAP32[$$1176$i>>2] = 0;
        $$3$i = $$1174$i;
       } else {
        $148 = ((($$0170$i)) + 8|0);
        $149 = HEAP32[$148>>2]|0;
        $150 = ((($149)) + 12|0);
        HEAP32[$150>>2] = $146;
        $151 = ((($146)) + 8|0);
        HEAP32[$151>>2] = $149;
        $$3$i = $146;
       }
      } while(0);
      $164 = ($144|0)==(0|0);
      do {
       if (!($164)) {
        $165 = ((($$0170$i)) + 28|0);
        $166 = HEAP32[$165>>2]|0;
        $167 = (149328 + ($166<<2)|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = ($$0170$i|0)==($168|0);
        if ($169) {
         HEAP32[$167>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $170 = 1 << $166;
          $171 = $170 ^ -1;
          $172 = $98 & $171;
          HEAP32[(149028)>>2] = $172;
          break;
         }
        } else {
         $173 = ((($144)) + 16|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ($174|0)==($$0170$i|0);
         $176 = ((($144)) + 20|0);
         $$sink = $175 ? $173 : $176;
         HEAP32[$$sink>>2] = $$3$i;
         $177 = ($$3$i|0)==(0|0);
         if ($177) {
          break;
         }
        }
        $178 = ((($$3$i)) + 24|0);
        HEAP32[$178>>2] = $144;
        $179 = ((($$0170$i)) + 16|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $182 = ((($$3$i)) + 16|0);
         HEAP32[$182>>2] = $180;
         $183 = ((($180)) + 24|0);
         HEAP32[$183>>2] = $$3$i;
        }
        $184 = ((($$0170$i)) + 20|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if (!($186)) {
         $187 = ((($$3$i)) + 20|0);
         HEAP32[$187>>2] = $185;
         $188 = ((($185)) + 24|0);
         HEAP32[$188>>2] = $$3$i;
        }
       }
      } while(0);
      $189 = ($$0171$i>>>0)<(16);
      if ($189) {
       $190 = (($$0171$i) + ($6))|0;
       $191 = $190 | 3;
       $192 = ((($$0170$i)) + 4|0);
       HEAP32[$192>>2] = $191;
       $193 = (($$0170$i) + ($190)|0);
       $194 = ((($193)) + 4|0);
       $195 = HEAP32[$194>>2]|0;
       $196 = $195 | 1;
       HEAP32[$194>>2] = $196;
      } else {
       $197 = $6 | 3;
       $198 = ((($$0170$i)) + 4|0);
       HEAP32[$198>>2] = $197;
       $199 = $$0171$i | 1;
       $200 = ((($141)) + 4|0);
       HEAP32[$200>>2] = $199;
       $201 = (($141) + ($$0171$i)|0);
       HEAP32[$201>>2] = $$0171$i;
       $202 = ($33|0)==(0);
       if (!($202)) {
        $203 = HEAP32[(149044)>>2]|0;
        $204 = $33 >>> 3;
        $205 = $204 << 1;
        $206 = (149064 + ($205<<2)|0);
        $207 = 1 << $204;
        $208 = $207 & $8;
        $209 = ($208|0)==(0);
        if ($209) {
         $210 = $207 | $8;
         HEAP32[37256] = $210;
         $$pre$i = ((($206)) + 8|0);
         $$0$i = $206;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $211 = ((($206)) + 8|0);
         $212 = HEAP32[$211>>2]|0;
         $$0$i = $212;$$pre$phi$iZ2D = $211;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $203;
        $213 = ((($$0$i)) + 12|0);
        HEAP32[$213>>2] = $203;
        $214 = ((($203)) + 8|0);
        HEAP32[$214>>2] = $$0$i;
        $215 = ((($203)) + 12|0);
        HEAP32[$215>>2] = $206;
       }
       HEAP32[(149032)>>2] = $$0171$i;
       HEAP32[(149044)>>2] = $141;
      }
      $216 = ((($$0170$i)) + 8|0);
      $$0 = $216;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $217 = ($0>>>0)>(4294967231);
   if ($217) {
    $$0192 = -1;
   } else {
    $218 = (($0) + 11)|0;
    $219 = $218 & -8;
    $220 = HEAP32[(149028)>>2]|0;
    $221 = ($220|0)==(0);
    if ($221) {
     $$0192 = $219;
    } else {
     $222 = (0 - ($219))|0;
     $223 = $218 >>> 8;
     $224 = ($223|0)==(0);
     if ($224) {
      $$0335$i = 0;
     } else {
      $225 = ($219>>>0)>(16777215);
      if ($225) {
       $$0335$i = 31;
      } else {
       $226 = (($223) + 1048320)|0;
       $227 = $226 >>> 16;
       $228 = $227 & 8;
       $229 = $223 << $228;
       $230 = (($229) + 520192)|0;
       $231 = $230 >>> 16;
       $232 = $231 & 4;
       $233 = $232 | $228;
       $234 = $229 << $232;
       $235 = (($234) + 245760)|0;
       $236 = $235 >>> 16;
       $237 = $236 & 2;
       $238 = $233 | $237;
       $239 = (14 - ($238))|0;
       $240 = $234 << $237;
       $241 = $240 >>> 15;
       $242 = (($239) + ($241))|0;
       $243 = $242 << 1;
       $244 = (($242) + 7)|0;
       $245 = $219 >>> $244;
       $246 = $245 & 1;
       $247 = $246 | $243;
       $$0335$i = $247;
      }
     }
     $248 = (149328 + ($$0335$i<<2)|0);
     $249 = HEAP32[$248>>2]|0;
     $250 = ($249|0)==(0|0);
     L79: do {
      if ($250) {
       $$2331$i = 0;$$3$i198 = 0;$$3326$i = $222;
       label = 61;
      } else {
       $251 = ($$0335$i|0)==(31);
       $252 = $$0335$i >>> 1;
       $253 = (25 - ($252))|0;
       $254 = $251 ? 0 : $253;
       $255 = $219 << $254;
       $$0318$i = 0;$$0323$i = $222;$$0329$i = $249;$$0336$i = $255;$$0339$i = 0;
       while(1) {
        $256 = ((($$0329$i)) + 4|0);
        $257 = HEAP32[$256>>2]|0;
        $258 = $257 & -8;
        $259 = (($258) - ($219))|0;
        $260 = ($259>>>0)<($$0323$i>>>0);
        if ($260) {
         $261 = ($259|0)==(0);
         if ($261) {
          $$415$i$ph = $$0329$i;$$432714$i$ph = 0;$$533413$i$ph = $$0329$i;
          label = 65;
          break L79;
         } else {
          $$1319$i = $$0329$i;$$1324$i = $259;
         }
        } else {
         $$1319$i = $$0318$i;$$1324$i = $$0323$i;
        }
        $262 = ((($$0329$i)) + 20|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = $$0336$i >>> 31;
        $265 = (((($$0329$i)) + 16|0) + ($264<<2)|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ($263|0)==(0|0);
        $268 = ($263|0)==($266|0);
        $or$cond1$i197 = $267 | $268;
        $$1340$i = $or$cond1$i197 ? $$0339$i : $263;
        $269 = ($266|0)==(0|0);
        $spec$select4$i = $$0336$i << 1;
        if ($269) {
         $$2331$i = $$1340$i;$$3$i198 = $$1319$i;$$3326$i = $$1324$i;
         label = 61;
         break;
        } else {
         $$0318$i = $$1319$i;$$0323$i = $$1324$i;$$0329$i = $266;$$0336$i = $spec$select4$i;$$0339$i = $$1340$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      $270 = ($$2331$i|0)==(0|0);
      $271 = ($$3$i198|0)==(0|0);
      $or$cond$i199 = $270 & $271;
      if ($or$cond$i199) {
       $272 = 2 << $$0335$i;
       $273 = (0 - ($272))|0;
       $274 = $272 | $273;
       $275 = $274 & $220;
       $276 = ($275|0)==(0);
       if ($276) {
        $$0192 = $219;
        break;
       }
       $277 = (0 - ($275))|0;
       $278 = $275 & $277;
       $279 = (($278) + -1)|0;
       $280 = $279 >>> 12;
       $281 = $280 & 16;
       $282 = $279 >>> $281;
       $283 = $282 >>> 5;
       $284 = $283 & 8;
       $285 = $284 | $281;
       $286 = $282 >>> $284;
       $287 = $286 >>> 2;
       $288 = $287 & 4;
       $289 = $285 | $288;
       $290 = $286 >>> $288;
       $291 = $290 >>> 1;
       $292 = $291 & 2;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 1;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = (($297) + ($298))|0;
       $300 = (149328 + ($299<<2)|0);
       $301 = HEAP32[$300>>2]|0;
       $$3$i198211 = 0;$$4333$i = $301;
      } else {
       $$3$i198211 = $$3$i198;$$4333$i = $$2331$i;
      }
      $302 = ($$4333$i|0)==(0|0);
      if ($302) {
       $$4$lcssa$i = $$3$i198211;$$4327$lcssa$i = $$3326$i;
      } else {
       $$415$i$ph = $$3$i198211;$$432714$i$ph = $$3326$i;$$533413$i$ph = $$4333$i;
       label = 65;
      }
     }
     if ((label|0) == 65) {
      $$415$i = $$415$i$ph;$$432714$i = $$432714$i$ph;$$533413$i = $$533413$i$ph;
      while(1) {
       $303 = ((($$533413$i)) + 4|0);
       $304 = HEAP32[$303>>2]|0;
       $305 = $304 & -8;
       $306 = (($305) - ($219))|0;
       $307 = ($306>>>0)<($$432714$i>>>0);
       $spec$select$i201 = $307 ? $306 : $$432714$i;
       $spec$select2$i = $307 ? $$533413$i : $$415$i;
       $308 = ((($$533413$i)) + 16|0);
       $309 = HEAP32[$308>>2]|0;
       $310 = ($309|0)==(0|0);
       if ($310) {
        $311 = ((($$533413$i)) + 20|0);
        $312 = HEAP32[$311>>2]|0;
        $314 = $312;
       } else {
        $314 = $309;
       }
       $313 = ($314|0)==(0|0);
       if ($313) {
        $$4$lcssa$i = $spec$select2$i;$$4327$lcssa$i = $spec$select$i201;
        break;
       } else {
        $$415$i = $spec$select2$i;$$432714$i = $spec$select$i201;$$533413$i = $314;
       }
      }
     }
     $315 = ($$4$lcssa$i|0)==(0|0);
     if ($315) {
      $$0192 = $219;
     } else {
      $316 = HEAP32[(149032)>>2]|0;
      $317 = (($316) - ($219))|0;
      $318 = ($$4327$lcssa$i>>>0)<($317>>>0);
      if ($318) {
       $319 = (($$4$lcssa$i) + ($219)|0);
       $320 = ($319>>>0)>($$4$lcssa$i>>>0);
       if ($320) {
        $321 = ((($$4$lcssa$i)) + 24|0);
        $322 = HEAP32[$321>>2]|0;
        $323 = ((($$4$lcssa$i)) + 12|0);
        $324 = HEAP32[$323>>2]|0;
        $325 = ($324|0)==($$4$lcssa$i|0);
        do {
         if ($325) {
          $330 = ((($$4$lcssa$i)) + 20|0);
          $331 = HEAP32[$330>>2]|0;
          $332 = ($331|0)==(0|0);
          if ($332) {
           $333 = ((($$4$lcssa$i)) + 16|0);
           $334 = HEAP32[$333>>2]|0;
           $335 = ($334|0)==(0|0);
           if ($335) {
            $$3348$i = 0;
            break;
           } else {
            $$1346$i$ph = $334;$$1350$i$ph = $333;
           }
          } else {
           $$1346$i$ph = $331;$$1350$i$ph = $330;
          }
          $$1346$i = $$1346$i$ph;$$1350$i = $$1350$i$ph;
          while(1) {
           $336 = ((($$1346$i)) + 20|0);
           $337 = HEAP32[$336>>2]|0;
           $338 = ($337|0)==(0|0);
           if ($338) {
            $339 = ((($$1346$i)) + 16|0);
            $340 = HEAP32[$339>>2]|0;
            $341 = ($340|0)==(0|0);
            if ($341) {
             break;
            } else {
             $$1346$i$be = $340;$$1350$i$be = $339;
            }
           } else {
            $$1346$i$be = $337;$$1350$i$be = $336;
           }
           $$1346$i = $$1346$i$be;$$1350$i = $$1350$i$be;
          }
          HEAP32[$$1350$i>>2] = 0;
          $$3348$i = $$1346$i;
         } else {
          $326 = ((($$4$lcssa$i)) + 8|0);
          $327 = HEAP32[$326>>2]|0;
          $328 = ((($327)) + 12|0);
          HEAP32[$328>>2] = $324;
          $329 = ((($324)) + 8|0);
          HEAP32[$329>>2] = $327;
          $$3348$i = $324;
         }
        } while(0);
        $342 = ($322|0)==(0|0);
        do {
         if ($342) {
          $425 = $220;
         } else {
          $343 = ((($$4$lcssa$i)) + 28|0);
          $344 = HEAP32[$343>>2]|0;
          $345 = (149328 + ($344<<2)|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($$4$lcssa$i|0)==($346|0);
          if ($347) {
           HEAP32[$345>>2] = $$3348$i;
           $cond$i203 = ($$3348$i|0)==(0|0);
           if ($cond$i203) {
            $348 = 1 << $344;
            $349 = $348 ^ -1;
            $350 = $220 & $349;
            HEAP32[(149028)>>2] = $350;
            $425 = $350;
            break;
           }
          } else {
           $351 = ((($322)) + 16|0);
           $352 = HEAP32[$351>>2]|0;
           $353 = ($352|0)==($$4$lcssa$i|0);
           $354 = ((($322)) + 20|0);
           $$sink320 = $353 ? $351 : $354;
           HEAP32[$$sink320>>2] = $$3348$i;
           $355 = ($$3348$i|0)==(0|0);
           if ($355) {
            $425 = $220;
            break;
           }
          }
          $356 = ((($$3348$i)) + 24|0);
          HEAP32[$356>>2] = $322;
          $357 = ((($$4$lcssa$i)) + 16|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)==(0|0);
          if (!($359)) {
           $360 = ((($$3348$i)) + 16|0);
           HEAP32[$360>>2] = $358;
           $361 = ((($358)) + 24|0);
           HEAP32[$361>>2] = $$3348$i;
          }
          $362 = ((($$4$lcssa$i)) + 20|0);
          $363 = HEAP32[$362>>2]|0;
          $364 = ($363|0)==(0|0);
          if ($364) {
           $425 = $220;
          } else {
           $365 = ((($$3348$i)) + 20|0);
           HEAP32[$365>>2] = $363;
           $366 = ((($363)) + 24|0);
           HEAP32[$366>>2] = $$3348$i;
           $425 = $220;
          }
         }
        } while(0);
        $367 = ($$4327$lcssa$i>>>0)<(16);
        L128: do {
         if ($367) {
          $368 = (($$4327$lcssa$i) + ($219))|0;
          $369 = $368 | 3;
          $370 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$370>>2] = $369;
          $371 = (($$4$lcssa$i) + ($368)|0);
          $372 = ((($371)) + 4|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = $373 | 1;
          HEAP32[$372>>2] = $374;
         } else {
          $375 = $219 | 3;
          $376 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$376>>2] = $375;
          $377 = $$4327$lcssa$i | 1;
          $378 = ((($319)) + 4|0);
          HEAP32[$378>>2] = $377;
          $379 = (($319) + ($$4327$lcssa$i)|0);
          HEAP32[$379>>2] = $$4327$lcssa$i;
          $380 = $$4327$lcssa$i >>> 3;
          $381 = ($$4327$lcssa$i>>>0)<(256);
          if ($381) {
           $382 = $380 << 1;
           $383 = (149064 + ($382<<2)|0);
           $384 = HEAP32[37256]|0;
           $385 = 1 << $380;
           $386 = $384 & $385;
           $387 = ($386|0)==(0);
           if ($387) {
            $388 = $384 | $385;
            HEAP32[37256] = $388;
            $$pre$i204 = ((($383)) + 8|0);
            $$0344$i = $383;$$pre$phi$i205Z2D = $$pre$i204;
           } else {
            $389 = ((($383)) + 8|0);
            $390 = HEAP32[$389>>2]|0;
            $$0344$i = $390;$$pre$phi$i205Z2D = $389;
           }
           HEAP32[$$pre$phi$i205Z2D>>2] = $319;
           $391 = ((($$0344$i)) + 12|0);
           HEAP32[$391>>2] = $319;
           $392 = ((($319)) + 8|0);
           HEAP32[$392>>2] = $$0344$i;
           $393 = ((($319)) + 12|0);
           HEAP32[$393>>2] = $383;
           break;
          }
          $394 = $$4327$lcssa$i >>> 8;
          $395 = ($394|0)==(0);
          if ($395) {
           $$0338$i = 0;
          } else {
           $396 = ($$4327$lcssa$i>>>0)>(16777215);
           if ($396) {
            $$0338$i = 31;
           } else {
            $397 = (($394) + 1048320)|0;
            $398 = $397 >>> 16;
            $399 = $398 & 8;
            $400 = $394 << $399;
            $401 = (($400) + 520192)|0;
            $402 = $401 >>> 16;
            $403 = $402 & 4;
            $404 = $403 | $399;
            $405 = $400 << $403;
            $406 = (($405) + 245760)|0;
            $407 = $406 >>> 16;
            $408 = $407 & 2;
            $409 = $404 | $408;
            $410 = (14 - ($409))|0;
            $411 = $405 << $408;
            $412 = $411 >>> 15;
            $413 = (($410) + ($412))|0;
            $414 = $413 << 1;
            $415 = (($413) + 7)|0;
            $416 = $$4327$lcssa$i >>> $415;
            $417 = $416 & 1;
            $418 = $417 | $414;
            $$0338$i = $418;
           }
          }
          $419 = (149328 + ($$0338$i<<2)|0);
          $420 = ((($319)) + 28|0);
          HEAP32[$420>>2] = $$0338$i;
          $421 = ((($319)) + 16|0);
          $422 = ((($421)) + 4|0);
          HEAP32[$422>>2] = 0;
          HEAP32[$421>>2] = 0;
          $423 = 1 << $$0338$i;
          $424 = $425 & $423;
          $426 = ($424|0)==(0);
          if ($426) {
           $427 = $425 | $423;
           HEAP32[(149028)>>2] = $427;
           HEAP32[$419>>2] = $319;
           $428 = ((($319)) + 24|0);
           HEAP32[$428>>2] = $419;
           $429 = ((($319)) + 12|0);
           HEAP32[$429>>2] = $319;
           $430 = ((($319)) + 8|0);
           HEAP32[$430>>2] = $319;
           break;
          }
          $431 = HEAP32[$419>>2]|0;
          $432 = ((($431)) + 4|0);
          $433 = HEAP32[$432>>2]|0;
          $434 = $433 & -8;
          $435 = ($434|0)==($$4327$lcssa$i|0);
          L145: do {
           if ($435) {
            $$0321$lcssa$i = $431;
           } else {
            $436 = ($$0338$i|0)==(31);
            $437 = $$0338$i >>> 1;
            $438 = (25 - ($437))|0;
            $439 = $436 ? 0 : $438;
            $440 = $$4327$lcssa$i << $439;
            $$032012$i = $440;$$032111$i = $431;
            while(1) {
             $447 = $$032012$i >>> 31;
             $448 = (((($$032111$i)) + 16|0) + ($447<<2)|0);
             $443 = HEAP32[$448>>2]|0;
             $449 = ($443|0)==(0|0);
             if ($449) {
              break;
             }
             $441 = $$032012$i << 1;
             $442 = ((($443)) + 4|0);
             $444 = HEAP32[$442>>2]|0;
             $445 = $444 & -8;
             $446 = ($445|0)==($$4327$lcssa$i|0);
             if ($446) {
              $$0321$lcssa$i = $443;
              break L145;
             } else {
              $$032012$i = $441;$$032111$i = $443;
             }
            }
            HEAP32[$448>>2] = $319;
            $450 = ((($319)) + 24|0);
            HEAP32[$450>>2] = $$032111$i;
            $451 = ((($319)) + 12|0);
            HEAP32[$451>>2] = $319;
            $452 = ((($319)) + 8|0);
            HEAP32[$452>>2] = $319;
            break L128;
           }
          } while(0);
          $453 = ((($$0321$lcssa$i)) + 8|0);
          $454 = HEAP32[$453>>2]|0;
          $455 = ((($454)) + 12|0);
          HEAP32[$455>>2] = $319;
          HEAP32[$453>>2] = $319;
          $456 = ((($319)) + 8|0);
          HEAP32[$456>>2] = $454;
          $457 = ((($319)) + 12|0);
          HEAP32[$457>>2] = $$0321$lcssa$i;
          $458 = ((($319)) + 24|0);
          HEAP32[$458>>2] = 0;
         }
        } while(0);
        $459 = ((($$4$lcssa$i)) + 8|0);
        $$0 = $459;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$0192 = $219;
       }
      } else {
       $$0192 = $219;
      }
     }
    }
   }
  }
 } while(0);
 $460 = HEAP32[(149032)>>2]|0;
 $461 = ($460>>>0)<($$0192>>>0);
 if (!($461)) {
  $462 = (($460) - ($$0192))|0;
  $463 = HEAP32[(149044)>>2]|0;
  $464 = ($462>>>0)>(15);
  if ($464) {
   $465 = (($463) + ($$0192)|0);
   HEAP32[(149044)>>2] = $465;
   HEAP32[(149032)>>2] = $462;
   $466 = $462 | 1;
   $467 = ((($465)) + 4|0);
   HEAP32[$467>>2] = $466;
   $468 = (($463) + ($460)|0);
   HEAP32[$468>>2] = $462;
   $469 = $$0192 | 3;
   $470 = ((($463)) + 4|0);
   HEAP32[$470>>2] = $469;
  } else {
   HEAP32[(149032)>>2] = 0;
   HEAP32[(149044)>>2] = 0;
   $471 = $460 | 3;
   $472 = ((($463)) + 4|0);
   HEAP32[$472>>2] = $471;
   $473 = (($463) + ($460)|0);
   $474 = ((($473)) + 4|0);
   $475 = HEAP32[$474>>2]|0;
   $476 = $475 | 1;
   HEAP32[$474>>2] = $476;
  }
  $477 = ((($463)) + 8|0);
  $$0 = $477;
  STACKTOP = sp;return ($$0|0);
 }
 $478 = HEAP32[(149036)>>2]|0;
 $479 = ($478>>>0)>($$0192>>>0);
 if ($479) {
  $480 = (($478) - ($$0192))|0;
  HEAP32[(149036)>>2] = $480;
  $481 = HEAP32[(149048)>>2]|0;
  $482 = (($481) + ($$0192)|0);
  HEAP32[(149048)>>2] = $482;
  $483 = $480 | 1;
  $484 = ((($482)) + 4|0);
  HEAP32[$484>>2] = $483;
  $485 = $$0192 | 3;
  $486 = ((($481)) + 4|0);
  HEAP32[$486>>2] = $485;
  $487 = ((($481)) + 8|0);
  $$0 = $487;
  STACKTOP = sp;return ($$0|0);
 }
 $488 = HEAP32[37374]|0;
 $489 = ($488|0)==(0);
 if ($489) {
  HEAP32[(149504)>>2] = 4096;
  HEAP32[(149500)>>2] = 4096;
  HEAP32[(149508)>>2] = -1;
  HEAP32[(149512)>>2] = -1;
  HEAP32[(149516)>>2] = 0;
  HEAP32[(149468)>>2] = 0;
  $490 = $1;
  $491 = $490 & -16;
  $492 = $491 ^ 1431655768;
  HEAP32[37374] = $492;
  $496 = 4096;
 } else {
  $$pre$i195 = HEAP32[(149504)>>2]|0;
  $496 = $$pre$i195;
 }
 $493 = (($$0192) + 48)|0;
 $494 = (($$0192) + 47)|0;
 $495 = (($496) + ($494))|0;
 $497 = (0 - ($496))|0;
 $498 = $495 & $497;
 $499 = ($498>>>0)>($$0192>>>0);
 if (!($499)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $500 = HEAP32[(149464)>>2]|0;
 $501 = ($500|0)==(0);
 if (!($501)) {
  $502 = HEAP32[(149456)>>2]|0;
  $503 = (($502) + ($498))|0;
  $504 = ($503>>>0)<=($502>>>0);
  $505 = ($503>>>0)>($500>>>0);
  $or$cond1$i = $504 | $505;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $506 = HEAP32[(149468)>>2]|0;
 $507 = $506 & 4;
 $508 = ($507|0)==(0);
 L178: do {
  if ($508) {
   $509 = HEAP32[(149048)>>2]|0;
   $510 = ($509|0)==(0|0);
   L180: do {
    if ($510) {
     label = 128;
    } else {
     $$0$i20$i = (149472);
     while(1) {
      $511 = HEAP32[$$0$i20$i>>2]|0;
      $512 = ($511>>>0)>($509>>>0);
      if (!($512)) {
       $513 = ((($$0$i20$i)) + 4|0);
       $514 = HEAP32[$513>>2]|0;
       $515 = (($511) + ($514)|0);
       $516 = ($515>>>0)>($509>>>0);
       if ($516) {
        break;
       }
      }
      $517 = ((($$0$i20$i)) + 8|0);
      $518 = HEAP32[$517>>2]|0;
      $519 = ($518|0)==(0|0);
      if ($519) {
       label = 128;
       break L180;
      } else {
       $$0$i20$i = $518;
      }
     }
     $542 = (($495) - ($478))|0;
     $543 = $542 & $497;
     $544 = ($543>>>0)<(2147483647);
     if ($544) {
      $545 = ((($$0$i20$i)) + 4|0);
      $546 = (_sbrk(($543|0))|0);
      $547 = HEAP32[$$0$i20$i>>2]|0;
      $548 = HEAP32[$545>>2]|0;
      $549 = (($547) + ($548)|0);
      $550 = ($546|0)==($549|0);
      if ($550) {
       $551 = ($546|0)==((-1)|0);
       if ($551) {
        $$2234243136$i = $543;
       } else {
        $$723947$i = $543;$$748$i = $546;
        label = 145;
        break L178;
       }
      } else {
       $$2247$ph$i = $546;$$2253$ph$i = $543;
       label = 136;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 128) {
     $520 = (_sbrk(0)|0);
     $521 = ($520|0)==((-1)|0);
     if ($521) {
      $$2234243136$i = 0;
     } else {
      $522 = $520;
      $523 = HEAP32[(149500)>>2]|0;
      $524 = (($523) + -1)|0;
      $525 = $524 & $522;
      $526 = ($525|0)==(0);
      $527 = (($524) + ($522))|0;
      $528 = (0 - ($523))|0;
      $529 = $527 & $528;
      $530 = (($529) - ($522))|0;
      $531 = $526 ? 0 : $530;
      $spec$select49$i = (($531) + ($498))|0;
      $532 = HEAP32[(149456)>>2]|0;
      $533 = (($spec$select49$i) + ($532))|0;
      $534 = ($spec$select49$i>>>0)>($$0192>>>0);
      $535 = ($spec$select49$i>>>0)<(2147483647);
      $or$cond$i = $534 & $535;
      if ($or$cond$i) {
       $536 = HEAP32[(149464)>>2]|0;
       $537 = ($536|0)==(0);
       if (!($537)) {
        $538 = ($533>>>0)<=($532>>>0);
        $539 = ($533>>>0)>($536>>>0);
        $or$cond2$i = $538 | $539;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $540 = (_sbrk(($spec$select49$i|0))|0);
       $541 = ($540|0)==($520|0);
       if ($541) {
        $$723947$i = $spec$select49$i;$$748$i = $520;
        label = 145;
        break L178;
       } else {
        $$2247$ph$i = $540;$$2253$ph$i = $spec$select49$i;
        label = 136;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 136) {
     $552 = (0 - ($$2253$ph$i))|0;
     $553 = ($$2247$ph$i|0)!=((-1)|0);
     $554 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $554 & $553;
     $555 = ($493>>>0)>($$2253$ph$i>>>0);
     $or$cond6$i = $555 & $or$cond7$i;
     if (!($or$cond6$i)) {
      $565 = ($$2247$ph$i|0)==((-1)|0);
      if ($565) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 145;
       break L178;
      }
     }
     $556 = HEAP32[(149504)>>2]|0;
     $557 = (($494) - ($$2253$ph$i))|0;
     $558 = (($557) + ($556))|0;
     $559 = (0 - ($556))|0;
     $560 = $558 & $559;
     $561 = ($560>>>0)<(2147483647);
     if (!($561)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
     $562 = (_sbrk(($560|0))|0);
     $563 = ($562|0)==((-1)|0);
     if ($563) {
      (_sbrk(($552|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $564 = (($560) + ($$2253$ph$i))|0;
      $$723947$i = $564;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
    }
   } while(0);
   $566 = HEAP32[(149468)>>2]|0;
   $567 = $566 | 4;
   HEAP32[(149468)>>2] = $567;
   $$4236$i = $$2234243136$i;
   label = 143;
  } else {
   $$4236$i = 0;
   label = 143;
  }
 } while(0);
 if ((label|0) == 143) {
  $568 = ($498>>>0)<(2147483647);
  if ($568) {
   $569 = (_sbrk(($498|0))|0);
   $570 = (_sbrk(0)|0);
   $571 = ($569|0)!=((-1)|0);
   $572 = ($570|0)!=((-1)|0);
   $or$cond5$i = $571 & $572;
   $573 = ($569>>>0)<($570>>>0);
   $or$cond8$i = $573 & $or$cond5$i;
   $574 = $570;
   $575 = $569;
   $576 = (($574) - ($575))|0;
   $577 = (($$0192) + 40)|0;
   $578 = ($576>>>0)>($577>>>0);
   $spec$select9$i = $578 ? $576 : $$4236$i;
   $or$cond8$not$i = $or$cond8$i ^ 1;
   $579 = ($569|0)==((-1)|0);
   $not$$i = $578 ^ 1;
   $580 = $579 | $not$$i;
   $or$cond50$i = $580 | $or$cond8$not$i;
   if (!($or$cond50$i)) {
    $$723947$i = $spec$select9$i;$$748$i = $569;
    label = 145;
   }
  }
 }
 if ((label|0) == 145) {
  $581 = HEAP32[(149456)>>2]|0;
  $582 = (($581) + ($$723947$i))|0;
  HEAP32[(149456)>>2] = $582;
  $583 = HEAP32[(149460)>>2]|0;
  $584 = ($582>>>0)>($583>>>0);
  if ($584) {
   HEAP32[(149460)>>2] = $582;
  }
  $585 = HEAP32[(149048)>>2]|0;
  $586 = ($585|0)==(0|0);
  L215: do {
   if ($586) {
    $587 = HEAP32[(149040)>>2]|0;
    $588 = ($587|0)==(0|0);
    $589 = ($$748$i>>>0)<($587>>>0);
    $or$cond11$i = $588 | $589;
    if ($or$cond11$i) {
     HEAP32[(149040)>>2] = $$748$i;
    }
    HEAP32[(149472)>>2] = $$748$i;
    HEAP32[(149476)>>2] = $$723947$i;
    HEAP32[(149484)>>2] = 0;
    $590 = HEAP32[37374]|0;
    HEAP32[(149060)>>2] = $590;
    HEAP32[(149056)>>2] = -1;
    HEAP32[(149076)>>2] = (149064);
    HEAP32[(149072)>>2] = (149064);
    HEAP32[(149084)>>2] = (149072);
    HEAP32[(149080)>>2] = (149072);
    HEAP32[(149092)>>2] = (149080);
    HEAP32[(149088)>>2] = (149080);
    HEAP32[(149100)>>2] = (149088);
    HEAP32[(149096)>>2] = (149088);
    HEAP32[(149108)>>2] = (149096);
    HEAP32[(149104)>>2] = (149096);
    HEAP32[(149116)>>2] = (149104);
    HEAP32[(149112)>>2] = (149104);
    HEAP32[(149124)>>2] = (149112);
    HEAP32[(149120)>>2] = (149112);
    HEAP32[(149132)>>2] = (149120);
    HEAP32[(149128)>>2] = (149120);
    HEAP32[(149140)>>2] = (149128);
    HEAP32[(149136)>>2] = (149128);
    HEAP32[(149148)>>2] = (149136);
    HEAP32[(149144)>>2] = (149136);
    HEAP32[(149156)>>2] = (149144);
    HEAP32[(149152)>>2] = (149144);
    HEAP32[(149164)>>2] = (149152);
    HEAP32[(149160)>>2] = (149152);
    HEAP32[(149172)>>2] = (149160);
    HEAP32[(149168)>>2] = (149160);
    HEAP32[(149180)>>2] = (149168);
    HEAP32[(149176)>>2] = (149168);
    HEAP32[(149188)>>2] = (149176);
    HEAP32[(149184)>>2] = (149176);
    HEAP32[(149196)>>2] = (149184);
    HEAP32[(149192)>>2] = (149184);
    HEAP32[(149204)>>2] = (149192);
    HEAP32[(149200)>>2] = (149192);
    HEAP32[(149212)>>2] = (149200);
    HEAP32[(149208)>>2] = (149200);
    HEAP32[(149220)>>2] = (149208);
    HEAP32[(149216)>>2] = (149208);
    HEAP32[(149228)>>2] = (149216);
    HEAP32[(149224)>>2] = (149216);
    HEAP32[(149236)>>2] = (149224);
    HEAP32[(149232)>>2] = (149224);
    HEAP32[(149244)>>2] = (149232);
    HEAP32[(149240)>>2] = (149232);
    HEAP32[(149252)>>2] = (149240);
    HEAP32[(149248)>>2] = (149240);
    HEAP32[(149260)>>2] = (149248);
    HEAP32[(149256)>>2] = (149248);
    HEAP32[(149268)>>2] = (149256);
    HEAP32[(149264)>>2] = (149256);
    HEAP32[(149276)>>2] = (149264);
    HEAP32[(149272)>>2] = (149264);
    HEAP32[(149284)>>2] = (149272);
    HEAP32[(149280)>>2] = (149272);
    HEAP32[(149292)>>2] = (149280);
    HEAP32[(149288)>>2] = (149280);
    HEAP32[(149300)>>2] = (149288);
    HEAP32[(149296)>>2] = (149288);
    HEAP32[(149308)>>2] = (149296);
    HEAP32[(149304)>>2] = (149296);
    HEAP32[(149316)>>2] = (149304);
    HEAP32[(149312)>>2] = (149304);
    HEAP32[(149324)>>2] = (149312);
    HEAP32[(149320)>>2] = (149312);
    $591 = (($$723947$i) + -40)|0;
    $592 = ((($$748$i)) + 8|0);
    $593 = $592;
    $594 = $593 & 7;
    $595 = ($594|0)==(0);
    $596 = (0 - ($593))|0;
    $597 = $596 & 7;
    $598 = $595 ? 0 : $597;
    $599 = (($$748$i) + ($598)|0);
    $600 = (($591) - ($598))|0;
    HEAP32[(149048)>>2] = $599;
    HEAP32[(149036)>>2] = $600;
    $601 = $600 | 1;
    $602 = ((($599)) + 4|0);
    HEAP32[$602>>2] = $601;
    $603 = (($$748$i) + ($591)|0);
    $604 = ((($603)) + 4|0);
    HEAP32[$604>>2] = 40;
    $605 = HEAP32[(149512)>>2]|0;
    HEAP32[(149052)>>2] = $605;
   } else {
    $$024372$i = (149472);
    while(1) {
     $606 = HEAP32[$$024372$i>>2]|0;
     $607 = ((($$024372$i)) + 4|0);
     $608 = HEAP32[$607>>2]|0;
     $609 = (($606) + ($608)|0);
     $610 = ($$748$i|0)==($609|0);
     if ($610) {
      label = 154;
      break;
     }
     $611 = ((($$024372$i)) + 8|0);
     $612 = HEAP32[$611>>2]|0;
     $613 = ($612|0)==(0|0);
     if ($613) {
      break;
     } else {
      $$024372$i = $612;
     }
    }
    if ((label|0) == 154) {
     $614 = ((($$024372$i)) + 4|0);
     $615 = ((($$024372$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($606>>>0)<=($585>>>0);
      $620 = ($$748$i>>>0)>($585>>>0);
      $or$cond51$i = $620 & $619;
      if ($or$cond51$i) {
       $621 = (($608) + ($$723947$i))|0;
       HEAP32[$614>>2] = $621;
       $622 = HEAP32[(149036)>>2]|0;
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($585)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($585) + ($630)|0);
       $632 = (($623) - ($630))|0;
       HEAP32[(149048)>>2] = $631;
       HEAP32[(149036)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($585) + ($623)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(149512)>>2]|0;
       HEAP32[(149052)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(149040)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(149040)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124471$i = (149472);
    while(1) {
     $641 = HEAP32[$$124471$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 162;
      break;
     }
     $643 = ((($$124471$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124471$i = $644;
     }
    }
    if ((label|0) == 162) {
     $646 = ((($$124471$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124471$i>>2] = $$748$i;
      $650 = ((($$124471$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($585|0)==($668|0);
      L238: do {
       if ($676) {
        $677 = HEAP32[(149036)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(149036)>>2] = $678;
        HEAP32[(149048)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(149044)>>2]|0;
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = HEAP32[(149032)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(149032)>>2] = $684;
         HEAP32[(149044)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L246: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[37256]|0;
            $703 = $702 & $701;
            HEAP32[37256] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1263$i$i$ph = $719;$$1265$i$i$ph = $715;
              }
             } else {
              $$1263$i$i$ph = $717;$$1265$i$i$ph = $716;
             }
             $$1263$i$i = $$1263$i$i$ph;$$1265$i$i = $$1265$i$i$ph;
             while(1) {
              $721 = ((($$1263$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if ($723) {
               $724 = ((($$1263$i$i)) + 16|0);
               $725 = HEAP32[$724>>2]|0;
               $726 = ($725|0)==(0|0);
               if ($726) {
                break;
               } else {
                $$1263$i$i$be = $725;$$1265$i$i$be = $724;
               }
              } else {
               $$1263$i$i$be = $722;$$1265$i$i$be = $721;
              }
              $$1263$i$i = $$1263$i$i$be;$$1265$i$i = $$1265$i$i$be;
             }
             HEAP32[$$1265$i$i>>2] = 0;
             $$3$i$i = $$1263$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (149328 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(149028)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(149028)>>2] = $736;
             break L246;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $739 = ($738|0)==($668|0);
             $740 = ((($707)) + 20|0);
             $$sink321 = $739 ? $737 : $740;
             HEAP32[$$sink321>>2] = $$3$i$i;
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L246;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           HEAP32[$742>>2] = $707;
           $743 = ((($668)) + 16|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            HEAP32[$746>>2] = $744;
            $747 = ((($744)) + 24|0);
            HEAP32[$747>>2] = $$3$i$i;
           }
           $748 = ((($743)) + 4|0);
           $749 = HEAP32[$748>>2]|0;
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           HEAP32[$751>>2] = $749;
           $752 = ((($749)) + 24|0);
           HEAP32[$752>>2] = $$3$i$i;
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0259$i$i = $754;
        } else {
         $$0$i$i = $668;$$0259$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = $756 & -2;
        HEAP32[$755>>2] = $757;
        $758 = $$0259$i$i | 1;
        $759 = ((($672)) + 4|0);
        HEAP32[$759>>2] = $758;
        $760 = (($672) + ($$0259$i$i)|0);
        HEAP32[$760>>2] = $$0259$i$i;
        $761 = $$0259$i$i >>> 3;
        $762 = ($$0259$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (149064 + ($763<<2)|0);
         $765 = HEAP32[37256]|0;
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          HEAP32[37256] = $769;
          $$pre$i16$i = ((($764)) + 8|0);
          $$0267$i$i = $764;$$pre$phi$i17$iZ2D = $$pre$i16$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = HEAP32[$770>>2]|0;
          $$0267$i$i = $771;$$pre$phi$i17$iZ2D = $770;
         }
         HEAP32[$$pre$phi$i17$iZ2D>>2] = $672;
         $772 = ((($$0267$i$i)) + 12|0);
         HEAP32[$772>>2] = $672;
         $773 = ((($672)) + 8|0);
         HEAP32[$773>>2] = $$0267$i$i;
         $774 = ((($672)) + 12|0);
         HEAP32[$774>>2] = $764;
         break;
        }
        $775 = $$0259$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0268$i$i = 0;
         } else {
          $777 = ($$0259$i$i>>>0)>(16777215);
          if ($777) {
           $$0268$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0259$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0268$i$i = $799;
         }
        } while(0);
        $800 = (149328 + ($$0268$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        HEAP32[$801>>2] = $$0268$i$i;
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        HEAP32[$803>>2] = 0;
        HEAP32[$802>>2] = 0;
        $804 = HEAP32[(149028)>>2]|0;
        $805 = 1 << $$0268$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         HEAP32[(149028)>>2] = $808;
         HEAP32[$800>>2] = $672;
         $809 = ((($672)) + 24|0);
         HEAP32[$809>>2] = $800;
         $810 = ((($672)) + 12|0);
         HEAP32[$810>>2] = $672;
         $811 = ((($672)) + 8|0);
         HEAP32[$811>>2] = $672;
         break;
        }
        $812 = HEAP32[$800>>2]|0;
        $813 = ((($812)) + 4|0);
        $814 = HEAP32[$813>>2]|0;
        $815 = $814 & -8;
        $816 = ($815|0)==($$0259$i$i|0);
        L291: do {
         if ($816) {
          $$0261$lcssa$i$i = $812;
         } else {
          $817 = ($$0268$i$i|0)==(31);
          $818 = $$0268$i$i >>> 1;
          $819 = (25 - ($818))|0;
          $820 = $817 ? 0 : $819;
          $821 = $$0259$i$i << $820;
          $$02604$i$i = $821;$$02613$i$i = $812;
          while(1) {
           $828 = $$02604$i$i >>> 31;
           $829 = (((($$02613$i$i)) + 16|0) + ($828<<2)|0);
           $824 = HEAP32[$829>>2]|0;
           $830 = ($824|0)==(0|0);
           if ($830) {
            break;
           }
           $822 = $$02604$i$i << 1;
           $823 = ((($824)) + 4|0);
           $825 = HEAP32[$823>>2]|0;
           $826 = $825 & -8;
           $827 = ($826|0)==($$0259$i$i|0);
           if ($827) {
            $$0261$lcssa$i$i = $824;
            break L291;
           } else {
            $$02604$i$i = $822;$$02613$i$i = $824;
           }
          }
          HEAP32[$829>>2] = $672;
          $831 = ((($672)) + 24|0);
          HEAP32[$831>>2] = $$02613$i$i;
          $832 = ((($672)) + 12|0);
          HEAP32[$832>>2] = $672;
          $833 = ((($672)) + 8|0);
          HEAP32[$833>>2] = $672;
          break L238;
         }
        } while(0);
        $834 = ((($$0261$lcssa$i$i)) + 8|0);
        $835 = HEAP32[$834>>2]|0;
        $836 = ((($835)) + 12|0);
        HEAP32[$836>>2] = $672;
        HEAP32[$834>>2] = $672;
        $837 = ((($672)) + 8|0);
        HEAP32[$837>>2] = $835;
        $838 = ((($672)) + 12|0);
        HEAP32[$838>>2] = $$0261$lcssa$i$i;
        $839 = ((($672)) + 24|0);
        HEAP32[$839>>2] = 0;
       }
      } while(0);
      $968 = ((($660)) + 8|0);
      $$0 = $968;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (149472);
    while(1) {
     $840 = HEAP32[$$0$i$i$i>>2]|0;
     $841 = ($840>>>0)>($585>>>0);
     if (!($841)) {
      $842 = ((($$0$i$i$i)) + 4|0);
      $843 = HEAP32[$842>>2]|0;
      $844 = (($840) + ($843)|0);
      $845 = ($844>>>0)>($585>>>0);
      if ($845) {
       break;
      }
     }
     $846 = ((($$0$i$i$i)) + 8|0);
     $847 = HEAP32[$846>>2]|0;
     $$0$i$i$i = $847;
    }
    $848 = ((($844)) + -47|0);
    $849 = ((($848)) + 8|0);
    $850 = $849;
    $851 = $850 & 7;
    $852 = ($851|0)==(0);
    $853 = (0 - ($850))|0;
    $854 = $853 & 7;
    $855 = $852 ? 0 : $854;
    $856 = (($848) + ($855)|0);
    $857 = ((($585)) + 16|0);
    $858 = ($856>>>0)<($857>>>0);
    $859 = $858 ? $585 : $856;
    $860 = ((($859)) + 8|0);
    $861 = ((($859)) + 24|0);
    $862 = (($$723947$i) + -40)|0;
    $863 = ((($$748$i)) + 8|0);
    $864 = $863;
    $865 = $864 & 7;
    $866 = ($865|0)==(0);
    $867 = (0 - ($864))|0;
    $868 = $867 & 7;
    $869 = $866 ? 0 : $868;
    $870 = (($$748$i) + ($869)|0);
    $871 = (($862) - ($869))|0;
    HEAP32[(149048)>>2] = $870;
    HEAP32[(149036)>>2] = $871;
    $872 = $871 | 1;
    $873 = ((($870)) + 4|0);
    HEAP32[$873>>2] = $872;
    $874 = (($$748$i) + ($862)|0);
    $875 = ((($874)) + 4|0);
    HEAP32[$875>>2] = 40;
    $876 = HEAP32[(149512)>>2]|0;
    HEAP32[(149052)>>2] = $876;
    $877 = ((($859)) + 4|0);
    HEAP32[$877>>2] = 27;
    ;HEAP32[$860>>2]=HEAP32[(149472)>>2]|0;HEAP32[$860+4>>2]=HEAP32[(149472)+4>>2]|0;HEAP32[$860+8>>2]=HEAP32[(149472)+8>>2]|0;HEAP32[$860+12>>2]=HEAP32[(149472)+12>>2]|0;
    HEAP32[(149472)>>2] = $$748$i;
    HEAP32[(149476)>>2] = $$723947$i;
    HEAP32[(149484)>>2] = 0;
    HEAP32[(149480)>>2] = $860;
    $879 = $861;
    while(1) {
     $878 = ((($879)) + 4|0);
     HEAP32[$878>>2] = 7;
     $880 = ((($879)) + 8|0);
     $881 = ($880>>>0)<($844>>>0);
     if ($881) {
      $879 = $878;
     } else {
      break;
     }
    }
    $882 = ($859|0)==($585|0);
    if (!($882)) {
     $883 = $859;
     $884 = $585;
     $885 = (($883) - ($884))|0;
     $886 = HEAP32[$877>>2]|0;
     $887 = $886 & -2;
     HEAP32[$877>>2] = $887;
     $888 = $885 | 1;
     $889 = ((($585)) + 4|0);
     HEAP32[$889>>2] = $888;
     HEAP32[$859>>2] = $885;
     $890 = $885 >>> 3;
     $891 = ($885>>>0)<(256);
     if ($891) {
      $892 = $890 << 1;
      $893 = (149064 + ($892<<2)|0);
      $894 = HEAP32[37256]|0;
      $895 = 1 << $890;
      $896 = $894 & $895;
      $897 = ($896|0)==(0);
      if ($897) {
       $898 = $894 | $895;
       HEAP32[37256] = $898;
       $$pre$i$i = ((($893)) + 8|0);
       $$0206$i$i = $893;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $899 = ((($893)) + 8|0);
       $900 = HEAP32[$899>>2]|0;
       $$0206$i$i = $900;$$pre$phi$i$iZ2D = $899;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $585;
      $901 = ((($$0206$i$i)) + 12|0);
      HEAP32[$901>>2] = $585;
      $902 = ((($585)) + 8|0);
      HEAP32[$902>>2] = $$0206$i$i;
      $903 = ((($585)) + 12|0);
      HEAP32[$903>>2] = $893;
      break;
     }
     $904 = $885 >>> 8;
     $905 = ($904|0)==(0);
     if ($905) {
      $$0207$i$i = 0;
     } else {
      $906 = ($885>>>0)>(16777215);
      if ($906) {
       $$0207$i$i = 31;
      } else {
       $907 = (($904) + 1048320)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 8;
       $910 = $904 << $909;
       $911 = (($910) + 520192)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 4;
       $914 = $913 | $909;
       $915 = $910 << $913;
       $916 = (($915) + 245760)|0;
       $917 = $916 >>> 16;
       $918 = $917 & 2;
       $919 = $914 | $918;
       $920 = (14 - ($919))|0;
       $921 = $915 << $918;
       $922 = $921 >>> 15;
       $923 = (($920) + ($922))|0;
       $924 = $923 << 1;
       $925 = (($923) + 7)|0;
       $926 = $885 >>> $925;
       $927 = $926 & 1;
       $928 = $927 | $924;
       $$0207$i$i = $928;
      }
     }
     $929 = (149328 + ($$0207$i$i<<2)|0);
     $930 = ((($585)) + 28|0);
     HEAP32[$930>>2] = $$0207$i$i;
     $931 = ((($585)) + 20|0);
     HEAP32[$931>>2] = 0;
     HEAP32[$857>>2] = 0;
     $932 = HEAP32[(149028)>>2]|0;
     $933 = 1 << $$0207$i$i;
     $934 = $932 & $933;
     $935 = ($934|0)==(0);
     if ($935) {
      $936 = $932 | $933;
      HEAP32[(149028)>>2] = $936;
      HEAP32[$929>>2] = $585;
      $937 = ((($585)) + 24|0);
      HEAP32[$937>>2] = $929;
      $938 = ((($585)) + 12|0);
      HEAP32[$938>>2] = $585;
      $939 = ((($585)) + 8|0);
      HEAP32[$939>>2] = $585;
      break;
     }
     $940 = HEAP32[$929>>2]|0;
     $941 = ((($940)) + 4|0);
     $942 = HEAP32[$941>>2]|0;
     $943 = $942 & -8;
     $944 = ($943|0)==($885|0);
     L325: do {
      if ($944) {
       $$0202$lcssa$i$i = $940;
      } else {
       $945 = ($$0207$i$i|0)==(31);
       $946 = $$0207$i$i >>> 1;
       $947 = (25 - ($946))|0;
       $948 = $945 ? 0 : $947;
       $949 = $885 << $948;
       $$02014$i$i = $949;$$02023$i$i = $940;
       while(1) {
        $956 = $$02014$i$i >>> 31;
        $957 = (((($$02023$i$i)) + 16|0) + ($956<<2)|0);
        $952 = HEAP32[$957>>2]|0;
        $958 = ($952|0)==(0|0);
        if ($958) {
         break;
        }
        $950 = $$02014$i$i << 1;
        $951 = ((($952)) + 4|0);
        $953 = HEAP32[$951>>2]|0;
        $954 = $953 & -8;
        $955 = ($954|0)==($885|0);
        if ($955) {
         $$0202$lcssa$i$i = $952;
         break L325;
        } else {
         $$02014$i$i = $950;$$02023$i$i = $952;
        }
       }
       HEAP32[$957>>2] = $585;
       $959 = ((($585)) + 24|0);
       HEAP32[$959>>2] = $$02023$i$i;
       $960 = ((($585)) + 12|0);
       HEAP32[$960>>2] = $585;
       $961 = ((($585)) + 8|0);
       HEAP32[$961>>2] = $585;
       break L215;
      }
     } while(0);
     $962 = ((($$0202$lcssa$i$i)) + 8|0);
     $963 = HEAP32[$962>>2]|0;
     $964 = ((($963)) + 12|0);
     HEAP32[$964>>2] = $585;
     HEAP32[$962>>2] = $585;
     $965 = ((($585)) + 8|0);
     HEAP32[$965>>2] = $963;
     $966 = ((($585)) + 12|0);
     HEAP32[$966>>2] = $$0202$lcssa$i$i;
     $967 = ((($585)) + 24|0);
     HEAP32[$967>>2] = 0;
    }
   }
  } while(0);
  $969 = HEAP32[(149036)>>2]|0;
  $970 = ($969>>>0)>($$0192>>>0);
  if ($970) {
   $971 = (($969) - ($$0192))|0;
   HEAP32[(149036)>>2] = $971;
   $972 = HEAP32[(149048)>>2]|0;
   $973 = (($972) + ($$0192)|0);
   HEAP32[(149048)>>2] = $973;
   $974 = $971 | 1;
   $975 = ((($973)) + 4|0);
   HEAP32[$975>>2] = $974;
   $976 = $$0192 | 3;
   $977 = ((($972)) + 4|0);
   HEAP32[$977>>2] = $976;
   $978 = ((($972)) + 8|0);
   $$0 = $978;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $979 = (___errno_location()|0);
 HEAP32[$979>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0194$i = 0, $$0194$in$i = 0, $$0346381 = 0, $$0347$lcssa = 0, $$0347380 = 0, $$0359 = 0, $$0366 = 0, $$1 = 0, $$1345 = 0, $$1350 = 0, $$1350$be = 0, $$1350$ph = 0, $$1353 = 0, $$1353$be = 0, $$1353$ph = 0, $$1361 = 0, $$1361$be = 0, $$1361$ph = 0, $$1365 = 0, $$1365$be = 0;
 var $$1365$ph = 0, $$2 = 0, $$3 = 0, $$3363 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink395 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond371 = 0, $cond372 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(149040)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(149044)>>2]|0;
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
    $83 = (($14) + ($15)|0);
    $84 = ((($14)) + 4|0);
    $85 = $15 | 1;
    $86 = $80 & -2;
    HEAP32[(149032)>>2] = $15;
    HEAP32[$79>>2] = $86;
    HEAP32[$84>>2] = $85;
    HEAP32[$83>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[37256]|0;
     $29 = $28 & $27;
     HEAP32[37256] = $29;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1350$ph = $45;$$1353$ph = $41;
      }
     } else {
      $$1350$ph = $43;$$1353$ph = $42;
     }
     $$1350 = $$1350$ph;$$1353 = $$1353$ph;
     while(1) {
      $47 = ((($$1350)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if ($49) {
       $50 = ((($$1350)) + 16|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = ($51|0)==(0|0);
       if ($52) {
        break;
       } else {
        $$1350$be = $51;$$1353$be = $50;
       }
      } else {
       $$1350$be = $48;$$1353$be = $47;
      }
      $$1350 = $$1350$be;$$1353 = $$1353$be;
     }
     HEAP32[$$1353>>2] = 0;
     $$3 = $$1350;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1345 = $15;$88 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (149328 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($57|0)==($14|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond371 = ($$3|0)==(0|0);
     if ($cond371) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(149028)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(149028)>>2] = $62;
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)==($14|0);
     $66 = ((($33)) + 20|0);
     $$sink = $65 ? $63 : $66;
     HEAP32[$$sink>>2] = $$3;
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    HEAP32[$68>>2] = $33;
    $69 = ((($14)) + 16|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
    }
    $74 = ((($69)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1345 = $15;$88 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     HEAP32[$77>>2] = $75;
     $78 = ((($75)) + 24|0);
     HEAP32[$78>>2] = $$3;
     $$1 = $14;$$1345 = $15;$88 = $14;
    }
   }
  } else {
   $$1 = $2;$$1345 = $6;$88 = $2;
  }
 } while(0);
 $87 = ($88>>>0)<($7>>>0);
 if (!($87)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = HEAP32[(149048)>>2]|0;
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = HEAP32[(149036)>>2]|0;
   $98 = (($97) + ($$1345))|0;
   HEAP32[(149036)>>2] = $98;
   HEAP32[(149048)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = HEAP32[(149044)>>2]|0;
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   HEAP32[(149044)>>2] = 0;
   HEAP32[(149032)>>2] = 0;
   return;
  }
  $103 = HEAP32[(149044)>>2]|0;
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = HEAP32[(149032)>>2]|0;
   $106 = (($105) + ($$1345))|0;
   HEAP32[(149032)>>2] = $106;
   HEAP32[(149044)>>2] = $88;
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   HEAP32[$108>>2] = $107;
   $109 = (($88) + ($106)|0);
   HEAP32[$109>>2] = $106;
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1345))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($7)) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = HEAP32[37256]|0;
     $122 = $121 & $120;
     HEAP32[37256] = $122;
     break;
    } else {
     $123 = ((($115)) + 12|0);
     HEAP32[$123>>2] = $117;
     $124 = ((($117)) + 8|0);
     HEAP32[$124>>2] = $115;
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($7)) + 12|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = HEAP32[$135>>2]|0;
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = HEAP32[$134>>2]|0;
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3363 = 0;
        break;
       } else {
        $$1361$ph = $138;$$1365$ph = $134;
       }
      } else {
       $$1361$ph = $136;$$1365$ph = $135;
      }
      $$1361 = $$1361$ph;$$1365 = $$1365$ph;
      while(1) {
       $140 = ((($$1361)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $143 = ((($$1361)) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($144|0)==(0|0);
        if ($145) {
         break;
        } else {
         $$1361$be = $144;$$1365$be = $143;
        }
       } else {
        $$1361$be = $141;$$1365$be = $140;
       }
       $$1361 = $$1361$be;$$1365 = $$1365$be;
      }
      HEAP32[$$1365>>2] = 0;
      $$3363 = $$1361;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($131)) + 12|0);
      HEAP32[$132>>2] = $128;
      $133 = ((($128)) + 8|0);
      HEAP32[$133>>2] = $131;
      $$3363 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (149328 + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($7|0);
     if ($151) {
      HEAP32[$149>>2] = $$3363;
      $cond372 = ($$3363|0)==(0|0);
      if ($cond372) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = HEAP32[(149028)>>2]|0;
       $155 = $154 & $153;
       HEAP32[(149028)>>2] = $155;
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($157|0)==($7|0);
      $159 = ((($126)) + 20|0);
      $$sink395 = $158 ? $156 : $159;
      HEAP32[$$sink395>>2] = $$3363;
      $160 = ($$3363|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3363)) + 24|0);
     HEAP32[$161>>2] = $126;
     $162 = ((($7)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3363)) + 16|0);
      HEAP32[$165>>2] = $163;
      $166 = ((($163)) + 24|0);
      HEAP32[$166>>2] = $$3363;
     }
     $167 = ((($162)) + 4|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3363)) + 20|0);
      HEAP32[$170>>2] = $168;
      $171 = ((($168)) + 24|0);
      HEAP32[$171>>2] = $$3363;
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  HEAP32[$173>>2] = $172;
  $174 = (($88) + ($111)|0);
  HEAP32[$174>>2] = $111;
  $175 = HEAP32[(149044)>>2]|0;
  $176 = ($$1|0)==($175|0);
  if ($176) {
   HEAP32[(149032)>>2] = $111;
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  HEAP32[$89>>2] = $177;
  $178 = $$1345 | 1;
  $179 = ((($$1)) + 4|0);
  HEAP32[$179>>2] = $178;
  $180 = (($88) + ($$1345)|0);
  HEAP32[$180>>2] = $$1345;
  $$2 = $$1345;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (149064 + ($183<<2)|0);
  $185 = HEAP32[37256]|0;
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   HEAP32[37256] = $189;
   $$pre = ((($184)) + 8|0);
   $$0366 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $$0366 = $191;$$pre$phiZ2D = $190;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $192 = ((($$0366)) + 12|0);
  HEAP32[$192>>2] = $$1;
  $193 = ((($$1)) + 8|0);
  HEAP32[$193>>2] = $$0366;
  $194 = ((($$1)) + 12|0);
  HEAP32[$194>>2] = $184;
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0359 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0359 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0359 = $219;
  }
 }
 $220 = (149328 + ($$0359<<2)|0);
 $221 = ((($$1)) + 28|0);
 HEAP32[$221>>2] = $$0359;
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 HEAP32[$223>>2] = 0;
 HEAP32[$222>>2] = 0;
 $224 = HEAP32[(149028)>>2]|0;
 $225 = 1 << $$0359;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 L112: do {
  if ($227) {
   $228 = $224 | $225;
   HEAP32[(149028)>>2] = $228;
   HEAP32[$220>>2] = $$1;
   $229 = ((($$1)) + 24|0);
   HEAP32[$229>>2] = $220;
   $230 = ((($$1)) + 12|0);
   HEAP32[$230>>2] = $$1;
   $231 = ((($$1)) + 8|0);
   HEAP32[$231>>2] = $$1;
  } else {
   $232 = HEAP32[$220>>2]|0;
   $233 = ((($232)) + 4|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = $234 & -8;
   $236 = ($235|0)==($$2|0);
   L115: do {
    if ($236) {
     $$0347$lcssa = $232;
    } else {
     $237 = ($$0359|0)==(31);
     $238 = $$0359 >>> 1;
     $239 = (25 - ($238))|0;
     $240 = $237 ? 0 : $239;
     $241 = $$2 << $240;
     $$0346381 = $241;$$0347380 = $232;
     while(1) {
      $248 = $$0346381 >>> 31;
      $249 = (((($$0347380)) + 16|0) + ($248<<2)|0);
      $244 = HEAP32[$249>>2]|0;
      $250 = ($244|0)==(0|0);
      if ($250) {
       break;
      }
      $242 = $$0346381 << 1;
      $243 = ((($244)) + 4|0);
      $245 = HEAP32[$243>>2]|0;
      $246 = $245 & -8;
      $247 = ($246|0)==($$2|0);
      if ($247) {
       $$0347$lcssa = $244;
       break L115;
      } else {
       $$0346381 = $242;$$0347380 = $244;
      }
     }
     HEAP32[$249>>2] = $$1;
     $251 = ((($$1)) + 24|0);
     HEAP32[$251>>2] = $$0347380;
     $252 = ((($$1)) + 12|0);
     HEAP32[$252>>2] = $$1;
     $253 = ((($$1)) + 8|0);
     HEAP32[$253>>2] = $$1;
     break L112;
    }
   } while(0);
   $254 = ((($$0347$lcssa)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = ((($255)) + 12|0);
   HEAP32[$256>>2] = $$1;
   HEAP32[$254>>2] = $$1;
   $257 = ((($$1)) + 8|0);
   HEAP32[$257>>2] = $255;
   $258 = ((($$1)) + 12|0);
   HEAP32[$258>>2] = $$0347$lcssa;
   $259 = ((($$1)) + 24|0);
   HEAP32[$259>>2] = 0;
  }
 } while(0);
 $260 = HEAP32[(149056)>>2]|0;
 $261 = (($260) + -1)|0;
 HEAP32[(149056)>>2] = $261;
 $262 = ($261|0)==(0);
 if (!($262)) {
  return;
 }
 $$0194$in$i = (149480);
 while(1) {
  $$0194$i = HEAP32[$$0194$in$i>>2]|0;
  $263 = ($$0194$i|0)==(0|0);
  $264 = ((($$0194$i)) + 8|0);
  if ($263) {
   break;
  } else {
   $$0194$in$i = $264;
  }
 }
 HEAP32[(149056)>>2] = -1;
 return;
}
function _calloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = Math_imul($1, $0)|0;
  $4 = $1 | $0;
  $5 = ($4>>>0)>(65535);
  if ($5) {
   $6 = (($3>>>0) / ($0>>>0))&-1;
   $7 = ($6|0)==($1|0);
   $spec$select = $7 ? $3 : -1;
   $$0 = $spec$select;
  } else {
   $$0 = $3;
  }
 }
 $8 = (_malloc($$0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  return ($8|0);
 }
 $10 = ((($8)) + -4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 3;
 $13 = ($12|0)==(0);
 if ($13) {
  return ($8|0);
 }
 (_memset(($8|0),0,($$0|0))|0);
 return ($8|0);
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1245 = 0, $$1245$be = 0, $$1245$ph = 0, $$1248 = 0, $$1248$be = 0, $$1248$ph = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $storemerge = 0, $storemerge1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = HEAP32[(149504)>>2]|0;
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  HEAP32[$2>>2] = $21;
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  HEAP32[$22>>2] = $23;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $25 | 1;
  HEAP32[$24>>2] = $26;
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $27 = HEAP32[(149048)>>2]|0;
 $28 = ($27|0)==($5|0);
 if ($28) {
  $29 = HEAP32[(149036)>>2]|0;
  $30 = (($29) + ($4))|0;
  $31 = ($30>>>0)>($1>>>0);
  $32 = (($30) - ($1))|0;
  $33 = (($0) + ($1)|0);
  if (!($31)) {
   $$2 = 0;
   return ($$2|0);
  }
  $34 = $32 | 1;
  $35 = ((($33)) + 4|0);
  $36 = $3 & 1;
  $37 = $36 | $1;
  $38 = $37 | 2;
  HEAP32[$2>>2] = $38;
  HEAP32[$35>>2] = $34;
  HEAP32[(149048)>>2] = $33;
  HEAP32[(149036)>>2] = $32;
  $$2 = $0;
  return ($$2|0);
 }
 $39 = HEAP32[(149044)>>2]|0;
 $40 = ($39|0)==($5|0);
 if ($40) {
  $41 = HEAP32[(149032)>>2]|0;
  $42 = (($41) + ($4))|0;
  $43 = ($42>>>0)<($1>>>0);
  if ($43) {
   $$2 = 0;
   return ($$2|0);
  }
  $44 = (($42) - ($1))|0;
  $45 = ($44>>>0)>(15);
  if ($45) {
   $46 = (($0) + ($1)|0);
   $47 = (($0) + ($42)|0);
   $48 = $3 & 1;
   $49 = $48 | $1;
   $50 = $49 | 2;
   HEAP32[$2>>2] = $50;
   $51 = ((($46)) + 4|0);
   $52 = $44 | 1;
   HEAP32[$51>>2] = $52;
   HEAP32[$47>>2] = $44;
   $53 = ((($47)) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $54 & -2;
   HEAP32[$53>>2] = $55;
   $storemerge = $46;$storemerge1 = $44;
  } else {
   $56 = $3 & 1;
   $57 = $56 | $42;
   $58 = $57 | 2;
   HEAP32[$2>>2] = $58;
   $59 = (($0) + ($42)|0);
   $60 = ((($59)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 | 1;
   HEAP32[$60>>2] = $62;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(149032)>>2] = $storemerge1;
  HEAP32[(149044)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($5)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = HEAP32[37256]|0;
    $81 = $80 & $79;
    HEAP32[37256] = $81;
    break;
   } else {
    $82 = ((($74)) + 12|0);
    HEAP32[$82>>2] = $76;
    $83 = ((($76)) + 8|0);
    HEAP32[$83>>2] = $74;
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($5)) + 12|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = HEAP32[$93>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1245$ph = $97;$$1248$ph = $93;
      }
     } else {
      $$1245$ph = $95;$$1248$ph = $94;
     }
     $$1245 = $$1245$ph;$$1248 = $$1248$ph;
     while(1) {
      $99 = ((($$1245)) + 20|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($100|0)==(0|0);
      if ($101) {
       $102 = ((($$1245)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($103|0)==(0|0);
       if ($104) {
        break;
       } else {
        $$1245$be = $103;$$1248$be = $102;
       }
      } else {
       $$1245$be = $100;$$1248$be = $99;
      }
      $$1245 = $$1245$be;$$1248 = $$1248$be;
     }
     HEAP32[$$1248>>2] = 0;
     $$3 = $$1245;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($90)) + 12|0);
     HEAP32[$91>>2] = $87;
     $92 = ((($87)) + 8|0);
     HEAP32[$92>>2] = $90;
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (149328 + ($107<<2)|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ($109|0)==($5|0);
    if ($110) {
     HEAP32[$108>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = HEAP32[(149028)>>2]|0;
      $114 = $113 & $112;
      HEAP32[(149028)>>2] = $114;
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==($5|0);
     $118 = ((($85)) + 20|0);
     $$sink = $117 ? $115 : $118;
     HEAP32[$$sink>>2] = $$3;
     $119 = ($$3|0)==(0|0);
     if ($119) {
      break;
     }
    }
    $120 = ((($$3)) + 24|0);
    HEAP32[$120>>2] = $85;
    $121 = ((($5)) + 16|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = ($122|0)==(0|0);
    if (!($123)) {
     $124 = ((($$3)) + 16|0);
     HEAP32[$124>>2] = $122;
     $125 = ((($122)) + 24|0);
     HEAP32[$125>>2] = $$3;
    }
    $126 = ((($121)) + 4|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($127|0)==(0|0);
    if (!($128)) {
     $129 = ((($$3)) + 20|0);
     HEAP32[$129>>2] = $127;
     $130 = ((($127)) + 24|0);
     HEAP32[$130>>2] = $$3;
    }
   }
  }
 } while(0);
 $131 = ($70>>>0)<(16);
 if ($131) {
  $132 = $3 & 1;
  $133 = $132 | $68;
  $134 = $133 | 2;
  HEAP32[$2>>2] = $134;
  $135 = (($0) + ($68)|0);
  $136 = ((($135)) + 4|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = $137 | 1;
  HEAP32[$136>>2] = $138;
  $$2 = $0;
  return ($$2|0);
 } else {
  $139 = (($0) + ($1)|0);
  $140 = $3 & 1;
  $141 = $140 | $1;
  $142 = $141 | 2;
  HEAP32[$2>>2] = $142;
  $143 = ((($139)) + 4|0);
  $144 = $70 | 3;
  HEAP32[$143>>2] = $144;
  $145 = (($0) + ($68)|0);
  $146 = ((($145)) + 4|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = $147 | 1;
  HEAP32[$146>>2] = $148;
  _dispose_chunk($139,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03649 = 0, $$0365$lcssa = 0, $$03658 = 0, $$0376 = 0, $$0383 = 0, $$1 = 0, $$1363 = 0, $$1371 = 0, $$1371$be = 0, $$1371$ph = 0, $$1374 = 0, $$1374$be = 0, $$1374$ph = 0, $$1378 = 0, $$1378$be = 0, $$1378$ph = 0, $$1382 = 0, $$1382$be = 0, $$1382$ph = 0, $$2 = 0;
 var $$3 = 0, $$3380 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink24 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(149044)>>2]|0;
   $14 = ($13|0)==($11|0);
   if ($14) {
    $75 = ((($2)) + 4|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = $76 & 3;
    $78 = ($77|0)==(3);
    if (!($78)) {
     $$1 = $11;$$1363 = $12;
     break;
    }
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $76 & -2;
    HEAP32[(149032)>>2] = $12;
    HEAP32[$75>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$2>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[37256]|0;
     $25 = $24 & $23;
     HEAP32[37256] = $25;
     $$1 = $11;$$1363 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1363 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1371$ph = $41;$$1374$ph = $37;
      }
     } else {
      $$1371$ph = $39;$$1374$ph = $38;
     }
     $$1371 = $$1371$ph;$$1374 = $$1374$ph;
     while(1) {
      $43 = ((($$1371)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if ($45) {
       $46 = ((($$1371)) + 16|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        break;
       } else {
        $$1371$be = $47;$$1374$be = $46;
       }
      } else {
       $$1371$be = $44;$$1374$be = $43;
      }
      $$1371 = $$1371$be;$$1374 = $$1374$be;
     }
     HEAP32[$$1374>>2] = 0;
     $$3 = $$1371;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1363 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (149328 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==($11|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(149028)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(149028)>>2] = $58;
      $$1 = $11;$$1363 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ($60|0)==($11|0);
     $62 = ((($29)) + 20|0);
     $$sink = $61 ? $59 : $62;
     HEAP32[$$sink>>2] = $$3;
     $63 = ($$3|0)==(0|0);
     if ($63) {
      $$1 = $11;$$1363 = $12;
      break;
     }
    }
    $64 = ((($$3)) + 24|0);
    HEAP32[$64>>2] = $29;
    $65 = ((($11)) + 16|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = ($66|0)==(0|0);
    if (!($67)) {
     $68 = ((($$3)) + 16|0);
     HEAP32[$68>>2] = $66;
     $69 = ((($66)) + 24|0);
     HEAP32[$69>>2] = $$3;
    }
    $70 = ((($65)) + 4|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ($71|0)==(0|0);
    if ($72) {
     $$1 = $11;$$1363 = $12;
    } else {
     $73 = ((($$3)) + 20|0);
     HEAP32[$73>>2] = $71;
     $74 = ((($71)) + 24|0);
     HEAP32[$74>>2] = $$3;
     $$1 = $11;$$1363 = $12;
    }
   }
  } else {
   $$1 = $0;$$1363 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(149048)>>2]|0;
  $87 = ($86|0)==($2|0);
  if ($87) {
   $88 = HEAP32[(149036)>>2]|0;
   $89 = (($88) + ($$1363))|0;
   HEAP32[(149036)>>2] = $89;
   HEAP32[(149048)>>2] = $$1;
   $90 = $89 | 1;
   $91 = ((($$1)) + 4|0);
   HEAP32[$91>>2] = $90;
   $92 = HEAP32[(149044)>>2]|0;
   $93 = ($$1|0)==($92|0);
   if (!($93)) {
    return;
   }
   HEAP32[(149044)>>2] = 0;
   HEAP32[(149032)>>2] = 0;
   return;
  }
  $94 = HEAP32[(149044)>>2]|0;
  $95 = ($94|0)==($2|0);
  if ($95) {
   $96 = HEAP32[(149032)>>2]|0;
   $97 = (($96) + ($$1363))|0;
   HEAP32[(149032)>>2] = $97;
   HEAP32[(149044)>>2] = $$1;
   $98 = $97 | 1;
   $99 = ((($$1)) + 4|0);
   HEAP32[$99>>2] = $98;
   $100 = (($$1) + ($97)|0);
   HEAP32[$100>>2] = $97;
   return;
  }
  $101 = $83 & -8;
  $102 = (($101) + ($$1363))|0;
  $103 = $83 >>> 3;
  $104 = ($83>>>0)<(256);
  do {
   if ($104) {
    $105 = ((($2)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($2)) + 12|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($108|0)==($106|0);
    if ($109) {
     $110 = 1 << $103;
     $111 = $110 ^ -1;
     $112 = HEAP32[37256]|0;
     $113 = $112 & $111;
     HEAP32[37256] = $113;
     break;
    } else {
     $114 = ((($106)) + 12|0);
     HEAP32[$114>>2] = $108;
     $115 = ((($108)) + 8|0);
     HEAP32[$115>>2] = $106;
     break;
    }
   } else {
    $116 = ((($2)) + 24|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ((($2)) + 12|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)==($2|0);
    do {
     if ($120) {
      $125 = ((($2)) + 16|0);
      $126 = ((($125)) + 4|0);
      $127 = HEAP32[$126>>2]|0;
      $128 = ($127|0)==(0|0);
      if ($128) {
       $129 = HEAP32[$125>>2]|0;
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$3380 = 0;
        break;
       } else {
        $$1378$ph = $129;$$1382$ph = $125;
       }
      } else {
       $$1378$ph = $127;$$1382$ph = $126;
      }
      $$1378 = $$1378$ph;$$1382 = $$1382$ph;
      while(1) {
       $131 = ((($$1378)) + 20|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = ($132|0)==(0|0);
       if ($133) {
        $134 = ((($$1378)) + 16|0);
        $135 = HEAP32[$134>>2]|0;
        $136 = ($135|0)==(0|0);
        if ($136) {
         break;
        } else {
         $$1378$be = $135;$$1382$be = $134;
        }
       } else {
        $$1378$be = $132;$$1382$be = $131;
       }
       $$1378 = $$1378$be;$$1382 = $$1382$be;
      }
      HEAP32[$$1382>>2] = 0;
      $$3380 = $$1378;
     } else {
      $121 = ((($2)) + 8|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = ((($122)) + 12|0);
      HEAP32[$123>>2] = $119;
      $124 = ((($119)) + 8|0);
      HEAP32[$124>>2] = $122;
      $$3380 = $119;
     }
    } while(0);
    $137 = ($117|0)==(0|0);
    if (!($137)) {
     $138 = ((($2)) + 28|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (149328 + ($139<<2)|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($141|0)==($2|0);
     if ($142) {
      HEAP32[$140>>2] = $$3380;
      $cond4 = ($$3380|0)==(0|0);
      if ($cond4) {
       $143 = 1 << $139;
       $144 = $143 ^ -1;
       $145 = HEAP32[(149028)>>2]|0;
       $146 = $145 & $144;
       HEAP32[(149028)>>2] = $146;
       break;
      }
     } else {
      $147 = ((($117)) + 16|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==($2|0);
      $150 = ((($117)) + 20|0);
      $$sink24 = $149 ? $147 : $150;
      HEAP32[$$sink24>>2] = $$3380;
      $151 = ($$3380|0)==(0|0);
      if ($151) {
       break;
      }
     }
     $152 = ((($$3380)) + 24|0);
     HEAP32[$152>>2] = $117;
     $153 = ((($2)) + 16|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ($154|0)==(0|0);
     if (!($155)) {
      $156 = ((($$3380)) + 16|0);
      HEAP32[$156>>2] = $154;
      $157 = ((($154)) + 24|0);
      HEAP32[$157>>2] = $$3380;
     }
     $158 = ((($153)) + 4|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==(0|0);
     if (!($160)) {
      $161 = ((($$3380)) + 20|0);
      HEAP32[$161>>2] = $159;
      $162 = ((($159)) + 24|0);
      HEAP32[$162>>2] = $$3380;
     }
    }
   }
  } while(0);
  $163 = $102 | 1;
  $164 = ((($$1)) + 4|0);
  HEAP32[$164>>2] = $163;
  $165 = (($$1) + ($102)|0);
  HEAP32[$165>>2] = $102;
  $166 = HEAP32[(149044)>>2]|0;
  $167 = ($$1|0)==($166|0);
  if ($167) {
   HEAP32[(149032)>>2] = $102;
   return;
  } else {
   $$2 = $102;
  }
 } else {
  $168 = $83 & -2;
  HEAP32[$82>>2] = $168;
  $169 = $$1363 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($$1) + ($$1363)|0);
  HEAP32[$171>>2] = $$1363;
  $$2 = $$1363;
 }
 $172 = $$2 >>> 3;
 $173 = ($$2>>>0)<(256);
 if ($173) {
  $174 = $172 << 1;
  $175 = (149064 + ($174<<2)|0);
  $176 = HEAP32[37256]|0;
  $177 = 1 << $172;
  $178 = $176 & $177;
  $179 = ($178|0)==(0);
  if ($179) {
   $180 = $176 | $177;
   HEAP32[37256] = $180;
   $$pre = ((($175)) + 8|0);
   $$0383 = $175;$$pre$phiZ2D = $$pre;
  } else {
   $181 = ((($175)) + 8|0);
   $182 = HEAP32[$181>>2]|0;
   $$0383 = $182;$$pre$phiZ2D = $181;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $183 = ((($$0383)) + 12|0);
  HEAP32[$183>>2] = $$1;
  $184 = ((($$1)) + 8|0);
  HEAP32[$184>>2] = $$0383;
  $185 = ((($$1)) + 12|0);
  HEAP32[$185>>2] = $175;
  return;
 }
 $186 = $$2 >>> 8;
 $187 = ($186|0)==(0);
 if ($187) {
  $$0376 = 0;
 } else {
  $188 = ($$2>>>0)>(16777215);
  if ($188) {
   $$0376 = 31;
  } else {
   $189 = (($186) + 1048320)|0;
   $190 = $189 >>> 16;
   $191 = $190 & 8;
   $192 = $186 << $191;
   $193 = (($192) + 520192)|0;
   $194 = $193 >>> 16;
   $195 = $194 & 4;
   $196 = $195 | $191;
   $197 = $192 << $195;
   $198 = (($197) + 245760)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 2;
   $201 = $196 | $200;
   $202 = (14 - ($201))|0;
   $203 = $197 << $200;
   $204 = $203 >>> 15;
   $205 = (($202) + ($204))|0;
   $206 = $205 << 1;
   $207 = (($205) + 7)|0;
   $208 = $$2 >>> $207;
   $209 = $208 & 1;
   $210 = $209 | $206;
   $$0376 = $210;
  }
 }
 $211 = (149328 + ($$0376<<2)|0);
 $212 = ((($$1)) + 28|0);
 HEAP32[$212>>2] = $$0376;
 $213 = ((($$1)) + 16|0);
 $214 = ((($$1)) + 20|0);
 HEAP32[$214>>2] = 0;
 HEAP32[$213>>2] = 0;
 $215 = HEAP32[(149028)>>2]|0;
 $216 = 1 << $$0376;
 $217 = $215 & $216;
 $218 = ($217|0)==(0);
 if ($218) {
  $219 = $215 | $216;
  HEAP32[(149028)>>2] = $219;
  HEAP32[$211>>2] = $$1;
  $220 = ((($$1)) + 24|0);
  HEAP32[$220>>2] = $211;
  $221 = ((($$1)) + 12|0);
  HEAP32[$221>>2] = $$1;
  $222 = ((($$1)) + 8|0);
  HEAP32[$222>>2] = $$1;
  return;
 }
 $223 = HEAP32[$211>>2]|0;
 $224 = ((($223)) + 4|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = $225 & -8;
 $227 = ($226|0)==($$2|0);
 L104: do {
  if ($227) {
   $$0365$lcssa = $223;
  } else {
   $228 = ($$0376|0)==(31);
   $229 = $$0376 >>> 1;
   $230 = (25 - ($229))|0;
   $231 = $228 ? 0 : $230;
   $232 = $$2 << $231;
   $$03649 = $232;$$03658 = $223;
   while(1) {
    $239 = $$03649 >>> 31;
    $240 = (((($$03658)) + 16|0) + ($239<<2)|0);
    $235 = HEAP32[$240>>2]|0;
    $241 = ($235|0)==(0|0);
    if ($241) {
     break;
    }
    $233 = $$03649 << 1;
    $234 = ((($235)) + 4|0);
    $236 = HEAP32[$234>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     $$0365$lcssa = $235;
     break L104;
    } else {
     $$03649 = $233;$$03658 = $235;
    }
   }
   HEAP32[$240>>2] = $$1;
   $242 = ((($$1)) + 24|0);
   HEAP32[$242>>2] = $$03658;
   $243 = ((($$1)) + 12|0);
   HEAP32[$243>>2] = $$1;
   $244 = ((($$1)) + 8|0);
   HEAP32[$244>>2] = $$1;
   return;
  }
 } while(0);
 $245 = ((($$0365$lcssa)) + 8|0);
 $246 = HEAP32[$245>>2]|0;
 $247 = ((($246)) + 12|0);
 HEAP32[$247>>2] = $$1;
 HEAP32[$245>>2] = $$1;
 $248 = ((($$1)) + 8|0);
 HEAP32[$248>>2] = $246;
 $249 = ((($$1)) + 12|0);
 HEAP32[$249>>2] = $$0365$lcssa;
 $250 = ((($$1)) + 24|0);
 HEAP32[$250>>2] = 0;
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_734($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$27 = $17;
   while(1) {
    $26 = ($27|0)<(0);
    if ($26) {
     break;
    }
    $35 = (($$04855) - ($27))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($27>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($27) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$27 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (149584|0);
}
function _dummy_734($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $1;
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 HEAP32[$4>>2] = $9;
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$10>>2] = $12;
 $13 = ((($3)) + 12|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($0)) + 60|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 HEAP32[$vararg_buffer>>2] = $15;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $16;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = HEAP32[$0>>2]|0;
  $23 = $22 | $21;
  HEAP32[$0>>2] = $23;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4>>2]|0;
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = HEAP32[$11>>2]|0;
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $27;
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   HEAP32[$30>>2] = $29;
   $31 = HEAP32[$5>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    HEAP32[$28>>2] = $33;
    $34 = HEAP8[$$cast>>0]|0;
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    HEAP8[$36>>0] = $34;
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 248;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _tolower($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isupper($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 | 32;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _isupper($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -65)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _strtox_764($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $5 = sp;
 HEAP32[$5>>2] = 0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($5)) + 44|0);
 HEAP32[$7>>2] = $0;
 $8 = ($0|0)<(0|0);
 $9 = ((($0)) + 2147483647|0);
 $$sink = $8 ? (-1) : $9;
 $10 = ((($5)) + 8|0);
 HEAP32[$10>>2] = $$sink;
 $11 = ((($5)) + 76|0);
 HEAP32[$11>>2] = -1;
 ___shlim($5,0);
 $12 = (___intscan($5,$2,1,$3,$4)|0);
 $13 = tempRet0;
 $14 = ($1|0)==(0|0);
 if (!($14)) {
  $15 = ((($5)) + 108|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$6>>2]|0;
  $18 = HEAP32[$10>>2]|0;
  $19 = (($17) + ($16))|0;
  $20 = (($19) - ($18))|0;
  $21 = (($0) + ($20)|0);
  HEAP32[$1>>2] = $21;
 }
 tempRet0 = ($13);
 STACKTOP = sp;return ($12|0);
}
function ___shlim($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ((($0)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1|0)!=(0);
 $10 = ($7|0)>($1|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = $6;
  $12 = (($11) + ($1)|0);
  $13 = ((($0)) + 100|0);
  HEAP32[$13>>2] = $12;
 } else {
  $14 = ((($0)) + 100|0);
  HEAP32[$14>>2] = $4;
 }
 return;
}
function ___intscan($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0154215 = 0, $$0157 = 0, $$0159 = 0, $$1155184 = 0, $$1158 = 0, $$1160 = 0, $$1160170 = 0, $$1165 = 0, $$1165168 = 0, $$1165169 = 0, $$2156202 = 0, $$3162208 = 0, $$4163$lcssa = 0, $$6$lcssa = 0, $$7190 = 0, $$8 = 0, $$pre$phi237Z2D = 0, $$pre$phi239Z2D = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond179 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select166 = 0, $spec$select167 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($1>>>0)>(36);
 L1: do {
  if ($5) {
   $6 = (___errno_location()|0);
   HEAP32[$6>>2] = 22;
   $291 = 0;$292 = 0;
  } else {
   $7 = ((($0)) + 4|0);
   $8 = ((($0)) + 100|0);
   while(1) {
    $9 = HEAP32[$7>>2]|0;
    $10 = HEAP32[$8>>2]|0;
    $11 = ($9>>>0)<($10>>>0);
    if ($11) {
     $12 = ((($9)) + 1|0);
     HEAP32[$7>>2] = $12;
     $13 = HEAP8[$9>>0]|0;
     $14 = $13&255;
     $16 = $14;
    } else {
     $15 = (___shgetc($0)|0);
     $16 = $15;
    }
    $17 = (_isspace($16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     break;
    }
   }
   L11: do {
    switch ($16|0) {
    case 43: case 45:  {
     $19 = ($16|0)==(45);
     $20 = $19 << 31 >> 31;
     $21 = HEAP32[$7>>2]|0;
     $22 = HEAP32[$8>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$7>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $$0157 = $20;$$0159 = $26;
      break L11;
     } else {
      $27 = (___shgetc($0)|0);
      $$0157 = $20;$$0159 = $27;
      break L11;
     }
     break;
    }
    default: {
     $$0157 = 0;$$0159 = $16;
    }
    }
   } while(0);
   $28 = ($1|0)==(0);
   $29 = $1 | 16;
   $30 = ($29|0)==(16);
   $31 = ($$0159|0)==(48);
   $or$cond5 = $30 & $31;
   do {
    if ($or$cond5) {
     $32 = HEAP32[$7>>2]|0;
     $33 = HEAP32[$8>>2]|0;
     $34 = ($32>>>0)<($33>>>0);
     if ($34) {
      $35 = ((($32)) + 1|0);
      HEAP32[$7>>2] = $35;
      $36 = HEAP8[$32>>0]|0;
      $37 = $36&255;
      $40 = $37;
     } else {
      $38 = (___shgetc($0)|0);
      $40 = $38;
     }
     $39 = $40 | 32;
     $41 = ($39|0)==(120);
     if (!($41)) {
      if ($28) {
       $$1160170 = $40;$$1165168 = 8;
       label = 47;
       break;
      } else {
       $$1160 = $40;$$1165 = $1;
       label = 32;
       break;
      }
     }
     $42 = HEAP32[$7>>2]|0;
     $43 = HEAP32[$8>>2]|0;
     $44 = ($42>>>0)<($43>>>0);
     if ($44) {
      $45 = ((($42)) + 1|0);
      HEAP32[$7>>2] = $45;
      $46 = HEAP8[$42>>0]|0;
      $47 = $46&255;
      $50 = $47;
     } else {
      $48 = (___shgetc($0)|0);
      $50 = $48;
     }
     $49 = ((114337) + ($50)|0);
     $51 = HEAP8[$49>>0]|0;
     $52 = ($51&255)>(15);
     if ($52) {
      $53 = HEAP32[$8>>2]|0;
      $54 = ($53|0)==(0|0);
      if (!($54)) {
       $55 = HEAP32[$7>>2]|0;
       $56 = ((($55)) + -1|0);
       HEAP32[$7>>2] = $56;
      }
      $57 = ($2|0)==(0);
      if ($57) {
       ___shlim($0,0);
       $291 = 0;$292 = 0;
       break L1;
      }
      if ($54) {
       $291 = 0;$292 = 0;
       break L1;
      }
      $58 = HEAP32[$7>>2]|0;
      $59 = ((($58)) + -1|0);
      HEAP32[$7>>2] = $59;
      $291 = 0;$292 = 0;
      break L1;
     } else {
      $$1160170 = $50;$$1165168 = 16;
      label = 47;
     }
    } else {
     $spec$select166 = $28 ? 10 : $1;
     $60 = ((114337) + ($$0159)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = ($spec$select166>>>0)>($62>>>0);
     if ($63) {
      $$1160 = $$0159;$$1165 = $spec$select166;
      label = 32;
     } else {
      $64 = HEAP32[$8>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $66 = HEAP32[$7>>2]|0;
       $67 = ((($66)) + -1|0);
       HEAP32[$7>>2] = $67;
      }
      ___shlim($0,0);
      $68 = (___errno_location()|0);
      HEAP32[$68>>2] = 22;
      $291 = 0;$292 = 0;
      break L1;
     }
    }
   } while(0);
   L43: do {
    if ((label|0) == 32) {
     $69 = ($$1165|0)==(10);
     if ($69) {
      $70 = (($$1160) + -48)|0;
      $71 = ($70>>>0)<(10);
      if ($71) {
       $$0154215 = 0;$74 = $70;
       while(1) {
        $72 = ($$0154215*10)|0;
        $73 = (($72) + ($74))|0;
        $75 = HEAP32[$7>>2]|0;
        $76 = HEAP32[$8>>2]|0;
        $77 = ($75>>>0)<($76>>>0);
        if ($77) {
         $78 = ((($75)) + 1|0);
         HEAP32[$7>>2] = $78;
         $79 = HEAP8[$75>>0]|0;
         $80 = $79&255;
         $83 = $80;
        } else {
         $81 = (___shgetc($0)|0);
         $83 = $81;
        }
        $82 = (($83) + -48)|0;
        $84 = ($82>>>0)<(10);
        $85 = ($73>>>0)<(429496729);
        $86 = $84 & $85;
        if ($86) {
         $$0154215 = $73;$74 = $82;
        } else {
         break;
        }
       }
       $87 = ($82>>>0)<(10);
       if ($87) {
        $$3162208 = $83;$88 = $73;$89 = 0;$93 = $82;
        while(1) {
         $90 = (___muldi3(($88|0),($89|0),10,0)|0);
         $91 = tempRet0;
         $92 = ($93|0)<(0);
         $94 = $92 << 31 >> 31;
         $95 = $93 ^ -1;
         $96 = $94 ^ -1;
         $97 = ($91>>>0)>($96>>>0);
         $98 = ($90>>>0)>($95>>>0);
         $99 = ($91|0)==($96|0);
         $100 = $99 & $98;
         $101 = $97 | $100;
         if ($101) {
          $$1165169 = 10;$$8 = $$3162208;$293 = $88;$294 = $89;
          label = 76;
          break L43;
         }
         $102 = (_i64Add(($90|0),($91|0),($93|0),($94|0))|0);
         $103 = tempRet0;
         $104 = HEAP32[$7>>2]|0;
         $105 = HEAP32[$8>>2]|0;
         $106 = ($104>>>0)<($105>>>0);
         if ($106) {
          $107 = ((($104)) + 1|0);
          HEAP32[$7>>2] = $107;
          $108 = HEAP8[$104>>0]|0;
          $109 = $108&255;
          $112 = $109;
         } else {
          $110 = (___shgetc($0)|0);
          $112 = $110;
         }
         $111 = (($112) + -48)|0;
         $113 = ($111>>>0)<(10);
         $114 = ($103>>>0)<(429496729);
         $115 = ($102>>>0)<(2576980378);
         $116 = ($103|0)==(429496729);
         $117 = $116 & $115;
         $118 = $114 | $117;
         $or$cond7 = $113 & $118;
         if ($or$cond7) {
          $$3162208 = $112;$88 = $102;$89 = $103;$93 = $111;
         } else {
          break;
         }
        }
        $119 = ($111>>>0)>(9);
        if ($119) {
         $$1158 = $$0157;$265 = $103;$267 = $102;
        } else {
         $$1165169 = 10;$$8 = $112;$293 = $102;$294 = $103;
         label = 76;
        }
       } else {
        $$1158 = $$0157;$265 = 0;$267 = $73;
       }
      } else {
       $$1158 = $$0157;$265 = 0;$267 = 0;
      }
     } else {
      $$1160170 = $$1160;$$1165168 = $$1165;
      label = 47;
     }
    }
   } while(0);
   L63: do {
    if ((label|0) == 47) {
     $120 = (($$1165168) + -1)|0;
     $121 = $120 & $$1165168;
     $122 = ($121|0)==(0);
     if ($122) {
      $123 = ($$1165168*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (143318 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = ((114337) + ($$1160170)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($$1165168>>>0)>($131>>>0);
      if ($132) {
       $$1155184 = 0;$135 = $131;
       while(1) {
        $133 = $$1155184 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$7>>2]|0;
        $137 = HEAP32[$8>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$7>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $144 = $141;
        } else {
         $142 = (___shgetc($0)|0);
         $144 = $142;
        }
        $143 = ((114337) + ($144)|0);
        $145 = HEAP8[$143>>0]|0;
        $146 = $145&255;
        $147 = ($$1165168>>>0)>($146>>>0);
        $148 = ($134>>>0)<(134217728);
        $149 = $148 & $147;
        if ($149) {
         $$1155184 = $134;$135 = $146;
        } else {
         break;
        }
       }
       $$4163$lcssa = $144;$$pre$phi237Z2D = $146;$154 = 0;$156 = $134;$295 = $145;
      } else {
       $$4163$lcssa = $$1160170;$$pre$phi237Z2D = $131;$154 = 0;$156 = 0;$295 = $130;
      }
      $150 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $151 = tempRet0;
      $152 = ($$1165168>>>0)<=($$pre$phi237Z2D>>>0);
      $153 = ($151>>>0)<($154>>>0);
      $155 = ($150>>>0)<($156>>>0);
      $157 = ($151|0)==($154|0);
      $158 = $157 & $155;
      $159 = $153 | $158;
      $or$cond179 = $152 | $159;
      if ($or$cond179) {
       $$1165169 = $$1165168;$$8 = $$4163$lcssa;$293 = $156;$294 = $154;
       label = 76;
       break;
      }
      $160 = $156;$161 = $154;$165 = $295;
      while(1) {
       $162 = (_bitshift64Shl(($160|0),($161|0),($128|0))|0);
       $163 = tempRet0;
       $164 = $165&255;
       $166 = $162 | $164;
       $167 = HEAP32[$7>>2]|0;
       $168 = HEAP32[$8>>2]|0;
       $169 = ($167>>>0)<($168>>>0);
       if ($169) {
        $170 = ((($167)) + 1|0);
        HEAP32[$7>>2] = $170;
        $171 = HEAP8[$167>>0]|0;
        $172 = $171&255;
        $175 = $172;
       } else {
        $173 = (___shgetc($0)|0);
        $175 = $173;
       }
       $174 = ((114337) + ($175)|0);
       $176 = HEAP8[$174>>0]|0;
       $177 = $176&255;
       $178 = ($$1165168>>>0)<=($177>>>0);
       $179 = ($163>>>0)>($151>>>0);
       $180 = ($166>>>0)>($150>>>0);
       $181 = ($163|0)==($151|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$1165169 = $$1165168;$$8 = $175;$293 = $166;$294 = $163;
        label = 76;
        break L63;
       } else {
        $160 = $166;$161 = $163;$165 = $176;
       }
      }
     }
     $184 = ((114337) + ($$1160170)|0);
     $185 = HEAP8[$184>>0]|0;
     $186 = $185&255;
     $187 = ($$1165168>>>0)>($186>>>0);
     if ($187) {
      $$2156202 = 0;$190 = $186;
      while(1) {
       $188 = Math_imul($$2156202, $$1165168)|0;
       $189 = (($190) + ($188))|0;
       $191 = HEAP32[$7>>2]|0;
       $192 = HEAP32[$8>>2]|0;
       $193 = ($191>>>0)<($192>>>0);
       if ($193) {
        $194 = ((($191)) + 1|0);
        HEAP32[$7>>2] = $194;
        $195 = HEAP8[$191>>0]|0;
        $196 = $195&255;
        $199 = $196;
       } else {
        $197 = (___shgetc($0)|0);
        $199 = $197;
       }
       $198 = ((114337) + ($199)|0);
       $200 = HEAP8[$198>>0]|0;
       $201 = $200&255;
       $202 = ($$1165168>>>0)>($201>>>0);
       $203 = ($189>>>0)<(119304647);
       $204 = $203 & $202;
       if ($204) {
        $$2156202 = $189;$190 = $201;
       } else {
        break;
       }
      }
      $$6$lcssa = $199;$$pre$phi239Z2D = $201;$296 = $200;$297 = $189;$298 = 0;
     } else {
      $$6$lcssa = $$1160170;$$pre$phi239Z2D = $186;$296 = $185;$297 = 0;$298 = 0;
     }
     $205 = ($$1165168>>>0)>($$pre$phi239Z2D>>>0);
     if ($205) {
      $206 = (___udivdi3(-1,-1,($$1165168|0),0)|0);
      $207 = tempRet0;
      $$7190 = $$6$lcssa;$209 = $298;$211 = $297;$218 = $296;
      while(1) {
       $208 = ($209>>>0)>($207>>>0);
       $210 = ($211>>>0)>($206>>>0);
       $212 = ($209|0)==($207|0);
       $213 = $212 & $210;
       $214 = $208 | $213;
       if ($214) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $211;$294 = $209;
        label = 76;
        break L63;
       }
       $215 = (___muldi3(($211|0),($209|0),($$1165168|0),0)|0);
       $216 = tempRet0;
       $217 = $218&255;
       $219 = $217 ^ -1;
       $220 = ($216>>>0)>(4294967295);
       $221 = ($215>>>0)>($219>>>0);
       $222 = ($216|0)==(-1);
       $223 = $222 & $221;
       $224 = $220 | $223;
       if ($224) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $211;$294 = $209;
        label = 76;
        break L63;
       }
       $225 = (_i64Add(($215|0),($216|0),($217|0),0)|0);
       $226 = tempRet0;
       $227 = HEAP32[$7>>2]|0;
       $228 = HEAP32[$8>>2]|0;
       $229 = ($227>>>0)<($228>>>0);
       if ($229) {
        $230 = ((($227)) + 1|0);
        HEAP32[$7>>2] = $230;
        $231 = HEAP8[$227>>0]|0;
        $232 = $231&255;
        $235 = $232;
       } else {
        $233 = (___shgetc($0)|0);
        $235 = $233;
       }
       $234 = ((114337) + ($235)|0);
       $236 = HEAP8[$234>>0]|0;
       $237 = $236&255;
       $238 = ($$1165168>>>0)>($237>>>0);
       if ($238) {
        $$7190 = $235;$209 = $226;$211 = $225;$218 = $236;
       } else {
        $$1165169 = $$1165168;$$8 = $235;$293 = $225;$294 = $226;
        label = 76;
        break;
       }
      }
     } else {
      $$1165169 = $$1165168;$$8 = $$6$lcssa;$293 = $297;$294 = $298;
      label = 76;
     }
    }
   } while(0);
   if ((label|0) == 76) {
    $239 = ((114337) + ($$8)|0);
    $240 = HEAP8[$239>>0]|0;
    $241 = $240&255;
    $242 = ($$1165169>>>0)>($241>>>0);
    if ($242) {
     while(1) {
      $243 = HEAP32[$7>>2]|0;
      $244 = HEAP32[$8>>2]|0;
      $245 = ($243>>>0)<($244>>>0);
      if ($245) {
       $246 = ((($243)) + 1|0);
       HEAP32[$7>>2] = $246;
       $247 = HEAP8[$243>>0]|0;
       $248 = $247&255;
       $251 = $248;
      } else {
       $249 = (___shgetc($0)|0);
       $251 = $249;
      }
      $250 = ((114337) + ($251)|0);
      $252 = HEAP8[$250>>0]|0;
      $253 = $252&255;
      $254 = ($$1165169>>>0)>($253>>>0);
      if (!($254)) {
       break;
      }
     }
     $255 = (___errno_location()|0);
     HEAP32[$255>>2] = 34;
     $256 = $3 & 1;
     $257 = ($256|0)==(0);
     $258 = (0)==(0);
     $259 = $257 & $258;
     $spec$select167 = $259 ? $$0157 : 0;
     $$1158 = $spec$select167;$265 = $4;$267 = $3;
    } else {
     $$1158 = $$0157;$265 = $294;$267 = $293;
    }
   }
   $260 = HEAP32[$8>>2]|0;
   $261 = ($260|0)==(0|0);
   if (!($261)) {
    $262 = HEAP32[$7>>2]|0;
    $263 = ((($262)) + -1|0);
    HEAP32[$7>>2] = $263;
   }
   $264 = ($265>>>0)<($4>>>0);
   $266 = ($267>>>0)<($3>>>0);
   $268 = ($265|0)==($4|0);
   $269 = $268 & $266;
   $270 = $264 | $269;
   if (!($270)) {
    $271 = $3 & 1;
    $272 = ($271|0)!=(0);
    $273 = (0)!=(0);
    $274 = $272 | $273;
    $275 = ($$1158|0)!=(0);
    $or$cond12 = $274 | $275;
    if (!($or$cond12)) {
     $276 = (___errno_location()|0);
     HEAP32[$276>>2] = 34;
     $277 = (_i64Add(($3|0),($4|0),-1,-1)|0);
     $278 = tempRet0;
     $291 = $278;$292 = $277;
     break;
    }
    $279 = ($265>>>0)>($4>>>0);
    $280 = ($267>>>0)>($3>>>0);
    $281 = ($265|0)==($4|0);
    $282 = $281 & $280;
    $283 = $279 | $282;
    if ($283) {
     $284 = (___errno_location()|0);
     HEAP32[$284>>2] = 34;
     $291 = $4;$292 = $3;
     break;
    }
   }
   $285 = ($$1158|0)<(0);
   $286 = $285 << 31 >> 31;
   $287 = $267 ^ $$1158;
   $288 = $265 ^ $286;
   $289 = (_i64Subtract(($287|0),($288|0),($$1158|0),($286|0))|0);
   $290 = tempRet0;
   $291 = $290;$292 = $289;
  }
 } while(0);
 tempRet0 = ($291);
 return ($292|0);
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 104|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  label = 3;
 } else {
  $4 = ((($0)) + 108|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)<($2|0);
  if ($6) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $7 = (___uflow($0)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   label = 4;
  } else {
   $10 = HEAP32[$1>>2]|0;
   $11 = ($10|0)==(0);
   $$phi$trans$insert = ((($0)) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($11) {
    $12 = $$pre;
    $42 = $12;
    label = 9;
   } else {
    $13 = ((($0)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $14;
    $16 = (($$pre) - ($15))|0;
    $17 = ((($0)) + 108|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($10) - ($18))|0;
    $20 = ($16|0)<($19|0);
    $21 = $$pre;
    if ($20) {
     $42 = $21;
     label = 9;
    } else {
     $22 = (($19) + -1)|0;
     $23 = (($14) + ($22)|0);
     $24 = ((($0)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $21;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($0)) + 100|0);
    HEAP32[$25>>2] = $$pre;
    $27 = $42;
   }
   $26 = ($27|0)==(0|0);
   $$phi$trans$insert28 = ((($0)) + 4|0);
   if ($26) {
    $$pre29 = HEAP32[$$phi$trans$insert28>>2]|0;
    $37 = $$pre29;
   } else {
    $28 = HEAP32[$$phi$trans$insert28>>2]|0;
    $29 = $27;
    $30 = ((($0)) + 108|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($29) + 1)|0;
    $33 = (($32) - ($28))|0;
    $34 = (($33) + ($31))|0;
    HEAP32[$30>>2] = $34;
    $35 = $28;
    $37 = $35;
   }
   $36 = ((($37)) + -1|0);
   $38 = HEAP8[$36>>0]|0;
   $39 = $38&255;
   $40 = ($7|0)==($39|0);
   if ($40) {
    $$0 = $7;
   } else {
    $41 = $7&255;
    HEAP8[$36>>0] = $41;
    $$0 = $7;
   }
  }
 }
 if ((label|0) == 4) {
  $9 = ((($0)) + 100|0);
  HEAP32[$9>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $narrow = $1 | $3;
 $4 = $narrow&1;
 return ($4|0);
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (___toread($0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (ftCall_iiii($5|0,$0,$1,1)|0);
  $7 = ($6|0)==(1);
  if ($7) {
   $8 = HEAP8[$1>>0]|0;
   $9 = $8&255;
   $$0 = $9;
  } else {
   $$0 = -1;
  }
 } else {
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  (ftCall_iiii($13|0,$0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$9>>2] = 0;
 HEAP32[$7>>2] = 0;
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 & 4;
 $17 = ($16|0)==(0);
 if ($17) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 8|0);
  HEAP32[$24>>2] = $23;
  $25 = ((($0)) + 4|0);
  HEAP32[$25>>2] = $23;
  $26 = $15 << 27;
  $sext = $26 >> 31;
  $$0 = $sext;
 } else {
  $18 = $15 | 32;
  HEAP32[$0>>2] = $18;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strtol($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strtox_764($0,$1,$2,-2147483648,0)|0);
 $4 = tempRet0;
 return ($3|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _strncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$020 = 0;
 } else {
  $4 = HEAP8[$0>>0]|0;
  $5 = ($4<<24>>24)==(0);
  L3: do {
   if ($5) {
    $$0$lcssa = $1;$$lcssa = 0;
   } else {
    $$01823 = $0;$$01925$in = $2;$$024 = $1;$10 = $4;
    while(1) {
     $$01925 = (($$01925$in) + -1)|0;
     $6 = HEAP8[$$024>>0]|0;
     $7 = ($6<<24>>24)!=(0);
     $8 = ($$01925|0)!=(0);
     $or$cond = $8 & $7;
     $9 = ($10<<24>>24)==($6<<24>>24);
     $or$cond21 = $9 & $or$cond;
     if (!($or$cond21)) {
      $$0$lcssa = $$024;$$lcssa = $10;
      break L3;
     }
     $11 = ((($$01823)) + 1|0);
     $12 = ((($$024)) + 1|0);
     $13 = HEAP8[$11>>0]|0;
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0$lcssa = $12;$$lcssa = 0;
      break;
     } else {
      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$10 = $13;
     }
    }
   }
  } while(0);
  $15 = $$lcssa&255;
  $16 = HEAP8[$$0$lcssa>>0]|0;
  $17 = $16&255;
  $18 = (($15) - ($17))|0;
  $$020 = $18;
 }
 return ($$020|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $4 = sp + 124|0;
 $5 = sp;
 dest=$5; src=120708; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $spec$select = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $spec$select;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($spec$select)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($spec$select|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select41 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $3 = sp + 208|0;
 $4 = sp + 160|0;
 $5 = sp + 80|0;
 $6 = sp;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $40 = $12;
  } else {
   $40 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (ftCall_iiii($32|0,$0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $spec$select = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $spec$select;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $spec$select41 = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $39 = ($40|0)==(0);
  if (!($39)) {
   ___unlockfile($0);
  }
  $$0 = $spec$select41;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$0228 = 0, $$0229334 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240313 = 0, $$0240313371 = 0, $$0240333 = 0, $$0243 = 0, $$0243$ph = 0, $$0243$ph$be = 0, $$0247 = 0, $$0247$ph = 0, $$0249$lcssa = 0, $$0249321 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0;
 var $$0259 = 0, $$0262$lcssa = 0, $$0262328 = 0, $$0269$ph = 0, $$1 = 0, $$1230340 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241339 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242320 = 0;
 var $$2256 = 0, $$2256$ = 0, $$2261 = 0, $$2271 = 0, $$3257 = 0, $$3265 = 0, $$3272 = 0, $$3317 = 0, $$4258370 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa308 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre360 = 0, $$pre362 = 0, $$pre363 = 0, $$pre363$pre = 0, $$pre364 = 0;
 var $$pre368 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0;
 var $arglist_next3 = 0, $brmerge = 0, $brmerge326 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0, $or$cond276 = 0, $or$cond278 = 0, $or$cond283 = 0, $spec$select = 0, $spec$select281 = 0, $spec$select284 = 0;
 var $spec$select291 = 0, $spec$select292 = 0, $spec$select293 = 0, $spec$select294 = 0, $spec$select295 = 0, $spec$select296 = 0, $spec$select297 = 0, $spec$select298 = 0, $spec$select299 = 0, $storemerge273$lcssa = 0, $storemerge273327 = 0, $storemerge274 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $5 = sp + 56|0;
 $6 = sp + 40|0;
 $7 = sp;
 $8 = sp + 48|0;
 $9 = sp + 60|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243$ph = 0;$$0247$ph = 0;$$0269$ph = 0;
 L1: while(1) {
  $$0243 = $$0243$ph;$$0247 = $$0247$ph;
  while(1) {
   $15 = ($$0247|0)>(-1);
   do {
    if ($15) {
     $16 = (2147483647 - ($$0247))|0;
     $17 = ($$0243|0)>($16|0);
     if ($17) {
      $18 = (___errno_location()|0);
      HEAP32[$18>>2] = 75;
      $$1248 = -1;
      break;
     } else {
      $19 = (($$0243) + ($$0247))|0;
      $$1248 = $19;
      break;
     }
    } else {
     $$1248 = $$0247;
    }
   } while(0);
   $20 = HEAP32[$5>>2]|0;
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    label = 94;
    break L1;
   }
   $23 = $21;$25 = $20;
   L12: while(1) {
    switch ($23<<24>>24) {
    case 37:  {
     label = 10;
     break L12;
     break;
    }
    case 0:  {
     $$0249$lcssa = $25;
     break L12;
     break;
    }
    default: {
    }
    }
    $24 = ((($25)) + 1|0);
    HEAP32[$5>>2] = $24;
    $$pre = HEAP8[$24>>0]|0;
    $23 = $$pre;$25 = $24;
   }
   L15: do {
    if ((label|0) == 10) {
     label = 0;
     $$0249321 = $25;$27 = $25;
     while(1) {
      $26 = ((($27)) + 1|0);
      $28 = HEAP8[$26>>0]|0;
      $29 = ($28<<24>>24)==(37);
      if (!($29)) {
       $$0249$lcssa = $$0249321;
       break L15;
      }
      $30 = ((($$0249321)) + 1|0);
      $31 = ((($27)) + 2|0);
      HEAP32[$5>>2] = $31;
      $32 = HEAP8[$31>>0]|0;
      $33 = ($32<<24>>24)==(37);
      if ($33) {
       $$0249321 = $30;$27 = $31;
      } else {
       $$0249$lcssa = $30;
       break;
      }
     }
    }
   } while(0);
   $34 = $$0249$lcssa;
   $35 = $20;
   $36 = (($34) - ($35))|0;
   if ($10) {
    _out($0,$20,$36);
   }
   $37 = ($36|0)==(0);
   if ($37) {
    break;
   } else {
    $$0243 = $36;$$0247 = $$1248;
   }
  }
  $38 = HEAP32[$5>>2]|0;
  $39 = ((($38)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (_isdigit($41)|0);
  $43 = ($42|0)==(0);
  $$pre360 = HEAP32[$5>>2]|0;
  if ($43) {
   $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
  } else {
   $44 = ((($$pre360)) + 2|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(36);
   if ($46) {
    $47 = ((($$pre360)) + 1|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 << 24 >> 24;
    $50 = (($49) + -48)|0;
    $$0253 = $50;$$1270 = 1;$$sink = 3;
   } else {
    $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
   }
  }
  $51 = (($$pre360) + ($$sink)|0);
  HEAP32[$5>>2] = $51;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = (($53) + -32)|0;
  $55 = ($54>>>0)>(31);
  $56 = 1 << $54;
  $57 = $56 & 75913;
  $58 = ($57|0)==(0);
  $brmerge326 = $55 | $58;
  if ($brmerge326) {
   $$0262$lcssa = 0;$$lcssa308 = $52;$storemerge273$lcssa = $51;
  } else {
   $$0262328 = 0;$60 = $54;$storemerge273327 = $51;
   while(1) {
    $59 = 1 << $60;
    $61 = $59 | $$0262328;
    $62 = ((($storemerge273327)) + 1|0);
    HEAP32[$5>>2] = $62;
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    $65 = (($64) + -32)|0;
    $66 = ($65>>>0)>(31);
    $67 = 1 << $65;
    $68 = $67 & 75913;
    $69 = ($68|0)==(0);
    $brmerge = $66 | $69;
    if ($brmerge) {
     $$0262$lcssa = $61;$$lcssa308 = $63;$storemerge273$lcssa = $62;
     break;
    } else {
     $$0262328 = $61;$60 = $65;$storemerge273327 = $62;
    }
   }
  }
  $70 = ($$lcssa308<<24>>24)==(42);
  if ($70) {
   $71 = ((($storemerge273$lcssa)) + 1|0);
   $72 = HEAP8[$71>>0]|0;
   $73 = $72 << 24 >> 24;
   $74 = (_isdigit($73)|0);
   $75 = ($74|0)==(0);
   if ($75) {
    label = 27;
   } else {
    $76 = HEAP32[$5>>2]|0;
    $77 = ((($76)) + 2|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ($78<<24>>24)==(36);
    if ($79) {
     $80 = ((($76)) + 1|0);
     $81 = HEAP8[$80>>0]|0;
     $82 = $81 << 24 >> 24;
     $83 = (($82) + -48)|0;
     $84 = (($4) + ($83<<2)|0);
     HEAP32[$84>>2] = 10;
     $85 = HEAP8[$80>>0]|0;
     $86 = $85 << 24 >> 24;
     $87 = (($86) + -48)|0;
     $88 = (($3) + ($87<<3)|0);
     $89 = $88;
     $90 = $89;
     $91 = HEAP32[$90>>2]|0;
     $92 = (($89) + 4)|0;
     $93 = $92;
     $94 = HEAP32[$93>>2]|0;
     $95 = ((($76)) + 3|0);
     $$0259 = $91;$$2271 = 1;$storemerge274 = $95;
    } else {
     label = 27;
    }
   }
   if ((label|0) == 27) {
    label = 0;
    $96 = ($$1270|0)==(0);
    if (!($96)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $97 = $arglist_current;
     $98 = ((0) + 4|0);
     $expanded4 = $98;
     $expanded = (($expanded4) - 1)|0;
     $99 = (($97) + ($expanded))|0;
     $100 = ((0) + 4|0);
     $expanded8 = $100;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $101 = $99 & $expanded6;
     $102 = $101;
     $103 = HEAP32[$102>>2]|0;
     $arglist_next = ((($102)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $358 = $103;
    } else {
     $358 = 0;
    }
    $104 = HEAP32[$5>>2]|0;
    $105 = ((($104)) + 1|0);
    $$0259 = $358;$$2271 = 0;$storemerge274 = $105;
   }
   HEAP32[$5>>2] = $storemerge274;
   $106 = ($$0259|0)<(0);
   $107 = $$0262$lcssa | 8192;
   $108 = (0 - ($$0259))|0;
   $spec$select291 = $106 ? $107 : $$0262$lcssa;
   $spec$select292 = $106 ? $108 : $$0259;
   $$1260 = $spec$select292;$$1263 = $spec$select291;$$3272 = $$2271;$112 = $storemerge274;
  } else {
   $109 = (_getint($5)|0);
   $110 = ($109|0)<(0);
   if ($110) {
    $$0 = -1;
    break;
   }
   $$pre362 = HEAP32[$5>>2]|0;
   $$1260 = $109;$$1263 = $$0262$lcssa;$$3272 = $$1270;$112 = $$pre362;
  }
  $111 = HEAP8[$112>>0]|0;
  $113 = ($111<<24>>24)==(46);
  do {
   if ($113) {
    $114 = ((($112)) + 1|0);
    $115 = HEAP8[$114>>0]|0;
    $116 = ($115<<24>>24)==(42);
    if (!($116)) {
     HEAP32[$5>>2] = $114;
     $152 = (_getint($5)|0);
     $$pre363$pre = HEAP32[$5>>2]|0;
     $$0254 = $152;$$pre363 = $$pre363$pre;
     break;
    }
    $117 = ((($112)) + 2|0);
    $118 = HEAP8[$117>>0]|0;
    $119 = $118 << 24 >> 24;
    $120 = (_isdigit($119)|0);
    $121 = ($120|0)==(0);
    if (!($121)) {
     $122 = HEAP32[$5>>2]|0;
     $123 = ((($122)) + 3|0);
     $124 = HEAP8[$123>>0]|0;
     $125 = ($124<<24>>24)==(36);
     if ($125) {
      $126 = ((($122)) + 2|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = (($128) + -48)|0;
      $130 = (($4) + ($129<<2)|0);
      HEAP32[$130>>2] = 10;
      $131 = HEAP8[$126>>0]|0;
      $132 = $131 << 24 >> 24;
      $133 = (($132) + -48)|0;
      $134 = (($3) + ($133<<3)|0);
      $135 = $134;
      $136 = $135;
      $137 = HEAP32[$136>>2]|0;
      $138 = (($135) + 4)|0;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($122)) + 4|0);
      HEAP32[$5>>2] = $141;
      $$0254 = $137;$$pre363 = $141;
      break;
     }
    }
    $142 = ($$3272|0)==(0);
    if (!($142)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $143 = $arglist_current2;
     $144 = ((0) + 4|0);
     $expanded11 = $144;
     $expanded10 = (($expanded11) - 1)|0;
     $145 = (($143) + ($expanded10))|0;
     $146 = ((0) + 4|0);
     $expanded15 = $146;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $147 = $145 & $expanded13;
     $148 = $147;
     $149 = HEAP32[$148>>2]|0;
     $arglist_next3 = ((($148)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $359 = $149;
    } else {
     $359 = 0;
    }
    $150 = HEAP32[$5>>2]|0;
    $151 = ((($150)) + 2|0);
    HEAP32[$5>>2] = $151;
    $$0254 = $359;$$pre363 = $151;
   } else {
    $$0254 = -1;$$pre363 = $112;
   }
  } while(0);
  $$0252 = 0;$154 = $$pre363;
  while(1) {
   $153 = HEAP8[$154>>0]|0;
   $155 = $153 << 24 >> 24;
   $156 = (($155) + -65)|0;
   $157 = ($156>>>0)>(57);
   if ($157) {
    $$0 = -1;
    break L1;
   }
   $158 = ((($154)) + 1|0);
   HEAP32[$5>>2] = $158;
   $159 = HEAP8[$154>>0]|0;
   $160 = $159 << 24 >> 24;
   $161 = (($160) + -65)|0;
   $162 = ((114608 + (($$0252*58)|0)|0) + ($161)|0);
   $163 = HEAP8[$162>>0]|0;
   $164 = $163&255;
   $165 = (($164) + -1)|0;
   $166 = ($165>>>0)<(8);
   if ($166) {
    $$0252 = $164;$154 = $158;
   } else {
    break;
   }
  }
  $167 = ($163<<24>>24)==(0);
  if ($167) {
   $$0 = -1;
   break;
  }
  $168 = ($163<<24>>24)==(19);
  $169 = ($$0253|0)>(-1);
  do {
   if ($168) {
    if ($169) {
     $$0 = -1;
     break L1;
    } else {
     label = 54;
    }
   } else {
    if ($169) {
     $170 = (($4) + ($$0253<<2)|0);
     HEAP32[$170>>2] = $164;
     $171 = (($3) + ($$0253<<3)|0);
     $172 = $171;
     $173 = $172;
     $174 = HEAP32[$173>>2]|0;
     $175 = (($172) + 4)|0;
     $176 = $175;
     $177 = HEAP32[$176>>2]|0;
     $178 = $6;
     $179 = $178;
     HEAP32[$179>>2] = $174;
     $180 = (($178) + 4)|0;
     $181 = $180;
     HEAP32[$181>>2] = $177;
     label = 54;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($6,$164,$2);
    $$pre364 = HEAP32[$5>>2]|0;
    $183 = $$pre364;
    label = 55;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   if ($10) {
    $183 = $158;
    label = 55;
   } else {
    $$0243$ph$be = 0;
   }
  }
  L77: do {
   if ((label|0) == 55) {
    label = 0;
    $182 = ((($183)) + -1|0);
    $184 = HEAP8[$182>>0]|0;
    $185 = $184 << 24 >> 24;
    $186 = ($$0252|0)!=(0);
    $187 = $185 & 15;
    $188 = ($187|0)==(3);
    $or$cond276 = $186 & $188;
    $189 = $185 & -33;
    $$0235 = $or$cond276 ? $189 : $185;
    $190 = $$1263 & 8192;
    $191 = ($190|0)==(0);
    $192 = $$1263 & -65537;
    $spec$select = $191 ? $$1263 : $192;
    L79: do {
     switch ($$0235|0) {
     case 110:  {
      $trunc = $$0252&255;
      switch ($trunc<<24>>24) {
      case 0:  {
       $199 = HEAP32[$6>>2]|0;
       HEAP32[$199>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 1:  {
       $200 = HEAP32[$6>>2]|0;
       HEAP32[$200>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 2:  {
       $201 = ($$1248|0)<(0);
       $202 = $201 << 31 >> 31;
       $203 = HEAP32[$6>>2]|0;
       $204 = $203;
       $205 = $204;
       HEAP32[$205>>2] = $$1248;
       $206 = (($204) + 4)|0;
       $207 = $206;
       HEAP32[$207>>2] = $202;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 3:  {
       $208 = $$1248&65535;
       $209 = HEAP32[$6>>2]|0;
       HEAP16[$209>>1] = $208;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 4:  {
       $210 = $$1248&255;
       $211 = HEAP32[$6>>2]|0;
       HEAP8[$211>>0] = $210;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 6:  {
       $212 = HEAP32[$6>>2]|0;
       HEAP32[$212>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 7:  {
       $213 = ($$1248|0)<(0);
       $214 = $213 << 31 >> 31;
       $215 = HEAP32[$6>>2]|0;
       $216 = $215;
       $217 = $216;
       HEAP32[$217>>2] = $$1248;
       $218 = (($216) + 4)|0;
       $219 = $218;
       HEAP32[$219>>2] = $214;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      default: {
       $$0243$ph$be = 0;
       break L77;
      }
      }
      break;
     }
     case 112:  {
      $220 = ($$0254>>>0)>(8);
      $221 = $220 ? $$0254 : 8;
      $222 = $spec$select | 8;
      $$1236 = 120;$$1255 = $221;$$3265 = $222;
      label = 67;
      break;
     }
     case 88: case 120:  {
      $$1236 = $$0235;$$1255 = $$0254;$$3265 = $spec$select;
      label = 67;
      break;
     }
     case 111:  {
      $238 = $6;
      $239 = $238;
      $240 = HEAP32[$239>>2]|0;
      $241 = (($238) + 4)|0;
      $242 = $241;
      $243 = HEAP32[$242>>2]|0;
      $244 = (_fmt_o($240,$243,$11)|0);
      $245 = $spec$select & 8;
      $246 = ($245|0)==(0);
      $247 = $244;
      $248 = (($12) - ($247))|0;
      $249 = ($$0254|0)>($248|0);
      $250 = (($248) + 1)|0;
      $251 = $246 | $249;
      $spec$select295 = $251 ? $$0254 : $250;
      $$0228 = $244;$$1233 = 0;$$1238 = 143327;$$2256 = $spec$select295;$$4266 = $spec$select;$277 = $240;$279 = $243;
      label = 73;
      break;
     }
     case 105: case 100:  {
      $252 = $6;
      $253 = $252;
      $254 = HEAP32[$253>>2]|0;
      $255 = (($252) + 4)|0;
      $256 = $255;
      $257 = HEAP32[$256>>2]|0;
      $258 = ($257|0)<(0);
      if ($258) {
       $259 = (_i64Subtract(0,0,($254|0),($257|0))|0);
       $260 = tempRet0;
       $261 = $6;
       $262 = $261;
       HEAP32[$262>>2] = $259;
       $263 = (($261) + 4)|0;
       $264 = $263;
       HEAP32[$264>>2] = $260;
       $$0232 = 1;$$0237 = 143327;$271 = $259;$272 = $260;
       label = 72;
       break L79;
      } else {
       $265 = $spec$select & 2048;
       $266 = ($265|0)==(0);
       $267 = $spec$select & 1;
       $268 = ($267|0)==(0);
       $$ = $268 ? 143327 : (143329);
       $spec$select296 = $266 ? $$ : (143328);
       $269 = $spec$select & 2049;
       $270 = ($269|0)!=(0);
       $spec$select297 = $270&1;
       $$0232 = $spec$select297;$$0237 = $spec$select296;$271 = $254;$272 = $257;
       label = 72;
       break L79;
      }
      break;
     }
     case 117:  {
      $193 = $6;
      $194 = $193;
      $195 = HEAP32[$194>>2]|0;
      $196 = (($193) + 4)|0;
      $197 = $196;
      $198 = HEAP32[$197>>2]|0;
      $$0232 = 0;$$0237 = 143327;$271 = $195;$272 = $198;
      label = 72;
      break;
     }
     case 99:  {
      $288 = $6;
      $289 = $288;
      $290 = HEAP32[$289>>2]|0;
      $291 = (($288) + 4)|0;
      $292 = $291;
      $293 = HEAP32[$292>>2]|0;
      $294 = $290&255;
      HEAP8[$13>>0] = $294;
      $$2 = $13;$$2234 = 0;$$2239 = 143327;$$5 = 1;$$6268 = $192;$$pre$phiZ2D = $12;
      break;
     }
     case 109:  {
      $295 = (___errno_location()|0);
      $296 = HEAP32[$295>>2]|0;
      $297 = (_strerror($296)|0);
      $$1 = $297;
      label = 77;
      break;
     }
     case 115:  {
      $298 = HEAP32[$6>>2]|0;
      $299 = ($298|0)==(0|0);
      $300 = $299 ? 143337 : $298;
      $$1 = $300;
      label = 77;
      break;
     }
     case 67:  {
      $307 = $6;
      $308 = $307;
      $309 = HEAP32[$308>>2]|0;
      $310 = (($307) + 4)|0;
      $311 = $310;
      $312 = HEAP32[$311>>2]|0;
      HEAP32[$8>>2] = $309;
      HEAP32[$14>>2] = 0;
      HEAP32[$6>>2] = $8;
      $$4258370 = -1;
      label = 81;
      break;
     }
     case 83:  {
      $313 = ($$0254|0)==(0);
      if ($313) {
       _pad_670($0,32,$$1260,0,$spec$select);
       $$0240313371 = 0;
       label = 91;
      } else {
       $$4258370 = $$0254;
       label = 81;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      $336 = +HEAPF64[$6>>3];
      $337 = (_fmt_fp($0,$336,$$1260,$$0254,$spec$select,$$0235)|0);
      $$0243$ph$be = $337;
      break L77;
      break;
     }
     default: {
      $$2 = $20;$$2234 = 0;$$2239 = 143327;$$5 = $$0254;$$6268 = $spec$select;$$pre$phiZ2D = $12;
     }
     }
    } while(0);
    L103: do {
     if ((label|0) == 67) {
      label = 0;
      $223 = $6;
      $224 = $223;
      $225 = HEAP32[$224>>2]|0;
      $226 = (($223) + 4)|0;
      $227 = $226;
      $228 = HEAP32[$227>>2]|0;
      $229 = $$1236 & 32;
      $230 = (_fmt_x($225,$228,$11,$229)|0);
      $231 = ($225|0)==(0);
      $232 = ($228|0)==(0);
      $233 = $231 & $232;
      $234 = $$3265 & 8;
      $235 = ($234|0)==(0);
      $or$cond278 = $235 | $233;
      $236 = $$1236 >>> 4;
      $237 = (143327 + ($236)|0);
      $spec$select293 = $or$cond278 ? 143327 : $237;
      $spec$select294 = $or$cond278 ? 0 : 2;
      $$0228 = $230;$$1233 = $spec$select294;$$1238 = $spec$select293;$$2256 = $$1255;$$4266 = $$3265;$277 = $225;$279 = $228;
      label = 73;
     }
     else if ((label|0) == 72) {
      label = 0;
      $273 = (_fmt_u($271,$272,$11)|0);
      $$0228 = $273;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $spec$select;$277 = $271;$279 = $272;
      label = 73;
     }
     else if ((label|0) == 77) {
      label = 0;
      $301 = (_memchr($$1,0,$$0254)|0);
      $302 = ($301|0)==(0|0);
      $303 = $301;
      $304 = $$1;
      $305 = (($303) - ($304))|0;
      $306 = (($$1) + ($$0254)|0);
      $$3257 = $302 ? $$0254 : $305;
      $$1250 = $302 ? $306 : $301;
      $$pre368 = $$1250;
      $$2 = $$1;$$2234 = 0;$$2239 = 143327;$$5 = $$3257;$$6268 = $192;$$pre$phiZ2D = $$pre368;
     }
     else if ((label|0) == 81) {
      label = 0;
      $314 = HEAP32[$6>>2]|0;
      $$0229334 = $314;$$0240333 = 0;
      while(1) {
       $315 = HEAP32[$$0229334>>2]|0;
       $316 = ($315|0)==(0);
       if ($316) {
        $$0240313 = $$0240333;
        break;
       }
       $317 = (_wctomb($9,$315)|0);
       $318 = ($317|0)<(0);
       $319 = (($$4258370) - ($$0240333))|0;
       $320 = ($317>>>0)>($319>>>0);
       $or$cond283 = $318 | $320;
       if ($or$cond283) {
        label = 85;
        break;
       }
       $321 = ((($$0229334)) + 4|0);
       $322 = (($317) + ($$0240333))|0;
       $323 = ($$4258370>>>0)>($322>>>0);
       if ($323) {
        $$0229334 = $321;$$0240333 = $322;
       } else {
        $$0240313 = $322;
        break;
       }
      }
      if ((label|0) == 85) {
       label = 0;
       if ($318) {
        $$0 = -1;
        break L1;
       } else {
        $$0240313 = $$0240333;
       }
      }
      _pad_670($0,32,$$1260,$$0240313,$spec$select);
      $324 = ($$0240313|0)==(0);
      if ($324) {
       $$0240313371 = 0;
       label = 91;
      } else {
       $325 = HEAP32[$6>>2]|0;
       $$1230340 = $325;$$1241339 = 0;
       while(1) {
        $326 = HEAP32[$$1230340>>2]|0;
        $327 = ($326|0)==(0);
        if ($327) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $328 = (_wctomb($9,$326)|0);
        $329 = (($328) + ($$1241339))|0;
        $330 = ($329|0)>($$0240313|0);
        if ($330) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $331 = ((($$1230340)) + 4|0);
        _out($0,$9,$328);
        $332 = ($329>>>0)<($$0240313>>>0);
        if ($332) {
         $$1230340 = $331;$$1241339 = $329;
        } else {
         $$0240313371 = $$0240313;
         label = 91;
         break;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 73) {
     label = 0;
     $274 = ($$2256|0)>(-1);
     $275 = $$4266 & -65537;
     $spec$select281 = $274 ? $275 : $$4266;
     $276 = ($277|0)!=(0);
     $278 = ($279|0)!=(0);
     $280 = $276 | $278;
     $281 = ($$2256|0)!=(0);
     $or$cond = $281 | $280;
     $282 = $$0228;
     $283 = (($12) - ($282))|0;
     $284 = $280 ^ 1;
     $285 = $284&1;
     $286 = (($283) + ($285))|0;
     $287 = ($$2256|0)>($286|0);
     $$2256$ = $287 ? $$2256 : $286;
     $spec$select298 = $or$cond ? $$2256$ : 0;
     $spec$select299 = $or$cond ? $$0228 : $11;
     $$2 = $spec$select299;$$2234 = $$1233;$$2239 = $$1238;$$5 = $spec$select298;$$6268 = $spec$select281;$$pre$phiZ2D = $12;
    }
    else if ((label|0) == 91) {
     label = 0;
     $333 = $spec$select ^ 8192;
     _pad_670($0,32,$$1260,$$0240313371,$333);
     $334 = ($$1260|0)>($$0240313371|0);
     $335 = $334 ? $$1260 : $$0240313371;
     $$0243$ph$be = $335;
     break;
    }
    $338 = $$2;
    $339 = (($$pre$phiZ2D) - ($338))|0;
    $340 = ($$5|0)<($339|0);
    $spec$select284 = $340 ? $339 : $$5;
    $341 = (($spec$select284) + ($$2234))|0;
    $342 = ($$1260|0)<($341|0);
    $$2261 = $342 ? $341 : $$1260;
    _pad_670($0,32,$$2261,$341,$$6268);
    _out($0,$$2239,$$2234);
    $343 = $$6268 ^ 65536;
    _pad_670($0,48,$$2261,$341,$343);
    _pad_670($0,48,$spec$select284,$339,0);
    _out($0,$$2,$339);
    $344 = $$6268 ^ 8192;
    _pad_670($0,32,$$2261,$341,$344);
    $$0243$ph$be = $$2261;
   }
  } while(0);
  $$0243$ph = $$0243$ph$be;$$0247$ph = $$1248;$$0269$ph = $$3272;
 }
 L125: do {
  if ((label|0) == 94) {
   $345 = ($0|0)==(0|0);
   if ($345) {
    $346 = ($$0269$ph|0)==(0);
    if ($346) {
     $$0 = 0;
    } else {
     $$2242320 = 1;
     while(1) {
      $347 = (($4) + ($$2242320<<2)|0);
      $348 = HEAP32[$347>>2]|0;
      $349 = ($348|0)==(0);
      if ($349) {
       break;
      }
      $350 = (($3) + ($$2242320<<3)|0);
      _pop_arg($350,$348,$2);
      $351 = (($$2242320) + 1)|0;
      $352 = ($351>>>0)<(10);
      if ($352) {
       $$2242320 = $351;
      } else {
       $$0 = 1;
       break L125;
      }
     }
     $$3317 = $$2242320;
     while(1) {
      $355 = (($4) + ($$3317<<2)|0);
      $356 = HEAP32[$355>>2]|0;
      $357 = ($356|0)==(0);
      $354 = (($$3317) + 1)|0;
      if (!($357)) {
       $$0 = -1;
       break L125;
      }
      $353 = ($354>>>0)<(10);
      if ($353) {
       $$3317 = $354;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (115072 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = (___muldi3(($10|0),($11|0),10,0)|0);
   $13 = tempRet0;
   $14 = (_i64Subtract(($8|0),($9|0),($12|0),($13|0))|0);
   $15 = tempRet0;
   $16 = $14&255;
   $17 = $16 | 48;
   $18 = ((($$0914)) + -1|0);
   HEAP8[$18>>0] = $17;
   $19 = ($9>>>0)>(9);
   $20 = ($8>>>0)>(4294967295);
   $21 = ($9|0)==(9);
   $22 = $21 & $20;
   $23 = $19 | $22;
   if ($23) {
    $$0914 = $18;$8 = $10;$9 = $11;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $10;$$09$lcssa = $18;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $24 = ($$010$lcssa$off0|0)==(0);
 if ($24) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $25 = (($$012>>>0) / 10)&-1;
   $26 = ($25*10)|0;
   $27 = (($$012) - ($26))|0;
   $28 = $27 | 48;
   $29 = $28&255;
   $30 = ((($$111)) + -1|0);
   HEAP8[$30>>0] = $29;
   $31 = ($$012>>>0)<(10);
   if ($31) {
    $$1$lcssa = $30;
    break;
   } else {
    $$012 = $25;$$111 = $30;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_107()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   label = 16;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $38 = ($$036$lcssa64|0)==(0);
    if ($38) {
     label = 16;
     break;
    } else {
     $39 = $$035$lcssa65;
     break;
    }
   }
   $20 = Math_imul($3, 16843009)|0;
   $21 = ($$036$lcssa64>>>0)>(3);
   L13: do {
    if ($21) {
     $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
     while(1) {
      $22 = HEAP32[$$046>>2]|0;
      $23 = $22 ^ $20;
      $24 = (($23) + -16843009)|0;
      $25 = $23 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$137$lcssa66 = $$13745;$$in = $$046;
       break L13;
      }
      $29 = ((($$046)) + 4|0);
      $30 = (($$13745) + -4)|0;
      $31 = ($30>>>0)>(3);
      if ($31) {
       $$046 = $29;$$13745 = $30;
      } else {
       $$0$lcssa = $29;$$137$lcssa = $30;
       label = 11;
       break;
      }
     }
    } else {
     $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
     label = 11;
    }
   } while(0);
   if ((label|0) == 11) {
    $32 = ($$137$lcssa|0)==(0);
    if ($32) {
     label = 16;
     break;
    } else {
     $$137$lcssa66 = $$137$lcssa;$$in = $$0$lcssa;
    }
   }
   $$140 = $$in;$$23839 = $$137$lcssa66;
   while(1) {
    $33 = HEAP8[$$140>>0]|0;
    $34 = ($33<<24>>24)==($18<<24>>24);
    if ($34) {
     $39 = $$140;
     break L8;
    }
    $35 = ((($$140)) + 1|0);
    $36 = (($$23839) + -1)|0;
    $37 = ($36|0)==(0);
    if ($37) {
     label = 16;
     break;
    } else {
     $$140 = $35;$$23839 = $36;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $39 = 0;
 }
 return ($39|0);
}
function _pad_670($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0512 = 0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0;
 var $$0527 = 0, $$0529 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1528 = 0, $$1530621 = 0;
 var $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0;
 var $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$560 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0;
 var $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$lobit = 0, $$neg = 0, $$neg571 = 0, $$not = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0;
 var $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0, $412 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond543 = 0, $or$cond546 = 0, $or$cond556 = 0, $or$cond559 = 0, $or$cond6 = 0, $scevgep711 = 0, $scevgep711712 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540722 = 0, $spec$select540723 = 0;
 var $spec$select541 = 0, $spec$select544 = 0.0, $spec$select547 = 0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select561 = 0.0, $spec$select562 = 0, $spec$select563 = 0, $spec$select565 = 0, $spec$select566 = 0, $spec$select567 = 0.0, $spec$select568 = 0.0, $spec$select569 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $6 = sp + 32|0;
 $7 = sp + 536|0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 $12 = (___DOUBLE_BITS_671($1)|0);
 $13 = tempRet0;
 $14 = ($13|0)<(0);
 if ($14) {
  $15 = - $1;
  $16 = (___DOUBLE_BITS_671($15)|0);
  $17 = tempRet0;
  $$0471 = $15;$$0522 = 1;$$0523 = 143344;$25 = $17;$412 = $16;
 } else {
  $18 = $4 & 2048;
  $19 = ($18|0)==(0);
  $20 = $4 & 1;
  $21 = ($20|0)==(0);
  $$ = $21 ? (143345) : (143350);
  $spec$select565 = $19 ? $$ : (143347);
  $22 = $4 & 2049;
  $23 = ($22|0)!=(0);
  $spec$select566 = $23&1;
  $$0471 = $1;$$0522 = $spec$select566;$$0523 = $spec$select565;$25 = $13;$412 = $12;
 }
 $24 = $25 & 2146435072;
 $26 = (0)==(0);
 $27 = ($24|0)==(2146435072);
 $28 = $26 & $27;
 do {
  if ($28) {
   $29 = $5 & 32;
   $30 = ($29|0)!=(0);
   $31 = $30 ? 143363 : 143367;
   $32 = ($$0471 != $$0471) | (0.0 != 0.0);
   $33 = $30 ? 143371 : 143375;
   $$0512 = $32 ? $33 : $31;
   $34 = (($$0522) + 3)|0;
   $35 = $4 & -65537;
   _pad_670($0,32,$2,$34,$35);
   _out($0,$$0523,$$0522);
   _out($0,$$0512,3);
   $36 = $4 ^ 8192;
   _pad_670($0,32,$2,$34,$36);
   $$sink757 = $34;
  } else {
   $37 = (+_frexpl($$0471,$7));
   $38 = $37 * 2.0;
   $39 = $38 != 0.0;
   if ($39) {
    $40 = HEAP32[$7>>2]|0;
    $41 = (($40) + -1)|0;
    HEAP32[$7>>2] = $41;
   }
   $42 = $5 | 32;
   $43 = ($42|0)==(97);
   if ($43) {
    $44 = $5 & 32;
    $45 = ($44|0)==(0);
    $46 = ((($$0523)) + 9|0);
    $spec$select = $45 ? $$0523 : $46;
    $47 = $$0522 | 2;
    $48 = ($3>>>0)>(11);
    $49 = (12 - ($3))|0;
    $50 = ($49|0)==(0);
    $51 = $48 | $50;
    do {
     if ($51) {
      $$1472 = $38;
     } else {
      $$0511586 = 8.0;$$1510587 = $49;
      while(1) {
       $52 = (($$1510587) + -1)|0;
       $53 = $$0511586 * 16.0;
       $54 = ($52|0)==(0);
       if ($54) {
        break;
       } else {
        $$0511586 = $53;$$1510587 = $52;
       }
      }
      $55 = HEAP8[$spec$select>>0]|0;
      $56 = ($55<<24>>24)==(45);
      if ($56) {
       $57 = - $38;
       $58 = $57 - $53;
       $59 = $53 + $58;
       $60 = - $59;
       $$1472 = $60;
       break;
      } else {
       $61 = $38 + $53;
       $62 = $61 - $53;
       $$1472 = $62;
       break;
      }
     }
    } while(0);
    $63 = HEAP32[$7>>2]|0;
    $64 = ($63|0)<(0);
    $65 = (0 - ($63))|0;
    $66 = $64 ? $65 : $63;
    $67 = ($66|0)<(0);
    $68 = $67 << 31 >> 31;
    $69 = (_fmt_u($66,$68,$11)|0);
    $70 = ($69|0)==($11|0);
    if ($70) {
     $71 = ((($10)) + 11|0);
     HEAP8[$71>>0] = 48;
     $$0513 = $71;
    } else {
     $$0513 = $69;
    }
    $72 = $63 >> 31;
    $73 = $72 & 2;
    $74 = (($73) + 43)|0;
    $75 = $74&255;
    $76 = ((($$0513)) + -1|0);
    HEAP8[$76>>0] = $75;
    $77 = (($5) + 15)|0;
    $78 = $77&255;
    $79 = ((($$0513)) + -2|0);
    HEAP8[$79>>0] = $78;
    $80 = ($3|0)<(1);
    $81 = $4 & 8;
    $82 = ($81|0)==(0);
    $$0525 = $8;$$2473 = $$1472;
    while(1) {
     $83 = (~~(($$2473)));
     $84 = (115072 + ($83)|0);
     $85 = HEAP8[$84>>0]|0;
     $86 = $85&255;
     $87 = $44 | $86;
     $88 = $87&255;
     $89 = ((($$0525)) + 1|0);
     HEAP8[$$0525>>0] = $88;
     $90 = (+($83|0));
     $91 = $$2473 - $90;
     $92 = $91 * 16.0;
     $93 = $89;
     $94 = (($93) - ($9))|0;
     $95 = ($94|0)==(1);
     if ($95) {
      $96 = $92 == 0.0;
      $or$cond3$not = $80 & $96;
      $or$cond = $82 & $or$cond3$not;
      if ($or$cond) {
       $$1526 = $89;
      } else {
       $97 = ((($$0525)) + 2|0);
       HEAP8[$89>>0] = 46;
       $$1526 = $97;
      }
     } else {
      $$1526 = $89;
     }
     $98 = $92 != 0.0;
     if ($98) {
      $$0525 = $$1526;$$2473 = $92;
     } else {
      break;
     }
    }
    $99 = ($3|0)==(0);
    $$pre720 = $$1526;
    if ($99) {
     label = 25;
    } else {
     $100 = (-2 - ($9))|0;
     $101 = (($100) + ($$pre720))|0;
     $102 = ($101|0)<($3|0);
     if ($102) {
      $103 = $11;
      $104 = $79;
      $105 = (($3) + 2)|0;
      $106 = (($105) + ($103))|0;
      $107 = (($106) - ($104))|0;
      $$0527 = $107;$$pre$phi717Z2D = $103;$$pre$phi718Z2D = $104;
     } else {
      label = 25;
     }
    }
    if ((label|0) == 25) {
     $108 = $11;
     $109 = $79;
     $110 = (($108) - ($9))|0;
     $111 = (($110) - ($109))|0;
     $112 = (($111) + ($$pre720))|0;
     $$0527 = $112;$$pre$phi717Z2D = $108;$$pre$phi718Z2D = $109;
    }
    $113 = (($$0527) + ($47))|0;
    _pad_670($0,32,$2,$113,$4);
    _out($0,$spec$select,$47);
    $114 = $4 ^ 65536;
    _pad_670($0,48,$2,$113,$114);
    $115 = (($$pre720) - ($9))|0;
    _out($0,$8,$115);
    $116 = (($$pre$phi717Z2D) - ($$pre$phi718Z2D))|0;
    $117 = (($115) + ($116))|0;
    $118 = (($$0527) - ($117))|0;
    _pad_670($0,48,$118,0,0);
    _out($0,$79,$116);
    $119 = $4 ^ 8192;
    _pad_670($0,32,$2,$113,$119);
    $$sink757 = $113;
    break;
   }
   $120 = ($3|0)<(0);
   $spec$select539 = $120 ? 6 : $3;
   if ($39) {
    $121 = $38 * 268435456.0;
    $122 = HEAP32[$7>>2]|0;
    $123 = (($122) + -28)|0;
    HEAP32[$7>>2] = $123;
    $$3 = $121;$$pr = $123;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $38;$$pr = $$pre;
   }
   $124 = ($$pr|0)<(0);
   $125 = ((($6)) + 288|0);
   $$0498 = $124 ? $6 : $125;
   $$1499 = $$0498;$$4 = $$3;
   while(1) {
    $126 = (~~(($$4))>>>0);
    HEAP32[$$1499>>2] = $126;
    $127 = ((($$1499)) + 4|0);
    $128 = (+($126>>>0));
    $129 = $$4 - $128;
    $130 = $129 * 1.0E+9;
    $131 = $130 != 0.0;
    if ($131) {
     $$1499 = $127;$$4 = $130;
    } else {
     break;
    }
   }
   $132 = $$0498;
   $133 = ($$pr|0)>(0);
   if ($133) {
    $$1482683 = $$0498;$$2500682 = $127;$135 = $$pr;
    while(1) {
     $134 = ($135|0)<(29);
     $136 = $134 ? $135 : 29;
     $$0488669 = ((($$2500682)) + -4|0);
     $137 = ($$0488669>>>0)<($$1482683>>>0);
     if ($137) {
      $$2483 = $$1482683;
     } else {
      $$0488671 = $$0488669;$$0497670 = 0;
      while(1) {
       $138 = HEAP32[$$0488671>>2]|0;
       $139 = (_bitshift64Shl(($138|0),0,($136|0))|0);
       $140 = tempRet0;
       $141 = (_i64Add(($139|0),($140|0),($$0497670|0),0)|0);
       $142 = tempRet0;
       $143 = (___udivdi3(($141|0),($142|0),1000000000,0)|0);
       $144 = tempRet0;
       $145 = (___muldi3(($143|0),($144|0),1000000000,0)|0);
       $146 = tempRet0;
       $147 = (_i64Subtract(($141|0),($142|0),($145|0),($146|0))|0);
       $148 = tempRet0;
       HEAP32[$$0488671>>2] = $147;
       $$0488 = ((($$0488671)) + -4|0);
       $149 = ($$0488>>>0)<($$1482683>>>0);
       if ($149) {
        break;
       } else {
        $$0488671 = $$0488;$$0497670 = $143;
       }
      }
      $150 = ($143|0)==(0);
      if ($150) {
       $$2483 = $$1482683;
      } else {
       $151 = ((($$1482683)) + -4|0);
       HEAP32[$151>>2] = $143;
       $$2483 = $151;
      }
     }
     $152 = ($$2500682>>>0)>($$2483>>>0);
     L57: do {
      if ($152) {
       $$3501676 = $$2500682;
       while(1) {
        $154 = ((($$3501676)) + -4|0);
        $155 = HEAP32[$154>>2]|0;
        $156 = ($155|0)==(0);
        if (!($156)) {
         $$3501$lcssa = $$3501676;
         break L57;
        }
        $153 = ($154>>>0)>($$2483>>>0);
        if ($153) {
         $$3501676 = $154;
        } else {
         $$3501$lcssa = $154;
         break;
        }
       }
      } else {
       $$3501$lcssa = $$2500682;
      }
     } while(0);
     $157 = HEAP32[$7>>2]|0;
     $158 = (($157) - ($136))|0;
     HEAP32[$7>>2] = $158;
     $159 = ($158|0)>(0);
     if ($159) {
      $$1482683 = $$2483;$$2500682 = $$3501$lcssa;$135 = $158;
     } else {
      $$1482$lcssa = $$2483;$$2500$lcssa = $$3501$lcssa;$$pr564 = $158;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$0498;$$2500$lcssa = $127;$$pr564 = $$pr;
   }
   $160 = ($$pr564|0)<(0);
   if ($160) {
    $161 = (($spec$select539) + 25)|0;
    $162 = (($161|0) / 9)&-1;
    $163 = (($162) + 1)|0;
    $164 = ($42|0)==(102);
    $$3484663 = $$1482$lcssa;$$4502662 = $$2500$lcssa;$166 = $$pr564;
    while(1) {
     $165 = (0 - ($166))|0;
     $167 = ($165|0)<(9);
     $168 = $167 ? $165 : 9;
     $169 = ($$3484663>>>0)<($$4502662>>>0);
     if ($169) {
      $173 = 1 << $168;
      $174 = (($173) + -1)|0;
      $175 = 1000000000 >>> $168;
      $$0487657 = 0;$$1489656 = $$3484663;
      while(1) {
       $176 = HEAP32[$$1489656>>2]|0;
       $177 = $176 & $174;
       $178 = $176 >>> $168;
       $179 = (($178) + ($$0487657))|0;
       HEAP32[$$1489656>>2] = $179;
       $180 = Math_imul($177, $175)|0;
       $181 = ((($$1489656)) + 4|0);
       $182 = ($181>>>0)<($$4502662>>>0);
       if ($182) {
        $$0487657 = $180;$$1489656 = $181;
       } else {
        break;
       }
      }
      $183 = HEAP32[$$3484663>>2]|0;
      $184 = ($183|0)==(0);
      $185 = ((($$3484663)) + 4|0);
      $spec$select540 = $184 ? $185 : $$3484663;
      $186 = ($180|0)==(0);
      if ($186) {
       $$5503 = $$4502662;$spec$select540723 = $spec$select540;
      } else {
       $187 = ((($$4502662)) + 4|0);
       HEAP32[$$4502662>>2] = $180;
       $$5503 = $187;$spec$select540723 = $spec$select540;
      }
     } else {
      $170 = HEAP32[$$3484663>>2]|0;
      $171 = ($170|0)==(0);
      $172 = ((($$3484663)) + 4|0);
      $spec$select540722 = $171 ? $172 : $$3484663;
      $$5503 = $$4502662;$spec$select540723 = $spec$select540722;
     }
     $188 = $164 ? $$0498 : $spec$select540723;
     $189 = $$5503;
     $190 = $188;
     $191 = (($189) - ($190))|0;
     $192 = $191 >> 2;
     $193 = ($192|0)>($163|0);
     $194 = (($188) + ($163<<2)|0);
     $spec$select541 = $193 ? $194 : $$5503;
     $195 = HEAP32[$7>>2]|0;
     $196 = (($195) + ($168))|0;
     HEAP32[$7>>2] = $196;
     $197 = ($196|0)<(0);
     if ($197) {
      $$3484663 = $spec$select540723;$$4502662 = $spec$select541;$166 = $196;
     } else {
      $$3484$lcssa = $spec$select540723;$$4502$lcssa = $spec$select541;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$4502$lcssa = $$2500$lcssa;
   }
   $198 = ($$3484$lcssa>>>0)<($$4502$lcssa>>>0);
   if ($198) {
    $199 = $$3484$lcssa;
    $200 = (($132) - ($199))|0;
    $201 = $200 >> 2;
    $202 = ($201*9)|0;
    $203 = HEAP32[$$3484$lcssa>>2]|0;
    $204 = ($203>>>0)<(10);
    if ($204) {
     $$1517 = $202;
    } else {
     $$0516652 = $202;$$0532651 = 10;
     while(1) {
      $205 = ($$0532651*10)|0;
      $206 = (($$0516652) + 1)|0;
      $207 = ($203>>>0)<($205>>>0);
      if ($207) {
       $$1517 = $206;
       break;
      } else {
       $$0516652 = $206;$$0532651 = $205;
      }
     }
    }
   } else {
    $$1517 = 0;
   }
   $208 = ($42|0)==(102);
   $209 = $208 ? 0 : $$1517;
   $210 = (($spec$select539) - ($209))|0;
   $211 = ($42|0)==(103);
   $212 = ($spec$select539|0)!=(0);
   $213 = $212 & $211;
   $$neg = $213 << 31 >> 31;
   $214 = (($210) + ($$neg))|0;
   $215 = $$4502$lcssa;
   $216 = (($215) - ($132))|0;
   $217 = $216 >> 2;
   $218 = ($217*9)|0;
   $219 = (($218) + -9)|0;
   $220 = ($214|0)<($219|0);
   if ($220) {
    $221 = ((($$0498)) + 4|0);
    $222 = (($214) + 9216)|0;
    $223 = (($222|0) / 9)&-1;
    $224 = (($223) + -1024)|0;
    $225 = (($221) + ($224<<2)|0);
    $226 = ($223*9)|0;
    $227 = (($222) - ($226))|0;
    $228 = ($227|0)<(8);
    if ($228) {
     $$0529$in646 = $227;$$1533645 = 10;
     while(1) {
      $$0529 = (($$0529$in646) + 1)|0;
      $229 = ($$1533645*10)|0;
      $230 = ($$0529$in646|0)<(7);
      if ($230) {
       $$0529$in646 = $$0529;$$1533645 = $229;
      } else {
       $$1533$lcssa = $229;
       break;
      }
     }
    } else {
     $$1533$lcssa = 10;
    }
    $231 = HEAP32[$225>>2]|0;
    $232 = (($231>>>0) / ($$1533$lcssa>>>0))&-1;
    $233 = Math_imul($232, $$1533$lcssa)|0;
    $234 = (($231) - ($233))|0;
    $235 = ($234|0)==(0);
    $236 = ((($225)) + 4|0);
    $237 = ($236|0)==($$4502$lcssa|0);
    $or$cond543 = $237 & $235;
    if ($or$cond543) {
     $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
    } else {
     $238 = $232 & 1;
     $239 = ($238|0)==(0);
     $spec$select544 = $239 ? 9007199254740992.0 : 9007199254740994.0;
     $240 = $$1533$lcssa >>> 1;
     $241 = ($234>>>0)<($240>>>0);
     $242 = ($234|0)==($240|0);
     $or$cond546 = $237 & $242;
     $spec$select561 = $or$cond546 ? 1.0 : 1.5;
     $spec$select567 = $241 ? 0.5 : $spec$select561;
     $243 = ($$0522|0)==(0);
     if ($243) {
      $$1467 = $spec$select567;$$1469 = $spec$select544;
     } else {
      $244 = HEAP8[$$0523>>0]|0;
      $245 = ($244<<24>>24)==(45);
      $246 = - $spec$select544;
      $247 = - $spec$select567;
      $spec$select568 = $245 ? $246 : $spec$select544;
      $spec$select569 = $245 ? $247 : $spec$select567;
      $$1467 = $spec$select569;$$1469 = $spec$select568;
     }
     $248 = (($231) - ($234))|0;
     HEAP32[$225>>2] = $248;
     $249 = $$1469 + $$1467;
     $250 = $249 != $$1469;
     if ($250) {
      $251 = (($248) + ($$1533$lcssa))|0;
      HEAP32[$225>>2] = $251;
      $252 = ($251>>>0)>(999999999);
      if ($252) {
       $$2490638 = $225;$$5486639 = $$3484$lcssa;
       while(1) {
        $253 = ((($$2490638)) + -4|0);
        HEAP32[$$2490638>>2] = 0;
        $254 = ($253>>>0)<($$5486639>>>0);
        if ($254) {
         $255 = ((($$5486639)) + -4|0);
         HEAP32[$255>>2] = 0;
         $$6 = $255;
        } else {
         $$6 = $$5486639;
        }
        $256 = HEAP32[$253>>2]|0;
        $257 = (($256) + 1)|0;
        HEAP32[$253>>2] = $257;
        $258 = ($257>>>0)>(999999999);
        if ($258) {
         $$2490638 = $253;$$5486639 = $$6;
        } else {
         $$2490$lcssa = $253;$$5486$lcssa = $$6;
         break;
        }
       }
      } else {
       $$2490$lcssa = $225;$$5486$lcssa = $$3484$lcssa;
      }
      $259 = $$5486$lcssa;
      $260 = (($132) - ($259))|0;
      $261 = $260 >> 2;
      $262 = ($261*9)|0;
      $263 = HEAP32[$$5486$lcssa>>2]|0;
      $264 = ($263>>>0)<(10);
      if ($264) {
       $$4492 = $$2490$lcssa;$$4520 = $262;$$8 = $$5486$lcssa;
      } else {
       $$2518634 = $262;$$2534633 = 10;
       while(1) {
        $265 = ($$2534633*10)|0;
        $266 = (($$2518634) + 1)|0;
        $267 = ($263>>>0)<($265>>>0);
        if ($267) {
         $$4492 = $$2490$lcssa;$$4520 = $266;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2518634 = $266;$$2534633 = $265;
        }
       }
      }
     } else {
      $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
     }
    }
    $268 = ((($$4492)) + 4|0);
    $269 = ($$4502$lcssa>>>0)>($268>>>0);
    $spec$select547 = $269 ? $268 : $$4502$lcssa;
    $$5521 = $$4520;$$8506 = $spec$select547;$$9 = $$8;
   } else {
    $$5521 = $$1517;$$8506 = $$4502$lcssa;$$9 = $$3484$lcssa;
   }
   $270 = (0 - ($$5521))|0;
   $271 = ($$8506>>>0)>($$9>>>0);
   L109: do {
    if ($271) {
     $$9507625 = $$8506;
     while(1) {
      $273 = ((($$9507625)) + -4|0);
      $274 = HEAP32[$273>>2]|0;
      $275 = ($274|0)==(0);
      if (!($275)) {
       $$9507$lcssa = $$9507625;$$lcssa583 = 1;
       break L109;
      }
      $272 = ($273>>>0)>($$9>>>0);
      if ($272) {
       $$9507625 = $273;
      } else {
       $$9507$lcssa = $273;$$lcssa583 = 0;
       break;
      }
     }
    } else {
     $$9507$lcssa = $$8506;$$lcssa583 = 0;
    }
   } while(0);
   do {
    if ($211) {
     $not$ = $212 ^ 1;
     $276 = $not$&1;
     $spec$select548 = (($spec$select539) + ($276))|0;
     $277 = ($spec$select548|0)>($$5521|0);
     $278 = ($$5521|0)>(-5);
     $or$cond6 = $277 & $278;
     if ($or$cond6) {
      $279 = (($5) + -1)|0;
      $$neg571 = (($spec$select548) + -1)|0;
      $280 = (($$neg571) - ($$5521))|0;
      $$0479 = $279;$$2476 = $280;
     } else {
      $281 = (($5) + -2)|0;
      $282 = (($spec$select548) + -1)|0;
      $$0479 = $281;$$2476 = $282;
     }
     $283 = $4 & 8;
     $284 = ($283|0)==(0);
     if ($284) {
      if ($$lcssa583) {
       $285 = ((($$9507$lcssa)) + -4|0);
       $286 = HEAP32[$285>>2]|0;
       $287 = ($286|0)==(0);
       if ($287) {
        $$2531 = 9;
       } else {
        $288 = (($286>>>0) % 10)&-1;
        $289 = ($288|0)==(0);
        if ($289) {
         $$1530621 = 0;$$3535620 = 10;
         while(1) {
          $290 = ($$3535620*10)|0;
          $291 = (($$1530621) + 1)|0;
          $292 = (($286>>>0) % ($290>>>0))&-1;
          $293 = ($292|0)==(0);
          if ($293) {
           $$1530621 = $291;$$3535620 = $290;
          } else {
           $$2531 = $291;
           break;
          }
         }
        } else {
         $$2531 = 0;
        }
       }
      } else {
       $$2531 = 9;
      }
      $294 = $$0479 | 32;
      $295 = ($294|0)==(102);
      $296 = $$9507$lcssa;
      $297 = (($296) - ($132))|0;
      $298 = $297 >> 2;
      $299 = ($298*9)|0;
      $300 = (($299) + -9)|0;
      if ($295) {
       $301 = (($300) - ($$2531))|0;
       $302 = ($301|0)>(0);
       $spec$select549 = $302 ? $301 : 0;
       $303 = ($$2476|0)<($spec$select549|0);
       $spec$select562 = $303 ? $$2476 : $spec$select549;
       $$1480 = $$0479;$$3477 = $spec$select562;
       break;
      } else {
       $304 = (($300) + ($$5521))|0;
       $305 = (($304) - ($$2531))|0;
       $306 = ($305|0)>(0);
       $spec$select551 = $306 ? $305 : 0;
       $307 = ($$2476|0)<($spec$select551|0);
       $spec$select563 = $307 ? $$2476 : $spec$select551;
       $$1480 = $$0479;$$3477 = $spec$select563;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;
     }
    } else {
     $$1480 = $5;$$3477 = $spec$select539;
    }
   } while(0);
   $308 = ($$3477|0)!=(0);
   $309 = $4 >>> 3;
   $$lobit = $309 & 1;
   $310 = $308 ? 1 : $$lobit;
   $311 = $$1480 | 32;
   $312 = ($311|0)==(102);
   if ($312) {
    $313 = ($$5521|0)>(0);
    $314 = $313 ? $$5521 : 0;
    $$2515 = 0;$$pn = $314;
   } else {
    $315 = ($$5521|0)<(0);
    $316 = $315 ? $270 : $$5521;
    $317 = ($316|0)<(0);
    $318 = $317 << 31 >> 31;
    $319 = (_fmt_u($316,$318,$11)|0);
    $320 = $11;
    $321 = $319;
    $322 = (($320) - ($321))|0;
    $323 = ($322|0)<(2);
    if ($323) {
     $$1514614 = $319;
     while(1) {
      $324 = ((($$1514614)) + -1|0);
      HEAP8[$324>>0] = 48;
      $325 = $324;
      $326 = (($320) - ($325))|0;
      $327 = ($326|0)<(2);
      if ($327) {
       $$1514614 = $324;
      } else {
       $$1514$lcssa = $324;
       break;
      }
     }
    } else {
     $$1514$lcssa = $319;
    }
    $328 = $$5521 >> 31;
    $329 = $328 & 2;
    $330 = (($329) + 43)|0;
    $331 = $330&255;
    $332 = ((($$1514$lcssa)) + -1|0);
    HEAP8[$332>>0] = $331;
    $333 = $$1480&255;
    $334 = ((($$1514$lcssa)) + -2|0);
    HEAP8[$334>>0] = $333;
    $335 = $334;
    $336 = (($320) - ($335))|0;
    $$2515 = $334;$$pn = $336;
   }
   $337 = (($$0522) + 1)|0;
   $338 = (($337) + ($$3477))|0;
   $$1528 = (($338) + ($310))|0;
   $339 = (($$1528) + ($$pn))|0;
   _pad_670($0,32,$2,$339,$4);
   _out($0,$$0523,$$0522);
   $340 = $4 ^ 65536;
   _pad_670($0,48,$2,$339,$340);
   if ($312) {
    $341 = ($$9>>>0)>($$0498>>>0);
    $spec$select554 = $341 ? $$0498 : $$9;
    $342 = ((($8)) + 9|0);
    $343 = $342;
    $344 = ((($8)) + 8|0);
    $$5493603 = $spec$select554;
    while(1) {
     $345 = HEAP32[$$5493603>>2]|0;
     $346 = (_fmt_u($345,0,$342)|0);
     $347 = ($$5493603|0)==($spec$select554|0);
     if ($347) {
      $353 = ($346|0)==($342|0);
      if ($353) {
       HEAP8[$344>>0] = 48;
       $$1465 = $344;
      } else {
       $$1465 = $346;
      }
     } else {
      $348 = ($346>>>0)>($8>>>0);
      if ($348) {
       $349 = $346;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0464599 = $346;
       while(1) {
        $351 = ((($$0464599)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0464599 = $351;
        } else {
         $$1465 = $351;
         break;
        }
       }
      } else {
       $$1465 = $346;
      }
     }
     $354 = $$1465;
     $355 = (($343) - ($354))|0;
     _out($0,$$1465,$355);
     $356 = ((($$5493603)) + 4|0);
     $357 = ($356>>>0)>($$0498>>>0);
     if ($357) {
      break;
     } else {
      $$5493603 = $356;
     }
    }
    $$not = $308 ^ 1;
    $358 = $4 & 8;
    $359 = ($358|0)==(0);
    $or$cond556 = $359 & $$not;
    if (!($or$cond556)) {
     _out($0,143379,1);
    }
    $360 = ($356>>>0)<($$9507$lcssa>>>0);
    $361 = ($$3477|0)>(0);
    $362 = $360 & $361;
    if ($362) {
     $$4478594 = $$3477;$$6494593 = $356;
     while(1) {
      $363 = HEAP32[$$6494593>>2]|0;
      $364 = (_fmt_u($363,0,$342)|0);
      $365 = ($364>>>0)>($8>>>0);
      if ($365) {
       $366 = $364;
       $367 = (($366) - ($9))|0;
       _memset(($8|0),48,($367|0))|0;
       $$0463588 = $364;
       while(1) {
        $368 = ((($$0463588)) + -1|0);
        $369 = ($368>>>0)>($8>>>0);
        if ($369) {
         $$0463588 = $368;
        } else {
         $$0463$lcssa = $368;
         break;
        }
       }
      } else {
       $$0463$lcssa = $364;
      }
      $370 = ($$4478594|0)<(9);
      $371 = $370 ? $$4478594 : 9;
      _out($0,$$0463$lcssa,$371);
      $372 = ((($$6494593)) + 4|0);
      $373 = (($$4478594) + -9)|0;
      $374 = ($372>>>0)<($$9507$lcssa>>>0);
      $375 = ($$4478594|0)>(9);
      $376 = $374 & $375;
      if ($376) {
       $$4478594 = $373;$$6494593 = $372;
      } else {
       $$4478$lcssa = $373;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $377 = (($$4478$lcssa) + 9)|0;
    _pad_670($0,48,$377,9,0);
   } else {
    $378 = ((($$9)) + 4|0);
    $spec$select557 = $$lcssa583 ? $$9507$lcssa : $378;
    $379 = ($$9>>>0)<($spec$select557>>>0);
    $380 = ($$3477|0)>(-1);
    $381 = $379 & $380;
    if ($381) {
     $382 = ((($8)) + 9|0);
     $383 = $4 & 8;
     $384 = ($383|0)==(0);
     $385 = $382;
     $386 = (0 - ($9))|0;
     $387 = ((($8)) + 8|0);
     $$5609 = $$3477;$$7495608 = $$9;
     while(1) {
      $388 = HEAP32[$$7495608>>2]|0;
      $389 = (_fmt_u($388,0,$382)|0);
      $390 = ($389|0)==($382|0);
      if ($390) {
       HEAP8[$387>>0] = 48;
       $$0 = $387;
      } else {
       $$0 = $389;
      }
      $391 = ($$7495608|0)==($$9|0);
      do {
       if ($391) {
        $395 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $396 = ($$5609|0)<(1);
        $or$cond559 = $384 & $396;
        if ($or$cond559) {
         $$2 = $395;
         break;
        }
        _out($0,143379,1);
        $$2 = $395;
       } else {
        $392 = ($$0>>>0)>($8>>>0);
        if (!($392)) {
         $$2 = $$0;
         break;
        }
        $scevgep711 = (($$0) + ($386)|0);
        $scevgep711712 = $scevgep711;
        _memset(($8|0),48,($scevgep711712|0))|0;
        $$1604 = $$0;
        while(1) {
         $393 = ((($$1604)) + -1|0);
         $394 = ($393>>>0)>($8>>>0);
         if ($394) {
          $$1604 = $393;
         } else {
          $$2 = $393;
          break;
         }
        }
       }
      } while(0);
      $397 = $$2;
      $398 = (($385) - ($397))|0;
      $399 = ($$5609|0)>($398|0);
      $400 = $399 ? $398 : $$5609;
      _out($0,$$2,$400);
      $401 = (($$5609) - ($398))|0;
      $402 = ((($$7495608)) + 4|0);
      $403 = ($402>>>0)<($spec$select557>>>0);
      $404 = ($401|0)>(-1);
      $405 = $403 & $404;
      if ($405) {
       $$5609 = $401;$$7495608 = $402;
      } else {
       $$5$lcssa = $401;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $406 = (($$5$lcssa) + 18)|0;
    _pad_670($0,48,$406,18,0);
    $407 = $11;
    $408 = $$2515;
    $409 = (($407) - ($408))|0;
    _out($0,$$2515,$409);
   }
   $410 = $4 ^ 8192;
   _pad_670($0,32,$2,$339,$410);
   $$sink757 = $339;
  }
 } while(0);
 $411 = ($$sink757|0)<($2|0);
 $$560 = $411 ? $2 : $$sink757;
 STACKTOP = sp;return ($$560|0);
}
function ___DOUBLE_BITS_671($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_447()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_447() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (120832|0);
}
function ___pthread_self_107() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $2 = (115088 + ($$016)|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 4;
   break;
  }
  $6 = (($$016) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$115$ph = 87;
   label = 5;
   break;
  } else {
   $$016 = $6;
  }
 }
 if ((label|0) == 4) {
  $8 = ($$016|0)==(0);
  if ($8) {
   $$012$lcssa = 115184;
  } else {
   $$115$ph = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $$01214 = 115184;$$115 = $$115$ph;
  while(1) {
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)==(0|0);
 $8 = $7 ? $0 : $$0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      if ($62) {
       $$4 = 0;
       break L1;
      }
      $$191 = $63 ? $$090 : $26;
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$090 = $$191;$$094 = $$195;
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $spec$select = $61 ? $57 : 0;
      $$4 = $spec$select;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $spec$select = $2 ? $0 : $3;
 return ($spec$select|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03846 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (ftCall_iiii($16|0,$2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)<(0);
   $21 = ($1|0)==(0);
   $or$cond = $20 | $21;
   L10: do {
    if ($or$cond) {
     $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
    } else {
     $$03846 = $1;
     while(1) {
      $23 = (($$03846) + -1)|0;
      $24 = (($0) + ($23)|0);
      $25 = HEAP8[$24>>0]|0;
      $26 = ($25<<24>>24)==(10);
      if ($26) {
       break;
      }
      $22 = ($23|0)==(0);
      if ($22) {
       $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
       break L10;
      } else {
       $$03846 = $23;
      }
     }
     $27 = ((($2)) + 36|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (ftCall_iiii($28|0,$2,$0,$$03846)|0);
     $30 = ($29>>>0)<($$03846>>>0);
     if ($30) {
      $$1 = $29;
      break L5;
     }
     $31 = (($0) + ($$03846)|0);
     $$042 = (($1) - ($$03846))|0;
     $$pre48 = HEAP32[$9>>2]|0;
     $$139 = $$03846;$$141 = $31;$$143 = $$042;$32 = $$pre48;
    }
   } while(0);
   (_memcpy(($32|0),($$141|0),($$143|0))|0);
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + ($$143)|0);
   HEAP32[$9>>2] = $34;
   $35 = (($$139) + ($$143))|0;
   $$1 = $35;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $spec$select = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($spec$select|0))|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($spec$select)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select21 = 0.0, $spec$select22 = 0, $spec$select23 = 0.0, $spec$store$select = 0, $spec$store$select1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $spec$store$select = $8 ? $7 : 1023;
  $spec$select = $5 ? $spec$store$select : $4;
  $spec$select21 = $5 ? $6 : $3;
  $$0 = $spec$select21;$$020 = $spec$select;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $spec$store$select1 = $15 ? $14 : -1022;
   $spec$select22 = $12 ? $spec$store$select1 : $11;
   $spec$select23 = $12 ? $13 : $10;
   $$0 = $spec$select23;$$020 = $spec$select22;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _strcasecmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$01718 = 0, $$019 = 0, $$pre$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = ($2<<24>>24)==(0);
 L1: do {
  if ($3) {
   $$0$lcssa = $1;$21 = 0;
  } else {
   $4 = $2&255;
   $$01718 = $0;$$019 = $1;$8 = $2;$9 = $4;
   while(1) {
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($5<<24>>24)==(0);
    if ($6) {
     $$0$lcssa = $$019;$21 = $8;
     break L1;
    }
    $7 = ($8<<24>>24)==($5<<24>>24);
    if (!($7)) {
     $10 = (_tolower($9)|0);
     $11 = HEAP8[$$019>>0]|0;
     $12 = $11&255;
     $13 = (_tolower($12)|0);
     $14 = ($10|0)==($13|0);
     if (!($14)) {
      break;
     }
    }
    $15 = ((($$01718)) + 1|0);
    $16 = ((($$019)) + 1|0);
    $17 = HEAP8[$15>>0]|0;
    $18 = $17&255;
    $19 = ($17<<24>>24)==(0);
    if ($19) {
     $$0$lcssa = $16;$21 = 0;
     break L1;
    } else {
     $$01718 = $15;$$019 = $16;$8 = $17;$9 = $18;
    }
   }
   $$pre$pre = HEAP8[$$01718>>0]|0;
   $$0$lcssa = $$019;$21 = $$pre$pre;
  }
 } while(0);
 $20 = $21&255;
 $22 = (_tolower($20)|0);
 $23 = HEAP8[$$0$lcssa>>0]|0;
 $24 = $23&255;
 $25 = (_tolower($24)|0);
 $26 = (($22) - ($25))|0;
 return ($26|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 5;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = HEAP8[$$01518>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 5;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function ___munmap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = $0;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $3 = (___syscall91(91,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _strchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___strchrnul($0,$1)|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $1&255;
 $5 = ($3<<24>>24)==($4<<24>>24);
 $6 = $5 ? $2 : 0;
 return ($6|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $4 = (_strlen($0)|0);
   $5 = (($0) + ($4)|0);
   $$0 = $5;
  } else {
   $6 = $0;
   $7 = $6 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$030$lcssa = $0;
   } else {
    $9 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($9<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _dummy() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___get_locale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $$neg = 0, $$pre121 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $2 = sp;
 $3 = sp + 256|0;
 $4 = HEAP8[$1>>0]|0;
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $6 = (_getenv((143381|0))|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = HEAP8[$6>>0]|0;
    $9 = ($8<<24>>24)==(0);
    if (!($9)) {
     $$1 = $6;
     break;
    }
   }
   $10 = (116992 + (($0*12)|0)|0);
   $11 = (_getenv(($10|0))|0);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = HEAP8[$11>>0]|0;
    $14 = ($13<<24>>24)==(0);
    if (!($14)) {
     $$1 = $11;
     break;
    }
   }
   $15 = (_getenv((143388|0))|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP8[$15>>0]|0;
    $18 = ($17<<24>>24)==(0);
    if (!($18)) {
     $$1 = $15;
     break;
    }
   }
   $$1 = 143393;
  } else {
   $$1 = $1;
  }
 } while(0);
 $$093118 = 0;
 L13: while(1) {
  $19 = (($$1) + ($$093118)|0);
  $20 = HEAP8[$19>>0]|0;
  switch ($20<<24>>24) {
  case 47: case 0:  {
   $$093$lcssa = $$093118;
   break L13;
   break;
  }
  default: {
  }
  }
  $21 = (($$093118) + 1)|0;
  $22 = ($21>>>0)<(15);
  if ($22) {
   $$093118 = $21;
  } else {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = HEAP8[$$1>>0]|0;
 $24 = ($23<<24>>24)==(46);
 if ($24) {
  $$2122 = 143393;
  label = 15;
 } else {
  $25 = (($$1) + ($$093$lcssa)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)==(0);
  if ($27) {
   $28 = ($23<<24>>24)==(67);
   if ($28) {
    $$2122 = $$1;
    label = 15;
   } else {
    $$2123 = $$1;
    label = 16;
   }
  } else {
   $$2122 = 143393;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $29 = ((($$2122)) + 1|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $$2124 = $$2122;
   label = 18;
  } else {
   $$2123 = $$2122;
   label = 16;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $32 = (_strcmp($$2123,143393)|0);
   $33 = ($32|0)==(0);
   if ($33) {
    $$2124 = $$2123;
    label = 18;
   } else {
    $34 = (_strcmp($$2123,143401)|0);
    $35 = ($34|0)==(0);
    if ($35) {
     $$2124 = $$2123;
     label = 18;
    } else {
     $40 = HEAP32[37397]|0;
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $$094114 = $40;
      while(1) {
       $42 = ((($$094114)) + 8|0);
       $43 = (_strcmp($$2123,$42)|0);
       $44 = ($43|0)==(0);
       if ($44) {
        $$0 = $$094114;
        break L22;
       }
       $45 = ((($$094114)) + 24|0);
       $46 = HEAP32[$45>>2]|0;
       $47 = ($46|0)==(0|0);
       if ($47) {
        break;
       } else {
        $$094114 = $46;
       }
      }
     }
     ___lock((149592|0));
     $48 = HEAP32[37397]|0;
     $49 = ($48|0)==(0|0);
     L32: do {
      if (!($49)) {
       $$195112 = $48;
       while(1) {
        $50 = ((($$195112)) + 8|0);
        $51 = (_strcmp($$2123,$50)|0);
        $52 = ($51|0)==(0);
        if ($52) {
         break;
        }
        $53 = ((($$195112)) + 24|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = ($54|0)==(0|0);
        if ($55) {
         break L32;
        } else {
         $$195112 = $54;
        }
       }
       ___unlock((149592|0));
       $$0 = $$195112;
       break L22;
      }
     } while(0);
     $56 = HEAP32[(149528)>>2]|0;
     $57 = ($56|0)==(0);
     L39: do {
      if ($57) {
       $58 = (_getenv((143407|0))|0);
       $59 = ($58|0)==(0|0);
       if ($59) {
        label = 41;
       } else {
        $60 = HEAP8[$58>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         label = 41;
        } else {
         $62 = (254 - ($$093$lcssa))|0;
         $63 = (($$093$lcssa) + 1)|0;
         $$1100111 = $58;
         while(1) {
          $64 = (___strchrnul($$1100111,58)|0);
          $65 = $64;
          $66 = $$1100111;
          $67 = (($65) - ($66))|0;
          $68 = HEAP8[$64>>0]|0;
          $69 = ($68<<24>>24)!=(0);
          $$neg = $69 << 31 >> 31;
          $70 = (($67) + ($$neg))|0;
          $71 = ($70>>>0)<($62>>>0);
          if ($71) {
           (_memcpy(($2|0),($$1100111|0),($70|0))|0);
           $72 = (($2) + ($70)|0);
           HEAP8[$72>>0] = 47;
           $73 = ((($72)) + 1|0);
           (_memcpy(($73|0),($$2123|0),($$093$lcssa|0))|0);
           $74 = (($63) + ($70))|0;
           $75 = (($2) + ($74)|0);
           HEAP8[$75>>0] = 0;
           $76 = (___map_file(($2|0),($3|0))|0);
           $77 = ($76|0)==(0|0);
           if (!($77)) {
            break;
           }
           $$pre121 = HEAP8[$64>>0]|0;
           $87 = $$pre121;
          } else {
           $87 = $68;
          }
          $86 = ($87<<24>>24)!=(0);
          $88 = $86&1;
          $89 = (($64) + ($88)|0);
          $90 = HEAP8[$89>>0]|0;
          $91 = ($90<<24>>24)==(0);
          if ($91) {
           label = 41;
           break L39;
          } else {
           $$1100111 = $89;
          }
         }
         $78 = (_malloc(28)|0);
         $79 = ($78|0)==(0|0);
         if ($79) {
          $92 = HEAP32[$3>>2]|0;
          (___munmap($76,$92)|0);
          label = 41;
          break;
         } else {
          HEAP32[$78>>2] = $76;
          $80 = HEAP32[$3>>2]|0;
          $81 = ((($78)) + 4|0);
          HEAP32[$81>>2] = $80;
          $82 = ((($78)) + 8|0);
          (_memcpy(($82|0),($$2123|0),($$093$lcssa|0))|0);
          $83 = (($82) + ($$093$lcssa)|0);
          HEAP8[$83>>0] = 0;
          $84 = HEAP32[37397]|0;
          $85 = ((($78)) + 24|0);
          HEAP32[$85>>2] = $84;
          HEAP32[37397] = $78;
          $$4 = $78;
          break;
         }
        }
       }
      } else {
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      $93 = (_malloc(28)|0);
      $94 = ($93|0)==(0|0);
      if ($94) {
       $$4 = $93;
      } else {
       $95 = HEAP32[30105]|0;
       HEAP32[$93>>2] = $95;
       $96 = HEAP32[(120424)>>2]|0;
       $97 = ((($93)) + 4|0);
       HEAP32[$97>>2] = $96;
       $98 = ((($93)) + 8|0);
       (_memcpy(($98|0),($$2123|0),($$093$lcssa|0))|0);
       $99 = (($98) + ($$093$lcssa)|0);
       HEAP8[$99>>0] = 0;
       $100 = HEAP32[37397]|0;
       $101 = ((($93)) + 24|0);
       HEAP32[$101>>2] = $100;
       HEAP32[37397] = $93;
       $$4 = $93;
      }
     }
     $102 = ($$4|0)==(0|0);
     $103 = ($0|0)==(0);
     $or$cond = $103 & $102;
     $spec$select = $or$cond ? 120420 : $$4;
     ___unlock((149592|0));
     $$0 = $spec$select;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   $36 = ($0|0)==(0);
   if ($36) {
    $37 = ((($$2124)) + 1|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)==(46);
    if ($39) {
     $$0 = 120420;
     break;
    }
   }
   $$0 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04956 = 0, $$05055 = 0, $$05253 = 0, $$151 = 0, $$154 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond57 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ($0>>>0)>(6);
 do {
  if ($3) {
   $$0 = 0;
  } else {
   ___lock((149600|0));
   $4 = ($0|0)==(6);
   if (!($4)) {
    $27 = (_setlocale_one_unlocked($0,$1)|0);
    ___unlock((149600|0));
    $$0 = $27;
    break;
   }
   $5 = ($1|0)==(0|0);
   if (!($5)) {
    ;HEAP32[$2>>2]=HEAP32[117072>>2]|0;HEAP32[$2+4>>2]=HEAP32[117072+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[117072+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[117072+12>>2]|0;
    $$04956 = 0;$$05055 = $1;
    while(1) {
     $6 = (___strchrnul($$05055,59)|0);
     $7 = $6;
     $8 = $$05055;
     $9 = (($7) - ($8))|0;
     $10 = ($9|0)<(16);
     if ($10) {
      (_memcpy(($2|0),($$05055|0),($9|0))|0);
      $11 = (($2) + ($9)|0);
      HEAP8[$11>>0] = 0;
      $12 = HEAP8[$6>>0]|0;
      $13 = ($12<<24>>24)==(0);
      $14 = ((($6)) + 1|0);
      $spec$select = $13 ? $$05055 : $14;
      $$151 = $spec$select;
     } else {
      $$151 = $$05055;
     }
     (_setlocale_one_unlocked($$04956,$2)|0);
     $15 = (($$04956) + 1)|0;
     $exitcond57 = ($15|0)==(6);
     if ($exitcond57) {
      break;
     } else {
      $$04956 = $15;$$05055 = $$151;
     }
    }
   }
   $$05253 = 146256;$$154 = 0;
   while(1) {
    $16 = (149560 + ($$154<<2)|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    $19 = ((($17)) + 8|0);
    $20 = $18 ? 143420 : $19;
    $21 = (_strlen($20)|0);
    (_memcpy(($$05253|0),($20|0),($21|0))|0);
    $22 = (($$05253) + ($21)|0);
    HEAP8[$22>>0] = 59;
    $23 = (($21) + 1)|0;
    $24 = (($$05253) + ($23)|0);
    $25 = (($$154) + 1)|0;
    $exitcond = ($25|0)==(6);
    if ($exitcond) {
     break;
    } else {
     $$05253 = $24;$$154 = $25;
    }
   }
   $26 = (($$05253) + ($21)|0);
   HEAP8[$26>>0] = 0;
   ___unlock((149600|0));
   $$0 = 146256;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale_one_unlocked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = (149560 + ($0<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0 = $6;
 } else {
  $3 = (___get_locale($0,$1)|0);
  $4 = (149560 + ($0<<2)|0);
  HEAP32[$4>>2] = $3;
  $$0 = $3;
 }
 $7 = ($$0|0)==(0|0);
 $8 = ((($$0)) + 8|0);
 $9 = $7 ? 143420 : $8;
 return ($9|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$030 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1 = $$0$lcssa;$$128 = $$025$lcssa;
   label = 10;
  } else {
   $$1 = $1;$$128 = $0;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  $31 = HEAP8[$$1>>0]|0;
  HEAP8[$$128>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$030 = $$128;
  } else {
   $$22934 = $$128;$$235 = $$1;
   while(1) {
    $33 = ((($$235)) + 1|0);
    $34 = ((($$22934)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$030 = $34;
     break;
    } else {
     $$22934 = $34;$$235 = $33;
    }
   }
  }
 }
 return ($$030|0);
}
function _ldexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function ___sindf($0) {
 $0 = +$0;
 var $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = Math_fround(0), $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 * $0;
 $2 = $1 * $1;
 $3 = $1 * 2.7183114939898219E-6;
 $4 = $3 + -1.9839334836096632E-4;
 $5 = $1 * $0;
 $6 = $1 * 0.0083333293858894632;
 $7 = $6 + -0.16666666641626524;
 $8 = $5 * $7;
 $9 = $8 + $0;
 $10 = $5 * $2;
 $11 = $10 * $4;
 $12 = $11 + $9;
 $13 = Math_fround($12);
 return (Math_fround($13));
}
function ___cosdf($0) {
 $0 = +$0;
 var $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = Math_fround(0), $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 * $0;
 $2 = $1 * $1;
 $3 = $1 * 2.4390448796277409E-5;
 $4 = $3 + -0.0013886763774609929;
 $5 = $1 * 0.499999997251031;
 $6 = 1.0 - $5;
 $7 = $2 * 0.041666623323739063;
 $8 = $6 + $7;
 $9 = $1 * $2;
 $10 = $9 * $4;
 $11 = $8 + $10;
 $12 = Math_fround($11);
 return (Math_fround($12));
}
function ___rem_pio2_large($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0.0, $$0248$lcssa = 0.0, $$0248336 = 0.0, $$0250 = 0, $$0250278 = 0, $$0250279 = 0, $$0251 = 0, $$0251$in = 0, $$0253 = 0, $$0256 = 0, $$0258373 = 0, $$0263372 = 0, $$0271 = 0, $$0271277 = 0, $$0273$lcssa = 0, $$0273341 = 0, $$0363 = 0.0, $$1$lcssa = 0.0, $$10291 = 0, $$11313 = 0;
 var $$12309 = 0, $$1249 = 0.0, $$1252 = 0, $$1252$ph = 0, $$1254 = 0, $$1254$in = 0, $$1257318 = 0, $$1259362 = 0, $$1264368 = 0, $$1272 = 0, $$1274 = 0, $$1274$ph = 0, $$13303 = 0, $$1354 = 0.0, $$2255 = 0, $$2260335 = 0, $$2265334 = 0, $$2330 = 0.0, $$3261347 = 0, $$3266342 = 0;
 var $$3319 = 0.0, $$4$lcssa = 0.0, $$4262353 = 0, $$4267348 = 0, $$4267348$in = 0, $$4290 = 0.0, $$5$lcssa = 0.0, $$5268361 = 0, $$5268361$in = 0, $$5298 = 0.0, $$6$lcssa = 0.0, $$6269329 = 0, $$6292 = 0.0, $$7$lcssa = 0.0, $$7270324 = 0, $$7304 = 0.0, $$8289 = 0, $$9297 = 0, $$neg = 0, $$neg281 = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert395 = 0, $$pre = 0.0, $$pre396 = 0.0, $$sink = 0, $$sink425 = 0, $$sink427 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0.0;
 var $166 = 0.0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0;
 var $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0.0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0;
 var $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond391 = 0, $exitcond392 = 0, $exitcond393 = 0, $exitcond394 = 0, $or$cond = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $5 = sp + 480|0;
 $6 = sp + 320|0;
 $7 = sp + 160|0;
 $8 = sp;
 $9 = (117088 + ($4<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($3) + -1)|0;
 $12 = (($2) + -3)|0;
 $13 = (($12|0) / 24)&-1;
 $14 = ($13|0)>(0);
 $spec$store$select = $14 ? $13 : 0;
 $$neg = Math_imul($spec$store$select, -24)|0;
 $$neg281 = (($2) + -24)|0;
 $15 = (($$neg281) + ($$neg))|0;
 $16 = (($10) + ($11))|0;
 $17 = ($16|0)<(0);
 if (!($17)) {
  $18 = (($spec$store$select) - ($11))|0;
  $19 = (($10) + ($3))|0;
  $$0258373 = $18;$$0263372 = 0;
  while(1) {
   $20 = ($$0258373|0)<(0);
   if ($20) {
    $25 = 0.0;
   } else {
    $21 = (117104 + ($$0258373<<2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (+($22|0));
    $25 = $23;
   }
   $24 = (($6) + ($$0263372<<3)|0);
   HEAPF64[$24>>3] = $25;
   $26 = (($$0263372) + 1)|0;
   $27 = (($$0258373) + 1)|0;
   $exitcond394 = ($26|0)==($19|0);
   if ($exitcond394) {
    break;
   } else {
    $$0258373 = $27;$$0263372 = $26;
   }
  }
 }
 $28 = ($3|0)>(0);
 $$1264368 = 0;
 while(1) {
  if ($28) {
   $29 = (($$1264368) + ($11))|0;
   $$0363 = 0.0;$$1259362 = 0;
   while(1) {
    $30 = (($0) + ($$1259362<<3)|0);
    $31 = +HEAPF64[$30>>3];
    $32 = (($29) - ($$1259362))|0;
    $33 = (($6) + ($32<<3)|0);
    $34 = +HEAPF64[$33>>3];
    $35 = $31 * $34;
    $36 = $$0363 + $35;
    $37 = (($$1259362) + 1)|0;
    $exitcond393 = ($37|0)==($3|0);
    if ($exitcond393) {
     $$0$lcssa = $36;
     break;
    } else {
     $$0363 = $36;$$1259362 = $37;
    }
   }
  } else {
   $$0$lcssa = 0.0;
  }
  $38 = (($8) + ($$1264368<<3)|0);
  HEAPF64[$38>>3] = $$0$lcssa;
  $39 = (($$1264368) + 1)|0;
  $40 = ($$1264368|0)<($10|0);
  if ($40) {
   $$1264368 = $39;
  } else {
   break;
  }
 }
 $41 = ($15|0)>(0);
 $42 = (24 - ($15))|0;
 $43 = (23 - ($15))|0;
 $44 = ($15|0)==(0);
 $45 = ($3|0)>(0);
 $$0253 = $10;
 while(1) {
  $46 = (($8) + ($$0253<<3)|0);
  $47 = +HEAPF64[$46>>3];
  $48 = ($$0253|0)>(0);
  if ($48) {
   $$0248336 = $47;$$2260335 = $$0253;$$2265334 = 0;
   while(1) {
    $49 = $$0248336 * 5.9604644775390625E-8;
    $50 = (~~(($49)));
    $51 = (+($50|0));
    $52 = $51 * 16777216.0;
    $53 = $$0248336 - $52;
    $54 = (~~(($53)));
    $55 = (($5) + ($$2265334<<2)|0);
    HEAP32[$55>>2] = $54;
    $56 = (($$2260335) + -1)|0;
    $57 = (($8) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $58 + $51;
    $60 = (($$2265334) + 1)|0;
    $61 = ($$2260335|0)>(1);
    if ($61) {
     $$0248336 = $59;$$2260335 = $56;$$2265334 = $60;
    } else {
     $$0248$lcssa = $59;
     break;
    }
   }
  } else {
   $$0248$lcssa = $47;
  }
  $62 = (+_scalbn($$0248$lcssa,$15));
  $63 = $62 * 0.125;
  $64 = (+Math_floor((+$63)));
  $65 = $64 * 8.0;
  $66 = $62 - $65;
  $67 = (~~(($66)));
  $68 = (+($67|0));
  $69 = $66 - $68;
  do {
   if ($41) {
    $70 = (($$0253) + -1)|0;
    $71 = (($5) + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $72 >> $42;
    $74 = (($73) + ($67))|0;
    $75 = $73 << $42;
    $76 = (($72) - ($75))|0;
    HEAP32[$71>>2] = $76;
    $77 = $76 >> $43;
    $$0250 = $77;$$0271 = $74;
    label = 21;
   } else {
    if ($44) {
     $78 = (($$0253) + -1)|0;
     $79 = (($5) + ($78<<2)|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = $80 >> 23;
     $$0250 = $81;$$0271 = $67;
     label = 21;
     break;
    } else {
     $82 = !($69 >= 0.5);
     if ($82) {
      $$0250279 = 0;$$1249 = $69;$$1272 = $67;
      break;
     } else {
      $$0250278 = 2;$$0271277 = $67;
      label = 22;
      break;
     }
    }
   }
  } while(0);
  if ((label|0) == 21) {
   label = 0;
   $83 = ($$0250|0)>(0);
   if ($83) {
    $$0250278 = $$0250;$$0271277 = $$0271;
    label = 22;
   } else {
    $$0250279 = $$0250;$$1249 = $69;$$1272 = $$0271;
   }
  }
  if ((label|0) == 22) {
   label = 0;
   $84 = (($$0271277) + 1)|0;
   if ($48) {
    $$0273341 = 0;$$3266342 = 0;
    while(1) {
     $85 = (($5) + ($$3266342<<2)|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($$0273341|0)==(0);
     if ($87) {
      $88 = ($86|0)==(0);
      if ($88) {
       $$1274 = 0;
      } else {
       $$1274$ph = 1;$$sink425 = 16777216;
       label = 26;
      }
     } else {
      $$1274$ph = $$0273341;$$sink425 = 16777215;
      label = 26;
     }
     if ((label|0) == 26) {
      label = 0;
      $89 = (($$sink425) - ($86))|0;
      HEAP32[$85>>2] = $89;
      $$1274 = $$1274$ph;
     }
     $90 = (($$3266342) + 1)|0;
     $exitcond391 = ($90|0)==($$0253|0);
     if ($exitcond391) {
      $$0273$lcssa = $$1274;
      break;
     } else {
      $$0273341 = $$1274;$$3266342 = $90;
     }
    }
   } else {
    $$0273$lcssa = 0;
   }
   L44: do {
    if ($41) {
     switch ($15|0) {
     case 1:  {
      $91 = (($$0253) + -1)|0;
      $92 = (($5) + ($91<<2)|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = $93 & 8388607;
      HEAP32[$92>>2] = $94;
      break L44;
      break;
     }
     case 2:  {
      $95 = (($$0253) + -1)|0;
      $96 = (($5) + ($95<<2)|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = $97 & 4194303;
      HEAP32[$96>>2] = $98;
      break L44;
      break;
     }
     default: {
      break L44;
     }
     }
    }
   } while(0);
   $99 = ($$0250278|0)==(2);
   if ($99) {
    $100 = 1.0 - $69;
    $101 = ($$0273$lcssa|0)==(0);
    if ($101) {
     $$0250279 = 2;$$1249 = $100;$$1272 = $84;
    } else {
     $102 = (+_scalbn(1.0,$15));
     $103 = $100 - $102;
     $$0250279 = 2;$$1249 = $103;$$1272 = $84;
    }
   } else {
    $$0250279 = $$0250278;$$1249 = $69;$$1272 = $84;
   }
  }
  $104 = $$1249 == 0.0;
  if (!($104)) {
   label = 49;
   break;
  }
  $105 = ($$0253|0)>($10|0);
  if ($105) {
   $$3261347 = 0;$$4267348$in = $$0253;
   while(1) {
    $$4267348 = (($$4267348$in) + -1)|0;
    $106 = (($5) + ($$4267348<<2)|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = $107 | $$3261347;
    $109 = ($$4267348|0)>($10|0);
    if ($109) {
     $$3261347 = $108;$$4267348$in = $$4267348;
    } else {
     break;
    }
   }
   $110 = ($108|0)==(0);
   if (!($110)) {
    label = 41;
    break;
   }
  }
  $$0256 = 1;
  while(1) {
   $111 = (($10) - ($$0256))|0;
   $112 = (($5) + ($111<<2)|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ($113|0)==(0);
   $115 = (($$0256) + 1)|0;
   if ($114) {
    $$0256 = $115;
   } else {
    break;
   }
  }
  $116 = (($$0256) + ($$0253))|0;
  $$5268361$in = $$0253;
  while(1) {
   $$5268361 = (($$5268361$in) + 1)|0;
   $117 = (($$5268361) + ($spec$store$select))|0;
   $118 = (117104 + ($117<<2)|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (+($119|0));
   $121 = (($$5268361$in) + ($3))|0;
   $122 = (($6) + ($121<<3)|0);
   HEAPF64[$122>>3] = $120;
   if ($45) {
    $$1354 = 0.0;$$4262353 = 0;
    while(1) {
     $123 = (($0) + ($$4262353<<3)|0);
     $124 = +HEAPF64[$123>>3];
     $125 = (($121) - ($$4262353))|0;
     $126 = (($6) + ($125<<3)|0);
     $127 = +HEAPF64[$126>>3];
     $128 = $124 * $127;
     $129 = $$1354 + $128;
     $130 = (($$4262353) + 1)|0;
     $exitcond392 = ($130|0)==($3|0);
     if ($exitcond392) {
      $$1$lcssa = $129;
      break;
     } else {
      $$1354 = $129;$$4262353 = $130;
     }
    }
   } else {
    $$1$lcssa = 0.0;
   }
   $131 = (($8) + ($$5268361<<3)|0);
   HEAPF64[$131>>3] = $$1$lcssa;
   $132 = ($$5268361|0)<($116|0);
   if ($132) {
    $$5268361$in = $$5268361;
   } else {
    break;
   }
  }
  $$0253 = $116;
 }
 if ((label|0) == 41) {
  $$0251$in = $15;$$1254$in = $$0253;
  while(1) {
   $$0251 = (($$0251$in) + -24)|0;
   $$1254 = (($$1254$in) + -1)|0;
   $133 = (($5) + ($$1254<<2)|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ($134|0)==(0);
   if ($135) {
    $$0251$in = $$0251;$$1254$in = $$1254;
   } else {
    $$1252 = $$0251;$$2255 = $$1254;
    break;
   }
  }
 }
 else if ((label|0) == 49) {
  $136 = (0 - ($15))|0;
  $137 = (+_scalbn($$1249,$136));
  $138 = !($137 >= 16777216.0);
  if ($138) {
   $148 = (~~(($137)));
   $$1252$ph = $15;$$sink = $148;$$sink427 = $$0253;
  } else {
   $139 = $137 * 5.9604644775390625E-8;
   $140 = (~~(($139)));
   $141 = (+($140|0));
   $142 = $141 * 16777216.0;
   $143 = $137 - $142;
   $144 = (~~(($143)));
   $145 = (($5) + ($$0253<<2)|0);
   HEAP32[$145>>2] = $144;
   $146 = (($$0253) + 1)|0;
   $147 = (($$neg) + ($2))|0;
   $$1252$ph = $147;$$sink = $140;$$sink427 = $146;
  }
  $149 = (($5) + ($$sink427<<2)|0);
  HEAP32[$149>>2] = $$sink;
  $$1252 = $$1252$ph;$$2255 = $$sink427;
 }
 $150 = (+_scalbn(1.0,$$1252));
 $151 = ($$2255|0)>(-1);
 if ($151) {
  $$2330 = $150;$$6269329 = $$2255;
  while(1) {
   $152 = (($5) + ($$6269329<<2)|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = (+($153|0));
   $155 = $$2330 * $154;
   $156 = (($8) + ($$6269329<<3)|0);
   HEAPF64[$156>>3] = $155;
   $157 = $$2330 * 5.9604644775390625E-8;
   $158 = (($$6269329) + -1)|0;
   $159 = ($$6269329|0)>(0);
   if ($159) {
    $$2330 = $157;$$6269329 = $158;
   } else {
    break;
   }
  }
  if ($151) {
   $$7270324 = $$2255;
   while(1) {
    $160 = (($$2255) - ($$7270324))|0;
    $$1257318 = 0;$$3319 = 0.0;
    while(1) {
     $161 = (117376 + ($$1257318<<3)|0);
     $162 = +HEAPF64[$161>>3];
     $163 = (($$1257318) + ($$7270324))|0;
     $164 = (($8) + ($163<<3)|0);
     $165 = +HEAPF64[$164>>3];
     $166 = $162 * $165;
     $167 = $$3319 + $166;
     $168 = (($$1257318) + 1)|0;
     $169 = ($$1257318|0)>=($10|0);
     $170 = ($$1257318>>>0)>=($160>>>0);
     $or$cond = $169 | $170;
     if ($or$cond) {
      break;
     } else {
      $$1257318 = $168;$$3319 = $167;
     }
    }
    $171 = (($7) + ($160<<3)|0);
    HEAPF64[$171>>3] = $167;
    $172 = (($$7270324) + -1)|0;
    $173 = ($$7270324|0)>(0);
    if ($173) {
     $$7270324 = $172;
    } else {
     break;
    }
   }
  }
 }
 L93: do {
  switch ($4|0) {
  case 0:  {
   if ($151) {
    $$4290 = 0.0;$$8289 = $$2255;
    while(1) {
     $174 = (($7) + ($$8289<<3)|0);
     $175 = +HEAPF64[$174>>3];
     $176 = $$4290 + $175;
     $177 = (($$8289) + -1)|0;
     $178 = ($$8289|0)>(0);
     if ($178) {
      $$4290 = $176;$$8289 = $177;
     } else {
      $$4$lcssa = $176;
      break;
     }
    }
   } else {
    $$4$lcssa = 0.0;
   }
   $179 = ($$0250279|0)==(0);
   $180 = - $$4$lcssa;
   $181 = $179 ? $$4$lcssa : $180;
   HEAPF64[$1>>3] = $181;
   break;
  }
  case 2: case 1:  {
   if ($151) {
    $$5298 = 0.0;$$9297 = $$2255;
    while(1) {
     $182 = (($7) + ($$9297<<3)|0);
     $183 = +HEAPF64[$182>>3];
     $184 = $$5298 + $183;
     $185 = (($$9297) + -1)|0;
     $186 = ($$9297|0)>(0);
     if ($186) {
      $$5298 = $184;$$9297 = $185;
     } else {
      $$5$lcssa = $184;
      break;
     }
    }
   } else {
    $$5$lcssa = 0.0;
   }
   $187 = ($$0250279|0)==(0);
   $188 = - $$5$lcssa;
   $189 = $187 ? $$5$lcssa : $188;
   HEAPF64[$1>>3] = $189;
   $190 = +HEAPF64[$7>>3];
   $191 = $190 - $$5$lcssa;
   $192 = ($$2255|0)<(1);
   if ($192) {
    $$6$lcssa = $191;
   } else {
    $$10291 = 1;$$6292 = $191;
    while(1) {
     $193 = (($7) + ($$10291<<3)|0);
     $194 = +HEAPF64[$193>>3];
     $195 = $$6292 + $194;
     $196 = (($$10291) + 1)|0;
     $exitcond = ($$10291|0)==($$2255|0);
     if ($exitcond) {
      $$6$lcssa = $195;
      break;
     } else {
      $$10291 = $196;$$6292 = $195;
     }
    }
   }
   $197 = - $$6$lcssa;
   $198 = $187 ? $$6$lcssa : $197;
   $199 = ((($1)) + 8|0);
   HEAPF64[$199>>3] = $198;
   break;
  }
  case 3:  {
   $200 = ($$2255|0)>(0);
   if ($200) {
    $$phi$trans$insert = (($7) + ($$2255<<3)|0);
    $$pre = +HEAPF64[$$phi$trans$insert>>3];
    $$11313 = $$2255;$206 = $$pre;
    while(1) {
     $201 = (($$11313) + -1)|0;
     $202 = (($7) + ($201<<3)|0);
     $203 = +HEAPF64[$202>>3];
     $204 = (($7) + ($$11313<<3)|0);
     $205 = $203 + $206;
     $207 = $203 - $205;
     $208 = $206 + $207;
     HEAPF64[$204>>3] = $208;
     HEAPF64[$202>>3] = $205;
     $209 = ($$11313|0)>(1);
     if ($209) {
      $$11313 = $201;$206 = $205;
     } else {
      break;
     }
    }
    $210 = ($$2255|0)>(1);
    if ($210) {
     $$phi$trans$insert395 = (($7) + ($$2255<<3)|0);
     $$pre396 = +HEAPF64[$$phi$trans$insert395>>3];
     $$12309 = $$2255;$216 = $$pre396;
     while(1) {
      $211 = (($$12309) + -1)|0;
      $212 = (($7) + ($211<<3)|0);
      $213 = +HEAPF64[$212>>3];
      $214 = (($7) + ($$12309<<3)|0);
      $215 = $213 + $216;
      $217 = $213 - $215;
      $218 = $216 + $217;
      HEAPF64[$214>>3] = $218;
      HEAPF64[$212>>3] = $215;
      $219 = ($$12309|0)>(2);
      if ($219) {
       $$12309 = $211;$216 = $215;
      } else {
       break;
      }
     }
     if ($210) {
      $$13303 = $$2255;$$7304 = 0.0;
      while(1) {
       $220 = (($7) + ($$13303<<3)|0);
       $221 = +HEAPF64[$220>>3];
       $222 = $$7304 + $221;
       $223 = (($$13303) + -1)|0;
       $224 = ($$13303|0)>(2);
       if ($224) {
        $$13303 = $223;$$7304 = $222;
       } else {
        $$7$lcssa = $222;
        break;
       }
      }
     } else {
      $$7$lcssa = 0.0;
     }
    } else {
     $$7$lcssa = 0.0;
    }
   } else {
    $$7$lcssa = 0.0;
   }
   $225 = ($$0250279|0)==(0);
   $226 = +HEAPF64[$7>>3];
   if ($225) {
    HEAPF64[$1>>3] = $226;
    $227 = ((($7)) + 8|0);
    $228 = +HEAPF64[$227>>3];
    $229 = ((($1)) + 8|0);
    HEAPF64[$229>>3] = $228;
    $230 = ((($1)) + 16|0);
    HEAPF64[$230>>3] = $$7$lcssa;
    break L93;
   } else {
    $231 = - $226;
    HEAPF64[$1>>3] = $231;
    $232 = ((($7)) + 8|0);
    $233 = +HEAPF64[$232>>3];
    $234 = - $233;
    $235 = ((($1)) + 8|0);
    HEAPF64[$235>>3] = $234;
    $236 = - $$7$lcssa;
    $237 = ((($1)) + 16|0);
    HEAPF64[$237>>3] = $236;
    break L93;
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $238 = $$1272 & 7;
 STACKTOP = sp;return ($238|0);
}
function ___rem_pio2f($0,$1) {
 $0 = Math_fround($0);
 $1 = $1|0;
 var $$0 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = Math_fround(0), $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $5 = $4 & 2147483647;
 $6 = ($5>>>0)<(1305022427);
 do {
  if ($6) {
   $7 = +$0;
   $8 = $7 * 0.63661977236758138;
   $9 = $8 + 6755399441055744.0;
   $10 = $9 + -6755399441055744.0;
   $11 = (~~(($10)));
   $12 = $10 * 1.5707963109016418;
   $13 = $7 - $12;
   $14 = $10 * 1.5893254773528196E-8;
   $15 = $13 - $14;
   HEAPF64[$1>>3] = $15;
   $$0 = $11;
  } else {
   $16 = ($5>>>0)>(2139095039);
   if ($16) {
    $17 = Math_fround($0 - $0);
    $18 = +$17;
    HEAPF64[$1>>3] = $18;
    $$0 = 0;
    break;
   }
   $19 = $5 >>> 23;
   $20 = (($19) + -150)|0;
   $21 = $20 << 23;
   $22 = (($5) - ($21))|0;
   $23 = (HEAP32[tempDoublePtr>>2]=$22,Math_fround(HEAPF32[tempDoublePtr>>2]));
   $24 = +$23;
   HEAPF64[$2>>3] = $24;
   $25 = (___rem_pio2_large($2,$3,$20,1,0)|0);
   $26 = ($4|0)<(0);
   $27 = +HEAPF64[$3>>3];
   if ($26) {
    $28 = - $27;
    HEAPF64[$1>>3] = $28;
    $29 = (0 - ($25))|0;
    $$0 = $29;
    break;
   } else {
    HEAPF64[$1>>3] = $27;
    $$0 = $25;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___tandf($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0.0, $2 = 0.0, $20 = 0.0, $21 = Math_fround(0), $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $0 * $0;
 $3 = $2 * 0.0094656478494367316;
 $4 = $3 + 0.002974357433599673;
 $5 = $2 * 0.024528318116654728;
 $6 = $5 + 0.053381237844567039;
 $7 = $2 * $2;
 $8 = $2 * $0;
 $9 = $2 * 0.13339200271297674;
 $10 = $9 + 0.3333313950307914;
 $11 = $8 * $10;
 $12 = $11 + $0;
 $13 = $8 * $7;
 $14 = $7 * $4;
 $15 = $6 + $14;
 $16 = $13 * $15;
 $17 = $12 + $16;
 $18 = ($1|0)==(0);
 $19 = -1.0 / $17;
 $20 = $18 ? $17 : $19;
 $21 = Math_fround($20);
 return (Math_fround($21));
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $13 = $11;
  } else {
   ___unlockfile($3);
   $13 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $13 = $9;
 }
 $12 = ($13|0)==($4|0);
 if ($12) {
  $15 = $spec$select;
 } else {
  $14 = (($13>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function ___unlist_locked_file($0) {
 $0 = $0|0;
 var $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 116|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0|0);
  $7 = $5;
  $$pre = ((($0)) + 112|0);
  if (!($6)) {
   $8 = HEAP32[$$pre>>2]|0;
   $9 = ((($5)) + 112|0);
   HEAP32[$9>>2] = $8;
  }
  $10 = HEAP32[$$pre>>2]|0;
  $11 = ($10|0)==(0|0);
  if ($11) {
   $13 = (___pthread_self_606()|0);
   $14 = ((($13)) + 232|0);
   $$sink = $14;
  } else {
   $12 = ((($10)) + 116|0);
   $$sink = $12;
  }
  HEAP32[$$sink>>2] = $7;
 }
 return;
}
function ___pthread_self_606() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _fopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_strchr(143422,$3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = (___errno_location()|0);
  HEAP32[$6>>2] = 22;
  $$0 = 0;
 } else {
  $7 = (___fmodeflags($1)|0);
  $8 = $0;
  $9 = $7 | 32768;
  HEAP32[$vararg_buffer>>2] = $8;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $9;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 438;
  $10 = (___syscall5(5,($vararg_buffer|0))|0);
  $11 = (___syscall_ret($10)|0);
  $12 = ($11|0)<(0);
  if ($12) {
   $$0 = 0;
  } else {
   $13 = $7 & 524288;
   $14 = ($13|0)==(0);
   if (!($14)) {
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 2;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = 1;
    (___syscall221(221,($vararg_buffer3|0))|0);
   }
   $15 = (___fdopen($11,$1)|0);
   $16 = ($15|0)==(0|0);
   if ($16) {
    HEAP32[$vararg_buffer8>>2] = $11;
    (___syscall6(6,($vararg_buffer8|0))|0);
    $$0 = 0;
   } else {
    $$0 = $15;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fmodeflags($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$2 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select13 = 0, $spec$select14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strchr($0,43)|0);
 $2 = ($1|0)==(0|0);
 $3 = HEAP8[$0>>0]|0;
 $4 = ($3<<24>>24)!=(114);
 $$ = $4&1;
 $$0 = $2 ? $$ : 2;
 $5 = (_strchr($0,120)|0);
 $6 = ($5|0)==(0|0);
 $7 = $$0 | 128;
 $spec$select = $6 ? $$0 : $7;
 $8 = (_strchr($0,101)|0);
 $9 = ($8|0)==(0|0);
 $10 = $spec$select | 524288;
 $$2 = $9 ? $spec$select : $10;
 $11 = ($3<<24>>24)==(114);
 $12 = $$2 | 64;
 $spec$select13 = $11 ? $$2 : $12;
 $13 = ($3<<24>>24)==(119);
 $14 = $spec$select13 | 512;
 $$4 = $13 ? $14 : $spec$select13;
 $15 = ($3<<24>>24)==(97);
 $16 = $$4 | 1024;
 $spec$select14 = $15 ? $16 : $$4;
 return ($spec$select14|0);
}
function ___fdopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 56|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3 << 24 >> 24;
 $5 = (_strchr(143422,$4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 22;
  $$0 = 0;
 } else {
  $8 = (_malloc(1156)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   (_memset(($8|0),0,124)|0);
   $10 = (_strchr($1,43)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = HEAP8[$1>>0]|0;
    $13 = ($12<<24>>24)==(114);
    $14 = $13 ? 8 : 4;
    HEAP32[$8>>2] = $14;
   }
   $15 = (_strchr($1,101)|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    HEAP32[$vararg_buffer>>2] = $0;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 2;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1;
    (___syscall221(221,($vararg_buffer|0))|0);
   }
   $17 = HEAP8[$1>>0]|0;
   $18 = ($17<<24>>24)==(97);
   if ($18) {
    HEAP32[$vararg_buffer3>>2] = $0;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 3;
    $19 = (___syscall221(221,($vararg_buffer3|0))|0);
    $20 = $19 & 1024;
    $21 = ($20|0)==(0);
    if ($21) {
     $22 = $19 | 1024;
     HEAP32[$vararg_buffer7>>2] = $0;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = 4;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $22;
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $23 = HEAP32[$8>>2]|0;
    $24 = $23 | 128;
    HEAP32[$8>>2] = $24;
    $31 = $24;
   } else {
    $$pre = HEAP32[$8>>2]|0;
    $31 = $$pre;
   }
   $25 = ((($8)) + 60|0);
   HEAP32[$25>>2] = $0;
   $26 = ((($8)) + 132|0);
   $27 = ((($8)) + 44|0);
   HEAP32[$27>>2] = $26;
   $28 = ((($8)) + 48|0);
   HEAP32[$28>>2] = 1024;
   $29 = ((($8)) + 75|0);
   HEAP8[$29>>0] = -1;
   $30 = $31 & 8;
   $32 = ($30|0)==(0);
   if ($32) {
    $33 = $2;
    HEAP32[$vararg_buffer12>>2] = $0;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = 21523;
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    HEAP32[$vararg_ptr16>>2] = $33;
    $34 = (___syscall54(54,($vararg_buffer12|0))|0);
    $35 = ($34|0)==(0);
    if ($35) {
     HEAP8[$29>>0] = 10;
    }
   }
   $36 = ((($8)) + 32|0);
   HEAP32[$36>>2] = 592;
   $37 = ((($8)) + 36|0);
   HEAP32[$37>>2] = 248;
   $38 = ((($8)) + 40|0);
   HEAP32[$38>>2] = 249;
   $39 = ((($8)) + 12|0);
   HEAP32[$39>>2] = 247;
   $40 = HEAP32[(149524)>>2]|0;
   $41 = ($40|0)==(0);
   if ($41) {
    $42 = ((($8)) + 76|0);
    HEAP32[$42>>2] = -1;
   }
   $43 = (___ofl_add($8)|0);
   $$0 = $8;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___ofl_add($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ofl_lock()|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 56|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 52|0);
  HEAP32[$6>>2] = $0;
 }
 HEAP32[$1>>2] = $0;
 ___ofl_unlock();
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((149608|0));
 return (149616|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((149608|0));
 return;
}
function _fclose($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($0)|0);
  $30 = $4;
 } else {
  $30 = 0;
 }
 ___unlist_locked_file($0);
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 1;
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $8 = (___ofl_lock()|0);
  $9 = ((($0)) + 52|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  $12 = $10;
  $$pre = ((($0)) + 56|0);
  if (!($11)) {
   $13 = HEAP32[$$pre>>2]|0;
   $14 = ((($10)) + 56|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = HEAP32[$$pre>>2]|0;
  $16 = ($15|0)==(0|0);
  $17 = $15;
  if (!($16)) {
   $18 = ((($15)) + 52|0);
   HEAP32[$18>>2] = $12;
  }
  $19 = HEAP32[$8>>2]|0;
  $20 = ($19|0)==($0|0);
  if ($20) {
   HEAP32[$8>>2] = $17;
  }
  ___ofl_unlock();
 }
 $21 = (_fflush($0)|0);
 $22 = ((($0)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (ftCall_ii($23|0,$0)|0);
 $25 = $24 | $21;
 $26 = ((($0)) + 92|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(0|0);
 if (!($28)) {
  _free($27);
 }
 if ($7) {
  $29 = ($30|0)==(0);
  if (!($29)) {
   ___unlockfile($0);
  }
 } else {
  _free($0);
 }
 return ($25|0);
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[30176]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[30176]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $26 = $17;
     } else {
      $26 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $25 = ($26|0)==(0);
     if (!($25)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (ftCall_iiii($7|0,$0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (ftCall_iiii($19|0,$0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _feof($0) {
 $0 = $0|0;
 var $$lobit = 0, $$lobit8 = 0, $$lobit9 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $6 = (___lockfile($0)|0);
  $phitmp = ($6|0)==(0);
  $7 = HEAP32[$0>>2]|0;
  $8 = $7 >>> 4;
  $$lobit = $8 & 1;
  if ($phitmp) {
   $$lobit9 = $$lobit;
  } else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = $4 >>> 4;
  $$lobit8 = $5 & 1;
  $$lobit9 = $$lobit8;
 }
 return ($$lobit9|0);
}
function _fseek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___fseeko($0,$1,$2)|0);
 return ($3|0);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___fseeko($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(-1);
 if ($5) {
  $7 = (___lockfile($0)|0);
  $phitmp = ($7|0)==(0);
  $8 = (___fseeko_unlocked($0,$1,$2)|0);
  if ($phitmp) {
   $9 = $8;
  } else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else {
  $6 = (___fseeko_unlocked($0,$1,$2)|0);
  $9 = $6;
 }
 return ($9|0);
}
function ___fseeko_unlocked($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(1);
 if ($3) {
  $4 = ((($0)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (($1) - ($5))|0;
  $9 = (($8) + ($7))|0;
  $$019 = $9;
 } else {
  $$019 = $1;
 }
 $10 = ((($0)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($11>>>0)>($13>>>0);
 if ($14) {
  $15 = ((($0)) + 36|0);
  $16 = HEAP32[$15>>2]|0;
  (ftCall_iiii($16|0,$0,0,0)|0);
  $17 = HEAP32[$10>>2]|0;
  $18 = ($17|0)==(0|0);
  if ($18) {
   $$0 = -1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $19 = ((($0)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $20 = ((($0)) + 40|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (ftCall_iiii($21|0,$0,$$019,$2)|0);
  $23 = ($22|0)<(0);
  if ($23) {
   $$0 = -1;
  } else {
   $24 = ((($0)) + 8|0);
   HEAP32[$24>>2] = 0;
   $25 = ((($0)) + 4|0);
   HEAP32[$25>>2] = 0;
   $26 = HEAP32[$0>>2]|0;
   $27 = $26 & -17;
   HEAP32[$0>>2] = $27;
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function _strncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpncpy($0,$1,$2)|0);
 return ($0|0);
}
function ___stpncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03754 = 0, $$038$lcssa = 0, $$03867 = 0, $$039$lcssa = 0, $$03966 = 0, $$042$lcssa = 0, $$04265 = 0, $$055 = 0, $$1$lcssa = 0, $$140 = 0, $$143 = 0, $$153 = 0, $$2 = 0, $$24147 = 0, $$24446 = 0, $$345 = 0, $$348 = 0, $$4 = 0;
 var $$lcssa = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond64 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = $3 ^ $4;
 $6 = $5 & 3;
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $8 = $3 & 3;
   $9 = ($8|0)!=(0);
   $10 = ($2|0)!=(0);
   $or$cond64 = $10 & $9;
   if ($or$cond64) {
    $$03867 = $2;$$03966 = $1;$$04265 = $0;
    while(1) {
     $11 = HEAP8[$$03966>>0]|0;
     HEAP8[$$04265>>0] = $11;
     $12 = ($11<<24>>24)==(0);
     if ($12) {
      $$345 = $$04265;$$4 = $$03867;
      break L1;
     }
     $13 = (($$03867) + -1)|0;
     $14 = ((($$03966)) + 1|0);
     $15 = ((($$04265)) + 1|0);
     $16 = $14;
     $17 = $16 & 3;
     $18 = ($17|0)!=(0);
     $19 = ($13|0)!=(0);
     $or$cond = $19 & $18;
     if ($or$cond) {
      $$03867 = $13;$$03966 = $14;$$04265 = $15;
     } else {
      $$038$lcssa = $13;$$039$lcssa = $14;$$042$lcssa = $15;$$lcssa = $19;
      break;
     }
    }
   } else {
    $$038$lcssa = $2;$$039$lcssa = $1;$$042$lcssa = $0;$$lcssa = $10;
   }
   if ($$lcssa) {
    $$pr = HEAP8[$$039$lcssa>>0]|0;
    $20 = ($$pr<<24>>24)==(0);
    if ($20) {
     $$345 = $$042$lcssa;$$4 = $$038$lcssa;
    } else {
     $21 = ($$038$lcssa>>>0)>(3);
     L11: do {
      if ($21) {
       $$03754 = $$042$lcssa;$$055 = $$039$lcssa;$$153 = $$038$lcssa;
       while(1) {
        $22 = HEAP32[$$055>>2]|0;
        $23 = (($22) + -16843009)|0;
        $24 = $22 & -2139062144;
        $25 = $24 ^ -2139062144;
        $26 = $25 & $23;
        $27 = ($26|0)==(0);
        if (!($27)) {
         $$0$lcssa = $$055;$$037$lcssa = $$03754;$$1$lcssa = $$153;
         break L11;
        }
        HEAP32[$$03754>>2] = $22;
        $28 = (($$153) + -4)|0;
        $29 = ((($$055)) + 4|0);
        $30 = ((($$03754)) + 4|0);
        $31 = ($28>>>0)>(3);
        if ($31) {
         $$03754 = $30;$$055 = $29;$$153 = $28;
        } else {
         $$0$lcssa = $29;$$037$lcssa = $30;$$1$lcssa = $28;
         break;
        }
       }
      } else {
       $$0$lcssa = $$039$lcssa;$$037$lcssa = $$042$lcssa;$$1$lcssa = $$038$lcssa;
      }
     } while(0);
     $$140 = $$0$lcssa;$$143 = $$037$lcssa;$$2 = $$1$lcssa;
     label = 13;
    }
   } else {
    $$345 = $$042$lcssa;$$4 = 0;
   }
  } else {
   $$140 = $1;$$143 = $0;$$2 = $2;
   label = 13;
  }
 } while(0);
 L17: do {
  if ((label|0) == 13) {
   $32 = ($$2|0)==(0);
   if ($32) {
    $$345 = $$143;$$4 = 0;
   } else {
    $$24147 = $$140;$$24446 = $$143;$$348 = $$2;
    while(1) {
     $33 = HEAP8[$$24147>>0]|0;
     HEAP8[$$24446>>0] = $33;
     $34 = ($33<<24>>24)==(0);
     if ($34) {
      $$345 = $$24446;$$4 = $$348;
      break L17;
     }
     $35 = (($$348) + -1)|0;
     $36 = ((($$24147)) + 1|0);
     $37 = ((($$24446)) + 1|0);
     $38 = ($35|0)==(0);
     if ($38) {
      $$345 = $37;$$4 = 0;
      break;
     } else {
      $$24147 = $36;$$24446 = $37;$$348 = $35;
     }
    }
   }
  }
 } while(0);
 (_memset(($$345|0),0,($$4|0))|0);
 return ($$345|0);
}
function _strcat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($0) + ($2)|0);
 (_strcpy($3,$1)|0);
 return ($0|0);
}
function _vasprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $4 = (_vsnprintf(0,0,$1,$3)|0);
 $5 = ($4|0)<(0);
 if ($5) {
  $$0 = -1;
 } else {
  $6 = (($4) + 1)|0;
  $7 = (_malloc($6)|0);
  HEAP32[$0>>2] = $7;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   $9 = (_vsnprintf($7,$6,$1,$2)|0);
   $$0 = $9;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)<(0);
 if ($3) {
  label = 3;
 } else {
  $4 = (___lockfile($0)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   label = 3;
  } else {
   $15 = ((($0)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($0)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16>>>0)<($18>>>0);
   if ($19) {
    $20 = ((($16)) + 1|0);
    HEAP32[$15>>2] = $20;
    $21 = HEAP8[$16>>0]|0;
    $22 = $21&255;
    $24 = $22;
   } else {
    $23 = (___uflow($0)|0);
    $24 = $23;
   }
   ___unlockfile($0);
   $$0 = $24;
  }
 }
 do {
  if ((label|0) == 3) {
   $6 = ((($0)) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    HEAP32[$6>>2] = $11;
    $12 = HEAP8[$7>>0]|0;
    $13 = $12&255;
    $$0 = $13;
    break;
   } else {
    $14 = (___uflow($0)|0);
    $$0 = $14;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___ftello($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $5 = (___lockfile($0)|0);
  $phitmp = ($5|0)==(0);
  $6 = (___ftello_unlocked($0)|0);
  if ($phitmp) {
   $7 = $6;
  } else {
   ___unlockfile($0);
   $7 = $6;
  }
 } else {
  $4 = (___ftello_unlocked($0)|0);
  $7 = $4;
 }
 return ($7|0);
}
function ___ftello_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 40|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 128;
 $5 = ($4|0)==(0);
 if ($5) {
  $11 = 1;
 } else {
  $6 = ((($0)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ((($0)) + 28|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($7>>>0)>($9>>>0);
  $phitmp = $10 ? 2 : 1;
  $11 = $phitmp;
 }
 $12 = (ftCall_iiii($2|0,$0,0,$11)|0);
 $13 = ($12|0)<(0);
 if ($13) {
  $$0 = $12;
 } else {
  $14 = ((($0)) + 8|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($0)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($0)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($0)) + 28|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($12) - ($15))|0;
  $23 = (($22) + ($17))|0;
  $24 = (($23) + ($19))|0;
  $25 = (($24) - ($21))|0;
  $$0 = $25;
 }
 return ($$0|0);
}
function _fread($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$054 = 0, $$056 = 0, $$15759 = 0, $$160 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $9 = (___lockfile($3)|0);
  $37 = $9;
 } else {
  $37 = 0;
 }
 $10 = ((($3)) + 74|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 << 24 >> 24;
 $13 = (($12) + 255)|0;
 $14 = $13 | $12;
 $15 = $14&255;
 HEAP8[$10>>0] = $15;
 $16 = ((($3)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($3)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) - ($19))|0;
 $21 = ($20|0)>(0);
 if ($21) {
  $22 = $19;
  $23 = ($20>>>0)<($4>>>0);
  $$ = $23 ? $20 : $4;
  (_memcpy(($0|0),($22|0),($$|0))|0);
  $24 = HEAP32[$18>>2]|0;
  $25 = (($24) + ($$)|0);
  HEAP32[$18>>2] = $25;
  $26 = (($0) + ($$)|0);
  $27 = (($4) - ($$))|0;
  $$054 = $27;$$056 = $26;
 } else {
  $$054 = $4;$$056 = $0;
 }
 $28 = ($$054|0)==(0);
 L7: do {
  if ($28) {
   label = 13;
  } else {
   $29 = ((($3)) + 32|0);
   $$15759 = $$056;$$160 = $$054;
   while(1) {
    $30 = (___toread($3)|0);
    $31 = ($30|0)==(0);
    if (!($31)) {
     break;
    }
    $32 = HEAP32[$29>>2]|0;
    $33 = (ftCall_iiii($32|0,$3,$$15759,$$160)|0);
    $34 = (($33) + 1)|0;
    $35 = ($34>>>0)<(2);
    if ($35) {
     break;
    }
    $40 = (($$160) - ($33))|0;
    $41 = (($$15759) + ($33)|0);
    $42 = ($40|0)==(0);
    if ($42) {
     label = 13;
     break L7;
    } else {
     $$15759 = $41;$$160 = $40;
    }
   }
   $36 = ($37|0)==(0);
   if (!($36)) {
    ___unlockfile($3);
   }
   $38 = (($4) - ($$160))|0;
   $39 = (($38>>>0) / ($1>>>0))&-1;
   $$0 = $39;
  }
 } while(0);
 if ((label|0) == 13) {
  $43 = ($37|0)==(0);
  if ($43) {
   $$0 = $spec$select;
  } else {
   ___unlockfile($3);
   $$0 = $spec$select;
  }
 }
 return ($$0|0);
}
function _ftell($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ftello($0)|0);
 return ($1|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[30144]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function _strcspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01823 = 0, $$019$lcssa$sink = 0, $$01920 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($3<<24>>24)==(0);
 L1: do {
  if ($4) {
   label = 3;
  } else {
   $5 = ((($1)) + 1|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    label = 3;
   } else {
    (_memset(($2|0),0,32)|0);
    $10 = HEAP8[$1>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     $$01823 = $1;$13 = $10;
     while(1) {
      $12 = $13&255;
      $14 = $12 & 31;
      $15 = 1 << $14;
      $16 = $12 >>> 5;
      $17 = (($2) + ($16<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = $18 | $15;
      HEAP32[$17>>2] = $19;
      $20 = ((($$01823)) + 1|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if ($22) {
       break;
      } else {
       $$01823 = $20;$13 = $21;
      }
     }
    }
    $23 = HEAP8[$0>>0]|0;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $$019$lcssa$sink = $0;
    } else {
     $$01920 = $0;$26 = $23;
     while(1) {
      $25 = $26&255;
      $27 = $25 >>> 5;
      $28 = (($2) + ($27<<2)|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = $25 & 31;
      $31 = 1 << $30;
      $32 = $29 & $31;
      $33 = ($32|0)==(0);
      if (!($33)) {
       $$019$lcssa$sink = $$01920;
       break L1;
      }
      $34 = ((($$01920)) + 1|0);
      $35 = HEAP8[$34>>0]|0;
      $36 = ($35<<24>>24)==(0);
      if ($36) {
       $$019$lcssa$sink = $34;
       break;
      } else {
       $$01920 = $34;$26 = $35;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $8 = $3 << 24 >> 24;
  $9 = (___strchrnul($0,$8)|0);
  $$019$lcssa$sink = $9;
 }
 $37 = $$019$lcssa$sink;
 $38 = $0;
 $39 = (($37) - ($38))|0;
 STACKTOP = sp;return ($39|0);
}
function _strpbrk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcspn($0,$1)|0);
 $3 = (($0) + ($2)|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 $6 = $5 ? 0 : $3;
 return ($6|0);
}
function _cosf($0) {
 $0 = Math_fround($0);
 var $$0 = Math_fround(0), $$v = 0.0, $$v21 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0.0, $17 = Math_fround(0), $18 = 0.0, $19 = Math_fround(0), $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0;
 var $25 = Math_fround(0), $26 = Math_fround(0), $27 = 0.0, $28 = 0.0, $29 = Math_fround(0), $3 = 0, $30 = 0.0, $31 = 0.0, $32 = Math_fround(0), $33 = 0, $34 = Math_fround(0), $35 = 0, $36 = 0.0, $37 = Math_fround(0), $38 = 0.0, $39 = 0.0, $4 = 0, $40 = Math_fround(0), $41 = 0.0, $42 = Math_fround(0);
 var $43 = Math_fround(0), $44 = 0.0, $45 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0.0, $8 = Math_fround(0), $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 >>> 31;
 $4 = $2 & 2147483647;
 $5 = ($4>>>0)<(1061752795);
 L1: do {
  if ($5) {
   $6 = ($4>>>0)<(964689920);
   if ($6) {
    $$0 = Math_fround(1.0);
   } else {
    $7 = +$0;
    $8 = (Math_fround(___cosdf($7)));
    $$0 = $8;
   }
  } else {
   $9 = ($4>>>0)<(1081824210);
   if ($9) {
    $10 = ($4>>>0)>(1075235811);
    $11 = ($3|0)!=(0);
    $12 = +$0;
    if ($10) {
     $$v21 = $11 ? 3.1415926535897931 : -3.1415926535897931;
     $13 = $$v21 + $12;
     $14 = (Math_fround(___cosdf($13)));
     $15 = Math_fround(- $14);
     $$0 = $15;
     break;
    }
    if ($11) {
     $16 = $12 + 1.5707963267948966;
     $17 = (Math_fround(___sindf($16)));
     $$0 = $17;
     break;
    } else {
     $18 = 1.5707963267948966 - $12;
     $19 = (Math_fround(___sindf($18)));
     $$0 = $19;
     break;
    }
   }
   $20 = ($4>>>0)<(1088565718);
   if ($20) {
    $21 = ($4>>>0)>(1085271519);
    $22 = ($3|0)!=(0);
    if ($21) {
     $23 = +$0;
     $$v = $22 ? 6.2831853071795862 : -6.2831853071795862;
     $24 = $$v + $23;
     $25 = (Math_fround(___cosdf($24)));
     $$0 = $25;
     break;
    }
    if ($22) {
     $26 = Math_fround(- $0);
     $27 = +$26;
     $28 = $27 + -4.7123889803846897;
     $29 = (Math_fround(___sindf($28)));
     $$0 = $29;
     break;
    } else {
     $30 = +$0;
     $31 = $30 + -4.7123889803846897;
     $32 = (Math_fround(___sindf($31)));
     $$0 = $32;
     break;
    }
   }
   $33 = ($4>>>0)>(2139095039);
   if ($33) {
    $34 = Math_fround($0 - $0);
    $$0 = $34;
    break;
   }
   $35 = (___rem_pio2f($0,$1)|0);
   $trunc = $35&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $36 = +HEAPF64[$1>>3];
    $37 = (Math_fround(___cosdf($36)));
    $$0 = $37;
    break L1;
    break;
   }
   case 1:  {
    $38 = +HEAPF64[$1>>3];
    $39 = - $38;
    $40 = (Math_fround(___sindf($39)));
    $$0 = $40;
    break L1;
    break;
   }
   case 2:  {
    $41 = +HEAPF64[$1>>3];
    $42 = (Math_fround(___cosdf($41)));
    $43 = Math_fround(- $42);
    $$0 = $43;
    break L1;
    break;
   }
   default: {
    $44 = +HEAPF64[$1>>3];
    $45 = (Math_fround(___sindf($44)));
    $$0 = $45;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (Math_fround($$0));
}
function _sinf($0) {
 $0 = Math_fround($0);
 var $$0 = Math_fround(0), $$v = 0.0, $$v21 = 0.0, $$v21$v = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0.0, $17 = Math_fround(0), $18 = 0.0, $19 = Math_fround(0), $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0;
 var $24 = 0.0, $25 = Math_fround(0), $26 = 0.0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = 0.0, $3 = 0, $30 = Math_fround(0), $31 = 0, $32 = Math_fround(0), $33 = 0, $34 = 0.0, $35 = Math_fround(0), $36 = 0.0, $37 = Math_fround(0), $38 = 0.0, $39 = 0.0, $4 = 0, $40 = Math_fround(0), $41 = 0.0;
 var $42 = Math_fround(0), $43 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0.0, $8 = Math_fround(0), $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 >>> 31;
 $4 = $2 & 2147483647;
 $5 = ($4>>>0)<(1061752795);
 L1: do {
  if ($5) {
   $6 = ($4>>>0)<(964689920);
   if ($6) {
    $$0 = $0;
   } else {
    $7 = +$0;
    $8 = (Math_fround(___sindf($7)));
    $$0 = $8;
   }
  } else {
   $9 = ($4>>>0)<(1081824210);
   if ($9) {
    $10 = ($4>>>0)<(1075235812);
    $11 = ($3|0)!=(0);
    $12 = +$0;
    if (!($10)) {
     $$v21$v = $11 ? 3.1415926535897931 : -3.1415926535897931;
     $$v21 = $$v21$v + $12;
     $18 = - $$v21;
     $19 = (Math_fround(___sindf($18)));
     $$0 = $19;
     break;
    }
    if ($11) {
     $13 = $12 + 1.5707963267948966;
     $14 = (Math_fround(___cosdf($13)));
     $15 = Math_fround(- $14);
     $$0 = $15;
     break;
    } else {
     $16 = $12 + -1.5707963267948966;
     $17 = (Math_fround(___cosdf($16)));
     $$0 = $17;
     break;
    }
   }
   $20 = ($4>>>0)<(1088565718);
   if ($20) {
    $21 = ($4>>>0)<(1085271520);
    $22 = ($3|0)!=(0);
    $23 = +$0;
    if (!($21)) {
     $$v = $22 ? 6.2831853071795862 : -6.2831853071795862;
     $29 = $$v + $23;
     $30 = (Math_fround(___sindf($29)));
     $$0 = $30;
     break;
    }
    if ($22) {
     $24 = $23 + 4.7123889803846897;
     $25 = (Math_fround(___cosdf($24)));
     $$0 = $25;
     break;
    } else {
     $26 = $23 + -4.7123889803846897;
     $27 = (Math_fround(___cosdf($26)));
     $28 = Math_fround(- $27);
     $$0 = $28;
     break;
    }
   }
   $31 = ($4>>>0)>(2139095039);
   if ($31) {
    $32 = Math_fround($0 - $0);
    $$0 = $32;
    break;
   }
   $33 = (___rem_pio2f($0,$1)|0);
   $trunc = $33&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $34 = +HEAPF64[$1>>3];
    $35 = (Math_fround(___sindf($34)));
    $$0 = $35;
    break L1;
    break;
   }
   case 1:  {
    $36 = +HEAPF64[$1>>3];
    $37 = (Math_fround(___cosdf($36)));
    $$0 = $37;
    break L1;
    break;
   }
   case 2:  {
    $38 = +HEAPF64[$1>>3];
    $39 = - $38;
    $40 = (Math_fround(___sindf($39)));
    $$0 = $40;
    break L1;
    break;
   }
   default: {
    $41 = +HEAPF64[$1>>3];
    $42 = (Math_fround(___cosdf($41)));
    $43 = Math_fround(- $42);
    $$0 = $43;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (Math_fround($$0));
}
function _tanf($0) {
 $0 = Math_fround($0);
 var $$0 = Math_fround(0), $$v = 0.0, $$v21 = 0.0, $$v22 = 0.0, $$v23 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = Math_fround(0), $15 = 0.0, $16 = Math_fround(0), $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0.0, $21 = 0.0, $22 = Math_fround(0);
 var $23 = 0.0, $24 = Math_fround(0), $25 = 0, $26 = Math_fround(0), $27 = 0, $28 = 0.0, $29 = 0, $3 = 0, $30 = Math_fround(0), $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = Math_fround(0), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 >>> 31;
 $4 = $2 & 2147483647;
 $5 = ($4>>>0)<(1061752795);
 do {
  if ($5) {
   $6 = ($4>>>0)<(964689920);
   if ($6) {
    $$0 = $0;
   } else {
    $7 = +$0;
    $8 = (Math_fround(___tandf($7,0)));
    $$0 = $8;
   }
  } else {
   $9 = ($4>>>0)<(1081824210);
   if ($9) {
    $10 = ($4>>>0)<(1075235812);
    $11 = ($3|0)!=(0);
    $12 = +$0;
    if ($10) {
     $$v23 = $11 ? 1.5707963267948966 : -1.5707963267948966;
     $13 = $$v23 + $12;
     $14 = (Math_fround(___tandf($13,1)));
     $$0 = $14;
     break;
    } else {
     $$v22 = $11 ? 3.1415926535897931 : -3.1415926535897931;
     $15 = $$v22 + $12;
     $16 = (Math_fround(___tandf($15,0)));
     $$0 = $16;
     break;
    }
   }
   $17 = ($4>>>0)<(1088565718);
   if ($17) {
    $18 = ($4>>>0)<(1085271520);
    $19 = ($3|0)!=(0);
    $20 = +$0;
    if ($18) {
     $$v21 = $19 ? 4.7123889803846897 : -4.7123889803846897;
     $21 = $$v21 + $20;
     $22 = (Math_fround(___tandf($21,1)));
     $$0 = $22;
     break;
    } else {
     $$v = $19 ? 6.2831853071795862 : -6.2831853071795862;
     $23 = $$v + $20;
     $24 = (Math_fround(___tandf($23,0)));
     $$0 = $24;
     break;
    }
   } else {
    $25 = ($4>>>0)>(2139095039);
    if ($25) {
     $26 = Math_fround($0 - $0);
     $$0 = $26;
     break;
    } else {
     $27 = (___rem_pio2f($0,$1)|0);
     $28 = +HEAPF64[$1>>3];
     $29 = $27 & 1;
     $30 = (Math_fround(___tandf($28,$29)));
     $$0 = $30;
     break;
    }
   }
  }
 } while(0);
 STACKTOP = sp;return (Math_fround($$0));
}
function _pow($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$0 = 0.0, $$0385 = 0.0, $$0386 = 0.0, $$0387 = 0.0, $$0388 = 0.0, $$0390 = 0.0, $$0391 = 0, $$0392 = 0, $$0392399 = 0, $$0392400 = 0, $$0396 = 0, $$12 = 0.0, $$1394 = 0, $$1397 = 0, $$2 = 0.0, $$3 = 0, $$pre = 0.0, $$sink = 0.0, $$sink410 = 0.0;
 var $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0;
 var $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0;
 var $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0;
 var $172 = 0.0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0.0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;
 var $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0.0, $224 = 0.0, $225 = 0.0;
 var $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $249 = 0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0;
 var $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0;
 var $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $not$ = 0, $or$cond = 0, $or$cond14 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select = 0.0, $spec$select398 = 0, $spec$select402 = 0, $spec$select403 = 0, $spec$select404 = 0.0, $spec$select405 = 0, $spec$select406 = 0;
 var $spec$select407 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & 2147483647;
 $8 = $7 | $4;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = 1.0;
  return (+$$0);
 }
 $10 = ($3|0)==(1072693248);
 $11 = ($2|0)==(0);
 $or$cond = $11 & $10;
 if ($or$cond) {
  $$0 = 1.0;
  return (+$$0);
 }
 $12 = ($6>>>0)>(2146435072);
 if (!($12)) {
  $13 = ($6|0)==(2146435072);
  $14 = ($2|0)!=(0);
  $or$cond3 = $14 & $13;
  $15 = ($7>>>0)>(2146435072);
  $or$cond5 = $or$cond3 | $15;
  if (!($or$cond5)) {
   $16 = ($7|0)==(2146435072);
   $17 = ($4|0)!=(0);
   $or$cond7 = $17 & $16;
   if (!($or$cond7)) {
    $19 = ($3|0)<(0);
    do {
     if ($19) {
      $20 = ($7>>>0)>(1128267775);
      if ($20) {
       $$0392 = 2;
       label = 14;
      } else {
       $21 = ($7>>>0)>(1072693247);
       if ($21) {
        $22 = $7 >>> 20;
        $23 = ($7>>>0)>(1094713343);
        if ($23) {
         $24 = (1075 - ($22))|0;
         $25 = $4 >>> $24;
         $26 = $25 << $24;
         $27 = ($26|0)==($4|0);
         $28 = $25 & 1;
         $29 = (2 - ($28))|0;
         $spec$select402 = $27 ? $29 : 0;
         $$0392 = $spec$select402;
         label = 14;
         break;
        }
        $30 = ($4|0)==(0);
        if ($30) {
         $31 = (1043 - ($22))|0;
         $32 = $7 >>> $31;
         $33 = $32 << $31;
         $34 = ($33|0)==($7|0);
         $35 = $32 & 1;
         $36 = (2 - ($35))|0;
         $spec$select403 = $34 ? $36 : 0;
         $$0392400 = $spec$select403;
         label = 15;
        } else {
         $$0392399 = 0;
        }
       } else {
        $$0392 = 0;
        label = 14;
       }
      }
     } else {
      $$0392 = 0;
      label = 14;
     }
    } while(0);
    if ((label|0) == 14) {
     $37 = ($4|0)==(0);
     if ($37) {
      $$0392400 = $$0392;
      label = 15;
     } else {
      $$0392399 = $$0392;
     }
    }
    if ((label|0) == 15) {
     if ($16) {
      $38 = (($6) + -1072693248)|0;
      $39 = $38 | $2;
      $40 = ($39|0)==(0);
      if ($40) {
       $$0 = 1.0;
       return (+$$0);
      }
      $41 = ($6>>>0)>(1072693247);
      $42 = ($5|0)>(-1);
      if ($41) {
       $43 = $42 ? $1 : 0.0;
       $$0 = $43;
       return (+$$0);
      } else {
       $44 = - $1;
       $45 = $42 ? 0.0 : $44;
       $$0 = $45;
       return (+$$0);
      }
     }
     $46 = ($7|0)==(1072693248);
     if ($46) {
      $47 = ($5|0)>(-1);
      $48 = 1.0 / $0;
      $spec$select404 = $47 ? $0 : $48;
      return (+$spec$select404);
     }
     $49 = ($5|0)==(1073741824);
     if ($49) {
      $50 = $0 * $0;
      $$0 = $50;
      return (+$$0);
     }
     $51 = ($5|0)==(1071644672);
     $52 = ($3|0)>(-1);
     $or$cond14 = $52 & $51;
     if ($or$cond14) {
      $53 = (+Math_sqrt((+$0)));
      $$0 = $53;
      return (+$$0);
     } else {
      $$0392399 = $$0392400;
     }
    }
    $54 = (+Math_abs((+$0)));
    if ($11) {
     $55 = ($6|0)==(0);
     $56 = $6 | 1073741824;
     $57 = ($56|0)==(2146435072);
     $58 = $55 | $57;
     if ($58) {
      $59 = ($5|0)<(0);
      $60 = 1.0 / $54;
      $$0385 = $59 ? $60 : $54;
      if (!($19)) {
       $$0 = $$0385;
       return (+$$0);
      }
      $61 = (($6) + -1072693248)|0;
      $62 = $$0392399 | $61;
      $63 = ($62|0)==(0);
      if (!($63)) {
       $66 = ($$0392399|0)==(1);
       $67 = - $$0385;
       $spec$select = $66 ? $67 : $$0385;
       return (+$spec$select);
      }
      $64 = $$0385 - $$0385;
      $65 = $64 / $64;
      $$0 = $65;
      return (+$$0);
     }
    }
    L55: do {
     if ($19) {
      switch ($$0392399|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $$0390 = -1.0;
       break L55;
       break;
      }
      default: {
       $$0390 = 1.0;
       break L55;
      }
      }
      $68 = $0 - $0;
      $69 = $68 / $68;
      $$0 = $69;
      return (+$$0);
     } else {
      $$0390 = 1.0;
     }
    } while(0);
    $70 = ($7>>>0)>(1105199104);
    do {
     if ($70) {
      $71 = ($7>>>0)>(1139802112);
      if ($71) {
       $72 = ($6>>>0)<(1072693248);
       if ($72) {
        $73 = ($5|0)<(0);
        $$ = $73 ? inf : 0.0;
        $$0 = $$;
        return (+$$0);
       } else {
        $74 = ($5|0)>(0);
        $$12 = $74 ? inf : 0.0;
        $$0 = $$12;
        return (+$$0);
       }
      }
      $75 = ($6>>>0)<(1072693247);
      if ($75) {
       $76 = ($5|0)<(0);
       $77 = $$0390 * 1.0000000000000001E+300;
       $78 = $77 * 1.0000000000000001E+300;
       $79 = $$0390 * 1.0E-300;
       $80 = $79 * 1.0E-300;
       $81 = $76 ? $78 : $80;
       $$0 = $81;
       return (+$$0);
      }
      $82 = ($6>>>0)>(1072693248);
      if (!($82)) {
       $89 = $54 + -1.0;
       $90 = $89 * $89;
       $91 = $89 * 0.25;
       $92 = 0.33333333333333331 - $91;
       $93 = $89 * $92;
       $94 = 0.5 - $93;
       $95 = $90 * $94;
       $96 = $89 * 1.4426950216293335;
       $97 = $89 * 1.9259629911266175E-8;
       $98 = $95 * 1.4426950408889634;
       $99 = $97 - $98;
       $100 = $96 + $99;
       HEAPF64[tempDoublePtr>>3] = $100;$101 = HEAP32[tempDoublePtr>>2]|0;
       $102 = HEAP32[tempDoublePtr+4>>2]|0;
       HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $102;$103 = +HEAPF64[tempDoublePtr>>3];
       $104 = $103 - $96;
       $$0388 = $103;$$sink = $99;$$sink410 = $104;
       break;
      }
      $83 = ($5|0)>(0);
      $84 = $$0390 * 1.0000000000000001E+300;
      $85 = $84 * 1.0000000000000001E+300;
      $86 = $$0390 * 1.0E-300;
      $87 = $86 * 1.0E-300;
      $88 = $83 ? $85 : $87;
      $$0 = $88;
      return (+$$0);
     } else {
      $105 = ($6>>>0)<(1048576);
      $106 = $54 * 9007199254740992.0;
      HEAPF64[tempDoublePtr>>3] = $106;$107 = HEAP32[tempDoublePtr>>2]|0;
      $108 = HEAP32[tempDoublePtr+4>>2]|0;
      $$0396 = $105 ? $108 : $6;
      $$0386 = $105 ? $106 : $54;
      $109 = $$0396 >> 20;
      $110 = $105 ? -1076 : -1023;
      $111 = (($110) + ($109))|0;
      $112 = $$0396 & 1048575;
      $113 = $112 | 1072693248;
      $114 = ($112>>>0)<(235663);
      if ($114) {
       $$0391 = 0;$$1394 = $111;$$1397 = $113;
      } else {
       $115 = ($112>>>0)<(767610);
       $116 = (($113) + -1048576)|0;
       $spec$select405 = $115 ? $113 : $116;
       $not$ = $115 ^ 1;
       $117 = $not$&1;
       $spec$select406 = (($111) + ($117))|0;
       $spec$select407 = $115&1;
       $$0391 = $spec$select407;$$1394 = $spec$select406;$$1397 = $spec$select405;
      }
      HEAPF64[tempDoublePtr>>3] = $$0386;$118 = HEAP32[tempDoublePtr>>2]|0;
      $119 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = $118;HEAP32[tempDoublePtr+4>>2] = $$1397;$120 = +HEAPF64[tempDoublePtr>>3];
      $121 = (117440 + ($$0391<<3)|0);
      $122 = +HEAPF64[$121>>3];
      $123 = $120 - $122;
      $124 = $122 + $120;
      $125 = 1.0 / $124;
      $126 = $123 * $125;
      HEAPF64[tempDoublePtr>>3] = $126;$127 = HEAP32[tempDoublePtr>>2]|0;
      $128 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $128;$129 = +HEAPF64[tempDoublePtr>>3];
      $130 = $$1397 >> 1;
      $131 = $130 | 536870912;
      $132 = (($131) + 524288)|0;
      $133 = $$0391 << 18;
      $134 = (($132) + ($133))|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $134;$135 = +HEAPF64[tempDoublePtr>>3];
      $136 = $135 - $122;
      $137 = $120 - $136;
      $138 = $135 * $129;
      $139 = $123 - $138;
      $140 = $137 * $129;
      $141 = $139 - $140;
      $142 = $125 * $141;
      $143 = $126 * $126;
      $144 = $143 * $143;
      $145 = $143 * 0.20697501780033842;
      $146 = $145 + 0.23066074577556175;
      $147 = $143 * $146;
      $148 = $147 + 0.27272812380853401;
      $149 = $143 * $148;
      $150 = $149 + 0.33333332981837743;
      $151 = $143 * $150;
      $152 = $151 + 0.42857142857855018;
      $153 = $143 * $152;
      $154 = $153 + 0.59999999999999465;
      $155 = $144 * $154;
      $156 = $126 + $129;
      $157 = $156 * $142;
      $158 = $157 + $155;
      $159 = $129 * $129;
      $160 = $159 + 3.0;
      $161 = $160 + $158;
      HEAPF64[tempDoublePtr>>3] = $161;$162 = HEAP32[tempDoublePtr>>2]|0;
      $163 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $163;$164 = +HEAPF64[tempDoublePtr>>3];
      $165 = $164 + -3.0;
      $166 = $165 - $159;
      $167 = $158 - $166;
      $168 = $129 * $164;
      $169 = $142 * $164;
      $170 = $126 * $167;
      $171 = $169 + $170;
      $172 = $168 + $171;
      HEAPF64[tempDoublePtr>>3] = $172;$173 = HEAP32[tempDoublePtr>>2]|0;
      $174 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $174;$175 = +HEAPF64[tempDoublePtr>>3];
      $176 = $175 - $168;
      $177 = $171 - $176;
      $178 = $175 * 0.96179670095443726;
      $179 = $175 * 7.0284616509527583E-9;
      $180 = $177 * 0.96179669392597555;
      $181 = $180 - $179;
      $182 = (117456 + ($$0391<<3)|0);
      $183 = +HEAPF64[$182>>3];
      $184 = $183 + $181;
      $185 = (+($$1394|0));
      $186 = $178 + $184;
      $187 = (117472 + ($$0391<<3)|0);
      $188 = +HEAPF64[$187>>3];
      $189 = $188 + $186;
      $190 = $189 + $185;
      HEAPF64[tempDoublePtr>>3] = $190;$191 = HEAP32[tempDoublePtr>>2]|0;
      $192 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $192;$193 = +HEAPF64[tempDoublePtr>>3];
      $194 = $193 - $185;
      $195 = $194 - $188;
      $196 = $195 - $178;
      $$0388 = $193;$$sink = $184;$$sink410 = $196;
     }
    } while(0);
    $197 = $$sink - $$sink410;
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $5;$198 = +HEAPF64[tempDoublePtr>>3];
    $199 = $1 - $198;
    $200 = $199 * $$0388;
    $201 = $197 * $1;
    $202 = $201 + $200;
    $203 = $$0388 * $198;
    $204 = $203 + $202;
    HEAPF64[tempDoublePtr>>3] = $204;$205 = HEAP32[tempDoublePtr>>2]|0;
    $206 = HEAP32[tempDoublePtr+4>>2]|0;
    $207 = ($206|0)>(1083179007);
    if ($207) {
     $208 = (($206) + -1083179008)|0;
     $209 = $208 | $205;
     $210 = ($209|0)==(0);
     if (!($210)) {
      $211 = $$0390 * 1.0000000000000001E+300;
      $212 = $211 * 1.0000000000000001E+300;
      $$0 = $212;
      return (+$$0);
     }
     $213 = $202 + 8.0085662595372941E-17;
     $214 = $204 - $203;
     $215 = $213 > $214;
     if ($215) {
      $216 = $$0390 * 1.0000000000000001E+300;
      $217 = $216 * 1.0000000000000001E+300;
      $$0 = $217;
      return (+$$0);
     }
    } else {
     $218 = $206 & 2147482624;
     $219 = ($218>>>0)>(1083231231);
     if ($219) {
      $220 = (($206) + 1064252416)|0;
      $221 = $220 | $205;
      $222 = ($221|0)==(0);
      if (!($222)) {
       $223 = $$0390 * 1.0E-300;
       $224 = $223 * 1.0E-300;
       $$0 = $224;
       return (+$$0);
      }
      $225 = $204 - $203;
      $226 = !($202 <= $225);
      if (!($226)) {
       $227 = $$0390 * 1.0E-300;
       $228 = $227 * 1.0E-300;
       $$0 = $228;
       return (+$$0);
      }
     }
    }
    $229 = $206 & 2147483647;
    $230 = ($229>>>0)>(1071644672);
    if ($230) {
     $231 = $229 >>> 20;
     $232 = (($231) + -1022)|0;
     $233 = 1048576 >>> $232;
     $234 = (($233) + ($206))|0;
     $235 = $234 >>> 20;
     $236 = $235 & 2047;
     $237 = (($236) + -1023)|0;
     $238 = -1048576 >> $237;
     $239 = $238 & $234;
     HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $239;$240 = +HEAPF64[tempDoublePtr>>3];
     $241 = $234 & 1048575;
     $242 = $241 | 1048576;
     $243 = (1043 - ($236))|0;
     $244 = $242 >>> $243;
     $245 = ($206|0)<(0);
     $246 = (0 - ($244))|0;
     $spec$select398 = $245 ? $246 : $244;
     $247 = $203 - $240;
     $$pre = $202 + $247;
     HEAPF64[tempDoublePtr>>3] = $$pre;$248 = HEAP32[tempDoublePtr>>2]|0;
     $249 = HEAP32[tempDoublePtr+4>>2]|0;
     $$0387 = $247;$$3 = $spec$select398;$251 = $249;$288 = $248;
    } else {
     $$0387 = $203;$$3 = 0;$251 = $206;$288 = $205;
    }
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $251;$250 = +HEAPF64[tempDoublePtr>>3];
    $252 = $250 * 0.69314718246459961;
    $253 = $250 - $$0387;
    $254 = $202 - $253;
    $255 = $254 * 0.69314718055994529;
    $256 = $250 * 1.904654299957768E-9;
    $257 = $255 - $256;
    $258 = $252 + $257;
    $259 = $258 - $252;
    $260 = $257 - $259;
    $261 = $258 * $258;
    $262 = $261 * 4.1381367970572385E-8;
    $263 = $262 + -1.6533902205465252E-6;
    $264 = $261 * $263;
    $265 = $264 + 6.6137563214379344E-5;
    $266 = $261 * $265;
    $267 = $266 + -0.0027777777777015593;
    $268 = $261 * $267;
    $269 = $268 + 0.16666666666666602;
    $270 = $261 * $269;
    $271 = $258 - $270;
    $272 = $258 * $271;
    $273 = $271 + -2.0;
    $274 = $272 / $273;
    $275 = $258 * $260;
    $276 = $260 + $275;
    $277 = $274 - $276;
    $278 = $277 - $258;
    $279 = 1.0 - $278;
    HEAPF64[tempDoublePtr>>3] = $279;$280 = HEAP32[tempDoublePtr>>2]|0;
    $281 = HEAP32[tempDoublePtr+4>>2]|0;
    $282 = $$3 << 20;
    $283 = (($282) + ($281))|0;
    $284 = ($283|0)<(1048576);
    if ($284) {
     $285 = (+_scalbn($279,$$3));
     $$2 = $285;
    } else {
     HEAP32[tempDoublePtr>>2] = $280;HEAP32[tempDoublePtr+4>>2] = $283;$286 = +HEAPF64[tempDoublePtr>>3];
     $$2 = $286;
    }
    $287 = $$0390 * $$2;
    $$0 = $287;
    return (+$$0);
   }
  }
 }
 $18 = $0 + $1;
 $$0 = $18;
 return (+$$0);
}
function ___emscripten_environ_constructor() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___buildEnvironment((149636|0));
 return;
}
function __get_tzname() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (149620|0);
}
function __get_daylight() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (149628|0);
}
function __get_timezone() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (149632|0);
}
function __get_environ() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (149636|0);
}
function runPostSets() {
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _llvm_minnum_f32(x, y) {
    x = +x;
    y = +y;
    if (x != x) return +y;
    if (y != y) return +x;
    return +Math_min(+x, +y);
}
function _llvm_minnum_f64(x, y) {
    x = +x;
    y = +y;
    if (x != x) return +y;
    if (y != y) return +x;
    return +Math_min(+x, +y);
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
//X = ftCall_X;


//ii = ftCall_ii;


//iii = ftCall_iii;


//iiii = ftCall_iiii;


//iiiii = ftCall_iiiii;


//iiiiii = ftCall_iiiiii;


//iiiiiii = ftCall_iiiiiii;


//v = ftCall_v;


//vi = ftCall_vi;


//vidd = ftCall_vidd;


//vii = ftCall_vii;


//viii = ftCall_viii;


//viiii = ftCall_viiii;


//viiiiii = ftCall_viiiiii;


//viiiiiii = ftCall_viiiiiii;

function b0() {
 ; abort(0);return +0;
}















// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_X = [b0,_boxed_proxy_value_init,_boxed_proxy_value_free,_boxed_proxy_value_copy,_boxed_proxy_value_peek_pointer,_boxed_proxy_collect_value,_boxed_proxy_lcopy_value,_g_value_object_init,_g_value_object_free_value,_g_value_object_copy_value,_g_value_object_peek_pointer,_g_value_object_collect_value,_g_value_object_lcopy_value,_value_flags_enum_init,_value_flags_enum_copy_value,_value_flags_enum_collect_value,_value_flags_enum_lcopy_value,_g_param_spec_class_base_init,_g_param_spec_class_base_finalize,_g_param_spec_class_init,_g_param_spec_init,_value_param_init,_value_param_free_value,_value_param_copy_value,_value_param_peek_pointer,_value_param_collect_value,_value_param_lcopy_value,_param_spec_generic_class_init,_param_char_init
,_param_char_set_default,_param_char_validate,_param_int_values_cmp,_param_uchar_init,_param_uchar_set_default,_param_uchar_validate,_param_uint_values_cmp,_param_boolean_set_default,_param_boolean_validate,_param_int_init,_param_int_set_default,_param_int_validate,_param_uint_init,_param_uint_set_default,_param_uint_validate,_param_long_init,_param_long_set_default,_param_long_validate,_param_long_values_cmp,_param_ulong_init,_param_ulong_set_default,_param_ulong_validate,_param_ulong_values_cmp,_param_int64_init,_param_int64_set_default,_param_int64_validate,_param_int64_values_cmp,_param_uint64_init,_param_uint64_set_default,_param_uint64_validate
,_param_uint64_values_cmp,_param_unichar_init,_param_unichar_set_default,_param_unichar_validate,_param_unichar_values_cmp,_param_enum_init,_param_enum_finalize,_param_enum_set_default,_param_enum_validate,_param_flags_init,_param_flags_finalize,_param_flags_set_default,_param_flags_validate,_param_float_init,_param_float_set_default,_param_float_validate,_param_float_values_cmp,_param_double_init,_param_double_set_default,_param_double_validate,_param_double_values_cmp,_param_string_init,_param_string_finalize,_param_string_set_default,_param_string_validate,_param_string_values_cmp,_param_param_init,_param_param_set_default,_param_param_validate,_param_pointer_values_cmp
,_param_boxed_init,_param_boxed_set_default,_param_boxed_validate,_param_boxed_values_cmp,_param_pointer_init,_param_pointer_set_default,_param_pointer_validate,_param_value_array_init,_param_value_array_finalize,_param_value_array_set_default,_param_value_array_validate,_param_value_array_values_cmp,_param_object_init,_param_object_set_default,_param_object_validate,_param_object_values_cmp,_param_override_init,_param_override_finalize,_param_override_set_default,_param_override_validate,_param_override_values_cmp,_param_gtype_init,_param_gtype_set_default,_param_gtype_validate,_param_gtype_values_cmp,_param_variant_init,_param_variant_finalize,_param_variant_set_default,_param_variant_validate,_param_variant_values_cmp
,_value_init_long0,_value_copy_long0,_value_collect_int,_value_lcopy_char,_value_lcopy_boolean,_value_lcopy_int,_value_collect_long,_value_lcopy_long,_value_init_int64,_value_copy_int64,_value_collect_int64,_value_lcopy_int64,_value_init_float,_value_copy_float,_value_collect_float,_value_lcopy_float,_value_init_double,_value_copy_double,_value_collect_double,_value_lcopy_double,_value_init_string,_value_free_string,_value_copy_string,_value_peek_pointer0,_value_collect_string,_value_lcopy_string,_value_init_pointer,_value_copy_pointer,_value_collect_pointer,_value_lcopy_pointer
,_value_free_variant,_value_copy_variant,_value_collect_variant,_value_lcopy_variant,_system_comparable_class_init,_system_comparable_instance_init,_system_io_buffered_reader_class_init,_system_io_buffered_reader_instance_init,_system_io_emscripten_file_system_class_init,_system_io_emscripten_file_system_instance_init,_system_io_file_class_init,_system_io_file_instance_init,_system_io_file_handle_class_init,_system_io_file_handle_instance_init,_system_io_file_input_stream_class_init,_system_io_file_input_stream_instance_init,_system_io_file_system_class_init,_system_io_file_system_instance_init,_system_io_input_stream_class_init,_system_io_input_stream_instance_init,_system_io_input_stream_reader_class_init,_system_io_input_stream_reader_instance_init,_system_io_reader_class_init,_system_io_reader_instance_init,_object_class_init,_object_instance_init,_system_collections_generic_array_list_class_init,_system_collections_generic_array_list_instance_init,_system_collections_generic_array_list_iterator_class_init,_system_collections_generic_array_list_iterator_instance_init
,_system_collections_generic_collection_class_init,_system_collections_generic_collection_instance_init,_system_collections_generic_dictionary_class_init,_system_collections_generic_dictionary_instance_init,_system_collections_generic_dictionary_value_collection_class_init,_system_collections_generic_dictionary_value_collection_instance_init,_system_collections_generic_dictionary_value_iterator_class_init,_system_collections_generic_dictionary_value_iterator_instance_init,_system_collections_generic_dictionary_key_set_class_init,_system_collections_generic_dictionary_key_set_instance_init,_system_collections_generic_dictionary_key_iterator_class_init,_system_collections_generic_dictionary_key_iterator_instance_init,_system_collections_generic_dictionary_map_iterator_class_init,_system_collections_generic_dictionary_map_iterator_instance_init,_system_collections_generic_iterable_class_init,_system_collections_generic_iterable_instance_init,_system_collections_generic_iterator_class_init,_system_collections_generic_iterator_instance_init,_system_collections_generic_list_class_init,_system_collections_generic_list_instance_init,_system_collections_generic_map_iterator_class_init,_system_collections_generic_map_iterator_instance_init,_system_collections_generic_map_class_init,_system_collections_generic_map_instance_init,_system_collections_generic_set_class_init,_system_collections_generic_set_instance_init,_system_collections_generic_tim_sort_class_init,_system_collections_generic_tim_sort_instance_init,_jasmine_block_class_init,_jasmine_block_instance_init
,_jasmine_console_reporter_class_init,_jasmine_console_reporter_instance_init,_jasmine_executable_class_init,_jasmine_executable_instance_init,_jasmine_resultable_class_init,_jasmine_resultable_instance_init,_jasmine_reporter_class_init,_jasmine_reporter_instance_init,_jasmine_callback_wrapper_class_init,_jasmine_callback_wrapper_instance_init,_jasmine_value_callback_wrapper_init,_jasmine_value_callback_wrapper_free_value,_jasmine_value_callback_wrapper_copy_value,_jasmine_value_callback_wrapper_peek_pointer,_jasmine_value_callback_wrapper_collect_value,_jasmine_value_callback_wrapper_lcopy_value,_jasmine_env_class_init,_jasmine_env_instance_init,_jasmine_matchers_class_init,_jasmine_matchers_instance_init,_jasmine_multi_reporter_class_init,_jasmine_multi_reporter_instance_init,_jasmine_nested_results_class_init,_jasmine_nested_results_instance_init,_jasmine_queue_class_init,_jasmine_queue_instance_init,_jasmine_runner_class_init,_jasmine_runner_instance_init,_jasmine_spec_class_init,_jasmine_spec_instance_init
,_jasmine_suite_class_init,_jasmine_suite_instance_init,_game_class_init,_game_instance_init,_image_class_init,_image_instance_init,_shader_class_init,_shader_instance_init,___stdio_close,___stdio_write,___stdio_seek,___stdout_write,_sn_write,_resample_row_generic,_resample_row_v_2,_resample_row_1,_resample_row_hv_2,_resample_row_h_2,_g_value_array_copy,_g_value_array_free,_g_type_iface_meta_marshal,_g_type_class_meta_marshal,_g_object_base_class_init,_g_object_base_class_finalize,_g_object_do_class_init,_g_object_init,_g_value_object_transform_value,_g_object_constructor,_g_object_constructed,_g_object_do_set_property
,_g_object_do_get_property,_g_object_real_dispose,_g_object_finalize,_g_object_dispatch_properties_changed,_g_object_to_string,_g_object_equals,_g_object_get_hash_code,_object_interface_check_properties,_g_initially_unowned_class_intern_init,_g_initially_unowned_init,_g_enum_class_init,_value_param_transform_value,_g_param_spec_finalize,_param_spec_pool_hash,_param_spec_pool_equals,_pool_list,_pool_depth_list,_pool_depth_list_for_interface,_pspec_compare_id,_default_value_set_default,_default_values_cmp,_g_direct_hash,_handler_hash,_handler_equal,_invalid_closure_notify,_g_str_hash,_g_str_equal,_system_comparable_real_CompareTo,__vala_system_comparable_get_property,__vala_system_comparable_set_property
,_system_io_buffered_reader_real_ReadOne,_system_io_buffered_reader_real_Read,_system_io_buffered_reader_real_Skip,_system_io_buffered_reader_real_Ready,_system_io_buffered_reader_real_MarkSupported,_system_io_buffered_reader_real_Mark,_system_io_buffered_reader_real_Reset,_system_io_buffered_reader_real_Close,_system_io_buffered_reader_finalize,_system_io_emscripten_file_system_real_GetSeparator,_system_io_emscripten_file_system_real_GetPathSeparator,_system_io_emscripten_file_system_real_Normalize,_system_io_emscripten_file_system_real_PrefixLength,_system_io_emscripten_file_system_real_Resolve,_system_io_emscripten_file_system_real_GetDefaultParent,_system_io_emscripten_file_system_real_FromURIPath,_system_io_emscripten_file_system_real_IsAbsolute,_system_io_emscripten_file_system_real_ResolveFile,_system_io_emscripten_file_system_real_Canonicalize,_system_io_emscripten_file_system_real_GetBooleanAttributes,_system_io_emscripten_file_system_real_CheckAccess,_system_io_emscripten_file_system_real_GetLastModifiedTime,_system_io_emscripten_file_system_real_GetLength,_system_io_emscripten_file_system_real_SetPermission,_system_io_emscripten_file_system_real_CreateFileExclusively,_system_io_emscripten_file_system_real_List,_system_io_emscripten_file_system_real_CreateDirectory,_system_io_emscripten_file_system_real_SetLastModifiedTime,_system_io_emscripten_file_system_real_SetReadOnly,_system_io_emscripten_file_system_real_Delete
,_system_io_emscripten_file_system_real_Rename,_system_io_emscripten_file_system_real_ListRoots,_system_io_emscripten_file_system_real_GetSpace,_system_io_emscripten_file_system_real_Compare,_system_io_emscripten_file_system_real_HashCode,_system_io_emscripten_file_system_finalize,_g_strdup,_g_free,_g_object_ref,_g_object_unref,_system_io_file_real_CompareTo,_system_io_file_finalize,_system_io_file_handle_finalize,_system_io_file_input_stream_real_ReadOne,_system_io_file_input_stream_real_Read,_system_io_file_input_stream_real_Skip,_system_io_file_input_stream_real_Available,_system_io_file_input_stream_real_Close,_system_io_file_input_stream_finalize,_system_io_file_system_real_GetSeparator,_system_io_file_system_real_GetPathSeparator,_system_io_file_system_real_Normalize,_system_io_file_system_real_PrefixLength,_system_io_file_system_real_Resolve,_system_io_file_system_real_GetDefaultParent,_system_io_file_system_real_FromURIPath,_system_io_file_system_real_IsAbsolute,_system_io_file_system_real_ResolveFile,_system_io_file_system_real_Canonicalize,_system_io_file_system_real_GetBooleanAttributes
,_system_io_file_system_real_CheckAccess,_system_io_file_system_real_SetPermission,_system_io_file_system_real_GetLastModifiedTime,_system_io_file_system_real_GetLength,_system_io_file_system_real_CreateFileExclusively,_system_io_file_system_real_Delete,_system_io_file_system_real_List,_system_io_file_system_real_CreateDirectory,_system_io_file_system_real_Rename,_system_io_file_system_real_SetLastModifiedTime,_system_io_file_system_real_SetReadOnly,_system_io_file_system_real_ListRoots,_system_io_file_system_real_GetSpace,_system_io_file_system_real_Compare,_system_io_file_system_real_HashCode,_system_io_file_system_finalize,_system_io_input_stream_real_ReadOne,_system_io_input_stream_real_Read,_system_io_input_stream_real_Skip,_system_io_input_stream_real_Available,_system_io_input_stream_real_Close,_system_io_input_stream_real_Mark,_system_io_input_stream_real_MarkSupported,_system_io_input_stream_real_Reset,_system_io_input_stream_reader_real_ReadOne,_system_io_input_stream_reader_real_Read,_system_io_input_stream_reader_real_Close,_system_io_input_stream_reader_finalize,_system_io_reader_real_ReadOne,_system_io_reader_real_Read
,_system_io_reader_real_Skip,_system_io_reader_real_Ready,_system_io_reader_real_MarkSupported,_system_io_reader_real_Mark,_system_io_reader_real_Reset,_system_io_reader_real_Close,_system_io_reader_finalize,_object_real_ToString,_object_real_Equals,_object_real_GetHashCode,_object_real_Clone,_system_collections_generic_array_list_real_get_element_type,_system_collections_generic_array_list_real_iterator,_system_collections_generic_array_list_real_Contains,_system_collections_generic_array_list_real_IndexOf,_system_collections_generic_array_list_real_get,_system_collections_generic_array_list_real_set,_system_collections_generic_array_list_real_Add,_system_collections_generic_array_list_real_Insert,_system_collections_generic_array_list_real_Remove,_system_collections_generic_array_list_real_RemoveAt,_system_collections_generic_array_list_real_Clear,_system_collections_generic_array_list_real_get_Count,__vala_system_collections_generic_array_list_get_property,__vala_system_collections_generic_array_list_set_property,_system_collections_generic_array_list_finalize,_system_collections_generic_array_list_iterator_real_next,_system_collections_generic_array_list_iterator_real_has_next,_system_collections_generic_array_list_iterator_real_get,_system_collections_generic_array_list_iterator_real_Remove
,_system_collections_generic_array_list_iterator_real_get_valid,__vala_system_collections_generic_array_list_iterator_get_property,__vala_system_collections_generic_array_list_iterator_set_property,_system_collections_generic_array_list_iterator_finalize,_system_collections_generic_collection_real_Contains,_system_collections_generic_collection_real_Add,_system_collections_generic_collection_real_Remove,_system_collections_generic_collection_real_Clear,_system_collections_generic_collection_real_AddAll,_system_collections_generic_collection_real_ToArray,_system_collections_generic_collection_real_get_IsEmpty,__vala_system_collections_generic_collection_get_property,__vala_system_collections_generic_collection_set_property,_g_direct_equal,_system_collections_generic_dictionary_real_map_iterator,_system_collections_generic_dictionary_real_ContainsKey,_system_collections_generic_dictionary_real_get,_system_collections_generic_dictionary_real_set,_system_collections_generic_dictionary_real_Remove,_system_collections_generic_dictionary_real_Clear,_system_collections_generic_dictionary_real_get_Count,_system_collections_generic_dictionary_real_get_Keys,_system_collections_generic_dictionary_real_get_Values,__vala_system_collections_generic_dictionary_get_property,__vala_system_collections_generic_dictionary_set_property,_system_collections_generic_dictionary_finalize,_system_collections_generic_dictionary_value_collection_real_get_element_type,_system_collections_generic_dictionary_value_collection_real_iterator,_system_collections_generic_dictionary_value_collection_real_Add,_system_collections_generic_dictionary_value_collection_real_Clear
,_system_collections_generic_dictionary_value_collection_real_Remove,_system_collections_generic_dictionary_value_collection_real_Contains,_system_collections_generic_dictionary_value_collection_real_get_Count,__vala_system_collections_generic_dictionary_value_collection_get_property,__vala_system_collections_generic_dictionary_value_collection_set_property,_system_collections_generic_dictionary_value_collection_finalize,_system_collections_generic_dictionary_value_iterator_real_next,_system_collections_generic_dictionary_value_iterator_real_has_next,_system_collections_generic_dictionary_value_iterator_real_get,_system_collections_generic_dictionary_value_iterator_real_Remove,_system_collections_generic_dictionary_value_iterator_real_get_valid,__vala_system_collections_generic_dictionary_value_iterator_get_property,__vala_system_collections_generic_dictionary_value_iterator_set_property,_system_collections_generic_dictionary_value_iterator_finalize,_system_collections_generic_dictionary_key_set_real_get_element_type,_system_collections_generic_dictionary_key_set_real_iterator,_system_collections_generic_dictionary_key_set_real_Add,_system_collections_generic_dictionary_key_set_real_Clear,_system_collections_generic_dictionary_key_set_real_Remove,_system_collections_generic_dictionary_key_set_real_Contains,_system_collections_generic_dictionary_key_set_real_get_Count,__vala_system_collections_generic_dictionary_key_set_get_property,__vala_system_collections_generic_dictionary_key_set_set_property,_system_collections_generic_dictionary_key_set_finalize,_system_collections_generic_dictionary_key_iterator_real_next,_system_collections_generic_dictionary_key_iterator_real_has_next,_system_collections_generic_dictionary_key_iterator_real_get,_system_collections_generic_dictionary_key_iterator_real_Remove,_system_collections_generic_dictionary_key_iterator_real_get_valid,__vala_system_collections_generic_dictionary_key_iterator_get_property
,__vala_system_collections_generic_dictionary_key_iterator_set_property,_system_collections_generic_dictionary_key_iterator_finalize,_system_collections_generic_dictionary_map_iterator_real_next,_system_collections_generic_dictionary_map_iterator_real_get_key,_system_collections_generic_dictionary_map_iterator_real_get_value,__vala_system_collections_generic_dictionary_map_iterator_get_property,__vala_system_collections_generic_dictionary_map_iterator_set_property,_system_collections_generic_dictionary_map_iterator_finalize,_system_collections_generic_iterable_real_get_element_type,_system_collections_generic_iterable_real_iterator,__vala_system_collections_generic_iterable_get_property,__vala_system_collections_generic_iterable_set_property,_system_collections_generic_iterator_real_next,_system_collections_generic_iterator_real_has_next,_system_collections_generic_iterator_real_get,_system_collections_generic_iterator_real_Remove,__vala_system_collections_generic_iterator_get_property,__vala_system_collections_generic_iterator_set_property,_system_collections_generic_list_real_get,_system_collections_generic_list_real_set,_system_collections_generic_list_real_IndexOf,_system_collections_generic_list_real_Insert,_system_collections_generic_list_real_RemoveAt,_system_collections_generic_list_real_First,_system_collections_generic_list_real_Last,_system_collections_generic_list_real_InsertAll,_system_collections_generic_list_real_Sort,__vala_system_collections_generic_list_get_property,__vala_system_collections_generic_list_set_property,_system_collections_generic_map_iterator_real_next
,_system_collections_generic_map_iterator_real_get_key,_system_collections_generic_map_iterator_real_get_value,__vala_system_collections_generic_map_iterator_get_property,__vala_system_collections_generic_map_iterator_set_property,_system_collections_generic_map_real_ContainsKey,_system_collections_generic_map_real_get,_system_collections_generic_map_real_set,_system_collections_generic_map_real_Remove,_system_collections_generic_map_real_Clear,_system_collections_generic_map_real_map_iterator,__vala_system_collections_generic_map_get_property,__vala_system_collections_generic_map_set_property,__vala_system_collections_generic_set_get_property,__vala_system_collections_generic_set_set_property,__vala_system_collections_generic_tim_sort_get_property,__vala_system_collections_generic_tim_sort_set_property,_system_collections_generic_tim_sort_finalize,_jasmine_block_real_Execute,_jasmine_block_finalize,_jasmine_console_reporter_real_ReportRunnerStarting,_jasmine_console_reporter_real_ReportRunnerResults,_jasmine_console_reporter_real_ReportSuiteResults,_jasmine_console_reporter_real_ReportSpecStarting,_jasmine_console_reporter_real_ReportSpecResults,_jasmine_console_reporter_real_Log,_jasmine_executable_real_Execute,_jasmine_executable_real_Results,_jasmine_executable_finalize,__vala_jasmine_resultable_get_property,__vala_jasmine_resultable_set_property
,_jasmine_resultable_finalize,_jasmine_reporter_real_ReportRunnerStarting,_jasmine_reporter_real_ReportRunnerResults,_jasmine_reporter_real_ReportSuiteResults,_jasmine_reporter_real_ReportSpecStarting,_jasmine_reporter_real_ReportSpecResults,_jasmine_reporter_real_Log,_jasmine_callback_wrapper_finalize,__vala_jasmine_env_get_property,__vala_jasmine_env_set_property,_jasmine_env_finalize,__vala_jasmine_matchers_get_property,__vala_jasmine_matchers_set_property,_jasmine_matchers_finalize,_jasmine_multi_reporter_real_ReportRunnerStarting,_jasmine_multi_reporter_real_ReportRunnerResults,_jasmine_multi_reporter_real_ReportSuiteResults,_jasmine_multi_reporter_real_ReportSpecStarting,_jasmine_multi_reporter_real_ReportSpecResults,_jasmine_multi_reporter_real_Log,_jasmine_multi_reporter_finalize,_jasmine_queue_finalize,__jasmine_queue_OnComplete_jasmine_on_complete_delegate,_jasmine_callback_wrapper_ref,_jasmine_callback_wrapper_unref,_jasmine_runner_finalize,____lambda42__jasmine_on_complete_delegate,_jasmine_spec_real_Execute,_jasmine_spec_finalize,____lambda44__jasmine_on_complete_delegate
,_jasmine_suite_real_Execute,_jasmine_suite_finalize,____lambda43__jasmine_on_complete_delegate,____lambda53__jasmine_callback,____lambda64__glf_wframebuffersizefun,____lambda65__glf_wcursorposfun,____lambda66__glf_wscrollfun,____lambda67__em_callback_func,_game_finalize,____lambda54__jasmine_callback,____lambda55__jasmine_callback,____lambda56__jasmine_callback,____lambda57__jasmine_callback,____lambda58__jasmine_callback,____lambda59__jasmine_callback,____lambda60__jasmine_callback,____lambda61__jasmine_callback,____lambda62__jasmine_callback,____lambda63__jasmine_callback,__vala_image_get_property,_image_finalize,__vala_shader_get_property,_shader_finalize,___stdio_read,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0];















  return { ___emscripten_environ_constructor: ___emscripten_environ_constructor, ___errno_location: ___errno_location, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _llvm_minnum_f32: _llvm_minnum_f32, _llvm_minnum_f64: _llvm_minnum_f64, _main: _main, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _sbrk: _sbrk, _zerog_init_ctor: _zerog_init_ctor, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
;