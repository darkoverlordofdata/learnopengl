Module["asm"] =  (/** @suppress {uselessCode} */ function(global, env, buffer) {
'almost asm';


  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);

  var DYNAMICTOP_PTR=env.DYNAMICTOP_PTR|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntS = 0, tempValue = 0, tempDouble = 0.0;
  var tempRet0 = 0;

  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_max=global.Math.max;
  var Math_clz32=global.Math.clz32;
  var Math_fround=global.Math.fround;
  var abort=env.abort;
  var assert=env.assert;
  var enlargeMemory=env.enlargeMemory;
  var getTotalMemory=env.getTotalMemory;
  var abortOnCannotGrowMemory=env.abortOnCannotGrowMemory;
  var invoke_X=env.invoke_X;
  var invoke_ii=env.invoke_ii;
  var invoke_iii=env.invoke_iii;
  var invoke_iiii=env.invoke_iiii;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_iiiiii=env.invoke_iiiiii;
  var invoke_iiiiiii=env.invoke_iiiiiii;
  var invoke_v=env.invoke_v;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_viii=env.invoke_viii;
  var invoke_viiii=env.invoke_viiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_viiiiiii=env.invoke_viiiiiii;
  var ___assert_fail=env.___assert_fail;
  var ___buildEnvironment=env.___buildEnvironment;
  var ___lock=env.___lock;
  var ___map_file=env.___map_file;
  var ___setErrNo=env.___setErrNo;
  var ___syscall140=env.___syscall140;
  var ___syscall145=env.___syscall145;
  var ___syscall146=env.___syscall146;
  var ___syscall221=env.___syscall221;
  var ___syscall5=env.___syscall5;
  var ___syscall54=env.___syscall54;
  var ___syscall6=env.___syscall6;
  var ___syscall91=env.___syscall91;
  var ___unlock=env.___unlock;
  var _emscripten_get_now=env._emscripten_get_now;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var _emscripten_set_main_loop=env._emscripten_set_main_loop;
  var _emscripten_set_main_loop_timing=env._emscripten_set_main_loop_timing;
  var _getenv=env._getenv;
  var _glActiveTexture=env._glActiveTexture;
  var _glAttachShader=env._glAttachShader;
  var _glBindBuffer=env._glBindBuffer;
  var _glBindTexture=env._glBindTexture;
  var _glBindVertexArray=env._glBindVertexArray;
  var _glBufferData=env._glBufferData;
  var _glClear=env._glClear;
  var _glClearColor=env._glClearColor;
  var _glCompileShader=env._glCompileShader;
  var _glCreateProgram=env._glCreateProgram;
  var _glCreateShader=env._glCreateShader;
  var _glDeleteShader=env._glDeleteShader;
  var _glDrawArrays=env._glDrawArrays;
  var _glEnable=env._glEnable;
  var _glEnableVertexAttribArray=env._glEnableVertexAttribArray;
  var _glGenBuffers=env._glGenBuffers;
  var _glGenTextures=env._glGenTextures;
  var _glGenVertexArrays=env._glGenVertexArrays;
  var _glGenerateMipmap=env._glGenerateMipmap;
  var _glGetProgramInfoLog=env._glGetProgramInfoLog;
  var _glGetProgramiv=env._glGetProgramiv;
  var _glGetShaderInfoLog=env._glGetShaderInfoLog;
  var _glGetShaderiv=env._glGetShaderiv;
  var _glGetUniformLocation=env._glGetUniformLocation;
  var _glLinkProgram=env._glLinkProgram;
  var _glShaderSource=env._glShaderSource;
  var _glTexImage2D=env._glTexImage2D;
  var _glTexParameteri=env._glTexParameteri;
  var _glUniform1i=env._glUniform1i;
  var _glUniformMatrix4fv=env._glUniformMatrix4fv;
  var _glUseProgram=env._glUseProgram;
  var _glVertexAttribPointer=env._glVertexAttribPointer;
  var _glViewport=env._glViewport;
  var _glfwCreateWindow=env._glfwCreateWindow;
  var _glfwGetKey=env._glfwGetKey;
  var _glfwGetTime=env._glfwGetTime;
  var _glfwInit=env._glfwInit;
  var _glfwMakeContextCurrent=env._glfwMakeContextCurrent;
  var _glfwPollEvents=env._glfwPollEvents;
  var _glfwSetFramebufferSizeCallback=env._glfwSetFramebufferSizeCallback;
  var _glfwSetWindowShouldClose=env._glfwSetWindowShouldClose;
  var _glfwSwapBuffers=env._glfwSwapBuffers;
  var _glfwTerminate=env._glfwTerminate;
  var _glfwWindowHint=env._glfwWindowHint;
  var _glfwWindowShouldClose=env._glfwWindowShouldClose;
  var _llvm_cttz_i32=env._llvm_cttz_i32;
  var emscriptenWebGLComputeImageSize=env.emscriptenWebGLComputeImageSize;
  var emscriptenWebGLGetHeapForType=env.emscriptenWebGLGetHeapForType;
  var emscriptenWebGLGetShiftForType=env.emscriptenWebGLGetShiftForType;
  var emscriptenWebGLGetTexPixelData=env.emscriptenWebGLGetTexPixelData;
  var tempFloat = Math_fround(0);
  const f0 = Math_fround(0);

// EMSCRIPTEN_START_FUNCS

function stackAlloc(size) {
  size = size|0;
  var ret = 0;
  ret = STACKTOP;
  STACKTOP = (STACKTOP + size)|0;
  STACKTOP = (STACKTOP + 15)&-16;

  return ret|0;
}
function stackSave() {
  return STACKTOP|0;
}
function stackRestore(top) {
  top = top|0;
  STACKTOP = top;
}
function establishStackSpace(stackBase, stackMax) {
  stackBase = stackBase|0;
  stackMax = stackMax|0;
  STACKTOP = stackBase;
  STACK_MAX = stackMax;
}

function setThrew(threw, value) {
  threw = threw|0;
  value = value|0;
  if ((__THREW__|0) == 0) {
    __THREW__ = threw;
    threwValue = value;
  }
}

function setTempRet0(value) {
  value = value|0;
  tempRet0 = value;
}
function getTempRet0() {
  return tempRet0|0;
}

function _zerog_init_ctor() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 _glib_init();
 _gobject_init();
 return;
}
function __g_atomic_array_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = 0;
 return;
}
function __g_atomic_array_copy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0$i = 0, $$02227$i = 0, $$02227$i$phi = 0, $$02227$i24 = 0, $$02227$i24$phi = 0, $$023$i = 0, $$023$i26 = 0, $$02326$i = 0, $$02326$i21 = 0, $$02328$i = 0, $$02328$i23 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + -4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = (($6) + ($2))|0;
  $8 = ($2|0)==(0);
  L3: do {
   if ($8) {
    label = 8;
   } else {
    $$02326$i = HEAP32[35920]|0;
    $9 = ($$02326$i|0)==(0|0);
    if ($9) {
     label = 8;
    } else {
     $$02227$i = 143680;$$02328$i = $$02326$i;
     while(1) {
      $10 = ((($$02328$i)) + -4|0);
      $11 = HEAP32[$10>>2]|0;
      $12 = ($11|0)==($7|0);
      if ($12) {
       break;
      }
      $$023$i = HEAP32[$$02328$i>>2]|0;
      $14 = ($$023$i|0)==(0|0);
      if ($14) {
       label = 8;
       break L3;
      } else {
       $$02227$i$phi = $$02328$i;$$02328$i = $$023$i;$$02227$i = $$02227$i$phi;
      }
     }
     $13 = HEAP32[$$02328$i>>2]|0;
     HEAP32[$$02227$i>>2] = $13;
     $$0$i = $$02328$i;
    }
   }
  } while(0);
  if ((label|0) == 8) {
   $15 = ($7>>>0)>(4);
   $16 = $15 ? $7 : 4;
   $17 = (($16) + 4)|0;
   $18 = (_g_slice_alloc($17)|0);
   $19 = ((($18)) + 4|0);
   HEAP32[$18>>2] = $7;
   $$0$i = $19;
  }
  _memcpy(($$0$i|0),($3|0),($6|0))|0;
  $$0 = $$0$i;
  return ($$0|0);
 }
 $20 = ($2|0)==(0);
 if ($20) {
  $$0 = 0;
  return ($$0|0);
 }
 $21 = (($2) + ($1))|0;
 $$02326$i21 = HEAP32[35920]|0;
 $22 = ($$02326$i21|0)==(0|0);
 L18: do {
  if (!($22)) {
   $$02227$i24 = 143680;$$02328$i23 = $$02326$i21;
   while(1) {
    $23 = ((($$02328$i23)) + -4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($21|0);
    if ($25) {
     break;
    }
    $$023$i26 = HEAP32[$$02328$i23>>2]|0;
    $27 = ($$023$i26|0)==(0|0);
    if ($27) {
     break L18;
    } else {
     $$02227$i24$phi = $$02328$i23;$$02328$i23 = $$023$i26;$$02227$i24 = $$02227$i24$phi;
    }
   }
   $26 = HEAP32[$$02328$i23>>2]|0;
   HEAP32[$$02227$i24>>2] = $26;
   $$0 = $$02328$i23;
   return ($$0|0);
  }
 } while(0);
 $28 = ($21>>>0)>(4);
 $29 = $28 ? $21 : 4;
 $30 = (($29) + 4)|0;
 $31 = (_g_slice_alloc($30)|0);
 $32 = ((($31)) + 4|0);
 HEAP32[$31>>2] = $21;
 $$0 = $32;
 return ($$0|0);
}
function __g_atomic_array_update($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  HEAP32[$0>>2] = $1;
  return;
 }
 $4 = ((($2)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + -4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5>>>0)>($7>>>0);
 if ($8) {
  _g_assertion_message_expr(0,121120,168,121158,121181);
  // unreachable;
 }
 HEAP32[$0>>2] = $1;
 $9 = HEAP32[35920]|0;
 HEAP32[$2>>2] = $9;
 HEAP32[35920] = $2;
 return;
}
function __g_boxed_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_intern_static_string(121266)|0);
 $1 = (_g_type_register_fundamental(72,$0,143684,118096,48)|0);
 $2 = ($1|0)==(72);
 if ($2) {
  return;
 } else {
  _g_assertion_message_expr(0,121273,109,121305,121324);
  // unreachable;
 }
}
function _g_boxed_type_register_static($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $3 = sp;
 dest=$3; src=118100; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $4 = (_g_type_register_static(72,$0,$3,0)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  STACKTOP = sp;return ($4|0);
 }
 __g_type_boxed_init($4,$1,$2);
 STACKTOP = sp;return ($4|0);
}
function _boxed_proxy_value_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _boxed_proxy_value_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($0)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 134217728;
 $7 = ($6|0)==(0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$0>>2]|0;
 __g_type_boxed_free($8,$2);
 return;
}
function _boxed_proxy_value_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = HEAP32[$0>>2]|0;
  $6 = (__g_type_boxed_copy($5,$3)|0);
  $$sink = $6;
 }
 $7 = ((($1)) + 8|0);
 HEAP32[$7>>2] = $$sink;
 return;
}
function _boxed_proxy_value_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _boxed_proxy_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  HEAP32[$6>>2] = 0;
  return (0|0);
 }
 $7 = $3 & 134217728;
 $8 = ($7|0)==(0);
 if ($8) {
  $11 = HEAP32[$0>>2]|0;
  $12 = (__g_type_boxed_copy($11,$4)|0);
  $13 = ((($0)) + 8|0);
  HEAP32[$13>>2] = $12;
  return (0|0);
 } else {
  $9 = ((($0)) + 8|0);
  HEAP32[$9>>2] = $4;
  $10 = ((($0)) + 16|0);
  HEAP32[$10>>2] = 134217728;
  return (0|0);
 }
 return (0)|0;
}
function _boxed_proxy_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = ((($0)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  HEAP32[$4>>2] = 0;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = $3 & 134217728;
 $13 = ($12|0)==(0);
 if ($13) {
  $14 = HEAP32[$0>>2]|0;
  $15 = (__g_type_boxed_copy($14,$10)|0);
  HEAP32[$4>>2] = $15;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_value_array_get_type() {
 var $$byval_copy = 0, $$byval_copy1 = 0, $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$byval_copy1 = sp + 12|0;
 $$byval_copy = sp + 8|0;
 $0 = sp + 4|0;
 $1 = sp;
 $2 = (_g_once_init_enter(143720)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $6 = HEAP32[35930]|0;
  STACKTOP = sp;return ($6|0);
 }
 $4 = (_g_intern_static_string(121345)|0);
 HEAP32[$0>>2] = 217;
 HEAP32[$1>>2] = 218;
 ;HEAP32[$$byval_copy>>2]=HEAP32[$0>>2]|0;
 ;HEAP32[$$byval_copy1>>2]=HEAP32[$1>>2]|0;
 $5 = (_g_boxed_type_register_static($4,$$byval_copy,$$byval_copy1)|0);
 _g_once_init_leave(143720,$5);
 $6 = HEAP32[35930]|0;
 STACKTOP = sp;return ($6|0);
}
function _g_closure_invalidate($0) {
 $0 = $0|0;
 var $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0$i = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)<(0);
 if ($2) {
  STACKTOP = sp;return;
 }
 while(1) {
  $3 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $3;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
  $4 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 1)|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
  $5 = $4 & 32767;
  $6 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -32768;
  $7 = $6 | $5;
  HEAP32[$$sroa$0$i>>2] = $7;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
  $8 = (_g_atomic_int_compare_and_exchange($0,$3,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
  $9 = ($8|0)==(0);
  if (!($9)) {
   break;
  }
 }
 while(1) {
  $10 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $10;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$0$i>>2]|0;
  $11 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 | -2147483648;
  HEAP32[$$sroa$0$i>>2] = $11;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$0$i>>2]|0;
  $12 = (_g_atomic_int_compare_and_exchange($0,$10,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
  $13 = ($12|0)==(0);
  if (!($13)) {
   break;
  }
 }
 $14 = ($$sroa$0$0$$sroa$0$0$$sroa$0$0$|0)<(0);
 if (!($14)) {
  _closure_invoke_notifiers($0,1);
 }
 _g_closure_unref($0);
 STACKTOP = sp;return;
}
function _closure_invoke_notifiers($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $$pre$phi155Z2D = 0, $$pre$phi157Z2D = 0, $$pre$phi159Z2D = 0, $$pre$phiZ2D = 0, $$pre154 = 0, $$pre156 = 0, $$pre158 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$22 = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$ = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 = 0, $$sroa$043$0$$sroa$043$0$$sroa$043$0$45 = 0;
 var $$sroa$043$0$$sroa$043$0$$sroa$043$0$46 = 0, $$sroa$065 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$ = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$66 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 = 0, $$sroa$065$0$$sroa$065$0$$sroa$065$0$69 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$065 = sp;
 switch ($1|0) {
 case 0:  {
  $2 = HEAP32[$0>>2]|0;
  $3 = $2 & 393216;
  $4 = ($3|0)==(0);
  L3: do {
   if ($4) {
    $$pre = ((($0)) + 4|0);
    $$pre154 = ((($0)) + 8|0);
    $$pre$phi155Z2D = $$pre154;$$pre$phiZ2D = $$pre;
   } else {
    $5 = ((($0)) + 12|0);
    $6 = ((($0)) + 4|0);
    $7 = ((($0)) + 8|0);
    while(1) {
     $8 = HEAP32[$0>>2]|0;
     HEAP32[$$sroa$065>>2] = $8;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$ = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$66 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 = HEAP32[$$sroa$065>>2]|0;
     $9 = (($$sroa$065$0$$sroa$065$0$$sroa$065$0$66) + 393216)|0;
     $10 = $9 & 393216;
     $11 = $$sroa$065$0$$sroa$065$0$$sroa$065$0$67 & -393217;
     $12 = $11 | $10;
     HEAP32[$$sroa$065>>2] = $12;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$065$0$$sroa$065$0$$sroa$065$0$69 = HEAP32[$$sroa$065>>2]|0;
     $13 = (_g_atomic_int_compare_and_exchange($0,$8,$$sroa$065$0$$sroa$065$0$$sroa$065$0$69)|0);
     $14 = ($13|0)==(0);
     if (!($14)) {
      $15 = $$sroa$065$0$$sroa$065$0$$sroa$065$0$68 >>> 17;
      $16 = $15 & 3;
      $17 = HEAP32[$5>>2]|0;
      $18 = HEAP32[$0>>2]|0;
      $19 = $18 >>> 15;
      $20 = $19 & 2;
      $21 = (($17) + ($20<<3)|0);
      $22 = (($21) + ($16<<3)|0);
      $23 = ((($22)) + 4|0);
      $24 = HEAP32[$23>>2]|0;
      HEAP32[$6>>2] = $24;
      $25 = HEAP32[$22>>2]|0;
      HEAP32[$7>>2] = $25;
      $26 = $24;
      $27 = $25;
      ftCall_vii($26|0,$27,$0);
      $28 = HEAP32[$0>>2]|0;
      $29 = $28 & 393216;
      $30 = ($29|0)==(0);
      if ($30) {
       $$pre$phi155Z2D = $7;$$pre$phiZ2D = $6;
       break L3;
      }
     }
    }
   }
  } while(0);
  HEAP32[$$pre$phiZ2D>>2] = 0;
  HEAP32[$$pre$phi155Z2D>>2] = 0;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  while(1) {
   $31 = HEAP32[$0>>2]|0;
   HEAP32[$$sroa$065>>2] = $31;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$ = HEAP32[$$sroa$065>>2]|0;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 = HEAP32[$$sroa$065>>2]|0;
   $32 = $$sroa$043$0$$sroa$043$0$$sroa$043$0$44 | 134217728;
   HEAP32[$$sroa$065>>2] = $32;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$45 = HEAP32[$$sroa$065>>2]|0;
   $$sroa$043$0$$sroa$043$0$$sroa$043$0$46 = HEAP32[$$sroa$065>>2]|0;
   $33 = (_g_atomic_int_compare_and_exchange($0,$31,$$sroa$043$0$$sroa$043$0$$sroa$043$0$46)|0);
   $34 = ($33|0)==(0);
   if (!($34)) {
    break;
   }
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 133693440;
  $37 = ($36|0)==(0);
  L17: do {
   if ($37) {
    $$pre156 = ((($0)) + 4|0);
    $$pre158 = ((($0)) + 8|0);
    $$pre$phi157Z2D = $$pre156;$$pre$phi159Z2D = $$pre158;
   } else {
    $38 = ((($0)) + 12|0);
    $39 = ((($0)) + 4|0);
    $40 = ((($0)) + 8|0);
    while(1) {
     $41 = HEAP32[$0>>2]|0;
     HEAP32[$$sroa$065>>2] = $41;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = HEAP32[$$sroa$065>>2]|0;
     $42 = (($$sroa$018$0$$sroa$018$0$$sroa$018$0$19) + 133693440)|0;
     $43 = $42 & 133693440;
     $44 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 & -133693441;
     $45 = $44 | $43;
     HEAP32[$$sroa$065>>2] = $45;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = HEAP32[$$sroa$065>>2]|0;
     $$sroa$018$0$$sroa$018$0$$sroa$018$0$22 = HEAP32[$$sroa$065>>2]|0;
     $46 = (_g_atomic_int_compare_and_exchange($0,$41,$$sroa$018$0$$sroa$018$0$$sroa$018$0$22)|0);
     $47 = ($46|0)==(0);
     if (!($47)) {
      $48 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 >>> 19;
      $49 = $48 & 255;
      $50 = HEAP32[$38>>2]|0;
      $51 = HEAP32[$0>>2]|0;
      $52 = $51 >>> 15;
      $53 = $52 & 2;
      $54 = (($50) + ($53<<3)|0);
      $55 = HEAP32[$0>>2]|0;
      $56 = $55 >>> 17;
      $57 = $56 & 3;
      $58 = (($54) + ($57<<3)|0);
      $59 = (($58) + ($49<<3)|0);
      $60 = ((($59)) + 4|0);
      $61 = HEAP32[$60>>2]|0;
      HEAP32[$39>>2] = $61;
      $62 = HEAP32[$59>>2]|0;
      HEAP32[$40>>2] = $62;
      $63 = $61;
      $64 = $62;
      ftCall_vii($63|0,$64,$0);
      $65 = HEAP32[$0>>2]|0;
      $66 = $65 & 133693440;
      $67 = ($66|0)==(0);
      if ($67) {
       $$pre$phi157Z2D = $39;$$pre$phi159Z2D = $40;
       break L17;
      }
     }
    }
   }
  } while(0);
  HEAP32[$$pre$phi157Z2D>>2] = 0;
  HEAP32[$$pre$phi159Z2D>>2] = 0;
  while(1) {
   $68 = HEAP32[$0>>2]|0;
   HEAP32[$$sroa$065>>2] = $68;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$065>>2]|0;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$065>>2]|0;
   $69 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 & -134217729;
   HEAP32[$$sroa$065>>2] = $69;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$065>>2]|0;
   $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$065>>2]|0;
   $70 = (_g_atomic_int_compare_and_exchange($0,$68,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
   $71 = ($70|0)==(0);
   if (!($71)) {
    break;
   }
  }
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $72 = HEAP32[$0>>2]|0;
  $73 = $72 & 65536;
  $74 = ($73|0)==(0);
  if ($74) {
   STACKTOP = sp;return;
  }
  $75 = ((($0)) + 12|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = ((($76)) + 4|0);
  $78 = HEAP32[$77>>2]|0;
  $79 = HEAP32[$76>>2]|0;
  ftCall_vii($78|0,$79,$0);
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $80 = HEAP32[$0>>2]|0;
  $81 = $80 >>> 16;
  $82 = $81 & 1;
  $83 = ($82|0)==(0);
  if ($83) {
   STACKTOP = sp;return;
  }
  $84 = ((($0)) + 12|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = (((($85) + ($82<<3)|0)) + 4|0);
  $87 = HEAP32[$86>>2]|0;
  $88 = (($85) + ($82<<3)|0);
  $89 = HEAP32[$88>>2]|0;
  ftCall_vii($87|0,$89,$0);
  STACKTOP = sp;return;
  break;
 }
 default: {
  STACKTOP = sp;return;
 }
 }
}
function _g_closure_unref($0) {
 $0 = $0|0;
 var $$pre = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre$phi155$iZ2D = 0, $$pre$phiZ2D = 0, $$pre154$i = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$4 = 0, $$sroa$065$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i = 0, $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i = 0, $1 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$065$i = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = $1 & 32767;
 $3 = ($2|0)==(1);
 if ($3) {
  _g_closure_invalidate($0);
 }
 while(1) {
  $4 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$065$i>>2] = $4;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$065$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$065$i>>2]|0;
  $5 = (($$sroa$0$0$$sroa$0$0$$sroa$0$0$1) + 32767)|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$065$i>>2]|0;
  $6 = $5 & 32767;
  $7 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 & -32768;
  $8 = $7 | $6;
  HEAP32[$$sroa$065$i>>2] = $8;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$065$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$4 = HEAP32[$$sroa$065$i>>2]|0;
  $9 = (_g_atomic_int_compare_and_exchange($0,$4,$$sroa$0$0$$sroa$0$0$$sroa$0$0$4)|0);
  $10 = ($9|0)==(0);
  if (!($10)) {
   break;
  }
 }
 $11 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 & 32767;
 $12 = ($11|0)==(0);
 if (!($12)) {
  STACKTOP = sp;return;
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = $13 & 393216;
 $15 = ($14|0)==(0);
 L10: do {
  if ($15) {
   $$pre$i = ((($0)) + 4|0);
   $$pre154$i = ((($0)) + 8|0);
   $$pre = ((($0)) + 12|0);
   $$pre$phi$iZ2D = $$pre$i;$$pre$phi155$iZ2D = $$pre154$i;$$pre$phiZ2D = $$pre;
  } else {
   $16 = ((($0)) + 12|0);
   $17 = ((($0)) + 4|0);
   $18 = ((($0)) + 8|0);
   while(1) {
    $19 = HEAP32[$0>>2]|0;
    HEAP32[$$sroa$065$i>>2] = $19;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i = HEAP32[$$sroa$065$i>>2]|0;
    $20 = (($$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$66$i) + 393216)|0;
    $21 = $20 & 393216;
    $22 = $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$67$i & -393217;
    $23 = $22 | $21;
    HEAP32[$$sroa$065$i>>2] = $23;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i = HEAP32[$$sroa$065$i>>2]|0;
    $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i = HEAP32[$$sroa$065$i>>2]|0;
    $24 = (_g_atomic_int_compare_and_exchange($0,$19,$$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$69$i)|0);
    $25 = ($24|0)==(0);
    if (!($25)) {
     $26 = $$sroa$065$i$0$$sroa$065$0$$sroa$065$0$$sroa$065$0$68$i >>> 17;
     $27 = $26 & 3;
     $28 = HEAP32[$16>>2]|0;
     $29 = HEAP32[$0>>2]|0;
     $30 = $29 >>> 15;
     $31 = $30 & 2;
     $32 = (($28) + ($31<<3)|0);
     $33 = (($32) + ($27<<3)|0);
     $34 = ((($33)) + 4|0);
     $35 = HEAP32[$34>>2]|0;
     HEAP32[$17>>2] = $35;
     $36 = HEAP32[$33>>2]|0;
     HEAP32[$18>>2] = $36;
     $37 = $35;
     $38 = $36;
     ftCall_vii($37|0,$38,$0);
     $39 = HEAP32[$0>>2]|0;
     $40 = $39 & 393216;
     $41 = ($40|0)==(0);
     if ($41) {
      $$pre$phi$iZ2D = $17;$$pre$phi155$iZ2D = $18;$$pre$phiZ2D = $16;
      break L10;
     }
    }
   }
  }
 } while(0);
 HEAP32[$$pre$phi$iZ2D>>2] = 0;
 HEAP32[$$pre$phi155$iZ2D>>2] = 0;
 $42 = HEAP32[$$pre$phiZ2D>>2]|0;
 _g_free($42);
 $43 = ((($0)) + -16|0);
 _g_free($43);
 STACKTOP = sp;return;
}
function _g_closure_remove_invalidate_notifier($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$042$add$i = 0, $$042$idx50$i = 0, $$042$ptr51$i = 0, $$ptr43$i = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $$sroa$0$i = sp + 8|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)<(0);
 if ($4) {
  $5 = HEAP32[$0>>2]|0;
  $6 = $5 & 134217728;
  $7 = ($6|0)==(0);
  if (!($7)) {
   $8 = ((($0)) + 4|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==($2|0);
   if ($10) {
    $11 = ((($0)) + 8|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ($12|0)==($1|0);
    if ($13) {
     HEAP32[$8>>2] = 0;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $14 = ((($0)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = HEAP32[$0>>2]|0;
 $17 = $16 >>> 15;
 $18 = $17 & 2;
 $19 = HEAP32[$0>>2]|0;
 $20 = $19 >>> 17;
 $21 = $20 & 3;
 $22 = (($21) + ($18))|0;
 $23 = HEAP32[$0>>2]|0;
 $24 = $23 >>> 19;
 $25 = $24 & 255;
 $26 = (($22) + ($25))|0;
 $27 = (($15) + ($26<<3)|0);
 $$ptr43$i = ((($27)) + -8|0);
 $28 = HEAP32[$0>>2]|0;
 $29 = $28 >>> 19;
 $30 = $29 & 255;
 $31 = ($30|0)==(0);
 L8: do {
  if (!($31)) {
   $32 = (0 - ($30))|0;
   $$042$idx50$i = $32;
   while(1) {
    $$042$ptr51$i = (($27) + ($$042$idx50$i<<3)|0);
    $33 = ((($$042$ptr51$i)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($34|0)==($2|0);
    if ($35) {
     $36 = HEAP32[$$042$ptr51$i>>2]|0;
     $37 = ($36|0)==($1|0);
     if ($37) {
      break;
     }
    }
    $$042$add$i = (($$042$idx50$i) + 1)|0;
    $56 = ($$042$idx50$i|0)<(-1);
    if ($56) {
     $$042$idx50$i = $$042$add$i;
    } else {
     break L8;
    }
   }
   while(1) {
    $38 = HEAP32[$0>>2]|0;
    HEAP32[$$sroa$0$i>>2] = $38;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
    $39 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 133693440)|0;
    $40 = $39 & 133693440;
    $41 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -133693441;
    $42 = $41 | $40;
    HEAP32[$$sroa$0$i>>2] = $42;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
    $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
    $43 = (_g_atomic_int_compare_and_exchange($0,$38,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
    $44 = ($43|0)==(0);
    if (!($44)) {
     break;
    }
   }
   $45 = ($$042$idx50$i|0)<(-1);
   if (!($45)) {
    STACKTOP = sp;return;
   }
   $46 = $$ptr43$i;
   $47 = $46;
   $48 = HEAP32[$47>>2]|0;
   $49 = (($46) + 4)|0;
   $50 = $49;
   $51 = HEAP32[$50>>2]|0;
   $52 = $$042$ptr51$i;
   $53 = $52;
   HEAP32[$53>>2] = $48;
   $54 = (($52) + 4)|0;
   $55 = $54;
   HEAP32[$55>>2] = $51;
   STACKTOP = sp;return;
  }
 } while(0);
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 _g_log(0,16,121357,$vararg_buffer);
 STACKTOP = sp;return;
}
function __g_closure_supports_invoke_va($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + -4|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  $10 = 0;
  return ($10|0);
 }
 $4 = ((($0)) + -16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $10 = 1;
  return ($10|0);
 }
 $7 = ((($0)) + -8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)!=(0|0);
 $phitmp = $9&1;
 $10 = $phitmp;
 return ($10|0);
}
function __g_closure_invoke_va($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $$072 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = 0, $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = 0, $$sroa$0$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = 0, $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = 0, $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $$sroa$0$i = sp;
 while(1) {
  $6 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $6;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i = HEAP32[$$sroa$0$i>>2]|0;
  $7 = (($$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$1$i) + 1)|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i = HEAP32[$$sroa$0$i>>2]|0;
  $8 = $7 & 32767;
  $9 = $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$2$i & -32768;
  $10 = $9 | $8;
  HEAP32[$$sroa$0$i>>2] = $10;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$3$i = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i = HEAP32[$$sroa$0$i>>2]|0;
  $11 = (_g_atomic_int_compare_and_exchange($0,$6,$$sroa$0$i$0$$sroa$0$0$$sroa$0$0$$sroa$0$0$4$i)|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   break;
  }
 }
 $13 = HEAP32[$0>>2]|0;
 $14 = ($13|0)<(0);
 if ($14) {
  _g_closure_unref($0);
  STACKTOP = sp;return;
 }
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 >>> 30;
 while(1) {
  $17 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $17;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 = HEAP32[$$sroa$0$i>>2]|0;
  $18 = $$sroa$018$0$$sroa$018$0$$sroa$018$0$19 | 1073741824;
  HEAP32[$$sroa$0$i>>2] = $18;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$20 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$018$0$$sroa$018$0$$sroa$018$0$21 = HEAP32[$$sroa$0$i>>2]|0;
  $19 = (_g_atomic_int_compare_and_exchange($0,$17,$$sroa$018$0$$sroa$018$0$$sroa$018$0$21)|0);
  $20 = ($19|0)==(0);
  if (!($20)) {
   break;
  }
 }
 $21 = $16 & 1;
 $22 = ((($0)) + -8|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)==(0|0);
 if ($24) {
  $27 = ((($0)) + -4|0);
  $28 = HEAP32[$27>>2]|0;
  $$0 = $28;$$072 = 0;
 } else {
  $25 = ((($0)) + -12|0);
  $26 = HEAP32[$25>>2]|0;
  $$0 = $23;$$072 = $26;
 }
 $29 = ($21|0)==(0);
 if ($29) {
  $30 = HEAP32[$0>>2]|0;
  $31 = $30 & 65536;
  $32 = ($31|0)==(0);
  if (!($32)) {
   $33 = ((($0)) + 12|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($34)) + 4|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = HEAP32[$34>>2]|0;
   ftCall_vii($36|0,$37,$0);
  }
  ftCall_viiiiiii($$0|0,$0,$1,$2,$3,$$072,$4,$5);
  $38 = HEAP32[$0>>2]|0;
  $39 = $38 >>> 16;
  $40 = $39 & 1;
  $41 = ($40|0)==(0);
  if (!($41)) {
   $42 = ((($0)) + 12|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = (((($43) + ($40<<3)|0)) + 4|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (($43) + ($40<<3)|0);
   $47 = HEAP32[$46>>2]|0;
   ftCall_vii($45|0,$47,$0);
  }
 } else {
  ftCall_viiiiiii($$0|0,$0,$1,$2,$3,$$072,$4,$5);
 }
 $48 = $21 << 30;
 while(1) {
  $49 = HEAP32[$0>>2]|0;
  HEAP32[$$sroa$0$i>>2] = $49;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$ = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 = HEAP32[$$sroa$0$i>>2]|0;
  $50 = $$sroa$0$0$$sroa$0$0$$sroa$0$0$1 & -1073741825;
  $51 = $50 | $48;
  HEAP32[$$sroa$0$i>>2] = $51;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$2 = HEAP32[$$sroa$0$i>>2]|0;
  $$sroa$0$0$$sroa$0$0$$sroa$0$0$3 = HEAP32[$$sroa$0$i>>2]|0;
  $52 = (_g_atomic_int_compare_and_exchange($0,$49,$$sroa$0$0$$sroa$0$0$$sroa$0$0$3)|0);
  $53 = ($52|0)==(0);
  if (!($53)) {
   break;
  }
 }
 _g_closure_unref($0);
 STACKTOP = sp;return;
}
function __g_closure_is_void($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$shrunk = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)<(0);
 do {
  if ($3) {
   $$0$shrunk = 1;
  } else {
   $4 = ((($0)) + -16|0);
   $5 = HEAP32[$4>>2]|0;
   $6 = ($5|0)==(219|0);
   if ($6) {
    $7 = ((($0)) + 8|0);
    $8 = HEAP32[$7>>2]|0;
    $9 = ((($0)) + -12|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = HEAP32[$1>>2]|0;
    $12 = (_g_type_interface_peek($11,$8)|0);
    $13 = (($12) + ($10)|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==(0|0);
    $$0$shrunk = $15;
    break;
   }
   $16 = ($5|0)==(220|0);
   if ($16) {
    $17 = ((($0)) + -12|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = HEAP32[$1>>2]|0;
    $20 = (($19) + ($18)|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ($21|0)==(0|0);
    $$0$shrunk = $22;
   } else {
    $$0$shrunk = 0;
   }
  }
 } while(0);
 $$0 = $$0$shrunk&1;
 return ($$0|0);
}
function _g_type_iface_meta_marshal($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = $5;
 $9 = (_g_value_peek_pointer($3)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_interface_peek($10,$7)|0);
 $12 = (($11) + ($8)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  return;
 }
 $15 = ((($0)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 ftCall_viiiiii($16|0,$0,$1,$2,$3,$4,$13);
 return;
}
function _g_type_class_meta_marshal($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = $5;
 $7 = (_g_value_peek_pointer($3)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + ($6)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  return;
 }
 $12 = ((($0)) + 4|0);
 $13 = HEAP32[$12>>2]|0;
 ftCall_viiiiii($13|0,$0,$1,$2,$3,$4,$10);
 return;
}
function __g_object_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;
 HEAP16[$0>>1] = 80;
 $1 = ((($0)) + 4|0);
 HEAP32[$1>>2] = 221;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 222;
 $3 = ((($0)) + 12|0);
 HEAP32[$3>>2] = 223;
 $4 = ((($0)) + 24|0);
 HEAP16[$4>>1] = 12;
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 224;
 $6 = ((($0)) + 32|0);
 HEAP32[$6>>2] = 118168;
 $7 = (_g_intern_static_string(121456)|0);
 $8 = (_g_type_register_fundamental(80,$7,$0,118200,0)|0);
 $9 = ($8|0)==(80);
 if ($9) {
  _g_value_register_transform_func(80,80,225);
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,121464,402,121497,121517);
  // unreachable;
 }
}
function _g_object_base_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 $2 = ((($0)) + 52|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -3;
 HEAP32[$2>>2] = $4;
 $5 = ($1|0)==(0|0);
 if ($5) {
  $13 = 0;
 } else {
  $6 = ((($1)) + 52|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 | 2;
  HEAP32[$6>>2] = $8;
  $9 = ((($1)) + 4|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = (_g_slist_copy($10)|0);
  $13 = $11;
 }
 $12 = ((($0)) + 4|0);
 HEAP32[$12>>2] = $13;
 $14 = ((($0)) + 28|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($0)) + 24|0);
 HEAP32[$15>>2] = 0;
 return;
}
function _g_object_base_class_finalize($0) {
 $0 = $0|0;
 var $$016 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 __g_signals_destroy($1);
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 _g_slist_free($3);
 HEAP32[$2>>2] = 0;
 $4 = HEAP32[35931]|0;
 $5 = HEAP32[$0>>2]|0;
 $6 = (_g_param_spec_pool_list_owned($4,$5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  _g_list_free($6);
  return;
 }
 $$016 = $6;
 while(1) {
  $8 = HEAP32[$$016>>2]|0;
  $9 = ((($8)) + 36|0);
  HEAP32[$9>>2] = 0;
  _g_param_spec_unref($8);
  $10 = ((($$016)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0|0);
  if ($12) {
   break;
  } else {
   $$016 = $11;
  }
 }
 _g_list_free($6);
 return;
}
function _g_object_do_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_g_quark_from_static_string(121611)|0);
 (_g_quark_from_static_string(121633)|0);
 (_g_quark_from_static_string(121657)|0);
 (_g_quark_from_static_string(121680)|0);
 (_g_quark_from_static_string(121706)|0);
 (_g_quark_from_static_string(121727)|0);
 $1 = (_g_param_spec_pool_new(1)|0);
 HEAP32[35931] = $1;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 226;
 $3 = ((($0)) + 48|0);
 HEAP32[$3>>2] = 227;
 $4 = ((($0)) + 24|0);
 HEAP32[$4>>2] = 228;
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 229;
 $6 = ((($0)) + 32|0);
 HEAP32[$6>>2] = 230;
 $7 = ((($0)) + 36|0);
 HEAP32[$7>>2] = 231;
 $8 = ((($0)) + 40|0);
 HEAP32[$8>>2] = 232;
 $9 = ((($0)) + 44|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = 233;
 $11 = ((($0)) + 16|0);
 HEAP32[$11>>2] = 234;
 $12 = ((($0)) + 20|0);
 HEAP32[$12>>2] = 235;
 _g_type_add_interface_check(0,236);
 return;
}
function _g_object_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 1;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 return;
}
function _g_value_object_transform_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = HEAP32[$3>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$1>>2]|0;
  $8 = (_g_type_is_a($6,$7)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   $$sink = 0;
  } else {
   $10 = HEAP32[$2>>2]|0;
   $11 = ((($10)) + 4|0);
   (_g_atomic_int_add($11,1)|0);
   $$sink = $10;
  }
 }
 $12 = ((($1)) + 8|0);
 HEAP32[$12>>2] = $$sink;
 return;
}
function _g_value_object_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _g_value_object_free_value($0) {
 $0 = $0|0;
 var $$lcssa$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 4|0);
 (_g_atomic_int_get($4)|0);
 $5 = (_g_atomic_int_get($4)|0);
 $6 = ($5|0)>(1);
 L4: do {
  if ($6) {
   $10 = $5;
   while(1) {
    $9 = (($10) + -1)|0;
    $11 = (_g_atomic_int_compare_and_exchange($4,$10,$9)|0);
    $12 = ($11|0)==(0);
    if (!($12)) {
     break;
    }
    $7 = (_g_atomic_int_get($4)|0);
    $8 = ($7|0)>(1);
    if ($8) {
     $10 = $7;
    } else {
     $$lcssa$i = $7;
     break L4;
    }
   }
   return;
  } else {
   $$lcssa$i = $5;
  }
 } while(0);
 $13 = ($$lcssa$i|0)==(1);
 if (!($13)) {
  return;
 }
 _g_type_free_instance($2);
 return;
}
function _g_value_object_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = ((($3)) + 4|0);
  (_g_atomic_int_add($5,1)|0);
  $$sink = $3;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 return;
}
function _g_value_object_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_value_object_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = (_g_type_name($8)|0);
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 123130;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 0;
  $10 = (_g_strconcat(121539,$vararg_buffer)|0);
  $$1 = $10;
  STACKTOP = sp;return ($$1|0);
 }
 $11 = HEAP32[$6>>2]|0;
 $12 = HEAP32[$0>>2]|0;
 $13 = (_g_value_type_compatible($11,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$4>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = 123158;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $19;
  $vararg_ptr8 = ((($vararg_buffer3)) + 12|0);
  HEAP32[$vararg_ptr8>>2] = 123130;
  $vararg_ptr9 = ((($vararg_buffer3)) + 16|0);
  HEAP32[$vararg_ptr9>>2] = 0;
  $20 = (_g_strconcat(121589,$vararg_buffer3)|0);
  $$1 = $20;
  STACKTOP = sp;return ($$1|0);
 } else {
  $21 = ((($4)) + 4|0);
  (_g_atomic_int_add($21,1)|0);
  $22 = ((($0)) + 8|0);
  HEAP32[$22>>2] = $4;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _g_value_object_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = ((($10)) + 4|0);
    (_g_atomic_int_add($14,1)|0);
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _g_object_constructor($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_type_create_instance($0)|0);
 return ($3|0);
}
function _g_object_constructed($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_do_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$3>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 $9 = HEAP32[$0>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 121464;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1099;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $5;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $8;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $11;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_object_do_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = HEAP32[$3>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 $9 = HEAP32[$0>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 121464;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1113;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $5;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $8;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $11;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_object_real_dispose($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_signal_handlers_destroy($0);
 return;
}
function _g_object_finalize($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_dispatch_properties_changed($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $exitcond = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($1|0)==(0);
 if ($3) {
  STACKTOP = sp;return;
 }
 $$08 = 0;
 while(1) {
  $4 = (($2) + ($$08<<2)|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (_g_param_spec_get_name_quark($5)|0);
  $7 = HEAP32[$4>>2]|0;
  HEAP32[$vararg_buffer>>2] = $7;
  _g_signal_emit($0,0,$6,$vararg_buffer);
  $8 = (($$08) + 1)|0;
  $exitcond = ($8|0)==($1|0);
  if ($exitcond) {
   break;
  } else {
   $$08 = $8;
  }
 }
 STACKTOP = sp;return;
}
function _g_object_to_string($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 $4 = (_g_strdup($3)|0);
 return ($4|0);
}
function _g_object_equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 $3 = $2&1;
 return ($3|0);
}
function _g_object_get_hash_code($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 return ($1|0);
}
function _object_interface_check_properties($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer13 = 0, $vararg_buffer20 = 0, $vararg_buffer27 = 0, $vararg_buffer3 = 0;
 var $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr26 = 0, $vararg_ptr30 = 0, $vararg_ptr31 = 0, $vararg_ptr32 = 0, $vararg_ptr33 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer27 = sp + 96|0;
 $vararg_buffer20 = sp + 72|0;
 $vararg_buffer13 = sp + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 116|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_class_ref($5)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$6>>2]|0;
 $9 = ($8|0)==(80);
 if ($9) {
  label = 4;
 } else {
  $10 = (_g_type_check_class_is_a($6,80)|0);
  $phitmp = ($10|0)==(0);
  if (!($phitmp)) {
   label = 4;
  }
 }
 if ((label|0) == 4) {
  $11 = HEAP32[35931]|0;
  $12 = (_g_param_spec_pool_list($11,$3,$2)|0);
  $13 = HEAP32[$2>>2]|0;
  $14 = (($13) + -1)|0;
  HEAP32[$2>>2] = $14;
  $15 = ($13|0)==(0);
  L8: do {
   if (!($15)) {
    $18 = $14;
    L10: while(1) {
     $16 = HEAP32[35931]|0;
     $17 = (($12) + ($18<<2)|0);
     $19 = HEAP32[$17>>2]|0;
     $20 = ((($19)) + 4|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = HEAP32[$6>>2]|0;
     $23 = (_g_param_spec_pool_lookup($16,$21,$22,1)|0);
     $24 = ($23|0)==(0|0);
     L12: do {
      if ($24) {
       $25 = HEAP32[$6>>2]|0;
       $26 = (_g_type_name($25)|0);
       $27 = HEAP32[$2>>2]|0;
       $28 = (($12) + ($27<<2)|0);
       $29 = HEAP32[$28>>2]|0;
       $30 = ((($29)) + 4|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (_g_type_name($3)|0);
       HEAP32[$vararg_buffer>>2] = $26;
       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
       HEAP32[$vararg_ptr1>>2] = $31;
       $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
       HEAP32[$vararg_ptr2>>2] = $32;
       _g_log(0,8,121751,$vararg_buffer);
      } else {
       $33 = HEAP32[$2>>2]|0;
       $34 = (($12) + ($33<<2)|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = ((($35)) + 8|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ((($23)) + 8|0);
       $39 = HEAP32[$38>>2]|0;
       $40 = $39 ^ 3;
       $41 = $37 & 3;
       $42 = $41 & $40;
       $43 = ($42|0)==(0);
       if (!($43)) {
        $44 = ((($35)) + 4|0);
        $45 = HEAP32[$44>>2]|0;
        $46 = HEAP32[$6>>2]|0;
        $47 = (_g_type_name($46)|0);
        $48 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer3>>2] = $45;
        $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
        HEAP32[$vararg_ptr6>>2] = $47;
        $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
        HEAP32[$vararg_ptr7>>2] = $48;
        _g_log(0,8,121819,$vararg_buffer3);
        break;
       }
       $49 = $37 & 2;
       $50 = ($49|0)==(0);
       if (!($50)) {
        $51 = $37 & 8;
        $52 = $51 ^ 8;
        $53 = $52 & $39;
        $54 = ($53|0)==(0);
        if (!($54)) {
         $55 = ((($35)) + 4|0);
         $56 = HEAP32[$55>>2]|0;
         $57 = HEAP32[$6>>2]|0;
         $58 = (_g_type_name($57)|0);
         $59 = (_g_type_name($3)|0);
         HEAP32[$vararg_buffer8>>2] = $56;
         $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
         HEAP32[$vararg_ptr11>>2] = $58;
         $vararg_ptr12 = ((($vararg_buffer8)) + 8|0);
         HEAP32[$vararg_ptr12>>2] = $59;
         _g_log(0,8,121924,$vararg_buffer8);
         break;
        }
       }
       $trunc = $37&255;
       $trunc$clear = $trunc & 3;
       switch ($trunc$clear<<24>>24) {
       case 3:  {
        $60 = ((($35)) + 12|0);
        $61 = HEAP32[$60>>2]|0;
        $62 = ((($23)) + 12|0);
        $63 = HEAP32[$62>>2]|0;
        $64 = ($61|0)==($63|0);
        if ($64) {
         break L12;
        }
        $65 = ((($35)) + 4|0);
        $66 = HEAP32[$65>>2]|0;
        $67 = HEAP32[$6>>2]|0;
        $68 = (_g_type_name($67)|0);
        $69 = (_g_type_check_instance_cast($23,76)|0);
        $70 = ((($23)) + 12|0);
        $71 = HEAP32[$70>>2]|0;
        $72 = (_g_type_name($71)|0);
        $73 = HEAP32[$2>>2]|0;
        $74 = (($12) + ($73<<2)|0);
        $75 = HEAP32[$74>>2]|0;
        $76 = (_g_type_check_instance_cast($75,76)|0);
        $77 = ((($75)) + 12|0);
        $78 = HEAP32[$77>>2]|0;
        $79 = (_g_type_name($78)|0);
        $80 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer13>>2] = $66;
        $vararg_ptr16 = ((($vararg_buffer13)) + 4|0);
        HEAP32[$vararg_ptr16>>2] = $68;
        $vararg_ptr17 = ((($vararg_buffer13)) + 8|0);
        HEAP32[$vararg_ptr17>>2] = $72;
        $vararg_ptr18 = ((($vararg_buffer13)) + 12|0);
        HEAP32[$vararg_ptr18>>2] = $79;
        $vararg_ptr19 = ((($vararg_buffer13)) + 16|0);
        HEAP32[$vararg_ptr19>>2] = $80;
        _g_log(0,8,122057,$vararg_buffer13);
        break L12;
        break;
       }
       case 1:  {
        $81 = ((($23)) + 12|0);
        $82 = HEAP32[$81>>2]|0;
        $83 = ((($35)) + 12|0);
        $84 = HEAP32[$83>>2]|0;
        $85 = (_g_type_is_a($82,$84)|0);
        $86 = ($85|0)==(0);
        if (!($86)) {
         break L12;
        }
        $87 = HEAP32[$2>>2]|0;
        $88 = (($12) + ($87<<2)|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = ((($89)) + 4|0);
        $91 = HEAP32[$90>>2]|0;
        $92 = HEAP32[$6>>2]|0;
        $93 = (_g_type_name($92)|0);
        $94 = (_g_type_check_instance_cast($23,76)|0);
        $95 = ((($23)) + 12|0);
        $96 = HEAP32[$95>>2]|0;
        $97 = (_g_type_name($96)|0);
        $98 = HEAP32[$2>>2]|0;
        $99 = (($12) + ($98<<2)|0);
        $100 = HEAP32[$99>>2]|0;
        $101 = (_g_type_check_instance_cast($100,76)|0);
        $102 = ((($100)) + 12|0);
        $103 = HEAP32[$102>>2]|0;
        $104 = (_g_type_name($103)|0);
        $105 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer20>>2] = $91;
        $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);
        HEAP32[$vararg_ptr23>>2] = $93;
        $vararg_ptr24 = ((($vararg_buffer20)) + 8|0);
        HEAP32[$vararg_ptr24>>2] = $97;
        $vararg_ptr25 = ((($vararg_buffer20)) + 12|0);
        HEAP32[$vararg_ptr25>>2] = $104;
        $vararg_ptr26 = ((($vararg_buffer20)) + 16|0);
        HEAP32[$vararg_ptr26>>2] = $105;
        _g_log(0,8,122196,$vararg_buffer20);
        break L12;
        break;
       }
       case 2:  {
        $106 = ((($35)) + 12|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ((($23)) + 12|0);
        $109 = HEAP32[$108>>2]|0;
        $110 = (_g_type_is_a($107,$109)|0);
        $111 = ($110|0)==(0);
        if (!($111)) {
         break L12;
        }
        $112 = HEAP32[$2>>2]|0;
        $113 = (($12) + ($112<<2)|0);
        $114 = HEAP32[$113>>2]|0;
        $115 = ((($114)) + 4|0);
        $116 = HEAP32[$115>>2]|0;
        $117 = HEAP32[$6>>2]|0;
        $118 = (_g_type_name($117)|0);
        $119 = (_g_type_check_instance_cast($23,76)|0);
        $120 = ((($23)) + 12|0);
        $121 = HEAP32[$120>>2]|0;
        $122 = (_g_type_name($121)|0);
        $123 = HEAP32[$2>>2]|0;
        $124 = (($12) + ($123<<2)|0);
        $125 = HEAP32[$124>>2]|0;
        $126 = (_g_type_check_instance_cast($125,76)|0);
        $127 = ((($125)) + 12|0);
        $128 = HEAP32[$127>>2]|0;
        $129 = (_g_type_name($128)|0);
        $130 = (_g_type_name($3)|0);
        HEAP32[$vararg_buffer27>>2] = $116;
        $vararg_ptr30 = ((($vararg_buffer27)) + 4|0);
        HEAP32[$vararg_ptr30>>2] = $118;
        $vararg_ptr31 = ((($vararg_buffer27)) + 8|0);
        HEAP32[$vararg_ptr31>>2] = $122;
        $vararg_ptr32 = ((($vararg_buffer27)) + 12|0);
        HEAP32[$vararg_ptr32>>2] = $129;
        $vararg_ptr33 = ((($vararg_buffer27)) + 16|0);
        HEAP32[$vararg_ptr33>>2] = $130;
        _g_log(0,8,122348,$vararg_buffer27);
        break L12;
        break;
       }
       default: {
        break L10;
       }
       }
      }
     } while(0);
     $131 = HEAP32[$2>>2]|0;
     $132 = (($131) + -1)|0;
     HEAP32[$2>>2] = $132;
     $133 = ($131|0)==(0);
     if ($133) {
      break L8;
     } else {
      $18 = $132;
     }
    }
    _g_assertion_message_expr(0,121464,1671,122502,0);
    // unreachable;
   }
  } while(0);
  _g_free($12);
 }
 _g_type_class_unref($6);
 STACKTOP = sp;return;
}
function _g_object_class_install_property($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = (_g_type_parent($3)|0);
 $5 = ((($0)) + 52|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 2;
 $8 = ($7|0)==(0);
 if (!($8)) {
  $9 = HEAP32[$0>>2]|0;
  $10 = (_g_type_name($9)|0);
  $11 = ((($2)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$vararg_buffer>>2] = $10;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $12;
  _g_log(0,4,122536,$vararg_buffer);
  while(1) {
  }
 }
 $13 = $6 | 1;
 HEAP32[$5>>2] = $13;
 $14 = HEAP32[35931]|0;
 $15 = ((($2)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = (_g_param_spec_pool_lookup($14,$16,$3,0)|0);
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  $19 = (_g_type_name($3)|0);
  $20 = HEAP32[$15>>2]|0;
  HEAP32[$vararg_buffer2>>2] = $19;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $20;
  _g_log(0,16,122597,$vararg_buffer2);
  STACKTOP = sp;return;
 }
 (_g_param_spec_ref_sink($2)|0);
 $21 = ((($2)) + 36|0);
 HEAP32[$21>>2] = $1;
 $22 = HEAP32[35931]|0;
 _g_param_spec_pool_insert($22,$2,$3);
 $23 = ((($2)) + 8|0);
 $24 = HEAP32[$23>>2]|0;
 $25 = $24 & 12;
 $26 = ($25|0)==(0);
 if (!($26)) {
  $27 = ((($0)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = (_g_slist_append($28,$2)|0);
  HEAP32[$27>>2] = $29;
 }
 $30 = HEAP32[35931]|0;
 $31 = HEAP32[$15>>2]|0;
 $32 = (_g_param_spec_pool_lookup($30,$31,$4,1)|0);
 $33 = ($32|0)==(0|0);
 if ($33) {
  STACKTOP = sp;return;
 }
 $34 = ((($32)) + 8|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $35 & 12;
 $37 = ($36|0)==(0);
 if ($37) {
  STACKTOP = sp;return;
 }
 $38 = ((($0)) + 4|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (_g_slist_remove($39,$32)|0);
 HEAP32[$38>>2] = $40;
 STACKTOP = sp;return;
}
function _g_object_ref($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_add($1,1)|0);
 return ($0|0);
}
function _g_object_unref($0) {
 $0 = $0|0;
 var $$lcssa = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_get($1)|0);
 $2 = (_g_atomic_int_get($1)|0);
 $3 = ($2|0)>(1);
 L1: do {
  if ($3) {
   $7 = $2;
   while(1) {
    $6 = (($7) + -1)|0;
    $8 = (_g_atomic_int_compare_and_exchange($1,$7,$6)|0);
    $9 = ($8|0)==(0);
    if (!($9)) {
     break;
    }
    $4 = (_g_atomic_int_get($1)|0);
    $5 = ($4|0)>(1);
    if ($5) {
     $7 = $4;
    } else {
     $$lcssa = $4;
     break L1;
    }
   }
   return;
  } else {
   $$lcssa = $2;
  }
 } while(0);
 $10 = ($$lcssa|0)==(1);
 if (!($10)) {
  return;
 }
 _g_type_free_instance($0);
 return;
}
function _g_object_notify_by_pspec($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_object_new($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $$0$in = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ($1|0)==(0|0);
 do {
  if ($3) {
   $4 = (_g_type_class_peek_static($0)|0);
   $5 = ($4|0)==(0|0);
   if (!($5)) {
    $6 = HEAP32[$4>>2]|0;
    $7 = (_g_type_create_instance($6)|0);
    $$0$in = $7;
    break;
   }
   $8 = (_g_type_class_ref($0)|0);
   $phitmp = ($8|0)==(0|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (_g_type_create_instance($9)|0);
   if ($phitmp) {
    $$0$in = $10;
   } else {
    _g_type_class_unref($8);
    $$0$in = $10;
   }
  } else {
   HEAP32[$2>>2] = $varargs;
   $11 = (_g_object_new_valist($0,$1,$2)|0);
   $$0$in = $11;
  }
 } while(0);
 STACKTOP = sp;return ($$0$in|0);
}
function _g_object_new_valist($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0128 = 0, $$0129$in = 0, $$0130 = 0, $$0131 = 0, $$0132 = 0, $$0137$lcssa = 0, $$0137149 = 0, $$0138148 = 0, $$1 = 0, $$1133140 = 0, $$2141 = 0, $$in = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0.0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current15 = 0;
 var $arglist_current2 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next16 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded17 = 0, $expanded19 = 0, $expanded20 = 0, $expanded21 = 0, $expanded23 = 0, $expanded24 = 0, $expanded26 = 0, $expanded27 = 0, $expanded28 = 0, $expanded30 = 0;
 var $expanded31 = 0, $expanded33 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded40 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded47 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded54 = 0, $expanded55 = 0, $expanded56 = 0, $vararg_buffer = 0;
 var $vararg_ptr13 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 208|0;
 $vararg_buffer = sp + 192|0;
 $3 = sp + 64|0;
 $4 = sp;
 $5 = (_g_type_class_peek_static($0)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (_g_type_class_ref($0)|0);
  $$0 = $7;$$0128 = $7;$106 = $7;
 } else {
  $$0 = $5;$$0128 = 0;$106 = 0;
 }
 $8 = ($1|0)==(0|0);
 if ($8) {
  $103 = HEAP32[$$0>>2]|0;
  $104 = (_g_type_create_instance($103)|0);
  $$0129$in = $104;
 } else {
  $$0130 = $3;$$0131 = $1;$$0132 = 0;
  L7: while(1) {
   $9 = HEAP32[35931]|0;
   $10 = (_g_param_spec_pool_lookup($9,$$0131,$0,1)|0);
   $11 = (_g_object_new_is_valid_property($0,$10,$$0131,$$0130,$$0132)|0);
   $12 = ($11|0)==(0);
   if ($12) {
    $$1133140 = $$0132;$$2141 = $$0130;
    break;
   }
   $13 = ($$0132|0)==(16);
   if ($13) {
    $14 = (_g_malloc_n(17,8)|0);
    dest=$14; src=$3; stop=dest+128|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
    $$1 = $14;
   } else {
    $15 = ($$0132>>>0)>(16);
    if ($15) {
     $16 = (($$0132) + 1)|0;
     $17 = (_g_realloc_n($$0130,$16,8)|0);
     $$1 = $17;
    } else {
     $$1 = $$0130;
    }
   }
   $18 = (($$1) + ($$0132<<3)|0);
   HEAP32[$18>>2] = $10;
   $19 = STACKTOP; STACKTOP = STACKTOP + 32|0;;
   $20 = (((($$1) + ($$0132<<3)|0)) + 4|0);
   HEAP32[$20>>2] = $19;
   ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;HEAP32[$19+16>>2]=0|0;HEAP32[$19+20>>2]=0|0;
   $21 = HEAP32[$20>>2]|0;
   $22 = ((($10)) + 12|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = (_g_type_value_table_peek($23)|0);
   $25 = ((($24)) + 16|0);
   $26 = HEAP32[$25>>2]|0;
   dest=$4; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
   $27 = HEAP32[$22>>2]|0;
   HEAP32[$21>>2] = $27;
   $28 = HEAP8[$26>>0]|0;
   $29 = ($28<<24>>24)==(0);
   L15: do {
    if ($29) {
     $$0137$lcssa = 0;
    } else {
     $$0137149 = 0;$$0138148 = $26;$34 = $28;
     while(1) {
      $30 = (($$0137149) + 1)|0;
      $31 = (($4) + ($$0137149<<3)|0);
      $32 = ((($$0138148)) + 1|0);
      $33 = $34 << 24 >> 24;
      switch ($33|0) {
      case 105:  {
       $arglist_current = HEAP32[$2>>2]|0;
       $35 = $arglist_current;
       $36 = ((0) + 4|0);
       $expanded17 = $36;
       $expanded = (($expanded17) - 1)|0;
       $37 = (($35) + ($expanded))|0;
       $38 = ((0) + 4|0);
       $expanded21 = $38;
       $expanded20 = (($expanded21) - 1)|0;
       $expanded19 = $expanded20 ^ -1;
       $39 = $37 & $expanded19;
       $40 = $39;
       $41 = HEAP32[$40>>2]|0;
       $arglist_next = ((($40)) + 4|0);
       HEAP32[$2>>2] = $arglist_next;
       HEAP32[$31>>2] = $41;
       break;
      }
      case 108:  {
       $arglist_current2 = HEAP32[$2>>2]|0;
       $42 = $arglist_current2;
       $43 = ((0) + 4|0);
       $expanded24 = $43;
       $expanded23 = (($expanded24) - 1)|0;
       $44 = (($42) + ($expanded23))|0;
       $45 = ((0) + 4|0);
       $expanded28 = $45;
       $expanded27 = (($expanded28) - 1)|0;
       $expanded26 = $expanded27 ^ -1;
       $46 = $44 & $expanded26;
       $47 = $46;
       $48 = HEAP32[$47>>2]|0;
       $arglist_next3 = ((($47)) + 4|0);
       HEAP32[$2>>2] = $arglist_next3;
       HEAP32[$31>>2] = $48;
       break;
      }
      case 113:  {
       $arglist_current5 = HEAP32[$2>>2]|0;
       $49 = $arglist_current5;
       $50 = ((0) + 8|0);
       $expanded31 = $50;
       $expanded30 = (($expanded31) - 1)|0;
       $51 = (($49) + ($expanded30))|0;
       $52 = ((0) + 8|0);
       $expanded35 = $52;
       $expanded34 = (($expanded35) - 1)|0;
       $expanded33 = $expanded34 ^ -1;
       $53 = $51 & $expanded33;
       $54 = $53;
       $55 = $54;
       $56 = $55;
       $57 = HEAP32[$56>>2]|0;
       $58 = (($55) + 4)|0;
       $59 = $58;
       $60 = HEAP32[$59>>2]|0;
       $arglist_next6 = ((($54)) + 8|0);
       HEAP32[$2>>2] = $arglist_next6;
       $61 = $31;
       $62 = $61;
       HEAP32[$62>>2] = $57;
       $63 = (($61) + 4)|0;
       $64 = $63;
       HEAP32[$64>>2] = $60;
       break;
      }
      case 100:  {
       $arglist_current8 = HEAP32[$2>>2]|0;
       $65 = $arglist_current8;
       $66 = ((0) + 8|0);
       $expanded38 = $66;
       $expanded37 = (($expanded38) - 1)|0;
       $67 = (($65) + ($expanded37))|0;
       $68 = ((0) + 8|0);
       $expanded42 = $68;
       $expanded41 = (($expanded42) - 1)|0;
       $expanded40 = $expanded41 ^ -1;
       $69 = $67 & $expanded40;
       $70 = $69;
       $71 = +HEAPF64[$70>>3];
       $arglist_next9 = ((($70)) + 8|0);
       HEAP32[$2>>2] = $arglist_next9;
       HEAPF64[$31>>3] = $71;
       break;
      }
      case 112:  {
       $arglist_current11 = HEAP32[$2>>2]|0;
       $72 = $arglist_current11;
       $73 = ((0) + 4|0);
       $expanded45 = $73;
       $expanded44 = (($expanded45) - 1)|0;
       $74 = (($72) + ($expanded44))|0;
       $75 = ((0) + 4|0);
       $expanded49 = $75;
       $expanded48 = (($expanded49) - 1)|0;
       $expanded47 = $expanded48 ^ -1;
       $76 = $74 & $expanded47;
       $77 = $76;
       $78 = HEAP32[$77>>2]|0;
       $arglist_next12 = ((($77)) + 4|0);
       HEAP32[$2>>2] = $arglist_next12;
       HEAP32[$31>>2] = $78;
       break;
      }
      default: {
       label = 18;
       break L7;
      }
      }
      $79 = HEAP8[$32>>0]|0;
      $80 = ($79<<24>>24)==(0);
      if ($80) {
       $$0137$lcssa = $30;
       break L15;
      } else {
       $$0137149 = $30;$$0138148 = $32;$34 = $79;
      }
     }
    }
   } while(0);
   $81 = ((($24)) + 20|0);
   $82 = HEAP32[$81>>2]|0;
   $83 = (ftCall_iiiii($82|0,$21,$$0137$lcssa,$4,0)|0);
   $84 = ($83|0)==(0|0);
   if (!($84)) {
    label = 21;
    break;
   }
   $86 = (($$0132) + 1)|0;
   $arglist_current15 = HEAP32[$2>>2]|0;
   $87 = $arglist_current15;
   $88 = ((0) + 4|0);
   $expanded52 = $88;
   $expanded51 = (($expanded52) - 1)|0;
   $89 = (($87) + ($expanded51))|0;
   $90 = ((0) + 4|0);
   $expanded56 = $90;
   $expanded55 = (($expanded56) - 1)|0;
   $expanded54 = $expanded55 ^ -1;
   $91 = $89 & $expanded54;
   $92 = $91;
   $93 = HEAP32[$92>>2]|0;
   $arglist_next16 = ((($92)) + 4|0);
   HEAP32[$2>>2] = $arglist_next16;
   $94 = ($93|0)==(0|0);
   if ($94) {
    $$1133140 = $86;$$2141 = $$1;
    break;
   } else {
    $$0130 = $$1;$$0131 = $93;$$0132 = $86;
   }
  }
  if ((label|0) == 18) {
   _g_assertion_message_expr(0,121464,2186,122716,0);
   // unreachable;
  }
  else if ((label|0) == 21) {
   HEAP32[$vararg_buffer>>2] = 122716;
   $vararg_ptr13 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr13>>2] = $83;
   _g_log(0,8,130695,$vararg_buffer);
   $85 = HEAP32[$20>>2]|0;
   _g_value_unset($85);
   _g_free($83);
   $$1133140 = $$0132;$$2141 = $$1;
  }
  $95 = HEAP32[$$0>>2]|0;
  $96 = (_g_type_create_instance($95)|0);
  $97 = ($$1133140|0)==(0);
  if (!($97)) {
   $$in = $$1133140;
   while(1) {
    $98 = (($$in) + -1)|0;
    $99 = (((($$2141) + ($98<<3)|0)) + 4|0);
    $100 = HEAP32[$99>>2]|0;
    _g_value_unset($100);
    $101 = ($98|0)==(0);
    if ($101) {
     break;
    } else {
     $$in = $98;
    }
   }
  }
  $102 = ($$2141|0)==($3|0);
  if (!($102)) {
   _g_free($$2141);
  }
  $$0129$in = $96;
 }
 $105 = ($$0128|0)==(0|0);
 if ($105) {
  STACKTOP = sp;return ($$0129$in|0);
 }
 _g_type_class_unref($106);
 STACKTOP = sp;return ($$0129$in|0);
}
function _g_object_new_is_valid_property($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$035$lcssa = 0, $$03542 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0, $vararg_ptr11 = 0, $vararg_ptr12 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $5 = ($1|0)==(0|0);
 if ($5) {
  $6 = (_g_type_name($0)|0);
  HEAP32[$vararg_buffer>>2] = 122736;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $6;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $2;
  _g_log(0,8,122667,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = $8 & 2;
 $10 = ($9|0)==(0);
 if ($10) {
  $11 = ((($1)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (_g_type_name($0)|0);
  HEAP32[$vararg_buffer3>>2] = 122736;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = $12;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $13;
  _g_log(0,8,122767,$vararg_buffer3);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $14 = $8 & 12;
 $15 = ($14|0)==(0);
 if ($15) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ($4|0)>(0);
 L12: do {
  if ($16) {
   $$03542 = 0;
   while(1) {
    $17 = (($3) + ($$03542<<3)|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==($1|0);
    if ($19) {
     $$035$lcssa = $$03542;
     break L12;
    }
    $20 = (($$03542) + 1)|0;
    $21 = ($20|0)<($4|0);
    if ($21) {
     $$03542 = $20;
    } else {
     $$035$lcssa = $20;
     break;
    }
   }
  } else {
   $$035$lcssa = 0;
  }
 } while(0);
 $22 = ($$035$lcssa|0)==($4|0);
 if ($22) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = (_g_type_name($0)|0);
 HEAP32[$vararg_buffer8>>2] = 122736;
 $vararg_ptr11 = ((($vararg_buffer8)) + 4|0);
 HEAP32[$vararg_ptr11>>2] = $2;
 $vararg_ptr12 = ((($vararg_buffer8)) + 8|0);
 HEAP32[$vararg_ptr12>>2] = $23;
 _g_log(0,8,122822,$vararg_buffer8);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _object_floating_flag_handler($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$017 = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 switch ($1|0) {
 case 1:  {
  $2 = ((($0)) + 8|0);
  $3 = HEAP32[$2>>2]|0;
  $4 = $3 | 2;
  $5 = $4;
  HEAP32[$2>>2] = $5;
  $6 = $3 & 2;
  $$017 = $6;
  return ($$017|0);
  break;
 }
 case -1:  {
  $7 = ((($0)) + 8|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = $8 & -3;
  $10 = $9;
  HEAP32[$7>>2] = $10;
  $11 = $8 & 2;
  $$017 = $11;
  return ($$017|0);
  break;
 }
 default: {
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = $13 >>> 1;
  $$lobit = $14 & 1;
  $$017 = $$lobit;
  return ($$017|0);
 }
 }
 return (0)|0;
}
function _g_object_ref_sink($0) {
 $0 = $0|0;
 var $$lcssa$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 4|0);
 (_g_atomic_int_add($1,1)|0);
 $2 = (_object_floating_flag_handler($0,-1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return ($0|0);
 }
 (_g_atomic_int_get($1)|0);
 $4 = (_g_atomic_int_get($1)|0);
 $5 = ($4|0)>(1);
 L4: do {
  if ($5) {
   $9 = $4;
   while(1) {
    $8 = (($9) + -1)|0;
    $10 = (_g_atomic_int_compare_and_exchange($1,$9,$8)|0);
    $11 = ($10|0)==(0);
    if (!($11)) {
     break;
    }
    $6 = (_g_atomic_int_get($1)|0);
    $7 = ($6|0)>(1);
    if ($7) {
     $9 = $6;
    } else {
     $$lcssa$i = $6;
     break L4;
    }
   }
   return ($0|0);
  } else {
   $$lcssa$i = $4;
  }
 } while(0);
 $12 = ($$lcssa$i|0)==(1);
 if (!($12)) {
  return ($0|0);
 }
 _g_type_free_instance($0);
 return ($0|0);
}
function _g_value_take_object($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$lcssa$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if (!($4)) {
  $5 = ((($3)) + 4|0);
  (_g_atomic_int_get($5)|0);
  $6 = (_g_atomic_int_get($5)|0);
  $7 = ($6|0)>(1);
  L3: do {
   if ($7) {
    $11 = $6;
    while(1) {
     $10 = (($11) + -1)|0;
     $12 = (_g_atomic_int_compare_and_exchange($5,$11,$10)|0);
     $13 = ($12|0)==(0);
     if (!($13)) {
      break L3;
     }
     $8 = (_g_atomic_int_get($5)|0);
     $9 = ($8|0)>(1);
     if ($9) {
      $11 = $8;
     } else {
      $$lcssa$i = $8;
      label = 6;
      break;
     }
    }
   } else {
    $$lcssa$i = $6;
    label = 6;
   }
  } while(0);
  if ((label|0) == 6) {
   $14 = ($$lcssa$i|0)==(1);
   if ($14) {
    _g_type_free_instance($3);
   }
  }
  HEAP32[$2>>2] = 0;
 }
 $15 = ($1|0)==(0|0);
 if ($15) {
  return;
 }
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_get_object($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_initially_unowned_class_intern_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35933] = $1;
 return;
}
function _g_initially_unowned_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_object_floating_flag_handler($0,1)|0);
 return;
}
function _g_initially_unowned_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143728)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[35932]|0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(122874)|0);
 $3 = (_g_type_register_static_simple(80,$2,80,237,12,238,0)|0);
 _g_once_init_leave(143728,$3);
 $4 = HEAP32[35932]|0;
 return ($4|0);
}
function __g_enum_types_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 dest=$0; src=118204; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 HEAP16[$0>>1] = 20;
 $1 = (_g_intern_static_string(122892)|0);
 $2 = (_g_type_register_fundamental(48,$1,$0,118240,48)|0);
 $3 = ($2|0)==(48);
 if (!($3)) {
  _g_assertion_message_expr(0,122898,126,122930,122949);
  // unreachable;
 }
 HEAP16[$0>>1] = 16;
 $4 = (_g_intern_static_string(122969)|0);
 $5 = (_g_type_register_fundamental(52,$4,$0,118240,48)|0);
 $6 = ($5|0)==(52);
 if ($6) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,122898,133,122930,122976);
  // unreachable;
 }
}
function _value_flags_enum_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_flags_enum_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_flags_enum_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_flags_enum_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_enum_register_static($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp;
 dest=$2; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAP16[$2>>1] = 20;
 $3 = ((($2)) + 12|0);
 HEAP32[$3>>2] = 239;
 $4 = ((($2)) + 20|0);
 HEAP32[$4>>2] = $1;
 $5 = (_g_type_register_static(48,$0,$2,0)|0);
 STACKTOP = sp;return ($5|0);
}
function _g_enum_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$$lcssa = 0, $$33 = 0, $$lcssa = 0, $$lcssa32 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = $1;
 $6 = ($1|0)==(0|0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$1>>2]|0;
 HEAP32[$2>>2] = $7;
 HEAP32[$3>>2] = $7;
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  return;
 }
 $11 = ((($1)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if ($13) {
  $$$lcssa = $7;$$lcssa = 1;$$lcssa32 = $7;
 } else {
  $14 = ((($1)) + 12|0);
  $$33 = $7;$15 = $14;$18 = $7;$21 = 1;
  while(1) {
   $$pre = HEAP32[$15>>2]|0;
   $16 = ($$33|0)<($$pre|0);
   $$ = $16 ? $$33 : $$pre;
   $17 = ($18|0)>($$pre|0);
   $19 = $17 ? $18 : $$pre;
   $20 = (($21) + 1)|0;
   $22 = ((($15)) + 12|0);
   $23 = ((($15)) + 16|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = ($24|0)==(0|0);
   if ($25) {
    $$$lcssa = $$;$$lcssa = $20;$$lcssa32 = $19;
    break;
   } else {
    $$33 = $$;$15 = $22;$18 = $19;$21 = $20;
   }
  }
 }
 HEAP32[$2>>2] = $$$lcssa;
 HEAP32[$3>>2] = $$lcssa32;
 HEAP32[$4>>2] = $$lcssa;
 return;
}
function _g_enum_get_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0810 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if ($4) {
  $$1 = 0;
  return ($$1|0);
 }
 $5 = ((($0)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$1 = 0;
  return ($$1|0);
 }
 $$0810 = $6;
 while(1) {
  $10 = HEAP32[$$0810>>2]|0;
  $11 = ($10|0)==($1|0);
  if ($11) {
   $$1 = $$0810;
   label = 6;
   break;
  }
  $12 = ((($$0810)) + 12|0);
  $13 = ((($$0810)) + 16|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(0|0);
  if ($15) {
   $$1 = 0;
   label = 6;
   break;
  } else {
   $$0810 = $12;
  }
 }
 if ((label|0) == 6) {
  return ($$1|0);
 }
 return (0)|0;
}
function __g_param_type_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_intern_static_string(122997)|0);
 $1 = (_g_type_register_fundamental(76,$0,118276,118312,16)|0);
 $2 = ($1|0)==(76);
 if ($2) {
  $3 = (_g_type_add_instance_private(76,32)|0);
  HEAP32[35934] = $3;
  _g_value_register_transform_func(76,76,240);
  return;
 } else {
  _g_assertion_message_expr(0,123004,138,123036,123055);
  // unreachable;
 }
}
function _value_param_transform_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 $$pre = ((($1)) + 8|0);
 if (!($4)) {
  $5 = HEAP32[$$pre>>2]|0;
  $6 = HEAP32[$5>>2]|0;
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP32[$1>>2]|0;
  $9 = (_g_type_is_a($7,$8)|0);
  $10 = ($9|0)==(0);
  if (!($10)) {
   $11 = HEAP32[$2>>2]|0;
   $12 = ((($11)) + 32|0);
   _g_atomic_int_inc($12);
   HEAP32[$$pre>>2] = $11;
   return;
  }
 }
 HEAP32[$$pre>>2] = 0;
 return;
}
function _g_param_spec_class_base_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_param_spec_class_base_finalize($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_param_spec_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 4;
 $3 = ((($0)) + 8|0);
 HEAP32[$3>>2] = 241;
 $4 = ((($0)) + 12|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 16|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 20|0);
 HEAP32[$6>>2] = 0;
 _g_type_class_adjust_private_offset($0,143736);
 return;
}
function _g_param_spec_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 20|0);
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 24|0);
 HEAP32[$4>>2] = 0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($1)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 12|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($0)) + 16|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($0)) + 32|0);
 HEAP32[$11>>2] = 1;
 $12 = ((($0)) + 36|0);
 HEAP32[$12>>2] = 0;
 return;
}
function _value_param_init($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_param_free_value($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 32|0);
 $5 = (_g_atomic_int_dec_and_test($4)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  return;
 }
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$2);
 return;
}
function _value_param_copy_value($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$sink = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$sink = 0;
 } else {
  $5 = ((($3)) + 32|0);
  _g_atomic_int_inc($5);
  $$sink = $3;
 }
 $6 = ((($1)) + 8|0);
 HEAP32[$6>>2] = $$sink;
 return;
}
function _value_param_peek_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _value_param_collect_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $23 = ((($0)) + 8|0);
  HEAP32[$23>>2] = 0;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 $6 = HEAP32[$4>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $8 = HEAP32[$0>>2]|0;
  $9 = (_g_type_name($8)|0);
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 123130;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 0;
  $10 = (_g_strconcat(123076,$vararg_buffer)|0);
  $$1 = $10;
  STACKTOP = sp;return ($$1|0);
 }
 $11 = HEAP32[$6>>2]|0;
 $12 = HEAP32[$0>>2]|0;
 $13 = (_g_value_type_compatible($11,$12)|0);
 $14 = ($13|0)==(0);
 if ($14) {
  $15 = HEAP32[$4>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = (_g_type_name($18)|0);
  HEAP32[$vararg_buffer3>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
  HEAP32[$vararg_ptr6>>2] = 123158;
  $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
  HEAP32[$vararg_ptr7>>2] = $19;
  $vararg_ptr8 = ((($vararg_buffer3)) + 12|0);
  HEAP32[$vararg_ptr8>>2] = 123130;
  $vararg_ptr9 = ((($vararg_buffer3)) + 16|0);
  HEAP32[$vararg_ptr9>>2] = 0;
  $20 = (_g_strconcat(123132,$vararg_buffer3)|0);
  $$1 = $20;
  STACKTOP = sp;return ($$1|0);
 } else {
  $21 = ((($4)) + 32|0);
  _g_atomic_int_inc($21);
  $22 = ((($0)) + 8|0);
  HEAP32[$22>>2] = $4;
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _value_param_lcopy_value($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = ((($10)) + 32|0);
    _g_atomic_int_inc($14);
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _g_param_spec_finalize($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35934]|0;
 $2 = (($0) + ($1)|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0);
 if (!($4)) {
  (_g_value_reset($2)|0);
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 64;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = ((($0)) + 20|0);
  $10 = HEAP32[$9>>2]|0;
  _g_free($10);
  $$pre = HEAP32[$5>>2]|0;
  $12 = $$pre;
 } else {
  $12 = $6;
 }
 $11 = $12 & 128;
 $13 = ($11|0)==(0);
 if (!($13)) {
  _g_type_free_instance($0);
  return;
 }
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 _g_free($15);
 _g_type_free_instance($0);
 return;
}
function _g_param_spec_unref($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 32|0);
 $2 = (_g_atomic_int_dec_and_test($1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  return;
 }
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 ftCall_vi($6|0,$0);
 return;
}
function _g_param_spec_ref_sink($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 32|0);
 _g_atomic_int_inc($1);
 return ($0|0);
}
function _g_param_spec_internal($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$014$i = 0, $$014$i34 = 0, $$off$i = 0, $$off$i32 = 0, $$off$i35 = 0, $$off14$i = 0, $$off15$i = 0, $$off17$i = 0, $$off17$i36 = 0, $$off18$i = 0, $$off18$i38 = 0, $$pre$phi43Z2D = 0, $$sink = 0, $$sink46 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i33 = 0, $or$cond$i37 = 0, $or$cond18$i = 0, $or$cond21$i = 0, $or$cond21$i39 = 0;
 var $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = (_g_type_create_instance($0)|0);
 $6 = $4 & 32;
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $$014$i34 = $1;
   L3: while(1) {
    $15 = HEAP8[$$014$i34>>0]|0;
    switch ($15<<24>>24) {
    case 0:  {
     label = 11;
     break L3;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i35 = (($15) + -48)<<24>>24;
     $16 = ($$off$i35&255)>(9);
     $$off17$i36 = (($15) + -65)<<24>>24;
     $17 = ($$off17$i36&255)>(25);
     $or$cond$i37 = $16 & $17;
     $$off18$i38 = (($15) + -97)<<24>>24;
     $18 = ($$off18$i38&255)>(25);
     $or$cond21$i39 = $18 & $or$cond$i37;
     if ($or$cond21$i39) {
      break L3;
     }
    }
    }
    $19 = ((($$014$i34)) + 1|0);
    $$014$i34 = $19;
   }
   if ((label|0) == 11) {
    $20 = (_g_intern_string($1)|0);
    $21 = ((($5)) + 4|0);
    HEAP32[$21>>2] = $20;
    $$pre$phi43Z2D = $21;
    break;
   }
   $22 = (_g_strdup($1)|0);
   $$0$i = $22;
   L11: while(1) {
    $23 = HEAP8[$$0$i>>0]|0;
    switch ($23<<24>>24) {
    case 0:  {
     break L11;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i32 = (($23) + -48)<<24>>24;
     $24 = ($$off$i32&255)>(9);
     $$off14$i = (($23) + -65)<<24>>24;
     $25 = ($$off14$i&255)>(25);
     $or$cond$i33 = $24 & $25;
     $$off15$i = (($23) + -97)<<24>>24;
     $26 = ($$off15$i&255)>(25);
     $or$cond18$i = $26 & $or$cond$i33;
     if ($or$cond18$i) {
      HEAP8[$$0$i>>0] = 45;
     }
    }
    }
    $27 = ((($$0$i)) + 1|0);
    $$0$i = $27;
   }
   $28 = (_g_intern_string($22)|0);
   $29 = ((($5)) + 4|0);
   HEAP32[$29>>2] = $28;
   _g_free($22);
   $$pre$phi43Z2D = $29;
  } else {
   $8 = (_g_intern_static_string($1)|0);
   $9 = ((($5)) + 4|0);
   HEAP32[$9>>2] = $8;
   $$014$i = $8;
   L19: while(1) {
    $10 = HEAP8[$$014$i>>0]|0;
    switch ($10<<24>>24) {
    case 0:  {
     $$pre$phi43Z2D = $9;
     break L1;
     break;
    }
    case 45:  {
     break;
    }
    default: {
     $$off$i = (($10) + -48)<<24>>24;
     $11 = ($$off$i&255)>(9);
     $$off17$i = (($10) + -65)<<24>>24;
     $12 = ($$off17$i&255)>(25);
     $or$cond$i = $11 & $12;
     $$off18$i = (($10) + -97)<<24>>24;
     $13 = ($$off18$i&255)>(25);
     $or$cond21$i = $13 & $or$cond$i;
     if ($or$cond21$i) {
      break L19;
     }
    }
    }
    $14 = ((($$014$i)) + 1|0);
    $$014$i = $14;
   }
   HEAP32[$vararg_buffer>>2] = $8;
   _g_log(0,16,123177,$vararg_buffer);
   $$pre$phi43Z2D = $9;
  }
 } while(0);
 $30 = HEAP32[35934]|0;
 $31 = (($5) + ($30)|0);
 $32 = HEAP32[$$pre$phi43Z2D>>2]|0;
 $33 = (_g_quark_from_string($32)|0);
 $34 = ((($31)) + 24|0);
 HEAP32[$34>>2] = $33;
 $35 = $4 & 64;
 $36 = ($35|0)==(0);
 if ($36) {
  $37 = (_g_strdup($2)|0);
  $$sink = $37;
 } else {
  $$sink = $2;
 }
 $38 = ((($5)) + 20|0);
 HEAP32[$38>>2] = $$sink;
 $39 = $4 & 128;
 $40 = ($39|0)==(0);
 if (!($40)) {
  $$sink46 = $3;
  $42 = ((($5)) + 24|0);
  HEAP32[$42>>2] = $$sink46;
  $43 = ((($5)) + 8|0);
  HEAP32[$43>>2] = $4;
  STACKTOP = sp;return ($5|0);
 }
 $41 = (_g_strdup($3)|0);
 $$sink46 = $41;
 $42 = ((($5)) + 24|0);
 HEAP32[$42>>2] = $$sink46;
 $43 = ((($5)) + 8|0);
 HEAP32[$43>>2] = $4;
 STACKTOP = sp;return ($5|0);
}
function _g_param_value_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 (_g_value_reset($1)|0);
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _g_param_value_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 ;HEAP32[$2>>2]=HEAP32[$1>>2]|0;HEAP32[$2+4>>2]=HEAP32[$1+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[$1+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[$1+12>>2]|0;HEAP32[$2+16>>2]=HEAP32[$1+16>>2]|0;HEAP32[$2+20>>2]=HEAP32[$1+20>>2]|0;
 $7 = (ftCall_iii($5|0,$0,$1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = ((($2)) + 8|0);
  $10 = ((($1)) + 8|0);
  $11 = (_memcmp($9,$10,16)|0);
  $12 = ($11|0)==(0);
  if ($12) {
   $$1 = 0;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $$1 = 1;
 STACKTOP = sp;return ($$1|0);
}
function _g_param_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 $7 = ($6|0)>(-1);
 $8 = $7 ? $6 : -1;
 $9 = ($8|0)<(1);
 $10 = $9 ? $8 : 1;
 return ($10|0);
}
function _g_param_spec_pool_new($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc_n(1,16)|0);
 $2 = $1;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = ($0|0)!=(0);
 $7 = $6&1;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = (_g_hash_table_new(242,243)|0);
 $10 = ((($1)) + 12|0);
 HEAP32[$10>>2] = $9;
 return ($1|0);
}
function _param_spec_pool_hash($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$01213 = 0, $$014 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ($5<<24>>24)==(0);
 if ($6) {
  $$0$lcssa = $2;
  return ($$0$lcssa|0);
 }
 $$01213 = $4;$$014 = $2;$9 = $5;
 while(1) {
  $7 = ($$014*31)|0;
  $8 = $9 << 24 >> 24;
  $10 = (($7) + ($8))|0;
  $11 = ((($$01213)) + 1|0);
  $12 = HEAP8[$11>>0]|0;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $$0$lcssa = $10;
   break;
  } else {
   $$01213 = $11;$$014 = $10;$9 = $12;
  }
 }
 return ($$0$lcssa|0);
}
function _param_spec_pool_equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  $13 = 0;
  return ($13|0);
 }
 $7 = ((($0)) + 4|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_strcmp($8,$10)|0);
 $12 = ($11|0)==(0);
 $phitmp = $12&1;
 $13 = $phitmp;
 return ($13|0);
}
function _g_param_spec_pool_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$017 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $memchr = 0, $or$cond = 0, $or$cond3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($0|0)!=(0|0);
 $4 = ($1|0)!=(0|0);
 $or$cond = $3 & $4;
 $5 = ($2|0)!=(0);
 $or$cond3 = $or$cond & $5;
 if (!($or$cond3)) {
  STACKTOP = sp;return;
 }
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0);
 if (!($8)) {
  STACKTOP = sp;return;
 }
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP8[$10>>0]|0;
 $12 = ($11<<24>>24)==(0);
 L7: do {
  if (!($12)) {
   $$017 = $10;$17 = $11;
   while(1) {
    $16 = $17 << 24 >> 24;
    $memchr = (_memchr(123236,$16,65)|0);
    $18 = ($memchr|0)==(0|0);
    $14 = ((($$017)) + 1|0);
    if ($18) {
     break;
    }
    $13 = HEAP8[$14>>0]|0;
    $15 = ($13<<24>>24)==(0);
    if ($15) {
     break L7;
    } else {
     $$017 = $14;$17 = $13;
    }
   }
   HEAP32[$vararg_buffer>>2] = $10;
   _g_log(0,16,123301,$vararg_buffer);
   STACKTOP = sp;return;
  }
 } while(0);
 HEAP32[$6>>2] = $2;
 $19 = ((($1)) + 32|0);
 _g_atomic_int_inc($19);
 $20 = ((($0)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 (_g_hash_table_add($21,$1)|0);
 STACKTOP = sp;return;
}
function _g_param_spec_pool_lookup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$ph = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $4 = sp;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  $8 = (_strchr($1,58)|0);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $13 = ((($8)) + 1|0);
   $14 = HEAP8[$13>>0]|0;
   $15 = ($14<<24>>24)==(58);
   if (!($15)) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   $16 = $8;
   $17 = $1;
   $18 = (($16) - ($17))|0;
   $19 = ($18>>>0)<(32);
   if ($19) {
    $22 = $4;
   } else {
    $20 = (($18) + 1)|0;
    $21 = (_g_malloc($20)|0);
    $22 = $21;
   }
   (_strncpy($22,$1,$18)|0);
   $23 = (($22) + ($18)|0);
   HEAP8[$23>>0] = 0;
   $24 = (_g_type_from_name($22)|0);
   $25 = ($18>>>0)>(31);
   if ($25) {
    _g_free($22);
   }
   $26 = ($24|0)==(0);
   if ($26) {
    $$1 = 0;
    STACKTOP = sp;return ($$1|0);
   }
   $27 = ($3|0)!=(0);
   $28 = ($24|0)==($2|0);
   $or$cond = $27 | $28;
   if ($or$cond) {
    $29 = (_g_type_is_a($2,$24)|0);
    $30 = ($29|0)==(0);
    if ($30) {
     $$0$ph = 0;
    } else {
     $31 = ((($0)) + 12|0);
     $32 = (($18) + 2)|0;
     $33 = (($1) + ($32)|0);
     $34 = HEAP32[$31>>2]|0;
     $35 = (_param_spec_ht_lookup($34,$33,$24,$3)|0);
     $$0$ph = $35;
    }
   } else {
    $$0$ph = 0;
   }
   $$1 = $$0$ph;
   STACKTOP = sp;return ($$1|0);
  }
 }
 $10 = ((($0)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_param_spec_ht_lookup($11,$1,$2,$3)|0);
 $$1 = $12;
 STACKTOP = sp;return ($$1|0);
}
function _param_spec_ht_lookup($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$014$i = 0, $$02540 = 0, $$1 = 0, $$126$in = 0, $$off$i = 0, $$off$i27 = 0, $$off14$i = 0, $$off15$i = 0, $$off17$i = 0, $$off18$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond$i = 0, $or$cond$i28 = 0, $or$cond18$i = 0, $or$cond21$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $4 = sp;
 $5 = ((($4)) + 16|0);
 HEAP32[$5>>2] = $2;
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = $1;
 $7 = ($3|0)!=(0);
 L1: do {
  if ($7) {
   while(1) {
    $8 = (_g_hash_table_lookup($0,$4)|0);
    $9 = ($8|0)==(0|0);
    if (!($9)) {
     break;
    }
    $10 = HEAP32[$5>>2]|0;
    $11 = (_g_type_parent($10)|0);
    HEAP32[$5>>2] = $11;
    $12 = ($11|0)==(0);
    if ($12) {
     $$02540 = 0;
     break L1;
    }
   }
   $$1 = $8;
   STACKTOP = sp;return ($$1|0);
  } else {
   $13 = (_g_hash_table_lookup($0,$4)|0);
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$02540 = $13;
   } else {
    $$1 = $13;
    STACKTOP = sp;return ($$1|0);
   }
  }
 } while(0);
 $$014$i = $1;
 L11: while(1) {
  $15 = HEAP8[$$014$i>>0]|0;
  switch ($15<<24>>24) {
  case 0:  {
   $$1 = $$02540;
   label = 23;
   break L11;
   break;
  }
  case 45:  {
   break;
  }
  default: {
   $$off$i = (($15) + -48)<<24>>24;
   $16 = ($$off$i&255)>(9);
   $$off17$i = (($15) + -65)<<24>>24;
   $17 = ($$off17$i&255)>(25);
   $or$cond$i = $16 & $17;
   $$off18$i = (($15) + -97)<<24>>24;
   $18 = ($$off18$i&255)>(25);
   $or$cond21$i = $18 & $or$cond$i;
   if ($or$cond21$i) {
    break L11;
   }
  }
  }
  $19 = ((($$014$i)) + 1|0);
  $$014$i = $19;
 }
 if ((label|0) == 23) {
  STACKTOP = sp;return ($$1|0);
 }
 $20 = HEAP32[$6>>2]|0;
 $21 = (_g_strdup($20)|0);
 $$0$i = $21;
 L19: while(1) {
  $22 = HEAP8[$$0$i>>0]|0;
  switch ($22<<24>>24) {
  case 0:  {
   break L19;
   break;
  }
  case 45:  {
   break;
  }
  default: {
   $$off$i27 = (($22) + -48)<<24>>24;
   $23 = ($$off$i27&255)>(9);
   $$off14$i = (($22) + -65)<<24>>24;
   $24 = ($$off14$i&255)>(25);
   $or$cond$i28 = $23 & $24;
   $$off15$i = (($22) + -97)<<24>>24;
   $25 = ($$off15$i&255)>(25);
   $or$cond18$i = $25 & $or$cond$i28;
   if ($or$cond18$i) {
    HEAP8[$$0$i>>0] = 45;
   }
  }
  }
  $26 = ((($$0$i)) + 1|0);
  $$0$i = $26;
 }
 HEAP32[$6>>2] = $21;
 HEAP32[$5>>2] = $2;
 L26: do {
  if ($7) {
   while(1) {
    $27 = (_g_hash_table_lookup($0,$4)|0);
    $28 = ($27|0)==(0|0);
    if (!($28)) {
     break;
    }
    $29 = HEAP32[$5>>2]|0;
    $30 = (_g_type_parent($29)|0);
    HEAP32[$5>>2] = $30;
    $31 = ($30|0)==(0);
    if ($31) {
     $$126$in = 0;
     break L26;
    }
   }
   _g_free($21);
   $$1 = $27;
   STACKTOP = sp;return ($$1|0);
  } else {
   $32 = (_g_hash_table_lookup($0,$4)|0);
   $$126$in = $32;
  }
 } while(0);
 _g_free($21);
 $$1 = $$126$in;
 STACKTOP = sp;return ($$1|0);
}
function _g_param_spec_pool_list_owned($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = 0;
 $3 = $1;
 $4 = ((($2)) + 4|0);
 HEAP32[$4>>2] = $3;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 _g_hash_table_foreach($6,244,$2);
 $7 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($7|0);
}
function _pool_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($1)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)==($6|0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$2>>2]|0;
 $9 = (_g_list_prepend($8,$1)|0);
 HEAP32[$2>>2] = $9;
 return;
}
function _g_param_spec_pool_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i33$i = 0, $$0$lcssa = 0, $$031$lcssa$i = 0, $$03135$i = 0, $$037$i = 0, $$07074 = 0, $$07182 = 0, $$077 = 0, $$1$lcssa = 0, $$132$i = 0, $$17276 = 0, $$175 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0;
 var $exitcond86 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$2>>2] = 0;
 $4 = (_g_type_depth($1)|0);
 $5 = (_g_malloc0_n($4,4)|0);
 HEAP32[$3>>2] = $5;
 $6 = $1;
 $7 = ((($3)) + 4|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_type_fundamental($1)|0);
 $11 = ($10|0)==(8);
 $12 = $11 ? 246 : 245;
 _g_hash_table_foreach($9,$12,$3);
 $13 = ($4|0)==(0);
 if ($13) {
  $14 = HEAP32[$2>>2]|0;
  $15 = (($14) + 1)|0;
  $16 = (_g_malloc_n($15,4)|0);
  $$0$lcssa = $16;$68 = $16;
  HEAP32[$$0$lcssa>>2] = 0;
  _g_free($5);
  STACKTOP = sp;return ($68|0);
 }
 $$07182 = 0;
 while(1) {
  $17 = (($5) + ($$07182<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$8>>2]|0;
  $20 = ($18|0)==(0|0);
  if ($20) {
   $$031$lcssa$i = 0;
  } else {
   $$03135$i = 0;$$037$i = $18;
   while(1) {
    $21 = ((($$037$i)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = HEAP32[$$037$i>>2]|0;
    $24 = ($23|0)==(0|0);
    if ($24) {
     label = 10;
    } else {
     $25 = HEAP32[$23>>2]|0;
     $26 = ($25|0)==(0|0);
     if ($26) {
      label = 10;
     } else {
      $27 = HEAP32[$25>>2]|0;
      $28 = HEAP32[35935]|0;
      $29 = ((($28)) + 80|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = ($27|0)==($30|0);
      if ($31) {
       $32 = ((($23)) + 40|0);
       $33 = HEAP32[$32>>2]|0;
       $34 = ($33|0)==(0|0);
       if ($34) {
        label = 10;
       } else {
        label = 16;
       }
      } else {
       label = 10;
      }
     }
    }
    do {
     if ((label|0) == 10) {
      label = 0;
      $35 = ((($23)) + 4|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = (_param_spec_ht_lookup($19,$36,$1,1)|0);
      $38 = ($37|0)==($23|0);
      if (!($38)) {
       $39 = ($37|0)==(0|0);
       if ($39) {
        $$0$i33$i = 0;
       } else {
        $40 = HEAP32[$37>>2]|0;
        $41 = ($40|0)==(0|0);
        if ($41) {
         $$0$i33$i = 0;
        } else {
         $42 = HEAP32[$40>>2]|0;
         $43 = HEAP32[35935]|0;
         $44 = ((($43)) + 80|0);
         $45 = HEAP32[$44>>2]|0;
         $46 = ($42|0)==($45|0);
         if ($46) {
          $47 = ((($37)) + 40|0);
          $48 = HEAP32[$47>>2]|0;
          $$0$i33$i = $48;
         } else {
          $$0$i33$i = 0;
         }
        }
       }
       $49 = ($$0$i33$i|0)==($23|0);
       if (!($49)) {
        label = 16;
        break;
       }
      }
      HEAP32[$21>>2] = $$03135$i;
      $50 = HEAP32[$2>>2]|0;
      $51 = (($50) + 1)|0;
      HEAP32[$2>>2] = $51;
      $$132$i = $$037$i;
     }
    } while(0);
    if ((label|0) == 16) {
     label = 0;
     _g_slist_free_1($$037$i);
     $$132$i = $$03135$i;
    }
    $52 = ($22|0)==(0|0);
    if ($52) {
     $$031$lcssa$i = $$132$i;
     break;
    } else {
     $$03135$i = $$132$i;$$037$i = $22;
    }
   }
  }
  HEAP32[$17>>2] = $$031$lcssa$i;
  $53 = (($$07182) + 1)|0;
  $exitcond86 = ($53|0)==($4|0);
  if ($exitcond86) {
   break;
  } else {
   $$07182 = $53;
  }
 }
 $54 = HEAP32[$2>>2]|0;
 $55 = (($54) + 1)|0;
 $56 = (_g_malloc_n($55,4)|0);
 if ($13) {
  $$0$lcssa = $56;$68 = $56;
  HEAP32[$$0$lcssa>>2] = 0;
  _g_free($5);
  STACKTOP = sp;return ($68|0);
 }
 $$077 = $56;$$17276 = 0;
 while(1) {
  $57 = (($5) + ($$17276<<2)|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = (_g_slist_sort($58,247)|0);
  HEAP32[$57>>2] = $59;
  $60 = ($59|0)==(0|0);
  if ($60) {
   $$1$lcssa = $$077;$66 = 0;
  } else {
   $$07074 = $59;$$175 = $$077;
   while(1) {
    $61 = HEAP32[$$07074>>2]|0;
    $62 = ((($$175)) + 4|0);
    HEAP32[$$175>>2] = $61;
    $63 = ((($$07074)) + 4|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ($64|0)==(0|0);
    if ($65) {
     break;
    } else {
     $$07074 = $64;$$175 = $62;
    }
   }
   $$pre = HEAP32[$57>>2]|0;
   $$1$lcssa = $62;$66 = $$pre;
  }
  _g_slist_free($66);
  $67 = (($$17276) + 1)|0;
  $exitcond = ($67|0)==($4|0);
  if ($exitcond) {
   $$0$lcssa = $$1$lcssa;$68 = $56;
   break;
  } else {
   $$077 = $$1$lcssa;$$17276 = $67;
  }
 }
 HEAP32[$$0$lcssa>>2] = 0;
 _g_free($5);
 STACKTOP = sp;return ($68|0);
}
function _pool_depth_list_for_interface($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==($5|0);
 if (!($8)) {
  return;
 }
 $9 = HEAP32[$3>>2]|0;
 $10 = (_g_slist_prepend($9,$1)|0);
 HEAP32[$3>>2] = $10;
 return;
}
function _pool_depth_list($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($1)) + 16|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_is_a($5,$7)|0);
 $9 = ($8|0)==(0);
 if ($9) {
  return;
 }
 $10 = HEAP32[$6>>2]|0;
 $11 = (_g_type_fundamental($10)|0);
 $12 = ($11|0)==(8);
 if ($12) {
  $$sink = $3;
 } else {
  $13 = HEAP32[$6>>2]|0;
  $14 = (_g_type_depth($13)|0);
  $15 = (($14) + -1)|0;
  $16 = (($3) + ($15<<2)|0);
  $$sink = $16;
 }
 $17 = HEAP32[$$sink>>2]|0;
 $18 = (_g_slist_prepend($17,$1)|0);
 HEAP32[$$sink>>2] = $18;
 return;
}
function _pspec_compare_id($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 36|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $$0 = -1;
  return ($$0|0);
 }
 $7 = ($3>>>0)>($5>>>0);
 if ($7) {
  $$0 = 1;
  return ($$0|0);
 }
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($1)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_strcmp($9,$11)|0);
 $$0 = $12;
 return ($$0|0);
}
function _g_param_type_register_static($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $2 = sp;
 dest=$2; src=118348; stop=dest+36|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $3 = HEAP16[$1>>1]|0;
 $4 = ((($2)) + 24|0);
 HEAP16[$4>>1] = $3;
 $5 = ((($1)) + 2|0);
 $6 = HEAP16[$5>>1]|0;
 $7 = ((($2)) + 26|0);
 HEAP16[$7>>1] = $6;
 $8 = ((($1)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 28|0);
 HEAP32[$10>>2] = $9;
 $11 = (_g_malloc_n(1,20)|0);
 $12 = ((($1)) + 8|0);
 $13 = HEAP32[$12>>2]|0;
 HEAP32[$11>>2] = $13;
 $14 = ((($1)) + 12|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($11)) + 4|0);
 HEAP32[$16>>2] = $15;
 $17 = ((($1)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 $20 = $19 ? 248 : $18;
 $21 = ((($11)) + 8|0);
 HEAP32[$21>>2] = $20;
 $22 = ((($1)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($11)) + 12|0);
 HEAP32[$24>>2] = $23;
 $25 = ((($1)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($26|0)==(0|0);
 $spec$select = $27 ? 249 : $26;
 $28 = ((($11)) + 16|0);
 HEAP32[$28>>2] = $spec$select;
 $29 = ((($2)) + 20|0);
 HEAP32[$29>>2] = $11;
 $30 = (_g_type_register_static(76,$0,$2,0)|0);
 STACKTOP = sp;return ($30|0);
}
function _default_value_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _default_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = ((($2)) + 8|0);
 $5 = (_memcmp($3,$4,16)|0);
 return ($5|0);
}
function _param_spec_generic_class_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 4|0);
 HEAP32[$3>>2] = $2;
 $4 = ((($1)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  $7 = ((($0)) + 8|0);
  HEAP32[$7>>2] = $5;
 }
 $8 = ((($1)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = $9;
 $11 = ((($1)) + 12|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($12|0)==(0|0);
 if (!($13)) {
  $14 = ((($0)) + 16|0);
  HEAP32[$14>>2] = $12;
 }
 $15 = ((($1)) + 16|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($0)) + 20|0);
 HEAP32[$17>>2] = $16;
 _g_free($1);
 return;
}
function _g_param_spec_get_name_quark($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35934]|0;
 $2 = (($0) + ($1)|0);
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function __g_param_spec_types_init() {
 var $0 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $0 = sp;
 $1 = (_g_malloc0_n(23,4)|0);
 HEAP32[35935] = $1;
 $2 = (_g_intern_static_string(123382)|0);
 $3 = (_g_param_type_register_static($2,118384)|0);
 HEAP32[$1>>2] = $3;
 $4 = HEAP32[35935]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3|0)==($5|0);
 if (!($6)) {
  _g_assertion_message_expr(0,123393,1216,123430,123455);
  // unreachable;
 }
 $7 = ((($1)) + 4|0);
 $8 = (_g_intern_static_string(123481)|0);
 $9 = (_g_param_type_register_static($8,118412)|0);
 HEAP32[$7>>2] = $9;
 $10 = HEAP32[35935]|0;
 $11 = ((($10)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($9|0)==($12|0);
 if (!($13)) {
  _g_assertion_message_expr(0,123393,1234,123430,123493);
  // unreachable;
 }
 $14 = ((($1)) + 8|0);
 $15 = (_g_intern_static_string(123520)|0);
 $16 = (_g_param_type_register_static($15,118440)|0);
 HEAP32[$14>>2] = $16;
 $17 = HEAP32[35935]|0;
 $18 = ((($17)) + 8|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($16|0)==($19|0);
 if (!($20)) {
  _g_assertion_message_expr(0,123393,1252,123430,123534);
  // unreachable;
 }
 $21 = ((($1)) + 12|0);
 $22 = (_g_intern_static_string(123563)|0);
 $23 = (_g_param_type_register_static($22,118468)|0);
 HEAP32[$21>>2] = $23;
 $24 = HEAP32[35935]|0;
 $25 = ((($24)) + 12|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ($23|0)==($26|0);
 if (!($27)) {
  _g_assertion_message_expr(0,123393,1270,123430,123573);
  // unreachable;
 }
 $28 = ((($1)) + 16|0);
 $29 = (_g_intern_static_string(123598)|0);
 $30 = (_g_param_type_register_static($29,118496)|0);
 HEAP32[$28>>2] = $30;
 $31 = HEAP32[35935]|0;
 $32 = ((($31)) + 16|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($30|0)==($33|0);
 if (!($34)) {
  _g_assertion_message_expr(0,123393,1288,123430,123609);
  // unreachable;
 }
 $35 = ((($1)) + 20|0);
 $36 = (_g_intern_static_string(123635)|0);
 $37 = (_g_param_type_register_static($36,118524)|0);
 HEAP32[$35>>2] = $37;
 $38 = HEAP32[35935]|0;
 $39 = ((($38)) + 20|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($37|0)==($40|0);
 if (!($41)) {
  _g_assertion_message_expr(0,123393,1306,123430,123646);
  // unreachable;
 }
 $42 = ((($1)) + 24|0);
 $43 = (_g_intern_static_string(123672)|0);
 $44 = (_g_param_type_register_static($43,118552)|0);
 HEAP32[$42>>2] = $44;
 $45 = HEAP32[35935]|0;
 $46 = ((($45)) + 24|0);
 $47 = HEAP32[$46>>2]|0;
 $48 = ($44|0)==($47|0);
 if (!($48)) {
  _g_assertion_message_expr(0,123393,1324,123430,123684);
  // unreachable;
 }
 $49 = ((($1)) + 28|0);
 $50 = (_g_intern_static_string(123711)|0);
 $51 = (_g_param_type_register_static($50,118580)|0);
 HEAP32[$49>>2] = $51;
 $52 = HEAP32[35935]|0;
 $53 = ((($52)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ($51|0)==($54|0);
 if (!($55)) {
  _g_assertion_message_expr(0,123393,1342,123430,123723);
  // unreachable;
 }
 $56 = ((($1)) + 32|0);
 $57 = (_g_intern_static_string(123750)|0);
 $58 = (_g_param_type_register_static($57,118608)|0);
 HEAP32[$56>>2] = $58;
 $59 = HEAP32[35935]|0;
 $60 = ((($59)) + 32|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = ($58|0)==($61|0);
 if (!($62)) {
  _g_assertion_message_expr(0,123393,1360,123430,123763);
  // unreachable;
 }
 $63 = ((($1)) + 36|0);
 $64 = (_g_intern_static_string(123791)|0);
 $65 = (_g_param_type_register_static($64,118636)|0);
 HEAP32[$63>>2] = $65;
 $66 = HEAP32[35935]|0;
 $67 = ((($66)) + 36|0);
 $68 = HEAP32[$67>>2]|0;
 $69 = ($65|0)==($68|0);
 if (!($69)) {
  _g_assertion_message_expr(0,123393,1378,123430,123805);
  // unreachable;
 }
 $70 = ((($1)) + 40|0);
 $71 = (_g_intern_static_string(123834)|0);
 $72 = (_g_param_type_register_static($71,118664)|0);
 HEAP32[$70>>2] = $72;
 $73 = HEAP32[35935]|0;
 $74 = ((($73)) + 40|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = ($72|0)==($75|0);
 if (!($76)) {
  _g_assertion_message_expr(0,123393,1396,123430,123845);
  // unreachable;
 }
 $77 = ((($1)) + 44|0);
 $78 = (_g_intern_static_string(123871)|0);
 $79 = (_g_param_type_register_static($78,118692)|0);
 HEAP32[$77>>2] = $79;
 $80 = HEAP32[35935]|0;
 $81 = ((($80)) + 44|0);
 $82 = HEAP32[$81>>2]|0;
 $83 = ($79|0)==($82|0);
 if (!($83)) {
  _g_assertion_message_expr(0,123393,1414,123430,123883);
  // unreachable;
 }
 $84 = ((($1)) + 48|0);
 $85 = (_g_intern_static_string(123910)|0);
 $86 = (_g_param_type_register_static($85,118720)|0);
 HEAP32[$84>>2] = $86;
 $87 = HEAP32[35935]|0;
 $88 = ((($87)) + 48|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ($86|0)==($89|0);
 if (!($90)) {
  _g_assertion_message_expr(0,123393,1432,123430,123922);
  // unreachable;
 }
 $91 = ((($1)) + 52|0);
 $92 = (_g_intern_static_string(123949)|0);
 $93 = (_g_param_type_register_static($92,118748)|0);
 HEAP32[$91>>2] = $93;
 $94 = HEAP32[35935]|0;
 $95 = ((($94)) + 52|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($93|0)==($96|0);
 if (!($97)) {
  _g_assertion_message_expr(0,123393,1450,123430,123962);
  // unreachable;
 }
 $98 = ((($1)) + 56|0);
 $99 = (_g_intern_static_string(123990)|0);
 $100 = (_g_param_type_register_static($99,118776)|0);
 HEAP32[$98>>2] = $100;
 $101 = HEAP32[35935]|0;
 $102 = ((($101)) + 56|0);
 $103 = HEAP32[$102>>2]|0;
 $104 = ($100|0)==($103|0);
 if (!($104)) {
  _g_assertion_message_expr(0,123393,1468,123430,124003);
  // unreachable;
 }
 $105 = ((($1)) + 60|0);
 $106 = (_g_intern_static_string(124031)|0);
 $107 = (_g_param_type_register_static($106,118804)|0);
 HEAP32[$105>>2] = $107;
 $108 = HEAP32[35935]|0;
 $109 = ((($108)) + 60|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ($107|0)==($110|0);
 if (!($111)) {
  _g_assertion_message_expr(0,123393,1486,123430,124043);
  // unreachable;
 }
 $112 = ((($1)) + 64|0);
 $113 = (_g_intern_static_string(124070)|0);
 $114 = (_g_param_type_register_static($113,118832)|0);
 HEAP32[$112>>2] = $114;
 $115 = HEAP32[35935]|0;
 $116 = ((($115)) + 64|0);
 $117 = HEAP32[$116>>2]|0;
 $118 = ($114|0)==($117|0);
 if (!($118)) {
  _g_assertion_message_expr(0,123393,1504,123430,124082);
  // unreachable;
 }
 $119 = ((($1)) + 68|0);
 $120 = (_g_intern_static_string(124109)|0);
 $121 = (_g_param_type_register_static($120,118860)|0);
 HEAP32[$119>>2] = $121;
 $122 = HEAP32[35935]|0;
 $123 = ((($122)) + 68|0);
 $124 = HEAP32[$123>>2]|0;
 $125 = ($121|0)==($124|0);
 if (!($125)) {
  _g_assertion_message_expr(0,123393,1522,123430,124123);
  // unreachable;
 }
 $126 = ((($1)) + 72|0);
 ;HEAP32[$0>>2]=HEAP32[118888>>2]|0;HEAP32[$0+4>>2]=HEAP32[118888+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[118888+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[118888+12>>2]|0;HEAP32[$0+16>>2]=HEAP32[118888+16>>2]|0;HEAP32[$0+20>>2]=HEAP32[118888+20>>2]|0;HEAP32[$0+24>>2]=HEAP32[118888+24>>2]|0;
 $127 = (_g_value_array_get_type()|0);
 $128 = ((($0)) + 8|0);
 HEAP32[$128>>2] = $127;
 $129 = (_g_intern_static_string(124152)|0);
 $130 = (_g_param_type_register_static($129,$0)|0);
 HEAP32[$126>>2] = $130;
 $131 = HEAP32[35935]|0;
 $132 = ((($131)) + 72|0);
 $133 = HEAP32[$132>>2]|0;
 $134 = ($130|0)==($133|0);
 if (!($134)) {
  _g_assertion_message_expr(0,123393,1541,123430,124169);
  // unreachable;
 }
 $135 = ((($1)) + 76|0);
 $136 = (_g_intern_static_string(124202)|0);
 $137 = (_g_param_type_register_static($136,118916)|0);
 HEAP32[$135>>2] = $137;
 $138 = HEAP32[35935]|0;
 $139 = ((($138)) + 76|0);
 $140 = HEAP32[$139>>2]|0;
 $141 = ($137|0)==($140|0);
 if (!($141)) {
  _g_assertion_message_expr(0,123393,1559,123430,124215);
  // unreachable;
 }
 $142 = ((($1)) + 80|0);
 $143 = (_g_intern_static_string(124243)|0);
 $144 = (_g_param_type_register_static($143,118944)|0);
 HEAP32[$142>>2] = $144;
 $145 = HEAP32[35935]|0;
 $146 = ((($145)) + 80|0);
 $147 = HEAP32[$146>>2]|0;
 $148 = ($144|0)==($147|0);
 if (!($148)) {
  _g_assertion_message_expr(0,123393,1577,123430,124258);
  // unreachable;
 }
 $149 = ((($1)) + 84|0);
 ;HEAP32[$0>>2]=HEAP32[118972>>2]|0;HEAP32[$0+4>>2]=HEAP32[118972+4>>2]|0;HEAP32[$0+8>>2]=HEAP32[118972+8>>2]|0;HEAP32[$0+12>>2]=HEAP32[118972+12>>2]|0;HEAP32[$0+16>>2]=HEAP32[118972+16>>2]|0;HEAP32[$0+20>>2]=HEAP32[118972+20>>2]|0;HEAP32[$0+24>>2]=HEAP32[118972+24>>2]|0;
 $150 = (_g_gtype_get_type()|0);
 $151 = ((($0)) + 8|0);
 HEAP32[$151>>2] = $150;
 $152 = (_g_intern_static_string(124288)|0);
 $153 = (_g_param_type_register_static($152,$0)|0);
 HEAP32[$149>>2] = $153;
 $154 = HEAP32[35935]|0;
 $155 = ((($154)) + 84|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ($153|0)==($156|0);
 if (!($157)) {
  _g_assertion_message_expr(0,123393,1596,123430,124300);
  // unreachable;
 }
 $158 = ((($1)) + 88|0);
 $159 = (_g_intern_static_string(124327)|0);
 $160 = (_g_param_type_register_static($159,119000)|0);
 HEAP32[$158>>2] = $160;
 $161 = HEAP32[35935]|0;
 $162 = ((($161)) + 88|0);
 $163 = HEAP32[$162>>2]|0;
 $164 = ($160|0)==($163|0);
 if ($164) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,123393,1614,123430,124341);
  // unreachable;
 }
}
function _param_variant_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 88|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_variant_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 88|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 88|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 44|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_variant_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 88|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($1)) + 16|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 | 134217728;
 HEAP32[$9>>2] = $11;
 return;
}
function _param_variant_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 88|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $cond = ($7|0)==(0|0);
 if ($cond) {
  $8 = ((($0)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if ($10) {
   $$0 = 0;
   return ($$0|0);
  }
 } else {
  $11 = ((($0)) + 40|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (_g_variant_is_of_type($7,$12)|0);
  $14 = ($13|0)==(0);
  if (!($14)) {
   $$0 = 0;
   return ($$0|0);
  }
 }
 _g_param_value_set_default($0,$1);
 $$0 = 1;
 return ($$0|0);
}
function _param_variant_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, $or$cond5 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)==(0|0);
 $8 = ($6|0)==(0|0);
 $or$cond = $7 & $8;
 if ($or$cond) {
  return 0;
 } else {
  $9 = ($6|0)!=(0|0);
  $or$cond3 = $7 & $9;
  $10 = ($4|0)!=(0|0);
  $or$cond5 = $10 & $8;
  $$ = $or$cond5&1;
  $spec$select = $or$cond3 ? -1 : $$;
  return ($spec$select|0);
 }
 return (0)|0;
}
function _param_gtype_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_gtype_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_gtype_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 84|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(4);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = ((($1)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_is_a($10,$7)|0);
 $12 = ($11|0)==(0);
 if (!($12)) {
  $$0 = 0;
  return ($$0|0);
 }
 $13 = HEAP32[$6>>2]|0;
 HEAP32[$9>>2] = $13;
 $$0 = 1;
 return ($$0|0);
}
function _param_gtype_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_override_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_override_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 80|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 80|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_param_spec_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_override_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 80|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 _g_param_value_set_default($7,$1);
 return;
}
function _param_override_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 80|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_value_validate($7,$1)|0);
 return ($8|0);
}
function _param_override_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[35935]|0;
 $4 = ((($3)) + 80|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 40|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (_g_param_values_cmp($8,$1,$2)|0);
 return ($9|0);
}
function _param_object_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_object_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_object_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = HEAP32[$7>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 $11 = (_g_type_check_instance_cast($5,76)|0);
 $12 = ((($0)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_value_type_compatible($10,$13)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $$0 = 0;
  return ($$0|0);
 }
 _g_object_unref($7);
 HEAP32[$6>>2] = 0;
 $$0 = 1;
 return ($$0|0);
}
function _param_object_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_value_array_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 72|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_value_array_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 72|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 72|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_param_spec_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_value_array_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 72|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = ((($0)) + 44|0);
 if ($8) {
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   return;
  }
  $12 = (_g_value_array_new($10)|0);
  HEAP32[$6>>2] = $12;
  $13 = ($12|0)==(0|0);
  if ($13) {
   return;
  } else {
   $17 = $12;
  }
 } else {
  $17 = $7;
 }
 $14 = HEAP32[$9>>2]|0;
 $15 = ($14|0)==(0);
 if ($15) {
  return;
 }
 $16 = HEAP32[$17>>2]|0;
 $18 = ($16>>>0)<($14>>>0);
 if ($18) {
  while(1) {
   (_g_value_array_append($17,0)|0);
   $19 = HEAP32[$17>>2]|0;
   $20 = ($19>>>0)<($14>>>0);
   if (!($20)) {
    $22 = $19;
    break;
   }
  }
 } else {
  $22 = $16;
 }
 $21 = ($22>>>0)>($14>>>0);
 if (!($21)) {
  return;
 }
 $24 = $22;
 while(1) {
  $23 = (($24) + -1)|0;
  (_g_value_array_remove($17,$23)|0);
  $25 = HEAP32[$17>>2]|0;
  $26 = ($25>>>0)>($14>>>0);
  if ($26) {
   $24 = $25;
  } else {
   break;
  }
 }
 return;
}
function _param_value_array_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa$i = 0, $$012$i = 0, $$04043 = 0, $$044 = 0, $$1 = 0, $$111$i = 0, $$2 = 0, $$2$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 72|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 $9 = ((($0)) + 44|0);
 if ($8) {
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$2 = 0;
   return ($$2|0);
  }
  $12 = (_g_value_array_new($10)|0);
  HEAP32[$6>>2] = $12;
  $phitmp = ($12|0)==(0|0);
  if ($phitmp) {
   $$2 = 0;
   return ($$2|0);
  }
 }
 $13 = HEAP32[$9>>2]|0;
 $14 = ($13|0)==(0);
 if ($14) {
  $$2$i = 0;
 } else {
  $15 = HEAP32[$7>>2]|0;
  $16 = ($15>>>0)<($13>>>0);
  if ($16) {
   $$012$i = 0;
   while(1) {
    (_g_value_array_append($7,0)|0);
    $17 = (($$012$i) + 1)|0;
    $18 = HEAP32[$7>>2]|0;
    $19 = ($18>>>0)<($13>>>0);
    if ($19) {
     $$012$i = $17;
    } else {
     $$0$lcssa$i = $17;$21 = $18;
     break;
    }
   }
  } else {
   $$0$lcssa$i = 0;$21 = $15;
  }
  $20 = ($21>>>0)>($13>>>0);
  if ($20) {
   $$111$i = $$0$lcssa$i;$23 = $21;
   while(1) {
    $22 = (($23) + -1)|0;
    (_g_value_array_remove($7,$22)|0);
    $24 = (($$111$i) + 1)|0;
    $25 = HEAP32[$7>>2]|0;
    $26 = ($25>>>0)>($13>>>0);
    if ($26) {
     $$111$i = $24;$23 = $25;
    } else {
     $$2$i = $24;
     break;
    }
   }
  } else {
   $$2$i = $$0$lcssa$i;
  }
 }
 $27 = ((($0)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if ($29) {
  $$2 = $$2$i;
  return ($$2|0);
 }
 $30 = HEAP32[$7>>2]|0;
 $31 = ($30|0)==(0);
 if ($31) {
  $$2 = $$2$i;
  return ($$2|0);
 }
 $32 = ((($7)) + 4|0);
 $$04043 = 0;$$044 = $$2$i;
 while(1) {
  $33 = HEAP32[$32>>2]|0;
  $34 = (($33) + (($$04043*24)|0)|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (_g_type_check_instance_cast($28,76)|0);
  $37 = ((($28)) + 12|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (_g_value_type_compatible($35,$38)|0);
  $40 = ($39|0)==(0);
  if ($40) {
   $41 = HEAP32[$34>>2]|0;
   $42 = ($41|0)==(0);
   if (!($42)) {
    _g_value_unset($34);
   }
   $43 = (_g_type_check_instance_cast($28,76)|0);
   $44 = ((($28)) + 12|0);
   $45 = HEAP32[$44>>2]|0;
   (_g_value_init($34,$45)|0);
   _g_param_value_set_default($28,$34);
   $46 = (($$044) + 1)|0;
   $$1 = $46;
  } else {
   $$1 = $$044;
  }
  $47 = (_g_param_value_validate($28,$34)|0);
  $48 = (($47) + ($$1))|0;
  $49 = (($$04043) + 1)|0;
  $50 = HEAP32[$7>>2]|0;
  $51 = ($49>>>0)<($50>>>0);
  if ($51) {
   $$04043 = $49;$$044 = $48;
  } else {
   $$2 = $48;
   break;
  }
 }
 return ($$2|0);
}
function _param_value_array_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$04951 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, $or$cond61 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[35935]|0;
 $4 = ((($3)) + 72|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($1)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($2)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8|0)!=(0|0);
 $12 = ($10|0)!=(0|0);
 $or$cond = $11 & $12;
 if (!($or$cond)) {
  $13 = ($8|0)!=($10|0);
  $14 = $13&1;
  $15 = $12 ? -1 : $14;
  $$3 = $15;
  return ($$3|0);
 }
 $16 = HEAP32[$8>>2]|0;
 $17 = HEAP32[$10>>2]|0;
 $18 = ($16|0)==($17|0);
 if (!($18)) {
  $19 = ($16>>>0)<($17>>>0);
  $20 = $19 ? -1 : 1;
  $$3 = $20;
  return ($$3|0);
 }
 $21 = ((($0)) + 40|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 $24 = ($16|0)==(0);
 $or$cond61 = $23 | $24;
 if ($or$cond61) {
  $$3 = 0;
  return ($$3|0);
 }
 $25 = ((($8)) + 4|0);
 $26 = ((($10)) + 4|0);
 $$04951 = 0;
 while(1) {
  $30 = HEAP32[$25>>2]|0;
  $31 = (($30) + (($$04951*24)|0)|0);
  $32 = HEAP32[$26>>2]|0;
  $33 = (($32) + (($$04951*24)|0)|0);
  $34 = HEAP32[$31>>2]|0;
  $35 = HEAP32[$33>>2]|0;
  $36 = ($34|0)==($35|0);
  if (!($36)) {
   label = 9;
   break;
  }
  $39 = HEAP32[$21>>2]|0;
  $40 = (_g_param_values_cmp($39,$31,$33)|0);
  $41 = ($40|0)==(0);
  $29 = (($$04951) + 1)|0;
  if (!($41)) {
   $$3 = $40;
   label = 11;
   break;
  }
  $27 = HEAP32[$8>>2]|0;
  $28 = ($29>>>0)<($27>>>0);
  if ($28) {
   $$04951 = $29;
  } else {
   $$3 = 0;
   label = 11;
   break;
  }
 }
 if ((label|0) == 9) {
  $37 = ($34>>>0)<($35>>>0);
  $38 = $37 ? -1 : 1;
  $$3 = $38;
  return ($$3|0);
 }
 else if ((label|0) == 11) {
  return ($$3|0);
 }
 return (0)|0;
}
function _param_pointer_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_pointer_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_pointer_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_pointer_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_boxed_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_boxed_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_boxed_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_boxed_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $10 = $7 ? -1 : $9;
 return ($10|0);
}
function _param_param_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _param_param_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _param_param_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_type_check_instance_cast($0,76)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_value_type_compatible($6,$9)|0);
 $11 = ($10|0)==(0);
 if (!($11)) {
  $$0 = 0;
  return ($$0|0);
 }
 _g_param_spec_unref($3);
 HEAP32[$2>>2] = 0;
 $$0 = 1;
 return ($$0|0);
}
function _param_string_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 56|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 $8 = ((($0)) + 52|0);
 HEAP8[$8>>0] = 95;
 $9 = ((($0)) + 53|0);
 $10 = HEAP8[$9>>0]|0;
 $11 = $10 & -4;
 HEAP8[$9>>0] = $11;
 return;
}
function _param_string_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 56|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 56|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 _g_free($11);
 $12 = ((($0)) + 44|0);
 $13 = HEAP32[$12>>2]|0;
 _g_free($13);
 $14 = ((($0)) + 48|0);
 $15 = HEAP32[$14>>2]|0;
 _g_free($15);
 HEAP32[$10>>2] = 0;
 HEAP32[$12>>2] = 0;
 HEAP32[$14>>2] = 0;
 $16 = ((($9)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _param_string_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_strdup($7)|0);
 $9 = ((($1)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function _param_string_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$056 = 0, $$059 = 0, $$069 = 0, $$072 = 0, $$1 = 0, $$15771 = 0, $$160 = 0, $$2 = 0, $$258 = 0, $$26170 = 0, $$362 = 0, $$4 = 0, $$463 = 0, $$5 = 0, $$6 = 0, $$665 = 0, $$7 = 0, $$pre = 0, $10 = 0;
 var $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 56|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $9 = ((($0)) + 53|0);
  $$5 = 0;$$7 = 0;$68 = $9;
 } else {
  $10 = HEAP8[$7>>0]|0;
  $11 = $10 << 24 >> 24;
  $12 = ($10<<24>>24)==(0);
  L4: do {
   if ($12) {
    $$4 = 0;$$665 = $7;
   } else {
    $13 = ((($0)) + 44|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = ($14|0)==(0|0);
    if ($15) {
     $$056 = 0;$$160 = $7;
    } else {
     $16 = (_strchr($14,$11)|0);
     $17 = ($16|0)==(0|0);
     if ($17) {
      $18 = ((($1)) + 16|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = $19 & 134217728;
      $21 = ($20|0)==(0);
      if ($21) {
       $$059 = $7;
      } else {
       $22 = (_g_strdup($7)|0);
       HEAP32[$6>>2] = $22;
       $23 = HEAP32[$18>>2]|0;
       $24 = $23 & -134217729;
       HEAP32[$18>>2] = $24;
       $$059 = $22;
      }
      $25 = ((($0)) + 52|0);
      $26 = HEAP8[$25>>0]|0;
      HEAP8[$$059>>0] = $26;
      $$056 = 1;$$160 = $$059;
     } else {
      $$056 = 0;$$160 = $7;
     }
    }
    $27 = ((($0)) + 48|0);
    $28 = HEAP32[$27>>2]|0;
    $29 = ($28|0)==(0|0);
    if ($29) {
     $$4 = $$056;$$665 = $$160;
    } else {
     $$069 = ((($$160)) + 1|0);
     $30 = HEAP8[$$069>>0]|0;
     $31 = ($30<<24>>24)==(0);
     if ($31) {
      $$4 = $$056;$$665 = $$160;
     } else {
      $32 = ((($1)) + 16|0);
      $33 = ((($0)) + 52|0);
      $$072 = $$069;$$15771 = $$056;$$26170 = $$160;$35 = $30;$36 = $28;
      while(1) {
       $34 = $35 << 24 >> 24;
       $37 = (_strchr($36,$34)|0);
       $38 = ($37|0)==(0|0);
       if ($38) {
        $39 = HEAP32[$32>>2]|0;
        $40 = $39 & 134217728;
        $41 = ($40|0)==(0);
        if ($41) {
         $$1 = $$072;$$362 = $$26170;
        } else {
         $42 = (_g_strdup($$26170)|0);
         HEAP32[$6>>2] = $42;
         $43 = $$072;
         $44 = $$26170;
         $45 = (($43) - ($44))|0;
         $46 = (($42) + ($45)|0);
         $47 = HEAP32[$32>>2]|0;
         $48 = $47 & -134217729;
         HEAP32[$32>>2] = $48;
         $$1 = $46;$$362 = $42;
        }
        $49 = HEAP8[$33>>0]|0;
        HEAP8[$$1>>0] = $49;
        $50 = (($$15771) + 1)|0;
        $$2 = $$1;$$258 = $50;$$463 = $$362;
       } else {
        $$2 = $$072;$$258 = $$15771;$$463 = $$26170;
       }
       $$0 = ((($$2)) + 1|0);
       $51 = HEAP8[$$0>>0]|0;
       $52 = ($51<<24>>24)==(0);
       if ($52) {
        $$4 = $$258;$$665 = $$463;
        break L4;
       }
       $$pre = HEAP32[$27>>2]|0;
       $$072 = $$0;$$15771 = $$258;$$26170 = $$463;$35 = $51;$36 = $$pre;
      }
     }
    }
   }
  } while(0);
  $53 = ((($0)) + 53|0);
  $54 = HEAP8[$53>>0]|0;
  $55 = $54 & 1;
  $56 = ($55<<24>>24)!=(0);
  $57 = ($$665|0)!=(0|0);
  $or$cond = $57 & $56;
  if ($or$cond) {
   $58 = HEAP8[$$665>>0]|0;
   $59 = ($58<<24>>24)==(0);
   if (!($59)) {
    $$6 = $$4;
    return ($$6|0);
   }
   $60 = ((($1)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 & 134217728;
   $63 = ($62|0)==(0);
   if ($63) {
    $64 = HEAP32[$6>>2]|0;
    _g_free($64);
   } else {
    $65 = $61 & -134217729;
    HEAP32[$60>>2] = $65;
   }
   HEAP32[$6>>2] = 0;
   $66 = (($$4) + 1)|0;
   $$5 = $66;$$7 = 0;$68 = $53;
  } else {
   $$5 = $$4;$$7 = $$665;$68 = $53;
  }
 }
 $67 = HEAP8[$68>>0]|0;
 $69 = $67 & 2;
 $70 = ($69<<24>>24)==(0);
 $71 = ($$7|0)!=(0|0);
 $or$cond3 = $71 | $70;
 if ($or$cond3) {
  $$6 = $$5;
  return ($$6|0);
 }
 $72 = ((($1)) + 16|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = $73 & -134217729;
 HEAP32[$72>>2] = $74;
 $75 = (_g_strdup(144793)|0);
 HEAP32[$6>>2] = $75;
 $76 = (($$5) + 1)|0;
 $$6 = $76;
 return ($$6|0);
}
function _param_string_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)!=(0|0);
 if ($5) {
  $9 = $8 << 31 >> 31;
  $$0 = $9;
  return ($$0|0);
 }
 if (!($8)) {
  $$0 = 1;
  return ($$0|0);
 }
 $10 = (_strcmp($4,$7)|0);
 $$0 = $10;
 return ($$0|0);
}
function _param_double_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 52|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAPF64[$5>>3] = -1.7976931348623157E+308;
 $6 = ((($0)) + 48|0);
 HEAPF64[$6>>3] = 1.7976931348623157E+308;
 $7 = ((($0)) + 56|0);
 HEAPF64[$7>>3] = 0.0;
 $8 = ((($0)) + 64|0);
 HEAPF64[$8>>3] = 9.9999999999999999E-91;
 return;
}
function _param_double_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = +HEAPF64[$6>>3];
 $8 = ((($1)) + 8|0);
 HEAPF64[$8>>3] = $7;
 return;
}
function _param_double_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0.0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 52|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = +HEAPF64[$6>>3];
 $8 = ((($0)) + 48|0);
 $9 = +HEAPF64[$8>>3];
 $10 = $7 > $9;
 if ($10) {
  $14 = $9;
  HEAPF64[$6>>3] = $14;
  $15 = $14 != $7;
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = +HEAPF64[$11>>3];
 $13 = $7 < $12;
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAPF64[$6>>3] = $14;
 $15 = $14 != $7;
 $16 = $15&1;
 return ($16|0);
}
function _param_double_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0, $14 = 0.0, $15 = 0, $16 = 0, $17 = 0.0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[35935]|0;
 $4 = ((($3)) + 52|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 64|0);
 $8 = +HEAPF64[$7>>3];
 $9 = ((($1)) + 8|0);
 $10 = +HEAPF64[$9>>3];
 $11 = ((($2)) + 8|0);
 $12 = +HEAPF64[$11>>3];
 $13 = $10 < $12;
 $14 = $12 - $10;
 $15 = $14 > $8;
 $16 = $15 << 31 >> 31;
 $17 = $10 - $12;
 $18 = $17 > $8;
 $19 = $18&1;
 $$0 = $13 ? $16 : $19;
 return ($$0|0);
}
function _param_float_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 48|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAPF32[$5>>2] = Math_fround(-3.40282347E+38);
 $6 = ((($0)) + 44|0);
 HEAPF32[$6>>2] = Math_fround(3.40282347E+38);
 $7 = ((($0)) + 48|0);
 HEAPF32[$7>>2] = Math_fround(0.0);
 $8 = ((($0)) + 52|0);
 HEAPF32[$8>>2] = Math_fround(1.0E-30);
 return;
}
function _param_float_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_float_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = Math_fround(0), $10 = 0, $11 = 0, $12 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = Math_fround(0), $8 = 0, $9 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 48|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = Math_fround(HEAPF32[$6>>2]);
 $8 = ((($0)) + 44|0);
 $9 = Math_fround(HEAPF32[$8>>2]);
 $10 = $7 > $9;
 if ($10) {
  $14 = $9;
  HEAPF32[$6>>2] = $14;
  $15 = $14 != $7;
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = Math_fround(HEAPF32[$11>>2]);
 $13 = $7 < $12;
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAPF32[$6>>2] = $14;
 $15 = $14 != $7;
 $16 = $15&1;
 return ($16|0);
}
function _param_float_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = Math_fround(0), $11 = 0, $12 = Math_fround(0), $13 = 0, $14 = Math_fround(0), $15 = 0, $16 = 0, $17 = Math_fround(0), $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = Math_fround(0), $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[35935]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 52|0);
 $8 = Math_fround(HEAPF32[$7>>2]);
 $9 = ((($1)) + 8|0);
 $10 = Math_fround(HEAPF32[$9>>2]);
 $11 = ((($2)) + 8|0);
 $12 = Math_fround(HEAPF32[$11>>2]);
 $13 = $10 < $12;
 $14 = Math_fround($12 - $10);
 $15 = $14 > $8;
 $16 = $15 << 31 >> 31;
 $17 = Math_fround($10 - $12);
 $18 = $17 > $8;
 $19 = $18&1;
 $$0 = $13 ? $16 : $19;
 return ($$0|0);
}
function _param_flags_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_flags_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 44|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_type_class_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_flags_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_flags_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $storemerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 44|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 40|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $14 = ((($0)) + 44|0);
  $15 = HEAP32[$14>>2]|0;
  $storemerge = $15;
 } else {
  $11 = ((($9)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $12 & $7;
  $storemerge = $13;
 }
 HEAP32[$6>>2] = $storemerge;
 $16 = ($storemerge|0)!=($7|0);
 $17 = $16&1;
 return ($17|0);
}
function _param_ulong_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_enum_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = 0;
 return;
}
function _param_enum_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_parent($7)|0);
 $9 = (_g_type_class_peek($8)|0);
 $10 = ((($0)) + 40|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $13 = ((($9)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  ftCall_vi($14|0,$0);
  return;
 }
 _g_type_class_unref($11);
 HEAP32[$10>>2] = 0;
 $13 = ((($9)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 ftCall_vi($14|0,$0);
 return;
}
function _param_enum_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_enum_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 40|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  $11 = (_g_enum_get_value($9,$7)|0);
  $12 = ($11|0)==(0|0);
  if (!($12)) {
   $$pre = HEAP32[$6>>2]|0;
   $16 = $$pre;
   $15 = ($16|0)!=($7|0);
   $17 = $15&1;
   return ($17|0);
  }
 }
 $13 = ((($0)) + 44|0);
 $14 = HEAP32[$13>>2]|0;
 HEAP32[$6>>2] = $14;
 $16 = $14;
 $15 = ($16|0)!=($7|0);
 $17 = $15&1;
 return ($17|0);
}
function _param_long_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 $8 = ($4|0)>($6|0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_unichar_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 36|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 return;
}
function _param_unichar_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_unichar_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _param_unichar_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_uint64_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 32|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 $6 = $5;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 48|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = -1;
 $15 = ((($0)) + 56|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = 0;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 return;
}
function _param_uint64_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 8|0);
 $14 = $13;
 $15 = $14;
 HEAP32[$15>>2] = $9;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 return;
}
function _param_uint64_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 48|0);
 $14 = $13;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = (($14) + 4)|0;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($12>>>0)>($19>>>0);
 $21 = ($9>>>0)>($16>>>0);
 $22 = ($12|0)==($19|0);
 $23 = $22 & $21;
 $24 = $20 | $23;
 if ($24) {
  $41 = $16;$44 = $19;
 } else {
  $25 = ((($0)) + 40|0);
  $26 = $25;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 4)|0;
  $30 = $29;
  $31 = HEAP32[$30>>2]|0;
  $32 = ($12>>>0)<($31>>>0);
  $33 = ($9>>>0)<($28>>>0);
  $34 = ($12|0)==($31|0);
  $35 = $34 & $33;
  $36 = $32 | $35;
  $37 = $36 ? $28 : $9;
  $38 = $36 ? $31 : $12;
  $41 = $37;$44 = $38;
 }
 $39 = $6;
 $40 = $39;
 HEAP32[$40>>2] = $41;
 $42 = (($39) + 4)|0;
 $43 = $42;
 HEAP32[$43>>2] = $44;
 $45 = ($41|0)!=($9|0);
 $46 = ($44|0)!=($12|0);
 $47 = $45 | $46;
 $48 = $47&1;
 return ($48|0);
}
function _param_uint64_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 8|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = ($9>>>0)<($16>>>0);
 $18 = ($6>>>0)<($13>>>0);
 $19 = ($9|0)==($16|0);
 $20 = $19 & $18;
 $21 = $17 | $20;
 $22 = ($9>>>0)>($16>>>0);
 $23 = ($6>>>0)>($13>>>0);
 $24 = ($9|0)==($16|0);
 $25 = $24 & $23;
 $26 = $22 | $25;
 $27 = $26&1;
 $$0 = $21 ? -1 : $27;
 return ($$0|0);
}
function _param_int64_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 $6 = $5;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 $8 = (($6) + 4)|0;
 $9 = $8;
 HEAP32[$9>>2] = -2147483648;
 $10 = ((($0)) + 48|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = -1;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = 2147483647;
 $15 = ((($0)) + 56|0);
 $16 = $15;
 $17 = $16;
 HEAP32[$17>>2] = 0;
 $18 = (($16) + 4)|0;
 $19 = $18;
 HEAP32[$19>>2] = 0;
 return;
}
function _param_int64_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 56|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($1)) + 8|0);
 $14 = $13;
 $15 = $14;
 HEAP32[$15>>2] = $9;
 $16 = (($14) + 4)|0;
 $17 = $16;
 HEAP32[$17>>2] = $12;
 return;
}
function _param_int64_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = $6;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = (($7) + 4)|0;
 $11 = $10;
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 48|0);
 $14 = $13;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = (($14) + 4)|0;
 $18 = $17;
 $19 = HEAP32[$18>>2]|0;
 $20 = ($12|0)>($19|0);
 $21 = ($9>>>0)>($16>>>0);
 $22 = ($12|0)==($19|0);
 $23 = $22 & $21;
 $24 = $20 | $23;
 if ($24) {
  $41 = $16;$44 = $19;
 } else {
  $25 = ((($0)) + 40|0);
  $26 = $25;
  $27 = $26;
  $28 = HEAP32[$27>>2]|0;
  $29 = (($26) + 4)|0;
  $30 = $29;
  $31 = HEAP32[$30>>2]|0;
  $32 = ($12|0)<($31|0);
  $33 = ($9>>>0)<($28>>>0);
  $34 = ($12|0)==($31|0);
  $35 = $34 & $33;
  $36 = $32 | $35;
  $37 = $36 ? $28 : $9;
  $38 = $36 ? $31 : $12;
  $41 = $37;$44 = $38;
 }
 $39 = $6;
 $40 = $39;
 HEAP32[$40>>2] = $41;
 $42 = (($39) + 4)|0;
 $43 = $42;
 HEAP32[$43>>2] = $44;
 $45 = ($41|0)!=($9|0);
 $46 = ($44|0)!=($12|0);
 $47 = $45 | $46;
 $48 = $47&1;
 return ($48|0);
}
function _param_int64_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = $3;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 8|0);
 $11 = $10;
 $12 = $11;
 $13 = HEAP32[$12>>2]|0;
 $14 = (($11) + 4)|0;
 $15 = $14;
 $16 = HEAP32[$15>>2]|0;
 $17 = ($9|0)<($16|0);
 $18 = ($6>>>0)<($13>>>0);
 $19 = ($9|0)==($16|0);
 $20 = $19 & $18;
 $21 = $17 | $20;
 $22 = ($9|0)>($16|0);
 $23 = ($6>>>0)>($13>>>0);
 $24 = ($9|0)==($16|0);
 $25 = $24 & $23;
 $26 = $22 | $25;
 $27 = $26&1;
 $$0 = $21 ? -1 : $27;
 return ($$0|0);
}
function _param_ulong_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 24|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_ulong_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_ulong_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7>>>0)<($12>>>0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_long_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 2147483647;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -2147483648;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_long_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_long_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)>($9|0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7|0)<($12|0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_uint_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 16|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -1;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_uint_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_uint_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)>($9>>>0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7>>>0)<($12>>>0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_uint_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4>>>0)<($6>>>0);
 $8 = ($4>>>0)>($6>>>0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_int_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP32[$5>>2] = 2147483647;
 $6 = ((($0)) + 44|0);
 HEAP32[$6>>2] = -2147483648;
 $7 = ((($0)) + 48|0);
 HEAP32[$7>>2] = 0;
 return;
}
function _param_int_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 48|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_int_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)>($9|0);
 if ($10) {
  $14 = $9;
  HEAP32[$6>>2] = $14;
  $15 = ($14|0)!=($7|0);
  $16 = $15&1;
  return ($16|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($7|0)<($12|0);
 $$ = $13 ? $12 : $7;
 $14 = $$;
 HEAP32[$6>>2] = $14;
 $15 = ($14|0)!=($7|0);
 $16 = $15&1;
 return ($16|0);
}
function _param_int_values_cmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($1)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($4|0)<($6|0);
 $8 = ($4|0)>($6|0);
 $9 = $8&1;
 $$0 = $7 ? -1 : $9;
 return ($$0|0);
}
function _param_boolean_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 40|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_boolean_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)!=(0);
 $5 = $4&1;
 HEAP32[$2>>2] = $5;
 $6 = ($3|0)!=($5|0);
 $7 = $6&1;
 return ($7|0);
}
function _param_uchar_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = ((($1)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 40|0);
 HEAP8[$5>>0] = 0;
 $6 = ((($0)) + 41|0);
 HEAP8[$6>>0] = -1;
 $7 = ((($0)) + 42|0);
 HEAP8[$7>>0] = 0;
 return;
}
function _param_uchar_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($0)) + 42|0);
 $7 = HEAP8[$6>>0]|0;
 $8 = $7&255;
 $9 = ((($1)) + 8|0);
 HEAP32[$9>>2] = $8;
 return;
}
function _param_uchar_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_check_instance_cast($0,$4)|0);
 $6 = ((($1)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 41|0);
 $9 = HEAP8[$8>>0]|0;
 $10 = $9&255;
 $11 = ($7>>>0)>($10>>>0);
 if ($11) {
  $16 = $10;
  HEAP32[$6>>2] = $16;
  $17 = ($16|0)!=($7|0);
  $18 = $17&1;
  return ($18|0);
 }
 $12 = ((($0)) + 40|0);
 $13 = HEAP8[$12>>0]|0;
 $14 = $13&255;
 $15 = ($7>>>0)<($14>>>0);
 $$ = $15 ? $14 : $7;
 $16 = $$;
 HEAP32[$6>>2] = $16;
 $17 = ($16|0)!=($7|0);
 $18 = $17&1;
 return ($18|0);
}
function _param_char_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35935]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_check_instance_cast($0,$2)|0);
 $4 = ((($0)) + 40|0);
 HEAP8[$4>>0] = 127;
 $5 = ((($0)) + 41|0);
 HEAP8[$5>>0] = -128;
 $6 = ((($0)) + 42|0);
 HEAP8[$6>>0] = 0;
 return;
}
function _param_char_set_default($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($0)) + 42|0);
 $6 = HEAP8[$5>>0]|0;
 $7 = $6 << 24 >> 24;
 $8 = ((($1)) + 8|0);
 HEAP32[$8>>2] = $7;
 return;
}
function _param_char_validate($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35935]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_check_instance_cast($0,$3)|0);
 $5 = ((($1)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($0)) + 41|0);
 $8 = HEAP8[$7>>0]|0;
 $9 = $8 << 24 >> 24;
 $10 = ($6|0)>($9|0);
 if ($10) {
  $15 = $9;
  HEAP32[$5>>2] = $15;
  $16 = ($15|0)!=($6|0);
  $17 = $16&1;
  return ($17|0);
 }
 $11 = ((($0)) + 40|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12 << 24 >> 24;
 $14 = ($6|0)<($13|0);
 $$ = $14 ? $13 : $6;
 $15 = $$;
 HEAP32[$5>>2] = $15;
 $16 = ($15|0)!=($6|0);
 $17 = $16&1;
 return ($17|0);
}
function _g_param_spec_boolean($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = ((($8)) + 40|0);
 HEAP32[$10>>2] = $3;
 $11 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function _g_param_spec_int($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP32[35935]|0;
 $8 = ((($7)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_param_spec_internal($9,$0,$1,$2,$6)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = ((($10)) + 40|0);
 HEAP32[$12>>2] = $3;
 $13 = ((($10)) + 44|0);
 HEAP32[$13>>2] = $4;
 $14 = ((($10)) + 48|0);
 HEAP32[$14>>2] = $5;
 $15 = (_g_type_check_instance_cast($10,76)|0);
 $$0 = $10;
 return ($$0|0);
}
function _g_param_spec_uint($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = HEAP32[35935]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_g_param_spec_internal($9,$0,$1,$2,$6)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = ((($10)) + 40|0);
 HEAP32[$12>>2] = $3;
 $13 = ((($10)) + 44|0);
 HEAP32[$13>>2] = $4;
 $14 = ((($10)) + 48|0);
 HEAP32[$14>>2] = $5;
 $15 = (_g_type_check_instance_cast($10,76)|0);
 $$0 = $10;
 return ($$0|0);
}
function _g_param_spec_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[35935]|0;
 $5 = ((($4)) + 68|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_param_spec_internal($6,$0,$1,$2,$3)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = 0;
  return ($$0|0);
 }
 $9 = (_g_type_check_instance_cast($7,76)|0);
 $$0 = $7;
 return ($$0|0);
}
function _g_param_spec_gtype($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 84|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = ((($8)) + 40|0);
 HEAP32[$10>>2] = $3;
 $11 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function _g_param_spec_object($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = HEAP32[35935]|0;
 $6 = ((($5)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_param_spec_internal($7,$0,$1,$2,$4)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$0 = 0;
  return ($$0|0);
 }
 $10 = (_g_type_check_instance_cast($8,76)|0);
 $11 = ((($8)) + 12|0);
 HEAP32[$11>>2] = $3;
 $12 = (_g_type_check_instance_cast($8,76)|0);
 $$0 = $8;
 return ($$0|0);
}
function __g_signal_init() {
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[35936]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  return;
 }
 $2 = (_g_hash_table_new(250,0)|0);
 HEAP32[35937] = $2;
 $3 = (_g_malloc(32)|0);
 $4 = $3;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 $6 = (($4) + 4)|0;
 $7 = $6;
 HEAP32[$7>>2] = 0;
 HEAP32[35938] = $3;
 HEAP32[35936] = 1;
 $8 = HEAP32[35939]|0;
 $9 = (_g_realloc_n($8,1,4)|0);
 HEAP32[35939] = $9;
 HEAP32[$9>>2] = 0;
 $10 = (_g_hash_table_new(251,252)|0);
 HEAP32[35940] = $10;
 return;
}
function _handler_hash($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function _handler_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2|0)==($3|0);
 if (!($4)) {
  $10 = 0;
  return ($10|0);
 }
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($1)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($6|0)==($8|0);
 $phitmp = $9&1;
 $10 = $phitmp;
 return ($10|0);
}
function __g_signals_destroy($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _invalid_closure_notify($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$lcssa38$i35 = 0, $$0$us$us$i = 0, $$03241$i = 0, $$03241$us$i = 0, $$039$i = 0, $$039$us$i = 0, $$040$i = 0, $$040$us$us$i = 0, $$phi$trans$insert = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i$lcssa$i34 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35937]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  _g_assertion_message_expr(0,124418,3811,124451,124474);
  // unreachable;
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  _g_assertion_message_expr(0,124418,3811,124451,124474);
  // unreachable;
 }
 $7 = ((($3)) + 8|0);
 $8 = ($1|0)==(0|0);
 if (!($8)) {
  $$03241$i = 0;
  L9: while(1) {
   $19 = $$03241$i << 4;
   $20 = (($7) + ($19)|0);
   $21 = ((($20)) + 4|0);
   $$039$i = HEAP32[$21>>2]|0;
   $22 = ($$039$i|0)==(0|0);
   if (!($22)) {
    $$040$i = $$039$i;
    while(1) {
     $23 = ((($$040$i)) + 28|0);
     $24 = HEAP32[$23>>2]|0;
     $25 = ($24|0)==($1|0);
     if ($25) {
      $$0$lcssa38$i35 = $$040$i;$spec$select$i$lcssa$i34 = $20;
      label = 19;
      break L9;
     }
     $26 = ((($$040$i)) + 4|0);
     $$0$i = HEAP32[$26>>2]|0;
     $27 = ($$0$i|0)==(0|0);
     if ($27) {
      break;
     } else {
      $$040$i = $$0$i;
     }
    }
   }
   $28 = (($$03241$i) + 1)|0;
   $29 = ($28>>>0)<($5>>>0);
   if ($29) {
    $$03241$i = $28;
   } else {
    label = 16;
    break;
   }
  }
  if ((label|0) == 16) {
   _g_assertion_message_expr(0,124418,3811,124451,124474);
   // unreachable;
  }
  else if ((label|0) == 19) {
   $31 = HEAP32[$spec$select$i$lcssa$i34>>2]|0;
   HEAP32[$$0$lcssa38$i35>>2] = 0;
   $32 = ((($$0$lcssa38$i35)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = $33 & -65536;
   $35 = $34 | 1;
   HEAP32[$32>>2] = $35;
   _handler_unref_R($31,$0,$$0$lcssa38$i35);
   return;
  }
 }
 $$03241$us$i = 0;
 L21: while(1) {
  $9 = $$03241$us$i << 4;
  $10 = (($7) + ($9)|0);
  $11 = ((($10)) + 4|0);
  $$039$us$i = HEAP32[$11>>2]|0;
  $12 = ($$039$us$i|0)==(0|0);
  if (!($12)) {
   $$040$us$us$i = $$039$us$i;
   while(1) {
    $15 = HEAP32[$$040$us$us$i>>2]|0;
    $16 = ($15|0)==(0);
    if ($16) {
     break L21;
    }
    $17 = ((($$040$us$us$i)) + 4|0);
    $$0$us$us$i = HEAP32[$17>>2]|0;
    $18 = ($$0$us$us$i|0)==(0|0);
    if ($18) {
     break;
    } else {
     $$040$us$us$i = $$0$us$us$i;
    }
   }
  }
  $13 = (($$03241$us$i) + 1)|0;
  $14 = ($13>>>0)<($5>>>0);
  if ($14) {
   $$03241$us$i = $13;
  } else {
   label = 16;
   break;
  }
 }
 if ((label|0) == 16) {
  _g_assertion_message_expr(0,124418,3811,124451,124474);
  // unreachable;
 }
 $$phi$trans$insert = ((($$040$us$us$i)) + 28|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $30 = ($$pre|0)==($1|0);
 if ($30) {
  $$0$lcssa38$i35 = $$040$us$us$i;$spec$select$i$lcssa$i34 = $10;
  $31 = HEAP32[$spec$select$i$lcssa$i34>>2]|0;
  HEAP32[$$0$lcssa38$i35>>2] = 0;
  $32 = ((($$0$lcssa38$i35)) + 24|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = $33 & -65536;
  $35 = $34 | 1;
  HEAP32[$32>>2] = $35;
  _handler_unref_R($31,$0,$$0$lcssa38$i35);
  return;
 } else {
  _g_assertion_message_expr(0,124418,3812,124451,124490);
  // unreachable;
 }
}
function _handler_lists_cmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2>>>0)>($3>>>0);
 $5 = ($2|0)!=($3|0);
 $6 = $5 << 31 >> 31;
 $7 = $4 ? 1 : $6;
 return ($7|0);
}
function _handler_unref_R($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0507$i$i = 0, $$0507$i$i62 = 0, $$0507$i$i72 = 0, $$053 = 0, $$0536$i$i = 0, $$0536$i$i63 = 0, $$0536$i$i73 = 0, $$151$i$i = 0, $$151$i$i65 = 0, $$151$i$i75 = 0, $$154$i$i = 0, $$154$i$i64 = 0, $$154$i$i74 = 0, $$180 = 0, $$2 = 0, $$383 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ((($2)) + 20|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (($5) + -1)|0;
 HEAP32[$4>>2] = $6;
 $7 = ($6|0)==(0);
 if (!($7)) {
  STACKTOP = sp;return;
 }
 $8 = ((($2)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 $11 = $9;
 $$pre = ((($2)) + 8|0);
 if (!($10)) {
  $12 = HEAP32[$$pre>>2]|0;
  $13 = ((($9)) + 8|0);
  HEAP32[$13>>2] = $12;
 }
 $14 = HEAP32[$$pre>>2]|0;
 $15 = ($14|0)==(0|0);
 L7: do {
  if ($15) {
   $17 = HEAP32[35937]|0;
   $18 = (_g_hash_table_lookup($17,$1)|0);
   HEAP32[$3>>2] = $0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    _g_assertion_message_expr(0,124418,668,124518,124534);
    // unreachable;
   }
   $20 = ((($18)) + 8|0);
   $21 = HEAP32[$18>>2]|0;
   $22 = ($21|0)==(0);
   L13: do {
    if (!($22)) {
     $$0507$i$i = $21;$$0536$i$i = 0;
     while(1) {
      $23 = (($$0536$i$i) + ($$0507$i$i))|0;
      $24 = $23 >>> 1;
      $25 = $24 << 4;
      $26 = (($20) + ($25)|0);
      $27 = (_handler_lists_cmp($3,$26)|0);
      $28 = ($27|0)==(0);
      if ($28) {
       break;
      }
      $29 = ($27|0)<(0);
      $30 = (($24) + 1)|0;
      $$154$i$i = $29 ? $$0536$i$i : $30;
      $$151$i$i = $29 ? $24 : $$0507$i$i;
      $31 = ($$154$i$i>>>0)<($$151$i$i>>>0);
      if ($31) {
       $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
      } else {
       break L13;
      }
     }
     $32 = HEAP32[$8>>2]|0;
     $33 = ((($26)) + 4|0);
     HEAP32[$33>>2] = $32;
     $$053 = $26;
     break L7;
    }
   } while(0);
   _g_assertion_message_expr(0,124418,668,124518,124534);
   // unreachable;
  } else {
   $16 = ((($14)) + 4|0);
   HEAP32[$16>>2] = $11;
   $$053 = 0;
  }
 } while(0);
 $34 = ($1|0)==(0|0);
 L23: do {
  if (!($34)) {
   $35 = ((($2)) + 24|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = $36 & 65536;
   $38 = ($37|0)==(0);
   L25: do {
    if ($38) {
     $39 = HEAP32[$8>>2]|0;
     $40 = ($39|0)==(0|0);
     if (!($40)) {
      $41 = ((($39)) + 24|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = $42 & 65536;
      $44 = ($43|0)==(0);
      if ($44) {
       $$2 = $$053;
       break;
      }
     }
     $45 = ($$053|0)==(0|0);
     L30: do {
      if ($45) {
       $46 = HEAP32[35937]|0;
       $47 = (_g_hash_table_lookup($46,$1)|0);
       HEAP32[$3>>2] = $0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        $$2 = 0;
        break L25;
       }
       $49 = ((($47)) + 8|0);
       $50 = HEAP32[$47>>2]|0;
       $51 = ($50|0)==(0);
       L35: do {
        if (!($51)) {
         $$0507$i$i62 = $50;$$0536$i$i63 = 0;
         while(1) {
          $52 = (($$0536$i$i63) + ($$0507$i$i62))|0;
          $53 = $52 >>> 1;
          $54 = $53 << 4;
          $55 = (($49) + ($54)|0);
          $56 = (_handler_lists_cmp($3,$55)|0);
          $57 = ($56|0)==(0);
          if ($57) {
           break;
          }
          $58 = ($56|0)<(0);
          $59 = (($53) + 1)|0;
          $$154$i$i64 = $58 ? $$0536$i$i63 : $59;
          $$151$i$i65 = $58 ? $53 : $$0507$i$i62;
          $60 = ($$154$i$i64>>>0)<($$151$i$i65>>>0);
          if ($60) {
           $$0507$i$i62 = $$151$i$i65;$$0536$i$i63 = $$154$i$i64;
          } else {
           break L35;
          }
         }
         $$180 = $55;
         break L30;
        }
       } while(0);
       $$2 = 0;
       break L25;
      } else {
       $$180 = $$053;
      }
     } while(0);
     $61 = ((($$180)) + 8|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ($62|0)==($2|0);
     if ($63) {
      $64 = HEAP32[$$pre>>2]|0;
      HEAP32[$61>>2] = $64;
      $$2 = $$180;
      break;
     } else {
      _g_assertion_message_expr(0,124418,681,124518,124548);
      // unreachable;
     }
    } else {
     $$2 = $$053;
    }
   } while(0);
   $65 = HEAP32[$8>>2]|0;
   $66 = ($65|0)==(0|0);
   if ($66) {
    $67 = ($$2|0)==(0|0);
    L48: do {
     if ($67) {
      $68 = HEAP32[35937]|0;
      $69 = (_g_hash_table_lookup($68,$1)|0);
      HEAP32[$3>>2] = $0;
      $70 = ($69|0)==(0|0);
      if ($70) {
       break L23;
      }
      $71 = ((($69)) + 8|0);
      $72 = HEAP32[$69>>2]|0;
      $73 = ($72|0)==(0);
      L53: do {
       if (!($73)) {
        $$0507$i$i72 = $72;$$0536$i$i73 = 0;
        while(1) {
         $74 = (($$0536$i$i73) + ($$0507$i$i72))|0;
         $75 = $74 >>> 1;
         $76 = $75 << 4;
         $77 = (($71) + ($76)|0);
         $78 = (_handler_lists_cmp($3,$77)|0);
         $79 = ($78|0)==(0);
         if ($79) {
          break;
         }
         $80 = ($78|0)<(0);
         $81 = (($75) + 1)|0;
         $$154$i$i74 = $80 ? $$0536$i$i73 : $81;
         $$151$i$i75 = $80 ? $75 : $$0507$i$i72;
         $82 = ($$154$i$i74>>>0)<($$151$i$i75>>>0);
         if ($82) {
          $$0507$i$i72 = $$151$i$i75;$$0536$i$i73 = $$154$i$i74;
         } else {
          break L53;
         }
        }
        $$383 = $77;
        break L48;
       }
      } while(0);
      break L23;
     } else {
      $$383 = $$2;
     }
    } while(0);
    $83 = ((($$383)) + 12|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ($84|0)==($2|0);
    if ($85) {
     $86 = HEAP32[$$pre>>2]|0;
     HEAP32[$83>>2] = $86;
     break;
    } else {
     _g_assertion_message_expr(0,124418,693,124518,124578);
     // unreachable;
    }
   }
  }
 } while(0);
 $87 = ((($2)) + 28|0);
 $88 = HEAP32[$87>>2]|0;
 _g_closure_unref($88);
 _g_slice_free1(36,$2);
 STACKTOP = sp;return;
}
function _g_signal_handlers_destroy($0) {
 $0 = $0|0;
 var $$034 = 0, $$in = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35937]|0;
 $2 = (_g_hash_table_lookup($1,$0)|0);
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = HEAP32[35937]|0;
 (_g_hash_table_remove($4,$0)|0);
 $5 = HEAP32[$2>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  $7 = ((($2)) + 8|0);
  $$034 = 0;$9 = $5;
  while(1) {
   $8 = ($9>>>0)>($$034>>>0);
   $10 = $$034 << 4;
   $11 = (($7) + ($10)|0);
   $spec$select$i = $8 ? $11 : 0;
   $12 = ((($spec$select$i)) + 4|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $35 = $9;
   } else {
    $$in = $13;
    while(1) {
     $15 = ((($$in)) + 4|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ((($$in)) + 24|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = $18 & -65536;
     $20 = $19 | 1;
     HEAP32[$17>>2] = $20;
     HEAP32[$15>>2] = 0;
     $21 = ((($$in)) + 8|0);
     HEAP32[$21>>2] = $$in;
     $22 = HEAP32[$$in>>2]|0;
     $23 = ($22|0)==(0);
     if (!($23)) {
      $24 = HEAP32[35940]|0;
      (_g_hash_table_remove($24,$$in)|0);
      $25 = HEAP32[$17>>2]|0;
      $26 = $25 & 131072;
      $27 = ($26|0)==(0);
      if (!($27)) {
       $28 = ((($$in)) + 28|0);
       $29 = HEAP32[$28>>2]|0;
       _g_closure_remove_invalidate_notifier($29,$0,253);
       $30 = HEAP32[$17>>2]|0;
       $31 = $30 & -131073;
       HEAP32[$17>>2] = $31;
      }
      HEAP32[$$in>>2] = 0;
      _handler_unref_R(0,0,$$in);
     }
     $32 = ($16|0)==(0|0);
     if ($32) {
      break;
     } else {
      $$in = $16;
     }
    }
    $$pre = HEAP32[$2>>2]|0;
    $35 = $$pre;
   }
   $33 = (($$034) + 1)|0;
   $34 = ($33>>>0)<($35>>>0);
   if ($34) {
    $$034 = $33;$9 = $35;
   } else {
    break;
   }
  }
 }
 _g_free($2);
 return;
}
function _g_signal_emit_valist($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i335 = 0, $$01115$i = 0, $$01115$i$phi = 0, $$014$i = 0, $$016$i = 0, $$0310$lcssa = 0, $$0310354 = 0, $$0310355 = 0, $$0310356 = 0, $$0310401$us = 0, $$0312400$us = 0, $$0313 = 0, $$0316 = 0, $$0319$lcssa = 0, $$0319371 = 0, $$0320370 = 0, $$0321 = 0, $$0324 = 0, $$0325390 = 0, $$0326385 = 0;
 var $$0327$lcssa = 0, $$0327384 = 0, $$0328376 = 0, $$0329$lcssa = 0, $$0329375 = 0, $$0394 = 0, $$0507$i$i = 0, $$0536$i$i = 0, $$1$i = 0, $$130$i = 0, $$1311$us = 0, $$1314$lcssa = 0, $$1314359 = 0, $$1314360 = 0, $$1314361 = 0, $$1314399$us = 0, $$1317338344 = 0, $$1322$lcssa = 0, $$1322364 = 0, $$1322365 = 0;
 var $$1322366 = 0, $$1322398$us = 0, $$1381 = 0, $$151$i$i = 0, $$154$i$i = 0, $$2315$us = 0, $$2318 = 0, $$2323$us = 0, $$2367 = 0, $$332 = 0, $$4368 = 0, $$alloca_mul = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi424Z2D = 0, $$pre$phiZ2D = 0, $$pre423 = 0, $$sink = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0.0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0.0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0.0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current10 = 0, $arglist_current13 = 0, $arglist_current16 = 0, $arglist_current19 = 0, $arglist_current22 = 0, $arglist_current25 = 0, $arglist_current28 = 0, $arglist_current35 = 0, $arglist_current38 = 0, $arglist_current4 = 0;
 var $arglist_current41 = 0, $arglist_current44 = 0, $arglist_current47 = 0, $arglist_current54 = 0, $arglist_current57 = 0, $arglist_current60 = 0, $arglist_current63 = 0, $arglist_current66 = 0, $arglist_current7 = 0, $arglist_next = 0, $arglist_next11 = 0, $arglist_next14 = 0, $arglist_next17 = 0, $arglist_next20 = 0, $arglist_next23 = 0, $arglist_next26 = 0, $arglist_next29 = 0, $arglist_next36 = 0, $arglist_next39 = 0, $arglist_next42 = 0;
 var $arglist_next45 = 0, $arglist_next48 = 0, $arglist_next5 = 0, $arglist_next55 = 0, $arglist_next58 = 0, $arglist_next61 = 0, $arglist_next64 = 0, $arglist_next67 = 0, $arglist_next8 = 0, $exitcond = 0, $expanded = 0, $expanded100 = 0, $expanded102 = 0, $expanded103 = 0, $expanded104 = 0, $expanded106 = 0, $expanded107 = 0, $expanded109 = 0, $expanded110 = 0, $expanded111 = 0;
 var $expanded113 = 0, $expanded114 = 0, $expanded116 = 0, $expanded117 = 0, $expanded118 = 0, $expanded120 = 0, $expanded121 = 0, $expanded123 = 0, $expanded124 = 0, $expanded125 = 0, $expanded127 = 0, $expanded128 = 0, $expanded130 = 0, $expanded131 = 0, $expanded132 = 0, $expanded134 = 0, $expanded135 = 0, $expanded137 = 0, $expanded138 = 0, $expanded139 = 0;
 var $expanded141 = 0, $expanded142 = 0, $expanded144 = 0, $expanded145 = 0, $expanded146 = 0, $expanded148 = 0, $expanded149 = 0, $expanded151 = 0, $expanded152 = 0, $expanded153 = 0, $expanded155 = 0, $expanded156 = 0, $expanded158 = 0, $expanded159 = 0, $expanded160 = 0, $expanded162 = 0, $expanded163 = 0, $expanded165 = 0, $expanded166 = 0, $expanded167 = 0;
 var $expanded169 = 0, $expanded170 = 0, $expanded172 = 0, $expanded173 = 0, $expanded174 = 0, $expanded176 = 0, $expanded177 = 0, $expanded179 = 0, $expanded180 = 0, $expanded181 = 0, $expanded183 = 0, $expanded184 = 0, $expanded186 = 0, $expanded187 = 0, $expanded188 = 0, $expanded190 = 0, $expanded191 = 0, $expanded193 = 0, $expanded194 = 0, $expanded195 = 0;
 var $expanded197 = 0, $expanded198 = 0, $expanded200 = 0, $expanded201 = 0, $expanded202 = 0, $expanded204 = 0, $expanded205 = 0, $expanded207 = 0, $expanded208 = 0, $expanded209 = 0, $expanded72 = 0, $expanded74 = 0, $expanded75 = 0, $expanded76 = 0, $expanded78 = 0, $expanded79 = 0, $expanded81 = 0, $expanded82 = 0, $expanded83 = 0, $expanded85 = 0;
 var $expanded86 = 0, $expanded88 = 0, $expanded89 = 0, $expanded90 = 0, $expanded92 = 0, $expanded93 = 0, $expanded95 = 0, $expanded96 = 0, $expanded97 = 0, $expanded99 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond330$us = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer30 = 0, $vararg_buffer49 = 0, $vararg_buffer68 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr33 = 0, $vararg_ptr52 = 0, $vararg_ptr71 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $vararg_buffer68 = sp + 248|0;
 $vararg_buffer49 = sp + 240|0;
 $vararg_buffer30 = sp + 232|0;
 $vararg_buffer = sp + 216|0;
 $4 = sp + 128|0;
 $5 = sp + 64|0;
 $6 = sp + 192|0;
 $7 = sp;
 $8 = HEAP32[35936]|0;
 $9 = ($8>>>0)>($1>>>0);
 if ($9) {
  $10 = HEAP32[35939]|0;
  $11 = (($10) + ($1<<2)|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($12|0)==(0|0);
  if (!($13)) {
   $14 = HEAP32[$0>>2]|0;
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($12)) + 4|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (_g_type_is_a($15,$17)|0);
   $19 = ($18|0)==(0);
   if (!($19)) {
    $20 = ((($12)) + 12|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = $21 & 262144;
    $23 = ($22|0)==(0);
    if ($23) {
     $24 = HEAP32[$16>>2]|0;
     $25 = (_g_type_fundamental($24)|0);
     $26 = ($25|0)==(80);
     $27 = HEAP32[$20>>2]|0;
     $28 = $27 & 256;
     $29 = ($28|0)==(0);
     $or$cond$i = $26 & $29;
     L7: do {
      if ($or$cond$i) {
       $30 = ((($12)) + 40|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = ($31|0)==(0|0);
       if (!($32)) {
        $33 = ((($31)) + 8|0);
        $34 = HEAP32[$33>>2]|0;
        $35 = ($34|0)==(0|0);
        if (!($35)) {
         $$1$i = 0;$$130$i = 0;
         break;
        }
       }
       $36 = ((($12)) + 24|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($37|0)==(0|0);
       if ($38) {
        $$1$i = (1);$$130$i = 0;
       } else {
        $39 = HEAP32[$37>>2]|0;
        switch ($39|0) {
        case 0:  {
         $$1$i = (1);$$130$i = $39;
         break L7;
         break;
        }
        case 1:  {
         break;
        }
        default: {
         $$1$i = 0;$$130$i = 0;
         break L7;
        }
        }
        $40 = ((($37)) + 8|0);
        $41 = HEAP32[$40>>2]|0;
        $42 = ($41|0)==(0);
        if ($42) {
         $43 = $27 >>> 1;
         $44 = $43 & 7;
         $45 = (($44) + -1)|0;
         $46 = ($45>>>0)<(2);
         if ($46) {
          $47 = ($44|0)==(2);
          $48 = $47&1;
          $phitmp$i = $48 << 19;
          $49 = ((($40)) + 4|0);
          $50 = HEAP32[$49>>2]|0;
          $$1$i = $50;$$130$i = $phitmp$i;
         } else {
          $$1$i = 0;$$130$i = 0;
         }
        } else {
         $$1$i = 0;$$130$i = 0;
        }
       }
      } else {
       $$1$i = 0;$$130$i = 0;
      }
     } while(0);
     $51 = ((($12)) + 44|0);
     HEAP32[$51>>2] = $$1$i;
     $52 = $27 & -786433;
     $53 = $52 | $$130$i;
     $54 = $53 | 262144;
     HEAP32[$20>>2] = $54;
     $$pre$phiZ2D = $51;$56 = $$1$i;
    } else {
     $$phi$trans$insert = ((($12)) + 44|0);
     $$pre = HEAP32[$$phi$trans$insert>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$56 = $$pre;
    }
    $55 = ($56|0)==(0|0);
    L21: do {
     if (!($55)) {
      $57 = HEAP32[$12>>2]|0;
      $58 = HEAP32[35937]|0;
      $59 = (_g_hash_table_lookup($58,$0)|0);
      HEAP32[$4>>2] = $57;
      $60 = ($59|0)==(0|0);
      if ($60) {
       $86 = 0;
      } else {
       $61 = ((($59)) + 8|0);
       $62 = HEAP32[$59>>2]|0;
       $63 = ($62|0)==(0);
       L25: do {
        if ($63) {
         $432 = 0;
        } else {
         $$0507$i$i = $62;$$0536$i$i = 0;
         while(1) {
          $64 = (($$0536$i$i) + ($$0507$i$i))|0;
          $65 = $64 >>> 1;
          $66 = $65 << 4;
          $67 = (($61) + ($66)|0);
          $68 = (_handler_lists_cmp($4,$67)|0);
          $69 = ($68|0)==(0);
          if ($69) {
           $432 = $67;
           break L25;
          }
          $70 = ($68|0)<(0);
          $71 = (($65) + 1)|0;
          $$154$i$i = $70 ? $$0536$i$i : $71;
          $$151$i$i = $70 ? $65 : $$0507$i$i;
          $72 = ($$154$i$i>>>0)<($$151$i$i>>>0);
          if ($72) {
           $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
          } else {
           $432 = 0;
           break;
          }
         }
        }
       } while(0);
       $86 = $432;
      }
      $73 = HEAP32[$$pre$phiZ2D>>2]|0;
      $74 = ($73|0)==((1)|0);
      if ($74) {
       $$0313 = 0;$$0316 = 1;$$0321 = 1;
      } else {
       $75 = (__g_closure_is_void($73,$0)|0);
       $76 = ($75|0)==(0);
       if ($76) {
        $77 = HEAP32[$$pre$phiZ2D>>2]|0;
        $78 = (__g_closure_supports_invoke_va($77)|0);
        $79 = ($78|0)==(0);
        if ($79) {
         $$0313 = 0;$$0316 = 0;$$0321 = 1;
        } else {
         $80 = HEAP32[$$pre$phiZ2D>>2]|0;
         $81 = HEAP32[$20>>2]|0;
         $82 = $81 >>> 19;
         $83 = $82 & 1;
         $84 = (($83) + 1)|0;
         $$0313 = $80;$$0316 = 1;$$0321 = $84;
        }
       } else {
        $$0313 = 0;$$0316 = 1;$$0321 = 1;
       }
      }
      $85 = ($86|0)==(0|0);
      L37: do {
       if ($85) {
        $87 = ($$0316|0)!=(0);
        $$0310$lcssa = 0;$$1314$lcssa = $$0313;$$1322$lcssa = $$0321;$115 = $87;
        label = 38;
       } else {
        $88 = ((($86)) + 4|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = ($$0316|0)!=(0);
        $91 = ($89|0)!=(0|0);
        $92 = $90 & $91;
        if ($92) {
         $$0310401$us = 0;$$0312400$us = $89;$$1314399$us = $$0313;$$1322398$us = $$0321;
         while(1) {
          $93 = ((($$0312400$us)) + 24|0);
          $94 = HEAP32[$93>>2]|0;
          $95 = $94 & 65535;
          $96 = ($95|0)==(0);
          if ($96) {
           $97 = ((($$0312400$us)) + 12|0);
           $98 = HEAP32[$97>>2]|0;
           $99 = ($98|0)==(0);
           $100 = ($98|0)==($2|0);
           $or$cond330$us = $99 | $100;
           if ($or$cond330$us) {
            $101 = ($$1314399$us|0)==(0|0);
            if (!($101)) {
             $$0310354 = $$0310401$us;$$1314359 = $$1314399$us;$$1317338344 = 0;$$1322364 = $$1322398$us;
             label = 41;
             break L37;
            }
            $102 = ((($$0312400$us)) + 28|0);
            $103 = HEAP32[$102>>2]|0;
            $104 = (__g_closure_supports_invoke_va($103)|0);
            $105 = ($104|0)==(0);
            if ($105) {
             break L21;
            }
            $106 = HEAP32[$102>>2]|0;
            $107 = HEAP32[$93>>2]|0;
            $108 = $107 >>> 16;
            $109 = $108 & 1;
            $110 = (($109) + 1)|0;
            $$1311$us = $$0312400$us;$$2315$us = $106;$$2323$us = $110;
           } else {
            $$1311$us = $$0310401$us;$$2315$us = $$1314399$us;$$2323$us = $$1322398$us;
           }
          } else {
           $$1311$us = $$0310401$us;$$2315$us = $$1314399$us;$$2323$us = $$1322398$us;
          }
          $111 = ((($$0312400$us)) + 4|0);
          $112 = HEAP32[$111>>2]|0;
          $113 = ($112|0)==(0|0);
          if ($113) {
           $$0310$lcssa = $$1311$us;$$1314$lcssa = $$2315$us;$$1322$lcssa = $$2323$us;$115 = $90;
           label = 38;
           break;
          } else {
           $$0310401$us = $$1311$us;$$0312400$us = $112;$$1314399$us = $$2315$us;$$1322398$us = $$2323$us;
          }
         }
        } else {
         $$0310$lcssa = 0;$$1314$lcssa = $$0313;$$1322$lcssa = $$0321;$115 = $90;
         label = 38;
        }
       }
      } while(0);
      do {
       if ((label|0) == 38) {
        $114 = ($$1314$lcssa|0)==(0|0);
        $or$cond = $115 & $114;
        if (!($or$cond)) {
         if ($114) {
          $$0310356 = $$0310$lcssa;$$1314361 = 0;$$1322366 = $$1322$lcssa;$$2318 = $$0316;$434 = 0;
          label = 42;
          break;
         } else {
          $$0310354 = $$0310$lcssa;$$1314359 = $$1314$lcssa;$$1317338344 = $$0316;$$1322364 = $$1322$lcssa;
          label = 41;
          break;
         }
        }
        $116 = ((($12)) + 20|0);
        $117 = HEAP32[$116>>2]|0;
        $118 = ($117|0)==(4);
        if ($118) {
         STACKTOP = sp;return;
        } else {
         $$0310355 = $$0310$lcssa;$$1314360 = 0;$$1322365 = $$1322$lcssa;$$pre$phi424Z2D = $116;$433 = 0;
        }
       }
      } while(0);
      if ((label|0) == 41) {
       $119 = HEAP32[$20>>2]|0;
       $120 = $119 & 16;
       $121 = ($120|0)==(0);
       if ($121) {
        $$0310356 = $$0310354;$$1314361 = $$1314359;$$1322366 = $$1322364;$$2318 = $$1317338344;$434 = 1;
        label = 42;
       } else {
        break;
       }
      }
      if ((label|0) == 42) {
       $122 = ($$2318|0)==(0);
       if ($122) {
        break;
       }
       $$pre423 = ((($12)) + 20|0);
       $$0310355 = $$0310356;$$1314360 = $$1314361;$$1322365 = $$1322366;$$pre$phi424Z2D = $$pre423;$433 = $434;
      }
      ;HEAP32[$5>>2]=HEAP32[143648>>2]|0;HEAP32[$5+4>>2]=HEAP32[143648+4>>2]|0;HEAP32[$5+8>>2]=HEAP32[143648+8>>2]|0;HEAP32[$5+12>>2]=HEAP32[143648+12>>2]|0;HEAP32[$5+16>>2]=HEAP32[143648+16>>2]|0;HEAP32[$5+20>>2]=HEAP32[143648+20>>2]|0;
      $123 = HEAP32[$0>>2]|0;
      $124 = HEAP32[$123>>2]|0;
      ;HEAP32[$6>>2]=HEAP32[143648>>2]|0;HEAP32[$6+4>>2]=HEAP32[143648+4>>2]|0;HEAP32[$6+8>>2]=HEAP32[143648+8>>2]|0;HEAP32[$6+12>>2]=HEAP32[143648+12>>2]|0;HEAP32[$6+16>>2]=HEAP32[143648+16>>2]|0;HEAP32[$6+20>>2]=HEAP32[143648+20>>2]|0;
      $125 = HEAP32[$$pre$phi424Z2D>>2]|0;
      $126 = $125 & -2;
      $127 = HEAP32[$12>>2]|0;
      $128 = ((($12)) + 28|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = ($126|0)==(4);
      $131 = ($129|0)==(0|0);
      $$332 = $131 ? $6 : $5;
      $$0324 = $130 ? 0 : $$332;
      $132 = ((($4)) + 4|0);
      HEAP32[$132>>2] = $0;
      $133 = ((($4)) + 8|0);
      HEAP32[$133>>2] = $127;
      $134 = ((($4)) + 12|0);
      HEAP32[$134>>2] = $2;
      $135 = ((($4)) + 16|0);
      HEAP32[$135>>2] = $$1322365;
      $136 = ((($4)) + 20|0);
      HEAP32[$136>>2] = 1;
      $137 = ((($4)) + 24|0);
      HEAP32[$137>>2] = $124;
      $138 = HEAP32[35941]|0;
      HEAP32[$4>>2] = $138;
      HEAP32[35941] = $4;
      $139 = ($$0310355|0)!=(0|0);
      if ($139) {
       $140 = ((($$0310355)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = (($141) + 1)|0;
       HEAP32[$140>>2] = $142;
      }
      $143 = ($126|0)!=(4);
      if ($143) {
       (_g_value_init($6,$126)|0);
      }
      $144 = ($129|0)!=(0|0);
      if ($144) {
       (_g_value_init($5,$126)|0);
      }
      if ($433) {
       (_g_object_ref($0)|0);
       $145 = HEAP32[$20>>2]|0;
       $146 = $145 >>> 10;
       $147 = $146 & 255;
       $148 = ((($12)) + 16|0);
       $149 = HEAP32[$148>>2]|0;
       __g_closure_invoke_va($$1314360,$$0324,$0,$3,$147,$149);
       if (!($131)) {
        $150 = HEAP32[$129>>2]|0;
        $151 = ((($129)) + 4|0);
        $152 = HEAP32[$151>>2]|0;
        (ftCall_iiiii($150|0,$133,$6,$5,$152)|0);
        (_g_value_reset($5)|0);
       }
      }
      HEAP32[$137>>2] = 4;
      $$014$i = HEAP32[35941]|0;
      $153 = ($$014$i|0)==(0|0);
      if ($153) {
       _g_assertion_message_expr(0,124418,813,124645,0);
       // unreachable;
      }
      $$01115$i = 0;$$016$i = $$014$i;
      while(1) {
       $154 = ($$016$i|0)==($4|0);
       if ($154) {
        break;
       }
       $$0$i335 = HEAP32[$$016$i>>2]|0;
       $157 = ($$0$i335|0)==(0|0);
       if ($157) {
        label = 58;
        break;
       } else {
        $$01115$i$phi = $$016$i;$$016$i = $$0$i335;$$01115$i = $$01115$i$phi;
       }
      }
      if ((label|0) == 58) {
       _g_assertion_message_expr(0,124418,813,124645,0);
       // unreachable;
      }
      $155 = ($$01115$i|0)==(0|0);
      $156 = HEAP32[$4>>2]|0;
      $$sink = $155 ? 143764 : $$01115$i;
      HEAP32[$$sink>>2] = $156;
      if ($139) {
       _handler_unref_R($127,$0,$$0310355);
      }
      if ($144) {
       _g_value_unset($5);
      }
      do {
       if ($143) {
        $158 = HEAP32[$20>>2]|0;
        $159 = $158 & 261120;
        $160 = ($159|0)==(0);
        L91: do {
         if (!($160)) {
          $161 = ((($12)) + 16|0);
          $$0394 = 0;
          L93: while(1) {
           $162 = HEAP32[$161>>2]|0;
           $163 = (($162) + ($$0394<<2)|0);
           $164 = HEAP32[$163>>2]|0;
           $165 = $164 & -2;
           $166 = (_g_type_value_table_peek($165)|0);
           $167 = ((($166)) + 16|0);
           $168 = HEAP32[$167>>2]|0;
           $169 = HEAP8[$168>>0]|0;
           $170 = ($169<<24>>24)==(0);
           L95: do {
            if (!($170)) {
             $$0325390 = $168;$173 = $169;
             while(1) {
              $171 = ((($$0325390)) + 1|0);
              $172 = $173 << 24 >> 24;
              switch ($172|0) {
              case 105:  {
               $arglist_current = HEAP32[$3>>2]|0;
               $174 = $arglist_current;
               $175 = ((0) + 4|0);
               $expanded72 = $175;
               $expanded = (($expanded72) - 1)|0;
               $176 = (($174) + ($expanded))|0;
               $177 = ((0) + 4|0);
               $expanded76 = $177;
               $expanded75 = (($expanded76) - 1)|0;
               $expanded74 = $expanded75 ^ -1;
               $178 = $176 & $expanded74;
               $179 = $178;
               $arglist_next = ((($179)) + 4|0);
               HEAP32[$3>>2] = $arglist_next;
               break;
              }
              case 108:  {
               $arglist_current4 = HEAP32[$3>>2]|0;
               $180 = $arglist_current4;
               $181 = ((0) + 4|0);
               $expanded79 = $181;
               $expanded78 = (($expanded79) - 1)|0;
               $182 = (($180) + ($expanded78))|0;
               $183 = ((0) + 4|0);
               $expanded83 = $183;
               $expanded82 = (($expanded83) - 1)|0;
               $expanded81 = $expanded82 ^ -1;
               $184 = $182 & $expanded81;
               $185 = $184;
               $arglist_next5 = ((($185)) + 4|0);
               HEAP32[$3>>2] = $arglist_next5;
               break;
              }
              case 113:  {
               $arglist_current7 = HEAP32[$3>>2]|0;
               $186 = $arglist_current7;
               $187 = ((0) + 8|0);
               $expanded86 = $187;
               $expanded85 = (($expanded86) - 1)|0;
               $188 = (($186) + ($expanded85))|0;
               $189 = ((0) + 8|0);
               $expanded90 = $189;
               $expanded89 = (($expanded90) - 1)|0;
               $expanded88 = $expanded89 ^ -1;
               $190 = $188 & $expanded88;
               $191 = $190;
               $arglist_next8 = ((($191)) + 8|0);
               HEAP32[$3>>2] = $arglist_next8;
               break;
              }
              case 100:  {
               $arglist_current10 = HEAP32[$3>>2]|0;
               $192 = $arglist_current10;
               $193 = ((0) + 8|0);
               $expanded93 = $193;
               $expanded92 = (($expanded93) - 1)|0;
               $194 = (($192) + ($expanded92))|0;
               $195 = ((0) + 8|0);
               $expanded97 = $195;
               $expanded96 = (($expanded97) - 1)|0;
               $expanded95 = $expanded96 ^ -1;
               $196 = $194 & $expanded95;
               $197 = $196;
               $arglist_next11 = ((($197)) + 8|0);
               HEAP32[$3>>2] = $arglist_next11;
               break;
              }
              case 112:  {
               $arglist_current13 = HEAP32[$3>>2]|0;
               $198 = $arglist_current13;
               $199 = ((0) + 4|0);
               $expanded100 = $199;
               $expanded99 = (($expanded100) - 1)|0;
               $200 = (($198) + ($expanded99))|0;
               $201 = ((0) + 4|0);
               $expanded104 = $201;
               $expanded103 = (($expanded104) - 1)|0;
               $expanded102 = $expanded103 ^ -1;
               $202 = $200 & $expanded102;
               $203 = $202;
               $arglist_next14 = ((($203)) + 4|0);
               HEAP32[$3>>2] = $arglist_next14;
               break;
              }
              default: {
               break L93;
              }
              }
              $204 = HEAP8[$171>>0]|0;
              $205 = ($204<<24>>24)==(0);
              if ($205) {
               break L95;
              } else {
               $$0325390 = $171;$173 = $204;
              }
             }
            }
           } while(0);
           $206 = (($$0394) + 1)|0;
           $207 = HEAP32[$20>>2]|0;
           $208 = $207 >>> 10;
           $209 = $208 & 255;
           $210 = ($206>>>0)<($209>>>0);
           if ($210) {
            $$0394 = $206;
           } else {
            break L91;
           }
          }
          _g_assertion_message_expr(0,124418,3331,124658,0);
          // unreachable;
         }
        } while(0);
        $211 = $125 << 27;
        $212 = $211 & 134217728;
        $213 = HEAP32[$6>>2]|0;
        $214 = (_g_type_value_table_peek($213)|0);
        $215 = ((($214)) + 24|0);
        $216 = HEAP32[$215>>2]|0;
        dest=$7; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
        $217 = HEAP8[$216>>0]|0;
        $218 = ($217<<24>>24)==(0);
        L109: do {
         if ($218) {
          $$0327$lcssa = 0;
         } else {
          $$0326385 = $216;$$0327384 = 0;$223 = $217;
          L111: while(1) {
           $219 = (($$0327384) + 1)|0;
           $220 = (($7) + ($$0327384<<3)|0);
           $221 = ((($$0326385)) + 1|0);
           $222 = $223 << 24 >> 24;
           switch ($222|0) {
           case 105:  {
            $arglist_current16 = HEAP32[$3>>2]|0;
            $224 = $arglist_current16;
            $225 = ((0) + 4|0);
            $expanded107 = $225;
            $expanded106 = (($expanded107) - 1)|0;
            $226 = (($224) + ($expanded106))|0;
            $227 = ((0) + 4|0);
            $expanded111 = $227;
            $expanded110 = (($expanded111) - 1)|0;
            $expanded109 = $expanded110 ^ -1;
            $228 = $226 & $expanded109;
            $229 = $228;
            $230 = HEAP32[$229>>2]|0;
            $arglist_next17 = ((($229)) + 4|0);
            HEAP32[$3>>2] = $arglist_next17;
            HEAP32[$220>>2] = $230;
            break;
           }
           case 108:  {
            $arglist_current19 = HEAP32[$3>>2]|0;
            $231 = $arglist_current19;
            $232 = ((0) + 4|0);
            $expanded114 = $232;
            $expanded113 = (($expanded114) - 1)|0;
            $233 = (($231) + ($expanded113))|0;
            $234 = ((0) + 4|0);
            $expanded118 = $234;
            $expanded117 = (($expanded118) - 1)|0;
            $expanded116 = $expanded117 ^ -1;
            $235 = $233 & $expanded116;
            $236 = $235;
            $237 = HEAP32[$236>>2]|0;
            $arglist_next20 = ((($236)) + 4|0);
            HEAP32[$3>>2] = $arglist_next20;
            HEAP32[$220>>2] = $237;
            break;
           }
           case 113:  {
            $arglist_current22 = HEAP32[$3>>2]|0;
            $238 = $arglist_current22;
            $239 = ((0) + 8|0);
            $expanded121 = $239;
            $expanded120 = (($expanded121) - 1)|0;
            $240 = (($238) + ($expanded120))|0;
            $241 = ((0) + 8|0);
            $expanded125 = $241;
            $expanded124 = (($expanded125) - 1)|0;
            $expanded123 = $expanded124 ^ -1;
            $242 = $240 & $expanded123;
            $243 = $242;
            $244 = $243;
            $245 = $244;
            $246 = HEAP32[$245>>2]|0;
            $247 = (($244) + 4)|0;
            $248 = $247;
            $249 = HEAP32[$248>>2]|0;
            $arglist_next23 = ((($243)) + 8|0);
            HEAP32[$3>>2] = $arglist_next23;
            $250 = $220;
            $251 = $250;
            HEAP32[$251>>2] = $246;
            $252 = (($250) + 4)|0;
            $253 = $252;
            HEAP32[$253>>2] = $249;
            break;
           }
           case 100:  {
            $arglist_current25 = HEAP32[$3>>2]|0;
            $254 = $arglist_current25;
            $255 = ((0) + 8|0);
            $expanded128 = $255;
            $expanded127 = (($expanded128) - 1)|0;
            $256 = (($254) + ($expanded127))|0;
            $257 = ((0) + 8|0);
            $expanded132 = $257;
            $expanded131 = (($expanded132) - 1)|0;
            $expanded130 = $expanded131 ^ -1;
            $258 = $256 & $expanded130;
            $259 = $258;
            $260 = +HEAPF64[$259>>3];
            $arglist_next26 = ((($259)) + 8|0);
            HEAP32[$3>>2] = $arglist_next26;
            HEAPF64[$220>>3] = $260;
            break;
           }
           case 112:  {
            $arglist_current28 = HEAP32[$3>>2]|0;
            $261 = $arglist_current28;
            $262 = ((0) + 4|0);
            $expanded135 = $262;
            $expanded134 = (($expanded135) - 1)|0;
            $263 = (($261) + ($expanded134))|0;
            $264 = ((0) + 4|0);
            $expanded139 = $264;
            $expanded138 = (($expanded139) - 1)|0;
            $expanded137 = $expanded138 ^ -1;
            $265 = $263 & $expanded137;
            $266 = $265;
            $267 = HEAP32[$266>>2]|0;
            $arglist_next29 = ((($266)) + 4|0);
            HEAP32[$3>>2] = $arglist_next29;
            HEAP32[$220>>2] = $267;
            break;
           }
           default: {
            break L111;
           }
           }
           $268 = HEAP8[$221>>0]|0;
           $269 = ($268<<24>>24)==(0);
           if ($269) {
            $$0327$lcssa = $219;
            break L109;
           } else {
            $$0326385 = $221;$$0327384 = $219;$223 = $268;
           }
          }
          _g_assertion_message_expr(0,124418,3337,124658,0);
          // unreachable;
         }
        } while(0);
        $270 = ((($214)) + 28|0);
        $271 = HEAP32[$270>>2]|0;
        $272 = (ftCall_iiiii($271|0,$6,$$0327$lcssa,$7,$212)|0);
        $273 = ($272|0)==(0|0);
        if ($273) {
         _g_value_unset($6);
         break;
        } else {
         HEAP32[$vararg_buffer30>>2] = 124679;
         $vararg_ptr33 = ((($vararg_buffer30)) + 4|0);
         HEAP32[$vararg_ptr33>>2] = $272;
         _g_log(0,16,130695,$vararg_buffer30);
         _g_free($272);
         break;
        }
       }
      } while(0);
      if ($433) {
       _g_object_unref($0);
      }
      STACKTOP = sp;return;
     }
    } while(0);
    $274 = HEAP32[$20>>2]|0;
    $275 = $274 >>> 10;
    $276 = $275 & 255;
    $277 = ((($12)) + 20|0);
    $278 = HEAP32[$277>>2]|0;
    $279 = ($276*24)|0;
    $280 = (($279) + 24)|0;
    $281 = (($276) + 1)|0;
    $$alloca_mul = ($281*24)|0;
    $282 = STACKTOP; STACKTOP = STACKTOP + ((((1*$$alloca_mul)|0)+15)&-16)|0;;
    _memset(($282|0),0,($280|0))|0;
    $283 = ((($282)) + 24|0);
    $284 = HEAP32[$20>>2]|0;
    $285 = $284 & 261120;
    $286 = ($285|0)==(0);
    L131: do {
     if (!($286)) {
      $287 = ((($12)) + 16|0);
      $$1381 = 0;
      L133: while(1) {
       $288 = HEAP32[$287>>2]|0;
       $289 = (($288) + ($$1381<<2)|0);
       $290 = HEAP32[$289>>2]|0;
       $291 = $290 & -2;
       $292 = (($283) + (($$1381*24)|0)|0);
       $293 = $290 << 27;
       $294 = $293 & 134217728;
       $295 = (_g_type_value_table_peek($291)|0);
       $296 = ((($295)) + 16|0);
       $297 = HEAP32[$296>>2]|0;
       dest=$4; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
       HEAP32[$292>>2] = $291;
       $298 = HEAP8[$297>>0]|0;
       $299 = ($298<<24>>24)==(0);
       L135: do {
        if ($299) {
         $$0329$lcssa = 0;
        } else {
         $$0328376 = $297;$$0329375 = 0;$304 = $298;
         while(1) {
          $300 = (($$0329375) + 1)|0;
          $301 = (($4) + ($$0329375<<3)|0);
          $302 = ((($$0328376)) + 1|0);
          $303 = $304 << 24 >> 24;
          switch ($303|0) {
          case 105:  {
           $arglist_current35 = HEAP32[$3>>2]|0;
           $305 = $arglist_current35;
           $306 = ((0) + 4|0);
           $expanded142 = $306;
           $expanded141 = (($expanded142) - 1)|0;
           $307 = (($305) + ($expanded141))|0;
           $308 = ((0) + 4|0);
           $expanded146 = $308;
           $expanded145 = (($expanded146) - 1)|0;
           $expanded144 = $expanded145 ^ -1;
           $309 = $307 & $expanded144;
           $310 = $309;
           $311 = HEAP32[$310>>2]|0;
           $arglist_next36 = ((($310)) + 4|0);
           HEAP32[$3>>2] = $arglist_next36;
           HEAP32[$301>>2] = $311;
           break;
          }
          case 108:  {
           $arglist_current38 = HEAP32[$3>>2]|0;
           $312 = $arglist_current38;
           $313 = ((0) + 4|0);
           $expanded149 = $313;
           $expanded148 = (($expanded149) - 1)|0;
           $314 = (($312) + ($expanded148))|0;
           $315 = ((0) + 4|0);
           $expanded153 = $315;
           $expanded152 = (($expanded153) - 1)|0;
           $expanded151 = $expanded152 ^ -1;
           $316 = $314 & $expanded151;
           $317 = $316;
           $318 = HEAP32[$317>>2]|0;
           $arglist_next39 = ((($317)) + 4|0);
           HEAP32[$3>>2] = $arglist_next39;
           HEAP32[$301>>2] = $318;
           break;
          }
          case 113:  {
           $arglist_current41 = HEAP32[$3>>2]|0;
           $319 = $arglist_current41;
           $320 = ((0) + 8|0);
           $expanded156 = $320;
           $expanded155 = (($expanded156) - 1)|0;
           $321 = (($319) + ($expanded155))|0;
           $322 = ((0) + 8|0);
           $expanded160 = $322;
           $expanded159 = (($expanded160) - 1)|0;
           $expanded158 = $expanded159 ^ -1;
           $323 = $321 & $expanded158;
           $324 = $323;
           $325 = $324;
           $326 = $325;
           $327 = HEAP32[$326>>2]|0;
           $328 = (($325) + 4)|0;
           $329 = $328;
           $330 = HEAP32[$329>>2]|0;
           $arglist_next42 = ((($324)) + 8|0);
           HEAP32[$3>>2] = $arglist_next42;
           $331 = $301;
           $332 = $331;
           HEAP32[$332>>2] = $327;
           $333 = (($331) + 4)|0;
           $334 = $333;
           HEAP32[$334>>2] = $330;
           break;
          }
          case 100:  {
           $arglist_current44 = HEAP32[$3>>2]|0;
           $335 = $arglist_current44;
           $336 = ((0) + 8|0);
           $expanded163 = $336;
           $expanded162 = (($expanded163) - 1)|0;
           $337 = (($335) + ($expanded162))|0;
           $338 = ((0) + 8|0);
           $expanded167 = $338;
           $expanded166 = (($expanded167) - 1)|0;
           $expanded165 = $expanded166 ^ -1;
           $339 = $337 & $expanded165;
           $340 = $339;
           $341 = +HEAPF64[$340>>3];
           $arglist_next45 = ((($340)) + 8|0);
           HEAP32[$3>>2] = $arglist_next45;
           HEAPF64[$301>>3] = $341;
           break;
          }
          case 112:  {
           $arglist_current47 = HEAP32[$3>>2]|0;
           $342 = $arglist_current47;
           $343 = ((0) + 4|0);
           $expanded170 = $343;
           $expanded169 = (($expanded170) - 1)|0;
           $344 = (($342) + ($expanded169))|0;
           $345 = ((0) + 4|0);
           $expanded174 = $345;
           $expanded173 = (($expanded174) - 1)|0;
           $expanded172 = $expanded173 ^ -1;
           $346 = $344 & $expanded172;
           $347 = $346;
           $348 = HEAP32[$347>>2]|0;
           $arglist_next48 = ((($347)) + 4|0);
           HEAP32[$3>>2] = $arglist_next48;
           HEAP32[$301>>2] = $348;
           break;
          }
          default: {
           label = 102;
           break L133;
          }
          }
          $349 = HEAP8[$302>>0]|0;
          $350 = ($349<<24>>24)==(0);
          if ($350) {
           $$0329$lcssa = $300;
           break L135;
          } else {
           $$0328376 = $302;$$0329375 = $300;$304 = $349;
          }
         }
        }
       } while(0);
       $351 = ((($295)) + 20|0);
       $352 = HEAP32[$351>>2]|0;
       $353 = (ftCall_iiiii($352|0,$292,$$0329$lcssa,$4,$294)|0);
       $354 = ($353|0)==(0|0);
       if (!($354)) {
        break;
       }
       $359 = (($$1381) + 1)|0;
       $360 = HEAP32[$20>>2]|0;
       $361 = $360 >>> 10;
       $362 = $361 & 255;
       $363 = ($359>>>0)<($362>>>0);
       if ($363) {
        $$1381 = $359;
       } else {
        break L131;
       }
      }
      if ((label|0) == 102) {
       _g_assertion_message_expr(0,124418,3375,124658,0);
       // unreachable;
      }
      HEAP32[$vararg_buffer49>>2] = 124717;
      $vararg_ptr52 = ((($vararg_buffer49)) + 4|0);
      HEAP32[$vararg_ptr52>>2] = $353;
      _g_log(0,16,130695,$vararg_buffer49);
      _g_free($353);
      $355 = ($$1381|0)==(0);
      if ($355) {
       STACKTOP = sp;return;
      }
      $$2367 = $$1381;
      while(1) {
       $356 = (($$2367) + -1)|0;
       $357 = (($282) + (($$2367*24)|0)|0);
       _g_value_unset($357);
       $358 = ($356|0)==(0);
       if ($358) {
        break;
       } else {
        $$2367 = $356;
       }
      }
      STACKTOP = sp;return;
     }
    } while(0);
    HEAP32[$282>>2] = 0;
    _g_value_init_from_instance($282,$0);
    $364 = ($278|0)==(4);
    if (!($364)) {
     ;HEAP32[$4>>2]=HEAP32[143648>>2]|0;HEAP32[$4+4>>2]=HEAP32[143648+4>>2]|0;HEAP32[$4+8>>2]=HEAP32[143648+8>>2]|0;HEAP32[$4+12>>2]=HEAP32[143648+12>>2]|0;HEAP32[$4+16>>2]=HEAP32[143648+16>>2]|0;HEAP32[$4+20>>2]=HEAP32[143648+20>>2]|0;
     $365 = $278 & -2;
     (_g_value_init($4,$365)|0);
     $366 = $278 << 27;
     $367 = $366 & 134217728;
     $368 = HEAP32[$4>>2]|0;
     $369 = (_g_type_value_table_peek($368)|0);
     $370 = ((($369)) + 24|0);
     $371 = HEAP32[$370>>2]|0;
     dest=$5; stop=dest+64|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
     $372 = HEAP8[$371>>0]|0;
     $373 = ($372<<24>>24)==(0);
     L160: do {
      if ($373) {
       $$0319$lcssa = 0;
      } else {
       $$0319371 = 0;$$0320370 = $371;$378 = $372;
       L162: while(1) {
        $374 = (($$0319371) + 1)|0;
        $375 = (($5) + ($$0319371<<3)|0);
        $376 = ((($$0320370)) + 1|0);
        $377 = $378 << 24 >> 24;
        switch ($377|0) {
        case 105:  {
         $arglist_current54 = HEAP32[$3>>2]|0;
         $379 = $arglist_current54;
         $380 = ((0) + 4|0);
         $expanded177 = $380;
         $expanded176 = (($expanded177) - 1)|0;
         $381 = (($379) + ($expanded176))|0;
         $382 = ((0) + 4|0);
         $expanded181 = $382;
         $expanded180 = (($expanded181) - 1)|0;
         $expanded179 = $expanded180 ^ -1;
         $383 = $381 & $expanded179;
         $384 = $383;
         $385 = HEAP32[$384>>2]|0;
         $arglist_next55 = ((($384)) + 4|0);
         HEAP32[$3>>2] = $arglist_next55;
         HEAP32[$375>>2] = $385;
         break;
        }
        case 108:  {
         $arglist_current57 = HEAP32[$3>>2]|0;
         $386 = $arglist_current57;
         $387 = ((0) + 4|0);
         $expanded184 = $387;
         $expanded183 = (($expanded184) - 1)|0;
         $388 = (($386) + ($expanded183))|0;
         $389 = ((0) + 4|0);
         $expanded188 = $389;
         $expanded187 = (($expanded188) - 1)|0;
         $expanded186 = $expanded187 ^ -1;
         $390 = $388 & $expanded186;
         $391 = $390;
         $392 = HEAP32[$391>>2]|0;
         $arglist_next58 = ((($391)) + 4|0);
         HEAP32[$3>>2] = $arglist_next58;
         HEAP32[$375>>2] = $392;
         break;
        }
        case 113:  {
         $arglist_current60 = HEAP32[$3>>2]|0;
         $393 = $arglist_current60;
         $394 = ((0) + 8|0);
         $expanded191 = $394;
         $expanded190 = (($expanded191) - 1)|0;
         $395 = (($393) + ($expanded190))|0;
         $396 = ((0) + 8|0);
         $expanded195 = $396;
         $expanded194 = (($expanded195) - 1)|0;
         $expanded193 = $expanded194 ^ -1;
         $397 = $395 & $expanded193;
         $398 = $397;
         $399 = $398;
         $400 = $399;
         $401 = HEAP32[$400>>2]|0;
         $402 = (($399) + 4)|0;
         $403 = $402;
         $404 = HEAP32[$403>>2]|0;
         $arglist_next61 = ((($398)) + 8|0);
         HEAP32[$3>>2] = $arglist_next61;
         $405 = $375;
         $406 = $405;
         HEAP32[$406>>2] = $401;
         $407 = (($405) + 4)|0;
         $408 = $407;
         HEAP32[$408>>2] = $404;
         break;
        }
        case 100:  {
         $arglist_current63 = HEAP32[$3>>2]|0;
         $409 = $arglist_current63;
         $410 = ((0) + 8|0);
         $expanded198 = $410;
         $expanded197 = (($expanded198) - 1)|0;
         $411 = (($409) + ($expanded197))|0;
         $412 = ((0) + 8|0);
         $expanded202 = $412;
         $expanded201 = (($expanded202) - 1)|0;
         $expanded200 = $expanded201 ^ -1;
         $413 = $411 & $expanded200;
         $414 = $413;
         $415 = +HEAPF64[$414>>3];
         $arglist_next64 = ((($414)) + 8|0);
         HEAP32[$3>>2] = $arglist_next64;
         HEAPF64[$375>>3] = $415;
         break;
        }
        case 112:  {
         $arglist_current66 = HEAP32[$3>>2]|0;
         $416 = $arglist_current66;
         $417 = ((0) + 4|0);
         $expanded205 = $417;
         $expanded204 = (($expanded205) - 1)|0;
         $418 = (($416) + ($expanded204))|0;
         $419 = ((0) + 4|0);
         $expanded209 = $419;
         $expanded208 = (($expanded209) - 1)|0;
         $expanded207 = $expanded208 ^ -1;
         $420 = $418 & $expanded207;
         $421 = $420;
         $422 = HEAP32[$421>>2]|0;
         $arglist_next67 = ((($421)) + 4|0);
         HEAP32[$3>>2] = $arglist_next67;
         HEAP32[$375>>2] = $422;
         break;
        }
        default: {
         break L162;
        }
        }
        $423 = HEAP8[$376>>0]|0;
        $424 = ($423<<24>>24)==(0);
        if ($424) {
         $$0319$lcssa = $374;
         break L160;
        } else {
         $$0319371 = $374;$$0320370 = $376;$378 = $423;
        }
       }
       _g_assertion_message_expr(0,124418,3409,124658,0);
       // unreachable;
      }
     } while(0);
     $425 = ((($369)) + 28|0);
     $426 = HEAP32[$425>>2]|0;
     $427 = (ftCall_iiiii($426|0,$4,$$0319$lcssa,$5,$367)|0);
     $428 = ($427|0)==(0|0);
     if ($428) {
      _g_value_unset($4);
     } else {
      HEAP32[$vararg_buffer68>>2] = 124755;
      $vararg_ptr71 = ((($vararg_buffer68)) + 4|0);
      HEAP32[$vararg_ptr71>>2] = $427;
      _g_log(0,16,130695,$vararg_buffer68);
      _g_free($427);
     }
    }
    $429 = ($276|0)==(0);
    if (!($429)) {
     $$4368 = 0;
     while(1) {
      $430 = (($283) + (($$4368*24)|0)|0);
      _g_value_unset($430);
      $431 = (($$4368) + 1)|0;
      $exitcond = ($431|0)==($276|0);
      if ($exitcond) {
       break;
      } else {
       $$4368 = $431;
      }
     }
    }
    _g_value_unset($282);
    STACKTOP = sp;return;
   }
  }
 }
 HEAP32[$vararg_buffer>>2] = 124607;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $0;
 _g_log(0,16,124370,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_signal_emit($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 _g_signal_emit_valist($0,$1,$2,$3);
 STACKTOP = sp;return;
}
function _g_type_interface_add_prerequisite($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i63 = 0, $$0$i$i67 = 0, $$0$i$i71 = 0, $$0$i$i75 = 0, $$0$i$i79 = 0, $$0$i$i83 = 0, $$0$i$i89 = 0, $$0$i$i93 = 0, $$0$i$i97 = 0, $$0$i101 = 0, $$0$i103 = 0, $$0$i60 = 0, $$0$i61 = 0, $$0$i65 = 0, $$0$i69 = 0, $$0$i73 = 0, $$0$i77 = 0, $$0$i81 = 0;
 var $$0$i85 = 0, $$0$i87 = 0, $$0$i91 = 0, $$0$i95 = 0, $$0$i99 = 0, $$0108 = 0, $$033$i = 0, $$036$i = 0, $$058110 = 0, $$134$i = 0, $$137$i = 0, $$159109 = 0, $$idx = 0, $$idx$val = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $vararg_buffer = 0, $vararg_buffer12 = 0;
 var $vararg_buffer2 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($1>>>0)>(1020);
 if ($8) {
  $9 = $1 & -4;
  $10 = $9;
  $$0$i61 = $10;
 } else {
  $11 = $1 >>> 2;
  $12 = (141120 + ($11<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0$i61 = $13;
 }
 $14 = ($$0$i|0)!=(0|0);
 $15 = ($$0$i61|0)!=(0|0);
 $or$cond = $14 & $15;
 if ($or$cond) {
  $16 = ((($$0$i)) + 12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = $17 & 255;
  $19 = (((($$0$i)) + 40|0) + ($18<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(8);
  if ($21) {
   $42 = HEAP32[35943]|0;
   $$idx = ((($$0$i)) + 28|0);
   $$idx$val = HEAP32[$$idx>>2]|0;
   $43 = ($42|0)!=(0);
   $44 = ($$idx$val|0)!=(0|0);
   $or$cond$i = $43 & $44;
   L12: do {
    if ($or$cond$i) {
     $45 = HEAP32[$$idx$val>>2]|0;
     $46 = ($45|0)==(0);
     if (!($46)) {
      $47 = ((($$idx$val)) + 4|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ((($48)) + -8|0);
      $$033$i = $49;$$036$i = $45;
      while(1) {
       $50 = (($$036$i) + 1)|0;
       $51 = $50 >>> 1;
       $52 = (($$033$i) + ($51<<3)|0);
       $53 = HEAP32[$52>>2]|0;
       $54 = ($53|0)==($42|0);
       if ($54) {
        break;
       }
       $55 = ($53>>>0)<($42>>>0);
       $56 = (($$036$i) - ($51))|0;
       $57 = (($51) + -1)|0;
       $$137$i = $55 ? $56 : $57;
       $$134$i = $55 ? $52 : $$033$i;
       $58 = ($$137$i|0)==(0);
       if ($58) {
        break L12;
       } else {
        $$033$i = $$134$i;$$036$i = $$137$i;
       }
      }
      $59 = (((($$033$i) + ($51<<3)|0)) + 4|0);
      $60 = HEAP32[$59>>2]|0;
      $61 = ($60|0)==(0|0);
      if (!($61)) {
       $62 = ($1|0)==(0);
       if ($62) {
        $$0$i77 = 124803;
       } else {
        if ($8) {
         $63 = $1 & -4;
         $64 = $63;
         $$0$i$i75 = $64;
        } else {
         $65 = $1 >>> 2;
         $66 = (141120 + ($65<<2)|0);
         $67 = HEAP32[$66>>2]|0;
         $$0$i$i75 = $67;
        }
        $68 = ($$0$i$i75|0)==(0|0);
        if ($68) {
         $$0$i77 = 124793;
        } else {
         $69 = ((($$0$i$i75)) + 24|0);
         $70 = HEAP32[$69>>2]|0;
         $71 = (_g_quark_to_string($70)|0);
         $$0$i77 = $71;
        }
       }
       $72 = ($0|0)==(0);
       if ($72) {
        $$0$i81 = 124803;
       } else {
        if ($2) {
         $73 = $0 & -4;
         $74 = $73;
         $$0$i$i79 = $74;
        } else {
         $75 = $0 >>> 2;
         $76 = (141120 + ($75<<2)|0);
         $77 = HEAP32[$76>>2]|0;
         $$0$i$i79 = $77;
        }
        $78 = ($$0$i$i79|0)==(0|0);
        if ($78) {
         $$0$i81 = 124793;
        } else {
         $79 = ((($$0$i$i79)) + 24|0);
         $80 = HEAP32[$79>>2]|0;
         $81 = (_g_quark_to_string($80)|0);
         $$0$i81 = $81;
        }
       }
       $82 = HEAP32[$60>>2]|0;
       $83 = ($82|0)==(0);
       if ($83) {
        $$0$i85 = 124803;
       } else {
        $84 = ($82>>>0)>(1020);
        if ($84) {
         $85 = $82 & -4;
         $86 = $85;
         $$0$i$i83 = $86;
        } else {
         $87 = $82 >>> 2;
         $88 = (141120 + ($87<<2)|0);
         $89 = HEAP32[$88>>2]|0;
         $$0$i$i83 = $89;
        }
        $90 = ($$0$i$i83|0)==(0|0);
        if ($90) {
         $$0$i85 = 124793;
        } else {
         $91 = ((($$0$i$i83)) + 24|0);
         $92 = HEAP32[$91>>2]|0;
         $93 = (_g_quark_to_string($92)|0);
         $$0$i85 = $93;
        }
       }
       HEAP32[$vararg_buffer2>>2] = $$0$i77;
       $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
       HEAP32[$vararg_ptr5>>2] = $$0$i81;
       $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
       HEAP32[$vararg_ptr6>>2] = $$0$i85;
       _g_log(0,16,124867,$vararg_buffer2);
       STACKTOP = sp;return;
      }
     }
    }
   } while(0);
   $94 = ((($$0$i61)) + 12|0);
   $95 = HEAP32[$94>>2]|0;
   $96 = $95 & 262144;
   $97 = ($96|0)==(0);
   if ($97) {
    $163 = $95 & 255;
    $164 = (((($$0$i61)) + 40|0) + ($163<<2)|0);
    $165 = HEAP32[$164>>2]|0;
    $166 = ($165|0)==(8);
    if ($166) {
     $167 = ((($$0$i61)) + 36|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = $95 & 130816;
     $170 = ($169|0)==(0);
     if (!($170)) {
      $$0108 = 0;
      while(1) {
       $171 = (($168) + ($$0108<<2)|0);
       $172 = HEAP32[$171>>2]|0;
       $173 = ($172>>>0)>(1020);
       if ($173) {
        $174 = $172 & -4;
        $175 = $174;
        $$0$i103 = $175;
       } else {
        $176 = $172 >>> 2;
        $177 = (141120 + ($176<<2)|0);
        $178 = HEAP32[$177>>2]|0;
        $$0$i103 = $178;
       }
       _type_iface_add_prerequisite_W($$0$i,$$0$i103);
       $179 = (($$0108) + 1)|0;
       $180 = HEAP32[$94>>2]|0;
       $181 = $180 >>> 8;
       $182 = $181 & 511;
       $183 = ($179>>>0)<($182>>>0);
       if ($183) {
        $$0108 = $179;
       } else {
        break;
       }
      }
     }
     _type_iface_add_prerequisite_W($$0$i,$$0$i61);
     STACKTOP = sp;return;
    }
    $184 = ($1|0)==(0);
    if ($184) {
     $$0$i65 = 124803;
    } else {
     if ($8) {
      $185 = $1 & -4;
      $186 = $185;
      $$0$i$i63 = $186;
     } else {
      $187 = $1 >>> 2;
      $188 = (141120 + ($187<<2)|0);
      $189 = HEAP32[$188>>2]|0;
      $$0$i$i63 = $189;
     }
     $190 = ($$0$i$i63|0)==(0|0);
     if ($190) {
      $$0$i65 = 124793;
     } else {
      $191 = ((($$0$i$i63)) + 24|0);
      $192 = HEAP32[$191>>2]|0;
      $193 = (_g_quark_to_string($192)|0);
      $$0$i65 = $193;
     }
    }
    $194 = ($0|0)==(0);
    if ($194) {
     $$0$i60 = 124803;
    } else {
     if ($2) {
      $195 = $0 & -4;
      $196 = $195;
      $$0$i$i = $196;
     } else {
      $197 = $0 >>> 2;
      $198 = (141120 + ($197<<2)|0);
      $199 = HEAP32[$198>>2]|0;
      $$0$i$i = $199;
     }
     $200 = ($$0$i$i|0)==(0|0);
     if ($200) {
      $$0$i60 = 124793;
     } else {
      $201 = ((($$0$i$i)) + 24|0);
      $202 = HEAP32[$201>>2]|0;
      $203 = (_g_quark_to_string($202)|0);
      $$0$i60 = $203;
     }
    }
    HEAP32[$vararg_buffer12>>2] = $$0$i65;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = $$0$i60;
    _g_log(0,16,125035,$vararg_buffer12);
    STACKTOP = sp;return;
   }
   $98 = $17 & 130816;
   $99 = ($98|0)==(0);
   L79: do {
    if (!($99)) {
     $100 = ((($$0$i)) + 36|0);
     $101 = HEAP32[$100>>2]|0;
     $102 = $17 >>> 8;
     $103 = $102 & 511;
     $$058110 = 0;
     while(1) {
      $106 = (($101) + ($$058110<<2)|0);
      $107 = HEAP32[$106>>2]|0;
      $108 = ($107>>>0)>(1020);
      if ($108) {
       $109 = $107 & -4;
       $110 = $109;
       $$0$i87 = $110;
      } else {
       $111 = $107 >>> 2;
       $112 = (141120 + ($111<<2)|0);
       $113 = HEAP32[$112>>2]|0;
       $$0$i87 = $113;
      }
      $114 = ((($$0$i87)) + 12|0);
      $115 = HEAP32[$114>>2]|0;
      $116 = $115 & 262144;
      $117 = ($116|0)==(0);
      $105 = (($$058110) + 1)|0;
      if (!($117)) {
       break;
      }
      $104 = ($105>>>0)<($103>>>0);
      if ($104) {
       $$058110 = $105;
      } else {
       break L79;
      }
     }
     $118 = ($1|0)==(0);
     if ($118) {
      $$0$i91 = 124803;
     } else {
      if ($8) {
       $119 = $1 & -4;
       $120 = $119;
       $$0$i$i89 = $120;
      } else {
       $121 = $1 >>> 2;
       $122 = (141120 + ($121<<2)|0);
       $123 = HEAP32[$122>>2]|0;
       $$0$i$i89 = $123;
      }
      $124 = ($$0$i$i89|0)==(0|0);
      if ($124) {
       $$0$i91 = 124793;
      } else {
       $125 = ((($$0$i$i89)) + 24|0);
       $126 = HEAP32[$125>>2]|0;
       $127 = (_g_quark_to_string($126)|0);
       $$0$i91 = $127;
      }
     }
     $128 = ($0|0)==(0);
     if ($128) {
      $$0$i95 = 124803;
     } else {
      if ($2) {
       $129 = $0 & -4;
       $130 = $129;
       $$0$i$i93 = $130;
      } else {
       $131 = $0 >>> 2;
       $132 = (141120 + ($131<<2)|0);
       $133 = HEAP32[$132>>2]|0;
       $$0$i$i93 = $133;
      }
      $134 = ($$0$i$i93|0)==(0|0);
      if ($134) {
       $$0$i95 = 124793;
      } else {
       $135 = ((($$0$i$i93)) + 24|0);
       $136 = HEAP32[$135>>2]|0;
       $137 = (_g_quark_to_string($136)|0);
       $$0$i95 = $137;
      }
     }
     $138 = ((($$0$i87)) + 40|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = ($139|0)==(0);
     if ($140) {
      $$0$i99 = 124803;
     } else {
      $141 = ($139>>>0)>(1020);
      if ($141) {
       $142 = $139 & -4;
       $143 = $142;
       $$0$i$i97 = $143;
      } else {
       $144 = $139 >>> 2;
       $145 = (141120 + ($144<<2)|0);
       $146 = HEAP32[$145>>2]|0;
       $$0$i$i97 = $146;
      }
      $147 = ($$0$i$i97|0)==(0|0);
      if ($147) {
       $$0$i99 = 124793;
      } else {
       $148 = ((($$0$i$i97)) + 24|0);
       $149 = HEAP32[$148>>2]|0;
       $150 = (_g_quark_to_string($149)|0);
       $$0$i99 = $150;
      }
     }
     HEAP32[$vararg_buffer7>>2] = $$0$i91;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = $$0$i95;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $$0$i99;
     _g_log(0,16,124950,$vararg_buffer7);
     STACKTOP = sp;return;
    }
   } while(0);
   $$159109 = 0;
   while(1) {
    $151 = (((($$0$i61)) + 40|0) + ($$159109<<2)|0);
    $152 = HEAP32[$151>>2]|0;
    $153 = ($152>>>0)>(1020);
    if ($153) {
     $154 = $152 & -4;
     $155 = $154;
     $$0$i101 = $155;
    } else {
     $156 = $152 >>> 2;
     $157 = (141120 + ($156<<2)|0);
     $158 = HEAP32[$157>>2]|0;
     $$0$i101 = $158;
    }
    _type_iface_add_prerequisite_W($$0$i,$$0$i101);
    $159 = (($$159109) + 1)|0;
    $160 = HEAP32[$94>>2]|0;
    $161 = $160 & 255;
    $162 = ($$159109>>>0)<($161>>>0);
    if ($162) {
     $$159109 = $159;
    } else {
     break;
    }
   }
   STACKTOP = sp;return;
  }
 }
 $22 = ($0|0)==(0);
 if ($22) {
  $$0$i69 = 124803;
 } else {
  if ($2) {
   $23 = $0 & -4;
   $24 = $23;
   $$0$i$i67 = $24;
  } else {
   $25 = $0 >>> 2;
   $26 = (141120 + ($25<<2)|0);
   $27 = HEAP32[$26>>2]|0;
   $$0$i$i67 = $27;
  }
  $28 = ($$0$i$i67|0)==(0|0);
  if ($28) {
   $$0$i69 = 124793;
  } else {
   $29 = ((($$0$i$i67)) + 24|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = (_g_quark_to_string($30)|0);
   $$0$i69 = $31;
  }
 }
 $32 = ($1|0)==(0);
 if ($32) {
  $$0$i73 = 124803;
 } else {
  if ($8) {
   $33 = $1 & -4;
   $34 = $33;
   $$0$i$i71 = $34;
  } else {
   $35 = $1 >>> 2;
   $36 = (141120 + ($35<<2)|0);
   $37 = HEAP32[$36>>2]|0;
   $$0$i$i71 = $37;
  }
  $38 = ($$0$i$i71|0)==(0|0);
  if ($38) {
   $$0$i73 = 124793;
  } else {
   $39 = ((($$0$i$i71)) + 24|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = (_g_quark_to_string($40)|0);
   $$0$i73 = $41;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i69;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $$0$i73;
 _g_log(0,16,124813,$vararg_buffer);
 STACKTOP = sp;return;
}
function _type_iface_add_prerequisite_W($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$033$i = 0, $$033$i98 = 0, $$036$i = 0, $$036$i97 = 0, $$06375$i = 0, $$091$lcssa = 0, $$091113 = 0, $$1$lcssa$i = 0, $$1112 = 0, $$134$i = 0, $$134$i100 = 0, $$137$i = 0, $$137$i99 = 0, $$170$i = 0, $$2$i103 = 0, $$idx = 0, $$idx$val = 0, $$idx95 = 0, $$idx95$val = 0;
 var $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0;
 var $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0;
 var $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond$i96 = 0, $phitmp = 0, $phitmp$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & 255;
 $7 = (((($0)) + 40|0) + ($6<<2)|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)!=(8);
 $10 = $5 & 130816;
 $11 = ($10|0)==(130816);
 $or$cond = $9 | $11;
 if ($or$cond) {
  _g_assertion_message_expr(0,125112,1616,125143,125173);
  // unreachable;
 }
 $12 = ((($1)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13 & 262144;
 $15 = ($14|0)==(0);
 if ($15) {
  $16 = $13 & 255;
  $17 = (((($1)) + 40|0) + ($16<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ($18|0)==(8);
  if (!($19)) {
   _g_assertion_message_expr(0,125112,1616,125143,125173);
   // unreachable;
  }
 }
 $20 = ((($0)) + 36|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $5 >>> 8;
 $23 = $22 & 511;
 $24 = ($23|0)==(0);
 L8: do {
  if ($24) {
   $$091$lcssa = 0;
  } else {
   $$091113 = 0;
   while(1) {
    $25 = (($21) + ($$091113<<2)|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = ($26|0)==($3|0);
    if ($27) {
     break;
    }
    $28 = ($26>>>0)>($3>>>0);
    if ($28) {
     $$091$lcssa = $$091113;
     break L8;
    }
    $29 = (($$091113) + 1)|0;
    $30 = ($29>>>0)<($23>>>0);
    if ($30) {
     $$091113 = $29;
    } else {
     $$091$lcssa = $29;
     break L8;
    }
   }
   return;
  }
 } while(0);
 $31 = (($5) + 256)|0;
 $32 = $31 & 130816;
 $33 = $5 & -130817;
 $34 = $32 | $33;
 HEAP32[$4>>2] = $34;
 $35 = $31 >>> 8;
 $36 = $35 & 511;
 $37 = (_g_realloc_n($21,$36,4)|0);
 HEAP32[$20>>2] = $37;
 $38 = (($37) + ($$091$lcssa<<2)|0);
 $39 = ((($38)) + 4|0);
 $40 = HEAP32[$4>>2]|0;
 $41 = $40 >>> 8;
 $42 = $41 & 511;
 $43 = (($42) - ($$091$lcssa))|0;
 $44 = $43 << 2;
 $45 = (($44) + -4)|0;
 _memmove(($39|0),($38|0),($45|0))|0;
 HEAP32[$38>>2] = $3;
 $46 = HEAP32[$12>>2]|0;
 $47 = $46 & 255;
 $48 = (((($1)) + 40|0) + ($47<<2)|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(8);
 if ($50) {
  $51 = HEAP32[35944]|0;
  $$idx95 = ((($1)) + 28|0);
  $$idx95$val = HEAP32[$$idx95>>2]|0;
  $52 = ($51|0)!=(0);
  $53 = ($$idx95$val|0)!=(0|0);
  $or$cond$i = $52 & $53;
  L18: do {
   if ($or$cond$i) {
    $54 = HEAP32[$$idx95$val>>2]|0;
    $55 = ($54|0)==(0);
    if ($55) {
     $$2$i103 = 0;$73 = 1;
    } else {
     $56 = ((($$idx95$val)) + 4|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ((($57)) + -8|0);
     $$033$i = $58;$$036$i = $54;
     while(1) {
      $59 = (($$036$i) + 1)|0;
      $60 = $59 >>> 1;
      $61 = (($$033$i) + ($60<<3)|0);
      $62 = HEAP32[$61>>2]|0;
      $63 = ($62|0)==($51|0);
      if ($63) {
       break;
      }
      $64 = ($62>>>0)<($51>>>0);
      $65 = (($$036$i) - ($60))|0;
      $66 = (($60) + -1)|0;
      $$137$i = $64 ? $65 : $66;
      $$134$i = $64 ? $61 : $$033$i;
      $67 = ($$137$i|0)==(0);
      if ($67) {
       $$2$i103 = 0;$73 = 1;
       break L18;
      } else {
       $$033$i = $$134$i;$$036$i = $$137$i;
      }
     }
     $68 = (((($$033$i) + ($60<<3)|0)) + 4|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==(0|0);
     if ($70) {
      $$2$i103 = 0;$73 = 1;
     } else {
      $71 = HEAP32[$69>>2]|0;
      $phitmp = (($71) + 1)|0;
      $$2$i103 = $69;$73 = $phitmp;
     }
    }
   } else {
    $$2$i103 = 0;$73 = 1;
   }
  } while(0);
  $72 = (($73) + 1)|0;
  $74 = (_g_realloc_n($$2$i103,$72,4)|0);
  $75 = ((($0)) + 40|0);
  $76 = HEAP32[$75>>2]|0;
  $77 = (($74) + ($73<<2)|0);
  HEAP32[$77>>2] = $76;
  HEAP32[$74>>2] = $73;
  $78 = HEAP32[35944]|0;
  $79 = HEAP32[$$idx95>>2]|0;
  $80 = ($79|0)==(0|0);
  if ($80) {
   $81 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx95>>2] = $81;
   $83 = $81;
  } else {
   $83 = $79;
  }
  $82 = ((($83)) + 4|0);
  $84 = HEAP32[$82>>2]|0;
  $85 = HEAP32[$83>>2]|0;
  $86 = ($85|0)==(0);
  do {
   if ($86) {
    $$lcssa65$i = 1;
    label = 26;
   } else {
    $$06375$i = 0;
    while(1) {
     $87 = (($84) + ($$06375$i<<3)|0);
     $88 = HEAP32[$87>>2]|0;
     $89 = ($88|0)==($78|0);
     if ($89) {
      label = 23;
      break;
     }
     $91 = (($$06375$i) + 1)|0;
     $92 = ($91>>>0)<($85>>>0);
     if ($92) {
      $$06375$i = $91;
     } else {
      label = 25;
      break;
     }
    }
    if ((label|0) == 23) {
     $90 = (((($84) + ($$06375$i<<3)|0)) + 4|0);
     $$sink = $90;
     break;
    }
    else if ((label|0) == 25) {
     $phitmp$i = (($85) + 1)|0;
     $$lcssa65$i = $phitmp$i;
     label = 26;
     break;
    }
   }
  } while(0);
  if ((label|0) == 26) {
   HEAP32[$83>>2] = $$lcssa65$i;
   $93 = (_g_realloc_n($84,$$lcssa65$i,8)|0);
   HEAP32[$82>>2] = $93;
   $94 = HEAP32[$83>>2]|0;
   $95 = ($94|0)==(1);
   L40: do {
    if ($95) {
     $$1$lcssa$i = 0;$$lcssa$i = 1;
    } else {
     $96 = (($94) + -1)|0;
     $$170$i = 0;
     while(1) {
      $97 = (($93) + ($$170$i<<3)|0);
      $98 = HEAP32[$97>>2]|0;
      $99 = ($98>>>0)>($78>>>0);
      if ($99) {
       $$1$lcssa$i = $$170$i;$$lcssa$i = $94;
       break L40;
      }
      $100 = (($$170$i) + 1)|0;
      $101 = ($100>>>0)<($96>>>0);
      if ($101) {
       $$170$i = $100;
      } else {
       $$1$lcssa$i = $100;$$lcssa$i = $94;
       break;
      }
     }
    }
   } while(0);
   $102 = (($93) + ($$1$lcssa$i<<3)|0);
   $103 = ((($102)) + 8|0);
   $104 = (($$lcssa$i) - ($$1$lcssa$i))|0;
   $105 = $104 << 3;
   $106 = (($105) + -8)|0;
   _memmove(($103|0),($102|0),($106|0))|0;
   HEAP32[$102>>2] = $78;
   $107 = (((($93) + ($$1$lcssa$i<<3)|0)) + 4|0);
   $$sink = $107;
  }
  HEAP32[$$sink>>2] = $74;
 }
 $108 = HEAP32[35944]|0;
 $$idx = ((($0)) + 28|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $109 = ($108|0)!=(0);
 $110 = ($$idx$val|0)!=(0|0);
 $or$cond$i96 = $109 & $110;
 if (!($or$cond$i96)) {
  return;
 }
 $111 = HEAP32[$$idx$val>>2]|0;
 $112 = ($111|0)==(0);
 if ($112) {
  return;
 }
 $113 = ((($$idx$val)) + 4|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = ((($114)) + -8|0);
 $$033$i98 = $115;$$036$i97 = $111;
 while(1) {
  $116 = (($$036$i97) + 1)|0;
  $117 = $116 >>> 1;
  $118 = (($$033$i98) + ($117<<3)|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = ($119|0)==($108|0);
  if ($120) {
   break;
  }
  $121 = ($119>>>0)<($108>>>0);
  $122 = (($$036$i97) - ($117))|0;
  $123 = (($117) + -1)|0;
  $$137$i99 = $121 ? $122 : $123;
  $$134$i100 = $121 ? $118 : $$033$i98;
  $124 = ($$137$i99|0)==(0);
  if ($124) {
   label = 44;
   break;
  } else {
   $$033$i98 = $$134$i100;$$036$i97 = $$137$i99;
  }
 }
 if ((label|0) == 44) {
  return;
 }
 $125 = (((($$033$i98) + ($117<<3)|0)) + 4|0);
 $126 = HEAP32[$125>>2]|0;
 $127 = ($126|0)==(0|0);
 if ($127) {
  return;
 }
 $128 = HEAP32[$126>>2]|0;
 $129 = ($128|0)==(0);
 if ($129) {
  return;
 }
 $$1112 = 1;
 while(1) {
  $130 = (($126) + ($$1112<<2)|0);
  $131 = HEAP32[$130>>2]|0;
  $132 = ($131>>>0)>(1020);
  if ($132) {
   $133 = $131 & -4;
   $134 = $133;
   $$0$i = $134;
  } else {
   $135 = $131 >>> 2;
   $136 = (141120 + ($135<<2)|0);
   $137 = HEAP32[$136>>2]|0;
   $$0$i = $137;
  }
  _type_iface_add_prerequisite_W($$0$i,$1);
  $138 = (($$1112) + 1)|0;
  $139 = ($138>>>0)>($128>>>0);
  if ($139) {
   break;
  } else {
   $$1112 = $138;
  }
 }
 return;
}
function _g_type_create_instance($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i48 = 0, $$0$i$i51 = 0, $$0$i47 = 0, $$0$i53 = 0, $$0$i55 = 0, $$033$i$i = 0, $$036$i$i = 0, $$060 = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lobit = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i$i = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if (!($7)) {
  $8 = ((($$0$i)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 262144;
  $11 = ($10|0)==(0);
  if (!($11)) {
   $22 = $9 & 524288;
   $23 = ($22|0)==(0);
   L8: do {
    if ($23) {
     if ($1) {
      $24 = $0 & -4;
      $25 = $24;
      $$0$i$i48 = $25;
     } else {
      $26 = $0 >>> 2;
      $27 = (141120 + ($26<<2)|0);
      $28 = HEAP32[$27>>2]|0;
      $$0$i$i48 = $28;
     }
     $29 = ($$0$i$i48|0)==(0|0);
     if (!($29)) {
      $30 = HEAP32[35945]|0;
      $$idx$i = ((($$0$i$i48)) + 28|0);
      $$idx$val$i = HEAP32[$$idx$i>>2]|0;
      $31 = ($30|0)!=(0);
      $32 = ($$idx$val$i|0)!=(0|0);
      $or$cond$i$i = $31 & $32;
      if ($or$cond$i$i) {
       $33 = HEAP32[$$idx$val$i>>2]|0;
       $34 = ($33|0)==(0);
       if (!($34)) {
        $35 = ((($$idx$val$i)) + 4|0);
        $36 = HEAP32[$35>>2]|0;
        $37 = ((($36)) + -8|0);
        $$033$i$i = $37;$$036$i$i = $33;
        while(1) {
         $38 = (($$036$i$i) + 1)|0;
         $39 = $38 >>> 1;
         $40 = (($$033$i$i) + ($39<<3)|0);
         $41 = HEAP32[$40>>2]|0;
         $42 = ($41|0)==($30|0);
         if ($42) {
          break;
         }
         $43 = ($41>>>0)<($30>>>0);
         $44 = (($$036$i$i) - ($39))|0;
         $45 = (($39) + -1)|0;
         $$137$i$i = $43 ? $44 : $45;
         $$134$i$i = $43 ? $40 : $$033$i$i;
         $46 = ($$137$i$i|0)==(0);
         if ($46) {
          break L8;
         } else {
          $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
         }
        }
        $47 = (((($$033$i$i) + ($39<<3)|0)) + 4|0);
        $48 = HEAP32[$47>>2]|0;
        $$lobit = $48 & 16;
        $49 = ($$lobit|0)==(0);
        if (!($49)) {
         $50 = ($0|0)==(0);
         if ($50) {
          $$0$i53 = 124803;
         } else {
          if ($1) {
           $51 = $0 & -4;
           $52 = $51;
           $$0$i$i51 = $52;
          } else {
           $53 = $0 >>> 2;
           $54 = (141120 + ($53<<2)|0);
           $55 = HEAP32[$54>>2]|0;
           $$0$i$i51 = $55;
          }
          $56 = ($$0$i$i51|0)==(0|0);
          if ($56) {
           $$0$i53 = 124793;
          } else {
           $57 = ((($$0$i$i51)) + 24|0);
           $58 = HEAP32[$57>>2]|0;
           $59 = (_g_quark_to_string($58)|0);
           $$0$i53 = $59;
          }
         }
         HEAP32[$vararg_buffer1>>2] = $$0$i53;
         _g_log(0,4,125403,$vararg_buffer1);
         while(1) {
         }
        }
       }
      }
     }
    }
   } while(0);
   $60 = (_g_type_class_ref($0)|0);
   $61 = ((($$0$i)) + 20|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = ((($62)) + 38|0);
   $64 = HEAP16[$63>>1]|0;
   $65 = $64&65535;
   $66 = HEAP32[$61>>2]|0;
   $67 = ((($66)) + 36|0);
   $68 = HEAP16[$67>>1]|0;
   $69 = $68&65535;
   $70 = (($69) + ($65))|0;
   $71 = (_g_slice_alloc0($70)|0);
   $72 = (($71) + ($65)|0);
   $73 = HEAP32[$8>>2]|0;
   $74 = $73 & 255;
   $75 = ($74|0)==(0);
   if (!($75)) {
    $$060 = $74;
    while(1) {
     $76 = (((($$0$i)) + 40|0) + ($$060<<2)|0);
     $77 = HEAP32[$76>>2]|0;
     $78 = ($77>>>0)>(1020);
     if ($78) {
      $79 = $77 & -4;
      $80 = $79;
      $$0$i55 = $80;
     } else {
      $81 = $77 >>> 2;
      $82 = (141120 + ($81<<2)|0);
      $83 = HEAP32[$82>>2]|0;
      $$0$i55 = $83;
     }
     $84 = ((($$0$i55)) + 20|0);
     $85 = HEAP32[$84>>2]|0;
     $86 = ((($85)) + 44|0);
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87|0)==(0|0);
     if (!($88)) {
      $89 = HEAP32[$84>>2]|0;
      $90 = ((($89)) + 32|0);
      $91 = HEAP32[$90>>2]|0;
      HEAP32[$72>>2] = $91;
      $92 = HEAP32[$84>>2]|0;
      $93 = ((($92)) + 44|0);
      $94 = HEAP32[$93>>2]|0;
      ftCall_vii($94|0,$72,$60);
     }
     $95 = (($$060) + -1)|0;
     $96 = ($95|0)==(0);
     if ($96) {
      break;
     } else {
      $$060 = $95;
     }
    }
   }
   HEAP32[$72>>2] = $60;
   $97 = HEAP32[$61>>2]|0;
   $98 = ((($97)) + 44|0);
   $99 = HEAP32[$98>>2]|0;
   $100 = ($99|0)==(0|0);
   if ($100) {
    STACKTOP = sp;return ($72|0);
   }
   $101 = HEAP32[$61>>2]|0;
   $102 = ((($101)) + 44|0);
   $103 = HEAP32[$102>>2]|0;
   ftCall_vii($103|0,$72,$60);
   STACKTOP = sp;return ($72|0);
  }
 }
 $12 = ($0|0)==(0);
 if ($12) {
  $$0$i47 = 124803;
 } else {
  if ($1) {
   $13 = $0 & -4;
   $14 = $13;
   $$0$i$i = $14;
  } else {
   $15 = $0 >>> 2;
   $16 = (141120 + ($15<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   $$0$i$i = $17;
  }
  $18 = ($$0$i$i|0)==(0|0);
  if ($18) {
   $$0$i47 = 124793;
  } else {
   $19 = ((($$0$i$i)) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (_g_quark_to_string($20)|0);
   $$0$i47 = $21;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i47;
 _g_log(0,4,125334,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_type_class_ref($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i38 = 0, $$0$i144$i = 0, $$0$i146$i = 0, $$0$i148$i = 0, $$0$i150$i = 0, $$0$i150$us$i = 0, $$0$i37 = 0, $$0131192$i = 0, $$0134176$i = 0, $$0135$lcssa$i = 0, $$0135$lcssa$us$i = 0, $$0135168$i = 0, $$0135168$us$i = 0, $$0137191$i = 0, $$0138180$i = 0, $$0138180$us$i = 0, $$0187$i = 0;
 var $$034 = 0, $$1$i = 0, $$1136$lcssa$i = 0, $$1136158$i = 0, $$1139$lcssa$i = 0, $$1139$lcssa$us$i = 0, $$1139167$i = 0, $$1139167$us$i = 0, $$2165$i = 0, $$3$lcssa$i = 0, $$3157$i = 0, $$sink = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0;
 var $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0;
 var $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0;
 var $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0;
 var $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0;
 var $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0;
 var $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0;
 var $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $vararg_buffer = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if (!($7)) {
  $8 = ((($$0$i)) + 12|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $9 & 131072;
  $11 = ($10|0)==(0);
  if (!($11)) {
   $22 = HEAP32[$$0$i>>2]|0;
   $23 = ($22|0)==(0);
   L8: do {
    if ($23) {
     $$034 = 0;
    } else {
     $28 = $22;
     while(1) {
      $26 = HEAP32[$$0$i>>2]|0;
      $27 = ($26|0)==($28|0);
      if ($27) {
       break;
      }
      $24 = HEAP32[$$0$i>>2]|0;
      $25 = ($24|0)==(0);
      if ($25) {
       $$034 = 0;
       break L8;
      } else {
       $28 = $24;
      }
     }
     $29 = (($28) + 1)|0;
     HEAP32[$$0$i>>2] = $29;
     $30 = ((($$0$i)) + 20|0);
     $31 = HEAP32[$30>>2]|0;
     $32 = ((($31)) + 8|0);
     $33 = HEAP32[$32>>2]|0;
     $34 = ($33|0)==(5);
     if ($34) {
      $35 = HEAP32[$30>>2]|0;
      $36 = ((($35)) + 32|0);
      $37 = HEAP32[$36>>2]|0;
      $$0 = $37;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$034 = 1;
     }
    }
   } while(0);
   $38 = ((($$0$i)) + 44|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($39|0)==(0);
   if ($40) {
    $86 = 0;
   } else {
    $41 = (_g_type_class_ref($39)|0);
    $86 = $41;
   }
   $42 = ($$034|0)==(0);
   if ($42) {
    _type_data_ref_Wm($$0$i);
   }
   $43 = ((($$0$i)) + 20|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ((($44)) + 32|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)==(0|0);
   if ($47) {
    $48 = HEAP32[$8>>2]|0;
    $49 = $48 & 131072;
    $50 = ($49|0)==(0);
    if ($50) {
     _g_assertion_message_expr(0,125112,2234,125526,125545);
     // unreachable;
    }
    $51 = HEAP32[$43>>2]|0;
    $52 = ($51|0)==(0|0);
    if ($52) {
     _g_assertion_message_expr(0,125112,2234,125526,125545);
     // unreachable;
    }
    $53 = HEAP32[$43>>2]|0;
    $54 = ((($53)) + 4|0);
    $55 = HEAP16[$54>>1]|0;
    $56 = ($55<<16>>16)==(0);
    if ($56) {
     _g_assertion_message_expr(0,125112,2234,125526,125545);
     // unreachable;
    }
    $57 = HEAP32[$43>>2]|0;
    $58 = ((($57)) + 32|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = ($59|0)==(0|0);
    if (!($60)) {
     _g_assertion_message_expr(0,125112,2234,125526,125545);
     // unreachable;
    }
    $61 = HEAP32[$43>>2]|0;
    $62 = ((($61)) + 8|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ($63|0)==(0);
    if (!($64)) {
     _g_assertion_message_expr(0,125112,2234,125526,125545);
     // unreachable;
    }
    $65 = HEAP32[$43>>2]|0;
    $66 = ((($65)) + 6|0);
    $67 = HEAP16[$66>>1]|0;
    $68 = ($67<<16>>16)==(0);
    $69 = HEAP32[$43>>2]|0;
    $70 = ((($69)) + 4|0);
    $71 = HEAP16[$70>>1]|0;
    $72 = $71&65535;
    if ($68) {
     $$sink = $72;
    } else {
     $73 = (($72) + 7)|0;
     $74 = $73 & 131064;
     $75 = HEAP32[$43>>2]|0;
     $76 = ((($75)) + 6|0);
     $77 = HEAP16[$76>>1]|0;
     $78 = $77&65535;
     $79 = (($74) + ($78))|0;
     $$sink = $79;
    }
    $80 = (_g_malloc0($$sink)|0);
    $81 = HEAP32[$43>>2]|0;
    $82 = ((($81)) + 32|0);
    HEAP32[$82>>2] = $80;
    $83 = HEAP32[$43>>2]|0;
    $84 = ((($83)) + 8|0);
    HEAP32[$84>>2] = 1;
    $85 = ($86|0)==(0|0);
    if (!($85)) {
     $87 = HEAP32[$86>>2]|0;
     $88 = ($87>>>0)>(1020);
     if ($88) {
      $89 = $87 & -4;
      $90 = $89;
      $$0$i$i38 = $90;
     } else {
      $91 = $87 >>> 2;
      $92 = (141120 + ($91<<2)|0);
      $93 = HEAP32[$92>>2]|0;
      $$0$i$i38 = $93;
     }
     $94 = ((($$0$i$i38)) + 20|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ((($95)) + 4|0);
     $97 = HEAP16[$96>>1]|0;
     $98 = $97&65535;
     _memcpy(($80|0),($86|0),($98|0))|0;
     $99 = HEAP32[$43>>2]|0;
     $100 = ((($99)) + 4|0);
     $101 = HEAP16[$100>>1]|0;
     $102 = $101&65535;
     $103 = (($102) + 7)|0;
     $104 = $103 & 131064;
     $105 = (($80) + ($104)|0);
     $106 = HEAP32[$94>>2]|0;
     $107 = ((($106)) + 4|0);
     $108 = HEAP16[$107>>1]|0;
     $109 = $108&65535;
     $110 = (($109) + 7)|0;
     $111 = $110 & 131064;
     $112 = (($86) + ($111)|0);
     $113 = HEAP32[$94>>2]|0;
     $114 = ((($113)) + 6|0);
     $115 = HEAP16[$114>>1]|0;
     $116 = $115&65535;
     _memcpy(($105|0),($112|0),($116|0))|0;
     $117 = HEAP32[$8>>2]|0;
     $118 = $117 & 262144;
     $119 = ($118|0)==(0);
     if (!($119)) {
      $120 = HEAP32[$94>>2]|0;
      $121 = ((($120)) + 38|0);
      $122 = HEAP16[$121>>1]|0;
      $123 = HEAP32[$43>>2]|0;
      $124 = ((($123)) + 38|0);
      HEAP16[$124>>1] = $122;
     }
    }
    $125 = ((($$0$i)) + 40|0);
    $126 = HEAP32[$125>>2]|0;
    HEAP32[$80>>2] = $126;
    $$0131192$i = 0;$$0137191$i = $$0$i;
    while(1) {
     $127 = ((($$0137191$i)) + 20|0);
     $128 = HEAP32[$127>>2]|0;
     $129 = ((($128)) + 12|0);
     $130 = HEAP32[$129>>2]|0;
     $131 = ($130|0)==(0|0);
     if ($131) {
      $$1$i = $$0131192$i;
     } else {
      $132 = HEAP32[$127>>2]|0;
      $133 = ((($132)) + 12|0);
      $134 = HEAP32[$133>>2]|0;
      $135 = (_g_slist_prepend($$0131192$i,$134)|0);
      $$1$i = $135;
     }
     $136 = ((($$0137191$i)) + 44|0);
     $137 = HEAP32[$136>>2]|0;
     $138 = ($137>>>0)>(1020);
     if ($138) {
      $139 = $137 & -4;
      $140 = $139;
      $$0$i144$i = $140;
     } else {
      $141 = $137 >>> 2;
      $142 = (141120 + ($141<<2)|0);
      $143 = HEAP32[$142>>2]|0;
      $$0$i144$i = $143;
     }
     $144 = ($$0$i144$i|0)==(0|0);
     if ($144) {
      break;
     } else {
      $$0131192$i = $$1$i;$$0137191$i = $$0$i144$i;
     }
    }
    $145 = ($$1$i|0)==(0|0);
    if (!($145)) {
     $$0187$i = $$1$i;
     while(1) {
      $146 = HEAP32[$$0187$i>>2]|0;
      ftCall_vi($146|0,$80);
      $147 = ((($$0187$i)) + 4|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==(0|0);
      if ($149) {
       break;
      } else {
       $$0187$i = $148;
      }
     }
    }
    _g_slist_free($$1$i);
    $150 = HEAP32[$43>>2]|0;
    $151 = ((($150)) + 8|0);
    HEAP32[$151>>2] = 2;
    $152 = HEAP32[$38>>2]|0;
    $153 = ($152>>>0)>(1020);
    if ($153) {
     $154 = $152 & -4;
     $155 = $154;
     $$0$i148$i = $155;
    } else {
     $156 = $152 >>> 2;
     $157 = (141120 + ($156<<2)|0);
     $158 = HEAP32[$157>>2]|0;
     $$0$i148$i = $158;
    }
    $159 = ((($$0$i)) + 32|0);
    $160 = HEAP32[$159>>2]|0;
    $161 = ($160|0)==(0|0);
    L70: do {
     if (!($161)) {
      $162 = ((($$0$i148$i)) + 32|0);
      $163 = ($$0$i148$i|0)==(0|0);
      if ($163) {
       $$0138180$us$i = 0;$165 = $160;
       while(1) {
        $164 = ((($165)) + -4|0);
        $166 = HEAP32[$164>>2]|0;
        $167 = (($166) + -4)|0;
        $168 = (($167>>>0) / 12)&-1;
        $169 = ($$0138180$us$i>>>0)<($168>>>0);
        if (!($169)) {
         break L70;
        }
        $170 = ((($165)) + 4|0);
        $171 = (($170) + (($$0138180$us$i*12)|0)|0);
        $$0135168$us$i = $171;$$1139167$us$i = $$0138180$us$i;
        while(1) {
         $172 = ((($$0135168$us$i)) + 8|0);
         $173 = HEAP32[$172>>2]|0;
         $174 = ($173|0)==(4);
         if (!($174)) {
          $$0135$lcssa$us$i = $$0135168$us$i;$$1139$lcssa$us$i = $$1139167$us$i;
          break;
         }
         $189 = ((($$0135168$us$i)) + 12|0);
         $190 = (($$1139167$us$i) + 1)|0;
         $191 = ($190>>>0)<($168>>>0);
         if ($191) {
          $$0135168$us$i = $189;$$1139167$us$i = $190;
         } else {
          $$0135$lcssa$us$i = $189;$$1139$lcssa$us$i = $190;
          break;
         }
        }
        $175 = ($$1139$lcssa$us$i|0)==($168|0);
        if ($175) {
         break L70;
        }
        $176 = HEAP32[$$0135$lcssa$us$i>>2]|0;
        $177 = ($176>>>0)>(1020);
        if ($177) {
         $181 = $176 & -4;
         $182 = $181;
         $$0$i150$us$i = $182;
        } else {
         $178 = $176 >>> 2;
         $179 = (141120 + ($178<<2)|0);
         $180 = HEAP32[$179>>2]|0;
         $$0$i150$us$i = $180;
        }
        $183 = (_type_iface_vtable_base_init_Wm($$0$i150$us$i,$$0$i)|0);
        $184 = ($183|0)==(0);
        if ($184) {
         break;
        }
        $186 = (($$1139$lcssa$us$i) + 1)|0;
        $187 = HEAP32[$159>>2]|0;
        $188 = ($187|0)==(0|0);
        if ($188) {
         break L70;
        } else {
         $$0138180$us$i = $186;$165 = $187;
        }
       }
       $185 = HEAP32[$162>>2]|0;
       _g_assertion_message_expr(0,125112,2315,125526,125685);
       // unreachable;
      }
      $$0138180$i = 0;$193 = $160;
      while(1) {
       $192 = ((($193)) + -4|0);
       $194 = HEAP32[$192>>2]|0;
       $195 = (($194) + -4)|0;
       $196 = (($195>>>0) / 12)&-1;
       $197 = ($$0138180$i>>>0)<($196>>>0);
       if (!($197)) {
        break L70;
       }
       $198 = ((($193)) + 4|0);
       $199 = (($198) + (($$0138180$i*12)|0)|0);
       $$0135168$i = $199;$$1139167$i = $$0138180$i;
       while(1) {
        $200 = ((($$0135168$i)) + 8|0);
        $201 = HEAP32[$200>>2]|0;
        $202 = ($201|0)==(4);
        if (!($202)) {
         $$0135$lcssa$i = $$0135168$i;$$1139$lcssa$i = $$1139167$i;
         break;
        }
        $203 = ((($$0135168$i)) + 12|0);
        $204 = (($$1139167$i) + 1)|0;
        $205 = ($204>>>0)<($196>>>0);
        if ($205) {
         $$0135168$i = $203;$$1139167$i = $204;
        } else {
         $$0135$lcssa$i = $203;$$1139$lcssa$i = $204;
         break;
        }
       }
       $206 = ($$1139$lcssa$i|0)==($196|0);
       if ($206) {
        break L70;
       }
       $207 = HEAP32[$$0135$lcssa$i>>2]|0;
       $208 = ($207>>>0)>(1020);
       if ($208) {
        $209 = $207 & -4;
        $210 = $209;
        $$0$i150$i = $210;
       } else {
        $211 = $207 >>> 2;
        $212 = (141120 + ($211<<2)|0);
        $213 = HEAP32[$212>>2]|0;
        $$0$i150$i = $213;
       }
       $214 = (_type_iface_vtable_base_init_Wm($$0$i150$i,$$0$i)|0);
       $215 = ($214|0)==(0);
       if ($215) {
        $216 = HEAP32[$162>>2]|0;
        $217 = ($216|0)==(0|0);
        L103: do {
         if (!($217)) {
          $218 = ((($216)) + -4|0);
          $219 = HEAP32[$218>>2]|0;
          $220 = (($219) + -4)|0;
          $221 = ($220>>>0)>(11);
          if (!($221)) {
           break;
          }
          $222 = ((($216)) + 4|0);
          $223 = HEAP32[$$0135$lcssa$i>>2]|0;
          $224 = (($220>>>0) / 12)&-1;
          $$0134176$i = 0;
          while(1) {
           $225 = (($222) + (($$0134176$i*12)|0)|0);
           $226 = HEAP32[$225>>2]|0;
           $227 = ($226|0)==($223|0);
           if ($227) {
            break;
           }
           $232 = (($$0134176$i) + 1)|0;
           $233 = ($232>>>0)<($224>>>0);
           if ($233) {
            $$0134176$i = $232;
           } else {
            break L103;
           }
          }
          $228 = (((($222) + (($$0134176$i*12)|0)|0)) + 4|0);
          $229 = HEAP32[$228>>2]|0;
          $230 = ((($$0135$lcssa$i)) + 4|0);
          HEAP32[$230>>2] = $229;
          $231 = ((($$0135$lcssa$i)) + 8|0);
          HEAP32[$231>>2] = 5;
         }
        } while(0);
        $234 = ((($$0135$lcssa$i)) + 4|0);
        $235 = HEAP32[$234>>2]|0;
        $236 = ($235|0)==(0|0);
        if ($236) {
         break;
        }
       }
       $237 = (($$1139$lcssa$i) + 1)|0;
       $238 = HEAP32[$159>>2]|0;
       $239 = ($238|0)==(0|0);
       if ($239) {
        break L70;
       } else {
        $$0138180$i = $237;$193 = $238;
       }
      }
      _g_assertion_message_expr(0,125112,2329,125526,125699);
      // unreachable;
     }
    } while(0);
    $240 = HEAP32[$43>>2]|0;
    $241 = ((($240)) + 8|0);
    HEAP32[$241>>2] = 3;
    $242 = HEAP32[$43>>2]|0;
    $243 = ((($242)) + 20|0);
    $244 = HEAP32[$243>>2]|0;
    $245 = ($244|0)==(0|0);
    if (!($245)) {
     $246 = HEAP32[$43>>2]|0;
     $247 = ((($246)) + 20|0);
     $248 = HEAP32[$247>>2]|0;
     $249 = HEAP32[$43>>2]|0;
     $250 = ((($249)) + 28|0);
     $251 = HEAP32[$250>>2]|0;
     ftCall_vii($248|0,$80,$251);
    }
    $252 = HEAP32[$43>>2]|0;
    $253 = ((($252)) + 8|0);
    HEAP32[$253>>2] = 4;
    $254 = HEAP32[$159>>2]|0;
    $255 = ($254|0)==(0|0);
    L117: do {
     if (!($255)) {
      $$2165$i = 0;$257 = $254;
      while(1) {
       $256 = ((($257)) + 4|0);
       $258 = (($256) + (($$2165$i*12)|0)|0);
       $259 = ((($257)) + -4|0);
       $260 = HEAP32[$259>>2]|0;
       $261 = (($260) + -4)|0;
       $262 = (($261>>>0) / 12)&-1;
       $263 = ($$2165$i>>>0)<($262>>>0);
       L121: do {
        if ($263) {
         $$1136158$i = $258;$$3157$i = $$2165$i;
         while(1) {
          $264 = ((($$1136158$i)) + 8|0);
          $265 = HEAP32[$264>>2]|0;
          $266 = ($265|0)==(5);
          if (!($266)) {
           $$1136$lcssa$i = $$1136158$i;$$3$lcssa$i = $$3157$i;
           break L121;
          }
          $267 = ((($$1136158$i)) + 12|0);
          $268 = (($$3157$i) + 1)|0;
          $269 = ($268>>>0)<($262>>>0);
          if ($269) {
           $$1136158$i = $267;$$3157$i = $268;
          } else {
           $$1136$lcssa$i = $267;$$3$lcssa$i = $268;
           break;
          }
         }
        } else {
         $$1136$lcssa$i = $258;$$3$lcssa$i = $$2165$i;
        }
       } while(0);
       $270 = ($$3$lcssa$i|0)==($262|0);
       if ($270) {
        break L117;
       }
       $271 = HEAP32[$$1136$lcssa$i>>2]|0;
       $272 = ($271>>>0)>(1020);
       if ($272) {
        $273 = $271 & -4;
        $274 = $273;
        $$0$i146$i = $274;
       } else {
        $275 = $271 >>> 2;
        $276 = (141120 + ($275<<2)|0);
        $277 = HEAP32[$276>>2]|0;
        $$0$i146$i = $277;
       }
       _type_iface_vtable_iface_init_Wm($$0$i146$i,$$0$i);
       $278 = (($$3$lcssa$i) + 1)|0;
       $279 = HEAP32[$159>>2]|0;
       $280 = ($279|0)==(0|0);
       if ($280) {
        break;
       } else {
        $$2165$i = $278;$257 = $279;
       }
      }
     }
    } while(0);
    $281 = HEAP32[$43>>2]|0;
    $282 = ((($281)) + 8|0);
    HEAP32[$282>>2] = 5;
   }
   $283 = ($86|0)==(0|0);
   if (!($283)) {
    _g_type_class_unref($86);
   }
   $284 = HEAP32[$43>>2]|0;
   $285 = ((($284)) + 32|0);
   $286 = HEAP32[$285>>2]|0;
   $$0 = $286;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $12 = ($0|0)==(0);
 if ($12) {
  $$0$i37 = 124803;
 } else {
  if ($1) {
   $13 = $0 & -4;
   $14 = $13;
   $$0$i$i = $14;
  } else {
   $15 = $0 >>> 2;
   $16 = (141120 + ($15<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   $$0$i$i = $17;
  }
  $18 = ($$0$i$i|0)==(0|0);
  if ($18) {
   $$0$i37 = 124793;
  } else {
   $19 = ((($$0$i$i)) + 24|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = (_g_quark_to_string($20)|0);
   $$0$i37 = $21;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i37;
 _g_log(0,16,125469,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _type_data_ref_Wm($0) {
 $0 = $0|0;
 var $$ = 0, $$0$i = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer15 = 0, $vararg_buffer4 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr14 = 0;
 var $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 96|0;
 $2 = sp + 64|0;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $48 = HEAP32[$0>>2]|0;
  $49 = ($48|0)==(0);
  if ($49) {
   _g_assertion_message_expr(0,125112,1346,126288,126326);
   // unreachable;
  }
  _g_atomic_int_inc($0);
  STACKTOP = sp;return;
 }
 $6 = ((($0)) + 44|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7>>>0)>(1020);
 if ($8) {
  $9 = $7 & -4;
  $10 = $9;
  $$0$i = $10;
 } else {
  $11 = $7 >>> 2;
  $12 = (141120 + ($11<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0$i = $13;
 }
 $14 = ((($0)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  _g_assertion_message_expr(0,125112,1320,126288,126305);
  // unreachable;
 }
 $17 = ($$0$i|0)==(0|0);
 do {
  if ($17) {
   $25 = $15;
  } else {
   _type_data_ref_Wm($$0$i);
   $18 = HEAP32[$3>>2]|0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    $$pre = HEAP32[$14>>2]|0;
    $25 = $$pre;
    break;
   }
   $20 = HEAP32[$14>>2]|0;
   $21 = ((($0)) + 24|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = (_g_quark_to_string($22)|0);
   $24 = ($20|0)==(0|0);
   if ($24) {
    HEAP32[$vararg_buffer4>>2] = 126051;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 1088;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $23;
    _g_log(0,4,126067,$vararg_buffer4);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer>>2] = 126051;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $20;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1088;
    $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
    HEAP32[$vararg_ptr3>>2] = $23;
    _g_log(0,4,126038,$vararg_buffer);
    while(1) {
    }
   }
  }
 } while(0);
 dest=$1; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;HEAP32[$2+12>>2]=0|0;HEAP32[$2+16>>2]=0|0;HEAP32[$2+20>>2]=0|0;HEAP32[$2+24>>2]=0|0;HEAP32[$2+28>>2]=0|0;
 _g_type_plugin_use($25);
 $26 = HEAP32[$14>>2]|0;
 $27 = ((($0)) + 40|0);
 $28 = HEAP32[$27>>2]|0;
 _g_type_plugin_complete_type_info($26,$28,$1,$2);
 $29 = HEAP32[$3>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $36 = ((($0)) + 12|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = $37 & 255;
  $39 = (((($0)) + 40|0) + ($38<<2)|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($0)) + 24|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (_g_quark_to_string($42)|0);
  (_check_type_info_I($$0$i,$40,$43,$1)|0);
  $44 = HEAP32[$41>>2]|0;
  $45 = (_g_quark_to_string($44)|0);
  $46 = (_check_value_table_I($45,$2)|0);
  $47 = ($46|0)==(0);
  $$ = $47 ? 0 : $2;
  _type_data_make_W($0,$1,$$);
  STACKTOP = sp;return;
 }
 $31 = HEAP32[$14>>2]|0;
 $32 = ((($0)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = (_g_quark_to_string($33)|0);
 $35 = ($31|0)==(0|0);
 if ($35) {
  HEAP32[$vararg_buffer15>>2] = 126051;
  $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
  HEAP32[$vararg_ptr18>>2] = 1120;
  $vararg_ptr19 = ((($vararg_buffer15)) + 8|0);
  HEAP32[$vararg_ptr19>>2] = $34;
  _g_log(0,4,126067,$vararg_buffer15);
  while(1) {
  }
 } else {
  HEAP32[$vararg_buffer9>>2] = 126051;
  $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
  HEAP32[$vararg_ptr12>>2] = $31;
  $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
  HEAP32[$vararg_ptr13>>2] = 1120;
  $vararg_ptr14 = ((($vararg_buffer9)) + 12|0);
  HEAP32[$vararg_ptr14>>2] = $34;
  _g_log(0,4,126038,$vararg_buffer9);
  while(1) {
  }
 }
}
function _type_iface_vtable_base_init_Wm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i50 = 0, $$0$i49 = 0, $$014$i$i = 0, $$033$i$i$i = 0, $$036$i$i$i = 0, $$040$i$i = 0, $$040$i$i52 = 0, $$134$i$i$i = 0, $$137$i$i$i = 0, $$idx$i$i = 0, $$idx$val$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i$i$i = 0, $spec$select$i$i = 0, $spec$select$i$i51 = 0, $vararg_buffer = 0, $vararg_buffer15 = 0, $vararg_buffer20 = 0, $vararg_buffer4 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0;
 var $vararg_ptr14 = 0, $vararg_ptr18 = 0, $vararg_ptr19 = 0, $vararg_ptr2 = 0, $vararg_ptr23 = 0, $vararg_ptr3 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 96|0;
 $vararg_buffer20 = sp + 64|0;
 $vararg_buffer15 = sp + 48|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 72|0;
 $3 = ((($1)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 255;
 $8 = (((($0)) + 40|0) + ($7<<2)|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(8);
 if (!($10)) {
  _g_assertion_message_expr(0,125112,1806,125819,125844);
  // unreachable;
 }
 $11 = HEAP32[35943]|0;
 $$idx$i$i = ((($0)) + 28|0);
 $$idx$val$i$i = HEAP32[$$idx$i$i>>2]|0;
 $12 = ($11|0)!=(0);
 $13 = ($$idx$val$i$i|0)!=(0|0);
 $or$cond$i$i$i = $12 & $13;
 if (!($or$cond$i$i$i)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $14 = HEAP32[$$idx$val$i$i>>2]|0;
 $15 = ($14|0)==(0);
 if ($15) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $16 = ((($$idx$val$i$i)) + 4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($17)) + -8|0);
 $$033$i$i$i = $18;$$036$i$i$i = $14;
 while(1) {
  $19 = (($$036$i$i$i) + 1)|0;
  $20 = $19 >>> 1;
  $21 = (($$033$i$i$i) + ($20<<3)|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ($22|0)==($11|0);
  if ($23) {
   break;
  }
  $24 = ($22>>>0)<($11>>>0);
  $25 = (($$036$i$i$i) - ($20))|0;
  $26 = (($20) + -1)|0;
  $$137$i$i$i = $24 ? $25 : $26;
  $$134$i$i$i = $24 ? $21 : $$033$i$i$i;
  $27 = ($$137$i$i$i|0)==(0);
  if ($27) {
   $$0 = 0;
   label = 70;
   break;
  } else {
   $$033$i$i$i = $$134$i$i$i;$$036$i$i$i = $$137$i$i$i;
  }
 }
 if ((label|0) == 70) {
  STACKTOP = sp;return ($$0|0);
 }
 $28 = (((($$033$i$i$i) + ($20<<3)|0)) + 4|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $$014$i$i = $29;
 while(1) {
  $31 = HEAP32[$$014$i$i>>2]|0;
  $32 = ($31|0)==($4|0);
  if ($32) {
   break;
  }
  $33 = ((($$014$i$i)) + 12|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ($34|0)==(0|0);
  if ($35) {
   $$0 = 0;
   label = 70;
   break;
  } else {
   $$014$i$i = $34;
  }
 }
 if ((label|0) == 70) {
  STACKTOP = sp;return ($$0|0);
 }
 $36 = ((($$014$i$i)) + 4|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0|0);
 if ($38) {
  $39 = ((($$014$i$i)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ($40|0)==(0|0);
  if ($41) {
   _g_assertion_message_expr(0,125112,1825,125979,126014);
   // unreachable;
  }
  _type_data_ref_Wm($0);
  $42 = HEAP32[$36>>2]|0;
  $43 = ($42|0)==(0|0);
  if (!($43)) {
   $44 = ((($0)) + 4|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = ((($0)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (_g_quark_to_string($47)|0);
   $49 = ($45|0)==(0|0);
   if ($49) {
    HEAP32[$vararg_buffer4>>2] = 126051;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 1024;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $48;
    _g_log(0,4,126067,$vararg_buffer4);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer>>2] = 126051;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $45;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1024;
    $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
    HEAP32[$vararg_ptr3>>2] = $48;
    _g_log(0,4,126038,$vararg_buffer);
    while(1) {
    }
   }
  }
  ;HEAP32[$2>>2]=0|0;HEAP32[$2+4>>2]=0|0;HEAP32[$2+8>>2]=0|0;
  $50 = HEAP32[$39>>2]|0;
  _g_type_plugin_use($50);
  $51 = HEAP32[$39>>2]|0;
  $52 = ((($0)) + 40|0);
  $53 = HEAP32[$52>>2]|0;
  _g_type_plugin_complete_interface_info($51,$4,$53,$2);
  $54 = HEAP32[$36>>2]|0;
  $55 = ($54|0)==(0|0);
  if (!($55)) {
   $56 = HEAP32[$39>>2]|0;
   $57 = ((($0)) + 24|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = (_g_quark_to_string($58)|0);
   $60 = ($56|0)==(0|0);
   if ($60) {
    HEAP32[$vararg_buffer15>>2] = 126051;
    $vararg_ptr18 = ((($vararg_buffer15)) + 4|0);
    HEAP32[$vararg_ptr18>>2] = 1056;
    $vararg_ptr19 = ((($vararg_buffer15)) + 8|0);
    HEAP32[$vararg_ptr19>>2] = $59;
    _g_log(0,4,126067,$vararg_buffer15);
    while(1) {
    }
   } else {
    HEAP32[$vararg_buffer9>>2] = 126051;
    $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
    HEAP32[$vararg_ptr12>>2] = $56;
    $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
    HEAP32[$vararg_ptr13>>2] = 1056;
    $vararg_ptr14 = ((($vararg_buffer9)) + 12|0);
    HEAP32[$vararg_ptr14>>2] = $59;
    _g_log(0,4,126038,$vararg_buffer9);
    while(1) {
    }
   }
  }
  $61 = ((($2)) + 4|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($62|0)==(0|0);
  if ($63) {
   $64 = ((($2)) + 8|0);
   $65 = HEAP32[$64>>2]|0;
   $66 = ($65|0)==(0|0);
   if (!($66)) {
    label = 29;
   }
  } else {
   label = 29;
  }
  if ((label|0) == 29) {
   $67 = HEAP32[$2>>2]|0;
   $68 = ($67|0)==(0|0);
   if ($68) {
    $69 = ((($0)) + 24|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = (_g_quark_to_string($70)|0);
    $72 = ($4|0)==(0);
    if ($72) {
     $$0$i$i$i = 124803;
    } else {
     $73 = ($4>>>0)>(1020);
     if ($73) {
      $74 = $4 & -4;
      $75 = $74;
      $$0$i$i$i$i = $75;
     } else {
      $76 = $4 >>> 2;
      $77 = (141120 + ($76<<2)|0);
      $78 = HEAP32[$77>>2]|0;
      $$0$i$i$i$i = $78;
     }
     $79 = ($$0$i$i$i$i|0)==(0|0);
     if ($79) {
      $$0$i$i$i = 124793;
     } else {
      $80 = ((($$0$i$i$i$i)) + 24|0);
      $81 = HEAP32[$80>>2]|0;
      $82 = (_g_quark_to_string($81)|0);
      $$0$i$i$i = $82;
     }
    }
    HEAP32[$vararg_buffer20>>2] = $71;
    $vararg_ptr23 = ((($vararg_buffer20)) + 4|0);
    HEAP32[$vararg_ptr23>>2] = $$0$i$i$i;
    _g_log(0,16,126078,$vararg_buffer20);
   }
  }
  $83 = (_g_memdup($2,12)|0);
  HEAP32[$36>>2] = $83;
 }
 _type_iface_ensure_dflt_vtable_Wm($0);
 $84 = HEAP32[$5>>2]|0;
 $85 = $84 & 255;
 $86 = (((($0)) + 40|0) + ($85<<2)|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = ($87|0)==(8);
 if ($88) {
  $89 = ((($1)) + 32|0);
  $90 = HEAP32[$89>>2]|0;
  $91 = ($90|0)==(0|0);
  if (!($91)) {
   $92 = ((($0)) + 32|0);
   $93 = (_g_atomic_pointer_get($92)|0);
   $94 = ((($90)) + -4|0);
   $95 = ((($0)) + 40|0);
   $$0$i$i = $92;
   while(1) {
    $96 = HEAP32[$90>>2]|0;
    $97 = ($$0$i$i|0)==(0|0);
    if ($97) {
     $$040$i$i = 0;
    } else {
     $98 = ((($$0$i$i)) + -4|0);
     $99 = HEAP32[$98>>2]|0;
     $100 = ($96>>>0)<($99>>>0);
     if ($100) {
      $101 = (($$0$i$i) + ($96)|0);
      $102 = HEAP8[$101>>0]|0;
      $103 = ($102<<24>>24)==(0);
      if ($103) {
       $$040$i$i = 0;
      } else {
       $104 = $102&255;
       $105 = (($104) + -1)|0;
       $106 = HEAP32[$94>>2]|0;
       $107 = (($106) + -4)|0;
       $108 = (($107>>>0) / 12)&-1;
       $109 = ($105>>>0)<($108>>>0);
       $110 = (((($90)) + 4|0) + (($105*12)|0)|0);
       if ($109) {
        $111 = HEAP32[$110>>2]|0;
        $112 = HEAP32[$95>>2]|0;
        $113 = ($111|0)==($112|0);
        $spec$select$i$i = $113 ? $110 : 0;
        $$040$i$i = $spec$select$i$i;
       } else {
        $$040$i$i = 0;
       }
      }
     } else {
      $$040$i$i = 0;
     }
    }
    $114 = (_g_atomic_pointer_get($92)|0);
    $115 = ($$0$i$i|0)==($114|0);
    if ($115) {
     break;
    } else {
     $$0$i$i = $92;
    }
   }
   $118 = ((($0)) + 20|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = ($119|0)!=(0|0);
   $121 = ($$040$i$i|0)!=(0|0);
   $or$cond = $121 & $120;
   if (!($or$cond)) {
    _g_assertion_message_expr(0,125112,2113,126138,126169);
    // unreachable;
   }
   $122 = ((($$040$i$i)) + 4|0);
   $123 = HEAP32[$122>>2]|0;
   $124 = ($123|0)==(0|0);
   if (!($124)) {
    _g_assertion_message_expr(0,125112,2113,126138,126169);
    // unreachable;
   }
   $125 = HEAP32[$36>>2]|0;
   $126 = ($125|0)==(0|0);
   if ($126) {
    _g_assertion_message_expr(0,125112,2113,126138,126169);
    // unreachable;
   }
   $127 = ((($$040$i$i)) + 8|0);
   HEAP32[$127>>2] = 4;
   $128 = ((($1)) + 44|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = ($129>>>0)>(1020);
   if ($130) {
    $131 = $129 & -4;
    $132 = $131;
    $$0$i49 = $132;
   } else {
    $133 = $129 >>> 2;
    $134 = (141120 + ($133<<2)|0);
    $135 = HEAP32[$134>>2]|0;
    $$0$i49 = $135;
   }
   $136 = ($$0$i49|0)==(0|0);
   if ($136) {
    label = 67;
   } else {
    $137 = HEAP32[$5>>2]|0;
    $138 = $137 & 255;
    $139 = (((($0)) + 40|0) + ($138<<2)|0);
    $140 = HEAP32[$139>>2]|0;
    $141 = ($140|0)==(8);
    if ($141) {
     $142 = ((($$0$i49)) + 32|0);
     $143 = HEAP32[$142>>2]|0;
     $144 = ($143|0)==(0|0);
     if ($144) {
      label = 67;
     } else {
      $145 = (_g_atomic_pointer_get($92)|0);
      $146 = ((($143)) + -4|0);
      $$0$i$i50 = $92;
      while(1) {
       $147 = HEAP32[$143>>2]|0;
       $148 = ($$0$i$i50|0)==(0|0);
       do {
        if ($148) {
         $$040$i$i52 = 0;
        } else {
         $149 = ((($$0$i$i50)) + -4|0);
         $150 = HEAP32[$149>>2]|0;
         $151 = ($147>>>0)<($150>>>0);
         if ($151) {
          $152 = (($$0$i$i50) + ($147)|0);
          $153 = HEAP8[$152>>0]|0;
          $154 = ($153<<24>>24)==(0);
          if ($154) {
           $$040$i$i52 = 0;
           break;
          }
          $155 = $153&255;
          $156 = (($155) + -1)|0;
          $157 = HEAP32[$146>>2]|0;
          $158 = (($157) + -4)|0;
          $159 = (($158>>>0) / 12)&-1;
          $160 = ($156>>>0)<($159>>>0);
          $161 = (((($143)) + 4|0) + (($156*12)|0)|0);
          if (!($160)) {
           $$040$i$i52 = 0;
           break;
          }
          $162 = HEAP32[$161>>2]|0;
          $163 = HEAP32[$95>>2]|0;
          $164 = ($162|0)==($163|0);
          $spec$select$i$i51 = $164 ? $161 : 0;
          $$040$i$i52 = $spec$select$i$i51;
         } else {
          $$040$i$i52 = 0;
         }
        }
       } while(0);
       $165 = (_g_atomic_pointer_get($92)|0);
       $166 = ($$0$i$i50|0)==($165|0);
       if ($166) {
        break;
       } else {
        $$0$i$i50 = $92;
       }
      }
      $167 = ($$040$i$i52|0)==(0|0);
      if ($167) {
       label = 67;
      } else {
       $168 = ((($$040$i$i52)) + 4|0);
       $169 = HEAP32[$168>>2]|0;
       $170 = HEAP32[$118>>2]|0;
       $171 = ((($170)) + 4|0);
       $172 = HEAP16[$171>>1]|0;
       $173 = $172&65535;
       $174 = (_g_memdup($169,$173)|0);
       $175 = ($174|0)==(0|0);
       if ($175) {
        label = 67;
       } else {
        $184 = $174;
       }
      }
     }
    } else {
     label = 67;
    }
   }
   if ((label|0) == 67) {
    $176 = HEAP32[$118>>2]|0;
    $177 = ((($176)) + 28|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = HEAP32[$118>>2]|0;
    $180 = ((($179)) + 4|0);
    $181 = HEAP16[$180>>1]|0;
    $182 = $181&65535;
    $183 = (_g_memdup($178,$182)|0);
    $184 = $183;
   }
   HEAP32[$122>>2] = $184;
   $185 = HEAP32[$95>>2]|0;
   HEAP32[$184>>2] = $185;
   $186 = HEAP32[$3>>2]|0;
   $187 = ((($184)) + 4|0);
   HEAP32[$187>>2] = $186;
   $188 = HEAP32[$118>>2]|0;
   $189 = ((($188)) + 8|0);
   $190 = HEAP32[$189>>2]|0;
   $191 = ($190|0)==(0|0);
   if ($191) {
    $$0 = 1;
    STACKTOP = sp;return ($$0|0);
   }
   $192 = HEAP32[$118>>2]|0;
   $193 = ((($192)) + 8|0);
   $194 = HEAP32[$193>>2]|0;
   ftCall_vi($194|0,$184);
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $116 = ((($0)) + 20|0);
 $117 = HEAP32[$116>>2]|0;
 _g_assertion_message_expr(0,125112,2113,126138,126169);
 // unreachable;
 return (0)|0;
}
function _type_iface_vtable_iface_init_Wm($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i$ph = 0, $$0$lcssa$i = 0, $$014$i = 0, $$033$i$i = 0, $$036$i$i = 0, $$040$i$i = 0, $$049 = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$pr = 0, $$pre = 0, $$pre$phi55$phZ2D = 0, $$pre53 = 0, $$pre54 = 0, $10 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $or$cond = 0, $or$cond$i$i = 0, $or$cond3 = 0, $spec$select$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 255;
 $5 = (((($0)) + 40|0) + ($4<<2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(8);
 if (!($7)) {
  _g_assertion_message_expr(0,125112,1806,125819,125844);
  // unreachable;
 }
 $8 = ((($1)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $$0$i$ph = 0;$$pre$phi55$phZ2D = $5;
 } else {
  $11 = ((($0)) + 32|0);
  $12 = (_g_atomic_pointer_get($11)|0);
  $13 = ((($9)) + -4|0);
  $14 = ((($0)) + 40|0);
  $$0$i$i = $11;
  while(1) {
   $15 = HEAP32[$9>>2]|0;
   $16 = ($$0$i$i|0)==(0|0);
   if ($16) {
    $$040$i$i = 0;
   } else {
    $17 = ((($$0$i$i)) + -4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($15>>>0)<($18>>>0);
    if ($19) {
     $20 = (($$0$i$i) + ($15)|0);
     $21 = HEAP8[$20>>0]|0;
     $22 = ($21<<24>>24)==(0);
     if ($22) {
      $$040$i$i = 0;
     } else {
      $23 = $21&255;
      $24 = (($23) + -1)|0;
      $25 = HEAP32[$13>>2]|0;
      $26 = (($25) + -4)|0;
      $27 = (($26>>>0) / 12)&-1;
      $28 = ($24>>>0)<($27>>>0);
      $29 = (((($9)) + 4|0) + (($24*12)|0)|0);
      if ($28) {
       $30 = HEAP32[$29>>2]|0;
       $31 = HEAP32[$14>>2]|0;
       $32 = ($30|0)==($31|0);
       $spec$select$i$i = $32 ? $29 : 0;
       $$040$i$i = $spec$select$i$i;
      } else {
       $$040$i$i = 0;
      }
     }
    } else {
     $$040$i$i = 0;
    }
   }
   $33 = (_g_atomic_pointer_get($11)|0);
   $34 = ($$0$i$i|0)==($33|0);
   if ($34) {
    break;
   } else {
    $$0$i$i = $11;
   }
  }
  $$pre = HEAP32[$2>>2]|0;
  $$pre53 = $$pre & 255;
  $$pre54 = (((($0)) + 40|0) + ($$pre53<<2)|0);
  $$0$i$ph = $$040$i$i;$$pre$phi55$phZ2D = $$pre54;
 }
 $$pr = HEAP32[$$pre$phi55$phZ2D>>2]|0;
 $35 = ((($1)) + 40|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($$pr|0)==(8);
 if (!($37)) {
  _g_assertion_message_expr(0,125112,1806,125819,125844);
  // unreachable;
 }
 $38 = HEAP32[35943]|0;
 $$idx$i = ((($0)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $39 = ($38|0)!=(0);
 $40 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i$i = $39 & $40;
 L19: do {
  if ($or$cond$i$i) {
   $41 = HEAP32[$$idx$val$i>>2]|0;
   $42 = ($41|0)==(0);
   if ($42) {
    $$0$lcssa$i = 0;
   } else {
    $43 = ((($$idx$val$i)) + 4|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ((($44)) + -8|0);
    $$033$i$i = $45;$$036$i$i = $41;
    while(1) {
     $46 = (($$036$i$i) + 1)|0;
     $47 = $46 >>> 1;
     $48 = (($$033$i$i) + ($47<<3)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = ($49|0)==($38|0);
     if ($50) {
      break;
     }
     $51 = ($49>>>0)<($38>>>0);
     $52 = (($$036$i$i) - ($47))|0;
     $53 = (($47) + -1)|0;
     $$137$i$i = $51 ? $52 : $53;
     $$134$i$i = $51 ? $48 : $$033$i$i;
     $54 = ($$137$i$i|0)==(0);
     if ($54) {
      $$0$lcssa$i = 0;
      break L19;
     } else {
      $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
     }
    }
    $55 = (((($$033$i$i) + ($47<<3)|0)) + 4|0);
    $56 = HEAP32[$55>>2]|0;
    $57 = ($56|0)==(0|0);
    if ($57) {
     $$0$lcssa$i = 0;
    } else {
     $$014$i = $56;
     while(1) {
      $58 = HEAP32[$$014$i>>2]|0;
      $59 = ($58|0)==($36|0);
      if ($59) {
       $$0$lcssa$i = $$014$i;
       break L19;
      }
      $60 = ((($$014$i)) + 12|0);
      $61 = HEAP32[$60>>2]|0;
      $62 = ($61|0)==(0|0);
      if ($62) {
       $$0$lcssa$i = 0;
       break;
      } else {
       $$014$i = $61;
      }
     }
    }
   }
  } else {
   $$0$lcssa$i = 0;
  }
 } while(0);
 $63 = ((($0)) + 20|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)!=(0|0);
 $66 = ($$0$i$ph|0)!=(0|0);
 $or$cond = $66 & $65;
 $67 = ($$0$lcssa$i|0)!=(0|0);
 $or$cond3 = $67 & $or$cond;
 if (!($or$cond3)) {
  _g_assertion_message_expr(0,125112,2156,125866,125898);
  // unreachable;
 }
 $68 = ((($$0$lcssa$i)) + 4|0);
 $69 = HEAP32[$68>>2]|0;
 $70 = ($69|0)==(0|0);
 if ($70) {
  _g_assertion_message_expr(0,125112,2156,125866,125898);
  // unreachable;
 }
 $71 = ((($$0$i$ph)) + 8|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)==(4);
 if (!($73)) {
  _g_assertion_message_expr(0,125112,2157,125866,125947);
  // unreachable;
 }
 HEAP32[$71>>2] = 5;
 $74 = ((($$0$i$ph)) + 4|0);
 $75 = HEAP32[$74>>2]|0;
 $76 = HEAP32[$69>>2]|0;
 $77 = ($76|0)==(0|0);
 if (!($77)) {
  $78 = ((($69)) + 8|0);
  $79 = HEAP32[$78>>2]|0;
  ftCall_vii($76|0,$75,$79);
 }
 $80 = HEAP32[35946]|0;
 $81 = ($80|0)==(0);
 if ($81) {
  return;
 }
 $$049 = 0;
 while(1) {
  $82 = HEAP32[35947]|0;
  $83 = (((($82) + ($$049<<3)|0)) + 4|0);
  $84 = HEAP32[$83>>2]|0;
  $85 = (($82) + ($$049<<3)|0);
  $86 = HEAP32[$85>>2]|0;
  ftCall_vii($84|0,$86,$75);
  $87 = (($$049) + 1)|0;
  $88 = HEAP32[35946]|0;
  $89 = ($87>>>0)<($88>>>0);
  if ($89) {
   $$049 = $87;
  } else {
   break;
  }
 }
 return;
}
function _g_type_class_unref($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i10 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 131072;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = HEAP32[$$0$i>>2]|0;
   $14 = ($13|0)==(0);
   if (!($14)) {
    while(1) {
     $15 = HEAP32[$$0$i>>2]|0;
     $16 = ($15>>>0)<(2);
     if ($16) {
      break;
     }
     $23 = HEAP32[$$0$i>>2]|0;
     $24 = ($23|0)==($15|0);
     if ($24) {
      label = 12;
      break;
     }
    }
    if ((label|0) == 12) {
     $25 = (($15) + -1)|0;
     HEAP32[$$0$i>>2] = $25;
     STACKTOP = sp;return;
    }
    $17 = ((($$0$i)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0|0);
    if (!($19)) {
     STACKTOP = sp;return;
    }
    $20 = ((($$0$i)) + 24|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = (_g_quark_to_string($21)|0);
    HEAP32[$vararg_buffer>>2] = $22;
    _g_log(0,16,125721,$vararg_buffer);
    STACKTOP = sp;return;
   }
  }
 }
 $26 = ($1|0)==(0);
 if ($26) {
  $$0$i10 = 124803;
 } else {
  if ($2) {
   $27 = $1 & -4;
   $28 = $27;
   $$0$i$i = $28;
  } else {
   $29 = $1 >>> 2;
   $30 = (141120 + ($29<<2)|0);
   $31 = HEAP32[$30>>2]|0;
   $$0$i$i = $31;
  }
  $32 = ($$0$i$i|0)==(0|0);
  if ($32) {
   $$0$i10 = 124793;
  } else {
   $33 = ((($$0$i$i)) + 24|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = (_g_quark_to_string($34)|0);
   $$0$i10 = $35;
  }
 }
 HEAP32[$vararg_buffer1>>2] = $$0$i10;
 _g_log(0,16,125761,$vararg_buffer1);
 STACKTOP = sp;return;
}
function _type_iface_ensure_dflt_vtable_Wm($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  _g_assertion_message_expr(0,125112,2065,126243,126276);
  // unreachable;
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ((($4)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  return;
 }
 $8 = HEAP32[$1>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP16[$9>>1]|0;
 $11 = $10&65535;
 $12 = (_g_malloc0($11)|0);
 $13 = HEAP32[$1>>2]|0;
 $14 = ((($13)) + 28|0);
 HEAP32[$14>>2] = $12;
 $15 = ((($0)) + 40|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ((($12)) + 4|0);
 HEAP32[$17>>2] = 0;
 $18 = HEAP32[$1>>2]|0;
 $19 = ((($18)) + 8|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $22 = HEAP32[$1>>2]|0;
  $23 = ((($22)) + 16|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ($24|0)==(0|0);
  if ($25) {
   return;
  }
 }
 $26 = HEAP32[$1>>2]|0;
 $27 = ((($26)) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if (!($29)) {
  $30 = HEAP32[$1>>2]|0;
  $31 = ((($30)) + 8|0);
  $32 = HEAP32[$31>>2]|0;
  ftCall_vi($32|0,$12);
 }
 $33 = HEAP32[$1>>2]|0;
 $34 = ((($33)) + 16|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($35|0)==(0|0);
 if ($36) {
  return;
 }
 $37 = HEAP32[$1>>2]|0;
 $38 = ((($37)) + 16|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = HEAP32[$1>>2]|0;
 $41 = ((($40)) + 24|0);
 $42 = HEAP32[$41>>2]|0;
 ftCall_vii($39|0,$12,$42);
 return;
}
function _check_type_info_I($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$0$i52 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $or$cond = 0, $or$cond51 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer15 = 0;
 var $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer25 = 0, $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr21 = 0, $vararg_ptr28 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer25 = sp + 64|0;
 $vararg_buffer22 = sp + 56|0;
 $vararg_buffer18 = sp + 48|0;
 $vararg_buffer15 = sp + 40|0;
 $vararg_buffer12 = sp + 32|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = ($1>>>0)>(1020);
 if ($4) {
  $5 = $1 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $1 >>> 2;
  $8 = (141120 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ((($$0$i)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 255;
 $13 = (((($$0$i)) + 40|0) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($$0$i)) + 40|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($14|0)==($16|0);
 do {
  if ($17) {
   $$0$i52 = $$0$i;
  } else {
   $18 = ($14>>>0)>(1020);
   if ($18) {
    $19 = $14 & -4;
    $20 = $19;
    $$0$i52 = $20;
    break;
   } else {
    $21 = $14 >>> 2;
    $22 = (141120 + ($21<<2)|0);
    $23 = HEAP32[$22>>2]|0;
    $$0$i52 = $23;
    break;
   }
  }
 } while(0);
 $24 = ($1|0)==(8);
 $25 = ($1>>>0)<(1021);
 $26 = $1 & 3;
 $27 = ($26|0)==(0);
 $or$cond51 = $25 & $27;
 if (!($or$cond51)) {
  _g_assertion_message_expr(0,125112,974,126769,126787);
  // unreachable;
 }
 $28 = ($$0$i52|0)==(0|0);
 $29 = ((($$0$i52)) + -4|0);
 $30 = $28 ? 0 : $29;
 $31 = HEAP32[$30>>2]|0;
 $32 = $31 & 2;
 $33 = ($32|0)==(0);
 do {
  if ($33) {
   $34 = ((($3)) + 24|0);
   $35 = HEAP16[$34>>1]|0;
   $36 = ($35<<16>>16)==(0);
   if ($36) {
    $37 = ((($3)) + 26|0);
    $38 = HEAP16[$37>>1]|0;
    $39 = ($38<<16>>16)==(0);
    if ($39) {
     $40 = ((($3)) + 28|0);
     $41 = HEAP32[$40>>2]|0;
     $42 = ($41|0)==(0|0);
     if ($42) {
      break;
     }
    }
   }
   $43 = ($0|0)==(0|0);
   if ($43) {
    HEAP32[$vararg_buffer2>>2] = $2;
    _g_log(0,16,126920,$vararg_buffer2);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $44 = ((($0)) + 24|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (_g_quark_to_string($45)|0);
    HEAP32[$vararg_buffer>>2] = $2;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = $46;
    _g_log(0,16,126846,$vararg_buffer);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 $47 = $31 & 1;
 $48 = ($47|0)!=(0);
 $or$cond = $24 | $48;
 do {
  if (!($or$cond)) {
   $49 = ((($3)) + 12|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)==(0|0);
   if ($51) {
    $52 = ((($3)) + 16|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==(0|0);
    if ($54) {
     $55 = ((($3)) + 20|0);
     $56 = HEAP32[$55>>2]|0;
     $57 = ($56|0)==(0|0);
     if ($57) {
      $58 = HEAP16[$3>>1]|0;
      $59 = ($58<<16>>16)==(0);
      if ($59) {
       $60 = ((($3)) + 4|0);
       $61 = HEAP32[$60>>2]|0;
       $62 = ($61|0)==(0|0);
       if ($62) {
        $63 = ((($3)) + 8|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = ($64|0)==(0|0);
        if ($65) {
         break;
        }
       }
      }
     }
    }
   }
   $66 = ($0|0)==(0|0);
   if ($66) {
    HEAP32[$vararg_buffer9>>2] = $2;
    _g_log(0,16,127050,$vararg_buffer9);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   } else {
    $67 = ((($0)) + 24|0);
    $68 = HEAP32[$67>>2]|0;
    $69 = (_g_quark_to_string($68)|0);
    HEAP32[$vararg_buffer5>>2] = $2;
    $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
    HEAP32[$vararg_ptr8>>2] = $69;
    _g_log(0,16,126978,$vararg_buffer5);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ($24) {
  $70 = HEAP16[$3>>1]|0;
  $71 = ($70&65535)<(8);
  if ($71) {
   HEAP32[$vararg_buffer12>>2] = $2;
   _g_log(0,16,127106,$vararg_buffer12);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $72 = ($47|0)==(0);
 if (!($72)) {
  $73 = HEAP16[$3>>1]|0;
  $74 = ($73&65535)<(4);
  if ($74) {
   HEAP32[$vararg_buffer15>>2] = $2;
   _g_log(0,16,127183,$vararg_buffer15);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $75 = ($0|0)==(0|0);
  if (!($75)) {
   $76 = ((($0)) + 20|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($77)) + 4|0);
   $79 = HEAP16[$78>>1]|0;
   $80 = ($73&65535)<($79&65535);
   if ($80) {
    $81 = ((($0)) + 24|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = (_g_quark_to_string($82)|0);
    HEAP32[$vararg_buffer18>>2] = $2;
    $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
    HEAP32[$vararg_ptr21>>2] = $83;
    _g_log(0,16,127252,$vararg_buffer18);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 if ($33) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $84 = ((($3)) + 24|0);
 $85 = HEAP16[$84>>1]|0;
 $86 = ($85&65535)<(4);
 if ($86) {
  HEAP32[$vararg_buffer22>>2] = $2;
  _g_log(0,16,127337,$vararg_buffer22);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $87 = ($0|0)==(0|0);
 if ($87) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $88 = ((($0)) + 20|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ((($89)) + 36|0);
 $91 = HEAP16[$90>>1]|0;
 $92 = ($85&65535)<($91&65535);
 if (!($92)) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $93 = ((($0)) + 24|0);
 $94 = HEAP32[$93>>2]|0;
 $95 = (_g_quark_to_string($94)|0);
 HEAP32[$vararg_buffer25>>2] = $2;
 $vararg_ptr28 = ((($vararg_buffer25)) + 4|0);
 HEAP32[$vararg_ptr28>>2] = $95;
 _g_log(0,16,127412,$vararg_buffer25);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _check_value_table_I($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$lcssa$i = 0, $$0$lcssa$i30 = 0, $$08$i = 0, $$08$i29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer14 = 0, $vararg_buffer4 = 0, $vararg_buffer7 = 0, $vararg_ptr10 = 0, $vararg_ptr17 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer14 = sp + 40|0;
 $vararg_buffer11 = sp + 32|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 48|0;
 $3 = ($1|0)==(0|0);
 if ($3) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($1)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $9 = ((($1)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = ((($1)) + 12|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ($13|0)==(0|0);
    if ($14) {
     $15 = ((($1)) + 16|0);
     $16 = HEAP32[$15>>2]|0;
     $17 = ($16|0)==(0|0);
     if ($17) {
      $18 = ((($1)) + 20|0);
      $19 = HEAP32[$18>>2]|0;
      $20 = ($19|0)==(0|0);
      if ($20) {
       $21 = ((($1)) + 24|0);
       $22 = HEAP32[$21>>2]|0;
       $23 = ($22|0)==(0|0);
       if ($23) {
        $24 = ((($1)) + 28|0);
        $25 = HEAP32[$24>>2]|0;
        $26 = ($25|0)==(0|0);
        if ($26) {
         $$0 = 0;
         STACKTOP = sp;return ($$0|0);
        }
       }
      }
     }
    }
   }
  }
  HEAP32[$vararg_buffer>>2] = $0;
  _g_log(0,16,126442,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $27 = ((($1)) + 8|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ($28|0)==(0|0);
 if ($29) {
  HEAP32[$vararg_buffer1>>2] = $0;
  _g_log(0,16,126492,$vararg_buffer1);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $30 = ((($1)) + 16|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(0|0);
 $33 = ((($1)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 do {
  if ($32) {
   if (!($35)) {
    label = 16;
   }
  } else {
   if ($35) {
    label = 16;
   } else {
    ;HEAP8[$2>>0]=HEAP8[126604>>0]|0;HEAP8[$2+1>>0]=HEAP8[126604+1>>0]|0;HEAP8[$2+2>>0]=HEAP8[126604+2>>0]|0;HEAP8[$2+3>>0]=HEAP8[126604+3>>0]|0;HEAP8[$2+4>>0]=HEAP8[126604+4>>0]|0;HEAP8[$2+5>>0]=HEAP8[126604+5>>0]|0;
    $36 = HEAP8[$31>>0]|0;
    $37 = ($36<<24>>24)==(0);
    L25: do {
     if ($37) {
      $$0$lcssa$i = $31;
      label = 22;
     } else {
      $$08$i = $31;$39 = $36;
      while(1) {
       $38 = $39 << 24 >> 24;
       $40 = (_strchr($2,$38)|0);
       $41 = ($40|0)==(0|0);
       if ($41) {
        break;
       }
       $42 = ((($$08$i)) + 1|0);
       $43 = HEAP8[$42>>0]|0;
       $44 = ($43<<24>>24)==(0);
       if ($44) {
        $$0$lcssa$i = $42;
        label = 22;
        break L25;
       } else {
        $$08$i = $42;$39 = $43;
       }
      }
     }
    } while(0);
    if ((label|0) == 22) {
     $45 = $$0$lcssa$i;
     $46 = $31;
     $47 = (($45) - ($46))|0;
     $48 = ($47|0)>(8);
     if (!($48)) {
      break;
     }
    }
    HEAP32[$vararg_buffer7>>2] = 126670;
    $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
    HEAP32[$vararg_ptr10>>2] = $0;
    _g_log(0,16,126610,$vararg_buffer7);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ((label|0) == 16) {
  HEAP32[$vararg_buffer4>>2] = $0;
  _g_log(0,16,126529,$vararg_buffer4);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $49 = ((($1)) + 24|0);
 $50 = HEAP32[$49>>2]|0;
 $51 = ($50|0)==(0|0);
 $52 = ((($1)) + 28|0);
 $53 = HEAP32[$52>>2]|0;
 $54 = ($53|0)==(0|0);
 if ($51) {
  if ($54) {
   $$0 = 1;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  if (!($54)) {
   ;HEAP8[$2>>0]=HEAP8[126604>>0]|0;HEAP8[$2+1>>0]=HEAP8[126604+1>>0]|0;HEAP8[$2+2>>0]=HEAP8[126604+2>>0]|0;HEAP8[$2+3>>0]=HEAP8[126604+3>>0]|0;HEAP8[$2+4>>0]=HEAP8[126604+4>>0]|0;HEAP8[$2+5>>0]=HEAP8[126604+5>>0]|0;
   $55 = HEAP8[$50>>0]|0;
   $56 = ($55<<24>>24)==(0);
   L44: do {
    if ($56) {
     $$0$lcssa$i30 = $50;
     label = 33;
    } else {
     $$08$i29 = $50;$58 = $55;
     while(1) {
      $57 = $58 << 24 >> 24;
      $59 = (_strchr($2,$57)|0);
      $60 = ($59|0)==(0|0);
      if ($60) {
       break;
      }
      $61 = ((($$08$i29)) + 1|0);
      $62 = HEAP8[$61>>0]|0;
      $63 = ($62<<24>>24)==(0);
      if ($63) {
       $$0$lcssa$i30 = $61;
       label = 33;
       break L44;
      } else {
       $$08$i29 = $61;$58 = $62;
      }
     }
    }
   } while(0);
   if ((label|0) == 33) {
    $64 = $$0$lcssa$i30;
    $65 = $50;
    $66 = (($64) - ($65))|0;
    $67 = ($66|0)>(8);
    if (!($67)) {
     $$0 = 1;
     STACKTOP = sp;return ($$0|0);
    }
   }
   HEAP32[$vararg_buffer14>>2] = 126756;
   $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
   HEAP32[$vararg_ptr17>>2] = $0;
   _g_log(0,16,126610,$vararg_buffer14);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 HEAP32[$vararg_buffer11>>2] = $0;
 _g_log(0,16,126685,$vararg_buffer11);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _type_data_make_W($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$i154 = 0, $$0$i156 = 0, $$0143 = 0, $$0144$in = 0, $$0144$ph = 0, $$0144$ph163 = 0, $$0147 = 0, $$033$i = 0, $$036$i = 0, $$1$ph = 0, $$1146159 = 0, $$1148 = 0, $$1161 = 0, $$134$i = 0, $$137$i = 0, $$2 = 0, $$2149 = 0, $$3 = 0, $$4 = 0;
 var $$5 = 0, $$5165 = 0, $$idx = 0, $$idx$val = 0, $$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0;
 var $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0;
 var $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0;
 var $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0;
 var $204 = 0, $205 = 0, $206 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0;
 var $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0;
 var $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp = 0, $phitmp167 = 0, $phitmp168 = 0, $phitmp169 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 $6 = ($1|0)!=(0|0);
 $or$cond = $6 & $5;
 if (!($or$cond)) {
  _g_assertion_message_expr(0,125112,1171,126351,126368);
  // unreachable;
 }
 $7 = ($2|0)==(0|0);
 if ($7) {
  $8 = ((($0)) + 44|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9>>>0)>(1020);
  if ($10) {
   $11 = $9 & -4;
   $12 = $11;
   $$0$i = $12;
  } else {
   $13 = $9 >>> 2;
   $14 = (141120 + ($13<<2)|0);
   $15 = HEAP32[$14>>2]|0;
   $$0$i = $15;
  }
  $16 = ($$0$i|0)==(0|0);
  if ($16) {
   $$1$ph = 143792;
   label = 9;
  } else {
   $17 = ((($$0$i)) + 20|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = HEAP32[$18>>2]|0;
   $$1146159 = $19;$$1161 = 0;$$2149 = 0;$47 = $19;
  }
 } else {
  $$1$ph = $2;
  label = 9;
 }
 if ((label|0) == 9) {
  $20 = ((($$1$ph)) + 16|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = ($21|0)==(0|0);
  if ($22) {
   $$0147 = 32;
  } else {
   $23 = (_strlen($21)|0);
   $24 = (($23) + 32)|0;
   $$0147 = $24;
  }
  $25 = ((($$1$ph)) + 24|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ($26|0)==(0|0);
  if ($27) {
   $$1148 = $$0147;
  } else {
   $28 = (_strlen($26)|0);
   $29 = (($28) + ($$0147))|0;
   $$1148 = $29;
  }
  $30 = (($$1148) + 2)|0;
  $$1146159 = 0;$$1161 = $$1$ph;$$2149 = $30;$47 = 0;
 }
 $31 = ((($0)) + 12|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32 & 262144;
 $34 = ($33|0)==(0);
 L20: do {
  if ($34) {
   $85 = $32 & 131072;
   $86 = ($85|0)==(0);
   if (!($86)) {
    $87 = ((($0)) + 44|0);
    $88 = HEAP32[$87>>2]|0;
    $89 = ($88>>>0)>(1020);
    if ($89) {
     $90 = $88 & -4;
     $91 = $90;
     $$0$i154 = $91;
    } else {
     $92 = $88 >>> 2;
     $93 = (141120 + ($92<<2)|0);
     $94 = HEAP32[$93>>2]|0;
     $$0$i154 = $94;
    }
    $95 = (($$2149) + 36)|0;
    $96 = (_g_malloc0($95)|0);
    $97 = ($$2149|0)==(0);
    $98 = ((($96)) + 36|0);
    $99 = $97 ? $47 : $98;
    $$3 = $97 ? $$1146159 : $98;
    $100 = HEAP16[$1>>1]|0;
    $101 = ((($96)) + 4|0);
    HEAP16[$101>>1] = $100;
    $102 = ((($1)) + 4|0);
    $103 = HEAP32[$102>>2]|0;
    $104 = ((($96)) + 12|0);
    HEAP32[$104>>2] = $103;
    $105 = ((($1)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($96)) + 16|0);
    HEAP32[$107>>2] = $106;
    $108 = ((($1)) + 12|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ((($96)) + 20|0);
    HEAP32[$110>>2] = $109;
    $111 = ((($1)) + 16|0);
    $112 = HEAP32[$111>>2]|0;
    $113 = ((($96)) + 24|0);
    HEAP32[$113>>2] = $112;
    $114 = ((($1)) + 20|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($96)) + 28|0);
    HEAP32[$116>>2] = $115;
    $117 = ((($96)) + 32|0);
    HEAP32[$117>>2] = 0;
    $118 = ((($96)) + 6|0);
    HEAP16[$118>>1] = 0;
    $119 = ($$0$i154|0)==(0|0);
    if (!($119)) {
     $120 = ((($$0$i154)) + 20|0);
     $121 = HEAP32[$120>>2]|0;
     $122 = ((($121)) + 6|0);
     $123 = HEAP16[$122>>1]|0;
     HEAP16[$118>>1] = $123;
    }
    $124 = ((($96)) + 8|0);
    HEAP32[$124>>2] = 0;
    $$0144$in = $96;$$5 = $$3;$206 = $99;
    label = 36;
    break;
   }
   $125 = $32 & 255;
   $126 = (((($0)) + 40|0) + ($125<<2)|0);
   $127 = HEAP32[$126>>2]|0;
   switch ($127|0) {
   case 8:  {
    $128 = (($$2149) + 32)|0;
    $129 = (_g_malloc0($128)|0);
    $130 = ($$2149|0)==(0);
    $131 = ((($129)) + 32|0);
    $132 = $130 ? $47 : $131;
    $$4 = $130 ? $$1146159 : $131;
    $133 = HEAP16[$1>>1]|0;
    $134 = ((($129)) + 4|0);
    HEAP16[$134>>1] = $133;
    $135 = ((($1)) + 4|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = ((($129)) + 8|0);
    HEAP32[$137>>2] = $136;
    $138 = ((($1)) + 8|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = ((($129)) + 12|0);
    HEAP32[$140>>2] = $139;
    $141 = ((($1)) + 12|0);
    $142 = HEAP32[$141>>2]|0;
    $143 = ((($129)) + 16|0);
    HEAP32[$143>>2] = $142;
    $144 = ((($1)) + 16|0);
    $145 = HEAP32[$144>>2]|0;
    $146 = ((($129)) + 20|0);
    HEAP32[$146>>2] = $145;
    $147 = ((($1)) + 20|0);
    $148 = HEAP32[$147>>2]|0;
    $149 = ((($129)) + 24|0);
    HEAP32[$149>>2] = $148;
    $150 = ((($129)) + 28|0);
    HEAP32[$150>>2] = 0;
    $$0144$in = $129;$$5 = $$4;$206 = $132;
    label = 36;
    break L20;
    break;
   }
   case 72:  {
    $151 = (($$2149) + 12)|0;
    $152 = (_g_malloc0($151)|0);
    $153 = ($$2149|0)==(0);
    if ($153) {
     $$0144$ph = $152;
     label = 34;
    } else {
     $154 = ((($152)) + 12|0);
     $$0144$ph163 = $152;$$ph = $154;
     label = 35;
    }
    break;
   }
   default: {
    $155 = (($$2149) + 4)|0;
    $156 = (_g_malloc0($155)|0);
    $157 = ($$2149|0)==(0);
    if ($157) {
     $$0144$ph = $156;
     label = 34;
    } else {
     $158 = ((($156)) + 4|0);
     $$0144$ph163 = $156;$$ph = $158;
     label = 35;
    }
   }
   }
   if ((label|0) == 34) {
    HEAP32[$3>>2] = $$0144$ph;
    $175 = $47;
    break;
   }
   else if ((label|0) == 35) {
    HEAP32[$3>>2] = $$0144$ph163;
    $$5165 = $$ph;$160 = $$ph;
    label = 37;
    break;
   }
  } else {
   $35 = ((($0)) + 44|0);
   $36 = HEAP32[$35>>2]|0;
   $37 = ($36>>>0)>(1020);
   if ($37) {
    $38 = $36 & -4;
    $39 = $38;
    $$0$i156 = $39;
   } else {
    $40 = $36 >>> 2;
    $41 = (141120 + ($40<<2)|0);
    $42 = HEAP32[$41>>2]|0;
    $$0$i156 = $42;
   }
   $43 = (($$2149) + 48)|0;
   $44 = (_g_malloc0($43)|0);
   $45 = ($$2149|0)==(0);
   $46 = ((($44)) + 48|0);
   $48 = $45 ? $47 : $46;
   $$2 = $45 ? $$1146159 : $46;
   $49 = HEAP16[$1>>1]|0;
   $50 = ((($44)) + 4|0);
   HEAP16[$50>>1] = $49;
   $51 = ((($1)) + 4|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($44)) + 12|0);
   HEAP32[$53>>2] = $52;
   $54 = ((($1)) + 8|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($44)) + 16|0);
   HEAP32[$56>>2] = $55;
   $57 = ((($1)) + 12|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ((($44)) + 20|0);
   HEAP32[$59>>2] = $58;
   $60 = ((($1)) + 16|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ((($44)) + 24|0);
   HEAP32[$62>>2] = $61;
   $63 = ((($1)) + 20|0);
   $64 = HEAP32[$63>>2]|0;
   $65 = ((($44)) + 28|0);
   HEAP32[$65>>2] = $64;
   $66 = ((($44)) + 32|0);
   HEAP32[$66>>2] = 0;
   $67 = ((($44)) + 8|0);
   HEAP32[$67>>2] = 0;
   $68 = ((($1)) + 24|0);
   $69 = HEAP16[$68>>1]|0;
   $70 = ((($44)) + 36|0);
   HEAP16[$70>>1] = $69;
   $71 = ((($44)) + 38|0);
   HEAP16[$71>>1] = 0;
   $72 = ((($44)) + 6|0);
   HEAP16[$72>>1] = 0;
   $73 = ($$0$i156|0)==(0|0);
   if (!($73)) {
    $74 = ((($$0$i156)) + 20|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ((($75)) + 6|0);
    $77 = HEAP16[$76>>1]|0;
    HEAP16[$72>>1] = $77;
   }
   $78 = ((($1)) + 26|0);
   $79 = HEAP16[$78>>1]|0;
   $80 = ($79&65535)<(1024);
   $spec$select = $80 ? $79 : 1024;
   $81 = ((($44)) + 40|0);
   HEAP16[$81>>1] = $spec$select;
   $82 = ((($1)) + 28|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = ((($44)) + 44|0);
   HEAP32[$84>>2] = $83;
   $$0144$in = $44;$$5 = $$2;$206 = $48;
   label = 36;
  }
 } while(0);
 if ((label|0) == 36) {
  HEAP32[$3>>2] = $$0144$in;
  $159 = ($$2149|0)==(0);
  if ($159) {
   $175 = $206;
  } else {
   $$5165 = $$5;$160 = $206;
   label = 37;
  }
 }
 if ((label|0) == 37) {
  ;HEAP32[$160>>2]=HEAP32[$$1161>>2]|0;HEAP32[$160+4>>2]=HEAP32[$$1161+4>>2]|0;HEAP32[$160+8>>2]=HEAP32[$$1161+8>>2]|0;HEAP32[$160+12>>2]=HEAP32[$$1161+12>>2]|0;HEAP32[$160+16>>2]=HEAP32[$$1161+16>>2]|0;HEAP32[$160+20>>2]=HEAP32[$$1161+20>>2]|0;HEAP32[$160+24>>2]=HEAP32[$$1161+24>>2]|0;HEAP32[$160+28>>2]=HEAP32[$$1161+28>>2]|0;
  $161 = ((($160)) + 32|0);
  HEAP8[$161>>0] = 0;
  $162 = ((($$5165)) + 16|0);
  HEAP32[$162>>2] = $161;
  $163 = ((($$1161)) + 16|0);
  $164 = HEAP32[$163>>2]|0;
  $165 = ($164|0)==(0|0);
  if ($165) {
   $$0143 = $161;
  } else {
   (_strcat($161,$164)|0);
   $166 = HEAP32[$163>>2]|0;
   $167 = (_strlen($166)|0);
   $168 = (($161) + ($167)|0);
   $$0143 = $168;
  }
  $169 = ((($$0143)) + 1|0);
  HEAP8[$169>>0] = 0;
  $170 = ((($$5165)) + 24|0);
  HEAP32[$170>>2] = $169;
  $171 = ((($$1161)) + 24|0);
  $172 = HEAP32[$171>>2]|0;
  $173 = ($172|0)==(0|0);
  if ($173) {
   $175 = $160;
  } else {
   (_strcat($169,$172)|0);
   $175 = $160;
  }
 }
 $174 = HEAP32[$3>>2]|0;
 HEAP32[$174>>2] = $175;
 $176 = HEAP32[$3>>2]|0;
 $177 = HEAP32[$176>>2]|0;
 $178 = HEAP32[$177>>2]|0;
 $179 = ($178|0)==(0|0);
 L58: do {
  if ($179) {
   $202 = 0;
  } else {
   $180 = HEAP32[35945]|0;
   $$idx = ((($0)) + 28|0);
   $$idx$val = HEAP32[$$idx>>2]|0;
   $181 = ($180|0)!=(0);
   $182 = ($$idx$val|0)!=(0|0);
   $or$cond$i = $181 & $182;
   if ($or$cond$i) {
    $183 = HEAP32[$$idx$val>>2]|0;
    $184 = ($183|0)==(0);
    if ($184) {
     $202 = 524288;
    } else {
     $185 = ((($$idx$val)) + 4|0);
     $186 = HEAP32[$185>>2]|0;
     $187 = ((($186)) + -8|0);
     $$033$i = $187;$$036$i = $183;
     while(1) {
      $188 = (($$036$i) + 1)|0;
      $189 = $188 >>> 1;
      $190 = (($$033$i) + ($189<<3)|0);
      $191 = HEAP32[$190>>2]|0;
      $192 = ($191|0)==($180|0);
      if ($192) {
       break;
      }
      $193 = ($191>>>0)<($180>>>0);
      $194 = (($$036$i) - ($189))|0;
      $195 = (($189) + -1)|0;
      $$137$i = $193 ? $194 : $195;
      $$134$i = $193 ? $190 : $$033$i;
      $196 = ($$137$i|0)==(0);
      if ($196) {
       $202 = 524288;
       break L58;
      } else {
       $$033$i = $$134$i;$$036$i = $$137$i;
      }
     }
     $197 = (((($$033$i) + ($189<<3)|0)) + 4|0);
     $198 = HEAP32[$197>>2]|0;
     $phitmp167 = $198 & 48;
     $phitmp168 = ($phitmp167|0)==(0);
     $phitmp169 = $phitmp168&1;
     $phitmp = $phitmp169 << 19;
     $202 = $phitmp;
    }
   } else {
    $202 = 524288;
   }
  }
 } while(0);
 $199 = HEAP32[$31>>2]|0;
 $200 = $199 & -524289;
 $201 = $200 | $202;
 HEAP32[$31>>2] = $201;
 $203 = HEAP32[$3>>2]|0;
 $204 = HEAP32[$203>>2]|0;
 $205 = ($204|0)==(0|0);
 if ($205) {
  _g_assertion_message_expr(0,125112,1302,126351,126403);
  // unreachable;
 } else {
  HEAP32[$0>>2] = 1;
  return;
 }
}
function _g_type_free_instance($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i30 = 0, $$0$i29 = 0, $$033$i$i = 0, $$036$i$i = 0, $$134$i$i = 0, $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lobit = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $8 = 0, $9 = 0, $or$cond$i$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if (!($9)) {
  $10 = ((($$0$i)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 262144;
  $13 = ($12|0)==(0);
  if (!($13)) {
   $14 = ((($$0$i)) + 20|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP32[$14>>2]|0;
    $18 = ((($17)) + 32|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==($1|0);
    if ($20) {
     $31 = $11 & 524288;
     $32 = ($31|0)==(0);
     L10: do {
      if ($32) {
       $33 = ((($$0$i)) + 40|0);
       $34 = HEAP32[$33>>2]|0;
       $35 = ($34>>>0)>(1020);
       if ($35) {
        $36 = $34 & -4;
        $37 = $36;
        $$0$i$i30 = $37;
       } else {
        $38 = $34 >>> 2;
        $39 = (141120 + ($38<<2)|0);
        $40 = HEAP32[$39>>2]|0;
        $$0$i$i30 = $40;
       }
       $41 = ($$0$i$i30|0)==(0|0);
       if (!($41)) {
        $42 = HEAP32[35945]|0;
        $$idx$i = ((($$0$i$i30)) + 28|0);
        $$idx$val$i = HEAP32[$$idx$i>>2]|0;
        $43 = ($42|0)!=(0);
        $44 = ($$idx$val$i|0)!=(0|0);
        $or$cond$i$i = $43 & $44;
        if ($or$cond$i$i) {
         $45 = HEAP32[$$idx$val$i>>2]|0;
         $46 = ($45|0)==(0);
         if (!($46)) {
          $47 = ((($$idx$val$i)) + 4|0);
          $48 = HEAP32[$47>>2]|0;
          $49 = ((($48)) + -8|0);
          $$033$i$i = $49;$$036$i$i = $45;
          while(1) {
           $50 = (($$036$i$i) + 1)|0;
           $51 = $50 >>> 1;
           $52 = (($$033$i$i) + ($51<<3)|0);
           $53 = HEAP32[$52>>2]|0;
           $54 = ($53|0)==($42|0);
           if ($54) {
            break;
           }
           $55 = ($53>>>0)<($42>>>0);
           $56 = (($$036$i$i) - ($51))|0;
           $57 = (($51) + -1)|0;
           $$137$i$i = $55 ? $56 : $57;
           $$134$i$i = $55 ? $52 : $$033$i$i;
           $58 = ($$137$i$i|0)==(0);
           if ($58) {
            break L10;
           } else {
            $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
           }
          }
          $59 = (((($$033$i$i) + ($51<<3)|0)) + 4|0);
          $60 = HEAP32[$59>>2]|0;
          $$lobit = $60 & 16;
          $61 = ($$lobit|0)==(0);
          if (!($61)) {
           $62 = ((($$0$i)) + 24|0);
           $63 = HEAP32[$62>>2]|0;
           $64 = (_g_quark_to_string($63)|0);
           HEAP32[$vararg_buffer1>>2] = $64;
           _g_log(0,16,127566,$vararg_buffer1);
           STACKTOP = sp;return;
          }
         }
        }
       }
      }
     } while(0);
     HEAP32[$0>>2] = 0;
     $65 = HEAP32[$14>>2]|0;
     $66 = ((($65)) + 38|0);
     $67 = HEAP16[$66>>1]|0;
     $68 = $67&65535;
     $69 = HEAP32[$14>>2]|0;
     $70 = ((($69)) + 36|0);
     $71 = HEAP16[$70>>1]|0;
     $72 = $71&65535;
     $73 = (0 - ($68))|0;
     $74 = (($0) + ($73)|0);
     $75 = (($72) + ($68))|0;
     _g_slice_free1($75,$74);
     _g_type_class_unref($19);
     STACKTOP = sp;return;
    }
   }
  }
 }
 $21 = ($2|0)==(0);
 if ($21) {
  $$0$i29 = 124803;
 } else {
  if ($3) {
   $22 = $2 & -4;
   $23 = $22;
   $$0$i$i = $23;
  } else {
   $24 = $2 >>> 2;
   $25 = (141120 + ($24<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $$0$i$i = $26;
  }
  $27 = ($$0$i$i|0)==(0|0);
  if ($27) {
   $$0$i29 = 124793;
  } else {
   $28 = ((($$0$i$i)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (_g_quark_to_string($29)|0);
   $$0$i29 = $30;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i29;
 _g_log(0,16,127503,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_type_add_interface_check($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35946]|0;
 $3 = (($2) + 1)|0;
 HEAP32[35946] = $3;
 $4 = HEAP32[35947]|0;
 $5 = (_g_realloc_n($4,$3,8)|0);
 HEAP32[35947] = $5;
 $6 = (($5) + ($2<<3)|0);
 HEAP32[$6>>2] = $0;
 $7 = (((($5) + ($2<<3)|0)) + 4|0);
 HEAP32[$7>>2] = $1;
 return;
}
function _g_type_register_fundamental($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i34 = 0, $$0$i35 = 0, $$033$i = 0, $$036$i = 0, $$06375$i = 0, $$1$lcssa$i = 0, $$134$i = 0, $$137$i = 0, $$170$i = 0, $$2$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer2 = 0;
 var $vararg_buffer5 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $5 = HEAP32[35945]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  _g_assertion_message_expr(0,125112,2785,127630,127658);
  // unreachable;
 }
 $7 = (_check_type_name_I($1)|0);
 $8 = ($7|0)==(0);
 if ($8) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = $0 & 3;
 $10 = ($9|0)!=(0);
 $11 = ($0>>>0)>(1020);
 $or$cond = $11 | $10;
 if ($or$cond) {
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $0;
  _g_log(0,16,127682,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $12 = HEAP32[$3>>2]|0;
 $13 = $12 & 3;
 $14 = ($13|0)==(2);
 if ($14) {
  HEAP32[$vararg_buffer2>>2] = $1;
  _g_log(0,16,127750,$vararg_buffer2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $15 = $0 >>> 2;
 $16 = (141120 + ($15<<2)|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0|0);
 if (!($18)) {
  $19 = ($0|0)==(0);
  if ($19) {
   $$0$i34 = 124803;
  } else {
   $20 = ((($17)) + 24|0);
   $21 = HEAP32[$20>>2]|0;
   $22 = (_g_quark_to_string($21)|0);
   $$0$i34 = $22;
  }
  HEAP32[$vararg_buffer5>>2] = $$0$i34;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = $1;
  _g_log(0,16,127818,$vararg_buffer5);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $23 = HEAP32[29757]|0;
 $24 = ($15|0)==($23|0);
 if ($24) {
  $25 = (($15) + 1)|0;
  HEAP32[29757] = $25;
 }
 $26 = $12 & 15;
 $27 = (_type_node_any_new_W(0,$0,$1,0,$26)|0);
 $28 = ((($27)) + 12|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = $29 & 255;
 $31 = (((($27)) + 40|0) + ($30<<2)|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ((($27)) + 40|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ($32|0)==($34|0);
 do {
  if ($35) {
   $$0$i35 = $27;
  } else {
   $36 = ($32>>>0)>(1020);
   if ($36) {
    $37 = $32 & -4;
    $38 = $37;
    $$0$i35 = $38;
    break;
   } else {
    $39 = $32 >>> 2;
    $40 = (141120 + ($39<<2)|0);
    $41 = HEAP32[$40>>2]|0;
    $$0$i35 = $41;
    break;
   }
  }
 } while(0);
 $42 = ($$0$i35|0)==(0|0);
 $43 = ((($$0$i35)) + -4|0);
 $44 = $42 ? 0 : $43;
 HEAP32[$44>>2] = $26;
 $45 = $4 & 48;
 $46 = ($45|0)==(0);
 if (!($46)) {
  $47 = HEAP32[$28>>2]|0;
  $48 = $47 & 131072;
  $49 = ($48|0)==(0);
  if (!($49)) {
   $50 = ((($27)) + 20|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = ($51|0)==(0|0);
   if (!($52)) {
    $53 = HEAP32[$50>>2]|0;
    $54 = ((($53)) + 32|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ($55|0)==(0|0);
    if (!($56)) {
     $57 = ((($27)) + 24|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (_g_quark_to_string($58)|0);
     HEAP32[$vararg_buffer9>>2] = $59;
     _g_log(0,16,127875,$vararg_buffer9);
    }
   }
  }
 }
 $60 = HEAP32[35945]|0;
 $$idx$i = ((($27)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $61 = ($60|0)!=(0);
 $62 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i = $61 & $62;
 L37: do {
  if ($or$cond$i) {
   $63 = HEAP32[$$idx$val$i>>2]|0;
   $64 = ($63|0)==(0);
   if ($64) {
    $65 = $4;
    $110 = $65;$85 = $$idx$val$i;
    break;
   }
   $66 = ((($$idx$val$i)) + 4|0);
   $67 = HEAP32[$66>>2]|0;
   $68 = ((($67)) + -8|0);
   $$033$i = $68;$$036$i = $63;
   while(1) {
    $69 = (($$036$i) + 1)|0;
    $70 = $69 >>> 1;
    $71 = (($$033$i) + ($70<<3)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)==($60|0);
    if ($73) {
     break;
    }
    $74 = ($72>>>0)<($60>>>0);
    $75 = (($$036$i) - ($70))|0;
    $76 = (($70) + -1)|0;
    $$137$i = $74 ? $75 : $76;
    $$134$i = $74 ? $71 : $$033$i;
    $77 = ($$137$i|0)==(0);
    if ($77) {
     $$2$i = 0;
     label = 30;
     break L37;
    } else {
     $$033$i = $$134$i;$$036$i = $$137$i;
    }
   }
   $78 = (((($$033$i) + ($70<<3)|0)) + 4|0);
   $79 = HEAP32[$78>>2]|0;
   $$2$i = $79;
   label = 30;
  } else {
   $$2$i = 0;
   label = 30;
  }
 } while(0);
 if ((label|0) == 30) {
  $80 = $$2$i | $4;
  $81 = $80;
  $82 = ($$idx$val$i|0)==(0|0);
  if ($82) {
   $83 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx$i>>2] = $83;
   $110 = $81;$85 = $83;
  } else {
   $110 = $81;$85 = $$idx$val$i;
  }
 }
 $84 = ((($85)) + 4|0);
 $86 = HEAP32[$84>>2]|0;
 $87 = HEAP32[$85>>2]|0;
 $88 = ($87|0)==(0);
 do {
  if ($88) {
   $$lcssa65$i = 1;
   label = 38;
  } else {
   $$06375$i = 0;
   while(1) {
    $89 = (($86) + ($$06375$i<<3)|0);
    $90 = HEAP32[$89>>2]|0;
    $91 = ($90|0)==($60|0);
    if ($91) {
     label = 35;
     break;
    }
    $93 = (($$06375$i) + 1)|0;
    $94 = ($93>>>0)<($87>>>0);
    if ($94) {
     $$06375$i = $93;
    } else {
     label = 37;
     break;
    }
   }
   if ((label|0) == 35) {
    $92 = (((($86) + ($$06375$i<<3)|0)) + 4|0);
    $$sink = $92;
    break;
   }
   else if ((label|0) == 37) {
    $phitmp$i = (($87) + 1)|0;
    $$lcssa65$i = $phitmp$i;
    label = 38;
    break;
   }
  }
 } while(0);
 if ((label|0) == 38) {
  HEAP32[$85>>2] = $$lcssa65$i;
  $95 = (_g_realloc_n($86,$$lcssa65$i,8)|0);
  HEAP32[$84>>2] = $95;
  $96 = HEAP32[$85>>2]|0;
  $97 = ($96|0)==(1);
  L60: do {
   if ($97) {
    $$1$lcssa$i = 0;$$lcssa$i = 1;
   } else {
    $98 = (($96) + -1)|0;
    $$170$i = 0;
    while(1) {
     $99 = (($95) + ($$170$i<<3)|0);
     $100 = HEAP32[$99>>2]|0;
     $101 = ($100>>>0)>($60>>>0);
     if ($101) {
      $$1$lcssa$i = $$170$i;$$lcssa$i = $96;
      break L60;
     }
     $102 = (($$170$i) + 1)|0;
     $103 = ($102>>>0)<($98>>>0);
     if ($103) {
      $$170$i = $102;
     } else {
      $$1$lcssa$i = $102;$$lcssa$i = $96;
      break;
     }
    }
   }
  } while(0);
  $104 = (($95) + ($$1$lcssa$i<<3)|0);
  $105 = ((($104)) + 8|0);
  $106 = (($$lcssa$i) - ($$1$lcssa$i))|0;
  $107 = $106 << 3;
  $108 = (($107) + -8)|0;
  _memmove(($105|0),($104|0),($108|0))|0;
  HEAP32[$104>>2] = $60;
  $109 = (((($95) + ($$1$lcssa$i<<3)|0)) + 4|0);
  $$sink = $109;
 }
 HEAP32[$$sink>>2] = $110;
 $111 = HEAP32[$28>>2]|0;
 $112 = $111 & 255;
 $113 = (((($27)) + 40|0) + ($112<<2)|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = (_check_type_info_I(0,$114,$1,$2)|0);
 $116 = ($115|0)==(0);
 if (!($116)) {
  $117 = ((($2)) + 32|0);
  $118 = HEAP32[$117>>2]|0;
  $119 = (_check_value_table_I($1,$118)|0);
  $120 = ($119|0)==(0);
  if ($120) {
   $122 = 0;
  } else {
   $121 = HEAP32[$117>>2]|0;
   $122 = $121;
  }
  _type_data_make_W($27,$2,$122);
 }
 $123 = HEAP32[$33>>2]|0;
 $$0 = $123;
 STACKTOP = sp;return ($$0|0);
}
function _check_type_name_I($0) {
 $0 = $0|0;
 var $$02740 = 0, $$028 = 0, $$041 = 0, $$041$ph = 0, $$off = 0, $$off33 = 0, $$off36 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $memchr = 0, $narrow = 0, $or$cond39 = 0, $phitmp = 0, $spec$select = 0, $vararg_buffer = 0;
 var $vararg_buffer1 = 0, $vararg_buffer4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if (!($2)) {
  $3 = ((($0)) + 1|0);
  $4 = HEAP8[$3>>0]|0;
  $5 = ($4<<24>>24)==(0);
  if (!($5)) {
   $6 = ((($0)) + 2|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = ($7<<24>>24)==(0);
   if (!($8)) {
    $$off = (($1) + -65)<<24>>24;
    $9 = ($$off&255)<(26);
    if ($9) {
     $$041$ph = 1;
    } else {
     $$off33 = (($1) + -97)<<24>>24;
     $10 = ($$off33&255)<(26);
     $11 = ($1<<24>>24)==(95);
     $narrow = $11 | $10;
     $spec$select = $narrow&1;
     $$041$ph = $spec$select;
    }
    $$02740 = $3;$$041 = $$041$ph;$13 = $4;
    while(1) {
     $12 = $13 & -33;
     $14 = (($12) + -65)<<24>>24;
     $15 = ($14&255)<(26);
     $$off36 = (($13) + -48)<<24>>24;
     $16 = ($$off36&255)<(10);
     $or$cond39 = $16 | $15;
     if ($or$cond39) {
      $20 = 1;
     } else {
      $17 = $13 << 24 >> 24;
      $memchr = (_memchr(128007,$17,4)|0);
      $18 = ($memchr|0)!=(0|0);
      $20 = $18;
     }
     $19 = $20&1;
     $21 = $$041 & $19;
     $22 = ((($$02740)) + 1|0);
     $23 = HEAP8[$22>>0]|0;
     $24 = ($23<<24>>24)==(0);
     if ($24) {
      break;
     } else {
      $$02740 = $22;$$041 = $21;$13 = $23;
     }
    }
    $phitmp = ($21|0)==(0);
    if ($phitmp) {
     HEAP32[$vararg_buffer1>>2] = $0;
     _g_log(0,16,128011,$vararg_buffer1);
     $$028 = 0;
     STACKTOP = sp;return ($$028|0);
    }
    $25 = HEAP32[35956]|0;
    $26 = (_g_hash_table_lookup($25,$0)|0);
    $27 = ($26|0)==(0|0);
    if ($27) {
     $$028 = 1;
     STACKTOP = sp;return ($$028|0);
    }
    HEAP32[$vararg_buffer4>>2] = $0;
    _g_log(0,16,128054,$vararg_buffer4);
    $$028 = 0;
    STACKTOP = sp;return ($$028|0);
   }
  }
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,127979,$vararg_buffer);
 $$028 = 0;
 STACKTOP = sp;return ($$028|0);
}
function _type_node_any_new_W($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$096$in = 0, $$099100 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($0|0)!=(0|0);
 if ($5) {
  $6 = ((($0)) + 12|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = $7 & 255;
  $9 = (($8) + 1)|0;
  $11 = $9;
 } else {
  $11 = 0;
 }
 $10 = $11 << 2;
 $12 = $5 ? 48 : 52;
 $13 = (($12) + ($10))|0;
 $14 = (_g_malloc0($13)|0);
 if ($5) {
  $18 = $14;
  $$0 = $18;$$096$in = $14;
 } else {
  $15 = ((($14)) + 4|0);
  $16 = $1 >>> 2;
  $17 = (141120 + ($16<<2)|0);
  HEAP32[$17>>2] = $15;
  $$0 = $1;$$096$in = $15;
 }
 $19 = $$0 & 3;
 $20 = ($19|0)==(0);
 if (!($20)) {
  _g_assertion_message_expr(0,125112,468,127932,127952);
  // unreachable;
 }
 $21 = ((($$096$in)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = $11 & 255;
 $24 = $22 & -256;
 $25 = $24 | $23;
 HEAP32[$21>>2] = $25;
 $26 = ((($$096$in)) + 40|0);
 HEAP32[$26>>2] = $$0;
 $27 = ((($$096$in)) + 44|0);
 do {
  if ($5) {
   $38 = ((($0)) + 40|0);
   $39 = ((($0)) + 12|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = $40 << 2;
   $42 = $41 & 1020;
   $43 = (($42) + 8)|0;
   _memcpy(($27|0),($38|0),($43|0))|0;
   $44 = $40 & 131072;
   $45 = $25 & -393217;
   $46 = $44 | $45;
   $47 = $40 & 262144;
   $48 = $46 | $47;
   HEAP32[$21>>2] = $48;
   $49 = (((($$096$in)) + 40|0) + ($23<<2)|0);
   $50 = HEAP32[$49>>2]|0;
   $51 = ($50|0)==(8);
   if ($51) {
    $52 = $48 & -130817;
    HEAP32[$21>>2] = $52;
    $53 = ((($$096$in)) + 36|0);
    HEAP32[$53>>2] = 0;
   } else {
    $54 = ((($0)) + 32|0);
    $55 = (__g_atomic_array_copy($54,4,0)|0);
    $56 = ($55|0)==(0|0);
    if (!($56)) {
     $57 = ((($55)) + -4|0);
     $58 = HEAP32[$57>>2]|0;
     $59 = (($58) + -4)|0;
     $60 = ($59>>>0)>(11);
     if ($60) {
      $61 = ((($55)) + 4|0);
      $62 = (($59>>>0) / 12)&-1;
      $$099100 = 0;
      while(1) {
       $63 = (((($61) + (($$099100*12)|0)|0)) + 4|0);
       HEAP32[$63>>2] = 0;
       $64 = (((($61) + (($$099100*12)|0)|0)) + 8|0);
       HEAP32[$64>>2] = 0;
       $65 = (($$099100) + 1)|0;
       $66 = ($65>>>0)<($62>>>0);
       if ($66) {
        $$099100 = $65;
       } else {
        break;
       }
      }
     }
     $67 = ((($$096$in)) + 32|0);
     __g_atomic_array_update($67,$55);
    }
   }
   $68 = ((($0)) + 8|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = (($69) + 1)|0;
   HEAP32[$68>>2] = $70;
   $71 = ((($0)) + 16|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = (_g_realloc_n($72,$70,4)|0);
   HEAP32[$71>>2] = $73;
   $74 = (($73) + ($69<<2)|0);
   HEAP32[$74>>2] = $$0;
  } else {
   HEAP32[$27>>2] = 0;
   $28 = $4 << 17;
   $29 = $25 & -393217;
   $30 = $28 & 393216;
   $31 = $30 | $29;
   HEAP32[$21>>2] = $31;
   $32 = (((($$096$in)) + 40|0) + ($23<<2)|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)==(8);
   if ($34) {
    $35 = $31 & -130817;
    HEAP32[$21>>2] = $35;
    $36 = ((($$096$in)) + 36|0);
    HEAP32[$36>>2] = 0;
    break;
   } else {
    $37 = ((($$096$in)) + 32|0);
    __g_atomic_array_init($37);
    break;
   }
  }
 } while(0);
 $75 = ((($$096$in)) + 4|0);
 HEAP32[$75>>2] = $3;
 $76 = ((($$096$in)) + 8|0);
 HEAP32[$76>>2] = 0;
 $77 = ((($$096$in)) + 16|0);
 HEAP32[$77>>2] = 0;
 $78 = ((($$096$in)) + 20|0);
 HEAP32[$78>>2] = 0;
 $79 = (_g_quark_from_string($2)|0);
 $80 = ((($$096$in)) + 24|0);
 HEAP32[$80>>2] = $79;
 $81 = ((($$096$in)) + 28|0);
 HEAP32[$81>>2] = 0;
 $82 = HEAP32[35956]|0;
 $83 = (_g_quark_to_string($79)|0);
 $84 = $$0;
 (_g_hash_table_insert($82,$83,$84)|0);
 $85 = HEAP32[35942]|0;
 $86 = (($85) + 1)|0;
 HEAP32[35942] = $86;
 return ($$096$in|0);
}
function _g_type_register_static_simple($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $7 = sp;
 $8 = $2&65535;
 HEAP16[$7>>1] = $8;
 $9 = ((($7)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($7)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($7)) + 12|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($7)) + 16|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($7)) + 20|0);
 HEAP32[$13>>2] = 0;
 $14 = $4&65535;
 $15 = ((($7)) + 24|0);
 HEAP16[$15>>1] = $14;
 $16 = ((($7)) + 26|0);
 HEAP16[$16>>1] = 0;
 $17 = ((($7)) + 28|0);
 HEAP32[$17>>2] = $5;
 $18 = ((($7)) + 32|0);
 HEAP32[$18>>2] = 0;
 $19 = (_g_type_register_static($0,$1,$7,$6)|0);
 STACKTOP = sp;return ($19|0);
}
function _g_type_register_static($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$033$i = 0, $$036$i = 0, $$06375$i = 0, $$1$lcssa$i = 0, $$134$i = 0, $$137$i = 0, $$170$i = 0, $$2$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $or$cond$i = 0, $phitmp$i = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $4 = HEAP32[35945]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  _g_assertion_message_expr(0,125112,2902,128089,127658);
  // unreachable;
 }
 $6 = (_check_type_name_I($1)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = (_check_derivation_I($0,$1)|0);
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  HEAP32[$vararg_buffer>>2] = $1;
  _g_log(0,16,128112,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = ($0>>>0)>(1020);
 if ($13) {
  $14 = $0 & -4;
  $15 = $14;
  $$0$i = $15;
 } else {
  $16 = $0 >>> 2;
  $17 = (141120 + ($16<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  $$0$i = $18;
 }
 _type_data_ref_Wm($$0$i);
 $19 = ((($$0$i)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 & 255;
 $22 = (((($$0$i)) + 40|0) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (_check_type_info_I($$0$i,$23,$1,$2)|0);
 $25 = ($24|0)==(0);
 if ($25) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $26 = ($$0$i|0)==(0|0);
 if ($26) {
  _g_assertion_message_expr(0,125112,585,128159,128175);
  // unreachable;
 }
 $27 = HEAP32[$19>>2]|0;
 $28 = $27 & 255;
 $29 = ($28|0)==(255);
 if ($29) {
  _g_assertion_message_expr(0,125112,586,128159,128181);
  // unreachable;
 }
 $30 = ((($$0$i)) + 8|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = ($31|0)==(-1);
 if ($32) {
  _g_assertion_message_expr(0,125112,587,128159,128212);
  // unreachable;
 }
 $33 = (((($$0$i)) + 40|0) + ($28<<2)|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = (_type_node_any_new_W($$0$i,$34,$1,0,0)|0);
 $36 = $3 & 48;
 $37 = ($36|0)==(0);
 if (!($37)) {
  $38 = ((($35)) + 12|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = $39 & 131072;
  $41 = ($40|0)==(0);
  if (!($41)) {
   $42 = ((($35)) + 20|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ($43|0)==(0|0);
   if (!($44)) {
    $45 = HEAP32[$42>>2]|0;
    $46 = ((($45)) + 32|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = ($47|0)==(0|0);
    if (!($48)) {
     $49 = ((($35)) + 24|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = (_g_quark_to_string($50)|0);
     HEAP32[$vararg_buffer1>>2] = $51;
     _g_log(0,16,127875,$vararg_buffer1);
    }
   }
  }
 }
 $52 = HEAP32[35945]|0;
 $$idx$i = ((($35)) + 28|0);
 $$idx$val$i = HEAP32[$$idx$i>>2]|0;
 $53 = ($52|0)!=(0);
 $54 = ($$idx$val$i|0)!=(0|0);
 $or$cond$i = $53 & $54;
 L36: do {
  if ($or$cond$i) {
   $55 = HEAP32[$$idx$val$i>>2]|0;
   $56 = ($55|0)==(0);
   if ($56) {
    $57 = $3;
    $102 = $57;$77 = $$idx$val$i;
    break;
   }
   $58 = ((($$idx$val$i)) + 4|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = ((($59)) + -8|0);
   $$033$i = $60;$$036$i = $55;
   while(1) {
    $61 = (($$036$i) + 1)|0;
    $62 = $61 >>> 1;
    $63 = (($$033$i) + ($62<<3)|0);
    $64 = HEAP32[$63>>2]|0;
    $65 = ($64|0)==($52|0);
    if ($65) {
     break;
    }
    $66 = ($64>>>0)<($52>>>0);
    $67 = (($$036$i) - ($62))|0;
    $68 = (($62) + -1)|0;
    $$137$i = $66 ? $67 : $68;
    $$134$i = $66 ? $63 : $$033$i;
    $69 = ($$137$i|0)==(0);
    if ($69) {
     $$2$i = 0;
     label = 29;
     break L36;
    } else {
     $$033$i = $$134$i;$$036$i = $$137$i;
    }
   }
   $70 = (((($$033$i) + ($62<<3)|0)) + 4|0);
   $71 = HEAP32[$70>>2]|0;
   $$2$i = $71;
   label = 29;
  } else {
   $$2$i = 0;
   label = 29;
  }
 } while(0);
 if ((label|0) == 29) {
  $72 = $$2$i | $3;
  $73 = $72;
  $74 = ($$idx$val$i|0)==(0|0);
  if ($74) {
   $75 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx$i>>2] = $75;
   $102 = $73;$77 = $75;
  } else {
   $102 = $73;$77 = $$idx$val$i;
  }
 }
 $76 = ((($77)) + 4|0);
 $78 = HEAP32[$76>>2]|0;
 $79 = HEAP32[$77>>2]|0;
 $80 = ($79|0)==(0);
 do {
  if ($80) {
   $$lcssa65$i = 1;
   label = 37;
  } else {
   $$06375$i = 0;
   while(1) {
    $81 = (($78) + ($$06375$i<<3)|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ($82|0)==($52|0);
    if ($83) {
     label = 34;
     break;
    }
    $85 = (($$06375$i) + 1)|0;
    $86 = ($85>>>0)<($79>>>0);
    if ($86) {
     $$06375$i = $85;
    } else {
     label = 36;
     break;
    }
   }
   if ((label|0) == 34) {
    $84 = (((($78) + ($$06375$i<<3)|0)) + 4|0);
    $$sink = $84;
    break;
   }
   else if ((label|0) == 36) {
    $phitmp$i = (($79) + 1)|0;
    $$lcssa65$i = $phitmp$i;
    label = 37;
    break;
   }
  }
 } while(0);
 if ((label|0) == 37) {
  HEAP32[$77>>2] = $$lcssa65$i;
  $87 = (_g_realloc_n($78,$$lcssa65$i,8)|0);
  HEAP32[$76>>2] = $87;
  $88 = HEAP32[$77>>2]|0;
  $89 = ($88|0)==(1);
  L59: do {
   if ($89) {
    $$1$lcssa$i = 0;$$lcssa$i = 1;
   } else {
    $90 = (($88) + -1)|0;
    $$170$i = 0;
    while(1) {
     $91 = (($87) + ($$170$i<<3)|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ($92>>>0)>($52>>>0);
     if ($93) {
      $$1$lcssa$i = $$170$i;$$lcssa$i = $88;
      break L59;
     }
     $94 = (($$170$i) + 1)|0;
     $95 = ($94>>>0)<($90>>>0);
     if ($95) {
      $$170$i = $94;
     } else {
      $$1$lcssa$i = $94;$$lcssa$i = $88;
      break;
     }
    }
   }
  } while(0);
  $96 = (($87) + ($$1$lcssa$i<<3)|0);
  $97 = ((($96)) + 8|0);
  $98 = (($$lcssa$i) - ($$1$lcssa$i))|0;
  $99 = $98 << 3;
  $100 = (($99) + -8)|0;
  _memmove(($97|0),($96|0),($100|0))|0;
  HEAP32[$96>>2] = $52;
  $101 = (((($87) + ($$1$lcssa$i<<3)|0)) + 4|0);
  $$sink = $101;
 }
 HEAP32[$$sink>>2] = $102;
 $103 = ((($35)) + 40|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ((($2)) + 32|0);
 $106 = HEAP32[$105>>2]|0;
 $107 = (_check_value_table_I($1,$106)|0);
 $108 = ($107|0)==(0);
 if ($108) {
  $110 = 0;
 } else {
  $109 = HEAP32[$105>>2]|0;
  $110 = $109;
 }
 _type_data_make_W($35,$2,$110);
 $$0 = $104;
 STACKTOP = sp;return ($$0|0);
}
function _check_derivation_I($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i18 = 0, $$0$i19 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if ($8) {
  $9 = ($0|0)==(0);
  if ($9) {
   $$0$i19 = 124803;
  } else {
   if ($2) {
    $10 = $0 & -4;
    $11 = $10;
    $$0$i$i = $11;
   } else {
    $12 = $0 >>> 2;
    $13 = (141120 + ($12<<2)|0);
    $14 = HEAP32[$13>>2]|0;
    $$0$i$i = $14;
   }
   $15 = ($$0$i$i|0)==(0|0);
   if ($15) {
    $$0$i19 = 124793;
   } else {
    $16 = ((($$0$i$i)) + 24|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = (_g_quark_to_string($17)|0);
    $$0$i19 = $18;
   }
  }
  HEAP32[$vararg_buffer>>2] = $1;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i19;
  _g_log(0,16,128247,$vararg_buffer);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $19 = ((($$0$i)) + 12|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = $20 & 255;
 $22 = (((($$0$i)) + 40|0) + ($21<<2)|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ((($$0$i)) + 40|0);
 $25 = HEAP32[$24>>2]|0;
 $26 = ($23|0)==($25|0);
 do {
  if ($26) {
   $$0$i18 = $$0$i;
  } else {
   $27 = ($23>>>0)>(1020);
   if ($27) {
    $28 = $23 & -4;
    $29 = $28;
    $$0$i18 = $29;
    break;
   } else {
    $30 = $23 >>> 2;
    $31 = (141120 + ($30<<2)|0);
    $32 = HEAP32[$31>>2]|0;
    $$0$i18 = $32;
    break;
   }
  }
 } while(0);
 $33 = ($$0$i18|0)==(0|0);
 $34 = ((($$0$i18)) + -4|0);
 $35 = $33 ? 0 : $34;
 $36 = HEAP32[$35>>2]|0;
 $37 = $36 & 4;
 $38 = ($37|0)==(0);
 if ($38) {
  $39 = ((($$0$i)) + 24|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (_g_quark_to_string($40)|0);
  HEAP32[$vararg_buffer2>>2] = $1;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $41;
  _g_log(0,16,128301,$vararg_buffer2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $42 = ($23|0)!=($0|0);
 $43 = $36 & 8;
 $44 = ($43|0)==(0);
 $or$cond = $42 & $44;
 if (!($or$cond)) {
  $$0 = 1;
  STACKTOP = sp;return ($$0|0);
 }
 $45 = ((($$0$i)) + 24|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (_g_quark_to_string($46)|0);
 HEAP32[$vararg_buffer6>>2] = $1;
 $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
 HEAP32[$vararg_ptr9>>2] = $47;
 _g_log(0,16,128356,$vararg_buffer6);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_check_instance_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$us$i = 0, $$0$i24 = 0, $$0$us$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5>>>0)>(1020);
 if ($6) {
  $7 = $5 & -4;
  $8 = $7;
  $$0$i = $8;
 } else {
  $9 = $5 >>> 2;
  $10 = (141120 + ($9<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $$0$i = $11;
 }
 $12 = ($1>>>0)>(1020);
 if ($12) {
  $13 = $1 & -4;
  $14 = $13;
  $$0$i24 = $14;
 } else {
  $15 = $1 >>> 2;
  $16 = (141120 + ($15<<2)|0);
  $17 = HEAP32[$16>>2]|0;
  $$0$i24 = $17;
 }
 $18 = ((($$0$i24)) + 12|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = $19 & 255;
 $21 = ((($$0$i)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = $22 & 255;
 $24 = ($$0$i|0)==(0|0);
 if ($24) {
  $$0 = 0;
  return ($$0|0);
 }
 $25 = $22 & 262144;
 $26 = ($25|0)!=(0);
 $27 = ($$0$i24|0)!=(0|0);
 $or$cond = $27 & $26;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $28 = ($23>>>0)<($20>>>0);
 if (!($28)) {
  $29 = (($23) - ($20))|0;
  $30 = (((($$0$i)) + 40|0) + ($29<<2)|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($$0$i24)) + 40|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ($31|0)==($33|0);
  if ($34) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $35 = (((($$0$i24)) + 40|0) + ($20<<2)|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(8);
 if (!($37)) {
  $$0 = 0;
  return ($$0|0);
 }
 $38 = ((($$0$i)) + 32|0);
 $39 = (_g_atomic_pointer_get($38)|0);
 $40 = ((($$0$i24)) + 32|0);
 $41 = ((($$0$i24)) + 40|0);
 $$0$us$i = $38;
 while(1) {
  $42 = ($$0$us$i|0)==(0|0);
  if ($42) {
   $$039$i$us$i = 0;
  } else {
   $43 = (_g_atomic_pointer_get($40)|0);
   $44 = ((($$0$us$i)) + -4|0);
   $$0$i$us$i = $40;
   while(1) {
    $45 = HEAP32[$$0$us$i>>2]|0;
    $46 = ($$0$i$us$i|0)==(0|0);
    if ($46) {
     $$040$i$us$i = 0;
    } else {
     $47 = ((($$0$i$us$i)) + -4|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = ($45>>>0)<($48>>>0);
     if ($49) {
      $50 = (($$0$i$us$i) + ($45)|0);
      $51 = HEAP8[$50>>0]|0;
      $52 = ($51<<24>>24)==(0);
      if ($52) {
       $$040$i$us$i = 0;
      } else {
       $53 = $51&255;
       $54 = (($53) + -1)|0;
       $55 = HEAP32[$44>>2]|0;
       $56 = (($55) + -4)|0;
       $57 = (($56>>>0) / 12)&-1;
       $58 = ($54>>>0)<($57>>>0);
       $59 = (((($$0$us$i)) + 4|0) + (($54*12)|0)|0);
       if ($58) {
        $60 = HEAP32[$59>>2]|0;
        $61 = HEAP32[$41>>2]|0;
        $62 = ($60|0)==($61|0);
        $spec$select$i$us$i = $62 ? $59 : 0;
        $$040$i$us$i = $spec$select$i$us$i;
       } else {
        $$040$i$us$i = 0;
       }
      }
     } else {
      $$040$i$us$i = 0;
     }
    }
    $63 = (_g_atomic_pointer_get($40)|0);
    $64 = ($$0$i$us$i|0)==($63|0);
    if ($64) {
     $$039$i$us$i = $$040$i$us$i;
     break;
    } else {
     $$0$i$us$i = $40;
    }
   }
  }
  $65 = (_g_atomic_pointer_get($38)|0);
  $66 = ($$0$us$i|0)==($38|0);
  if ($66) {
   break;
  } else {
   $$0$us$i = $38;
  }
 }
 $67 = ($$039$i$us$i|0)!=(0|0);
 $68 = $67&1;
 $$0 = $68;
 return ($$0|0);
}
function _g_type_interface_peek($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i14 = 0, $$0$i15 = 0, $$040$i$i = 0, $$sroa$0$0 = 0, $$sroa$0$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$i = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($1>>>0)>(1020);
 if ($9) {
  $10 = $1 & -4;
  $11 = $10;
  $$0$i15 = $11;
 } else {
  $12 = $1 >>> 2;
  $13 = (141120 + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $$0$i15 = $14;
 }
 $15 = ($$0$i|0)==(0|0);
 if (!($15)) {
  $16 = ((($$0$i)) + 12|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = $17 & 262144;
  $19 = ($18|0)!=(0);
  $20 = ($$0$i15|0)!=(0|0);
  $or$cond = $20 & $19;
  if ($or$cond) {
   $21 = ((($$0$i15)) + 12|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = $22 & 255;
   $24 = (((($$0$i15)) + 40|0) + ($23<<2)|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ($25|0)==(8);
   if (!($26)) {
    $$sroa$0$2 = 0;
    $59 = $$sroa$0$2;
    STACKTOP = sp;return ($59|0);
   }
   $27 = ((($$0$i)) + 32|0);
   $28 = (_g_atomic_pointer_get($27)|0);
   $29 = ((($$0$i15)) + 32|0);
   $30 = ((($$0$i15)) + 40|0);
   $$0$i14 = $27;
   while(1) {
    $31 = ($$0$i14|0)==(0|0);
    if ($31) {
     $$sroa$0$0 = 0;
    } else {
     $32 = (_g_atomic_pointer_get($29)|0);
     $33 = ((($$0$i14)) + -4|0);
     $$0$i$i = $29;
     while(1) {
      $34 = HEAP32[$$0$i14>>2]|0;
      $35 = ($$0$i$i|0)==(0|0);
      if ($35) {
       $$040$i$i = 0;
      } else {
       $36 = ((($$0$i$i)) + -4|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($34>>>0)<($37>>>0);
       if ($38) {
        $39 = (($$0$i$i) + ($34)|0);
        $40 = HEAP8[$39>>0]|0;
        $41 = ($40<<24>>24)==(0);
        if ($41) {
         $$040$i$i = 0;
        } else {
         $42 = $40&255;
         $43 = (($42) + -1)|0;
         $44 = HEAP32[$33>>2]|0;
         $45 = (($44) + -4)|0;
         $46 = (($45>>>0) / 12)&-1;
         $47 = ($43>>>0)<($46>>>0);
         $48 = (((($$0$i14)) + 4|0) + (($43*12)|0)|0);
         if ($47) {
          $49 = HEAP32[$48>>2]|0;
          $50 = HEAP32[$30>>2]|0;
          $51 = ($49|0)==($50|0);
          $spec$select$i$i = $51 ? $48 : 0;
          $$040$i$i = $spec$select$i$i;
         } else {
          $$040$i$i = 0;
         }
        }
       } else {
        $$040$i$i = 0;
       }
      }
      $52 = (_g_atomic_pointer_get($29)|0);
      $53 = ($$0$i$i|0)==($52|0);
      if ($53) {
       break;
      } else {
       $$0$i$i = $29;
      }
     }
     $54 = ($$040$i$i|0)==(0|0);
     if ($54) {
      $$sroa$0$0 = 0;
     } else {
      $55 = ((($$040$i$i)) + 4|0);
      $56 = HEAP32[$55>>2]|0;
      $$sroa$0$0 = $56;
     }
    }
    $57 = (_g_atomic_pointer_get($27)|0);
    $58 = ($$0$i14|0)==($27|0);
    if ($58) {
     $$sroa$0$2 = $$sroa$0$0;
     break;
    } else {
     $$0$i14 = $27;
    }
   }
   $59 = $$sroa$0$2;
   STACKTOP = sp;return ($59|0);
  }
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,128413,$vararg_buffer);
 $$sroa$0$2 = 0;
 $59 = $$sroa$0$2;
 STACKTOP = sp;return ($59|0);
}
function _g_type_add_interface_static($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i12 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = (_check_add_interface_L($0,$1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  STACKTOP = sp;return;
 }
 $5 = ($0>>>0)>(1020);
 if ($5) {
  $6 = $0 & -4;
  $7 = $6;
  $$0$i = $7;
 } else {
  $8 = $0 >>> 2;
  $9 = (141120 + ($8<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $$0$i = $10;
 }
 $11 = ($1>>>0)>(1020);
 if ($11) {
  $12 = $1 & -4;
  $13 = $12;
  $$0$i12 = $13;
 } else {
  $14 = $1 >>> 2;
  $15 = (141120 + ($14<<2)|0);
  $16 = HEAP32[$15>>2]|0;
  $$0$i12 = $16;
 }
 $17 = ((($$0$i)) + 40|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($2)) + 4|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ($20|0)==(0|0);
 if ($21) {
  $22 = ((($2)) + 8|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ($23|0)==(0|0);
  if (!($24)) {
   label = 10;
  }
 } else {
  label = 10;
 }
 if ((label|0) == 10) {
  $25 = HEAP32[$2>>2]|0;
  $26 = ($25|0)==(0|0);
  if ($26) {
   $27 = ((($$0$i12)) + 24|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (_g_quark_to_string($28)|0);
   $30 = ($18|0)==(0);
   if ($30) {
    $$0$i$i = 124803;
   } else {
    $31 = ($18>>>0)>(1020);
    if ($31) {
     $32 = $18 & -4;
     $33 = $32;
     $$0$i$i$i = $33;
    } else {
     $34 = $18 >>> 2;
     $35 = (141120 + ($34<<2)|0);
     $36 = HEAP32[$35>>2]|0;
     $$0$i$i$i = $36;
    }
    $37 = ($$0$i$i$i|0)==(0|0);
    if ($37) {
     $$0$i$i = 124793;
    } else {
     $38 = ((($$0$i$i$i)) + 24|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = (_g_quark_to_string($39)|0);
     $$0$i$i = $40;
    }
   }
   HEAP32[$vararg_buffer>>2] = $29;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $$0$i$i;
   _g_log(0,16,126078,$vararg_buffer);
   STACKTOP = sp;return;
  }
 }
 _type_add_interface_Wm($$0$i,$$0$i12,$2,0);
 STACKTOP = sp;return;
}
function _check_add_interface_L($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i58 = 0, $$0$i$i60 = 0, $$0$i$i68 = 0, $$0$i$i73 = 0, $$0$i56 = 0, $$0$i59 = 0, $$0$i62 = 0, $$0$i64 = 0, $$0$i66 = 0, $$014$i = 0, $$033$i$i = 0, $$036$i$i = 0, $$040$i$i = 0, $$040$i$i70 = 0, $$040$i$i75 = 0, $$054 = 0, $$085 = 0, $$134$i$i = 0;
 var $$137$i$i = 0, $$idx$i = 0, $$idx$val$i = 0, $$pre = 0, $$pre$phi94Z2D = 0, $$pre91 = 0, $$pre92 = 0, $$pre93 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0;
 var $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0;
 var $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0;
 var $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0;
 var $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0;
 var $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0;
 var $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0;
 var $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0;
 var $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0;
 var $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i$i = 0, $spec$select$i$i = 0, $spec$select$i$i69 = 0, $spec$select$i$i74 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer14 = 0, $vararg_buffer19 = 0, $vararg_buffer5 = 0;
 var $vararg_buffer9 = 0, $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr22 = 0, $vararg_ptr23 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer19 = sp + 56|0;
 $vararg_buffer14 = sp + 40|0;
 $vararg_buffer9 = sp + 24|0;
 $vararg_buffer5 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($1>>>0)>(1020);
 if ($8) {
  $9 = $1 & -4;
  $10 = $9;
  $$0$i56 = $10;
 } else {
  $11 = $1 >>> 2;
  $12 = (141120 + ($11<<2)|0);
  $13 = HEAP32[$12>>2]|0;
  $$0$i56 = $13;
 }
 $14 = ($$0$i|0)==(0|0);
 if (!($14)) {
  $15 = ((($$0$i)) + 12|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = $16 & 262144;
  $18 = ($17|0)==(0);
  if (!($18)) {
   $29 = ($$0$i56|0)==(0|0);
   if (!($29)) {
    $30 = ((($$0$i56)) + 12|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 & 255;
    $33 = (((($$0$i56)) + 40|0) + ($32<<2)|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ($34|0)==(8);
    if ($35) {
     $49 = ((($$0$i)) + 20|0);
     $50 = HEAP32[$49>>2]|0;
     $51 = ($50|0)==(0|0);
     if (!($51)) {
      $52 = HEAP32[$49>>2]|0;
      $53 = ((($52)) + 32|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = ($54|0)==(0|0);
      if (!($55)) {
       $56 = ((($$0$i56)) + 24|0);
       $57 = HEAP32[$56>>2]|0;
       $58 = (_g_quark_to_string($57)|0);
       $59 = ((($$0$i)) + 24|0);
       $60 = HEAP32[$59>>2]|0;
       $61 = (_g_quark_to_string($60)|0);
       HEAP32[$vararg_buffer5>>2] = $58;
       $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
       HEAP32[$vararg_ptr8>>2] = $61;
       _g_log(0,16,128857,$vararg_buffer5);
       $$054 = 0;
       STACKTOP = sp;return ($$054|0);
      }
     }
     $62 = ((($$0$i56)) + 44|0);
     $63 = HEAP32[$62>>2]|0;
     $64 = ($63>>>0)>(1020);
     if ($64) {
      $65 = $63 & -4;
      $66 = $65;
      $$0$i64 = $66;
     } else {
      $67 = $63 >>> 2;
      $68 = (141120 + ($67<<2)|0);
      $69 = HEAP32[$68>>2]|0;
      $$0$i64 = $69;
     }
     $70 = ((($$0$i64)) + 44|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = ($71|0)==(0);
     do {
      if ($72) {
       $$pre$phi94Z2D = $33;
      } else {
       $73 = ((($$0$i64)) + 12|0);
       $74 = HEAP32[$73>>2]|0;
       $75 = $74 & 255;
       $76 = (((($$0$i64)) + 40|0) + ($75<<2)|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = ($77|0)==(8);
       if ($78) {
        $79 = ((($$0$i)) + 32|0);
        $80 = HEAP32[$79>>2]|0;
        $81 = ($80|0)==(0|0);
        if (!($81)) {
         $82 = ((($$0$i64)) + 32|0);
         $83 = (_g_atomic_pointer_get($82)|0);
         $84 = ((($80)) + -4|0);
         $85 = ((($$0$i64)) + 40|0);
         $$0$i$i68 = $82;
         while(1) {
          $86 = HEAP32[$80>>2]|0;
          $87 = ($$0$i$i68|0)==(0|0);
          do {
           if ($87) {
            $$040$i$i70 = 0;
           } else {
            $88 = ((($$0$i$i68)) + -4|0);
            $89 = HEAP32[$88>>2]|0;
            $90 = ($86>>>0)<($89>>>0);
            if ($90) {
             $91 = (($$0$i$i68) + ($86)|0);
             $92 = HEAP8[$91>>0]|0;
             $93 = ($92<<24>>24)==(0);
             if ($93) {
              $$040$i$i70 = 0;
             } else {
              $94 = $92&255;
              $95 = (($94) + -1)|0;
              $96 = HEAP32[$84>>2]|0;
              $97 = (($96) + -4)|0;
              $98 = (($97>>>0) / 12)&-1;
              $99 = ($95>>>0)<($98>>>0);
              $100 = (((($80)) + 4|0) + (($95*12)|0)|0);
              if (!($99)) {
               $$040$i$i70 = 0;
               break;
              }
              $101 = HEAP32[$100>>2]|0;
              $102 = HEAP32[$85>>2]|0;
              $103 = ($101|0)==($102|0);
              $spec$select$i$i69 = $103 ? $100 : 0;
              $$040$i$i70 = $spec$select$i$i69;
             }
            } else {
             $$040$i$i70 = 0;
            }
           }
          } while(0);
          $104 = (_g_atomic_pointer_get($82)|0);
          $105 = ($$0$i$i68|0)==($104|0);
          if ($105) {
           break;
          } else {
           $$0$i$i68 = $82;
          }
         }
         $106 = ($$040$i$i70|0)==(0|0);
         if (!($106)) {
          $$pre = HEAP32[$30>>2]|0;
          $$pre92 = $$pre & 255;
          $$pre93 = (((($$0$i56)) + 40|0) + ($$pre92<<2)|0);
          $$pre$phi94Z2D = $$pre93;
          break;
         }
        }
       }
       $107 = ((($$0$i56)) + 24|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = (_g_quark_to_string($108)|0);
       $110 = ((($$0$i)) + 24|0);
       $111 = HEAP32[$110>>2]|0;
       $112 = (_g_quark_to_string($111)|0);
       $113 = ((($$0$i64)) + 24|0);
       $114 = HEAP32[$113>>2]|0;
       $115 = (_g_quark_to_string($114)|0);
       HEAP32[$vararg_buffer9>>2] = $109;
       $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
       HEAP32[$vararg_ptr12>>2] = $112;
       $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
       HEAP32[$vararg_ptr13>>2] = $115;
       _g_log(0,16,128924,$vararg_buffer9);
       $$054 = 0;
       STACKTOP = sp;return ($$054|0);
      }
     } while(0);
     $116 = HEAP32[$$pre$phi94Z2D>>2]|0;
     $117 = ($116|0)==(8);
     L42: do {
      if ($117) {
       $118 = ((($$0$i)) + 32|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119|0)==(0|0);
       if (!($120)) {
        $121 = ((($$0$i56)) + 32|0);
        $122 = (_g_atomic_pointer_get($121)|0);
        $123 = ((($119)) + -4|0);
        $124 = ((($$0$i56)) + 40|0);
        $$0$i$i73 = $121;
        while(1) {
         $125 = HEAP32[$119>>2]|0;
         $126 = ($$0$i$i73|0)==(0|0);
         if ($126) {
          $$040$i$i75 = 0;
         } else {
          $127 = ((($$0$i$i73)) + -4|0);
          $128 = HEAP32[$127>>2]|0;
          $129 = ($125>>>0)<($128>>>0);
          if ($129) {
           $130 = (($$0$i$i73) + ($125)|0);
           $131 = HEAP8[$130>>0]|0;
           $132 = ($131<<24>>24)==(0);
           if ($132) {
            $$040$i$i75 = 0;
           } else {
            $133 = $131&255;
            $134 = (($133) + -1)|0;
            $135 = HEAP32[$123>>2]|0;
            $136 = (($135) + -4)|0;
            $137 = (($136>>>0) / 12)&-1;
            $138 = ($134>>>0)<($137>>>0);
            $139 = (((($119)) + 4|0) + (($134*12)|0)|0);
            if ($138) {
             $140 = HEAP32[$139>>2]|0;
             $141 = HEAP32[$124>>2]|0;
             $142 = ($140|0)==($141|0);
             $spec$select$i$i74 = $142 ? $139 : 0;
             $$040$i$i75 = $spec$select$i$i74;
            } else {
             $$040$i$i75 = 0;
            }
           }
          } else {
           $$040$i$i75 = 0;
          }
         }
         $143 = (_g_atomic_pointer_get($121)|0);
         $144 = ($$0$i$i73|0)==($143|0);
         if ($144) {
          break;
         } else {
          $$0$i$i73 = $121;
         }
        }
        $145 = ($$040$i$i75|0)==(0|0);
        if (!($145)) {
         $146 = ((($$040$i$i75)) + 4|0);
         $147 = HEAP32[$146>>2]|0;
         $148 = ($147|0)==(0|0);
         if ($148) {
          $149 = ((($$0$i)) + 40|0);
          $150 = HEAP32[$149>>2]|0;
          $151 = HEAP32[$30>>2]|0;
          $152 = $151 & 255;
          $153 = (((($$0$i56)) + 40|0) + ($152<<2)|0);
          $154 = HEAP32[$153>>2]|0;
          $155 = ($154|0)==(8);
          if (!($155)) {
           _g_assertion_message_expr(0,125112,1806,125819,125844);
           // unreachable;
          }
          $156 = HEAP32[35943]|0;
          $$idx$i = ((($$0$i56)) + 28|0);
          $$idx$val$i = HEAP32[$$idx$i>>2]|0;
          $157 = ($156|0)!=(0);
          $158 = ($$idx$val$i|0)!=(0|0);
          $or$cond$i$i = $157 & $158;
          if (!($or$cond$i$i)) {
           $$054 = 1;
           STACKTOP = sp;return ($$054|0);
          }
          $159 = HEAP32[$$idx$val$i>>2]|0;
          $160 = ($159|0)==(0);
          if ($160) {
           $$054 = 1;
           STACKTOP = sp;return ($$054|0);
          }
          $161 = ((($$idx$val$i)) + 4|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ((($162)) + -8|0);
          $$033$i$i = $163;$$036$i$i = $159;
          while(1) {
           $164 = (($$036$i$i) + 1)|0;
           $165 = $164 >>> 1;
           $166 = (($$033$i$i) + ($165<<3)|0);
           $167 = HEAP32[$166>>2]|0;
           $168 = ($167|0)==($156|0);
           if ($168) {
            break;
           }
           $169 = ($167>>>0)<($156>>>0);
           $170 = (($$036$i$i) - ($165))|0;
           $171 = (($165) + -1)|0;
           $$137$i$i = $169 ? $170 : $171;
           $$134$i$i = $169 ? $166 : $$033$i$i;
           $172 = ($$137$i$i|0)==(0);
           if ($172) {
            $$054 = 1;
            label = 89;
            break;
           } else {
            $$033$i$i = $$134$i$i;$$036$i$i = $$137$i$i;
           }
          }
          if ((label|0) == 89) {
           STACKTOP = sp;return ($$054|0);
          }
          $173 = (((($$033$i$i) + ($165<<3)|0)) + 4|0);
          $174 = HEAP32[$173>>2]|0;
          $175 = ($174|0)==(0|0);
          if ($175) {
           $$054 = 1;
           STACKTOP = sp;return ($$054|0);
          }
          $$014$i = $174;
          while(1) {
           $176 = HEAP32[$$014$i>>2]|0;
           $177 = ($176|0)==($150|0);
           if ($177) {
            break L42;
           }
           $178 = ((($$014$i)) + 12|0);
           $179 = HEAP32[$178>>2]|0;
           $180 = ($179|0)==(0|0);
           if ($180) {
            $$054 = 1;
            break;
           } else {
            $$014$i = $179;
           }
          }
          STACKTOP = sp;return ($$054|0);
         }
        }
       }
      }
     } while(0);
     $181 = (_find_conforming_child_type_L($$0$i,$$0$i56)|0);
     $182 = ($181|0)==(0|0);
     if (!($182)) {
      $183 = ((($$0$i56)) + 24|0);
      $184 = HEAP32[$183>>2]|0;
      $185 = (_g_quark_to_string($184)|0);
      $186 = ((($$0$i)) + 24|0);
      $187 = HEAP32[$186>>2]|0;
      $188 = (_g_quark_to_string($187)|0);
      $189 = ((($181)) + 24|0);
      $190 = HEAP32[$189>>2]|0;
      $191 = (_g_quark_to_string($190)|0);
      HEAP32[$vararg_buffer14>>2] = $185;
      $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
      HEAP32[$vararg_ptr17>>2] = $188;
      $vararg_ptr18 = ((($vararg_buffer14)) + 8|0);
      HEAP32[$vararg_ptr18>>2] = $191;
      _g_log(0,16,129014,$vararg_buffer14);
      $$054 = 0;
      STACKTOP = sp;return ($$054|0);
     }
     $192 = ((($$0$i56)) + 36|0);
     $193 = HEAP32[$192>>2]|0;
     $194 = HEAP32[$30>>2]|0;
     $195 = $194 & 130816;
     $196 = ($195|0)==(0);
     if ($196) {
      $$054 = 1;
      STACKTOP = sp;return ($$054|0);
     }
     $197 = ((($$0$i)) + 32|0);
     $$085 = 0;$264 = $194;
     while(1) {
      $198 = (($193) + ($$085<<2)|0);
      $199 = HEAP32[$198>>2]|0;
      $200 = ($199>>>0)>(1020);
      if ($200) {
       $201 = $199 & -4;
       $202 = $201;
       $$0$i66 = $202;
      } else {
       $203 = $199 >>> 2;
       $204 = (141120 + ($203<<2)|0);
       $205 = HEAP32[$204>>2]|0;
       $$0$i66 = $205;
      }
      $206 = ((($$0$i66)) + 12|0);
      $207 = HEAP32[$206>>2]|0;
      $208 = $207 & 255;
      $209 = HEAP32[$15>>2]|0;
      $210 = $209 & 255;
      $211 = ($210>>>0)<($208>>>0);
      if ($211) {
       label = 75;
      } else {
       $212 = (($210) - ($208))|0;
       $213 = (((($$0$i)) + 40|0) + ($212<<2)|0);
       $214 = HEAP32[$213>>2]|0;
       $215 = ((($$0$i66)) + 40|0);
       $216 = HEAP32[$215>>2]|0;
       $217 = ($214|0)==($216|0);
       if ($217) {
        $261 = $264;
       } else {
        label = 75;
       }
      }
      if ((label|0) == 75) {
       label = 0;
       $218 = $209 & 262144;
       $219 = ($218|0)==(0);
       if ($219) {
        break;
       }
       $220 = (((($$0$i66)) + 40|0) + ($208<<2)|0);
       $221 = HEAP32[$220>>2]|0;
       $222 = ($221|0)==(8);
       if (!($222)) {
        break;
       }
       $223 = HEAP32[$197>>2]|0;
       $224 = ($223|0)==(0|0);
       if ($224) {
        break;
       }
       $225 = ((($$0$i66)) + 32|0);
       $226 = (_g_atomic_pointer_get($225)|0);
       $227 = ((($223)) + -4|0);
       $228 = ((($$0$i66)) + 40|0);
       $$0$i$i = $225;
       while(1) {
        $229 = HEAP32[$223>>2]|0;
        $230 = ($$0$i$i|0)==(0|0);
        do {
         if ($230) {
          $$040$i$i = 0;
         } else {
          $231 = ((($$0$i$i)) + -4|0);
          $232 = HEAP32[$231>>2]|0;
          $233 = ($229>>>0)<($232>>>0);
          if (!($233)) {
           $$040$i$i = 0;
           break;
          }
          $234 = (($$0$i$i) + ($229)|0);
          $235 = HEAP8[$234>>0]|0;
          $236 = ($235<<24>>24)==(0);
          if ($236) {
           $$040$i$i = 0;
           break;
          }
          $237 = $235&255;
          $238 = (($237) + -1)|0;
          $239 = HEAP32[$227>>2]|0;
          $240 = (($239) + -4)|0;
          $241 = (($240>>>0) / 12)&-1;
          $242 = ($238>>>0)<($241>>>0);
          $243 = (((($223)) + 4|0) + (($238*12)|0)|0);
          if (!($242)) {
           $$040$i$i = 0;
           break;
          }
          $244 = HEAP32[$243>>2]|0;
          $245 = HEAP32[$228>>2]|0;
          $246 = ($244|0)==($245|0);
          $spec$select$i$i = $246 ? $243 : 0;
          $$040$i$i = $spec$select$i$i;
         }
        } while(0);
        $247 = (_g_atomic_pointer_get($225)|0);
        $248 = ($$0$i$i|0)==($247|0);
        if ($248) {
         break;
        } else {
         $$0$i$i = $225;
        }
       }
       $249 = ($$040$i$i|0)==(0|0);
       if ($249) {
        break;
       }
       $$pre91 = HEAP32[$30>>2]|0;
       $261 = $$pre91;
      }
      $259 = (($$085) + 1)|0;
      $260 = $261 >>> 8;
      $262 = $260 & 511;
      $263 = ($259>>>0)<($262>>>0);
      if ($263) {
       $$085 = $259;$264 = $261;
      } else {
       $$054 = 1;
       label = 89;
       break;
      }
     }
     if ((label|0) == 89) {
      STACKTOP = sp;return ($$054|0);
     }
     $250 = ((($$0$i56)) + 24|0);
     $251 = HEAP32[$250>>2]|0;
     $252 = (_g_quark_to_string($251)|0);
     $253 = ((($$0$i)) + 24|0);
     $254 = HEAP32[$253>>2]|0;
     $255 = (_g_quark_to_string($254)|0);
     $256 = ((($$0$i66)) + 24|0);
     $257 = HEAP32[$256>>2]|0;
     $258 = (_g_quark_to_string($257)|0);
     HEAP32[$vararg_buffer19>>2] = $252;
     $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
     HEAP32[$vararg_ptr22>>2] = $255;
     $vararg_ptr23 = ((($vararg_buffer19)) + 8|0);
     HEAP32[$vararg_ptr23>>2] = $258;
     _g_log(0,16,129105,$vararg_buffer19);
     $$054 = 0;
     STACKTOP = sp;return ($$054|0);
    }
   }
   $36 = ($1|0)==(0);
   if ($36) {
    $$0$i62 = 124803;
   } else {
    if ($8) {
     $37 = $1 & -4;
     $38 = $37;
     $$0$i$i60 = $38;
    } else {
     $39 = $1 >>> 2;
     $40 = (141120 + ($39<<2)|0);
     $41 = HEAP32[$40>>2]|0;
     $$0$i$i60 = $41;
    }
    $42 = ($$0$i$i60|0)==(0|0);
    if ($42) {
     $$0$i62 = 124793;
    } else {
     $43 = ((($$0$i$i60)) + 24|0);
     $44 = HEAP32[$43>>2]|0;
     $45 = (_g_quark_to_string($44)|0);
     $$0$i62 = $45;
    }
   }
   $46 = ((($$0$i)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (_g_quark_to_string($47)|0);
   HEAP32[$vararg_buffer1>>2] = $$0$i62;
   $vararg_ptr4 = ((($vararg_buffer1)) + 4|0);
   HEAP32[$vararg_ptr4>>2] = $48;
   _g_log(0,16,128799,$vararg_buffer1);
   $$054 = 0;
   STACKTOP = sp;return ($$054|0);
  }
 }
 $19 = ($0|0)==(0);
 if ($19) {
  $$0$i59 = 124803;
 } else {
  if ($2) {
   $20 = $0 & -4;
   $21 = $20;
   $$0$i$i58 = $21;
  } else {
   $22 = $0 >>> 2;
   $23 = (141120 + ($22<<2)|0);
   $24 = HEAP32[$23>>2]|0;
   $$0$i$i58 = $24;
  }
  $25 = ($$0$i$i58|0)==(0|0);
  if ($25) {
   $$0$i59 = 124793;
  } else {
   $26 = ((($$0$i$i58)) + 24|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = (_g_quark_to_string($27)|0);
   $$0$i59 = $28;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i59;
 _g_log(0,16,128735,$vararg_buffer);
 $$054 = 0;
 STACKTOP = sp;return ($$054|0);
}
function _type_add_interface_Wm($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i64 = 0, $$033$i = 0, $$036$i = 0, $$040$i$i = 0, $$06168 = 0, $$06375$i = 0, $$1$lcssa$i = 0, $$134$i = 0, $$137$i = 0, $$170$i = 0, $$2$i = 0, $$idx = 0, $$idx$val = 0, $$lcssa$i = 0, $$lcssa65$i = 0, $$sink = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0;
 var $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0;
 var $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $phitmp$i = 0, $spec$select$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_g_malloc0_n(1,16)|0);
 $5 = ((($0)) + 12|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = $6 & 262144;
 $8 = ($7|0)==(0);
 if ($8) {
  _g_assertion_message_expr(0,125112,1575,128477,128499);
  // unreachable;
 }
 $9 = ((($1)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = $10 & 255;
 $12 = (((($1)) + 40|0) + ($11<<2)|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(8);
 if (!($14)) {
  _g_assertion_message_expr(0,125112,1575,128477,128499);
  // unreachable;
 }
 $15 = ($2|0)==(0|0);
 $16 = ($3|0)!=(0|0);
 $17 = $15 ^ $16;
 if ($17) {
  _g_assertion_message_expr(0,125112,1575,128477,128499);
  // unreachable;
 }
 $18 = HEAP32[35943]|0;
 $$idx = ((($1)) + 28|0);
 $$idx$val = HEAP32[$$idx>>2]|0;
 $19 = ($18|0)!=(0);
 $20 = ($$idx$val|0)!=(0|0);
 $or$cond$i = $19 & $20;
 L10: do {
  if ($or$cond$i) {
   $21 = HEAP32[$$idx$val>>2]|0;
   $22 = ($21|0)==(0);
   if ($22) {
    $23 = ((($4)) + 12|0);
    HEAP32[$23>>2] = 0;
    $42 = $$idx$val;
    break;
   }
   $24 = ((($$idx$val)) + 4|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ((($25)) + -8|0);
   $$033$i = $26;$$036$i = $21;
   while(1) {
    $27 = (($$036$i) + 1)|0;
    $28 = $27 >>> 1;
    $29 = (($$033$i) + ($28<<3)|0);
    $30 = HEAP32[$29>>2]|0;
    $31 = ($30|0)==($18|0);
    if ($31) {
     break;
    }
    $32 = ($30>>>0)<($18>>>0);
    $33 = (($$036$i) - ($28))|0;
    $34 = (($28) + -1)|0;
    $$137$i = $32 ? $33 : $34;
    $$134$i = $32 ? $29 : $$033$i;
    $35 = ($$137$i|0)==(0);
    if ($35) {
     $$2$i = 0;
     label = 12;
     break L10;
    } else {
     $$033$i = $$134$i;$$036$i = $$137$i;
    }
   }
   $36 = (((($$033$i) + ($28<<3)|0)) + 4|0);
   $37 = HEAP32[$36>>2]|0;
   $$2$i = $37;
   label = 12;
  } else {
   $$2$i = 0;
   label = 12;
  }
 } while(0);
 if ((label|0) == 12) {
  $38 = ((($4)) + 12|0);
  HEAP32[$38>>2] = $$2$i;
  $39 = ($$idx$val|0)==(0|0);
  if ($39) {
   $40 = (_g_malloc0_n(1,8)|0);
   HEAP32[$$idx>>2] = $40;
   $42 = $40;
  } else {
   $42 = $$idx$val;
  }
 }
 $41 = ((($42)) + 4|0);
 $43 = HEAP32[$41>>2]|0;
 $44 = HEAP32[$42>>2]|0;
 $45 = ($44|0)==(0);
 do {
  if ($45) {
   $$lcssa65$i = 1;
   label = 20;
  } else {
   $$06375$i = 0;
   while(1) {
    $46 = (($43) + ($$06375$i<<3)|0);
    $47 = HEAP32[$46>>2]|0;
    $48 = ($47|0)==($18|0);
    if ($48) {
     label = 17;
     break;
    }
    $50 = (($$06375$i) + 1)|0;
    $51 = ($50>>>0)<($44>>>0);
    if ($51) {
     $$06375$i = $50;
    } else {
     label = 19;
     break;
    }
   }
   if ((label|0) == 17) {
    $49 = (((($43) + ($$06375$i<<3)|0)) + 4|0);
    $$sink = $49;
    break;
   }
   else if ((label|0) == 19) {
    $phitmp$i = (($44) + 1)|0;
    $$lcssa65$i = $phitmp$i;
    label = 20;
    break;
   }
  }
 } while(0);
 if ((label|0) == 20) {
  HEAP32[$42>>2] = $$lcssa65$i;
  $52 = (_g_realloc_n($43,$$lcssa65$i,8)|0);
  HEAP32[$41>>2] = $52;
  $53 = HEAP32[$42>>2]|0;
  $54 = ($53|0)==(1);
  L33: do {
   if ($54) {
    $$1$lcssa$i = 0;$$lcssa$i = 1;
   } else {
    $55 = (($53) + -1)|0;
    $$170$i = 0;
    while(1) {
     $56 = (($52) + ($$170$i<<3)|0);
     $57 = HEAP32[$56>>2]|0;
     $58 = ($57>>>0)>($18>>>0);
     if ($58) {
      $$1$lcssa$i = $$170$i;$$lcssa$i = $53;
      break L33;
     }
     $59 = (($$170$i) + 1)|0;
     $60 = ($59>>>0)<($55>>>0);
     if ($60) {
      $$170$i = $59;
     } else {
      $$1$lcssa$i = $59;$$lcssa$i = $53;
      break;
     }
    }
   }
  } while(0);
  $61 = (($52) + ($$1$lcssa$i<<3)|0);
  $62 = ((($61)) + 8|0);
  $63 = (($$lcssa$i) - ($$1$lcssa$i))|0;
  $64 = $63 << 3;
  $65 = (($64) + -8)|0;
  _memmove(($62|0),($61|0),($65|0))|0;
  HEAP32[$61>>2] = $18;
  $66 = (((($52) + ($$1$lcssa$i<<3)|0)) + 4|0);
  $$sink = $66;
 }
 HEAP32[$$sink>>2] = $4;
 $67 = ((($0)) + 40|0);
 $68 = HEAP32[$67>>2]|0;
 HEAP32[$4>>2] = $68;
 if ($15) {
  $71 = 0;
 } else {
  $69 = (_g_memdup($2,12)|0);
  $71 = $69;
 }
 $70 = ((($4)) + 4|0);
 HEAP32[$70>>2] = $71;
 $72 = ((($4)) + 8|0);
 HEAP32[$72>>2] = $3;
 $73 = ((($1)) + 40|0);
 $74 = HEAP32[$73>>2]|0;
 _type_node_add_iface_entry_W($0,$74,0);
 $75 = ((($0)) + 20|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = ($76|0)==(0|0);
 if (!($77)) {
  $78 = HEAP32[$75>>2]|0;
  $79 = ((($78)) + 8|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = ($80>>>0)>(1);
  if ($81) {
   (_type_iface_vtable_base_init_Wm($1,$0)|0);
   $82 = ($80>>>0)>(3);
   if ($82) {
    _type_iface_vtable_iface_init_Wm($1,$0);
   }
  }
 }
 $83 = HEAP32[$9>>2]|0;
 $84 = $83 & 255;
 $85 = (((($1)) + 40|0) + ($84<<2)|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ($86|0)==(8);
 if ($87) {
  $88 = ((($0)) + 32|0);
  $89 = HEAP32[$88>>2]|0;
  $90 = ($89|0)==(0|0);
  if ($90) {
   $$0$i = 0;
  } else {
   $91 = ((($1)) + 32|0);
   $92 = (_g_atomic_pointer_get($91)|0);
   $93 = ((($89)) + -4|0);
   $$0$i$i = $91;
   while(1) {
    $94 = HEAP32[$89>>2]|0;
    $95 = ($$0$i$i|0)==(0|0);
    if ($95) {
     $$040$i$i = 0;
    } else {
     $96 = ((($$0$i$i)) + -4|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = ($94>>>0)<($97>>>0);
     if ($98) {
      $99 = (($$0$i$i) + ($94)|0);
      $100 = HEAP8[$99>>0]|0;
      $101 = ($100<<24>>24)==(0);
      if ($101) {
       $$040$i$i = 0;
      } else {
       $102 = $100&255;
       $103 = (($102) + -1)|0;
       $104 = HEAP32[$93>>2]|0;
       $105 = (($104) + -4)|0;
       $106 = (($105>>>0) / 12)&-1;
       $107 = ($103>>>0)<($106>>>0);
       $108 = (((($89)) + 4|0) + (($103*12)|0)|0);
       if ($107) {
        $109 = HEAP32[$108>>2]|0;
        $110 = HEAP32[$73>>2]|0;
        $111 = ($109|0)==($110|0);
        $spec$select$i$i = $111 ? $108 : 0;
        $$040$i$i = $spec$select$i$i;
       } else {
        $$040$i$i = 0;
       }
      }
     } else {
      $$040$i$i = 0;
     }
    }
    $112 = (_g_atomic_pointer_get($91)|0);
    $113 = ($$0$i$i|0)==($112|0);
    if ($113) {
     $$0$i = $$040$i$i;
     break;
    } else {
     $$0$i$i = $91;
    }
   }
  }
 } else {
  $$0$i = 0;
 }
 $114 = ((($0)) + 8|0);
 $115 = HEAP32[$114>>2]|0;
 $116 = ($115|0)==(0);
 if ($116) {
  return;
 }
 $117 = ((($0)) + 16|0);
 $$06168 = 0;
 while(1) {
  $118 = HEAP32[$117>>2]|0;
  $119 = (($118) + ($$06168<<2)|0);
  $120 = HEAP32[$119>>2]|0;
  $121 = ($120>>>0)>(1020);
  if ($121) {
   $122 = $120 & -4;
   $123 = $122;
   $$0$i64 = $123;
  } else {
   $124 = $120 >>> 2;
   $125 = (141120 + ($124<<2)|0);
   $126 = HEAP32[$125>>2]|0;
   $$0$i64 = $126;
  }
  $127 = HEAP32[$73>>2]|0;
  _type_node_add_iface_entry_W($$0$i64,$127,$$0$i);
  $128 = (($$06168) + 1)|0;
  $129 = HEAP32[$114>>2]|0;
  $130 = ($128>>>0)<($129>>>0);
  if ($130) {
   $$06168 = $128;
  } else {
   break;
  }
 }
 return;
}
function _type_node_add_iface_entry_W($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0$i$us$i = 0, $$0$i101 = 0, $$0$i91 = 0, $$0$us$i = 0, $$022$lcssa$us$i = 0, $$02223$us$i = 0, $$034$i = 0, $$034$i93 = 0, $$088108 = 0, $$089111 = 0, $$1107 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $scevgep$i = 0, $scevgep$i94 = 0, $smax$i = 0, $smax$i95 = 0, $smax36$i = 0, $smax36$i96 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 262144;
 $6 = ($5|0)==(0);
 if ($6) {
  _g_assertion_message_expr(0,125112,1477,128592,128620);
  // unreachable;
 }
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 L4: do {
  if (!($9)) {
   $10 = ((($8)) + -4|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = (($11) + -4)|0;
   $13 = (($12>>>0) / 12)&-1;
   $14 = ($12>>>0)<(3060);
   if (!($14)) {
    _g_assertion_message_expr(0,125112,1484,128592,128644);
    // unreachable;
   }
   $15 = ($12>>>0)>(11);
   if ($15) {
    $16 = ((($8)) + 4|0);
    $$089111 = 0;
    while(1) {
     $17 = (($16) + (($$089111*12)|0)|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)==($1|0);
     if ($19) {
      break;
     }
     $27 = (($$089111) + 1)|0;
     $28 = ($27>>>0)<($13>>>0);
     if ($28) {
      $$089111 = $27;
     } else {
      break L4;
     }
    }
    $20 = ($2|0)==(0|0);
    if (!($20)) {
     return;
    }
    $21 = (((($16) + (($$089111*12)|0)|0)) + 4|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($22|0)==(0|0);
    if (!($23)) {
     _g_assertion_message_expr(0,125112,1500,128592,128675);
     // unreachable;
    }
    $24 = (((($16) + (($$089111*12)|0)|0)) + 8|0);
    $25 = HEAP32[$24>>2]|0;
    $26 = ($25|0)==(0);
    if ($26) {
     return;
    } else {
     _g_assertion_message_expr(0,125112,1500,128592,128675);
     // unreachable;
    }
   }
  }
 } while(0);
 $29 = (__g_atomic_array_copy($7,4,12)|0);
 $30 = ((($29)) + -4|0);
 $31 = HEAP32[$30>>2]|0;
 $32 = (($31) + -4)|0;
 $33 = (($32>>>0) / 12)&-1;
 $34 = (($33) + -1)|0;
 $35 = ($34|0)==(0);
 if ($35) {
  HEAP32[$29>>2] = 0;
 }
 $36 = ((($29)) + 4|0);
 $37 = (($36) + (($34*12)|0)|0);
 HEAP32[$37>>2] = $1;
 $38 = (((($36) + (($34*12)|0)|0)) + 4|0);
 HEAP32[$38>>2] = 0;
 $39 = (((($36) + (($34*12)|0)|0)) + 8|0);
 HEAP32[$39>>2] = 0;
 $40 = ($2|0)!=(0|0);
 if ($40) {
  $41 = ((($0)) + 20|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ($42|0)==(0|0);
  if (!($43)) {
   $44 = HEAP32[$41>>2]|0;
   $45 = ((($44)) + 8|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = ($46|0)>(1);
   if ($47) {
    HEAP32[$39>>2] = 5;
    $48 = ((($2)) + 4|0);
    $49 = HEAP32[$48>>2]|0;
    HEAP32[$38>>2] = $49;
   }
  }
 }
 $50 = ($1>>>0)>(1020);
 if ($50) {
  $51 = $1 & -4;
  $52 = $51;
  $$0$i = $52;
 } else {
  $53 = $1 >>> 2;
  $54 = (141120 + ($53<<2)|0);
  $55 = HEAP32[$54>>2]|0;
  $$0$i = $55;
 }
 $56 = HEAP32[$29>>2]|0;
 $57 = ((($$0$i)) + 32|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = ($58|0)==(0|0);
 do {
  if ($59) {
   label = 26;
  } else {
   $60 = ((($58)) + -4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = ($61>>>0)>($56>>>0);
   if ($62) {
    $63 = (($58) + ($56)|0);
    $64 = HEAP8[$63>>0]|0;
    $65 = ($64<<24>>24)==(0);
    $66 = $64&255;
    $67 = ($33|0)==($66|0);
    $or$cond = $65 | $67;
    if ($or$cond) {
     label = 26;
    } else {
     $90 = HEAP32[$30>>2]|0;
     $91 = (($90) + -4)|0;
     $92 = (($91>>>0) / 12)&-1;
     $93 = ($91>>>0)>(11);
     if (!($93)) {
      HEAP32[$29>>2] = 0;
      break;
     }
     $$0$us$i = -1;
     while(1) {
      $94 = (($$0$us$i) + 1)|0;
      $$02223$us$i = 0;
      while(1) {
       $95 = (((($29)) + 4|0) + (($$02223$us$i*12)|0)|0);
       $96 = HEAP32[$95>>2]|0;
       $97 = ($96>>>0)>(1020);
       if ($97) {
        $101 = $96 & -4;
        $102 = $101;
        $$0$i$us$i = $102;
       } else {
        $98 = $96 >>> 2;
        $99 = (141120 + ($98<<2)|0);
        $100 = HEAP32[$99>>2]|0;
        $$0$i$us$i = $100;
       }
       $103 = ((($$0$i$us$i)) + 32|0);
       $104 = HEAP32[$103>>2]|0;
       $105 = ($104|0)==(0|0);
       if (!($105)) {
        $106 = ((($104)) + -4|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = ($107>>>0)>($94>>>0);
        if ($108) {
         $109 = (($104) + ($94)|0);
         $110 = HEAP8[$109>>0]|0;
         $111 = ($110<<24>>24)==(0);
         if (!($111)) {
          $112 = $110&255;
          $113 = (($$02223$us$i) + 1)|0;
          $114 = ($113|0)==($112|0);
          if (!($114)) {
           $$022$lcssa$us$i = $$02223$us$i;
           break;
          }
         }
        }
       }
       $116 = (($$02223$us$i) + 1)|0;
       $117 = ($116>>>0)<($92>>>0);
       if ($117) {
        $$02223$us$i = $116;
       } else {
        $$022$lcssa$us$i = $116;
        break;
       }
      }
      $115 = ($$022$lcssa$us$i|0)==($92|0);
      if ($115) {
       break;
      } else {
       $$0$us$i = $94;
      }
     }
     HEAP32[$29>>2] = $94;
     if ($93) {
      $$088108 = 0;$172 = $90;
      while(1) {
       $118 = (($36) + (($$088108*12)|0)|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = ($119>>>0)>(1020);
       if ($120) {
        $121 = $119 & -4;
        $122 = $121;
        $$0$i101 = $122;
       } else {
        $123 = $119 >>> 2;
        $124 = (141120 + ($123<<2)|0);
        $125 = HEAP32[$124>>2]|0;
        $$0$i101 = $125;
       }
       $126 = HEAP32[$29>>2]|0;
       $127 = ((($$0$i101)) + 32|0);
       $128 = HEAP32[$127>>2]|0;
       $129 = ($128|0)==(0|0);
       if ($129) {
        $$034$i = 0;
        label = 53;
       } else {
        $130 = ((($128)) + -4|0);
        $131 = HEAP32[$130>>2]|0;
        $132 = ($131|0)>($126|0);
        if ($132) {
         $133 = (($128) + ($126)|0);
         $134 = HEAP8[$133>>0]|0;
         $135 = $134&255;
         $136 = (($$088108) + 1)|0;
         $137 = ($136|0)==($135|0);
         if ($137) {
          $$pre$phiZ2D = $136;$152 = $172;
         } else {
          $$034$i = $131;
          label = 53;
         }
        } else {
         $$034$i = $131;
         label = 53;
        }
       }
       if ((label|0) == 53) {
        label = 0;
        $138 = (($126) + 1)|0;
        $139 = ($$034$i|0)>($138|0);
        $140 = $139 ? $$034$i : $138;
        $141 = (($140) - ($$034$i))|0;
        $142 = (__g_atomic_array_copy($127,0,$141)|0);
        $143 = ($$034$i|0)>($126|0);
        $144 = (($$034$i) + 1)|0;
        $145 = ($$034$i|0)>($144|0);
        $smax$i = $145 ? $$034$i : $144;
        if (!($143)) {
         $146 = ($smax$i|0)>($138|0);
         $smax36$i = $146 ? $smax$i : $138;
         $147 = (($smax36$i) - ($$034$i))|0;
         $scevgep$i = (($142) + ($$034$i)|0);
         _memset(($scevgep$i|0),0,($147|0))|0;
        }
        $148 = (($$088108) + 1)|0;
        $149 = $148&255;
        $150 = (($142) + ($126)|0);
        HEAP8[$150>>0] = $149;
        __g_atomic_array_update($127,$142);
        $$pre = HEAP32[$30>>2]|0;
        $$pre$phiZ2D = $148;$152 = $$pre;
       }
       $151 = (($152) + -4)|0;
       $153 = (($151>>>0) / 12)&-1;
       $154 = ($$pre$phiZ2D>>>0)<($153>>>0);
       if ($154) {
        $$088108 = $$pre$phiZ2D;$172 = $152;
       } else {
        break;
       }
      }
     }
    }
   } else {
    label = 26;
   }
  }
 } while(0);
 do {
  if ((label|0) == 26) {
   $68 = ((($$0$i)) + 32|0);
   $69 = HEAP32[$68>>2]|0;
   $70 = ($69|0)==(0|0);
   if ($70) {
    $$034$i93 = 0;
   } else {
    $71 = ((($69)) + -4|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = ($72|0)>($56|0);
    if ($73) {
     $74 = (($69) + ($56)|0);
     $75 = HEAP8[$74>>0]|0;
     $76 = $75&255;
     $77 = ($33|0)==($76|0);
     if ($77) {
      break;
     } else {
      $$034$i93 = $72;
     }
    } else {
     $$034$i93 = $72;
    }
   }
   $78 = (($56) + 1)|0;
   $79 = ($$034$i93|0)>($78|0);
   $80 = $79 ? $$034$i93 : $78;
   $81 = (($80) - ($$034$i93))|0;
   $82 = (__g_atomic_array_copy($68,0,$81)|0);
   $83 = ($$034$i93|0)>($56|0);
   $84 = (($$034$i93) + 1)|0;
   $85 = ($$034$i93|0)>($84|0);
   $smax$i95 = $85 ? $$034$i93 : $84;
   if (!($83)) {
    $86 = ($smax$i95|0)>($78|0);
    $smax36$i96 = $86 ? $smax$i95 : $78;
    $87 = (($smax36$i96) - ($$034$i93))|0;
    $scevgep$i94 = (($82) + ($$034$i93)|0);
    _memset(($scevgep$i94|0),0,($87|0))|0;
   }
   $88 = $33&255;
   $89 = (($82) + ($56)|0);
   HEAP8[$89>>0] = $88;
   __g_atomic_array_update($68,$82);
  }
 } while(0);
 __g_atomic_array_update($7,$29);
 if (!($40)) {
  return;
 }
 $155 = ((($0)) + 8|0);
 $156 = HEAP32[$155>>2]|0;
 $157 = ($156|0)==(0);
 if ($157) {
  return;
 }
 $158 = ((($0)) + 16|0);
 $$1107 = 0;
 while(1) {
  $159 = HEAP32[$158>>2]|0;
  $160 = (($159) + ($$1107<<2)|0);
  $161 = HEAP32[$160>>2]|0;
  $162 = ($161>>>0)>(1020);
  if ($162) {
   $163 = $161 & -4;
   $164 = $163;
   $$0$i91 = $164;
  } else {
   $165 = $161 >>> 2;
   $166 = (141120 + ($165<<2)|0);
   $167 = HEAP32[$166>>2]|0;
   $$0$i91 = $167;
  }
  $168 = (($36) + (($$1107*12)|0)|0);
  _type_node_add_iface_entry_W($$0$i91,$1,$168);
  $169 = (($$1107) + 1)|0;
  $170 = HEAP32[$155>>2]|0;
  $171 = ($169>>>0)<($170>>>0);
  if ($171) {
   $$1107 = $169;
  } else {
   break;
  }
 }
 return;
}
function _find_conforming_child_type_L($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i16 = 0, $$015 = 0, $$017 = 0, $$040$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$i = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 12|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & 255;
 $5 = (((($1)) + 40|0) + ($4<<2)|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(8);
 if ($7) {
  $8 = ((($0)) + 32|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0|0);
  if (!($10)) {
   $11 = ((($1)) + 32|0);
   $12 = (_g_atomic_pointer_get($11)|0);
   $13 = ((($9)) + -4|0);
   $14 = ((($1)) + 40|0);
   $$0$i$i = $11;
   while(1) {
    $15 = HEAP32[$9>>2]|0;
    $16 = ($$0$i$i|0)==(0|0);
    if ($16) {
     $$040$i$i = 0;
    } else {
     $17 = ((($$0$i$i)) + -4|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($15>>>0)<($18>>>0);
     if ($19) {
      $20 = (($$0$i$i) + ($15)|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if ($22) {
       $$040$i$i = 0;
      } else {
       $23 = $21&255;
       $24 = (($23) + -1)|0;
       $25 = HEAP32[$13>>2]|0;
       $26 = (($25) + -4)|0;
       $27 = (($26>>>0) / 12)&-1;
       $28 = ($24>>>0)<($27>>>0);
       $29 = (((($9)) + 4|0) + (($24*12)|0)|0);
       if ($28) {
        $30 = HEAP32[$29>>2]|0;
        $31 = HEAP32[$14>>2]|0;
        $32 = ($30|0)==($31|0);
        $spec$select$i$i = $32 ? $29 : 0;
        $$040$i$i = $spec$select$i$i;
       } else {
        $$040$i$i = 0;
       }
      }
     } else {
      $$040$i$i = 0;
     }
    }
    $33 = (_g_atomic_pointer_get($11)|0);
    $34 = ($$0$i$i|0)==($33|0);
    if ($34) {
     break;
    } else {
     $$0$i$i = $11;
    }
   }
   $35 = ($$040$i$i|0)==(0|0);
   if (!($35)) {
    $$015 = $0;
    return ($$015|0);
   }
  }
 }
 $36 = ((($0)) + 8|0);
 $37 = HEAP32[$36>>2]|0;
 $38 = ($37|0)==(0);
 if ($38) {
  $$015 = 0;
  return ($$015|0);
 }
 $39 = ((($0)) + 16|0);
 $$017 = 0;
 while(1) {
  $40 = HEAP32[$39>>2]|0;
  $41 = (($40) + ($$017<<2)|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ($42>>>0)>(1020);
  if ($43) {
   $44 = $42 & -4;
   $45 = $44;
   $$0$i16 = $45;
  } else {
   $46 = $42 >>> 2;
   $47 = (141120 + ($46<<2)|0);
   $48 = HEAP32[$47>>2]|0;
   $$0$i16 = $48;
  }
  $49 = (_find_conforming_child_type_L($$0$i16,$1)|0);
  $50 = (($$017) + 1)|0;
  $51 = HEAP32[$36>>2]|0;
  $52 = ($50>>>0)<($51>>>0);
  $53 = ($49|0)==(0|0);
  $or$cond = $53 & $52;
  if ($or$cond) {
   $$017 = $50;
  } else {
   $$015 = $49;
   break;
  }
 }
 return ($$015|0);
}
function _g_type_class_peek($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 131072;
 $11 = ($10|0)==(0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = HEAP32[$$0$i>>2]|0;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = ((($$0$i)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ((($15)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(5);
 if (!($18)) {
  $$0 = 0;
  return ($$0|0);
 }
 $19 = HEAP32[$14>>2]|0;
 $20 = ((($19)) + 32|0);
 $21 = HEAP32[$20>>2]|0;
 $$0 = $21;
 return ($$0|0);
}
function _g_type_class_peek_static($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 131072;
 $11 = ($10|0)==(0);
 if ($11) {
  $$0 = 0;
  return ($$0|0);
 }
 $12 = HEAP32[$$0$i>>2]|0;
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = ((($$0$i)) + 4|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if (!($16)) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i)) + 20|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($18)) + 8|0);
 $20 = (_g_atomic_int_get($19)|0);
 $21 = ($20|0)==(5);
 if (!($21)) {
  $$0 = 0;
  return ($$0|0);
 }
 $22 = HEAP32[$17>>2]|0;
 $23 = ((($22)) + 32|0);
 $24 = HEAP32[$23>>2]|0;
 $$0 = $24;
 return ($$0|0);
}
function _g_type_class_peek_parent($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i13 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 131072;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    $16 = ((($$0$i)) + 44|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0);
    if (!($18)) {
     $19 = ($17>>>0)>(1020);
     if ($19) {
      $20 = $17 & -4;
      $21 = $20;
      $$0$i13 = $21;
     } else {
      $22 = $17 >>> 2;
      $23 = (141120 + ($22<<2)|0);
      $24 = HEAP32[$23>>2]|0;
      $$0$i13 = $24;
     }
     $25 = ((($$0$i13)) + 20|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ((($26)) + 32|0);
     $28 = HEAP32[$27>>2]|0;
     $$0 = $28;
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 }
 $29 = ((($$0$i)) + 44|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($30|0)==(0);
 if ($31) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = $0;
 _g_log(0,16,129193,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_interface_peek_parent($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i18 = 0, $$0$i19 = 0, $$040$i$i = 0, $$sroa$0$0 = 0, $$sroa$0$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $spec$select$i$i = 0, $vararg_buffer = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ((($0)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9>>>0)>(1020);
 if ($10) {
  $11 = $9 & -4;
  $12 = $11;
  $$0$i19 = $12;
 } else {
  $13 = $9 >>> 2;
  $14 = (141120 + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $$0$i19 = $15;
 }
 $16 = ($$0$i19|0)==(0|0);
 if ($16) {
  $$sroa$0$2 = 0;
  $69 = $$sroa$0$2;
  STACKTOP = sp;return ($69|0);
 }
 $17 = ((($$0$i19)) + 44|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18>>>0)>(1020);
 if ($19) {
  $20 = $18 & -4;
  $21 = $20;
  $$0 = $21;
 } else {
  $22 = $18 >>> 2;
  $23 = (141120 + ($22<<2)|0);
  $24 = HEAP32[$23>>2]|0;
  $$0 = $24;
 }
 $25 = ($$0|0)==(0|0);
 if ($25) {
  $$sroa$0$2 = 0;
  $69 = $$sroa$0$2;
  STACKTOP = sp;return ($69|0);
 }
 $26 = ((($$0)) + 12|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = $27 & 262144;
 $29 = ($28|0)!=(0);
 $30 = ($$0$i|0)!=(0|0);
 $or$cond = $30 & $29;
 if (!($or$cond)) {
  HEAP32[$vararg_buffer>>2] = $0;
  _g_log(0,16,129257,$vararg_buffer);
  $$sroa$0$2 = 0;
  $69 = $$sroa$0$2;
  STACKTOP = sp;return ($69|0);
 }
 $31 = ((($$0$i)) + 12|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = $32 & 255;
 $34 = (((($$0$i)) + 40|0) + ($33<<2)|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = ($35|0)==(8);
 if (!($36)) {
  $$sroa$0$2 = 0;
  $69 = $$sroa$0$2;
  STACKTOP = sp;return ($69|0);
 }
 $37 = ((($$0)) + 32|0);
 $38 = (_g_atomic_pointer_get($37)|0);
 $39 = ((($$0$i)) + 32|0);
 $40 = ((($$0$i)) + 40|0);
 $$0$i18 = $37;
 while(1) {
  $41 = ($$0$i18|0)==(0|0);
  if ($41) {
   $$sroa$0$0 = 0;
  } else {
   $42 = (_g_atomic_pointer_get($39)|0);
   $43 = ((($$0$i18)) + -4|0);
   $$0$i$i = $39;
   while(1) {
    $44 = HEAP32[$$0$i18>>2]|0;
    $45 = ($$0$i$i|0)==(0|0);
    if ($45) {
     $$040$i$i = 0;
    } else {
     $46 = ((($$0$i$i)) + -4|0);
     $47 = HEAP32[$46>>2]|0;
     $48 = ($44>>>0)<($47>>>0);
     if ($48) {
      $49 = (($$0$i$i) + ($44)|0);
      $50 = HEAP8[$49>>0]|0;
      $51 = ($50<<24>>24)==(0);
      if ($51) {
       $$040$i$i = 0;
      } else {
       $52 = $50&255;
       $53 = (($52) + -1)|0;
       $54 = HEAP32[$43>>2]|0;
       $55 = (($54) + -4)|0;
       $56 = (($55>>>0) / 12)&-1;
       $57 = ($53>>>0)<($56>>>0);
       $58 = (((($$0$i18)) + 4|0) + (($53*12)|0)|0);
       if ($57) {
        $59 = HEAP32[$58>>2]|0;
        $60 = HEAP32[$40>>2]|0;
        $61 = ($59|0)==($60|0);
        $spec$select$i$i = $61 ? $58 : 0;
        $$040$i$i = $spec$select$i$i;
       } else {
        $$040$i$i = 0;
       }
      }
     } else {
      $$040$i$i = 0;
     }
    }
    $62 = (_g_atomic_pointer_get($39)|0);
    $63 = ($$0$i$i|0)==($62|0);
    if ($63) {
     break;
    } else {
     $$0$i$i = $39;
    }
   }
   $64 = ($$040$i$i|0)==(0|0);
   if ($64) {
    $$sroa$0$0 = 0;
   } else {
    $65 = ((($$040$i$i)) + 4|0);
    $66 = HEAP32[$65>>2]|0;
    $$sroa$0$0 = $66;
   }
  }
  $67 = (_g_atomic_pointer_get($37)|0);
  $68 = ($$0$i18|0)==($37|0);
  if ($68) {
   $$sroa$0$2 = $$sroa$0$0;
   break;
  } else {
   $$0$i18 = $37;
  }
 }
 $69 = $$sroa$0$2;
 STACKTOP = sp;return ($69|0);
}
function _g_type_name($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35945]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  _g_assertion_message_expr(0,125112,3486,129325,127658);
  // unreachable;
 }
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if ($9) {
  $13 = 0;
  return ($13|0);
 }
 $10 = ((($$0$i)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (_g_quark_to_string($11)|0);
 $13 = $12;
 return ($13|0);
}
function _g_type_from_name($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35956]|0;
 $2 = (_g_hash_table_lookup($1,$0)|0);
 $3 = $2;
 return ($3|0);
}
function _g_type_parent($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $10 = 0;
  return ($10|0);
 }
 $8 = ((($$0$i)) + 44|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9;
 return ($10|0);
}
function _g_type_depth($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $12 = 0;
  return ($12|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 255;
 $11 = (($10) + 1)|0;
 $12 = $11;
 return ($12|0);
}
function _g_type_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$us$i = 0, $$0$i15 = 0, $$0$shrunk$i$i = 0, $$0$us$i = 0, $$027$i$i$i = 0, $$030$i$i$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $$128$i$i$i = 0, $$131$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $or$cond = 0, $or$cond5$i$i = 0, $phitmp = 0, $phitmp18 = 0, $spec$select$i$us$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 if ($2) {
  $$0 = 1;
  return ($$0|0);
 }
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($1>>>0)>(1020);
 if ($9) {
  $10 = $1 & -4;
  $11 = $10;
  $$0$i15 = $11;
 } else {
  $12 = $1 >>> 2;
  $13 = (141120 + ($12<<2)|0);
  $14 = HEAP32[$13>>2]|0;
  $$0$i15 = $14;
 }
 $15 = ($$0$i|0)!=(0|0);
 $16 = ($$0$i15|0)!=(0|0);
 $or$cond = $15 & $16;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i15)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 & 255;
 $20 = ((($$0$i)) + 12|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = $21 & 255;
 $23 = ($22>>>0)<($19>>>0);
 if ($23) {
  label = 11;
 } else {
  $24 = (($22) - ($19))|0;
  $25 = (((($$0$i)) + 40|0) + ($24<<2)|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($$0$i15)) + 40|0);
  $28 = HEAP32[$27>>2]|0;
  $29 = ($26|0)==($28|0);
  if ($29) {
   $96 = 1;
  } else {
   label = 11;
  }
 }
 L17: do {
  if ((label|0) == 11) {
   $30 = $21 & 262144;
   $31 = ($30|0)==(0);
   if ($31) {
    $32 = (((($$0$i)) + 40|0) + ($22<<2)|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = ($33|0)==(8);
    $$0$shrunk$i$i = 0;$72 = $34;
   } else {
    $35 = (((($$0$i15)) + 40|0) + ($19<<2)|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($36|0)==(8);
    $38 = (((($$0$i)) + 40|0) + ($22<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    $40 = ($39|0)==(8);
    if ($37) {
     $41 = ((($$0$i)) + 32|0);
     $42 = (_g_atomic_pointer_get($41)|0);
     $43 = ((($$0$i15)) + 32|0);
     $44 = ((($$0$i15)) + 40|0);
     $$0$us$i = $41;
     while(1) {
      $45 = ($$0$us$i|0)==(0|0);
      if ($45) {
       $$039$i$us$i = 0;
      } else {
       $46 = (_g_atomic_pointer_get($43)|0);
       $47 = ((($$0$us$i)) + -4|0);
       $$0$i$us$i = $43;
       while(1) {
        $48 = HEAP32[$$0$us$i>>2]|0;
        $49 = ($$0$i$us$i|0)==(0|0);
        if ($49) {
         $$040$i$us$i = 0;
        } else {
         $50 = ((($$0$i$us$i)) + -4|0);
         $51 = HEAP32[$50>>2]|0;
         $52 = ($48>>>0)<($51>>>0);
         if ($52) {
          $53 = (($$0$i$us$i) + ($48)|0);
          $54 = HEAP8[$53>>0]|0;
          $55 = ($54<<24>>24)==(0);
          if ($55) {
           $$040$i$us$i = 0;
          } else {
           $56 = $54&255;
           $57 = (($56) + -1)|0;
           $58 = HEAP32[$47>>2]|0;
           $59 = (($58) + -4)|0;
           $60 = (($59>>>0) / 12)&-1;
           $61 = ($57>>>0)<($60>>>0);
           $62 = (((($$0$us$i)) + 4|0) + (($57*12)|0)|0);
           if ($61) {
            $63 = HEAP32[$62>>2]|0;
            $64 = HEAP32[$44>>2]|0;
            $65 = ($63|0)==($64|0);
            $spec$select$i$us$i = $65 ? $62 : 0;
            $$040$i$us$i = $spec$select$i$us$i;
           } else {
            $$040$i$us$i = 0;
           }
          }
         } else {
          $$040$i$us$i = 0;
         }
        }
        $66 = (_g_atomic_pointer_get($43)|0);
        $67 = ($$0$i$us$i|0)==($66|0);
        if ($67) {
         $$039$i$us$i = $$040$i$us$i;
         break;
        } else {
         $$0$i$us$i = $43;
        }
       }
      }
      $68 = (_g_atomic_pointer_get($41)|0);
      $69 = ($$0$us$i|0)==($41|0);
      if ($69) {
       break;
      } else {
       $$0$us$i = $41;
      }
     }
     $70 = ($$039$i$us$i|0)!=(0|0);
     $phitmp18 = $70&1;
     $$0$shrunk$i$i = $phitmp18;$72 = $40;
    } else {
     $$0$shrunk$i$i = 0;$72 = $40;
    }
   }
   $71 = ($$0$shrunk$i$i|0)==(0);
   $or$cond5$i$i = $72 & $71;
   if ($or$cond5$i$i) {
    $73 = ((($$0$i15)) + 40|0);
    $74 = HEAP32[$73>>2]|0;
    $75 = HEAP32[$20>>2]|0;
    $76 = $75 & 255;
    $77 = (((($$0$i)) + 40|0) + ($76<<2)|0);
    $78 = HEAP32[$77>>2]|0;
    $79 = ($78|0)==(8);
    if ($79) {
     $80 = $75 >>> 8;
     $81 = $80 & 511;
     $82 = ($81|0)==(0);
     if ($82) {
      $96 = 0;
     } else {
      $83 = ((($$0$i)) + 36|0);
      $84 = HEAP32[$83>>2]|0;
      $85 = ((($84)) + -4|0);
      $$027$i$i$i = $85;$$030$i$i$i = $81;
      while(1) {
       $86 = (($$030$i$i$i) + 1)|0;
       $87 = $86 >>> 1;
       $88 = (($$027$i$i$i) + ($87<<2)|0);
       $89 = HEAP32[$88>>2]|0;
       $90 = ($89|0)==($74|0);
       $91 = ($89>>>0)<($74>>>0);
       $92 = (($$030$i$i$i) - ($87))|0;
       $93 = (($87) + -1)|0;
       $$131$i$i$i = $91 ? $92 : $93;
       if ($90) {
        $96 = 1;
        break L17;
       }
       $$128$i$i$i = $91 ? $88 : $$027$i$i$i;
       $94 = ($$131$i$i$i|0)==(0);
       if ($94) {
        $96 = 0;
        break;
       } else {
        $$027$i$i$i = $$128$i$i$i;$$030$i$i$i = $$131$i$i$i;
       }
      }
     }
    } else {
     $96 = 0;
    }
   } else {
    $96 = $$0$shrunk$i$i;
   }
  }
 } while(0);
 $95 = ($96|0)!=(0);
 $phitmp = $95&1;
 $$0 = $phitmp;
 return ($$0|0);
}
function _g_type_fundamental($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $13 = 0;
  return ($13|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 255;
 $11 = (((($$0$i)) + 40|0) + ($10<<2)|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = $12;
 return ($13|0);
}
function _g_type_check_class_is_a($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i15 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3>>>0)>(1020);
 if ($4) {
  $5 = $3 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $3 >>> 2;
  $8 = (141120 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ($1>>>0)>(1020);
 if ($10) {
  $11 = $1 & -4;
  $12 = $11;
  $$0$i15 = $12;
 } else {
  $13 = $1 >>> 2;
  $14 = (141120 + ($13<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $$0$i15 = $15;
 }
 $16 = ($$0$i|0)==(0|0);
 if ($16) {
  $$0 = 0;
  return ($$0|0);
 }
 $17 = ((($$0$i)) + 12|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = $18 & 131072;
 $20 = ($19|0)!=(0);
 $21 = ($$0$i15|0)!=(0|0);
 $or$cond = $21 & $20;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $22 = ((($$0$i15)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = $23 & 255;
 $25 = $18 & 255;
 $26 = ($25>>>0)<($24>>>0);
 if (!($26)) {
  $27 = (($25) - ($24))|0;
  $28 = (((($$0$i)) + 40|0) + ($27<<2)|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($$0$i15)) + 40|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ($29|0)==($31|0);
  if ($32) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $$0 = 0;
 return ($$0|0);
}
function _g_type_check_instance_cast($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i31 = 0, $$0$i$i35 = 0, $$0$i$us$i = 0, $$0$i28 = 0, $$0$i29 = 0, $$0$i33 = 0, $$0$i37 = 0, $$0$us$i = 0, $$039$i$us$i = 0, $$040$i$us$i = 0, $$pre = 0, $$pre42 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0;
 var $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0;
 var $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select$i$us$i = 0;
 var $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  STACKTOP = sp;return ($0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0|0);
 if ($4) {
  $95 = ($1|0)==(0);
  if ($95) {
   $$0$i28 = 124803;
  } else {
   $96 = ($1>>>0)>(1020);
   if ($96) {
    $97 = $1 & -4;
    $98 = $97;
    $$0$i$i = $98;
   } else {
    $99 = $1 >>> 2;
    $100 = (141120 + ($99<<2)|0);
    $101 = HEAP32[$100>>2]|0;
    $$0$i$i = $101;
   }
   $102 = ($$0$i$i|0)==(0|0);
   if ($102) {
    $$0$i28 = 124793;
   } else {
    $103 = ((($$0$i$i)) + 24|0);
    $104 = HEAP32[$103>>2]|0;
    $105 = (_g_quark_to_string($104)|0);
    $$0$i28 = $105;
   }
  }
  HEAP32[$vararg_buffer6>>2] = $$0$i28;
  _g_log(0,16,129419,$vararg_buffer6);
  STACKTOP = sp;return ($0|0);
 }
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5>>>0)>(1020);
 if ($6) {
  $7 = $5 & -4;
  $8 = $7;
  $$0$i = $8;
 } else {
  $9 = $5 >>> 2;
  $10 = (141120 + ($9<<2)|0);
  $11 = HEAP32[$10>>2]|0;
  $$0$i = $11;
 }
 $12 = ($$0$i|0)==(0|0);
 if ($12) {
  $24 = 0;
 } else {
  $13 = ((($$0$i)) + 12|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = $14 & 262144;
  $16 = ($15|0)!=(0);
  $24 = $16;
 }
 $17 = ($1>>>0)>(1020);
 if ($17) {
  $18 = $1 & -4;
  $19 = $18;
  $$0$i29 = $19;
 } else {
  $20 = $1 >>> 2;
  $21 = (141120 + ($20<<2)|0);
  $22 = HEAP32[$21>>2]|0;
  $$0$i29 = $22;
 }
 $23 = ($$0$i29|0)!=(0|0);
 $or$cond = $24 & $23;
 do {
  if ($or$cond) {
   $25 = ((($$0$i29)) + 12|0);
   $26 = HEAP32[$25>>2]|0;
   $27 = $26 & 255;
   $28 = ((($$0$i)) + 12|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = $29 & 255;
   $31 = ($30>>>0)<($27>>>0);
   if (!($31)) {
    $32 = (($30) - ($27))|0;
    $33 = (((($$0$i)) + 40|0) + ($32<<2)|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = ((($$0$i29)) + 40|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ($34|0)==($36|0);
    if ($37) {
     STACKTOP = sp;return ($0|0);
    }
   }
   $38 = $29 & 262144;
   $39 = ($38|0)==(0);
   if ($39) {
    $74 = $5;
   } else {
    $40 = (((($$0$i29)) + 40|0) + ($27<<2)|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = ($41|0)==(8);
    if ($42) {
     $43 = ((($$0$i)) + 32|0);
     $44 = (_g_atomic_pointer_get($43)|0);
     $45 = ((($$0$i29)) + 32|0);
     $46 = ((($$0$i29)) + 40|0);
     $$0$us$i = $43;
     while(1) {
      $47 = ($$0$us$i|0)==(0|0);
      if ($47) {
       $$039$i$us$i = 0;
      } else {
       $48 = (_g_atomic_pointer_get($45)|0);
       $49 = ((($$0$us$i)) + -4|0);
       $$0$i$us$i = $45;
       while(1) {
        $50 = HEAP32[$$0$us$i>>2]|0;
        $51 = ($$0$i$us$i|0)==(0|0);
        if ($51) {
         $$040$i$us$i = 0;
        } else {
         $52 = ((($$0$i$us$i)) + -4|0);
         $53 = HEAP32[$52>>2]|0;
         $54 = ($50>>>0)<($53>>>0);
         if ($54) {
          $55 = (($$0$i$us$i) + ($50)|0);
          $56 = HEAP8[$55>>0]|0;
          $57 = ($56<<24>>24)==(0);
          if ($57) {
           $$040$i$us$i = 0;
          } else {
           $58 = $56&255;
           $59 = (($58) + -1)|0;
           $60 = HEAP32[$49>>2]|0;
           $61 = (($60) + -4)|0;
           $62 = (($61>>>0) / 12)&-1;
           $63 = ($59>>>0)<($62>>>0);
           $64 = (((($$0$us$i)) + 4|0) + (($59*12)|0)|0);
           if ($63) {
            $65 = HEAP32[$64>>2]|0;
            $66 = HEAP32[$46>>2]|0;
            $67 = ($65|0)==($66|0);
            $spec$select$i$us$i = $67 ? $64 : 0;
            $$040$i$us$i = $spec$select$i$us$i;
           } else {
            $$040$i$us$i = 0;
           }
          }
         } else {
          $$040$i$us$i = 0;
         }
        }
        $68 = (_g_atomic_pointer_get($45)|0);
        $69 = ($$0$i$us$i|0)==($68|0);
        if ($69) {
         $$039$i$us$i = $$040$i$us$i;
         break;
        } else {
         $$0$i$us$i = $45;
        }
       }
      }
      $70 = (_g_atomic_pointer_get($43)|0);
      $71 = ($$0$us$i|0)==($43|0);
      if ($71) {
       break;
      } else {
       $$0$us$i = $43;
      }
     }
     $72 = ($$039$i$us$i|0)==(0|0);
     if ($72) {
      $$pre = HEAP32[$0>>2]|0;
      $$pre42 = HEAP32[$$pre>>2]|0;
      $74 = $$pre42;
      break;
     } else {
      STACKTOP = sp;return ($0|0);
     }
    } else {
     $74 = $5;
    }
   }
  } else {
   $74 = $5;
  }
 } while(0);
 $73 = ($74|0)==(0);
 if ($73) {
  $$0$i37 = 124803;
 } else {
  $75 = ($74>>>0)>(1020);
  if ($75) {
   $76 = $74 & -4;
   $77 = $76;
   $$0$i$i35 = $77;
  } else {
   $78 = $74 >>> 2;
   $79 = (141120 + ($78<<2)|0);
   $80 = HEAP32[$79>>2]|0;
   $$0$i$i35 = $80;
  }
  $81 = ($$0$i$i35|0)==(0|0);
  if ($81) {
   $$0$i37 = 124793;
  } else {
   $82 = ((($$0$i$i35)) + 24|0);
   $83 = HEAP32[$82>>2]|0;
   $84 = (_g_quark_to_string($83)|0);
   $$0$i37 = $84;
  }
 }
 $85 = ($1|0)==(0);
 if ($85) {
  $$0$i33 = 124803;
 } else {
  if ($17) {
   $86 = $1 & -4;
   $87 = $86;
   $$0$i$i31 = $87;
  } else {
   $88 = $1 >>> 2;
   $89 = (141120 + ($88<<2)|0);
   $90 = HEAP32[$89>>2]|0;
   $$0$i$i31 = $90;
  }
  $91 = ($$0$i$i31|0)==(0|0);
  if ($91) {
   $$0$i33 = 124793;
  } else {
   $92 = ((($$0$i$i31)) + 24|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = (_g_quark_to_string($93)|0);
   $$0$i33 = $94;
  }
 }
 if ($24) {
  HEAP32[$vararg_buffer>>2] = $$0$i37;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i33;
  _g_log(0,16,129337,$vararg_buffer);
  STACKTOP = sp;return ($0|0);
 } else {
  HEAP32[$vararg_buffer2>>2] = $$0$i37;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $$0$i33;
  _g_log(0,16,129368,$vararg_buffer2);
  STACKTOP = sp;return ($0|0);
 }
 return (0)|0;
}
function _g_type_check_class_cast($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i30 = 0, $$0$i$i34 = 0, $$0$i27 = 0, $$0$i28 = 0, $$0$i32 = 0, $$0$i36 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $56 = ($1|0)==(0);
  if ($56) {
   $$0$i27 = 124803;
  } else {
   $57 = ($1>>>0)>(1020);
   if ($57) {
    $58 = $1 & -4;
    $59 = $58;
    $$0$i$i = $59;
   } else {
    $60 = $1 >>> 2;
    $61 = (141120 + ($60<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $$0$i$i = $62;
   }
   $63 = ($$0$i$i|0)==(0|0);
   if ($63) {
    $$0$i27 = 124793;
   } else {
    $64 = ((($$0$i$i)) + 24|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = (_g_quark_to_string($65)|0);
    $$0$i27 = $66;
   }
  }
  HEAP32[$vararg_buffer6>>2] = $$0$i27;
  _g_log(0,16,129548,$vararg_buffer6);
  STACKTOP = sp;return ($0|0);
 }
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3>>>0)>(1020);
 if ($4) {
  $5 = $3 & -4;
  $6 = $5;
  $$0$i = $6;
 } else {
  $7 = $3 >>> 2;
  $8 = (141120 + ($7<<2)|0);
  $9 = HEAP32[$8>>2]|0;
  $$0$i = $9;
 }
 $10 = ($$0$i|0)==(0|0);
 if ($10) {
  $22 = 0;
 } else {
  $11 = ((($$0$i)) + 12|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = $12 & 131072;
  $14 = ($13|0)!=(0);
  $22 = $14;
 }
 $15 = ($1>>>0)>(1020);
 if ($15) {
  $16 = $1 & -4;
  $17 = $16;
  $$0$i28 = $17;
 } else {
  $18 = $1 >>> 2;
  $19 = (141120 + ($18<<2)|0);
  $20 = HEAP32[$19>>2]|0;
  $$0$i28 = $20;
 }
 $21 = ($$0$i28|0)!=(0|0);
 $or$cond = $22 & $21;
 if ($or$cond) {
  $23 = ((($$0$i28)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = $24 & 255;
  $26 = ((($$0$i)) + 12|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = $27 & 255;
  $29 = ($28>>>0)<($25>>>0);
  if (!($29)) {
   $30 = (($28) - ($25))|0;
   $31 = (((($$0$i)) + 40|0) + ($30<<2)|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($$0$i28)) + 40|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ($32|0)==($34|0);
   if ($35) {
    STACKTOP = sp;return ($0|0);
   }
  }
 }
 $36 = ($3|0)==(0);
 if ($36) {
  $$0$i36 = 124803;
 } else {
  if ($4) {
   $37 = $3 & -4;
   $38 = $37;
   $$0$i$i34 = $38;
  } else {
   $39 = $3 >>> 2;
   $40 = (141120 + ($39<<2)|0);
   $41 = HEAP32[$40>>2]|0;
   $$0$i$i34 = $41;
  }
  $42 = ($$0$i$i34|0)==(0|0);
  if ($42) {
   $$0$i36 = 124793;
  } else {
   $43 = ((($$0$i$i34)) + 24|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = (_g_quark_to_string($44)|0);
   $$0$i36 = $45;
  }
 }
 $46 = ($1|0)==(0);
 if ($46) {
  $$0$i32 = 124803;
 } else {
  if ($15) {
   $47 = $1 & -4;
   $48 = $47;
   $$0$i$i30 = $48;
  } else {
   $49 = $1 >>> 2;
   $50 = (141120 + ($49<<2)|0);
   $51 = HEAP32[$50>>2]|0;
   $$0$i$i30 = $51;
  }
  $52 = ($$0$i$i30|0)==(0|0);
  if ($52) {
   $$0$i32 = 124793;
  } else {
   $53 = ((($$0$i$i30)) + 24|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = (_g_quark_to_string($54)|0);
   $$0$i32 = $55;
  }
 }
 if ($22) {
  HEAP32[$vararg_buffer>>2] = $$0$i36;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $$0$i32;
  _g_log(0,16,129461,$vararg_buffer);
  STACKTOP = sp;return ($0|0);
 } else {
  HEAP32[$vararg_buffer2>>2] = $$0$i36;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $$0$i32;
  _g_log(0,16,129498,$vararg_buffer2);
  STACKTOP = sp;return ($0|0);
 }
 return (0)|0;
}
function _g_type_check_is_value_type($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_type_check_is_value_type_U($0)|0);
 return ($1|0);
}
function _type_check_is_value_type_U($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i43 = 0, $$03259 = 0, $$033$i = 0, $$034 = 0, $$034$idx = 0, $$034$idx$val = 0, $$036$i = 0, $$134$i = 0, $$137$i = 0, $$2$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond$i = 0, $phitmp = 0, $phitmp49 = 0, $phitmp50 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $7 = ($$0$i|0)==(0|0);
 if ($7) {
  $$0 = 0;
  return ($$0|0);
 }
 $8 = ((($$0$i)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = $9 & 524288;
 $11 = ($10|0)==(0);
 if (!($11)) {
  $$0 = 1;
  return ($$0|0);
 }
 $$034 = $$0$i;
 L11: while(1) {
  $12 = ((($$034)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0|0);
  if (!($14)) {
   $15 = HEAP32[$$034>>2]|0;
   $16 = ($15|0)==(0);
   if (!($16)) {
    $17 = HEAP32[$12>>2]|0;
    $18 = HEAP32[$17>>2]|0;
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     label = 10;
     break;
    }
   }
  }
  $40 = ((($$034)) + 12|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = $41 & 255;
  $43 = (((($$034)) + 40|0) + ($42<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)!=(8);
  $46 = $41 & 130816;
  $47 = ($46|0)==(0);
  $or$cond = $45 | $47;
  if ($or$cond) {
   $$0 = 0;
   label = 27;
   break;
  }
  $48 = ((($$034)) + 36|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = $41 >>> 8;
  $51 = $50 & 511;
  $$03259 = 0;
  while(1) {
   $54 = (($49) + ($$03259<<2)|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ($55>>>0)>(1020);
   if ($56) {
    $57 = $55 & -4;
    $58 = $57;
    $$0$i43 = $58;
   } else {
    $59 = $55 >>> 2;
    $60 = (141120 + ($59<<2)|0);
    $61 = HEAP32[$60>>2]|0;
    $$0$i43 = $61;
   }
   $62 = ((($$0$i43)) + 12|0);
   $63 = HEAP32[$62>>2]|0;
   $64 = $63 & 262144;
   $65 = ($64|0)==(0);
   $53 = (($$03259) + 1)|0;
   if (!($65)) {
    break;
   }
   $52 = ($53>>>0)<($51>>>0);
   if ($52) {
    $$03259 = $53;
   } else {
    $$0 = 0;
    label = 27;
    break L11;
   }
  }
  if ($56) {
   $66 = $55 & -4;
   $67 = $66;
   $$2$ph = $67;
  } else {
   $68 = $55 >>> 2;
   $69 = (141120 + ($68<<2)|0);
   $70 = HEAP32[$69>>2]|0;
   $$2$ph = $70;
  }
  $71 = ($$2$ph|0)==(0|0);
  if ($71) {
   $$0 = 0;
   label = 27;
   break;
  } else {
   $$034 = $$2$ph;
  }
 }
 if ((label|0) == 10) {
  $21 = HEAP32[35945]|0;
  $$034$idx = ((($$034)) + 28|0);
  $$034$idx$val = HEAP32[$$034$idx>>2]|0;
  $22 = ($21|0)!=(0);
  $23 = ($$034$idx$val|0)!=(0|0);
  $or$cond$i = $22 & $23;
  if (!($or$cond$i)) {
   $$0 = 1;
   return ($$0|0);
  }
  $24 = HEAP32[$$034$idx$val>>2]|0;
  $25 = ($24|0)==(0);
  if ($25) {
   $$0 = 1;
   return ($$0|0);
  }
  $26 = ((($$034$idx$val)) + 4|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + -8|0);
  $$033$i = $28;$$036$i = $24;
  while(1) {
   $29 = (($$036$i) + 1)|0;
   $30 = $29 >>> 1;
   $31 = (($$033$i) + ($30<<3)|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ($32|0)==($21|0);
   if ($33) {
    break;
   }
   $34 = ($32>>>0)<($21>>>0);
   $35 = (($$036$i) - ($30))|0;
   $36 = (($30) + -1)|0;
   $$137$i = $34 ? $35 : $36;
   $$134$i = $34 ? $31 : $$033$i;
   $37 = ($$137$i|0)==(0);
   if ($37) {
    $$0 = 1;
    label = 27;
    break;
   } else {
    $$033$i = $$134$i;$$036$i = $$137$i;
   }
  }
  if ((label|0) == 27) {
   return ($$0|0);
  }
  $38 = (((($$033$i) + ($30<<3)|0)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  $phitmp49 = $39 >>> 5;
  $phitmp = $phitmp49 & 1;
  $phitmp50 = $phitmp ^ 1;
  $$0 = $phitmp50;
  return ($$0|0);
 }
 else if ((label|0) == 27) {
  return ($$0|0);
 }
 return (0)|0;
}
function _g_type_value_table_peek($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i54 = 0, $$0$i55 = 0, $$044$lcssa = 0, $$04482 = 0, $$04496 = 0, $$04590 = 0, $$04995 = 0, $$251$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $cond = 0, $or$cond = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = ($0>>>0)>(1020);
 if ($1) {
  $2 = $0 & -4;
  $3 = $2;
  $$0$i = $3;
 } else {
  $4 = $0 >>> 2;
  $5 = (141120 + ($4<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0$i = $6;
 }
 $cond = ($$0$i|0)==(0|0);
 L5: do {
  if ($cond) {
   $$044$lcssa = $0;
   label = 24;
  } else {
   $7 = HEAP32[$$0$i>>2]|0;
   $8 = ($7|0)==(0);
   if (!($8)) {
    $9 = ((($$0$i)) + 12|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = $10 & 524288;
    $12 = ($11|0)==(0);
    if (!($12)) {
     $13 = ((($$0$i)) + 20|0);
     $14 = HEAP32[$13>>2]|0;
     $15 = HEAP32[$14>>2]|0;
     $$0 = $15;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $$04496 = $0;$$04995 = $$0$i;
   L12: while(1) {
    $16 = ((($$04995)) + 20|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    if ($18) {
     $$04482 = $$04496;
     break L5;
    }
    $19 = HEAP32[$$04995>>2]|0;
    $20 = ($19|0)==(0);
    if ($20) {
     $$04482 = $$04496;
     break L5;
    }
    $21 = HEAP32[$16>>2]|0;
    $22 = HEAP32[$21>>2]|0;
    $23 = HEAP32[$22>>2]|0;
    $24 = ($23|0)==(0|0);
    if (!($24)) {
     label = 23;
     break;
    }
    $25 = ((($$04995)) + 12|0);
    $26 = HEAP32[$25>>2]|0;
    $27 = $26 & 255;
    $28 = (((($$04995)) + 40|0) + ($27<<2)|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = ($29|0)!=(8);
    $31 = $26 & 130816;
    $32 = ($31|0)==(0);
    $or$cond = $30 | $32;
    if ($or$cond) {
     $$0 = 0;
     label = 32;
     break;
    }
    $33 = ((($$04995)) + 36|0);
    $34 = HEAP32[$33>>2]|0;
    $35 = $26 >>> 8;
    $36 = $35 & 511;
    $$04590 = 0;
    while(1) {
     $39 = (($34) + ($$04590<<2)|0);
     $40 = HEAP32[$39>>2]|0;
     $41 = ($40>>>0)>(1020);
     if ($41) {
      $42 = $40 & -4;
      $43 = $42;
      $$0$i55 = $43;
     } else {
      $44 = $40 >>> 2;
      $45 = (141120 + ($44<<2)|0);
      $46 = HEAP32[$45>>2]|0;
      $$0$i55 = $46;
     }
     $47 = ((($$0$i55)) + 12|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = $48 & 262144;
     $50 = ($49|0)==(0);
     $38 = (($$04590) + 1)|0;
     if (!($50)) {
      break;
     }
     $37 = ($38>>>0)<($36>>>0);
     if ($37) {
      $$04590 = $38;
     } else {
      $$0 = 0;
      label = 32;
      break L12;
     }
    }
    if ($41) {
     $51 = $40 & -4;
     $52 = $51;
     $$251$ph = $52;
    } else {
     $53 = $40 >>> 2;
     $54 = (141120 + ($53<<2)|0);
     $55 = HEAP32[$54>>2]|0;
     $$251$ph = $55;
    }
    $56 = ($$251$ph|0)==(0|0);
    if ($56) {
     $$044$lcssa = $40;
     label = 24;
     break L5;
    } else {
     $$04496 = $40;$$04995 = $$251$ph;
    }
   }
   if ((label|0) == 23) {
    $57 = HEAP32[$16>>2]|0;
    $58 = HEAP32[$57>>2]|0;
    STACKTOP = sp;return ($58|0);
   }
   else if ((label|0) == 32) {
    STACKTOP = sp;return ($$0|0);
   }
  }
 } while(0);
 if ((label|0) == 24) {
  HEAP32[$vararg_buffer>>2] = $$044$lcssa;
  _g_log(0,16,129644,$vararg_buffer);
  $$04482 = $$044$lcssa;
 }
 $59 = ($$04482|0)==(0);
 if ($59) {
  $$0$i54 = 124803;
 } else {
  $60 = ($$04482>>>0)>(1020);
  if ($60) {
   $61 = $$04482 & -4;
   $62 = $61;
   $$0$i$i = $62;
  } else {
   $63 = $$04482 >>> 2;
   $64 = (141120 + ($63<<2)|0);
   $65 = HEAP32[$64>>2]|0;
   $$0$i$i = $65;
  }
  $66 = ($$0$i$i|0)==(0|0);
  if ($66) {
   $$0$i54 = 124793;
  } else {
   $67 = ((($$0$i$i)) + 24|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = (_g_quark_to_string($68)|0);
   $$0$i54 = $69;
  }
 }
 HEAP32[$vararg_buffer1>>2] = $$0$i54;
 _g_log(0,16,129705,$vararg_buffer1);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __g_type_boxed_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ((($$0$i)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (ftCall_ii($11|0,$1)|0);
 return ($12|0);
}
function __g_type_boxed_free($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ((($$0$i)) + 20|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 8|0);
 $11 = HEAP32[$10>>2]|0;
 ftCall_vi($11|0,$1);
 return;
}
function __g_type_boxed_init($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0>>>0)>(1020);
 if ($3) {
  $4 = $0 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $0 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ((($$0$i)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($10)) + 4|0);
 HEAP32[$11>>2] = $1;
 $12 = HEAP32[$9>>2]|0;
 $13 = ((($12)) + 8|0);
 HEAP32[$13>>2] = $2;
 return;
}
function _gobject_init() {
 var $$0$i = 0, $$0$i22 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, dest = 0, label = 0, sp = 0;
 var stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer = sp + 24|0;
 $0 = sp + 28|0;
 $1 = sp;
 $2 = (_g_getenv(129776)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  ;HEAP32[$1>>2]=HEAP32[1152>>2]|0;HEAP32[$1+4>>2]=HEAP32[1152+4>>2]|0;HEAP32[$1+8>>2]=HEAP32[1152+8>>2]|0;HEAP32[$1+12>>2]=HEAP32[1152+12>>2]|0;HEAP32[$1+16>>2]=HEAP32[1152+16>>2]|0;HEAP32[$1+20>>2]=HEAP32[1152+20>>2]|0;
  (_g_parse_debug_string($2,$1,3)|0);
 }
 $4 = (_g_quark_from_static_string(129790)|0);
 HEAP32[35945] = $4;
 $5 = (_g_quark_from_static_string(129818)|0);
 HEAP32[35943] = $5;
 $6 = (_g_quark_from_static_string(129847)|0);
 HEAP32[35944] = $6;
 $7 = (_g_hash_table_new(254,255)|0);
 HEAP32[35956] = $7;
 HEAP32[35280] = 0;
 $8 = (_g_intern_static_string(129881)|0);
 $9 = HEAP32[29757]|0;
 $10 = ($9|0)==(1);
 if ($10) {
  HEAP32[29757] = 2;
 }
 $11 = (_type_node_any_new_W(0,4,$8,0,0)|0);
 $12 = ((($11)) + 12|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = $13 & 255;
 $15 = (((($11)) + 40|0) + ($14<<2)|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($11)) + 40|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($16|0)==($18|0);
 do {
  if ($19) {
   $$0$i = $11;
  } else {
   $20 = ($16>>>0)>(1020);
   if ($20) {
    $21 = $16 & -4;
    $22 = $21;
    $$0$i = $22;
    break;
   } else {
    $23 = $16 >>> 2;
    $24 = (141120 + ($23<<2)|0);
    $25 = HEAP32[$24>>2]|0;
    $$0$i = $25;
    break;
   }
  }
 } while(0);
 $26 = ($$0$i|0)==(0|0);
 $27 = ((($$0$i)) + -4|0);
 $28 = $26 ? 0 : $27;
 HEAP32[$28>>2] = 0;
 $29 = ($18|0)==(4);
 if (!($29)) {
  _g_assertion_message_expr(0,125112,4585,129886,129899);
  // unreachable;
 }
 dest=$0; stop=dest+36|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $30 = (_g_intern_static_string(129919)|0);
 $31 = HEAP32[29757]|0;
 $32 = ($31|0)==(2);
 if ($32) {
  HEAP32[29757] = 3;
 }
 $33 = (_type_node_any_new_W(0,8,$30,0,4)|0);
 $34 = ((($33)) + 12|0);
 $35 = HEAP32[$34>>2]|0;
 $36 = $35 & 255;
 $37 = (((($33)) + 40|0) + ($36<<2)|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($33)) + 40|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($38|0)==($40|0);
 do {
  if ($41) {
   $$0$i22 = $33;
  } else {
   $42 = ($38>>>0)>(1020);
   if ($42) {
    $43 = $38 & -4;
    $44 = $43;
    $$0$i22 = $44;
    break;
   } else {
    $45 = $38 >>> 2;
    $46 = (141120 + ($45<<2)|0);
    $47 = HEAP32[$46>>2]|0;
    $$0$i22 = $47;
    break;
   }
  }
 } while(0);
 $48 = ($$0$i22|0)==(0|0);
 $49 = ((($$0$i22)) + -4|0);
 $50 = $48 ? 0 : $49;
 HEAP32[$50>>2] = 4;
 _type_data_make_W($33,$0,0);
 $51 = ($40|0)==(8);
 if (!($51)) {
  _g_assertion_message_expr(0,125112,4593,129886,129930);
  // unreachable;
 }
 __g_value_c_init();
 $52 = (_g_type_plugin_get_type()|0);
 $53 = ($52|0)==(-1);
 if (!($53)) {
  __g_value_types_init();
  __g_enum_types_init();
  __g_boxed_type_init();
  __g_param_type_init();
  __g_object_type_init();
  __g_param_spec_types_init();
  __g_signal_init();
  STACKTOP = sp;return;
 }
 _g_log(0,4,129955,$vararg_buffer);
 while(1) {
 }
}
function _g_type_class_add_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i27 = 0, $$0$i29 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = ($$0$i|0)==(0|0);
 if (!($9)) {
  $10 = ((($$0$i)) + 12|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = $11 & 262144;
  $13 = ($12|0)==(0);
  if (!($13)) {
   $14 = ((($$0$i)) + 20|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP32[$14>>2]|0;
    $18 = ((($17)) + 32|0);
    $19 = HEAP32[$18>>2]|0;
    $20 = ($19|0)==($0|0);
    if ($20) {
     $31 = ((($$0$i)) + 44|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ($32|0)==(0);
     if (!($33)) {
      $34 = ($32>>>0)>(1020);
      if ($34) {
       $35 = $32 & -4;
       $36 = $35;
       $$0$i27 = $36;
      } else {
       $37 = $32 >>> 2;
       $38 = (141120 + ($37<<2)|0);
       $39 = HEAP32[$38>>2]|0;
       $$0$i27 = $39;
      }
      $40 = HEAP32[$14>>2]|0;
      $41 = ((($40)) + 38|0);
      $42 = HEAP16[$41>>1]|0;
      $43 = ((($$0$i27)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ((($44)) + 38|0);
      $46 = HEAP16[$45>>1]|0;
      $47 = ($42<<16>>16)==($46<<16>>16);
      if (!($47)) {
       _g_log(0,16,130066,$vararg_buffer1);
       STACKTOP = sp;return;
      }
     }
     $48 = HEAP32[$14>>2]|0;
     $49 = ((($48)) + 38|0);
     $50 = HEAP16[$49>>1]|0;
     $51 = $50&65535;
     $52 = (($1) + 7)|0;
     $53 = (($52) + ($51))|0;
     $54 = $53 & -8;
     $55 = ($54>>>0)<(65536);
     if (!($55)) {
      _g_assertion_message_expr(0,125112,4778,130133,130158);
      // unreachable;
     }
     $56 = $54&65535;
     $57 = HEAP32[$14>>2]|0;
     $58 = ((($57)) + 38|0);
     HEAP16[$58>>1] = $56;
     STACKTOP = sp;return;
    }
   }
  }
 }
 $21 = ($2|0)==(0);
 if ($21) {
  $$0$i29 = 124803;
 } else {
  if ($3) {
   $22 = $2 & -4;
   $23 = $22;
   $$0$i$i = $23;
  } else {
   $24 = $2 >>> 2;
   $25 = (141120 + ($24<<2)|0);
   $26 = HEAP32[$25>>2]|0;
   $$0$i$i = $26;
  }
  $27 = ($$0$i$i|0)==(0|0);
  if ($27) {
   $$0$i29 = 124793;
  } else {
   $28 = ((($$0$i$i)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = (_g_quark_to_string($29)|0);
   $$0$i29 = $30;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i29;
 _g_log(0,16,129999,$vararg_buffer);
 STACKTOP = sp;return;
}
function _g_type_add_instance_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i12 = 0, $$0$i11 = 0, $$0$i14 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($0>>>0)>(1020);
 if ($2) {
  $3 = $0 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $0 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 393216;
  $12 = ($11|0)==(393216);
  if ($12) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ($14|0)==(0|0);
   if (!($15)) {
    $26 = ((($$0$i)) + 4|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = ($27|0)==(0|0);
    if ($28) {
     $$0 = $1;
     STACKTOP = sp;return ($$0|0);
    }
    $29 = ($0|0)==(0);
    if ($29) {
     $$0$i11 = 124803;
    } else {
     if ($2) {
      $30 = $0 & -4;
      $31 = $30;
      $$0$i$i = $31;
     } else {
      $32 = $0 >>> 2;
      $33 = (141120 + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $$0$i$i = $34;
     }
     $35 = ($$0$i$i|0)==(0|0);
     if ($35) {
      $$0$i11 = 124793;
     } else {
      $36 = ((($$0$i$i)) + 24|0);
      $37 = HEAP32[$36>>2]|0;
      $38 = (_g_quark_to_string($37)|0);
      $$0$i11 = $38;
     }
    }
    HEAP32[$vararg_buffer1>>2] = $$0$i11;
    _g_log(0,16,130181,$vararg_buffer1);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  }
 }
 $16 = ($0|0)==(0);
 if ($16) {
  $$0$i14 = 124803;
 } else {
  if ($2) {
   $17 = $0 & -4;
   $18 = $17;
   $$0$i$i12 = $18;
  } else {
   $19 = $0 >>> 2;
   $20 = (141120 + ($19<<2)|0);
   $21 = HEAP32[$20>>2]|0;
   $$0$i$i12 = $21;
  }
  $22 = ($$0$i$i12|0)==(0|0);
  if ($22) {
   $$0$i14 = 124793;
  } else {
   $23 = ((($$0$i$i12)) + 24|0);
   $24 = HEAP32[$23>>2]|0;
   $25 = (_g_quark_to_string($24)|0);
   $$0$i14 = $25;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i14;
 _g_log(0,16,129999,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _g_type_class_adjust_private_offset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i34 = 0, $$0$i36 = 0, $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2>>>0)>(1020);
 if ($3) {
  $4 = $2 & -4;
  $5 = $4;
  $$0$i = $5;
 } else {
  $6 = $2 >>> 2;
  $7 = (141120 + ($6<<2)|0);
  $8 = HEAP32[$7>>2]|0;
  $$0$i = $8;
 }
 $9 = HEAP32[$1>>2]|0;
 $10 = ($9|0)>(0);
 if (!($10)) {
  STACKTOP = sp;return;
 }
 $11 = ($$0$i|0)==(0|0);
 do {
  if ($11) {
   label = 8;
  } else {
   $12 = ((($$0$i)) + 12|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = $13 & 393216;
   $15 = ($14|0)==(393216);
   if ($15) {
    $16 = ((($$0$i)) + 20|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    if ($18) {
     label = 8;
    } else {
     $29 = ((($$0$i)) + 44|0);
     $30 = HEAP32[$29>>2]|0;
     $31 = ($30|0)==(0);
     if (!($31)) {
      $32 = ($30>>>0)>(1020);
      if ($32) {
       $33 = $30 & -4;
       $34 = $33;
       $$0$i34 = $34;
      } else {
       $35 = $30 >>> 2;
       $36 = (141120 + ($35<<2)|0);
       $37 = HEAP32[$36>>2]|0;
       $$0$i34 = $37;
      }
      $38 = HEAP32[$16>>2]|0;
      $39 = ((($38)) + 38|0);
      $40 = HEAP16[$39>>1]|0;
      $41 = ((($$0$i34)) + 20|0);
      $42 = HEAP32[$41>>2]|0;
      $43 = ((($42)) + 38|0);
      $44 = HEAP16[$43>>1]|0;
      $45 = ($40<<16>>16)==($44<<16>>16);
      if (!($45)) {
       _g_log(0,16,130245,$vararg_buffer1);
       $$sink = 0;
       break;
      }
     }
     $46 = HEAP32[$16>>2]|0;
     $47 = ((($46)) + 38|0);
     $48 = HEAP16[$47>>1]|0;
     $49 = $48&65535;
     $50 = (($9) + 7)|0;
     $51 = (($50) + ($49))|0;
     $52 = $51 & -8;
     $53 = ($52|0)<(65536);
     if ($53) {
      $54 = $52&65535;
      $55 = HEAP32[$16>>2]|0;
      $56 = ((($55)) + 38|0);
      HEAP16[$56>>1] = $54;
      $57 = HEAP32[$16>>2]|0;
      $58 = ((($57)) + 38|0);
      $59 = HEAP16[$58>>1]|0;
      $60 = $59&65535;
      $61 = (0 - ($60))|0;
      $$sink = $61;
      break;
     } else {
      _g_assertion_message_expr(0,125112,4883,130315,130158);
      // unreachable;
     }
    }
   } else {
    label = 8;
   }
  }
 } while(0);
 if ((label|0) == 8) {
  $19 = ($2|0)==(0);
  if ($19) {
   $$0$i36 = 124803;
  } else {
   if ($3) {
    $20 = $2 & -4;
    $21 = $20;
    $$0$i$i = $21;
   } else {
    $22 = $2 >>> 2;
    $23 = (141120 + ($22<<2)|0);
    $24 = HEAP32[$23>>2]|0;
    $$0$i$i = $24;
   }
   $25 = ($$0$i$i|0)==(0|0);
   if ($25) {
    $$0$i36 = 124793;
   } else {
    $26 = ((($$0$i$i)) + 24|0);
    $27 = HEAP32[$26>>2]|0;
    $28 = (_g_quark_to_string($27)|0);
    $$0$i36 = $28;
   }
  }
  HEAP32[$vararg_buffer>>2] = $$0$i36;
  _g_log(0,16,129999,$vararg_buffer);
  $$sink = 0;
 }
 HEAP32[$1>>2] = $$sink;
 STACKTOP = sp;return;
}
function _g_type_instance_get_private($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i11 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($1>>>0)>(1020);
 if ($2) {
  $3 = $1 & -4;
  $4 = $3;
  $$0$i = $4;
 } else {
  $5 = $1 >>> 2;
  $6 = (141120 + ($5<<2)|0);
  $7 = HEAP32[$6>>2]|0;
  $$0$i = $7;
 }
 $8 = ($$0$i|0)==(0|0);
 if (!($8)) {
  $9 = ((($$0$i)) + 12|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10 & 262144;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($$0$i)) + 20|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($14)) + 38|0);
   $16 = HEAP16[$15>>1]|0;
   $17 = $16&65535;
   $18 = (0 - ($17))|0;
   $19 = (($0) + ($18)|0);
   $$0 = $19;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $20 = HEAP32[$0>>2]|0;
 $21 = HEAP32[$20>>2]|0;
 $22 = ($21|0)==(0);
 if ($22) {
  $$0$i11 = 124803;
 } else {
  $23 = ($21>>>0)>(1020);
  if ($23) {
   $24 = $21 & -4;
   $25 = $24;
   $$0$i$i = $25;
  } else {
   $26 = $21 >>> 2;
   $27 = (141120 + ($26<<2)|0);
   $28 = HEAP32[$27>>2]|0;
   $$0$i$i = $28;
  }
  $29 = ($$0$i$i|0)==(0|0);
  if ($29) {
   $$0$i11 = 124793;
  } else {
   $30 = ((($$0$i$i)) + 24|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = (_g_quark_to_string($31)|0);
   $$0$i11 = $32;
  }
 }
 HEAP32[$vararg_buffer>>2] = $$0$i11;
 _g_log(0,16,129595,$vararg_buffer);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function __g_value_c_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_malloc(32)|0);
 $1 = $0;
 $2 = $1;
 HEAP32[$2>>2] = 0;
 $3 = (($1) + 4)|0;
 $4 = $3;
 HEAP32[$4>>2] = 0;
 HEAP32[35957] = $0;
 return;
}
function _g_value_init($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0;
 var $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = (_g_type_check_is_value_type($1)|0);
 $3 = ($2|0)==(0);
 $$pre = HEAP32[$0>>2]|0;
 $4 = ($$pre|0)==(0);
 do {
  if ($3) {
   $9 = (_g_type_name($1)|0);
   if ($4) {
    $13 = (_g_type_value_table_peek($1)|0);
    $14 = ($13|0)==(0|0);
    $15 = $14 ? 130478 : 130526;
    HEAP32[$vararg_buffer3>>2] = 130659;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $9;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $15;
    _g_log(0,16,130611,$vararg_buffer3);
    STACKTOP = sp;return ($0|0);
   } else {
    $12 = $9;
   }
  } else {
   if (!($4)) {
    $5 = (_g_type_name($1)|0);
    $12 = $5;
    break;
   }
   $6 = (_g_type_value_table_peek($1)|0);
   HEAP32[$0>>2] = $1;
   $7 = ((($0)) + 8|0);
   ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;HEAP32[$7+12>>2]=0|0;
   $8 = HEAP32[$6>>2]|0;
   ftCall_vi($8|0,$0);
   STACKTOP = sp;return ($0|0);
  }
 } while(0);
 $10 = HEAP32[$0>>2]|0;
 $11 = (_g_type_name($10)|0);
 HEAP32[$vararg_buffer>>2] = 130442;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $12;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $11;
 _g_log(0,16,130350,$vararg_buffer);
 STACKTOP = sp;return ($0|0);
}
function _g_value_copy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 if ($2) {
  return;
 }
 $3 = HEAP32[$1>>2]|0;
 $4 = (_g_type_value_table_peek($3)|0);
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if (!($7)) {
  ftCall_vi($6|0,$1);
 }
 HEAP32[$1>>2] = $3;
 $8 = ((($1)) + 8|0);
 ;HEAP32[$8>>2]=0|0;HEAP32[$8+4>>2]=0|0;HEAP32[$8+8>>2]=0|0;HEAP32[$8+12>>2]=0|0;
 $9 = ((($4)) + 8|0);
 $10 = HEAP32[$9>>2]|0;
 ftCall_vii($10|0,$0,$1);
 return;
}
function _g_value_reset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (_g_type_value_table_peek($1)|0);
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  ftCall_vi($4|0,$0);
 }
 HEAP32[$0>>2] = $1;
 $6 = ((($0)) + 8|0);
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 $7 = HEAP32[$2>>2]|0;
 ftCall_vi($7|0,$0);
 return ($0|0);
}
function _g_value_unset($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 if ($2) {
  return;
 }
 $3 = (_g_type_value_table_peek($1)|0);
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if (!($6)) {
  ftCall_vi($5|0,$0);
 }
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;
 return;
}
function _g_value_peek_pointer($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (_g_type_value_table_peek($1)|0);
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$0 = 0;
  return ($$0|0);
 }
 $6 = (ftCall_ii($4|0,$0)|0);
 $$0 = $6;
 return ($$0|0);
}
function _g_value_init_from_instance($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp + 8|0;
 $2 = sp;
 $3 = ($1|0)==(0|0);
 do {
  if ($3) {
   $13 = 0;
  } else {
   $4 = HEAP32[$1>>2]|0;
   $5 = ($4|0)==(0|0);
   if ($5) {
    label = 4;
   } else {
    $6 = HEAP32[$4>>2]|0;
    $7 = ($6|0)==(80);
    if ($7) {
     $9 = 80;
    } else {
     label = 4;
    }
   }
   if ((label|0) == 4) {
    $8 = (_g_type_check_instance_is_a($1,80)|0);
    $phitmp = ($8|0)==(0);
    if ($phitmp) {
     $13 = $4;
     break;
    }
    $$pre = HEAP32[$4>>2]|0;
    $9 = $$pre;
   }
   HEAP32[$0>>2] = $9;
   $10 = ((($0)) + 8|0);
   ;HEAP32[$10>>2]=0|0;HEAP32[$10+4>>2]=0|0;HEAP32[$10+8>>2]=0|0;HEAP32[$10+12>>2]=0|0;
   $11 = (_g_object_ref($1)|0);
   HEAP32[$10>>2] = $11;
   STACKTOP = sp;return;
  }
 } while(0);
 $12 = HEAP32[$13>>2]|0;
 $14 = (_g_type_value_table_peek($12)|0);
 $15 = $2;
 $16 = $15;
 HEAP32[$16>>2] = 0;
 $17 = (($15) + 4)|0;
 $18 = $17;
 HEAP32[$18>>2] = 0;
 HEAP32[$2>>2] = $1;
 HEAP32[$0>>2] = $12;
 $19 = ((($0)) + 8|0);
 ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;
 $20 = HEAP32[$14>>2]|0;
 ftCall_vi($20|0,$0);
 $21 = ((($14)) + 20|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (ftCall_iiiii($22|0,$0,1,$2,0)|0);
 $24 = ($23|0)==(0|0);
 if (!($24)) {
  HEAP32[$vararg_buffer>>2] = 130702;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $23;
  _g_log(0,16,130695,$vararg_buffer);
  _g_free($23);
  HEAP32[$0>>2] = $12;
  ;HEAP32[$19>>2]=0|0;HEAP32[$19+4>>2]=0|0;HEAP32[$19+8>>2]=0|0;HEAP32[$19+12>>2]=0|0;
  $25 = HEAP32[$14>>2]|0;
  ftCall_vi($25|0,$0);
 }
 STACKTOP = sp;return;
}
function _g_value_register_transform_func($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$i$i$i = 0, $$0$i = 0, $$0$i4$i$i = 0, $$031$i$i = 0, $$033$i$i = 0, $$0507$i$i = 0, $$0507$i$i$i = 0, $$0536$i$i = 0, $$0536$i$i$i = 0, $$151$i$i = 0, $$151$i$i$i = 0, $$154$i$i = 0, $$154$i$i$i = 0, $$op$i2$i$i = 0, $$op2$i3$i$i = 0, $$pr$i = 0, $$sink18 = 0, $$sink19 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $phitmp$i$i$i = 0, $spec$select$i$i = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $1;
 $5 = ((($3)) + 8|0);
 HEAP32[$5>>2] = $2;
 $6 = HEAP32[35957]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$6>>2]|0;
 $9 = ($8|0)==(0);
 if ($9) {
  label = 9;
 } else {
  $$0507$i$i = $8;$$0536$i$i = 0;
  while(1) {
   $10 = (($$0536$i$i) + ($$0507$i$i))|0;
   $11 = $10 >>> 1;
   $12 = ($11*12)|0;
   $13 = (($7) + ($12)|0);
   $14 = (_transform_entries_cmp($3,$13)|0);
   $15 = ($14|0)==(0);
   if ($15) {
    label = 5;
    break;
   }
   $16 = ($14|0)<(0);
   $17 = (($11) + 1)|0;
   $$154$i$i = $16 ? $$0536$i$i : $17;
   $$151$i$i = $16 ? $11 : $$0507$i$i;
   $18 = ($$154$i$i>>>0)<($$151$i$i>>>0);
   if ($18) {
    $$0507$i$i = $$151$i$i;$$0536$i$i = $$154$i$i;
   } else {
    break;
   }
  }
  if ((label|0) == 5) {
   $19 = ($13|0)==(0|0);
   if (!($19)) {
    dest=$13; src=$3; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
    $$0$i = $6;
    HEAP32[35957] = $$0$i;
    STACKTOP = sp;return;
   }
  }
  $$pr$i = HEAP32[$6>>2]|0;
  $20 = ($$pr$i|0)==(0);
  if ($20) {
   label = 9;
  } else {
   $$0507$i$i$i = $$pr$i;$$0536$i$i$i = 0;
   while(1) {
    $26 = (($$0536$i$i$i) + ($$0507$i$i$i))|0;
    $27 = $26 >>> 1;
    $28 = ($27*12)|0;
    $29 = (($7) + ($28)|0);
    $30 = (_transform_entries_cmp($3,$29)|0);
    $31 = ($30|0)==(0);
    if ($31) {
     $$0$i = $6;
     label = 21;
     break;
    }
    $32 = ($30|0)<(0);
    $33 = (($27) + 1)|0;
    $$154$i$i$i = $32 ? $$0536$i$i$i : $33;
    $$151$i$i$i = $32 ? $27 : $$0507$i$i$i;
    $34 = ($$154$i$i$i>>>0)<($$151$i$i$i>>>0);
    if ($34) {
     $$0507$i$i$i = $$151$i$i$i;$$0536$i$i$i = $$154$i$i$i;
    } else {
     break;
    }
   }
   if ((label|0) == 21) {
    HEAP32[35957] = $$0$i;
    STACKTOP = sp;return;
   }
   $phitmp$i$i$i = ($30|0)>(0);
   $35 = ((($29)) + 12|0);
   $spec$select$i$i = $phitmp$i$i$i ? $35 : $29;
   $36 = ($spec$select$i$i|0)==(0|0);
   if ($36) {
    $$0$i = $6;
    HEAP32[35957] = $$0$i;
    STACKTOP = sp;return;
   }
   $37 = $spec$select$i$i;
   $38 = $7;
   $39 = (($37) - ($38))|0;
   $40 = (($39>>>0) / 12)&-1;
   $41 = HEAP32[$6>>2]|0;
   $42 = (($41) + 1)|0;
   $43 = ($40>>>0)<($42>>>0);
   $$$i$i$i = $43 ? $40 : $42;
   $44 = ($41*12)|0;
   $45 = ($44|0)==(-20);
   if ($45) {
    $55 = 0;
   } else {
    $46 = (($44) + 19)|0;
    $47 = (Math_clz32(($46|0))|0);
    $48 = $47 ^ 31;
    $$op$i2$i$i = 2 << $48;
    $55 = $$op$i2$i$i;
   }
   $49 = ($44|0)==(-8);
   if ($49) {
    $54 = 0;
   } else {
    $50 = (($44) + 7)|0;
    $51 = (Math_clz32(($50|0))|0);
    $52 = $51 ^ 31;
    $$op2$i3$i$i = 2 << $52;
    $54 = $$op2$i3$i$i;
   }
   $53 = ($54|0)==($55|0);
   if ($53) {
    $$0$i4$i$i = $6;
   } else {
    $56 = (_g_realloc($6,$55)|0);
    $$0$i4$i$i = $56;
   }
   $57 = ((($$0$i4$i$i)) + 8|0);
   $58 = ($$$i$i$i*12)|0;
   $59 = (($57) + ($58)|0);
   $60 = ((($59)) + 12|0);
   $61 = HEAP32[$$0$i4$i$i>>2]|0;
   $62 = (($61) - ($$$i$i$i))|0;
   $63 = ($62*12)|0;
   _memmove(($60|0),($59|0),($63|0))|0;
   $$031$i$i = $$0$i4$i$i;$$033$i$i = $59;$$sink18 = $$0$i4$i$i;$$sink19 = $61;
  }
 }
 if ((label|0) == 9) {
  $21 = (_g_realloc($6,32)|0);
  $22 = ((($21)) + 8|0);
  $23 = ((($21)) + 20|0);
  $24 = HEAP32[$21>>2]|0;
  $25 = ($24*12)|0;
  _memmove(($23|0),($22|0),($25|0))|0;
  $$031$i$i = $21;$$033$i$i = $22;$$sink18 = $21;$$sink19 = $24;
 }
 $64 = (($$sink19) + 1)|0;
 HEAP32[$$sink18>>2] = $64;
 dest=$$033$i$i; src=$3; stop=dest+12|0; do { HEAP8[dest>>0]=HEAP8[src>>0]|0; dest=dest+1|0; src=src+1|0; } while ((dest|0) < (stop|0));
 $$0$i = $$031$i$i;
 HEAP32[35957] = $$0$i;
 STACKTOP = sp;return;
}
function _transform_entries_cmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$1>>2]|0;
 $4 = ($2>>>0)>($3>>>0);
 $5 = ($2|0)!=($3|0);
 $6 = $5 << 31 >> 31;
 $7 = $4 ? 1 : $6;
 $8 = ($7|0)==(0);
 if (!($8)) {
  $$0 = $7;
  return ($$0|0);
 }
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($1)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10>>>0)>($12>>>0);
 $14 = ($10|0)!=($12|0);
 $15 = $14 << 31 >> 31;
 $16 = $13 ? 1 : $15;
 $$0 = $16;
 return ($$0|0);
}
function _g_value_type_compatible($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_type_is_a($0,$1)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $7 = 0;
  return ($7|0);
 }
 $4 = (_g_type_value_table_peek($1)|0);
 $5 = (_g_type_value_table_peek($0)|0);
 $6 = ($4|0)==($5|0);
 $phitmp = $6&1;
 $7 = $phitmp;
 return ($7|0);
}
function _g_type_plugin_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[35958]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  $4 = $0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(130738)|0);
 $3 = (_g_type_register_static(8,$2,119032,0)|0);
 HEAP32[35958] = $3;
 $4 = $3;
 return ($4|0);
}
function _g_type_plugin_use($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[35958]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = (_g_intern_static_string(130738)|0);
  $5 = (_g_type_register_static(8,$4,119032,0)|0);
  HEAP32[35958] = $5;
  $6 = $5;
 } else {
  $6 = $2;
 }
 $7 = (_g_type_interface_peek($1,$6)|0);
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$0);
 return;
}
function _g_type_plugin_complete_type_info($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[35958]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_g_intern_static_string(130738)|0);
  $8 = (_g_type_register_static(8,$7,119032,0)|0);
  HEAP32[35958] = $8;
  $9 = $8;
 } else {
  $9 = $5;
 }
 $10 = (_g_type_interface_peek($4,$9)|0);
 $11 = ((($10)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 ftCall_viiii($12|0,$0,$1,$2,$3);
 return;
}
function _g_type_plugin_complete_interface_info($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$0>>2]|0;
 $5 = HEAP32[35958]|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $7 = (_g_intern_static_string(130738)|0);
  $8 = (_g_type_register_static(8,$7,119032,0)|0);
  HEAP32[35958] = $8;
  $9 = $8;
 } else {
  $9 = $5;
 }
 $10 = (_g_type_interface_peek($4,$9)|0);
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 ftCall_viiii($12|0,$0,$1,$2,$3);
 return;
}
function __g_value_types_init() {
 var $0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $0 = sp;
 ;HEAP32[$0>>2]=0|0;HEAP32[$0+4>>2]=0|0;HEAP32[$0+8>>2]=0|0;HEAP32[$0+12>>2]=0|0;HEAP32[$0+16>>2]=0|0;HEAP32[$0+20>>2]=0|0;HEAP32[$0+24>>2]=0|0;HEAP32[$0+28>>2]=0|0;
 $1 = ((($0)) + 32|0);
 HEAP32[$1>>2] = 119068;
 $2 = (_g_intern_static_string(130750)|0);
 $3 = (_g_type_register_fundamental(12,$2,$0,119100,0)|0);
 $4 = ($3|0)==(12);
 if (!($4)) {
  _g_assertion_message_expr(0,130756,455,130793,130813);
  // unreachable;
 }
 $5 = (_g_intern_static_string(130833)|0);
 $6 = (_g_type_register_fundamental(16,$5,$0,119100,0)|0);
 $7 = ($6|0)==(16);
 if (!($7)) {
  _g_assertion_message_expr(0,130756,457,130793,130840);
  // unreachable;
 }
 HEAP32[$1>>2] = 119104;
 $8 = (_g_intern_static_string(130861)|0);
 $9 = (_g_type_register_fundamental(20,$8,$0,119100,0)|0);
 $10 = ($9|0)==(20);
 if (!($10)) {
  _g_assertion_message_expr(0,130756,475,130793,130870);
  // unreachable;
 }
 HEAP32[$1>>2] = 119136;
 $11 = (_g_intern_static_string(130893)|0);
 $12 = (_g_type_register_fundamental(24,$11,$0,119100,0)|0);
 $13 = ($12|0)==(24);
 if (!($13)) {
  _g_assertion_message_expr(0,130756,493,130793,130898);
  // unreachable;
 }
 $14 = (_g_intern_static_string(130917)|0);
 $15 = (_g_type_register_fundamental(28,$14,$0,119100,0)|0);
 $16 = ($15|0)==(28);
 if (!($16)) {
  _g_assertion_message_expr(0,130756,495,130793,130923);
  // unreachable;
 }
 HEAP32[$1>>2] = 119168;
 $17 = (_g_intern_static_string(130943)|0);
 $18 = (_g_type_register_fundamental(32,$17,$0,119100,0)|0);
 $19 = ($18|0)==(32);
 if (!($19)) {
  _g_assertion_message_expr(0,130756,513,130793,130949);
  // unreachable;
 }
 $20 = (_g_intern_static_string(130969)|0);
 $21 = (_g_type_register_fundamental(36,$20,$0,119100,0)|0);
 $22 = ($21|0)==(36);
 if (!($22)) {
  _g_assertion_message_expr(0,130756,515,130793,130976);
  // unreachable;
 }
 HEAP32[$1>>2] = 119200;
 $23 = (_g_intern_static_string(130997)|0);
 $24 = (_g_type_register_fundamental(40,$23,$0,119100,0)|0);
 $25 = ($24|0)==(40);
 if (!($25)) {
  _g_assertion_message_expr(0,130756,533,130793,131004);
  // unreachable;
 }
 $26 = (_g_intern_static_string(131025)|0);
 $27 = (_g_type_register_fundamental(44,$26,$0,119100,0)|0);
 $28 = ($27|0)==(44);
 if (!($28)) {
  _g_assertion_message_expr(0,130756,535,130793,131033);
  // unreachable;
 }
 HEAP32[$1>>2] = 119232;
 $29 = (_g_intern_static_string(131055)|0);
 $30 = (_g_type_register_fundamental(56,$29,$0,119100,0)|0);
 $31 = ($30|0)==(56);
 if (!($31)) {
  _g_assertion_message_expr(0,130756,553,130793,131062);
  // unreachable;
 }
 HEAP32[$1>>2] = 119264;
 $32 = (_g_intern_static_string(131083)|0);
 $33 = (_g_type_register_fundamental(60,$32,$0,119100,0)|0);
 $34 = ($33|0)==(60);
 if (!($34)) {
  _g_assertion_message_expr(0,130756,571,130793,131091);
  // unreachable;
 }
 HEAP32[$1>>2] = 119296;
 $35 = (_g_intern_static_string(131113)|0);
 $36 = (_g_type_register_fundamental(64,$35,$0,119100,0)|0);
 $37 = ($36|0)==(64);
 if (!($37)) {
  _g_assertion_message_expr(0,130756,589,130793,131124);
  // unreachable;
 }
 HEAP32[$1>>2] = 119328;
 $38 = (_g_intern_static_string(131146)|0);
 $39 = (_g_type_register_fundamental(68,$38,$0,119100,0)|0);
 $40 = ($39|0)==(68);
 if (!($40)) {
  _g_assertion_message_expr(0,130756,607,130793,131155);
  // unreachable;
 }
 HEAP32[$1>>2] = 119360;
 $41 = (_g_intern_static_string(131178)|0);
 $42 = (_g_type_register_fundamental(84,$41,$0,119100,0)|0);
 $43 = ($42|0)==(84);
 if ($43) {
  STACKTOP = sp;return;
 } else {
  _g_assertion_message_expr(0,130756,625,130793,131187);
  // unreachable;
 }
}
function _value_init_pointer($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_free_variant($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 134217728;
 $4 = ($3|0)==(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  return;
 }
 return;
}
function _value_copy_variant($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 return;
}
function _value_peek_pointer0($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _value_collect_variant($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (0|0);
}
function _value_lcopy_variant($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $$0 = 0;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _value_copy_pointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_pointer($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_string($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_free_string($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = $2 & 134217728;
 $4 = ($3|0)==(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 _g_free($6);
 return;
}
function _value_copy_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_strdup($3)|0);
 $5 = ((($1)) + 8|0);
 HEAP32[$5>>2] = $4;
 return;
}
function _value_collect_string($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = ((($0)) + 8|0);
  HEAP32[$6>>2] = 0;
  return (0|0);
 }
 $7 = $3 & 134217728;
 $8 = ($7|0)==(0);
 if ($8) {
  $11 = (_g_strdup($4)|0);
  $12 = ((($0)) + 8|0);
  HEAP32[$12>>2] = $11;
  return (0|0);
 } else {
  $9 = ((($0)) + 8|0);
  HEAP32[$9>>2] = $4;
  $10 = ((($0)) + 16|0);
  HEAP32[$10>>2] = 134217728;
  return (0|0);
 }
 return (0)|0;
}
function _value_lcopy_string($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$0>>2]|0;
   $7 = (_g_type_name($6)|0);
   HEAP32[$vararg_buffer>>2] = $7;
   $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
   $$0 = $8;
  } else {
   $9 = ((($0)) + 8|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = ($10|0)==(0|0);
   if ($11) {
    HEAP32[$4>>2] = 0;
    $$0 = 0;
    break;
   }
   $12 = $3 & 134217728;
   $13 = ($12|0)==(0);
   if ($13) {
    $14 = (_g_strdup($10)|0);
    HEAP32[$4>>2] = $14;
    $$0 = 0;
    break;
   } else {
    HEAP32[$4>>2] = $10;
    $$0 = 0;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _value_init_double($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAPF64[$1>>3] = 0.0;
 return;
}
function _value_copy_double($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0.0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = +HEAPF64[$2>>3];
 $4 = ((($1)) + 8|0);
 HEAPF64[$4>>3] = $3;
 return;
}
function _value_collect_double($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0.0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = +HEAPF64[$2>>3];
 $5 = ((($0)) + 8|0);
 HEAPF64[$5>>3] = $4;
 return (0|0);
}
function _value_lcopy_double($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0.0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = +HEAPF64[$9>>3];
  HEAPF64[$4>>3] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_float($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAPF32[$1>>2] = Math_fround(0.0);
 return;
}
function _value_copy_float($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_float($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0.0, $5 = Math_fround(0), $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = +HEAPF64[$2>>3];
 $5 = Math_fround($4);
 $6 = ((($0)) + 8|0);
 HEAPF32[$6>>2] = $5;
 return (0|0);
}
function _value_lcopy_float($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_int64($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = $1;
 $3 = $2;
 HEAP32[$3>>2] = 0;
 $4 = (($2) + 4)|0;
 $5 = $4;
 HEAP32[$5>>2] = 0;
 return;
}
function _value_copy_int64($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = $2;
 $4 = $3;
 $5 = HEAP32[$4>>2]|0;
 $6 = (($3) + 4)|0;
 $7 = $6;
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($1)) + 8|0);
 $10 = $9;
 $11 = $10;
 HEAP32[$11>>2] = $5;
 $12 = (($10) + 4)|0;
 $13 = $12;
 HEAP32[$13>>2] = $8;
 return;
}
function _value_collect_int64($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = $2;
 $5 = $4;
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) + 4)|0;
 $8 = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($0)) + 8|0);
 $11 = $10;
 $12 = $11;
 HEAP32[$12>>2] = $6;
 $13 = (($11) + 4)|0;
 $14 = $13;
 HEAP32[$14>>2] = $9;
 return (0|0);
}
function _value_lcopy_int64($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = $9;
  $11 = $10;
  $12 = HEAP32[$11>>2]|0;
  $13 = (($10) + 4)|0;
  $14 = $13;
  $15 = HEAP32[$14>>2]|0;
  $16 = $4;
  $17 = $16;
  HEAP32[$17>>2] = $12;
  $18 = (($16) + 4)|0;
  $19 = $18;
  HEAP32[$19>>2] = $15;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_init_long0($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 HEAP32[$1>>2] = 0;
 return;
}
function _value_copy_long0($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($1)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _value_collect_long($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_long($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_collect_int($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = HEAP32[$2>>2]|0;
 $5 = ((($0)) + 8|0);
 HEAP32[$5>>2] = $4;
 return (0|0);
}
function _value_lcopy_int($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_lcopy_boolean($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$4>>2] = $10;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _value_lcopy_char($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $10 = 0, $11 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = HEAP32[$0>>2]|0;
  $7 = (_g_type_name($6)|0);
  HEAP32[$vararg_buffer>>2] = $7;
  $8 = (_g_strdup_printf(131212,$vararg_buffer)|0);
  $$0 = $8;
  STACKTOP = sp;return ($$0|0);
 } else {
  $9 = ((($0)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = $10&255;
  HEAP8[$4>>0] = $11;
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _g_value_set_boolean($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)!=(0);
 $3 = $2&1;
 $4 = ((($0)) + 8|0);
 HEAP32[$4>>2] = $3;
 return;
}
function _g_value_set_int($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_set_uint($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_set_pointer($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = $1;
 return;
}
function _g_value_get_pointer($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_gtype_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143836)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[35959]|0;
  return ($4|0);
 }
 $2 = (_g_intern_static_string(131259)|0);
 $3 = (_g_type_register_static(68,$2,143840,0)|0);
 _g_once_init_leave(143836,$3);
 $4 = HEAP32[35959]|0;
 return ($4|0);
}
function _g_value_get_gtype($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 return ($2|0);
}
function _g_value_array_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_slice_alloc(12)|0);
 $2 = ((($1)) + 8|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($1)) + 4|0);
 HEAP32[$3>>2] = 0;
 HEAP32[$1>>2] = $0;
 $4 = ($0|0)==(0);
 if ($4) {
  HEAP32[$1>>2] = 0;
  return ($1|0);
 }
 $5 = (($0) + 7)|0;
 $6 = $5 & -8;
 HEAP32[$2>>2] = $6;
 $7 = (_g_realloc_n(0,$6,24)|0);
 HEAP32[$3>>2] = $7;
 $8 = ($6*24)|0;
 _memset(($7|0),0,($8|0))|0;
 HEAP32[$1>>2] = 0;
 return ($1|0);
}
function _g_value_array_free($0) {
 $0 = $0|0;
 var $$011 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 $3 = ((($0)) + 4|0);
 if (!($2)) {
  $$011 = 0;$12 = $1;
  while(1) {
   $4 = HEAP32[$3>>2]|0;
   $5 = (($4) + (($$011*24)|0)|0);
   $6 = HEAP32[$5>>2]|0;
   $7 = ($6|0)==(0);
   if ($7) {
    $10 = $12;
   } else {
    _g_value_unset($5);
    $$pre = HEAP32[$0>>2]|0;
    $10 = $$pre;
   }
   $8 = (($$011) + 1)|0;
   $9 = ($8>>>0)<($10>>>0);
   if ($9) {
    $$011 = $8;$12 = $10;
   } else {
    break;
   }
  }
 }
 $11 = HEAP32[$3>>2]|0;
 _g_free($11);
 _g_slice_free1(12,$0);
 return;
}
function _g_value_array_copy($0) {
 $0 = $0|0;
 var $$023 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_slice_alloc(12)|0);
 $2 = ((($1)) + 4|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($1)) + 8|0);
 HEAP32[$3>>2] = 0;
 $4 = HEAP32[$0>>2]|0;
 HEAP32[$1>>2] = $4;
 $5 = ($4|0)==(0);
 if ($5) {
  return ($1|0);
 }
 $6 = (($4) + 7)|0;
 $7 = $6 & -8;
 HEAP32[$3>>2] = $7;
 $8 = (_g_realloc_n(0,$7,24)|0);
 HEAP32[$2>>2] = $8;
 $9 = ($7*24)|0;
 _memset(($8|0),0,($9|0))|0;
 $10 = ((($0)) + 4|0);
 $$023 = 0;
 while(1) {
  $11 = HEAP32[$10>>2]|0;
  $12 = (($11) + (($$023*24)|0)|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($13|0)==(0);
  if (!($14)) {
   $15 = (($8) + (($$023*24)|0)|0);
   (_g_value_init($15,$13)|0);
   $16 = HEAP32[$10>>2]|0;
   $17 = (($16) + (($$023*24)|0)|0);
   _g_value_copy($17,$15);
  }
  $18 = (($$023) + 1)|0;
  $19 = ($18>>>0)<($4>>>0);
  if ($19) {
   $$023 = $18;
  } else {
   break;
  }
 }
 return ($1|0);
}
function _g_value_array_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1)|0;
 HEAP32[$0>>2] = $4;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6>>>0)<($4>>>0);
 if ($7) {
  $8 = (($3) + 8)|0;
  $9 = $8 & -8;
  HEAP32[$5>>2] = $9;
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = (_g_realloc_n($11,$9,24)|0);
  HEAP32[$10>>2] = $12;
  $13 = HEAP32[$0>>2]|0;
  $14 = (($12) + (($13*24)|0)|0);
  $15 = HEAP32[$5>>2]|0;
  $16 = (($15) - ($13))|0;
  $17 = ($16*24)|0;
  _memset(($14|0),0,($17|0))|0;
  $$pre = HEAP32[$0>>2]|0;
  $20 = $$pre;
 } else {
  $20 = $4;
 }
 $18 = (($1) + 1)|0;
 $19 = ($18>>>0)<($20>>>0);
 $21 = ((($0)) + 4|0);
 if ($19) {
  $22 = HEAP32[$21>>2]|0;
  $23 = (($22) + (($1*24)|0)|0);
  $24 = ((($23)) + 24|0);
  $25 = (($3) - ($1))|0;
  $26 = ($25*24)|0;
  _memmove(($24|0),($23|0),($26|0))|0;
 }
 $27 = HEAP32[$21>>2]|0;
 $28 = (($27) + (($1*24)|0)|0);
 ;HEAP32[$28>>2]=0|0;HEAP32[$28+4>>2]=0|0;HEAP32[$28+8>>2]=0|0;HEAP32[$28+12>>2]=0|0;HEAP32[$28+16>>2]=0|0;HEAP32[$28+20>>2]=0|0;
 $29 = ($2|0)==(0|0);
 if ($29) {
  return ($0|0);
 }
 $30 = HEAP32[$21>>2]|0;
 $31 = (($30) + (($1*24)|0)|0);
 $32 = HEAP32[$2>>2]|0;
 (_g_value_init($31,$32)|0);
 $33 = HEAP32[$21>>2]|0;
 $34 = (($33) + (($1*24)|0)|0);
 _g_value_copy($2,$34);
 return ($0|0);
}
function _g_value_array_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = (_g_value_array_insert($0,$2,$1)|0);
 return ($3|0);
}
function _g_value_array_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (($3) + (($1*24)|0)|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  _g_value_unset($4);
 }
 $7 = HEAP32[$0>>2]|0;
 $8 = (($7) + -1)|0;
 HEAP32[$0>>2] = $8;
 $9 = ($8>>>0)>($1>>>0);
 if ($9) {
  $10 = HEAP32[$2>>2]|0;
  $11 = (($10) + (($1*24)|0)|0);
  $12 = ((($11)) + 24|0);
  $13 = (($8) - ($1))|0;
  $14 = ($13*24)|0;
  _memmove(($11|0),($12|0),($14|0))|0;
  $$pre = HEAP32[$0>>2]|0;
  $18 = $$pre;
 } else {
  $18 = $8;
 }
 $15 = ((($0)) + 8|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16>>>0)>($18>>>0);
 if (!($17)) {
  return ($0|0);
 }
 $19 = HEAP32[$2>>2]|0;
 $20 = (($19) + (($18*24)|0)|0);
 ;HEAP32[$20>>2]=0|0;HEAP32[$20+4>>2]=0|0;HEAP32[$20+8>>2]=0|0;HEAP32[$20+12>>2]=0|0;HEAP32[$20+16>>2]=0|0;HEAP32[$20+20>>2]=0|0;
 return ($0|0);
}
function _g_atomic_int_get($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 return ($1|0);
}
function _g_atomic_int_inc($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + 1)|0;
 HEAP32[$0>>2] = $2;
 return;
}
function _g_atomic_int_dec_and_test($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = (($1) + -1)|0;
 HEAP32[$0>>2] = $2;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==(0);
 $5 = $4&1;
 return ($5|0);
}
function _g_atomic_int_compare_and_exchange($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)==($1|0);
 if ($4) {
  HEAP32[$0>>2] = $2;
  $$0 = 1;
 } else {
  $$0 = 0;
 }
 return ($$0|0);
}
function _g_atomic_int_add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + ($1))|0;
 HEAP32[$0>>2] = $4;
 return ($2|0);
}
function _g_atomic_pointer_get($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function _g_error_new_literal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_slice_alloc(12)|0);
 HEAP32[$3>>2] = $0;
 $4 = ((($3)) + 4|0);
 HEAP32[$4>>2] = $1;
 $5 = (_g_strdup($2)|0);
 $6 = ((($3)) + 8|0);
 HEAP32[$6>>2] = $5;
 return ($3|0);
}
function _g_error_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 _g_free($2);
 _g_slice_free1(12,$0);
 return;
}
function _g_propagate_error($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = ($1|0)==(0|0);
  if ($3) {
   STACKTOP = sp;return;
  }
  $4 = ((($1)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  _g_free($5);
  _g_slice_free1(12,$1);
  STACKTOP = sp;return;
 }
 $6 = HEAP32[$0>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  HEAP32[$0>>2] = $1;
  STACKTOP = sp;return;
 } else {
  $8 = ((($1)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  HEAP32[$vararg_buffer>>2] = $9;
  _g_log(0,16,131265,$vararg_buffer);
  $10 = HEAP32[$8>>2]|0;
  _g_free($10);
  _g_slice_free1(12,$1);
  STACKTOP = sp;return;
 }
}
function _g_clear_error($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = HEAP32[$0>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  return;
 }
 $4 = ((($2)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 _g_free($5);
 _g_slice_free1(12,$2);
 HEAP32[$0>>2] = 0;
 return;
}
function _g_getenv($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_getenv(($0|0))|0);
 return ($1|0);
}
function _g_hash_table_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(56)|0);
 HEAP32[$2>>2] = 8;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 7;
 $4 = ((($2)) + 8|0);
 HEAP32[$4>>2] = 7;
 $5 = ((($2)) + 12|0);
 HEAP32[$5>>2] = 0;
 $6 = ((($2)) + 16|0);
 HEAP32[$6>>2] = 0;
 $7 = ($0|0)==(0|0);
 $8 = $7 ? 250 : $0;
 $9 = ((($2)) + 32|0);
 HEAP32[$9>>2] = $8;
 $10 = ((($2)) + 36|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($2)) + 40|0);
 HEAP32[$11>>2] = 1;
 $12 = ((($2)) + 44|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($2)) + 48|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($2)) + 52|0);
 HEAP32[$14>>2] = 0;
 $15 = (_g_malloc0_n(8,4)|0);
 $16 = ((($2)) + 20|0);
 HEAP32[$16>>2] = $15;
 $17 = ((($2)) + 28|0);
 HEAP32[$17>>2] = $15;
 $18 = (_g_malloc0_n(8,4)|0);
 $19 = ((($2)) + 24|0);
 HEAP32[$19>>2] = $18;
 return ($2|0);
}
function _g_direct_hash($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 return ($1|0);
}
function _g_hash_table_insert_node($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0 = 0, $$057 = 0, $$pre = 0, $$pre$phi60Z2D = 0, $$pre$phiZ2D = 0, $$pre59 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) + ($1<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10>>>0)>(1);
 if ($11) {
  $12 = ((($0)) + 28|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = (($13) + ($1<<2)|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ($5|0)==(0);
  $$pre59 = ((($0)) + 20|0);
  if ($16) {
   $$0 = $3;$$057 = $15;$$pre$phi60Z2D = $$pre59;$$pre$phiZ2D = $12;
  } else {
   $17 = HEAP32[$$pre59>>2]|0;
   $18 = (($17) + ($1<<2)|0);
   $19 = HEAP32[$18>>2]|0;
   HEAP32[$18>>2] = $3;
   $$0 = $19;$$057 = $15;$$pre$phi60Z2D = $$pre59;$$pre$phiZ2D = $12;
  }
 } else {
  HEAP32[$9>>2] = $2;
  $20 = ((($0)) + 20|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (($21) + ($1<<2)|0);
  HEAP32[$22>>2] = $3;
  $$pre = ((($0)) + 28|0);
  $$0 = 0;$$057 = 0;$$pre$phi60Z2D = $20;$$pre$phiZ2D = $$pre;
 }
 $23 = HEAP32[$$pre$phi60Z2D>>2]|0;
 $24 = HEAP32[$$pre$phiZ2D>>2]|0;
 $25 = ($23|0)==($24|0);
 if ($25) {
  $26 = (($23) + ($1<<2)|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ($27|0)==($4|0);
  if ($28) {
   $33 = $23;
  } else {
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 << 2;
   $31 = (_g_memdup($23,$30)|0);
   HEAP32[$$pre$phiZ2D>>2] = $31;
   $33 = $31;
  }
 } else {
  $33 = $24;
 }
 $32 = (($33) + ($1<<2)|0);
 HEAP32[$32>>2] = $4;
 if (!($11)) {
  $34 = ((($0)) + 12|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = (($35) + 1)|0;
  HEAP32[$34>>2] = $36;
  $37 = ($10|0)==(0);
  if ($37) {
   $38 = ((($0)) + 16|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (($39) + 1)|0;
   HEAP32[$38>>2] = $40;
   _g_hash_table_maybe_resize($0);
  }
  $41 = ((($0)) + 44|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = (($42) + 1)|0;
  HEAP32[$41>>2] = $43;
  $51 = $11 ^ 1;
  $52 = $51&1;
  return ($52|0);
 }
 $44 = ((($0)) + 48|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 $47 = ($6|0)!=(0);
 $or$cond = $47 | $46;
 if (!($or$cond)) {
  ftCall_vi($45|0,$$0);
 }
 $48 = ((($0)) + 52|0);
 $49 = HEAP32[$48>>2]|0;
 $50 = ($49|0)==(0|0);
 if ($50) {
  $51 = $11 ^ 1;
  $52 = $51&1;
  return ($52|0);
 }
 ftCall_vi($49|0,$$057);
 $51 = $11 ^ 1;
 $52 = $51&1;
 return ($52|0);
}
function _g_hash_table_maybe_resize($0) {
 $0 = $0|0;
 var $$0100108$i = 0, $$01213$i$i$i = 0, $$014$i$i$i = 0, $$097106$i = 0, $$098$lcssa$i = 0, $$098105$i = 0, $$099$i = 0, $$lcssa$i = 0, $$pre$i = 0, $$pre$phi$iZ2D = 0, $$pre115$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0;
 var $exitcond$i$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($0)) + 12|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 << 2;
 $7 = ($3|0)>($6|0);
 $8 = ($3|0)>(8);
 $or$cond = $8 & $7;
 if (!($or$cond)) {
  $9 = (($2|0) / 16)&-1;
  $10 = (($9) + ($2))|0;
  $11 = ($3|0)>($10|0);
  if ($11) {
   return;
  }
 }
 $12 = $5 << 1;
 $13 = ($5|0)!=(0);
 $14 = (Math_clz32(($12|0))|0);
 $15 = (32 - ($14))|0;
 $16 = ($15>>>0)>(3);
 $or$cond$i$i = $13 & $16;
 $17 = $or$cond$i$i ? $15 : 3;
 $18 = 1 << $17;
 HEAP32[$0>>2] = $18;
 $19 = (1184 + ($17<<2)|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($0)) + 4|0);
 HEAP32[$21>>2] = $20;
 $$01213$i$i$i = 0;$$014$i$i$i = 0;
 while(1) {
  $22 = $$014$i$i$i << 1;
  $23 = $22 | 1;
  $24 = (($$01213$i$i$i) + 1)|0;
  $exitcond$i$i$i = ($24|0)==($17|0);
  if ($exitcond$i$i$i) {
   break;
  } else {
   $$01213$i$i$i = $24;$$014$i$i$i = $23;
  }
 }
 $25 = ((($0)) + 8|0);
 HEAP32[$25>>2] = $23;
 $26 = (_g_malloc0_n($18,4)|0);
 $27 = ((($0)) + 20|0);
 $28 = HEAP32[$27>>2]|0;
 $29 = ((($0)) + 28|0);
 $30 = HEAP32[$29>>2]|0;
 $31 = ($28|0)==($30|0);
 if ($31) {
  $$099$i = $26;
 } else {
  $32 = HEAP32[$0>>2]|0;
  $33 = (_g_malloc0_n($32,4)|0);
  $$099$i = $33;
 }
 $34 = HEAP32[$0>>2]|0;
 $35 = (_g_malloc0_n($34,4)|0);
 $36 = ($3|0)>(0);
 if ($36) {
  $37 = ((($0)) + 24|0);
  $$pre$i = HEAP32[$37>>2]|0;
  $$0100108$i = 0;
  while(1) {
   $38 = (($$pre$i) + ($$0100108$i<<2)|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ($39>>>0)>(1);
   if ($40) {
    $41 = HEAP32[$21>>2]|0;
    $42 = (($39>>>0) % ($41>>>0))&-1;
    $43 = (($35) + ($42<<2)|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = ($44|0)==(0);
    if ($45) {
     $$098$lcssa$i = $42;$$lcssa$i = $43;
    } else {
     $46 = HEAP32[$25>>2]|0;
     $$097106$i = 0;$$098105$i = $42;
     while(1) {
      $47 = (($$097106$i) + 1)|0;
      $48 = (($47) + ($$098105$i))|0;
      $49 = $48 & $46;
      $50 = (($35) + ($49<<2)|0);
      $51 = HEAP32[$50>>2]|0;
      $52 = ($51|0)==(0);
      if ($52) {
       $$098$lcssa$i = $49;$$lcssa$i = $50;
       break;
      } else {
       $$097106$i = $47;$$098105$i = $49;
      }
     }
    }
    HEAP32[$$lcssa$i>>2] = $39;
    $53 = HEAP32[$27>>2]|0;
    $54 = (($53) + ($$0100108$i<<2)|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (($26) + ($$098$lcssa$i<<2)|0);
    HEAP32[$56>>2] = $55;
    $57 = HEAP32[$29>>2]|0;
    $58 = (($57) + ($$0100108$i<<2)|0);
    $59 = HEAP32[$58>>2]|0;
    $60 = (($$099$i) + ($$098$lcssa$i<<2)|0);
    HEAP32[$60>>2] = $59;
   }
   $61 = (($$0100108$i) + 1)|0;
   $exitcond$i = ($61|0)==($3|0);
   if ($exitcond$i) {
    break;
   } else {
    $$0100108$i = $61;
   }
  }
 }
 $62 = HEAP32[$27>>2]|0;
 $63 = HEAP32[$29>>2]|0;
 $64 = ($62|0)==($63|0);
 if ($64) {
  $$pre$phi$iZ2D = $27;$65 = $62;
 } else {
  _g_free($63);
  $$pre115$i = HEAP32[$27>>2]|0;
  $$pre$phi$iZ2D = $27;$65 = $$pre115$i;
 }
 _g_free($65);
 $66 = ((($0)) + 24|0);
 $67 = HEAP32[$66>>2]|0;
 _g_free($67);
 HEAP32[$$pre$phi$iZ2D>>2] = $26;
 HEAP32[$29>>2] = $$099$i;
 HEAP32[$66>>2] = $35;
 $68 = HEAP32[$4>>2]|0;
 HEAP32[$1>>2] = $68;
 return;
}
function _g_hash_table_lookup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $or$cond$i = 0, $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 40|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)>(0);
 if (!($4)) {
  _g_assertion_message_expr(0,131463,383,131491,131516);
  // unreachable;
 }
 $5 = ((($0)) + 32|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_ii($6|0,$1)|0);
 $8 = ($7>>>0)>(2);
 $$069$i = $8 ? $7 : 2;
 $9 = ((($0)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($$069$i>>>0) % ($10>>>0))&-1;
 $12 = ((($0)) + 24|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (($13) + ($11<<2)|0);
 $$06275$i = HEAP32[$14>>2]|0;
 $15 = ($$06275$i|0)==(0);
 L4: do {
  if ($15) {
   $$060$lcssa85$i = $11;$47 = $13;
   label = 12;
  } else {
   $16 = ((($0)) + 20|0);
   $17 = ((($0)) + 36|0);
   $18 = ((($0)) + 8|0);
   $$06079$i = $11;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$48 = $13;
   while(1) {
    $19 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($19) {
      $20 = HEAP32[$16>>2]|0;
      $21 = (($20) + ($$06079$i<<2)|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = HEAP32[$17>>2]|0;
      $24 = ($23|0)==(0|0);
      if ($24) {
       $27 = ($22|0)==($1|0);
       if ($27) {
        $$3$i = $$06079$i;$39 = $48;
        break L4;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$35 = $48;
        break;
       }
      } else {
       $25 = (ftCall_iii($23|0,$22,$1)|0);
       $26 = ($25|0)==(0);
       $$pre$i = HEAP32[$12>>2]|0;
       if ($26) {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$35 = $$pre$i;
        break;
       } else {
        $$3$i = $$06079$i;$39 = $$pre$i;
        break L4;
       }
      }
     } else {
      $28 = ($$06280$i|0)!=(1);
      $29 = ($$06577$i|0)!=(0);
      $or$cond$i = $28 | $29;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$35 = $48;
     }
    } while(0);
    $30 = (($$06478$i) + 1)|0;
    $31 = (($30) + ($$06079$i))|0;
    $32 = HEAP32[$18>>2]|0;
    $33 = $32 & $31;
    $34 = (($35) + ($33<<2)|0);
    $$062$i = HEAP32[$34>>2]|0;
    $36 = ($$062$i|0)==(0);
    if ($36) {
     break;
    } else {
     $$06079$i = $33;$$06280$i = $$062$i;$$06478$i = $30;$$06577$i = $$166$i;$$06776$i = $$168$i;$48 = $35;
    }
   }
   $37 = ($$166$i|0)==(0);
   if ($37) {
    $$060$lcssa85$i = $33;$47 = $35;
    label = 12;
   } else {
    $$3$i = $$168$i;$39 = $35;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $$3$i = $$060$lcssa85$i;$39 = $47;
 }
 $38 = (($39) + ($$3$i<<2)|0);
 $40 = HEAP32[$38>>2]|0;
 $41 = ($40>>>0)>(1);
 if (!($41)) {
  $46 = 0;
  return ($46|0);
 }
 $42 = ((($0)) + 28|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = (($43) + ($$3$i<<2)|0);
 $45 = HEAP32[$44>>2]|0;
 $46 = $45;
 return ($46|0);
}
function _g_hash_table_insert($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_hash_table_insert_internal($0,$1,$2,0)|0);
 return ($3|0);
}
function _g_hash_table_insert_internal($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 40|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)>(0);
 if (!($6)) {
  _g_assertion_message_expr(0,131463,383,131491,131516);
  // unreachable;
 }
 $7 = ((($0)) + 32|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_ii($8|0,$1)|0);
 $10 = ($9>>>0)>(2);
 $$069$i = $10 ? $9 : 2;
 $11 = ((($0)) + 4|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($$069$i>>>0) % ($12>>>0))&-1;
 $14 = ((($0)) + 24|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($13<<2)|0);
 $$06275$i = HEAP32[$16>>2]|0;
 $17 = ($$06275$i|0)==(0);
 do {
  if ($17) {
   $$060$lcssa85$i = $13;
  } else {
   $18 = ((($0)) + 20|0);
   $19 = ((($0)) + 36|0);
   $20 = ((($0)) + 8|0);
   $$06079$i = $13;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$41 = $15;
   L6: while(1) {
    $21 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($21) {
      $22 = HEAP32[$18>>2]|0;
      $23 = (($22) + ($$06079$i<<2)|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = HEAP32[$19>>2]|0;
      $26 = ($25|0)==(0|0);
      if ($26) {
       $29 = ($24|0)==($1|0);
       if ($29) {
        $$3$i = $$06079$i;
        label = 14;
        break L6;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$37 = $41;
        break;
       }
      }
      $27 = (ftCall_iii($25|0,$24,$1)|0);
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$3$i = $$06079$i;
       label = 14;
       break L6;
      }
      $$pre$i = HEAP32[$14>>2]|0;
      $$166$i = $$06577$i;$$168$i = $$06776$i;$37 = $$pre$i;
     } else {
      $30 = ($$06280$i|0)!=(1);
      $31 = ($$06577$i|0)!=(0);
      $or$cond$i = $30 | $31;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$37 = $41;
     }
    } while(0);
    $32 = (($$06478$i) + 1)|0;
    $33 = (($32) + ($$06079$i))|0;
    $34 = HEAP32[$20>>2]|0;
    $35 = $34 & $33;
    $36 = (($37) + ($35<<2)|0);
    $$062$i = HEAP32[$36>>2]|0;
    $38 = ($$062$i|0)==(0);
    if ($38) {
     label = 12;
     break;
    } else {
     $$06079$i = $35;$$06280$i = $$062$i;$$06478$i = $32;$$06577$i = $$166$i;$$06776$i = $$168$i;$41 = $37;
    }
   }
   if ((label|0) == 12) {
    $39 = ($$166$i|0)==(0);
    if ($39) {
     $$060$lcssa85$i = $35;
     break;
    } else {
     $$3$i = $$168$i;
    }
    $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
    return ($40|0);
   }
   else if ((label|0) == 14) {
    $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
    return ($40|0);
   }
  }
 } while(0);
 $$3$i = $$060$lcssa85$i;
 $40 = (_g_hash_table_insert_node($0,$$3$i,$$069$i,$1,$2,$3,0)|0);
 return ($40|0);
}
function _g_hash_table_add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_hash_table_insert_internal($0,$1,$1,1)|0);
 return ($2|0);
}
function _g_hash_table_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_hash_table_remove_internal($0,$1,1)|0);
 return ($2|0);
}
function _g_hash_table_remove_internal($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$060$lcssa85$i = 0, $$06079$i = 0, $$062$i = 0, $$06275$i = 0, $$06280$i = 0, $$06478$i = 0, $$06577$i = 0, $$06776$i = 0, $$069$i = 0, $$166$i = 0, $$168$i = 0, $$3$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0;
 var $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0;
 var $spec$select$i = 0, $spec$select71$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(0);
 if (!($5)) {
  _g_assertion_message_expr(0,131463,383,131491,131516);
  // unreachable;
 }
 $6 = ((($0)) + 32|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = (ftCall_ii($7|0,$1)|0);
 $9 = ($8>>>0)>(2);
 $$069$i = $9 ? $8 : 2;
 $10 = ((($0)) + 4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($$069$i>>>0) % ($11>>>0))&-1;
 $13 = ((($0)) + 24|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = (($14) + ($12<<2)|0);
 $$06275$i = HEAP32[$15>>2]|0;
 $16 = ($$06275$i|0)==(0);
 L4: do {
  if ($16) {
   $$060$lcssa85$i = $12;$66 = $14;
   label = 12;
  } else {
   $17 = ((($0)) + 20|0);
   $18 = ((($0)) + 36|0);
   $19 = ((($0)) + 8|0);
   $$06079$i = $12;$$06280$i = $$06275$i;$$06478$i = 0;$$06577$i = 0;$$06776$i = 0;$67 = $14;
   while(1) {
    $20 = ($$06280$i|0)==($$069$i|0);
    do {
     if ($20) {
      $21 = HEAP32[$17>>2]|0;
      $22 = (($21) + ($$06079$i<<2)|0);
      $23 = HEAP32[$22>>2]|0;
      $24 = HEAP32[$18>>2]|0;
      $25 = ($24|0)==(0|0);
      if ($25) {
       $28 = ($23|0)==($1|0);
       if ($28) {
        $$3$i = $$06079$i;$40 = $67;
        break L4;
       } else {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$36 = $67;
        break;
       }
      } else {
       $26 = (ftCall_iii($24|0,$23,$1)|0);
       $27 = ($26|0)==(0);
       $$pre$i = HEAP32[$13>>2]|0;
       if ($27) {
        $$166$i = $$06577$i;$$168$i = $$06776$i;$36 = $$pre$i;
        break;
       } else {
        $$3$i = $$06079$i;$40 = $$pre$i;
        break L4;
       }
      }
     } else {
      $29 = ($$06280$i|0)!=(1);
      $30 = ($$06577$i|0)!=(0);
      $or$cond$i = $29 | $30;
      $spec$select$i = $or$cond$i ? $$06776$i : $$06079$i;
      $spec$select71$i = $or$cond$i ? $$06577$i : 1;
      $$166$i = $spec$select71$i;$$168$i = $spec$select$i;$36 = $67;
     }
    } while(0);
    $31 = (($$06478$i) + 1)|0;
    $32 = (($31) + ($$06079$i))|0;
    $33 = HEAP32[$19>>2]|0;
    $34 = $33 & $32;
    $35 = (($36) + ($34<<2)|0);
    $$062$i = HEAP32[$35>>2]|0;
    $37 = ($$062$i|0)==(0);
    if ($37) {
     break;
    } else {
     $$06079$i = $34;$$06280$i = $$062$i;$$06478$i = $31;$$06577$i = $$166$i;$$06776$i = $$168$i;$67 = $36;
    }
   }
   $38 = ($$166$i|0)==(0);
   if ($38) {
    $$060$lcssa85$i = $34;$66 = $36;
    label = 12;
   } else {
    $$3$i = $$168$i;$40 = $36;
   }
  }
 } while(0);
 if ((label|0) == 12) {
  $$3$i = $$060$lcssa85$i;$40 = $66;
 }
 $39 = (($40) + ($$3$i<<2)|0);
 $41 = HEAP32[$39>>2]|0;
 $42 = ($41>>>0)>(1);
 if (!($42)) {
  $$0 = 0;
  return ($$0|0);
 }
 $43 = ((($0)) + 20|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (($44) + ($$3$i<<2)|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = ((($0)) + 28|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = (($48) + ($$3$i<<2)|0);
 $50 = HEAP32[$49>>2]|0;
 HEAP32[$39>>2] = 1;
 HEAP32[$45>>2] = 0;
 $51 = HEAP32[$47>>2]|0;
 $52 = (($51) + ($$3$i<<2)|0);
 HEAP32[$52>>2] = 0;
 $53 = ((($0)) + 12|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = (($54) + -1)|0;
 HEAP32[$53>>2] = $55;
 $56 = ($2|0)==(0);
 if (!($56)) {
  $57 = ((($0)) + 48|0);
  $58 = HEAP32[$57>>2]|0;
  $59 = ($58|0)==(0|0);
  if (!($59)) {
   ftCall_vi($58|0,$46);
  }
  $60 = ((($0)) + 52|0);
  $61 = HEAP32[$60>>2]|0;
  $62 = ($61|0)==(0|0);
  if (!($62)) {
   ftCall_vi($61|0,$50);
  }
 }
 _g_hash_table_maybe_resize($0);
 $63 = ((($0)) + 44|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = (($64) + 1)|0;
 HEAP32[$63>>2] = $65;
 $$0 = 1;
 return ($$0|0);
}
function _g_hash_table_foreach($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$023 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ($3|0)>(0);
 if (!($4)) {
  return;
 }
 $5 = ((($0)) + 24|0);
 $6 = ((($0)) + 28|0);
 $7 = ((($0)) + 20|0);
 $$023 = 0;$21 = $3;
 while(1) {
  $8 = HEAP32[$5>>2]|0;
  $9 = (($8) + ($$023<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10>>>0)>(1);
  if ($11) {
   $12 = HEAP32[$6>>2]|0;
   $13 = (($12) + ($$023<<2)|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = HEAP32[$7>>2]|0;
   $16 = (($15) + ($$023<<2)|0);
   $17 = HEAP32[$16>>2]|0;
   ftCall_viii($1|0,$17,$14,$2);
   $$pre = HEAP32[$0>>2]|0;
   $20 = $$pre;
  } else {
   $20 = $21;
  }
  $18 = (($$023) + 1)|0;
  $19 = ($18|0)<($20|0);
  if ($19) {
   $$023 = $18;$21 = $20;
  } else {
   break;
  }
 }
 return;
}
function _g_str_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcmp($0,$1)|0);
 $3 = ($2|0)==(0);
 $4 = $3&1;
 return ($4|0);
}
function _g_str_hash($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$010 = 0, $$089 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = ($1<<24>>24)==(0);
 if ($2) {
  $$0$lcssa = 5381;
  return ($$0$lcssa|0);
 }
 $$010 = 5381;$$089 = $0;$4 = $1;
 while(1) {
  $3 = $4 << 24 >> 24;
  $5 = ($$010*33)|0;
  $6 = (($5) + ($3))|0;
  $7 = ((($$089)) + 1|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = ($8<<24>>24)==(0);
  if ($9) {
   $$0$lcssa = $6;
   break;
  } else {
   $$010 = $6;$$089 = $7;$4 = $8;
  }
 }
 return ($$0$lcssa|0);
}
function _g_direct_equal($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==($1|0);
 $3 = $2&1;
 return ($3|0);
}
function _g_parse_debug_string($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01320$i = 0, $$01320$i62 = 0, $$01419$i = 0, $$01419$i63 = 0, $$01518$i = 0, $$01518$i64 = 0, $$05187 = 0, $$052 = 0, $$05386 = 0, $$05585 = 0, $$05773 = 0, $$060 = 0, $$075 = 0, $$1 = 0, $$15681 = 0, $$15681$us = 0, $$15879 = 0, $$15879$us = 0, $$2 = 0;
 var $$2$us = 0, $$25974 = 0, $$3 = 0, $$mask$i = 0, $$mask$i66 = 0, $$mux = 0, $$not = 0, $$unshifted$i = 0, $$unshifted$i65 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $9 = 0, $brmerge = 0, $exitcond = 0, $exitcond96 = 0, $spec$select = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = ($0|0)==(0|0);
 if ($3) {
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $4 = (_strcasecmp($0,131542)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[30123]|0;
  (_fwrite(131547,23,1,$6)|0);
  $7 = ($2|0)==(0);
  if (!($7)) {
   $$05773 = 0;
   while(1) {
    $8 = (($1) + ($$05773<<3)|0);
    $9 = HEAP32[$8>>2]|0;
    HEAP32[$vararg_buffer>>2] = $9;
    (_fprintf($6,131571,$vararg_buffer)|0);
    $10 = (($$05773) + 1)|0;
    $exitcond = ($10|0)==($2|0);
    if ($exitcond) {
     break;
    } else {
     $$05773 = $10;
    }
   }
  }
  (_fwrite(131575,10,1,$6)|0);
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $11 = HEAP8[$0>>0]|0;
 $12 = ($11<<24>>24)==(0);
 if ($12) {
  $$060 = 0;
  STACKTOP = sp;return ($$060|0);
 }
 $13 = ($2|0)!=(0);
 $$not = $13 ^ 1;
 $$05187 = 0;$$05386 = $0;$$05585 = 0;
 while(1) {
  $14 = (_strpbrk($$05386,131586)|0);
  $15 = ($14|0)==(0|0);
  if ($15) {
   $16 = (_strlen($$05386)|0);
   $17 = (($$05386) + ($16)|0);
   $$052 = $17;
  } else {
   $$052 = $14;
  }
  $18 = $$052;
  $19 = $$05386;
  $20 = (($18) - ($19))|0;
  $21 = ($20|0)==(0);
  L21: do {
   if ($21) {
    label = 20;
   } else {
    $$01320$i = 131592;$$01419$i = $20;$$01518$i = $$05386;$23 = 97;
    while(1) {
     $22 = ($23<<24>>24)==(95);
     if ($22) {
      $31 = 45;
     } else {
      $24 = $23 << 24 >> 24;
      $25 = (_tolower($24)|0);
      $31 = $25;
     }
     $26 = HEAP8[$$01518$i>>0]|0;
     $27 = ($26<<24>>24)==(95);
     if ($27) {
      $30 = 45;
     } else {
      $28 = $26 << 24 >> 24;
      $29 = (_tolower($28)|0);
      $30 = $29;
     }
     $$unshifted$i = $30 ^ $31;
     $$mask$i = $$unshifted$i & 255;
     $32 = ($$mask$i|0)==(0);
     if (!($32)) {
      label = 20;
      break L21;
     }
     $33 = (($$01419$i) + -1)|0;
     $34 = ((($$01320$i)) + 1|0);
     $35 = ((($$01518$i)) + 1|0);
     $36 = ($33|0)==(0);
     $37 = HEAP8[$34>>0]|0;
     if ($36) {
      break;
     } else {
      $$01320$i = $34;$$01419$i = $33;$$01518$i = $35;$23 = $37;
     }
    }
    $38 = ($37<<24>>24)==(0);
    $brmerge = $38 | $$not;
    $$mux = $38 ? 1 : $$05187;
    if ($brmerge) {
     $$1 = $$mux;$$3 = $$05585;
    } else {
     label = 21;
    }
   }
  } while(0);
  if ((label|0) == 20) {
   label = 0;
   if ($13) {
    label = 21;
   } else {
    $$1 = $$05187;$$3 = $$05585;
   }
  }
  L35: do {
   if ((label|0) == 21) {
    label = 0;
    if ($21) {
     $$15681$us = $$05585;$$15879$us = 0;
     while(1) {
      $39 = (($1) + ($$15879$us<<3)|0);
      $40 = HEAP32[$39>>2]|0;
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if ($42) {
       $43 = (((($1) + ($$15879$us<<3)|0)) + 4|0);
       $44 = HEAP32[$43>>2]|0;
       $45 = $44 | $$15681$us;
       $$2$us = $45;
      } else {
       $$2$us = $$15681$us;
      }
      $46 = (($$15879$us) + 1)|0;
      $47 = ($46>>>0)<($2>>>0);
      if ($47) {
       $$15681$us = $$2$us;$$15879$us = $46;
      } else {
       $$1 = $$05187;$$3 = $$2$us;
       break L35;
      }
     }
    }
    $$15681 = $$05585;$$15879 = 0;
    while(1) {
     $48 = (($1) + ($$15879<<3)|0);
     $49 = HEAP32[$48>>2]|0;
     $50 = HEAP8[$49>>0]|0;
     $$01320$i62 = $49;$$01419$i63 = $20;$$01518$i64 = $$05386;$52 = $50;
     while(1) {
      $51 = ($52<<24>>24)==(95);
      if ($51) {
       $60 = 45;
      } else {
       $53 = $52 << 24 >> 24;
       $54 = (_tolower($53)|0);
       $60 = $54;
      }
      $55 = HEAP8[$$01518$i64>>0]|0;
      $56 = ($55<<24>>24)==(95);
      if ($56) {
       $59 = 45;
      } else {
       $57 = $55 << 24 >> 24;
       $58 = (_tolower($57)|0);
       $59 = $58;
      }
      $$unshifted$i65 = $59 ^ $60;
      $$mask$i66 = $$unshifted$i65 & 255;
      $61 = ($$mask$i66|0)==(0);
      if (!($61)) {
       $$2 = $$15681;
       break;
      }
      $62 = (($$01419$i63) + -1)|0;
      $63 = ((($$01320$i62)) + 1|0);
      $64 = ((($$01518$i64)) + 1|0);
      $65 = ($62|0)==(0);
      $66 = HEAP8[$63>>0]|0;
      if ($65) {
       label = 34;
       break;
      } else {
       $$01320$i62 = $63;$$01419$i63 = $62;$$01518$i64 = $64;$52 = $66;
      }
     }
     if ((label|0) == 34) {
      label = 0;
      $67 = ($66<<24>>24)==(0);
      if ($67) {
       $68 = (((($1) + ($$15879<<3)|0)) + 4|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = $69 | $$15681;
       $$2 = $70;
      } else {
       $$2 = $$15681;
      }
     }
     $71 = (($$15879) + 1)|0;
     $72 = ($71>>>0)<($2>>>0);
     if ($72) {
      $$15681 = $$2;$$15879 = $71;
     } else {
      $$1 = $$05187;$$3 = $$2;
      break;
     }
    }
   }
  } while(0);
  $73 = HEAP8[$$052>>0]|0;
  $74 = ($73<<24>>24)==(0);
  $75 = ((($$052)) + 1|0);
  $spec$select = $74 ? $$052 : $75;
  $76 = HEAP8[$spec$select>>0]|0;
  $77 = ($76<<24>>24)==(0);
  if ($77) {
   break;
  } else {
   $$05187 = $$1;$$05386 = $spec$select;$$05585 = $$3;
  }
 }
 $78 = ($$1|0)==(0);
 if ($78) {
  $$060 = $$3;
  STACKTOP = sp;return ($$060|0);
 }
 $79 = ($2|0)==(0);
 if ($79) {
  $$0$lcssa = 0;
 } else {
  $$075 = 0;$$25974 = 0;
  while(1) {
   $80 = (((($1) + ($$25974<<3)|0)) + 4|0);
   $81 = HEAP32[$80>>2]|0;
   $82 = $81 | $$075;
   $83 = (($$25974) + 1)|0;
   $exitcond96 = ($83|0)==($2|0);
   if ($exitcond96) {
    $$0$lcssa = $82;
    break;
   } else {
    $$075 = $82;$$25974 = $83;
   }
  }
 }
 $84 = $$3 ^ -1;
 $85 = $$0$lcssa & $84;
 $$060 = $85;
 STACKTOP = sp;return ($$060|0);
}
function _glib_init() {
 var $$0$i$i = 0, $$0$i$i1 = 0, $0 = 0, $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[35969]|0;
 $1 = ($0|0)==(0);
 if (!($1)) {
  return;
 }
 HEAP32[35969] = 1;
 $2 = HEAP32[29848]|0;
 $3 = (_getenv((131596|0))|0);
 $4 = ($3|0)==(0|0);
 if ($4) {
  $$0$i$i = $2;
 } else {
  $5 = (_g_parse_debug_string($3,1312,6)|0);
  $$0$i$i = $5;
 }
 HEAP32[29848] = $$0$i$i;
 $6 = (_getenv((131616|0))|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$0$i$i1 = 0;
 } else {
  $8 = (_g_parse_debug_string($6,1360,3)|0);
  $$0$i$i1 = $8;
 }
 $9 = $$0$i$i1 & -4;
 $10 = HEAP32[29849]|0;
 $11 = $10 | $9;
 HEAP32[29849] = $11;
 _g_quark_init();
 return;
}
function _g_list_free($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free_chain_with_offset(12,$0,4);
 return;
}
function _g_list_prepend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$cast = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(12)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $10 = ((($2)) + 8|0);
  HEAP32[$10>>2] = 0;
  return ($2|0);
 }
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($2)) + 8|0);
 HEAP32[$7>>2] = $6;
 $8 = ($6|0)==(0);
 if (!($8)) {
  $$cast = $6;
  $9 = ((($$cast)) + 4|0);
  HEAP32[$9>>2] = $2;
 }
 HEAP32[$5>>2] = $2;
 return ($2|0);
}
function _g_malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (_malloc($0)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $$0 = $2;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 131741;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $0;
 _g_log(0,4,131709,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_malloc0($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ($0|0)==(0);
 if ($1) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2 = (_calloc(1,$0)|0);
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $$0 = $2;
  STACKTOP = sp;return ($$0|0);
 }
 HEAP32[$vararg_buffer>>2] = 131772;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $0;
 _g_log(0,4,131709,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if ($2) {
  $5 = ($0|0)==(0|0);
  if ($5) {
   $$0 = 0;
  } else {
   _free($0);
   $$0 = 0;
  }
 } else {
  $3 = (_realloc($0,$1)|0);
  $4 = ($3|0)==(0|0);
  if ($4) {
   HEAP32[$vararg_buffer>>2] = 131803;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = $1;
   _g_log(0,4,131709,$vararg_buffer);
   while(1) {
   }
  } else {
   $$0 = $3;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _g_free($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  _free($0);
 }
 return;
}
function _g_malloc_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (4294967295 / ($1>>>0))&-1;
  $4 = ($3>>>0)<($0>>>0);
  if ($4) {
   HEAP32[$vararg_buffer2>>2] = 131870;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $0;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $1;
   _g_log(0,4,131834,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $5 = Math_imul($1, $0)|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 }
 $7 = (_malloc($5)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $$0$i = $7;
  STACKTOP = sp;return ($$0$i|0);
 }
 HEAP32[$vararg_buffer>>2] = 131741;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $5;
 _g_log(0,4,131709,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_malloc0_n($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (4294967295 / ($1>>>0))&-1;
  $4 = ($3>>>0)<($0>>>0);
  if ($4) {
   HEAP32[$vararg_buffer2>>2] = 131901;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $0;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $1;
   _g_log(0,4,131834,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $5 = Math_imul($1, $0)|0;
 $6 = ($5|0)==(0);
 if ($6) {
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 }
 $7 = (_calloc(1,$5)|0);
 $8 = ($7|0)==(0|0);
 if (!($8)) {
  $$0$i = $7;
  STACKTOP = sp;return ($$0$i|0);
 }
 HEAP32[$vararg_buffer>>2] = 131772;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $5;
 _g_log(0,4,131709,$vararg_buffer);
 while(1) {
 }
 return (0)|0;
}
function _g_realloc_n($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (4294967295 / ($2>>>0))&-1;
  $5 = ($4>>>0)<($1>>>0);
  if ($5) {
   HEAP32[$vararg_buffer2>>2] = 131932;
   $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
   HEAP32[$vararg_ptr5>>2] = $1;
   $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
   HEAP32[$vararg_ptr6>>2] = $2;
   _g_log(0,4,131834,$vararg_buffer2);
   while(1) {
   }
  }
 }
 $6 = Math_imul($2, $1)|0;
 $7 = ($6|0)==(0);
 if ($7) {
  $10 = ($0|0)==(0|0);
  if ($10) {
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
  _free($0);
  $$0$i = 0;
  STACKTOP = sp;return ($$0$i|0);
 } else {
  $8 = (_realloc($0,$6)|0);
  $9 = ($8|0)==(0|0);
  if (!($9)) {
   $$0$i = $8;
   STACKTOP = sp;return ($$0$i|0);
  }
  HEAP32[$vararg_buffer>>2] = 131803;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $6;
  _g_log(0,4,131709,$vararg_buffer);
  while(1) {
  }
 }
 return (0)|0;
}
function _g_log($0,$1,$2,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $varargs = $varargs|0;
 var $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 24|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $varargs;
 $4 = (_g_strdup_vprintf($2,$3)|0);
 (_printf($0,$vararg_buffer)|0);
 (_printf($4,$vararg_buffer1)|0);
 STACKTOP = sp;return;
}
function _g_print($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = (_g_strdup_vprintf($0,$1)|0);
 (_printf($2,$vararg_buffer)|0);
 STACKTOP = sp;return;
}
function _g_spaced_primes_closest($0) {
 $0 = $0|0;
 var $$06 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(11);
 do {
  if ($1) {
   $$06 = 11;
  } else {
   $2 = ($0>>>0)<(19);
   if ($2) {
    $$06 = 19;
   } else {
    $3 = ($0>>>0)<(37);
    if ($3) {
     $$06 = 37;
    } else {
     $4 = ($0>>>0)<(73);
     if ($4) {
      $$06 = 73;
     } else {
      $5 = ($0>>>0)<(109);
      if ($5) {
       $$06 = 109;
      } else {
       $6 = ($0>>>0)<(163);
       if ($6) {
        $$06 = 163;
       } else {
        $7 = ($0>>>0)<(251);
        if ($7) {
         $$06 = 251;
        } else {
         $8 = ($0>>>0)<(367);
         if ($8) {
          $$06 = 367;
         } else {
          $9 = ($0>>>0)<(557);
          if ($9) {
           $$06 = 557;
          } else {
           $10 = ($0>>>0)<(823);
           if ($10) {
            $$06 = 823;
           } else {
            $11 = ($0>>>0)<(1237);
            if ($11) {
             $$06 = 1237;
            } else {
             $12 = ($0>>>0)<(1861);
             if ($12) {
              $$06 = 1861;
             } else {
              $13 = ($0>>>0)<(2777);
              if ($13) {
               $$06 = 2777;
              } else {
               $14 = ($0>>>0)<(4177);
               if ($14) {
                $$06 = 4177;
               } else {
                $15 = ($0>>>0)<(6247);
                if ($15) {
                 $$06 = 6247;
                } else {
                 $16 = ($0>>>0)<(9371);
                 if ($16) {
                  $$06 = 9371;
                 } else {
                  $17 = ($0>>>0)<(14057);
                  if ($17) {
                   $$06 = 14057;
                  } else {
                   $18 = ($0>>>0)<(21089);
                   if ($18) {
                    $$06 = 21089;
                   } else {
                    $19 = ($0>>>0)<(31627);
                    if ($19) {
                     $$06 = 31627;
                    } else {
                     $20 = ($0>>>0)<(47431);
                     if ($20) {
                      $$06 = 47431;
                      break;
                     }
                     $21 = ($0>>>0)<(71143);
                     if ($21) {
                      $$06 = 71143;
                      break;
                     }
                     $22 = ($0>>>0)<(106721);
                     if ($22) {
                      $$06 = 106721;
                      break;
                     }
                     $23 = ($0>>>0)<(160073);
                     if ($23) {
                      $$06 = 160073;
                      break;
                     }
                     $24 = ($0>>>0)<(240101);
                     if ($24) {
                      $$06 = 240101;
                      break;
                     }
                     $25 = ($0>>>0)<(360163);
                     if ($25) {
                      $$06 = 360163;
                      break;
                     }
                     $26 = ($0>>>0)<(540217);
                     if ($26) {
                      $$06 = 540217;
                      break;
                     }
                     $27 = ($0>>>0)<(810343);
                     if ($27) {
                      $$06 = 810343;
                      break;
                     }
                     $28 = ($0>>>0)<(1215497);
                     if ($28) {
                      $$06 = 1215497;
                      break;
                     }
                     $29 = ($0>>>0)<(1823231);
                     if ($29) {
                      $$06 = 1823231;
                      break;
                     }
                     $30 = ($0>>>0)<(2734867);
                     if ($30) {
                      $$06 = 2734867;
                      break;
                     }
                     $31 = ($0>>>0)<(4102283);
                     if ($31) {
                      $$06 = 4102283;
                      break;
                     }
                     $32 = ($0>>>0)<(6153409);
                     if ($32) {
                      $$06 = 6153409;
                      break;
                     }
                     $33 = ($0>>>0)<(9230113);
                     $spec$select = $33 ? 9230113 : 13845163;
                     return ($spec$select|0);
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 return ($$06|0);
}
function _g_vasprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_vasprintf($0,$1,$2)|0);
 $4 = ($3|0)<(0);
 if (!($4)) {
  return ($3|0);
 }
 HEAP32[$0>>2] = 0;
 return ($3|0);
}
function _g_quark_init() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[35970]|0;
 $1 = ($0|0)==(0);
 if ($1) {
  $2 = (_g_hash_table_new(254,255)|0);
  HEAP32[35971] = $2;
  $3 = (_g_malloc_n(2048,4)|0);
  HEAP32[35972] = $3;
  HEAP32[$3>>2] = 0;
  HEAP32[35970] = 1;
  return;
 } else {
  _g_assertion_message_expr(0,131963,62,131992,132005);
  // unreachable;
 }
}
function _g_quark_from_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
 } else {
  $2 = (_quark_from_string($0,1)|0);
  $$0$i = $2;
 }
 return ($$0$i|0);
}
function _quark_from_string($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35971]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  $$0 = $4;
  return ($$0|0);
 }
 $6 = ($1|0)==(0);
 do {
  if ($6) {
   $31 = $0;
  } else {
   $7 = (_strlen($0)|0);
   $8 = (($7) + 1)|0;
   $9 = ($8>>>0)>(2046);
   if ($9) {
    $10 = (_g_strdup($0)|0);
    $31 = $10;
    break;
   }
   $11 = HEAP32[35973]|0;
   $12 = ($11|0)==(0|0);
   if ($12) {
    label = 7;
   } else {
    $13 = HEAP32[35974]|0;
    $14 = (4092 - ($13))|0;
    $15 = ($14>>>0)<($8>>>0);
    if ($15) {
     label = 7;
    } else {
     $18 = $11;$19 = $13;
    }
   }
   if ((label|0) == 7) {
    $16 = (_g_malloc(4092)|0);
    HEAP32[35973] = $16;
    HEAP32[35974] = 0;
    $18 = $16;$19 = 0;
   }
   $17 = (($18) + ($19)|0);
   _memcpy(($17|0),($0|0),($8|0))|0;
   $20 = (($19) + ($8))|0;
   HEAP32[35974] = $20;
   $31 = $17;
  }
 } while(0);
 $21 = HEAP32[35970]|0;
 $22 = $21 & 2047;
 $23 = ($22|0)==(0);
 if ($23) {
  $24 = (($21) + 2048)|0;
  $25 = (_g_malloc_n($24,4)|0);
  $26 = HEAP32[35970]|0;
  $27 = ($26|0)==(0);
  if (!($27)) {
   $28 = $26 << 2;
   $29 = HEAP32[35972]|0;
   _memcpy(($25|0),($29|0),($28|0))|0;
  }
  $30 = (($25) + ($26<<2)|0);
  _memset(($30|0),0,8192)|0;
  HEAP32[35972] = $25;
  $35 = $26;
 } else {
  $35 = $21;
 }
 $32 = (_g_strdup($31)|0);
 $33 = HEAP32[35972]|0;
 $34 = (($33) + ($35<<2)|0);
 HEAP32[$34>>2] = $32;
 $36 = HEAP32[35971]|0;
 $37 = $35;
 (_g_hash_table_insert($36,$31,$37)|0);
 _g_atomic_int_inc(143880);
 $$0 = $35;
 return ($$0|0);
}
function _g_quark_from_static_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = HEAP32[35971]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if (!($5)) {
  $$0$i = $4;
  return ($$0$i|0);
 }
 $6 = HEAP32[35970]|0;
 $7 = $6 & 2047;
 $8 = ($7|0)==(0);
 if ($8) {
  $9 = (($6) + 2048)|0;
  $10 = (_g_malloc_n($9,4)|0);
  $11 = HEAP32[35970]|0;
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = $11 << 2;
   $14 = HEAP32[35972]|0;
   _memcpy(($10|0),($14|0),($13|0))|0;
  }
  $15 = (($10) + ($11<<2)|0);
  _memset(($15|0),0,8192)|0;
  HEAP32[35972] = $10;
  $19 = $11;
 } else {
  $19 = $6;
 }
 $16 = (_g_strdup($0)|0);
 $17 = HEAP32[35972]|0;
 $18 = (($17) + ($19<<2)|0);
 HEAP32[$18>>2] = $16;
 $20 = HEAP32[35971]|0;
 $21 = $19;
 (_g_hash_table_insert($20,$0,$21)|0);
 _g_atomic_int_inc(143880);
 $$0$i = $19;
 return ($$0$i|0);
}
function _g_quark_to_string($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_atomic_int_get(143880)|0);
 $2 = ($1>>>0)>($0>>>0);
 if (!($2)) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = HEAP32[35972]|0;
 $4 = (($3) + ($0<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 $$0 = $5;
 return ($$0|0);
}
function _g_intern_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = (_quark_from_string($0,1)|0);
 $3 = HEAP32[35972]|0;
 $4 = (($3) + ($2<<2)|0);
 $5 = HEAP32[$4>>2]|0;
 $$0$i = $5;
 return ($$0$i|0);
}
function _g_intern_static_string($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0$i = 0;
  return ($$0$i|0);
 }
 $2 = HEAP32[35971]|0;
 $3 = (_g_hash_table_lookup($2,$0)|0);
 $4 = $3;
 $5 = ($3|0)==(0|0);
 if ($5) {
  $6 = HEAP32[35970]|0;
  $7 = $6 & 2047;
  $8 = ($7|0)==(0);
  if ($8) {
   $9 = (($6) + 2048)|0;
   $10 = (_g_malloc_n($9,4)|0);
   $11 = HEAP32[35970]|0;
   $12 = ($11|0)==(0);
   if (!($12)) {
    $13 = $11 << 2;
    $14 = HEAP32[35972]|0;
    _memcpy(($10|0),($14|0),($13|0))|0;
   }
   $15 = (($10) + ($11<<2)|0);
   _memset(($15|0),0,8192)|0;
   HEAP32[35972] = $10;
   $19 = $11;
  } else {
   $19 = $6;
  }
  $16 = (_g_strdup($0)|0);
  $17 = HEAP32[35972]|0;
  $18 = (($17) + ($19<<2)|0);
  HEAP32[$18>>2] = $16;
  $20 = HEAP32[35971]|0;
  $21 = $19;
  (_g_hash_table_insert($20,$0,$21)|0);
  _g_atomic_int_inc(143880);
  $$0$i1 = $19;
 } else {
  $$0$i1 = $4;
 }
 $22 = HEAP32[35972]|0;
 $23 = (($22) + ($$0$i1<<2)|0);
 $24 = HEAP32[$23>>2]|0;
 $$0$i = $24;
 return ($$0$i|0);
}
function _g_slice_alloc($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc($0)|0);
 return ($1|0);
}
function _g_slice_alloc0($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_malloc($0)|0);
 $2 = ($1|0)==(0|0);
 if ($2) {
  return ($1|0);
 }
 _memset(($1|0),0,($0|0))|0;
 return ($1|0);
}
function _g_slice_free_chain_with_offset($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$08 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1|0)==(0|0);
 if ($3) {
  return;
 }
 $$08 = $1;
 while(1) {
  $4 = (($$08) + ($2)|0);
  $5 = HEAP32[$4>>2]|0;
  _g_free($$08);
  $6 = ($5|0)==(0|0);
  if ($6) {
   break;
  } else {
   $$08 = $5;
  }
 }
 return;
}
function _g_slice_free1($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_free($1);
 return;
}
function _g_slist_free($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free_chain_with_offset(8,$0,4);
 return;
}
function _g_slist_free_1($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_slice_free1(8,$0);
 return;
}
function _g_slist_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(8)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = 0;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$0 = $2;
  return ($$0|0);
 }
 $$0$i = $0;
 while(1) {
  $5 = ((($$0$i)) + 4|0);
  $6 = HEAP32[$5>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   break;
  } else {
   $$0$i = $6;
  }
 }
 $8 = ((($$0$i)) + 4|0);
 HEAP32[$8>>2] = $2;
 $$0 = $0;
 return ($$0|0);
}
function _g_slist_prepend($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slice_alloc(8)|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($2)) + 4|0);
 HEAP32[$3>>2] = $0;
 return ($2|0);
}
function _g_slist_remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$$0$$0$$i = 0, $$0$$0$$0$$i$pre = 0, $$010$us$i = 0, $$pr$us$i = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $0;
 $3 = ($0|0)==(0|0);
 L1: do {
  if ($3) {
   $$0$$0$$0$$i = 0;
  } else {
   $$010$us$i = $2;$5 = $0;
   while(1) {
    $4 = HEAP32[$5>>2]|0;
    $6 = ($4|0)==($1|0);
    $7 = ((($5)) + 4|0);
    if ($6) {
     break;
    }
    $$pr$us$i = HEAP32[$7>>2]|0;
    $9 = ($$pr$us$i|0)==(0|0);
    if ($9) {
     $$0$$0$$0$$i = $0;
     break L1;
    } else {
     $$010$us$i = $7;$5 = $$pr$us$i;
    }
   }
   $8 = HEAP32[$7>>2]|0;
   HEAP32[$$010$us$i>>2] = $8;
   _g_slice_free1(8,$5);
   $$0$$0$$0$$i$pre = HEAP32[$2>>2]|0;
   $$0$$0$$0$$i = $$0$$0$$0$$i$pre;
  }
 } while(0);
 STACKTOP = sp;return ($$0$$0$$0$$i|0);
}
function _g_slist_copy($0) {
 $0 = $0|0;
 var $$0$lcssa$i = 0, $$026$i = 0, $$027$i = 0, $$027$in$i = 0, $$027$in28$i = 0, $$02729$i = 0, $$02731$i = 0, $$030$i = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$026$i = 0;
  return ($$026$i|0);
 }
 $2 = (_g_slice_alloc(8)|0);
 $3 = HEAP32[$0>>2]|0;
 HEAP32[$2>>2] = $3;
 $$027$in28$i = ((($0)) + 4|0);
 $$02729$i = HEAP32[$$027$in28$i>>2]|0;
 $4 = ($$02729$i|0)==(0|0);
 if ($4) {
  $$0$lcssa$i = $2;
 } else {
  $$02731$i = $$02729$i;$$030$i = $2;
  while(1) {
   $5 = (_g_slice_alloc(8)|0);
   $6 = ((($$030$i)) + 4|0);
   HEAP32[$6>>2] = $5;
   $7 = HEAP32[$$02731$i>>2]|0;
   HEAP32[$5>>2] = $7;
   $$027$in$i = ((($$02731$i)) + 4|0);
   $$027$i = HEAP32[$$027$in$i>>2]|0;
   $8 = ($$027$i|0)==(0|0);
   if ($8) {
    break;
   } else {
    $$02731$i = $$027$i;$$030$i = $5;
   }
  }
  $$0$lcssa$i = $5;
 }
 $9 = ((($$0$lcssa$i)) + 4|0);
 HEAP32[$9>>2] = 0;
 $$026$i = $2;
 return ($$026$i|0);
}
function _g_slist_sort($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_slist_sort_real($0,$1,0)|0);
 return ($2|0);
}
function _g_slist_sort_real($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa$i = 0, $$019$lcssa$i = 0, $$01924$i = 0, $$021$lcssa$i = 0, $$021$lcssa$ph = 0, $$02123 = 0, $$02123$i = 0, $$022 = 0, $$025$i = 0, $$1$i = 0, $$120$i = 0, $$122$i = 0, $$lcssa$i = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $4 = ($0|0)==(0|0);
 if ($4) {
  $$022 = 0;
  STACKTOP = sp;return ($$022|0);
 }
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$022 = $0;
  STACKTOP = sp;return ($$022|0);
 }
 $8 = ((($6)) + 4|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $$pre$phiZ2D = $5;$21 = $6;
 } else {
  $$02123 = $0;$12 = $9;
  while(1) {
   $11 = ((($12)) + 4|0);
   $13 = HEAP32[$11>>2]|0;
   $14 = ($13|0)==(0|0);
   if ($14) {
    $$021$lcssa$ph = $$02123;
    break;
   }
   $15 = ((($$02123)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($13)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($18|0)==(0|0);
   if ($19) {
    $$021$lcssa$ph = $16;
    break;
   } else {
    $$02123 = $16;$12 = $18;
   }
  }
  $$phi$trans$insert = ((($$021$lcssa$ph)) + 4|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre$phiZ2D = $$phi$trans$insert;$21 = $$pre;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $20 = (_g_slist_sort_real($0,$1,$2)|0);
 $22 = (_g_slist_sort_real($21,$1,$2)|0);
 $23 = ($20|0)!=(0|0);
 $24 = ($22|0)!=(0|0);
 $25 = $23 & $24;
 if ($25) {
  $$01924$i = $3;$$02123$i = $22;$$025$i = $20;
  while(1) {
   $26 = HEAP32[$$025$i>>2]|0;
   $27 = HEAP32[$$02123$i>>2]|0;
   $28 = (ftCall_iiii($1|0,$26,$27,$2)|0);
   $29 = ($28|0)<(1);
   $30 = ((($$01924$i)) + 4|0);
   if ($29) {
    HEAP32[$30>>2] = $$025$i;
    $31 = ((($$025$i)) + 4|0);
    $32 = HEAP32[$31>>2]|0;
    $$1$i = $32;$$120$i = $$025$i;$$122$i = $$02123$i;
   } else {
    HEAP32[$30>>2] = $$02123$i;
    $33 = ((($$02123$i)) + 4|0);
    $34 = HEAP32[$33>>2]|0;
    $$1$i = $$025$i;$$120$i = $$02123$i;$$122$i = $34;
   }
   $35 = ($$1$i|0)!=(0|0);
   $36 = ($$122$i|0)!=(0|0);
   $37 = $36 & $35;
   if ($37) {
    $$01924$i = $$120$i;$$02123$i = $$122$i;$$025$i = $$1$i;
   } else {
    $$0$lcssa$i = $$1$i;$$019$lcssa$i = $$120$i;$$021$lcssa$i = $$122$i;$$lcssa$i = $35;
    break;
   }
  }
 } else {
  $$0$lcssa$i = $20;$$019$lcssa$i = $3;$$021$lcssa$i = $22;$$lcssa$i = $23;
 }
 $38 = $$lcssa$i ? $$0$lcssa$i : $$021$lcssa$i;
 $39 = ((($$019$lcssa$i)) + 4|0);
 HEAP32[$39>>2] = $38;
 $40 = ((($3)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $$022 = $41;
 STACKTOP = sp;return ($$022|0);
}
function _g_strdup($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  $$0 = 0;
  return ($$0|0);
 }
 $2 = (_strlen($0)|0);
 $3 = (($2) + 1)|0;
 $4 = (_g_malloc($3)|0);
 _memcpy(($4|0),($0|0),($3|0))|0;
 $$0 = $4;
 return ($$0|0);
}
function _g_memdup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)!=(0|0);
 $3 = ($1|0)!=(0);
 $or$cond = $2 & $3;
 if (!($or$cond)) {
  $$0 = 0;
  return ($$0|0);
 }
 $4 = (_g_malloc($1)|0);
 _memcpy(($4|0),($0|0),($1|0))|0;
 $$0 = $4;
 return ($$0|0);
}
function _g_strndup($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  return ($$0|0);
 }
 $3 = (($1) + 1)|0;
 $4 = (_g_malloc($3)|0);
 (_strncpy($4,$0,$1)|0);
 $5 = (($4) + ($1)|0);
 HEAP8[$5>>0] = 0;
 $$0 = $4;
 return ($$0|0);
}
function _g_strdup_vprintf($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = 0;
 (_g_vasprintf($2,$0,$1)|0);
 $3 = HEAP32[$2>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function _g_strdup_printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $1 = sp + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 HEAP32[$1>>2] = 0;
 (_g_vasprintf($1,$0,$2)|0);
 $3 = HEAP32[$1>>2]|0;
 STACKTOP = sp;return ($3|0);
}
function _g_strconcat($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $$0 = 0, $$0$i = 0, $$0$i40 = 0, $$0$i40$ph = 0, $$035$lcssa = 0, $$03545 = 0, $$03644 = 0, $$09$i = 0, $$09$i39$ph = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_current5 = 0;
 var $arglist_current8 = 0, $arglist_next = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded17 = 0, $expanded18 = 0, $expanded20 = 0, $expanded21 = 0, $expanded22 = 0, $expanded24 = 0, $expanded25 = 0, $expanded27 = 0, $expanded28 = 0;
 var $expanded29 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $3 = (_strlen($0)|0);
 $4 = (($3) + 1)|0;
 HEAP32[$1>>2] = $varargs;
 $arglist_current = HEAP32[$1>>2]|0;
 $5 = $arglist_current;
 $6 = ((0) + 4|0);
 $expanded4 = $6;
 $expanded = (($expanded4) - 1)|0;
 $7 = (($5) + ($expanded))|0;
 $8 = ((0) + 4|0);
 $expanded8 = $8;
 $expanded7 = (($expanded8) - 1)|0;
 $expanded6 = $expanded7 ^ -1;
 $9 = $7 & $expanded6;
 $10 = $9;
 $11 = HEAP32[$10>>2]|0;
 $arglist_next = ((($10)) + 4|0);
 HEAP32[$1>>2] = $arglist_next;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$035$lcssa = $4;
 } else {
  $$03545 = $4;$$03644 = $11;
  while(1) {
   $13 = (_strlen($$03644)|0);
   $14 = (($13) + ($$03545))|0;
   $arglist_current2 = HEAP32[$1>>2]|0;
   $15 = $arglist_current2;
   $16 = ((0) + 4|0);
   $expanded11 = $16;
   $expanded10 = (($expanded11) - 1)|0;
   $17 = (($15) + ($expanded10))|0;
   $18 = ((0) + 4|0);
   $expanded15 = $18;
   $expanded14 = (($expanded15) - 1)|0;
   $expanded13 = $expanded14 ^ -1;
   $19 = $17 & $expanded13;
   $20 = $19;
   $21 = HEAP32[$20>>2]|0;
   $arglist_next3 = ((($20)) + 4|0);
   HEAP32[$1>>2] = $arglist_next3;
   $22 = ($21|0)==(0|0);
   if ($22) {
    $$035$lcssa = $14;
    break;
   } else {
    $$03545 = $14;$$03644 = $21;
   }
  }
 }
 $23 = (_g_malloc($$035$lcssa)|0);
 $$0$i = $0;$$09$i = $23;
 while(1) {
  $24 = HEAP8[$$0$i>>0]|0;
  $25 = ((($$09$i)) + 1|0);
  HEAP8[$$09$i>>0] = $24;
  $26 = ((($$0$i)) + 1|0);
  $27 = ($24<<24>>24)==(0);
  if ($27) {
   break;
  } else {
   $$0$i = $26;$$09$i = $25;
  }
 }
 HEAP32[$1>>2] = $varargs;
 $arglist_current5 = HEAP32[$1>>2]|0;
 $28 = $arglist_current5;
 $29 = ((0) + 4|0);
 $expanded18 = $29;
 $expanded17 = (($expanded18) - 1)|0;
 $30 = (($28) + ($expanded17))|0;
 $31 = ((0) + 4|0);
 $expanded22 = $31;
 $expanded21 = (($expanded22) - 1)|0;
 $expanded20 = $expanded21 ^ -1;
 $32 = $30 & $expanded20;
 $33 = $32;
 $34 = HEAP32[$33>>2]|0;
 $arglist_next6 = ((($33)) + 4|0);
 HEAP32[$1>>2] = $arglist_next6;
 $35 = ($34|0)==(0|0);
 L12: do {
  if (!($35)) {
   $$0$i40$ph = $34;$$09$i39$ph = $$09$i;
   while(1) {
    $$0$i40 = $$0$i40$ph;
    while(1) {
     $38 = HEAP8[$$0$i40>>0]|0;
     HEAP8[$$09$i39$ph>>0] = $38;
     $39 = HEAP8[$$0$i40>>0]|0;
     $40 = ($39<<24>>24)==(0);
     if (!($40)) {
      break;
     }
     $arglist_current8 = HEAP32[$1>>2]|0;
     $41 = $arglist_current8;
     $42 = ((0) + 4|0);
     $expanded25 = $42;
     $expanded24 = (($expanded25) - 1)|0;
     $43 = (($41) + ($expanded24))|0;
     $44 = ((0) + 4|0);
     $expanded29 = $44;
     $expanded28 = (($expanded29) - 1)|0;
     $expanded27 = $expanded28 ^ -1;
     $45 = $43 & $expanded27;
     $46 = $45;
     $47 = HEAP32[$46>>2]|0;
     $arglist_next9 = ((($46)) + 4|0);
     HEAP32[$1>>2] = $arglist_next9;
     $48 = ($47|0)==(0|0);
     if ($48) {
      break L12;
     } else {
      $$0$i40 = $47;
     }
    }
    $36 = ((($$0$i40)) + 1|0);
    $37 = ((($$09$i39$ph)) + 1|0);
    $$0$i40$ph = $36;$$09$i39$ph = $37;
   }
  }
 } while(0);
 $$0 = $23;
 STACKTOP = sp;return ($$0|0);
}
function _g_str_has_suffix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (_strlen($1)|0);
 $4 = ($2>>>0)<($3>>>0);
 if ($4) {
  $$0 = 0;
  return ($$0|0);
 }
 $5 = (($0) + ($2)|0);
 $6 = (0 - ($3))|0;
 $7 = (($5) + ($6)|0);
 $8 = (_strcmp($7,$1)|0);
 $9 = ($8|0)==(0);
 $10 = $9&1;
 $$0 = $10;
 return ($$0|0);
}
function _g_str_has_prefix($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = (_strncmp($0,$1,$2)|0);
 $4 = ($3|0)==(0);
 $5 = $4&1;
 return ($5|0);
}
function _g_string_new($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i$i$i10 = 0, $$07$i$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if (!($1)) {
  $2 = HEAP8[$0>>0]|0;
  $3 = ($2<<24>>24)==(0);
  if (!($3)) {
   $8 = (_strlen($0)|0);
   $9 = (($8) + 2)|0;
   $10 = (_g_slice_alloc(12)|0);
   $11 = ((($10)) + 8|0);
   HEAP32[$11>>2] = 0;
   $12 = ((($10)) + 4|0);
   HEAP32[$12>>2] = 0;
   HEAP32[$10>>2] = 0;
   $13 = ($9>>>0)>(2);
   $14 = $13 ? $9 : 2;
   $15 = (($14) + 1)|0;
   $16 = ($15|0)<(0);
   if ($16) {
    $$07$i$i$i = -1;
   } else {
    $$0$i$i$i10 = 1;
    while(1) {
     $17 = ($$0$i$i$i10>>>0)<($15>>>0);
     $18 = $$0$i$i$i10 << 1;
     if ($17) {
      $$0$i$i$i10 = $18;
     } else {
      $$07$i$i$i = $$0$i$i$i10;
      break;
     }
    }
   }
   HEAP32[$11>>2] = $$07$i$i$i;
   $19 = (_g_realloc(0,$$07$i$i$i)|0);
   HEAP32[$10>>2] = $19;
   HEAP8[$19>>0] = 0;
   (_g_string_insert_len($10,-1,$0,$8)|0);
   $$0 = $10;
   return ($$0|0);
  }
 }
 $4 = (_g_slice_alloc(12)|0);
 $5 = ((($4)) + 8|0);
 $6 = ((($4)) + 4|0);
 HEAP32[$6>>2] = 0;
 HEAP32[$5>>2] = 4;
 $7 = (_g_realloc(0,4)|0);
 HEAP32[$4>>2] = $7;
 HEAP8[$7>>0] = 0;
 $$0 = $4;
 return ($$0|0);
}
function _g_string_insert_len($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i83 = 0, $$07$i$i = 0, $$07$i$i84 = 0, $$080 = 0, $$082 = 0, $$082$ = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre87 = 0, $$pre88 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($3|0)==(0);
 if ($4) {
  return ($0|0);
 }
 $5 = ($3|0)<(0);
 if ($5) {
  $6 = (_strlen($2)|0);
  $$082 = $6;
 } else {
  $$082 = $3;
 }
 $7 = ($1|0)<(0);
 if ($7) {
  $8 = ((($0)) + 4|0);
  $9 = HEAP32[$8>>2]|0;
  $$080 = $9;
 } else {
  $$080 = $1;
 }
 $10 = HEAP32[$0>>2]|0;
 $11 = ($10>>>0)>($2>>>0);
 $$phi$trans$insert = ((($0)) + 4|0);
 $$pre87 = HEAP32[$$phi$trans$insert>>2]|0;
 $12 = (($10) + ($$pre87)|0);
 $13 = ($12>>>0)<($2>>>0);
 $or$cond = $11 | $13;
 do {
  if ($or$cond) {
   $14 = (($$pre87) + ($$082))|0;
   $15 = ((($0)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($14>>>0)<($16>>>0);
   if ($17) {
    $24 = $$pre87;$58 = $10;
   } else {
    $18 = (($14) + 1)|0;
    $19 = ($18|0)<(0);
    if ($19) {
     $$07$i$i = -1;
    } else {
     $$0$i$i = 1;
     while(1) {
      $20 = ($$0$i$i>>>0)<($18>>>0);
      $21 = $$0$i$i << 1;
      if ($20) {
       $$0$i$i = $21;
      } else {
       $$07$i$i = $$0$i$i;
       break;
      }
     }
    }
    HEAP32[$15>>2] = $$07$i$i;
    $22 = (_g_realloc($10,$$07$i$i)|0);
    HEAP32[$0>>2] = $22;
    $$pre88 = HEAP32[$$phi$trans$insert>>2]|0;
    $24 = $$pre88;$58 = $22;
   }
   $23 = ($24>>>0)>($$080>>>0);
   if ($23) {
    $56 = (($24) - ($$080))|0;
    $57 = (($58) + ($$080)|0);
    $59 = (($57) + ($$082)|0);
    _memmove(($59|0),($57|0),($56|0))|0;
   }
   $60 = ($$082|0)==(1);
   if ($60) {
    $61 = HEAP8[$2>>0]|0;
    $62 = HEAP32[$0>>2]|0;
    $63 = (($62) + ($$080)|0);
    HEAP8[$63>>0] = $61;
    break;
   } else {
    $64 = HEAP32[$0>>2]|0;
    $65 = (($64) + ($$080)|0);
    _memcpy(($65|0),($2|0),($$082|0))|0;
    break;
   }
  } else {
   $25 = $10;
   $26 = $2;
   $27 = (($26) - ($25))|0;
   $28 = (($$pre87) + ($$082))|0;
   $29 = ((($0)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = ($28>>>0)<($30>>>0);
   if ($31) {
    $38 = $10;$40 = $$pre87;
   } else {
    $32 = (($28) + 1)|0;
    $33 = ($32|0)<(0);
    if ($33) {
     $$07$i$i84 = -1;
    } else {
     $$0$i$i83 = 1;
     while(1) {
      $34 = ($$0$i$i83>>>0)<($32>>>0);
      $35 = $$0$i$i83 << 1;
      if ($34) {
       $$0$i$i83 = $35;
      } else {
       $$07$i$i84 = $$0$i$i83;
       break;
      }
     }
    }
    HEAP32[$29>>2] = $$07$i$i84;
    $36 = (_g_realloc($10,$$07$i$i84)|0);
    HEAP32[$0>>2] = $36;
    $$pre = HEAP32[$$phi$trans$insert>>2]|0;
    $38 = $36;$40 = $$pre;
   }
   $37 = (($38) + ($27)|0);
   $39 = ($40>>>0)>($$080>>>0);
   $41 = (($38) + ($$080)|0);
   if ($39) {
    $42 = (($40) - ($$080))|0;
    $43 = (($41) + ($$082)|0);
    _memmove(($43|0),($41|0),($42|0))|0;
   }
   $44 = ($$080>>>0)>($27>>>0);
   $45 = (($$080) - ($27))|0;
   $46 = ($$082>>>0)<($45>>>0);
   $$082$ = $46 ? $$082 : $45;
   if ($44) {
    $47 = HEAP32[$0>>2]|0;
    $48 = (($47) + ($$080)|0);
    _memcpy(($48|0),($37|0),($$082$|0))|0;
    $$0 = $$082$;
   } else {
    $$0 = 0;
   }
   $49 = ($$082>>>0)>($$0>>>0);
   if ($49) {
    $50 = (($$082) - ($$0))|0;
    $51 = (($37) + ($$0)|0);
    $52 = (($51) + ($$082)|0);
    $53 = HEAP32[$0>>2]|0;
    $54 = (($53) + ($$080)|0);
    $55 = (($54) + ($$0)|0);
    _memcpy(($55|0),($52|0),($50|0))|0;
   }
  }
 } while(0);
 $66 = HEAP32[$$phi$trans$insert>>2]|0;
 $67 = (($66) + ($$082))|0;
 HEAP32[$$phi$trans$insert>>2] = $67;
 $68 = HEAP32[$0>>2]|0;
 $69 = (($68) + ($67)|0);
 HEAP8[$69>>0] = 0;
 return ($0|0);
}
function _g_string_free($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = HEAP32[$0>>2]|0;
 if ($2) {
  $$0 = $3;
 } else {
  _g_free($3);
  $$0 = 0;
 }
 _g_slice_free1(12,$0);
 return ($$0|0);
}
function _g_string_append($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_string_insert_len($0,-1,$1,-1)|0);
 return ($2|0);
}
function _g_string_insert_c($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i$i = 0, $$018 = 0, $$019 = 0, $$07$i$i = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + 1)|0;
 $6 = ((($0)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5>>>0)<($7>>>0);
 if (!($8)) {
  $9 = (($4) + 2)|0;
  $10 = ($9|0)<(0);
  if ($10) {
   $$07$i$i = -1;
  } else {
   $$0$i$i = 1;
   while(1) {
    $11 = ($$0$i$i>>>0)<($9>>>0);
    $12 = $$0$i$i << 1;
    if ($11) {
     $$0$i$i = $12;
    } else {
     $$07$i$i = $$0$i$i;
     break;
    }
   }
  }
  HEAP32[$6>>2] = $$07$i$i;
  $13 = HEAP32[$0>>2]|0;
  $14 = (_g_realloc($13,$$07$i$i)|0);
  HEAP32[$0>>2] = $14;
 }
 $15 = ($1|0)<(0);
 $16 = HEAP32[$3>>2]|0;
 if ($15) {
  $$019 = $16;
  label = 8;
 } else {
  $17 = ($16>>>0)>($1>>>0);
  if ($17) {
   $18 = (($16) - ($1))|0;
   $19 = HEAP32[$0>>2]|0;
   $20 = (($19) + ($1)|0);
   $21 = ((($20)) + 1|0);
   _memmove(($21|0),($20|0),($18|0))|0;
   $$018 = $1;$$pre$phiZ2D = $0;
  } else {
   $$019 = $1;
   label = 8;
  }
 }
 if ((label|0) == 8) {
  $$018 = $$019;$$pre$phiZ2D = $0;
 }
 $22 = HEAP32[$$pre$phiZ2D>>2]|0;
 $23 = (($22) + ($$018)|0);
 HEAP8[$23>>0] = $2;
 $24 = HEAP32[$3>>2]|0;
 $25 = (($24) + 1)|0;
 HEAP32[$3>>2] = $25;
 $26 = HEAP32[$$pre$phiZ2D>>2]|0;
 $27 = (($26) + ($25)|0);
 HEAP8[$27>>0] = 0;
 return ($0|0);
}
function _g_assertion_message_expr($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($4|0)==(0|0);
 if ($5) {
  (_g_strdup(132023)|0);
  // unreachable;
 } else {
  _g_free(0);
  // unreachable;
 }
}
function _g_strcmp0($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = ($1|0)!=(0|0);
  $4 = $3 << 31 >> 31;
  $$0 = $4;
 } else {
  $5 = ($1|0)==(0|0);
  if ($5) {
   $$0 = 1;
  } else {
   $6 = (_strcmp($0,$1)|0);
   $$0 = $6;
  }
 }
 return ($$0|0);
}
function _g_once_init_enter($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ($1|0)==(0);
 $3 = $2&1;
 return ($3|0);
}
function _g_once_init_leave($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[$0>>2] = $1;
 return;
}
function _g_rec_mutex_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_lock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_rec_mutex_unlock($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _g_unichar_combining_class($0) {
 $0 = $0|0;
 var $$off = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(195328);
 if (!($1)) {
  $$off = (($0) + -917504)|0;
  $12 = ($$off>>>0)<(196608);
  if (!($12)) {
   $18 = 0;
   return ($18|0);
  }
  $13 = $$off >>> 8;
  $14 = (17264 + ($13<<1)|0);
  $15 = HEAP16[$14>>1]|0;
  $16 = $15 << 16 >> 16;
  $17 = (($16) + -4352)|0;
  $18 = $17;
  return ($18|0);
 }
 $2 = $0 >>> 8;
 $3 = (1392 + ($2<<1)|0);
 $4 = HEAP16[$3>>1]|0;
 $5 = $4 << 16 >> 16;
 $6 = ($4<<16>>16)>(4351);
 if ($6) {
  $7 = (($5) + -4352)|0;
  $18 = $7;
  return ($18|0);
 } else {
  $8 = $0 & 255;
  $9 = ((2928 + ($5<<8)|0) + ($8)|0);
  $10 = HEAP8[$9>>0]|0;
  $11 = $10&255;
  $18 = $11;
  return ($18|0);
 }
 return (0)|0;
}
function _g_unichar_tolower($0) {
 $0 = $0|0;
 var $$041$lcssa = 0, $$2 = 0, $$off = 0, $$sink73 = 0, $$sink74 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)<(195328);
 do {
  if ($1) {
   $2 = $0 >>> 8;
   $3 = (18800 + ($2<<1)|0);
   $4 = HEAP16[$3>>1]|0;
   $5 = $4 << 16 >> 16;
   $6 = ($4<<16>>16)>(9999);
   if ($6) {
    $7 = (($5) + -10000)|0;
    $23 = $7;
    break;
   } else {
    $8 = $0 & 255;
    $9 = ((20336 + ($5<<8)|0) + ($8)|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = $10 << 24 >> 24;
    $23 = $11;
    break;
   }
  } else {
   $$off = (($0) + -917504)|0;
   $12 = ($$off>>>0)<(196608);
   if (!($12)) {
    $$2 = $0;
    return ($$2|0);
   }
   $13 = $$off >>> 8;
   $14 = (53872 + ($13<<1)|0);
   $15 = HEAP16[$14>>1]|0;
   $16 = $15 << 16 >> 16;
   $17 = ($15<<16>>16)>(9999);
   if ($17) {
    $18 = (($16) + -10000)|0;
    $23 = $18;
    break;
   } else {
    $19 = $0 & 255;
    $20 = ((20336 + ($16<<8)|0) + ($19)|0);
    $21 = HEAP8[$20>>0]|0;
    $22 = $21 << 24 >> 24;
    $23 = $22;
    break;
   }
  }
 } while(0);
 switch ($23|0) {
 case 9:  {
  $24 = $0 >>> 8;
  $25 = (($24) + -3584)|0;
  $26 = (55408 + ($25<<1)|0);
  $27 = (56944 + ($24<<1)|0);
  $$sink73 = $1 ? $27 : $26;
  $28 = HEAP16[$$sink73>>1]|0;
  $29 = ($28<<16>>16)==(10000);
  do {
   if (!($29)) {
    $30 = (56944 + ($24<<1)|0);
    $31 = (($24) + -3584)|0;
    $32 = (55408 + ($31<<1)|0);
    $$sink74 = $1 ? $30 : $32;
    $33 = HEAP16[$$sink74>>1]|0;
    $34 = $33 << 16 >> 16;
    $35 = $0 & 255;
    $36 = ((58480 + ($34<<10)|0) + ($35<<2)|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($37>>>0)>(16777215);
    if ($38) {
     $39 = (111728 + ($37)|0);
     $40 = ((($39)) + -16777216|0);
     $41 = (_g_utf8_get_char($40)|0);
     $$2 = $41;
     return ($$2|0);
    } else {
     $42 = ($37|0)==(0);
     if ($42) {
      break;
     } else {
      $$2 = $37;
     }
     return ($$2|0);
    }
   }
  } while(0);
  $$2 = $0;
  return ($$2|0);
  break;
 }
 case 8:  {
  do {
   switch ($0|0) {
   case 453:  {
    $$041$lcssa = 0;
    break;
   }
   case 456:  {
    $$041$lcssa = 1;
    break;
   }
   case 459:  {
    $$041$lcssa = 2;
    break;
   }
   case 498:  {
    $$041$lcssa = 3;
    break;
   }
   case 8072:  {
    $$041$lcssa = 4;
    break;
   }
   case 8073:  {
    $$041$lcssa = 5;
    break;
   }
   case 8074:  {
    $$041$lcssa = 6;
    break;
   }
   case 8075:  {
    $$041$lcssa = 7;
    break;
   }
   case 8076:  {
    $$041$lcssa = 8;
    break;
   }
   case 8077:  {
    $$041$lcssa = 9;
    break;
   }
   case 8078:  {
    $$041$lcssa = 10;
    break;
   }
   case 8079:  {
    $$041$lcssa = 11;
    break;
   }
   case 8088:  {
    $$041$lcssa = 12;
    break;
   }
   case 8089:  {
    $$041$lcssa = 13;
    break;
   }
   case 8090:  {
    $$041$lcssa = 14;
    break;
   }
   case 8091:  {
    $$041$lcssa = 15;
    break;
   }
   case 8092:  {
    $$041$lcssa = 16;
    break;
   }
   case 8093:  {
    $$041$lcssa = 17;
    break;
   }
   case 8094:  {
    $$041$lcssa = 18;
    break;
   }
   case 8095:  {
    $$041$lcssa = 19;
    break;
   }
   case 8104:  {
    $$041$lcssa = 20;
    break;
   }
   case 8105:  {
    $$041$lcssa = 21;
    break;
   }
   case 8106:  {
    $$041$lcssa = 22;
    break;
   }
   case 8107:  {
    $$041$lcssa = 23;
    break;
   }
   case 8108:  {
    $$041$lcssa = 24;
    break;
   }
   case 8109:  {
    $$041$lcssa = 25;
    break;
   }
   case 8110:  {
    $$041$lcssa = 26;
    break;
   }
   case 8111:  {
    $$041$lcssa = 27;
    break;
   }
   case 8124:  {
    $$041$lcssa = 28;
    break;
   }
   case 8140:  {
    $$041$lcssa = 29;
    break;
   }
   case 8188:  {
    $$041$lcssa = 30;
    break;
   }
   default: {
    $$2 = $0;
    return ($$2|0);
   }
   }
  } while(0);
  $43 = (((112912 + (($$041$lcssa*12)|0)|0)) + 8|0);
  $44 = HEAP32[$43>>2]|0;
  $$2 = $44;
  return ($$2|0);
  break;
 }
 default: {
  $$2 = $0;
  return ($$2|0);
 }
 }
 return (0)|0;
}
function _g_utf8_strdown($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_setlocale(0,0)|0);
 $3 = ($2|0)==(0|0);
 L1: do {
  if ($3) {
   $$0$i = 0;
  } else {
   $4 = HEAP8[$2>>0]|0;
   $5 = $4 << 24 >> 24;
   switch ($5|0) {
   case 97:  {
    $6 = ((($2)) + 1|0);
    $7 = HEAP8[$6>>0]|0;
    $8 = ($7<<24>>24)==(122);
    if ($8) {
     $$0$i = 1;
     break L1;
    }
    break;
   }
   case 108:  {
    $9 = ((($2)) + 1|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==(116);
    if ($11) {
     $$0$i = 2;
     break L1;
    }
    break;
   }
   case 116:  {
    $12 = ((($2)) + 1|0);
    $13 = HEAP8[$12>>0]|0;
    $14 = ($13<<24>>24)==(114);
    if ($14) {
     $$0$i = 1;
     break L1;
    }
    break;
   }
   default: {
   }
   }
   $$0$i = 0;
  }
 } while(0);
 $15 = (_real_tolower($0,$1,0,$$0$i)|0);
 $16 = (($15) + 1)|0;
 $17 = (_g_malloc($16)|0);
 (_real_tolower($0,$1,$17,$$0$i)|0);
 $18 = (($17) + ($15)|0);
 HEAP8[$18>>0] = 0;
 return ($17|0);
}
function _real_tolower($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0$i163 = 0, $$01011$i = 0, $$0153165$lcssa = 0, $$0154$lcssa = 0, $$0154167 = 0, $$0169 = 0, $$1 = 0, $$1155 = 0, $$1157 = 0, $$3 = 0, $$off = 0, $$off158 = 0, $$sink203 = 0, $$sink204 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0;
 var $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0;
 var $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0;
 var $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0;
 var $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0;
 var $177 = 0, $178 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0;
 var $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond162 = 0, $or$cond3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($1|0)<(0);
 $5 = (($0) + ($1)|0);
 $6 = ($1|0)==(0);
 if ($6) {
  $$0154$lcssa = 0;
  return ($$0154$lcssa|0);
 }
 $7 = HEAP32[29850]|0;
 $8 = ($3|0)==(1);
 $9 = ($2|0)==(0|0);
 $10 = ($3|0)==(2);
 $11 = ($2|0)!=(0|0);
 $$0154167 = 0;$$0169 = $0;
 while(1) {
  $12 = HEAP8[$$0169>>0]|0;
  $13 = ($12<<24>>24)==(0);
  if ($13) {
   $$0154$lcssa = $$0154167;
   label = 86;
   break;
  }
  $14 = (_g_utf8_get_char($$0169)|0);
  $15 = ($14>>>0)<(195328);
  do {
   if ($15) {
    $16 = $14 >>> 8;
    $17 = (18800 + ($16<<1)|0);
    $18 = HEAP16[$17>>1]|0;
    $19 = $18 << 16 >> 16;
    $20 = ($18<<16>>16)>(9999);
    if ($20) {
     $21 = (($19) + -10000)|0;
     $134 = $21;
     break;
    } else {
     $22 = $14 & 255;
     $23 = ((20336 + ($19<<8)|0) + ($22)|0);
     $24 = HEAP8[$23>>0]|0;
     $25 = $24 << 24 >> 24;
     $134 = $25;
     break;
    }
   } else {
    $$off = (($14) + -917504)|0;
    $26 = ($$off>>>0)<(196608);
    if ($26) {
     $27 = $$off >>> 8;
     $28 = (53872 + ($27<<1)|0);
     $29 = HEAP16[$28>>1]|0;
     $30 = $29 << 16 >> 16;
     $31 = ($29<<16>>16)>(9999);
     if ($31) {
      $32 = (($30) + -10000)|0;
      $134 = $32;
      break;
     } else {
      $33 = $14 & 255;
      $34 = ((20336 + ($30<<8)|0) + ($33)|0);
      $35 = HEAP8[$34>>0]|0;
      $36 = $35 << 24 >> 24;
      $134 = $36;
      break;
     }
    } else {
     $134 = 2;
    }
   }
  } while(0);
  $37 = $12&255;
  $38 = (($7) + ($37)|0);
  $39 = HEAP8[$38>>0]|0;
  $40 = $39 << 24 >> 24;
  $41 = (($$0169) + ($40)|0);
  $42 = ($14|0)==(73);
  $or$cond3 = $8 & $42;
  L18: do {
   if ($or$cond3) {
    $43 = (_g_utf8_get_char($41)|0);
    $44 = ($43|0)==(775);
    $45 = (($2) + ($$0154167)|0);
    $46 = $9 ? 0 : $45;
    if ($44) {
     $47 = (_g_unichar_to_utf8(105,$46)|0);
     $48 = (($47) + ($$0154167))|0;
     $49 = HEAP8[$41>>0]|0;
     $50 = $49&255;
     $51 = (($7) + ($50)|0);
     $52 = HEAP8[$51>>0]|0;
     $53 = $52 << 24 >> 24;
     $54 = (($41) + ($53)|0);
     $$1 = $54;$$1155 = $48;
     break;
    } else {
     $55 = (_g_unichar_to_utf8(305,$46)|0);
     $56 = (($55) + ($$0154167))|0;
     $$1 = $41;$$1155 = $56;
     break;
    }
   } else {
    L24: do {
     if ($10) {
      switch ($14|0) {
      case 931:  {
       label = 28;
       break L24;
       break;
      }
      case 204: case 205: case 296:  {
       $57 = (($2) + ($$0154167)|0);
       $58 = $11 ? $57 : 0;
       $59 = (_g_unichar_to_utf8(105,$58)|0);
       $60 = (($59) + ($$0154167))|0;
       $61 = (($2) + ($60)|0);
       $62 = $11 ? $61 : 0;
       $63 = (_g_unichar_to_utf8(775,$62)|0);
       $64 = (($60) + ($63))|0;
       switch ($14|0) {
       case 204:  {
        $65 = (($2) + ($64)|0);
        $66 = $11 ? $65 : 0;
        $67 = (_g_unichar_to_utf8(768,$66)|0);
        $68 = (($67) + ($64))|0;
        $$1 = $41;$$1155 = $68;
        break L18;
        break;
       }
       case 205:  {
        $69 = (($2) + ($64)|0);
        $70 = $11 ? $69 : 0;
        $71 = (_g_unichar_to_utf8(769,$70)|0);
        $72 = (($71) + ($64))|0;
        $$1 = $41;$$1155 = $72;
        break L18;
        break;
       }
       case 296:  {
        $73 = (($2) + ($64)|0);
        $74 = $11 ? $73 : 0;
        $75 = (_g_unichar_to_utf8(771,$74)|0);
        $76 = (($75) + ($64))|0;
        $$1 = $41;$$1155 = $76;
        break L18;
        break;
       }
       default: {
        $$1 = $41;$$1155 = $64;
        break L18;
       }
       }
       break;
      }
      case 73: case 74: case 302:  {
       break;
      }
      default: {
       break L24;
      }
      }
      $77 = HEAP8[$41>>0]|0;
      $78 = ($77<<24>>24)==(0);
      if (!($78)) {
       $$01011$i = $41;$82 = $77;
       L34: while(1) {
        $79 = (_g_utf8_get_char($$01011$i)|0);
        $80 = (_g_unichar_combining_class($79)|0);
        switch ($80|0) {
        case 0:  {
         label = 27;
         break L24;
         break;
        }
        case 230:  {
         break L34;
         break;
        }
        default: {
        }
        }
        $81 = $82&255;
        $83 = (($7) + ($81)|0);
        $84 = HEAP8[$83>>0]|0;
        $85 = $84 << 24 >> 24;
        $86 = (($$01011$i) + ($85)|0);
        $87 = HEAP8[$86>>0]|0;
        $88 = ($87<<24>>24)==(0);
        if ($88) {
         label = 27;
         break L24;
        } else {
         $$01011$i = $86;$82 = $87;
        }
       }
       $89 = (_g_unichar_tolower($14)|0);
       $90 = (($2) + ($$0154167)|0);
       $91 = $11 ? $90 : 0;
       $92 = (_g_unichar_to_utf8($89,$91)|0);
       $93 = (($92) + ($$0154167))|0;
       $94 = (($2) + ($93)|0);
       $95 = $11 ? $94 : 0;
       $96 = (_g_unichar_to_utf8(775,$95)|0);
       $97 = (($93) + ($96))|0;
       $$1 = $41;$$1155 = $97;
       break L18;
      }
     } else {
      label = 27;
     }
    } while(0);
    if ((label|0) == 27) {
     label = 0;
     $98 = ($14|0)==(931);
     if ($98) {
      label = 28;
     }
    }
    if ((label|0) == 28) {
     label = 0;
     $99 = ($41>>>0)<($5>>>0);
     $or$cond162 = $4 | $99;
     if ($or$cond162) {
      $100 = HEAP8[$41>>0]|0;
      $101 = ($100<<24>>24)==(0);
      if ($101) {
       $$1157 = 962;
      } else {
       $102 = (_g_utf8_get_char($41)|0);
       $103 = ($102>>>0)<(195328);
       do {
        if ($103) {
         $104 = $102 >>> 8;
         $105 = (18800 + ($104<<1)|0);
         $106 = HEAP16[$105>>1]|0;
         $107 = $106 << 16 >> 16;
         $108 = ($106<<16>>16)>(9999);
         if ($108) {
          $109 = (($107) + -10000)|0;
          $126 = $109;
          break;
         } else {
          $110 = $102 & 255;
          $111 = ((20336 + ($107<<8)|0) + ($110)|0);
          $112 = HEAP8[$111>>0]|0;
          $113 = $112 << 24 >> 24;
          $126 = $113;
          break;
         }
        } else {
         $$off158 = (($102) + -917504)|0;
         $114 = ($$off158>>>0)<(196608);
         if ($114) {
          $115 = $$off158 >>> 8;
          $116 = (53872 + ($115<<1)|0);
          $117 = HEAP16[$116>>1]|0;
          $118 = $117 << 16 >> 16;
          $119 = ($117<<16>>16)>(9999);
          if ($119) {
           $120 = (($118) + -10000)|0;
           $126 = $120;
           break;
          } else {
           $121 = $102 & 255;
           $122 = ((20336 + ($118<<8)|0) + ($121)|0);
           $123 = HEAP8[$122>>0]|0;
           $124 = $123 << 24 >> 24;
           $126 = $124;
           break;
          }
         } else {
          $126 = 2;
         }
        }
       } while(0);
       $125 = 1 << $126;
       $127 = $125 & 992;
       $128 = ($127|0)==(0);
       $$ = $128 ? 962 : 963;
       $$1157 = $$;
      }
     } else {
      $$1157 = 962;
     }
     $129 = (($2) + ($$0154167)|0);
     $130 = $9 ? 0 : $129;
     $131 = (_g_unichar_to_utf8($$1157,$130)|0);
     $132 = (($131) + ($$0154167))|0;
     $$1 = $41;$$1155 = $132;
     break;
    }
    $133 = 1 << $134;
    $135 = $133 & 768;
    $136 = ($135|0)==(0);
    if ($136) {
     if (!($9)) {
      $175 = (($2) + ($$0154167)|0);
      _memcpy(($175|0),($$0169|0),($40|0))|0;
     }
     $176 = (($$0154167) + ($40))|0;
     $$1 = $41;$$1155 = $176;
     break;
    }
    $137 = $14 >>> 8;
    $138 = (($137) + -3584)|0;
    $139 = (55408 + ($138<<1)|0);
    $140 = (56944 + ($137<<1)|0);
    $$sink203 = $15 ? $140 : $139;
    $141 = HEAP16[$$sink203>>1]|0;
    $142 = ($141<<16>>16)==(10000);
    if ($142) {
     $178 = 0;
    } else {
     $143 = (56944 + ($137<<1)|0);
     $144 = (($137) + -3584)|0;
     $145 = (55408 + ($144<<1)|0);
     $$sink204 = $15 ? $143 : $145;
     $146 = HEAP16[$$sink204>>1]|0;
     $147 = $146 << 16 >> 16;
     $148 = $14 & 255;
     $149 = ((58480 + ($147<<10)|0) + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150>>>0)>(16777215);
     if ($151) {
      $152 = (($2) + ($$0154167)|0);
      $153 = $9 ? 0 : $152;
      $154 = (($150) + -16777216)|0;
      $155 = (111728 + ($154)|0);
      $156 = ($134|0)==(8);
      if ($156) {
       $$0$i163 = $155;
      } else {
       $157 = HEAP8[$155>>0]|0;
       $158 = $157&255;
       $159 = (($7) + ($158)|0);
       $160 = HEAP8[$159>>0]|0;
       $161 = $160 << 24 >> 24;
       $162 = (($155) + ($161)|0);
       $$0$i163 = $162;
      }
      $163 = (_strlen($$0$i163)|0);
      $164 = ($153|0)==(0|0);
      if (!($164)) {
       _memcpy(($153|0),($$0$i163|0),($163|0))|0;
      }
      $165 = (($163) + ($$0154167))|0;
      $$1 = $41;$$1155 = $165;
      break;
     } else {
      $178 = $150;
     }
    }
    $166 = ($134|0)==(8);
    L74: do {
     if ($166) {
      do {
       switch ($14|0) {
       case 453:  {
        $$0153165$lcssa = 0;
        break;
       }
       case 456:  {
        $$0153165$lcssa = 1;
        break;
       }
       case 459:  {
        $$0153165$lcssa = 2;
        break;
       }
       case 498:  {
        $$0153165$lcssa = 3;
        break;
       }
       case 8072:  {
        $$0153165$lcssa = 4;
        break;
       }
       case 8073:  {
        $$0153165$lcssa = 5;
        break;
       }
       case 8074:  {
        $$0153165$lcssa = 6;
        break;
       }
       case 8075:  {
        $$0153165$lcssa = 7;
        break;
       }
       case 8076:  {
        $$0153165$lcssa = 8;
        break;
       }
       case 8077:  {
        $$0153165$lcssa = 9;
        break;
       }
       case 8078:  {
        $$0153165$lcssa = 10;
        break;
       }
       case 8079:  {
        $$0153165$lcssa = 11;
        break;
       }
       case 8088:  {
        $$0153165$lcssa = 12;
        break;
       }
       case 8089:  {
        $$0153165$lcssa = 13;
        break;
       }
       case 8090:  {
        $$0153165$lcssa = 14;
        break;
       }
       case 8091:  {
        $$0153165$lcssa = 15;
        break;
       }
       case 8092:  {
        $$0153165$lcssa = 16;
        break;
       }
       case 8093:  {
        $$0153165$lcssa = 17;
        break;
       }
       case 8094:  {
        $$0153165$lcssa = 18;
        break;
       }
       case 8095:  {
        $$0153165$lcssa = 19;
        break;
       }
       case 8104:  {
        $$0153165$lcssa = 20;
        break;
       }
       case 8105:  {
        $$0153165$lcssa = 21;
        break;
       }
       case 8106:  {
        $$0153165$lcssa = 22;
        break;
       }
       case 8107:  {
        $$0153165$lcssa = 23;
        break;
       }
       case 8108:  {
        $$0153165$lcssa = 24;
        break;
       }
       case 8109:  {
        $$0153165$lcssa = 25;
        break;
       }
       case 8110:  {
        $$0153165$lcssa = 26;
        break;
       }
       case 8111:  {
        $$0153165$lcssa = 27;
        break;
       }
       case 8124:  {
        $$0153165$lcssa = 28;
        break;
       }
       case 8140:  {
        $$0153165$lcssa = 29;
        break;
       }
       case 8188:  {
        $$0153165$lcssa = 30;
        break;
       }
       default: {
        $$3 = $178;
        break L74;
       }
       }
      } while(0);
      $167 = (((112912 + (($$0153165$lcssa*12)|0)|0)) + 8|0);
      $168 = HEAP32[$167>>2]|0;
      $$3 = $168;
     } else {
      $$3 = $178;
     }
    } while(0);
    $169 = ($$3|0)==(0);
    $170 = $169 ? $14 : $$3;
    $171 = (($2) + ($$0154167)|0);
    $172 = $9 ? 0 : $171;
    $173 = (_g_unichar_to_utf8($170,$172)|0);
    $174 = (($173) + ($$0154167))|0;
    $$1 = $41;$$1155 = $174;
   }
  } while(0);
  $177 = ($$1>>>0)<($5>>>0);
  $or$cond = $4 | $177;
  if ($or$cond) {
   $$0154167 = $$1155;$$0169 = $$1;
  } else {
   $$0154$lcssa = $$1155;
   label = 86;
   break;
  }
 }
 if ((label|0) == 86) {
  return ($$0154$lcssa|0);
 }
 return (0)|0;
}
function _g_utf8_get_char($0) {
 $0 = $0|0;
 var $$0 = 0, $$02735 = 0, $$02833$ph = 0, $$02932$ph = 0, $$03034 = 0, $$mux = 0, $$mux39 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $brmerge = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP8[$0>>0]|0;
 $2 = $1&255;
 $3 = ($1<<24>>24)>(-1);
 if ($3) {
  $14 = $1 & 127;
  $15 = $14&255;
  $$0 = $15;
  return ($$0|0);
 }
 $4 = $2 & 224;
 $5 = ($4|0)==(192);
 if ($5) {
  $$02833$ph = 2;$$02932$ph = 31;
 } else {
  $6 = $2 & 240;
  $7 = ($6|0)==(224);
  if ($7) {
   $$02833$ph = 3;$$02932$ph = 15;
  } else {
   $8 = $2 & 248;
   $9 = ($8|0)==(240);
   if ($9) {
    $$02833$ph = 4;$$02932$ph = 7;
   } else {
    $10 = $2 & 252;
    $11 = ($10|0)==(248);
    $12 = $2 & 254;
    $13 = ($12|0)==(252);
    $brmerge = $11 | $13;
    $$mux = $11 ? 5 : 6;
    $$mux39 = $11 ? 3 : 1;
    if ($brmerge) {
     $$02833$ph = $$mux;$$02932$ph = $$mux39;
    } else {
     $$0 = -1;
     return ($$0|0);
    }
   }
  }
 }
 $16 = $1 << 24 >> 24;
 $17 = $$02932$ph & $16;
 $$02735 = $17;$$03034 = 1;
 while(1) {
  $18 = (($0) + ($$03034)|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = $19 << 24 >> 24;
  $21 = $20 & 192;
  $22 = ($21|0)==(128);
  if (!($22)) {
   $$0 = -1;
   label = 10;
   break;
  }
  $23 = $$02735 << 6;
  $24 = $20 & 63;
  $25 = $24 | $23;
  $26 = (($$03034) + 1)|0;
  $27 = ($26>>>0)<($$02833$ph>>>0);
  if ($27) {
   $$02735 = $25;$$03034 = $26;
  } else {
   $$0 = $25;
   label = 10;
   break;
  }
 }
 if ((label|0) == 10) {
  return ($$0|0);
 }
 return (0)|0;
}
function _g_unichar_to_utf8($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$020 = 0, $$021 = 0, $$022$lcssa = 0, $$02226 = 0, $$027 = 0, $$027$in = 0, $$23 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select24 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0>>>0)<(128);
 if ($2) {
  $$020 = 0;$$021 = 1;
 } else {
  $3 = ($0>>>0)<(2048);
  if ($3) {
   $$020 = 192;$$021 = 2;
  } else {
   $4 = ($0>>>0)<(65536);
   if ($4) {
    $$020 = 224;$$021 = 3;
   } else {
    $5 = ($0>>>0)<(2097152);
    $6 = ($0>>>0)<(67108864);
    $$ = $6 ? 5 : 6;
    $$23 = $6 ? 248 : 252;
    $spec$select = $5 ? 4 : $$;
    $spec$select24 = $5 ? 240 : $$23;
    $$020 = $spec$select24;$$021 = $spec$select;
   }
  }
 }
 $7 = ($1|0)==(0|0);
 if ($7) {
  return ($$021|0);
 }
 $8 = ($$021|0)>(1);
 if ($8) {
  $$02226 = $0;$$027$in = $$021;
  while(1) {
   $$027 = (($$027$in) + -1)|0;
   $9 = $$02226 & 63;
   $10 = $9 | 128;
   $11 = $10&255;
   $12 = (($1) + ($$027)|0);
   HEAP8[$12>>0] = $11;
   $13 = $$02226 >>> 6;
   $14 = ($$027$in|0)>(2);
   if ($14) {
    $$02226 = $13;$$027$in = $$027;
   } else {
    $$022$lcssa = $13;
    break;
   }
  }
 } else {
  $$022$lcssa = $0;
 }
 $15 = $$022$lcssa | $$020;
 $16 = $15&255;
 HEAP8[$1>>0] = $16;
 return ($$021|0);
}
function _g_variant_is_of_type($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _g_variant_unref($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_icomparable_base_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35976]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  return;
 }
 HEAP32[35976] = 1;
 return;
}
function _system_icomparable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143900)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[35975]|0;
  return ($4|0);
 }
 $2 = (_g_type_register_static(8,132050,119404,0)|0);
 $3 = (_object_get_type()|0);
 _g_type_interface_add_prerequisite($2,$3);
 _g_once_init_leave(143900,$2);
 $4 = HEAP32[35975]|0;
 return ($4|0);
}
function _system_icloneable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143908)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[35977]|0;
  return ($4|0);
 }
 $2 = (_g_type_register_static(8,132068,119440,0)|0);
 $3 = (_object_get_type()|0);
 _g_type_interface_add_prerequisite($2,$3);
 _g_once_init_leave(143908,$2);
 $4 = HEAP32[35977]|0;
 return ($4|0);
}
function _system_icloneable_base_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[35978]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  return;
 }
 HEAP32[35978] = 1;
 return;
}
function _system_exception_quark() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_quark_from_static_string(132085)|0);
 return ($0|0);
}
function _system_io_exception_quark() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_quark_from_static_string(132108)|0);
 return ($0|0);
}
function _system_arraycopy($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $10 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = (($5) + ($6<<2)|0);
 $9 = (($3) + ($4<<2)|0);
 $10 = $7 << 2;
 _memcpy(($8|0),($9|0),($10|0))|0;
 return;
}
function _system_io_buffered_reader_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$1 = 0, $$in76 = 0, $$pre = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = sp + 20|0;
 HEAP32[$4>>2] = 0;
 $5 = (_system_io_reader_construct($0,$1)|0);
 $6 = ((($1)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $17 = 0;
 } else {
  $9 = (_g_object_ref($7)|0);
  $17 = $7;
 }
 $10 = ((($5)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($11)) + 40|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  $$pre$phiZ2D = $12;
 } else {
  _g_object_unref($13);
  $15 = HEAP32[$10>>2]|0;
  $16 = ((($15)) + 40|0);
  HEAP32[$16>>2] = 0;
  $$pre$phiZ2D = $16;
 }
 HEAP32[$$pre$phiZ2D>>2] = $17;
 $18 = ($2|0)<(1);
 if (!($18)) {
  $30 = (_g_object_ref($1)|0);
  $$pre = HEAP32[$10>>2]|0;
  $31 = HEAP32[$$pre>>2]|0;
  $32 = ($31|0)==(0|0);
  if ($32) {
   $$in76 = $$pre;
  } else {
   _g_object_unref($31);
   $33 = HEAP32[$10>>2]|0;
   HEAP32[$33>>2] = 0;
   $$in76 = $33;
  }
  HEAP32[$$in76>>2] = $30;
  $34 = (_g_malloc0($2)|0);
  $35 = HEAP32[$10>>2]|0;
  $36 = ((($35)) + 4|0);
  $37 = HEAP32[$36>>2]|0;
  _g_free($37);
  $38 = HEAP32[$10>>2]|0;
  $39 = ((($38)) + 4|0);
  HEAP32[$39>>2] = $34;
  $40 = ((($38)) + 8|0);
  HEAP32[$40>>2] = $2;
  $41 = ((($38)) + 12|0);
  HEAP32[$41>>2] = $2;
  $42 = ((($38)) + 16|0);
  HEAP32[$42>>2] = 0;
  $43 = ((($38)) + 20|0);
  HEAP32[$43>>2] = 0;
  $$1 = $5;
  STACKTOP = sp;return ($$1|0);
 }
 $19 = (_system_io_exception_quark()|0);
 $20 = (_g_error_new_literal($19,2,132134)|0);
 HEAP32[$4>>2] = $20;
 $21 = HEAP32[$20>>2]|0;
 $22 = (_system_io_exception_quark()|0);
 $23 = ($21|0)==($22|0);
 if ($23) {
  _g_propagate_error($3,$20);
  _g_object_unref($5);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 } else {
  $24 = ((($20)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$20>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($20)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 229;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $25;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $29;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($4);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_new($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_once_init_enter(143916)|0);
 $4 = ($3|0)==(0);
 if (!($4)) {
  $5 = (_system_io_reader_get_type()|0);
  $6 = (_g_type_register_static($5,132193,119476,0)|0);
  _g_once_init_leave(143916,$6);
 }
 $7 = HEAP32[35979]|0;
 $8 = (_system_io_buffered_reader_construct($7,$0,$1,$2)|0);
 return ($8|0);
}
function _system_io_buffered_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35980] = $1;
 _g_type_class_add_private($0,56);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 256;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 257;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 258;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 259;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 260;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 261;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 262;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 263;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 36|0);
 HEAP32[$11>>2] = 264;
 return;
}
function _system_io_buffered_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143916)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,132193,119476,0)|0);
  _g_once_init_leave(143916,$4);
 }
 $5 = HEAP32[35979]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 24|0);
 HEAP32[$8>>2] = -1;
 $9 = ((($6)) + 28|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($6)) + 32|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($6)) + 36|0);
 HEAP32[$11>>2] = 0;
 return;
}
function _system_io_buffered_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$4 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert115 = 0, $$pre = 0, $$pre$phi118Z2D = 0, $$pre$phi120Z2D = 0, $$pre114 = 0, $$pre116 = 0, $$pre116$pn = 0, $$pre117 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 L1: do {
  if ($5) {
   $$pre = HEAP32[$3>>2]|0;
   $$phi$trans$insert = ((($$pre)) + 20|0);
   $$pre114 = HEAP32[$$phi$trans$insert>>2]|0;
   $10 = $$pre114;$7 = $$pre;
   while(1) {
    $6 = ((($7)) + 16|0);
    $8 = HEAP32[$6>>2]|0;
    $9 = ($10|0)<($8|0);
    if ($9) {
     $20 = $7;$27 = $10;
    } else {
     _system_io_buffered_reader_Fill($0,$2);
     $11 = HEAP32[$2>>2]|0;
     $12 = ($11|0)==(0|0);
     if (!($12)) {
      break L1;
     }
     $13 = HEAP32[$3>>2]|0;
     $14 = ((($13)) + 20|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ((($13)) + 16|0);
     $17 = HEAP32[$16>>2]|0;
     $18 = ($15|0)<($17|0);
     if ($18) {
      $20 = $13;$27 = $15;
     } else {
      label = 6;
      break;
     }
    }
    $19 = ((($20)) + 32|0);
    $21 = HEAP32[$19>>2]|0;
    $22 = ($21|0)==(0);
    if ($22) {
     label = 8;
     break;
    }
    HEAP32[$19>>2] = 0;
    $23 = ((($20)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($20)) + 20|0);
    $26 = (($24) + ($27)|0);
    $28 = HEAP8[$26>>0]|0;
    $29 = ($28<<24>>24)==(10);
    if (!($29)) {
     $$pre$phi118Z2D = $25;$$pre116$pn = $24;
     break;
    }
    $30 = (($27) + 1)|0;
    HEAP32[$25>>2] = $30;
    $10 = $30;$7 = $20;
   }
   if ((label|0) == 6) {
    $$4 = -1;
    STACKTOP = sp;return ($$4|0);
   }
   else if ((label|0) == 8) {
    $$phi$trans$insert115 = ((($20)) + 4|0);
    $$pre116 = HEAP32[$$phi$trans$insert115>>2]|0;
    $$pre117 = ((($20)) + 20|0);
    $$pre$phi118Z2D = $$pre117;$$pre116$pn = $$pre116;
   }
   $$pre$phi120Z2D = (($$pre116$pn) + ($27)|0);
   $31 = (($27) + 1)|0;
   HEAP32[$$pre$phi118Z2D>>2] = $31;
   $32 = HEAP8[$$pre$phi120Z2D>>0]|0;
   $33 = $32 << 24 >> 24;
   $$4 = $33;
   STACKTOP = sp;return ($$4|0);
  }
 } while(0);
 $34 = HEAP32[$2>>2]|0;
 $35 = HEAP32[$34>>2]|0;
 $36 = (_system_io_exception_quark()|0);
 $37 = ($35|0)==($36|0);
 $38 = HEAP32[$2>>2]|0;
 if ($37) {
  _g_propagate_error($1,$38);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 } else {
  $39 = ((($38)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$38>>2]|0;
  $42 = (_g_quark_to_string($41)|0);
  $43 = ((($38)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 546;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $40;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $42;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $44;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0257 = 0, $$0258 = 0, $$0263290 = 0, $$1264 = 0, $$1264280 = 0, $$2 = 0, $$2268 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp273 = 0, $spec$select = 0, $spec$select276 = 0;
 var $spec$select277 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer11 = 0, $vararg_buffer4 = 0, $vararg_ptr10 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer11 = sp + 40|0;
 $vararg_buffer4 = sp + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $6 = sp + 60|0;
 HEAP32[$6>>2] = 0;
 $7 = ($4|0)==(0);
 $8 = (($2) - ($3))|0;
 $spec$select = $7 ? $8 : $4;
 $9 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$9>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$6);
 $10 = HEAP32[$6>>2]|0;
 $11 = ($10|0)==(0|0);
 L1: do {
  if ($11) {
   $12 = ($2|0)<($3|0);
   $13 = $spec$select | $3;
   $14 = ($13|0)<(0);
   $15 = $12 | $14;
   $16 = (($spec$select) + ($3))|0;
   $17 = ($16|0)>($2|0);
   $$0258 = $17 | $15;
   $phitmp273 = ($16|0)<(0);
   $$0257 = $phitmp273 | $$0258;
   if ($$0257) {
    HEAP32[$vararg_buffer>>2] = $3;
    $18 = (_g_strdup_printf(132282,$vararg_buffer)|0);
    HEAP32[$vararg_buffer1>>2] = $spec$select;
    $19 = (_g_strdup_printf(132282,$vararg_buffer1)|0);
    HEAP32[$vararg_buffer4>>2] = $18;
    $vararg_ptr7 = ((($vararg_buffer4)) + 4|0);
    HEAP32[$vararg_ptr7>>2] = 132292;
    $vararg_ptr8 = ((($vararg_buffer4)) + 8|0);
    HEAP32[$vararg_ptr8>>2] = $19;
    $vararg_ptr9 = ((($vararg_buffer4)) + 12|0);
    HEAP32[$vararg_ptr9>>2] = 132295;
    $vararg_ptr10 = ((($vararg_buffer4)) + 16|0);
    HEAP32[$vararg_ptr10>>2] = 0;
    $20 = (_g_strconcat(132285,$vararg_buffer4)|0);
    $21 = (_system_io_exception_quark()|0);
    $22 = (_g_error_new_literal($21,3,$20)|0);
    _g_free($20);
    _g_free($19);
    _g_free($18);
    HEAP32[$6>>2] = $22;
    break;
   }
   $23 = ($spec$select|0)==(0);
   if ($23) {
    $$2 = 0;
    STACKTOP = sp;return ($$2|0);
   }
   $24 = (_system_io_buffered_reader_Read1($0,$1,$2,$3,$spec$select,$6)|0);
   $25 = HEAP32[$6>>2]|0;
   $26 = ($25|0)==(0|0);
   if ($26) {
    $27 = ($24|0)<(1);
    if ($27) {
     $$2 = $24;
     STACKTOP = sp;return ($$2|0);
    }
    $28 = ($spec$select|0)>($24|0);
    L15: do {
     if ($28) {
      $$0263290 = $24;
      L17: while(1) {
       $29 = HEAP32[$9>>2]|0;
       $30 = HEAP32[$29>>2]|0;
       $31 = (_system_io_reader_Ready($30,$6)|0);
       $32 = HEAP32[$6>>2]|0;
       $33 = ($32|0)==(0|0);
       if ($33) {
        $34 = ($31|0)==(0);
        if ($34) {
         $$1264280 = $$0263290;
         break L15;
        }
        $35 = (($$0263290) + ($3))|0;
        $36 = (($spec$select) - ($$0263290))|0;
        $37 = (_system_io_buffered_reader_Read1($0,$1,$2,$35,$36,$6)|0);
        $38 = HEAP32[$6>>2]|0;
        $39 = ($38|0)==(0|0);
        $40 = ($37|0)<(1);
        $spec$select276 = $40 ? 4 : 0;
        $41 = $40 ? 0 : $37;
        $spec$select277 = (($41) + ($$0263290))|0;
        if ($39) {
         $$1264 = $spec$select277;$$2268 = $spec$select276;
        } else {
         break L1;
        }
       } else {
        $$1264 = $$0263290;$$2268 = 2;
       }
       $trunc = $$2268&255;
       $trunc$clear = $trunc & 7;
       switch ($trunc$clear<<24>>24) {
       case 2:  {
        break L1;
        break;
       }
       case 4:  {
        $$1264280 = $$1264;
        break L15;
        break;
       }
       case 0:  {
        break;
       }
       default: {
        $$2 = 0;
        break L17;
       }
       }
       $42 = ($spec$select|0)>($$1264|0);
       if ($42) {
        $$0263290 = $$1264;
       } else {
        $$1264280 = $$1264;
        break L15;
       }
      }
      STACKTOP = sp;return ($$2|0);
     } else {
      $$1264280 = $24;
     }
    } while(0);
    $$2 = $$1264280;
    STACKTOP = sp;return ($$2|0);
   }
  }
 } while(0);
 $43 = HEAP32[$6>>2]|0;
 $44 = HEAP32[$43>>2]|0;
 $45 = (_system_io_exception_quark()|0);
 $46 = ($44|0)==($45|0);
 $47 = HEAP32[$6>>2]|0;
 if ($46) {
  _g_propagate_error($5,$47);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  $48 = ((($47)) + 8|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = HEAP32[$47>>2]|0;
  $51 = (_g_quark_to_string($50)|0);
  $52 = ((($47)) + 4|0);
  $53 = HEAP32[$52>>2]|0;
  HEAP32[$vararg_buffer11>>2] = 132151;
  $vararg_ptr14 = ((($vararg_buffer11)) + 4|0);
  HEAP32[$vararg_ptr14>>2] = 975;
  $vararg_ptr15 = ((($vararg_buffer11)) + 8|0);
  HEAP32[$vararg_ptr15>>2] = $49;
  $vararg_ptr16 = ((($vararg_buffer11)) + 12|0);
  HEAP32[$vararg_ptr16>>2] = $51;
  $vararg_ptr17 = ((($vararg_buffer11)) + 16|0);
  HEAP32[$vararg_ptr17>>2] = $53;
  _g_log(0,8,140862,$vararg_buffer11);
  _g_clear_error($6);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0146 = 0, $$0148 = 0, $$1149 = 0, $$3 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert161 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre160 = 0, $$pre162 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0;
 var $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,135260)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132151;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 1308;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $16 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$16>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $17 = HEAP32[$3>>2]|0;
 $18 = ($17|0)==(0|0);
 do {
  if ($18) {
   $$0148 = $1;
   L11: while(1) {
    $19 = ($$0148|0)>(0);
    do {
     if ($19) {
      $20 = HEAP32[$16>>2]|0;
      $21 = ((($20)) + 20|0);
      $22 = HEAP32[$21>>2]|0;
      $23 = ((($20)) + 16|0);
      $24 = HEAP32[$23>>2]|0;
      $25 = ($22|0)<($24|0);
      if ($25) {
       $$pre$phiZ2D = $21;$29 = $22;$30 = $24;$32 = $20;
      } else {
       _system_io_buffered_reader_Fill($0,$3);
       $26 = HEAP32[$3>>2]|0;
       $27 = ($26|0)==(0|0);
       if (!($27)) {
        $$0146 = 2;$$1149 = $$0148;
        break;
       }
       $$pre = HEAP32[$16>>2]|0;
       $$phi$trans$insert = ((($$pre)) + 20|0);
       $$pre160 = HEAP32[$$phi$trans$insert>>2]|0;
       $$phi$trans$insert161 = ((($$pre)) + 16|0);
       $$pre162 = HEAP32[$$phi$trans$insert161>>2]|0;
       $$pre$phiZ2D = $$phi$trans$insert;$29 = $$pre160;$30 = $$pre162;$32 = $$pre;
      }
      $28 = ($29|0)<($30|0);
      if ($28) {
       $31 = ((($32)) + 32|0);
       $33 = HEAP32[$31>>2]|0;
       $34 = ($33|0)==(0);
       if ($34) {
        $42 = $29;
       } else {
        HEAP32[$31>>2] = 0;
        $35 = ((($32)) + 4|0);
        $36 = HEAP32[$35>>2]|0;
        $37 = (($36) + ($29)|0);
        $38 = HEAP8[$37>>0]|0;
        $39 = ($38<<24>>24)==(10);
        if ($39) {
         $40 = (($29) + 1)|0;
         HEAP32[$$pre$phiZ2D>>2] = $40;
         $42 = $40;
        } else {
         $42 = $29;
        }
       }
       $41 = (($30) - ($42))|0;
       $43 = ($$0148|0)>($41|0);
       if ($43) {
        $45 = (($$0148) - ($41))|0;
        HEAP32[$$pre$phiZ2D>>2] = $30;
        $$0146 = 0;$$1149 = $45;
        break;
       } else {
        $44 = (($42) + ($$0148))|0;
        HEAP32[$$pre$phiZ2D>>2] = $44;
        $$0146 = 4;$$1149 = 0;
        break;
       }
      } else {
       $$0146 = 4;$$1149 = $$0148;
      }
     } else {
      $$0146 = 4;$$1149 = $$0148;
     }
    } while(0);
    $trunc = $$0146&255;
    $trunc$clear = $trunc & 7;
    switch ($trunc$clear<<24>>24) {
    case 0:  {
     $$0148 = $$1149;
     break;
    }
    case 4:  {
     label = 19;
     break L11;
     break;
    }
    default: {
     label = 20;
     break L11;
    }
    }
   }
   if ((label|0) == 19) {
    $46 = (($1) - ($$1149))|0;
    $$3 = $46;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 20) {
    $cond = ($$0146|0)==(2);
    if ($cond) {
     break;
    } else {
     $$3 = 0;
    }
    STACKTOP = sp;return ($$3|0);
   }
  }
 } while(0);
 $47 = HEAP32[$3>>2]|0;
 $48 = HEAP32[$47>>2]|0;
 $49 = (_system_io_exception_quark()|0);
 $50 = ($48|0)==($49|0);
 $51 = HEAP32[$3>>2]|0;
 if ($50) {
  _g_propagate_error($2,$51);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  $52 = ((($51)) + 8|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = HEAP32[$51>>2]|0;
  $55 = (_g_quark_to_string($54)|0);
  $56 = ((($51)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132151;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 1420;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $53;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $55;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $57;
  _g_log(0,8,140862,$vararg_buffer5);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $$1122 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert144 = 0, $$pre = 0, $$pre145 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$3>>2]|0;
   $7 = ((($6)) + 32|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)==(0);
   $$phi$trans$insert = ((($6)) + 20|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$phi$trans$insert144 = ((($6)) + 16|0);
   $$pre145 = HEAP32[$$phi$trans$insert144>>2]|0;
   if ($9) {
    $32 = $$pre;$33 = $$pre145;$35 = $6;
   } else {
    $10 = ($$pre|0)<($$pre145|0);
    if (!($10)) {
     $11 = HEAP32[$6>>2]|0;
     $12 = (_system_io_reader_Ready($11,$2)|0);
     $13 = HEAP32[$2>>2]|0;
     $14 = ($13|0)==(0|0);
     if (!($14)) {
      break;
     }
     $15 = ($12|0)==(0);
     if (!($15)) {
      _system_io_buffered_reader_Fill($0,$2);
      $16 = HEAP32[$2>>2]|0;
      $17 = ($16|0)==(0|0);
      if (!($17)) {
       break;
      }
     }
    }
    $18 = HEAP32[$3>>2]|0;
    $19 = ((($18)) + 20|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ((($18)) + 16|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ($20|0)<($22|0);
    if ($23) {
     $24 = ((($18)) + 4|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = (($25) + ($20)|0);
     $27 = HEAP8[$26>>0]|0;
     $28 = ($27<<24>>24)==(10);
     if ($28) {
      $29 = (($20) + 1)|0;
      HEAP32[$19>>2] = $29;
      $50 = $29;
     } else {
      $50 = $20;
     }
     $30 = ((($18)) + 32|0);
     HEAP32[$30>>2] = 0;
     $32 = $50;$33 = $22;$35 = $18;
    } else {
     $32 = $20;$33 = $22;$35 = $18;
    }
   }
   $31 = ($32|0)<($33|0);
   if ($31) {
    $$1122 = 1;
   } else {
    $34 = HEAP32[$35>>2]|0;
    $36 = (_system_io_reader_Ready($34,$2)|0);
    $37 = HEAP32[$2>>2]|0;
    $38 = ($37|0)==(0|0);
    if (!($38)) {
     break;
    }
    $$1122 = $36;
   }
   $$1 = $$1122;
   STACKTOP = sp;return ($$1|0);
  }
 } while(0);
 $39 = HEAP32[$2>>2]|0;
 $40 = HEAP32[$39>>2]|0;
 $41 = (_system_io_exception_quark()|0);
 $42 = ($40|0)==($41|0);
 $43 = HEAP32[$2>>2]|0;
 if ($42) {
  _g_propagate_error($1,$43);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 } else {
  $44 = ((($43)) + 8|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$43>>2]|0;
  $47 = (_g_quark_to_string($46)|0);
  $48 = ((($43)) + 4|0);
  $49 = HEAP32[$48>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1537;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $45;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $47;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $49;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  $$1 = 0;
  STACKTOP = sp;return ($$1|0);
 }
 return (0)|0;
}
function _system_io_buffered_reader_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function _system_io_buffered_reader_real_Mark($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer5 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,132261)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   STACKTOP = sp;return;
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132151;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 1587;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($3);
   STACKTOP = sp;return;
  }
 }
 $16 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$16>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $17 = HEAP32[$3>>2]|0;
 $18 = ($17|0)==(0|0);
 $19 = HEAP32[$16>>2]|0;
 if ($18) {
  $20 = ((($19)) + 28|0);
  HEAP32[$20>>2] = $1;
  $21 = ((($19)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($19)) + 24|0);
  HEAP32[$23>>2] = $22;
  $24 = ((($19)) + 32|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ((($19)) + 36|0);
  HEAP32[$26>>2] = $25;
 }
 $27 = HEAP32[$3>>2]|0;
 $28 = ($27|0)==(0|0);
 if ($28) {
  STACKTOP = sp;return;
 }
 $29 = HEAP32[$27>>2]|0;
 $30 = (_system_io_exception_quark()|0);
 $31 = ($29|0)==($30|0);
 $32 = HEAP32[$3>>2]|0;
 if ($31) {
  _g_propagate_error($2,$32);
  STACKTOP = sp;return;
 } else {
  $33 = ((($32)) + 8|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$32>>2]|0;
  $36 = (_g_quark_to_string($35)|0);
  $37 = ((($32)) + 4|0);
  $38 = HEAP32[$37>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132151;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 1622;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $34;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $36;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $38;
  _g_log(0,8,140862,$vararg_buffer5);
  _g_clear_error($3);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$48 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$3>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$2);
 $4 = HEAP32[$2>>2]|0;
 $5 = ($4|0)==(0|0);
 do {
  if ($5) {
   $6 = HEAP32[$3>>2]|0;
   $7 = ((($6)) + 24|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = ($8|0)<(0);
   if ($9) {
    $10 = ($8|0)==(-2);
    $$48 = $10 ? 132216 : 132229;
    $11 = (_system_io_exception_quark()|0);
    $12 = (_g_error_new_literal($11,0,$$48)|0);
    HEAP32[$2>>2] = $12;
    break;
   } else {
    $13 = ((($6)) + 20|0);
    HEAP32[$13>>2] = $8;
    $14 = ((($6)) + 36|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($6)) + 32|0);
    HEAP32[$16>>2] = $15;
    break;
   }
  }
 } while(0);
 $17 = HEAP32[$2>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  STACKTOP = sp;return;
 }
 $19 = HEAP32[$17>>2]|0;
 $20 = (_system_io_exception_quark()|0);
 $21 = ($19|0)==($20|0);
 $22 = HEAP32[$2>>2]|0;
 if ($21) {
  _g_propagate_error($1,$22);
  STACKTOP = sp;return;
 } else {
  $23 = ((($22)) + 8|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = HEAP32[$22>>2]|0;
  $26 = (_g_quark_to_string($25)|0);
  $27 = ((($22)) + 4|0);
  $28 = HEAP32[$27>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1684;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $24;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $26;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $28;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 if ($6) {
  STACKTOP = sp;return;
 }
 _system_io_reader_Close($5,$2);
 $7 = HEAP32[$3>>2]|0;
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $$pre$phiZ2D = $7;$12 = $7;
 } else {
  _g_object_unref($8);
  $10 = HEAP32[$3>>2]|0;
  HEAP32[$10>>2] = 0;
  $$pre$phiZ2D = $10;$12 = $10;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $11 = ((($12)) + 4|0);
 $13 = HEAP32[$11>>2]|0;
 _g_free($13);
 $14 = HEAP32[$3>>2]|0;
 $15 = ((($14)) + 4|0);
 HEAP32[$15>>2] = 0;
 $16 = ((($14)) + 8|0);
 HEAP32[$16>>2] = 0;
 $17 = ((($14)) + 12|0);
 HEAP32[$17>>2] = 0;
 $18 = HEAP32[$2>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  STACKTOP = sp;return;
 }
 $20 = HEAP32[$18>>2]|0;
 $21 = (_system_io_exception_quark()|0);
 $22 = ($20|0)==($21|0);
 $23 = HEAP32[$2>>2]|0;
 if ($22) {
  _g_propagate_error($1,$23);
  STACKTOP = sp;return;
 } else {
  $24 = ((($23)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$23>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($23)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1744;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $25;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $29;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $3 = 0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143916)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,132193,119476,0)|0);
  _g_once_init_leave(143916,$4);
 }
 $5 = HEAP32[35979]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 _g_free($14);
 $15 = HEAP32[$7>>2]|0;
 $16 = ((($15)) + 4|0);
 HEAP32[$16>>2] = 0;
 $17 = HEAP32[$7>>2]|0;
 $18 = ((($17)) + 40|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $23 = HEAP32[35980]|0;
  $24 = (_g_type_check_class_cast($23,80)|0);
  $25 = ((($23)) + 36|0);
  $26 = HEAP32[$25>>2]|0;
  ftCall_vi($26|0,$0);
  return;
 }
 _g_object_unref($19);
 $21 = HEAP32[$7>>2]|0;
 $22 = ((($21)) + 40|0);
 HEAP32[$22>>2] = 0;
 $23 = HEAP32[35980]|0;
 $24 = (_g_type_check_class_cast($23,80)|0);
 $25 = ((($23)) + 36|0);
 $26 = HEAP32[$25>>2]|0;
 ftCall_vi($26|0,$0);
 return;
}
function _system_io_buffered_reader_EnsureOpen($$0$1$val$0$0$val,$0) {
 $$0$1$val$0$0$val = $$0$1$val$0$0$val|0;
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $1 = sp + 20|0;
 HEAP32[$1>>2] = 0;
 $2 = ($$0$1$val$0$0$val|0)==(0|0);
 if (!($2)) {
  STACKTOP = sp;return;
 }
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,0,132247)|0);
 HEAP32[$1>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($0,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 270;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($1);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_Fill($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $$lcssa = 0, $$pre = 0, $$pre238 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)<(0);
 do {
  if ($7) {
   $$2 = 0;$42 = $4;
  } else {
   $8 = ((($4)) + 20|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (($9) - ($6))|0;
   $11 = ((($4)) + 28|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($10|0)<($12|0);
   if (!($13)) {
    HEAP32[$5>>2] = -2;
    HEAP32[$11>>2] = 0;
    $$2 = 0;$42 = $4;
    break;
   }
   $14 = ((($4)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($12|0)>($15|0);
   if ($16) {
    $21 = (_g_malloc0($12)|0);
    $22 = HEAP32[$3>>2]|0;
    $23 = ((($22)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ((($22)) + 24|0);
    $26 = HEAP32[$25>>2]|0;
    _system_arraycopy(12,0,0,$24,$26,$21,0,$10);
    $27 = ($21|0)==(0|0);
    if ($27) {
     $34 = 0;
    } else {
     $28 = (_g_memdup($21,$12)|0);
     $34 = $28;
    }
    $29 = HEAP32[$3>>2]|0;
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    _g_free($31);
    $32 = HEAP32[$3>>2]|0;
    $33 = ((($32)) + 4|0);
    HEAP32[$33>>2] = $34;
    $35 = ((($32)) + 8|0);
    HEAP32[$35>>2] = $12;
    $36 = ((($32)) + 12|0);
    HEAP32[$36>>2] = $12;
    $37 = ((($32)) + 24|0);
    HEAP32[$37>>2] = 0;
    _g_free($21);
    $$pre = HEAP32[$3>>2]|0;
    $39 = $$pre;
   } else {
    $17 = ((($4)) + 4|0);
    $18 = HEAP32[$17>>2]|0;
    _system_arraycopy(12,0,0,$18,$6,$18,0,$10);
    $19 = HEAP32[$3>>2]|0;
    $20 = ((($19)) + 24|0);
    HEAP32[$20>>2] = 0;
    $39 = $19;
   }
   $38 = ((($39)) + 16|0);
   HEAP32[$38>>2] = $10;
   $40 = ((($39)) + 20|0);
   HEAP32[$40>>2] = $10;
   $$2 = $10;$42 = $39;
  }
 } while(0);
 $41 = HEAP32[$42>>2]|0;
 $43 = ((($42)) + 4|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = ((($42)) + 8|0);
 $46 = HEAP32[$45>>2]|0;
 $47 = (($46) - ($$2))|0;
 $48 = (_system_io_reader_Read($41,$44,$46,$$2,$47,$2)|0);
 $49 = HEAP32[$2>>2]|0;
 $50 = ($49|0)==(0|0);
 L14: do {
  if ($50) {
   $52 = $48;
   while(1) {
    $51 = ($52|0)==(0);
    if (!($51)) {
     break;
    }
    $$pre238 = HEAP32[$3>>2]|0;
    $53 = HEAP32[$$pre238>>2]|0;
    $54 = ((($$pre238)) + 4|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($$pre238)) + 8|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = (($57) - ($$2))|0;
    $59 = (_system_io_reader_Read($53,$55,$57,$$2,$58,$2)|0);
    $60 = HEAP32[$2>>2]|0;
    $61 = ($60|0)==(0|0);
    if ($61) {
     $52 = $59;
    } else {
     $$lcssa = $60;
     break L14;
    }
   }
   $72 = ($52|0)>(0);
   if (!($72)) {
    STACKTOP = sp;return;
   }
   $73 = (($52) + ($$2))|0;
   $74 = HEAP32[$3>>2]|0;
   $75 = ((($74)) + 16|0);
   HEAP32[$75>>2] = $73;
   $76 = ((($74)) + 20|0);
   HEAP32[$76>>2] = $$2;
   STACKTOP = sp;return;
  } else {
   $$lcssa = $49;
  }
 } while(0);
 $62 = HEAP32[$$lcssa>>2]|0;
 $63 = (_system_io_exception_quark()|0);
 $64 = ($62|0)==($63|0);
 $65 = HEAP32[$2>>2]|0;
 if ($64) {
  _g_propagate_error($1,$65);
  STACKTOP = sp;return;
 } else {
  $66 = ((($65)) + 8|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = HEAP32[$65>>2]|0;
  $69 = (_g_quark_to_string($68)|0);
  $70 = ((($65)) + 4|0);
  $71 = HEAP32[$70>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 422;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $67;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $69;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $71;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_buffered_reader_Read1($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$218 = 0, $$6 = 0, $$phi$trans$insert = 0, $$phi$trans$insert229 = 0, $$phi$trans$insert232 = 0, $$phi$trans$insert234 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre228 = 0, $$pre230 = 0, $$pre231 = 0, $$pre233 = 0, $$pre235 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0;
 var $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer5 = 0;
 var $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 68|0;
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)<($12|0);
 do {
  if ($13) {
   $$pre$phiZ2D = $9;$50 = $10;$51 = $12;$53 = $8;
  } else {
   $14 = ((($8)) + 8|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ($15|0)>($4|0);
   if (!($16)) {
    $17 = ((($8)) + 24|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)>(-1);
    if (!($19)) {
     $20 = ((($8)) + 32|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($21|0)==(0);
     if ($22) {
      $23 = HEAP32[$8>>2]|0;
      $24 = (_system_io_reader_Read($23,$1,$2,$3,$4,$6)|0);
      $25 = HEAP32[$6>>2]|0;
      $26 = ($25|0)==(0|0);
      if ($26) {
       $$6 = $24;
       STACKTOP = sp;return ($$6|0);
      }
      $27 = HEAP32[$25>>2]|0;
      $28 = (_system_io_exception_quark()|0);
      $29 = ($27|0)==($28|0);
      $30 = HEAP32[$6>>2]|0;
      if ($29) {
       _g_propagate_error($5,$30);
       $$6 = 0;
       STACKTOP = sp;return ($$6|0);
      } else {
       $31 = ((($30)) + 8|0);
       $32 = HEAP32[$31>>2]|0;
       $33 = HEAP32[$30>>2]|0;
       $34 = (_g_quark_to_string($33)|0);
       $35 = ((($30)) + 4|0);
       $36 = HEAP32[$35>>2]|0;
       HEAP32[$vararg_buffer>>2] = 132151;
       $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
       HEAP32[$vararg_ptr1>>2] = 628;
       $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
       HEAP32[$vararg_ptr2>>2] = $32;
       $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
       HEAP32[$vararg_ptr3>>2] = $34;
       $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
       HEAP32[$vararg_ptr4>>2] = $36;
       _g_log(0,8,140862,$vararg_buffer);
       _g_clear_error($6);
       $$6 = 0;
       STACKTOP = sp;return ($$6|0);
      }
     }
    }
   }
   _system_io_buffered_reader_Fill($0,$6);
   $37 = HEAP32[$6>>2]|0;
   $38 = ($37|0)==(0|0);
   if ($38) {
    $$pre = HEAP32[$7>>2]|0;
    $$phi$trans$insert = ((($$pre)) + 20|0);
    $$pre228 = HEAP32[$$phi$trans$insert>>2]|0;
    $$phi$trans$insert229 = ((($$pre)) + 16|0);
    $$pre230 = HEAP32[$$phi$trans$insert229>>2]|0;
    $$pre$phiZ2D = $$phi$trans$insert;$50 = $$pre228;$51 = $$pre230;$53 = $$pre;
    break;
   }
   $39 = HEAP32[$37>>2]|0;
   $40 = (_system_io_exception_quark()|0);
   $41 = ($39|0)==($40|0);
   $42 = HEAP32[$6>>2]|0;
   if ($41) {
    _g_propagate_error($5,$42);
    $$6 = 0;
    STACKTOP = sp;return ($$6|0);
   } else {
    $43 = ((($42)) + 8|0);
    $44 = HEAP32[$43>>2]|0;
    $45 = HEAP32[$42>>2]|0;
    $46 = (_g_quark_to_string($45)|0);
    $47 = ((($42)) + 4|0);
    $48 = HEAP32[$47>>2]|0;
    HEAP32[$vararg_buffer5>>2] = 132151;
    $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
    HEAP32[$vararg_ptr8>>2] = 644;
    $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
    HEAP32[$vararg_ptr9>>2] = $44;
    $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
    HEAP32[$vararg_ptr10>>2] = $46;
    $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
    HEAP32[$vararg_ptr11>>2] = $48;
    _g_log(0,8,140862,$vararg_buffer5);
    _g_clear_error($6);
    $$6 = 0;
    STACKTOP = sp;return ($$6|0);
   }
  }
 } while(0);
 $49 = ($50|0)<($51|0);
 if (!($49)) {
  $$6 = -1;
  STACKTOP = sp;return ($$6|0);
 }
 $52 = ((($53)) + 32|0);
 $54 = HEAP32[$52>>2]|0;
 $55 = ($54|0)==(0);
 if ($55) {
  $79 = $50;$80 = $51;$83 = $53;
 } else {
  HEAP32[$52>>2] = 0;
  $56 = ((($53)) + 4|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = (($57) + ($50)|0);
  $59 = HEAP8[$58>>0]|0;
  $60 = ($59<<24>>24)==(10);
  if ($60) {
   $61 = (($50) + 1)|0;
   HEAP32[$$pre$phiZ2D>>2] = $61;
   $62 = ($61|0)<($51|0);
   do {
    if ($62) {
     $76 = $61;$77 = $51;$89 = $53;
    } else {
     _system_io_buffered_reader_Fill($0,$6);
     $63 = HEAP32[$6>>2]|0;
     $64 = ($63|0)==(0|0);
     if ($64) {
      $$pre231 = HEAP32[$7>>2]|0;
      $$phi$trans$insert232 = ((($$pre231)) + 20|0);
      $$pre233 = HEAP32[$$phi$trans$insert232>>2]|0;
      $$phi$trans$insert234 = ((($$pre231)) + 16|0);
      $$pre235 = HEAP32[$$phi$trans$insert234>>2]|0;
      $76 = $$pre233;$77 = $$pre235;$89 = $$pre231;
      break;
     }
     $65 = HEAP32[$63>>2]|0;
     $66 = (_system_io_exception_quark()|0);
     $67 = ($65|0)==($66|0);
     $68 = HEAP32[$6>>2]|0;
     if ($67) {
      _g_propagate_error($5,$68);
      $$6 = 0;
      STACKTOP = sp;return ($$6|0);
     } else {
      $69 = ((($68)) + 8|0);
      $70 = HEAP32[$69>>2]|0;
      $71 = HEAP32[$68>>2]|0;
      $72 = (_g_quark_to_string($71)|0);
      $73 = ((($68)) + 4|0);
      $74 = HEAP32[$73>>2]|0;
      HEAP32[$vararg_buffer12>>2] = 132151;
      $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
      HEAP32[$vararg_ptr15>>2] = 686;
      $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
      HEAP32[$vararg_ptr16>>2] = $70;
      $vararg_ptr17 = ((($vararg_buffer12)) + 12|0);
      HEAP32[$vararg_ptr17>>2] = $72;
      $vararg_ptr18 = ((($vararg_buffer12)) + 16|0);
      HEAP32[$vararg_ptr18>>2] = $74;
      _g_log(0,8,140862,$vararg_buffer12);
      _g_clear_error($6);
      $$6 = 0;
      STACKTOP = sp;return ($$6|0);
     }
    }
   } while(0);
   $75 = ($76|0)<($77|0);
   if ($75) {
    $79 = $76;$80 = $77;$83 = $89;
   } else {
    $$6 = -1;
    STACKTOP = sp;return ($$6|0);
   }
  } else {
   $79 = $50;$80 = $51;$83 = $53;
  }
 }
 $78 = (($80) - ($79))|0;
 $81 = ($78|0)>($4|0);
 $$218 = $81 ? $4 : $78;
 $82 = ((($83)) + 4|0);
 $84 = HEAP32[$82>>2]|0;
 _system_arraycopy(12,0,0,$84,$79,$1,$3,$$218);
 $85 = HEAP32[$7>>2]|0;
 $86 = ((($85)) + 20|0);
 $87 = HEAP32[$86>>2]|0;
 $88 = (($87) + ($$218))|0;
 HEAP32[$86>>2] = $88;
 $$6 = $$218;
 STACKTOP = sp;return ($$6|0);
}
function _system_io_buffered_reader_ReadLine($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0307 = 0, $$0313 = 0, $$0313$ph = 0, $$0317$ = 0, $$0317353 = 0, $$0332 = 0, $$4 = 0, $$5 = 0, $$7344 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$phi$trans$insert = 0, $$phi$trans$insert372 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre371 = 0, $$pre373 = 0, $$pre374 = 0, $10 = 0, $11 = 0;
 var $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $9 = 0, $spec$select = 0;
 var $spec$select$lcssa = 0, $spec$select$lcssa376377 = 0, $spec$select$lcssa376378 = 0, $spec$select354 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = ((($0)) + 24|0);
 $$idx$val = HEAP32[$4>>2]|0;
 $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
 _system_io_buffered_reader_EnsureOpen($$idx$val$idx$val,$3);
 $5 = HEAP32[$3>>2]|0;
 $6 = ($5|0)==(0|0);
 L1: do {
  if ($6) {
   $7 = ($1|0)==(0);
   if ($7) {
    $8 = HEAP32[$4>>2]|0;
    $9 = ((($8)) + 32|0);
    $10 = HEAP32[$9>>2]|0;
    $$0313$ph = $10;
   } else {
    $$0313$ph = 1;
   }
   $$0307 = 0;$$0313 = $$0313$ph;
   while(1) {
    $11 = HEAP32[$4>>2]|0;
    $12 = ((($11)) + 20|0);
    $13 = HEAP32[$12>>2]|0;
    $14 = ((($11)) + 16|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ($13|0)<($15|0);
    if ($16) {
     $$pre$phiZ2D = $12;$20 = $13;$21 = $15;$30 = $11;
    } else {
     _system_io_buffered_reader_Fill($0,$3);
     $17 = HEAP32[$3>>2]|0;
     $18 = ($17|0)==(0|0);
     if (!($18)) {
      $$7344 = $$0307;
      break L1;
     }
     $$pre = HEAP32[$4>>2]|0;
     $$phi$trans$insert = ((($$pre)) + 20|0);
     $$pre371 = HEAP32[$$phi$trans$insert>>2]|0;
     $$phi$trans$insert372 = ((($$pre)) + 16|0);
     $$pre373 = HEAP32[$$phi$trans$insert372>>2]|0;
     $$pre$phiZ2D = $$phi$trans$insert;$20 = $$pre371;$21 = $$pre373;$30 = $$pre;
    }
    $19 = ($20|0)<($21|0);
    if (!($19)) {
     label = 9;
     break;
    }
    $28 = ($$0313|0)==(0);
    if ($28) {
     $38 = $20;
    } else {
     $29 = ((($30)) + 4|0);
     $31 = HEAP32[$29>>2]|0;
     $32 = (($31) + ($20)|0);
     $33 = HEAP8[$32>>0]|0;
     $34 = ($33<<24>>24)==(10);
     if ($34) {
      $35 = (($20) + 1)|0;
      HEAP32[$$pre$phiZ2D>>2] = $35;
      $38 = $35;
     } else {
      $38 = $20;
     }
    }
    $36 = ((($30)) + 32|0);
    HEAP32[$36>>2] = 0;
    $37 = ($38|0)<($21|0);
    if ($37) {
     $40 = ((($30)) + 4|0);
     $41 = HEAP32[$40>>2]|0;
     $$0317353 = 0;$spec$select354 = $38;
     L19: while(1) {
      $42 = (($41) + ($spec$select354)|0);
      $43 = HEAP8[$42>>0]|0;
      $44 = ($43<<24>>24)!=(10);
      $45 = ($43<<24>>24)!=(13);
      $46 = $44 & $45;
      $$0317$ = $46 ? $$0317353 : 1;
      switch ($43<<24>>24) {
      case 10: case 13:  {
       $spec$select$lcssa = $spec$select354;
       break L19;
       break;
      }
      default: {
      }
      }
      $spec$select = (($spec$select354) + 1)|0;
      $47 = ($spec$select|0)<($21|0);
      if ($47) {
       $$0317353 = $$0317$;$spec$select354 = $spec$select;
      } else {
       $spec$select$lcssa = $spec$select;
       break;
      }
     }
     HEAP32[$$pre$phiZ2D>>2] = $spec$select$lcssa;
     $48 = ($$0317$|0)==(0);
     $49 = ($$0307|0)==(0|0);
     if (!($48)) {
      break;
     }
     if ($49) {
      $spec$select$lcssa376378 = $spec$select$lcssa;
      label = 31;
     } else {
      $$5 = $$0307;$65 = $30;$spec$select$lcssa376377 = $spec$select$lcssa;
     }
    } else {
     HEAP32[$$pre$phiZ2D>>2] = $38;
     $39 = ($$0307|0)==(0|0);
     if ($39) {
      $spec$select$lcssa376378 = $38;
      label = 31;
     } else {
      $$5 = $$0307;$65 = $30;$spec$select$lcssa376377 = $38;
     }
    }
    if ((label|0) == 31) {
     label = 0;
     $63 = (_g_string_new(144793)|0);
     $$pre374 = HEAP32[$4>>2]|0;
     $$5 = $63;$65 = $$pre374;$spec$select$lcssa376377 = $spec$select$lcssa376378;
    }
    $64 = ((($65)) + 4|0);
    $66 = HEAP32[$64>>2]|0;
    $67 = (($66) + ($38)|0);
    $68 = (($spec$select$lcssa376377) - ($38))|0;
    $69 = (_g_strndup($67,$68)|0);
    (_g_string_append($$5,$69)|0);
    _g_free($69);
    $$0307 = $$5;$$0313 = 0;
   }
   if ((label|0) == 9) {
    $22 = ($$0307|0)==(0|0);
    if ($22) {
     $$4 = 0;
     STACKTOP = sp;return ($$4|0);
    }
    $23 = ((($$0307)) + 4|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)<(1);
    if ($25) {
     (_g_string_free($$0307,1)|0);
     $$4 = 0;
     STACKTOP = sp;return ($$4|0);
    } else {
     $26 = HEAP32[$$0307>>2]|0;
     $27 = (_g_strdup($26)|0);
     (_g_string_free($$0307,1)|0);
     $$4 = $27;
     STACKTOP = sp;return ($$4|0);
    }
   }
   $50 = ((($30)) + 4|0);
   $51 = HEAP32[$50>>2]|0;
   $52 = (($51) + ($38)|0);
   $53 = (($spec$select$lcssa) - ($38))|0;
   $54 = (_g_strndup($52,$53)|0);
   if ($49) {
    _g_free(0);
    $$0332 = $54;
   } else {
    (_g_string_append($$0307,$54)|0);
    _g_free($54);
    $55 = HEAP32[$$0307>>2]|0;
    $56 = (_g_strdup($55)|0);
    _g_free(0);
    $$0332 = $56;
   }
   $57 = HEAP32[$4>>2]|0;
   $58 = ((($57)) + 20|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (($59) + 1)|0;
   HEAP32[$58>>2] = $60;
   $61 = ($43<<24>>24)==(13);
   if ($61) {
    $62 = ((($57)) + 32|0);
    HEAP32[$62>>2] = 1;
   }
   if ($49) {
    $$4 = $$0332;
    STACKTOP = sp;return ($$4|0);
   }
   (_g_string_free($$0307,1)|0);
   $$4 = $$0332;
   STACKTOP = sp;return ($$4|0);
  } else {
   $$7344 = 0;
  }
 } while(0);
 $70 = HEAP32[$3>>2]|0;
 $71 = HEAP32[$70>>2]|0;
 $72 = (_system_io_exception_quark()|0);
 $73 = ($71|0)==($72|0);
 if ($73) {
  $74 = HEAP32[$3>>2]|0;
  _g_propagate_error($2,$74);
  $75 = ($$7344|0)==(0|0);
  if ($75) {
   $$4 = 0;
   STACKTOP = sp;return ($$4|0);
  }
  (_g_string_free($$7344,1)|0);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 } else {
  $76 = ($$7344|0)==(0|0);
  if (!($76)) {
   (_g_string_free($$7344,1)|0);
  }
  $77 = HEAP32[$3>>2]|0;
  $78 = ((($77)) + 8|0);
  $79 = HEAP32[$78>>2]|0;
  $80 = HEAP32[$77>>2]|0;
  $81 = (_g_quark_to_string($80)|0);
  $82 = ((($77)) + 4|0);
  $83 = HEAP32[$82>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132151;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1272;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $79;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $81;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $83;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($3);
  $$4 = 0;
  STACKTOP = sp;return ($$4|0);
 }
 return (0)|0;
}
function _system_io_default_file_system_GetFileSystem() {
 var $0 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 _g_print(132297,$vararg_buffer);
 $0 = (_system_io_emscripten_file_system_new()|0);
 _g_print(132330,$vararg_buffer1);
 STACKTOP = sp;return ($0|0);
}
function _system_io_emscripten_file_system_new() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143924)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_system_io_file_system_get_type()|0);
  $3 = (_g_type_register_static($2,132359,119512,0)|0);
  _g_once_init_leave(143924,$3);
 }
 $4 = HEAP32[35981]|0;
 $5 = (_system_io_file_system_construct($4)|0);
 $6 = ((($5)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 HEAP8[$7>>0] = 47;
 $8 = ((($7)) + 2|0);
 HEAP8[$8>>0] = 59;
 $9 = ((($7)) + 1|0);
 HEAP8[$9>>0] = 92;
 return ($5|0);
}
function _system_io_emscripten_file_system_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35982] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 265;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 266;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 267;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 268;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 269;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 270;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 271;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 272;
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 273;
 $11 = ((($0)) + 132|0);
 HEAP32[$11>>2] = 274;
 $12 = ((($0)) + 136|0);
 HEAP32[$12>>2] = 275;
 $13 = ((($0)) + 140|0);
 HEAP32[$13>>2] = 276;
 $14 = ((($0)) + 148|0);
 HEAP32[$14>>2] = 277;
 $15 = ((($0)) + 152|0);
 HEAP32[$15>>2] = 278;
 $16 = ((($0)) + 144|0);
 HEAP32[$16>>2] = 279;
 $17 = ((($0)) + 156|0);
 HEAP32[$17>>2] = 280;
 $18 = ((($0)) + 164|0);
 HEAP32[$18>>2] = 281;
 $19 = ((($0)) + 168|0);
 HEAP32[$19>>2] = 282;
 $20 = ((($0)) + 176|0);
 HEAP32[$20>>2] = 283;
 $21 = ((($0)) + 180|0);
 HEAP32[$21>>2] = 284;
 $22 = ((($0)) + 160|0);
 HEAP32[$22>>2] = 285;
 $23 = ((($0)) + 172|0);
 HEAP32[$23>>2] = 286;
 $24 = ((($0)) + 184|0);
 HEAP32[$24>>2] = 287;
 $25 = ((($0)) + 188|0);
 HEAP32[$25>>2] = 288;
 $26 = ((($0)) + 192|0);
 HEAP32[$26>>2] = 289;
 $27 = ((($0)) + 196|0);
 HEAP32[$27>>2] = 290;
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = ((($0)) + 36|0);
 HEAP32[$29>>2] = 291;
 $30 = (_g_malloc0_n(27,4)|0);
 HEAP32[35983] = $30;
 return;
}
function _system_io_emscripten_file_system_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143924)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_file_system_get_type()|0);
  $4 = (_g_type_register_static($3,132359,119512,0)|0);
  _g_once_init_leave(143924,$4);
 }
 $5 = HEAP32[35981]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = (_system_collections_generic_dictionary_new(64,292,293,64,292,293,0,0,0)|0);
 $9 = HEAP32[$7>>2]|0;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $8;
 $11 = (_system_collections_generic_dictionary_new(64,292,293,64,292,293,0,0,0)|0);
 $12 = HEAP32[$7>>2]|0;
 $13 = ((($12)) + 8|0);
 HEAP32[$13>>2] = $11;
 return;
}
function _system_io_emscripten_file_system_real_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP8[$2>>0]|0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 2|0);
 $4 = HEAP8[$3>>0]|0;
 return ($4|0);
}
function _system_io_emscripten_file_system_real_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0170 = 0, $$0172 = 0, $$0174 = 0, $$0178 = 0, $$0181 = 0, $$1 = 0, $$1171 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $narrow = 0, $narrow184 = 0, $not$ = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($1)|0);
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP8[$4>>0]|0;
 $6 = ((($4)) + 1|0);
 $7 = HEAP8[$6>>0]|0;
 $$0 = 0;$$0170 = 0;$$0172 = 0;$$0174 = 0;
 L1: while(1) {
  $spec$select = (($$0172) + ($$0174))|0;
  $8 = ($spec$select|0)<($2|0);
  do {
   if ($8) {
    $9 = (($1) + ($spec$select)|0);
    $10 = HEAP8[$9>>0]|0;
    $11 = ($10<<24>>24)==($7<<24>>24);
    if ($11) {
     $12 = ($$0170<<24>>24)==($5<<24>>24);
     $13 = $12 << 31 >> 31;
     $$0181 = (($spec$select) + ($13))|0;
     $14 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$$0181)|0);
     $$0178 = 1;$$1 = $14;$$1171 = $$0170;
     break;
    }
    $15 = ($10<<24>>24)==($5<<24>>24);
    $16 = ($$0170<<24>>24)==($5<<24>>24);
    $17 = ($spec$select>>>0)>(1);
    $not$ = $16 & $15;
    $narrow = $17 & $not$;
    if ($narrow) {
     $18 = (($spec$select) + -1)|0;
     $19 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$18)|0);
     $$0178 = 1;$$1 = $19;$$1171 = $5;
     break;
    }
    $20 = ($10<<24>>24)==(58);
    $narrow184 = $17 & $20;
    if ($narrow184) {
     $21 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,0)|0);
     $$0178 = 1;$$1 = $21;$$1171 = $$0170;
    } else {
     $$0178 = 0;$$1 = $$0;$$1171 = $10;
    }
   } else {
    $$0178 = 5;$$1 = $$0;$$1171 = $$0170;
   }
  } while(0);
  $trunc = $$0178&255;
  $trunc$clear = $trunc & 7;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0 = $$1;$$0170 = $$1171;$$0172 = $spec$select;$$0174 = 1;
   break;
  }
  case 5:  {
   break L1;
   break;
  }
  default: {
   label = 10;
   break L1;
  }
  }
 }
 if ((label|0) == 10) {
  $cond = ($$0178|0)==(0);
  if (!($cond)) {
   $$2 = $$1;
   return ($$2|0);
  }
 }
 $22 = ($$1171<<24>>24)==($5<<24>>24);
 if ($22) {
  $23 = (($2) + -1)|0;
  $24 = (_system_io_emscripten_file_system_Normalize2($0,$1,$2,$23)|0);
  $$2 = $24;
  return ($$2|0);
 } else {
  $25 = (_g_strdup($1)|0);
  $$2 = $25;
  return ($$2|0);
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $$077 = 0, $$078 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP8[$3>>0]|0;
 $5 = (_strlen($1)|0);
 $6 = ($5|0)==(0);
 if ($6) {
  $$2 = 0;
  return ($$2|0);
 }
 $7 = HEAP8[$1>>0]|0;
 $8 = ($5|0)>(1);
 if ($8) {
  $9 = ((($1)) + 1|0);
  $10 = HEAP8[$9>>0]|0;
  $$077 = $10;
 } else {
  $$077 = 0;
 }
 $11 = ($7<<24>>24)==($4<<24>>24);
 if ($11) {
  $12 = ($$077<<24>>24)==($4<<24>>24);
  $$ = $12 ? 2 : 1;
  $$2 = $$;
  return ($$2|0);
 }
 $13 = $7 & -33;
 $14 = (($13) + -65)<<24>>24;
 $15 = ($14&255)<(26);
 $16 = ($$077<<24>>24)==(58);
 $$078 = $15 & $16;
 if (!($$078)) {
  $$2 = 0;
  return ($$2|0);
 }
 $17 = ($5|0)>(2);
 if ($17) {
  $18 = ((($1)) + 2|0);
  $19 = HEAP8[$18>>0]|0;
  $20 = ($19<<24>>24)==($4<<24>>24);
  $spec$select = $20 ? 3 : 2;
  return ($spec$select|0);
 } else {
  $$2 = 2;
  return ($$2|0);
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0$i$i = 0, $$0344 = 0, $$0345 = 0, $$088$i = 0, $$1341 = 0, $$2 = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$phi358Z2D = 0, $$pre357 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0;
 var $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond$i = 0, $or$cond$i349 = 0, $or$cond$i351 = 0, $or$cond$i353 = 0;
 var $spec$select = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strlen($1)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $5 = (_g_strdup($2)|0);
  $$2 = $5;
  return ($$2|0);
 }
 $6 = (_strlen($2)|0);
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = (_g_strdup($1)|0);
  $$2 = $8;
  return ($$2|0);
 }
 $9 = (_g_strdup($2)|0);
 $10 = ($6|0)>(1);
 if ($10) {
  $11 = HEAP8[$9>>0]|0;
  $12 = ((($0)) + 20|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP8[$13>>0]|0;
  $15 = ($11<<24>>24)==($14<<24>>24);
  if ($15) {
   $16 = ((($9)) + 1|0);
   $17 = HEAP8[$16>>0]|0;
   $18 = ($17<<24>>24)==($11<<24>>24);
   $$ = $18 ? 2 : 1;
   $19 = ($6|0)==($$|0);
   if ($19) {
    $20 = (($3) + -1)|0;
    $21 = (($1) + ($20)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = ($22<<24>>24)==($11<<24>>24);
    if (!($23)) {
     $33 = (_g_strdup($1)|0);
     _g_free($9);
     $$2 = $33;
     return ($$2|0);
    }
    $24 = ($3|0)>(0);
    if ($24) {
     $25 = (_memchr($1,0,$20)|0);
     $26 = ($25|0)==(0|0);
     $27 = $25;
     $28 = $1;
     $29 = (($27) - ($28))|0;
     $$0$i$i = $26 ? $20 : $29;
     $$088$i = $$0$i$i;
    } else {
     $30 = (_strlen($1)|0);
     $$088$i = $30;
    }
    $31 = ($3|0)<(1);
    $spec$select$i = $31 ? $$088$i : $20;
    $32 = (_g_strndup($1,$spec$select$i)|0);
    _g_free($9);
    $$2 = $32;
    return ($$2|0);
   } else {
    $$1341 = $$;$$pre$phi358Z2D = $12;$38 = $11;
   }
  } else {
   $$1341 = 0;$$pre$phi358Z2D = $12;$38 = $14;
  }
 } else {
  $$phi$trans$insert = ((($0)) + 20|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre357 = HEAP8[$$pre>>0]|0;
  $$1341 = 0;$$pre$phi358Z2D = $$phi$trans$insert;$38 = $$pre357;
 }
 $34 = (($3) + -1)|0;
 $35 = (($1) + ($34)|0);
 $36 = HEAP8[$35>>0]|0;
 $37 = ($36<<24>>24)==($38<<24>>24);
 $spec$select = $37 ? $34 : $3;
 $39 = (($6) - ($$1341))|0;
 $40 = (($39) + ($spec$select))|0;
 $41 = (($2) + ($$1341)|0);
 $42 = HEAP8[$41>>0]|0;
 $43 = ($42<<24>>24)==($38<<24>>24);
 if ($43) {
  $44 = (_g_malloc0($40)|0);
  _g_free(0);
  $45 = (_strlen($1)|0);
  $46 = ($45|0)<($spec$select|0);
  $47 = ($spec$select|0)<(0);
  $or$cond$i353 = $47 | $46;
  if (!($or$cond$i353)) {
   _memcpy(($44|0),($1|0),($spec$select|0))|0;
  }
  $48 = (_strlen($2)|0);
  $49 = ($48|0)<($6|0);
  $50 = ($6|0)<($$1341|0);
  $or$cond$i351 = $50 | $49;
  if ($or$cond$i351) {
   $$0344 = $44;$$0345 = $40;
  } else {
   $51 = (($44) + ($spec$select)|0);
   $52 = (($2) + ($spec$select)|0);
   _memcpy(($51|0),($52|0),($39|0))|0;
   $$0344 = $44;$$0345 = $40;
  }
 } else {
  $53 = (($40) + 1)|0;
  $54 = (_g_malloc0($53)|0);
  _g_free(0);
  $55 = (_strlen($1)|0);
  $56 = ($55|0)<($spec$select|0);
  $57 = ($spec$select|0)<(0);
  $or$cond$i349 = $57 | $56;
  if (!($or$cond$i349)) {
   _memcpy(($54|0),($1|0),($spec$select|0))|0;
  }
  $58 = HEAP32[$$pre$phi358Z2D>>2]|0;
  $59 = HEAP8[$58>>0]|0;
  $60 = (($54) + ($spec$select)|0);
  HEAP8[$60>>0] = $59;
  $61 = (($spec$select) + 1)|0;
  $62 = (_strlen($2)|0);
  $63 = ($62|0)<($6|0);
  $64 = ($6|0)<($$1341|0);
  $or$cond$i = $64 | $63;
  if ($or$cond$i) {
   $$0344 = $54;$$0345 = $53;
  } else {
   $65 = (($54) + ($61)|0);
   $66 = (($2) + ($61)|0);
   _memcpy(($65|0),($66|0),($39|0))|0;
   $$0344 = $54;$$0345 = $53;
  }
 }
 $67 = (_g_strndup($$0344,$$0345)|0);
 _g_free($$0344);
 _g_free($9);
 $$2 = $67;
 return ($$2|0);
}
function _system_io_emscripten_file_system_real_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = sp + 8|0;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP8[$3>>0]|0;
 $5 = $4 << 24 >> 24;
 HEAP32[$1>>2] = $5;
 $6 = (_g_strndup($1,1)|0);
 HEAP32[$vararg_buffer>>2] = $6;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $7 = (_g_strconcat(144793,$vararg_buffer)|0);
 _g_free($6);
 STACKTOP = sp;return ($7|0);
}
function _system_io_emscripten_file_system_real_FromURIPath($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i$i123 = 0, $$088$i = 0, $$088$i124 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, $phitmp = 0, $phitmp119 = 0, $spec$select$i = 0, $spec$select$i125 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_strdup($1)|0);
 $3 = (_strlen($2)|0);
 $4 = ($3|0)>(2);
 if ($4) {
  $5 = ((($2)) + 2|0);
  $6 = HEAP8[$5>>0]|0;
  $7 = ($6<<24>>24)==(58);
  if ($7) {
   $8 = (_strlen($2)|0);
   $9 = (($8) + -1)|0;
   $10 = ((($2)) + 1|0);
   $11 = (_g_strndup($10,$9)|0);
   _g_free($2);
   $12 = (_strlen($11)|0);
   $13 = ($12|0)>(3);
   if (!($13)) {
    $$2 = $11;
    return ($$2|0);
   }
   $14 = (_g_str_has_suffix($11,132461)|0);
   $phitmp119 = ($14|0)==(0);
   if ($phitmp119) {
    $$2 = $11;
    return ($$2|0);
   }
   $15 = (_strlen($11)|0);
   $16 = (($15) + -1)|0;
   $17 = ($15|0)>(0);
   if ($17) {
    $18 = (_memchr($11,0,$16)|0);
    $19 = ($18|0)==(0|0);
    $20 = $18;
    $21 = $11;
    $22 = (($20) - ($21))|0;
    $$0$i$i123 = $19 ? $16 : $22;
    $$088$i124 = $$0$i$i123;
   } else {
    $23 = (_strlen($11)|0);
    $$088$i124 = $23;
   }
   $24 = ($15|0)<(1);
   $spec$select$i125 = $24 ? $$088$i124 : $16;
   $25 = (_g_strndup($11,$spec$select$i125)|0);
   _g_free($11);
   $$2 = $25;
   return ($$2|0);
  }
 } else {
  $26 = ($3|0)==(2);
  if (!($26)) {
   $$2 = $2;
   return ($$2|0);
  }
 }
 $27 = (_g_str_has_suffix($2,132461)|0);
 $phitmp = ($27|0)==(0);
 if ($phitmp) {
  $$2 = $2;
  return ($$2|0);
 }
 $28 = (_strlen($2)|0);
 $29 = (($28) + -1)|0;
 $30 = ($28|0)>(0);
 if ($30) {
  $31 = (_memchr($2,0,$29)|0);
  $32 = ($31|0)==(0|0);
  $33 = $31;
  $34 = $2;
  $35 = (($33) - ($34))|0;
  $$0$i$i = $32 ? $29 : $35;
  $$088$i = $$0$i$i;
 } else {
  $36 = (_strlen($2)|0);
  $$088$i = $36;
 }
 $37 = ($28|0)<(1);
 $spec$select$i = $37 ? $$088$i : $29;
 $38 = (_g_strndup($2,$spec$select$i)|0);
 _g_free($2);
 $$2 = $38;
 return ($$2|0);
}
function _system_io_emscripten_file_system_real_IsAbsolute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPrefixLength($1)|0);
 $3 = ($2|0)==(2);
 if ($3) {
  $4 = (_system_io_file_GetPath($1)|0);
  $5 = HEAP8[$4>>0]|0;
  $6 = ((($0)) + 20|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = HEAP8[$7>>0]|0;
  $9 = ($5<<24>>24)==($8<<24>>24);
  _g_free($4);
  if ($9) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $10 = ($2|0)==(3);
 $11 = $10&1;
 $$0 = $11;
 return ($$0|0);
}
function _system_io_emscripten_file_system_real_ResolveFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i350 = 0, $$0$i353363 = 0, $$0$i356 = 0, $$0$i358 = 0, $$0$i360 = 0, $$2 = 0, $$off$i$i = 0, $$off25$i$i = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $11 = 0, $12 = 0, $13 = 0;
 var $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0;
 var $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $phitmp = 0, $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0;
 var $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer30 = 0, $vararg_buffer34 = 0, $vararg_buffer38 = 0, $vararg_buffer42 = 0, $vararg_buffer46 = 0, $vararg_buffer50 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr21 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr33 = 0, $vararg_ptr37 = 0, $vararg_ptr41 = 0, $vararg_ptr45 = 0, $vararg_ptr49 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr53 = 0, $vararg_ptr54 = 0, $vararg_ptr55 = 0, $vararg_ptr56 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $vararg_buffer50 = sp + 104|0;
 $vararg_buffer46 = sp + 96|0;
 $vararg_buffer42 = sp + 88|0;
 $vararg_buffer38 = sp + 80|0;
 $vararg_buffer34 = sp + 72|0;
 $vararg_buffer30 = sp + 64|0;
 $vararg_buffer26 = sp + 56|0;
 $vararg_buffer22 = sp + 48|0;
 $vararg_buffer18 = sp + 40|0;
 $vararg_buffer14 = sp + 32|0;
 $vararg_buffer10 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 128|0;
 $3 = sp + 124|0;
 HEAP32[$3>>2] = 0;
 $4 = (_system_io_file_GetPath($1)|0);
 $5 = (_system_io_file_GetPrefixLength($1)|0);
 switch ($5|0) {
 case 2:  {
  $6 = HEAP8[$4>>0]|0;
  $7 = ((($0)) + 20|0);
  $8 = HEAP32[$7>>2]|0;
  $9 = HEAP8[$8>>0]|0;
  $10 = ($6<<24>>24)==($9<<24>>24);
  if ($10) {
   $$2 = $4;
   STACKTOP = sp;return ($$2|0);
  }
  $31 = (_system_io_file_system_Normalize($0,141063)|0);
  $32 = (_system_io_file_system_PrefixLength($0,$31)|0);
  $33 = ($32|0)==(3);
  if ($33) {
   $34 = (_g_strndup($31,2)|0);
   _g_free(0);
   $35 = ($34|0)==(0|0);
   if ($35) {
    $$0$i353363 = 0;
   } else {
    $36 = (_g_str_has_prefix($4,$34)|0);
    $phitmp = ($36|0)==(0);
    if ($phitmp) {
     $$0$i353363 = $34;
    } else {
     $37 = (_strlen($4)|0);
     $38 = (($37) + -2)|0;
     $39 = ((($4)) + 2|0);
     $40 = (_g_strndup($39,$38)|0);
     $41 = (_strlen($40)|0);
     $42 = ($41|0)>(0);
     if ($42) {
      $43 = HEAP8[$40>>0]|0;
      $44 = HEAP32[$7>>2]|0;
      $45 = HEAP8[$44>>0]|0;
      $46 = ($43<<24>>24)==($45<<24>>24);
      if ($46) {
       label = 20;
      } else {
       $47 = $45 << 24 >> 24;
       HEAP32[$2>>2] = $47;
       $48 = (_g_strndup($2,1)|0);
       HEAP32[$vararg_buffer14>>2] = $40;
       $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
       HEAP32[$vararg_ptr17>>2] = 0;
       $49 = (_g_strconcat($48,$vararg_buffer14)|0);
       _g_free($48);
       $$0$i356 = $49;
      }
     } else {
      label = 20;
     }
     if ((label|0) == 20) {
      $50 = (_g_strdup($40)|0);
      $$0$i356 = $50;
     }
     HEAP32[$vararg_buffer18>>2] = $$0$i356;
     $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
     HEAP32[$vararg_ptr21>>2] = 0;
     $51 = (_g_strconcat($31,$vararg_buffer18)|0);
     _g_free($$0$i356);
     _g_free($40);
     _g_free($34);
     _g_free($31);
     _g_free($4);
     $$2 = $51;
     STACKTOP = sp;return ($$2|0);
    }
   }
  } else {
   _g_free(0);
   $$0$i353363 = 0;
  }
  $52 = HEAP8[$4>>0]|0;
  $53 = $52 << 24 >> 24;
  $$off$i$i = (($52) + -97)<<24>>24;
  $54 = ($$off$i$i&255)<(26);
  if ($54) {
   $55 = (($53) + -97)|0;
   $59 = $55;
   label = 25;
  } else {
   $$off25$i$i = (($52) + -65)<<24>>24;
   $56 = ($$off25$i$i&255)<(26);
   $57 = (($53) + -65)|0;
   if ($56) {
    $59 = $57;
    label = 25;
   } else {
    $$0$i358 = 0;
   }
  }
  if ((label|0) == 25) {
   $58 = ($59|0)<(0);
   if ($58) {
    $$0$i358 = 0;
   } else {
    $60 = HEAP32[35983]|0;
    $61 = (($60) + ($59<<2)|0);
    $62 = HEAP32[$61>>2]|0;
    $63 = (_g_strdup($62)|0);
    $$0$i358 = $63;
   }
  }
  $64 = ($$0$i358|0)==(0|0);
  HEAP32[$2>>2] = $53;
  $65 = (_g_strndup($2,1)|0);
  HEAP32[$vararg_buffer22>>2] = 132388;
  $vararg_ptr25 = ((($vararg_buffer22)) + 4|0);
  HEAP32[$vararg_ptr25>>2] = 0;
  $66 = (_g_strconcat($65,$vararg_buffer22)|0);
  if ($64) {
   $83 = (_strlen($4)|0);
   $84 = (($83) + -2)|0;
   $85 = ((($4)) + 2|0);
   $86 = (_g_strndup($85,$84)|0);
   $87 = (_strlen($86)|0);
   $88 = ($87|0)>(0);
   if ($88) {
    $89 = HEAP8[$86>>0]|0;
    $90 = HEAP32[$7>>2]|0;
    $91 = HEAP8[$90>>0]|0;
    $92 = ($89<<24>>24)==($91<<24>>24);
    if ($92) {
     label = 36;
    } else {
     $93 = $91 << 24 >> 24;
     HEAP32[$vararg_buffer22>>2] = $93;
     $94 = (_g_strndup($vararg_buffer22,1)|0);
     HEAP32[$vararg_buffer38>>2] = $86;
     $vararg_ptr41 = ((($vararg_buffer38)) + 4|0);
     HEAP32[$vararg_ptr41>>2] = 0;
     $95 = (_g_strconcat($94,$vararg_buffer38)|0);
     _g_free($94);
     $$0$i = $95;
    }
   } else {
    label = 36;
   }
   if ((label|0) == 36) {
    $96 = (_g_strdup($86)|0);
    $$0$i = $96;
   }
   HEAP32[$vararg_buffer42>>2] = $$0$i;
   $vararg_ptr45 = ((($vararg_buffer42)) + 4|0);
   HEAP32[$vararg_ptr45>>2] = 0;
   $97 = (_g_strconcat($66,$vararg_buffer42)|0);
   _g_free($$0$i);
   _g_free($86);
   _g_free($66);
   _g_free($65);
   _g_free(0);
   _g_free(0);
   _g_free($$0$i353363);
   _g_free($31);
   _g_free($4);
   $$2 = $97;
   STACKTOP = sp;return ($$2|0);
  } else {
   HEAP32[$vararg_buffer26>>2] = $$0$i358;
   $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
   HEAP32[$vararg_ptr29>>2] = 0;
   $67 = (_g_strconcat($66,$vararg_buffer26)|0);
   $68 = (_strlen($4)|0);
   $69 = (($68) + -2)|0;
   $70 = ((($4)) + 2|0);
   $71 = (_g_strndup($70,$69)|0);
   $72 = (_strlen($71)|0);
   $73 = ($72|0)>(0);
   if ($73) {
    $74 = HEAP8[$71>>0]|0;
    $75 = HEAP32[$7>>2]|0;
    $76 = HEAP8[$75>>0]|0;
    $77 = ($74<<24>>24)==($76<<24>>24);
    if ($77) {
     label = 31;
    } else {
     $78 = $76 << 24 >> 24;
     HEAP32[$vararg_buffer26>>2] = $78;
     $79 = (_g_strndup($vararg_buffer26,1)|0);
     HEAP32[$vararg_buffer30>>2] = $71;
     $vararg_ptr33 = ((($vararg_buffer30)) + 4|0);
     HEAP32[$vararg_ptr33>>2] = 0;
     $80 = (_g_strconcat($79,$vararg_buffer30)|0);
     _g_free($79);
     $$0$i360 = $80;
    }
   } else {
    label = 31;
   }
   if ((label|0) == 31) {
    $81 = (_g_strdup($71)|0);
    $$0$i360 = $81;
   }
   HEAP32[$vararg_buffer34>>2] = $$0$i360;
   $vararg_ptr37 = ((($vararg_buffer34)) + 4|0);
   HEAP32[$vararg_ptr37>>2] = 0;
   $82 = (_g_strconcat($67,$vararg_buffer34)|0);
   _g_free($$0$i360);
   _g_free($71);
   _g_free($67);
   _g_free($66);
   _g_free($65);
   _g_free(0);
   _g_free($$0$i358);
   _g_free($$0$i353363);
   _g_free($31);
   _g_free($4);
   $$2 = $82;
   STACKTOP = sp;return ($$2|0);
  }
  break;
 }
 case 0:  {
  $11 = (_system_io_file_system_Normalize($0,141063)|0);
  $12 = (_strlen($4)|0);
  $13 = ($12|0)>(0);
  if ($13) {
   $14 = HEAP8[$4>>0]|0;
   $15 = ((($0)) + 20|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP8[$16>>0]|0;
   $18 = ($14<<24>>24)==($17<<24>>24);
   if ($18) {
    label = 6;
   } else {
    $19 = $17 << 24 >> 24;
    HEAP32[$2>>2] = $19;
    $20 = (_g_strndup($2,1)|0);
    HEAP32[$vararg_buffer>>2] = $4;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 0;
    $21 = (_g_strconcat($20,$vararg_buffer)|0);
    _g_free($20);
    $$0$i350 = $21;
   }
  } else {
   label = 6;
  }
  if ((label|0) == 6) {
   $22 = (_g_strdup($4)|0);
   $$0$i350 = $22;
  }
  HEAP32[$vararg_buffer2>>2] = $$0$i350;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = 0;
  $23 = (_g_strconcat($11,$vararg_buffer2)|0);
  _g_free($$0$i350);
  _g_free($11);
  _g_free($4);
  $$2 = $23;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 case 1:  {
  $24 = (_system_io_file_system_Normalize($0,141063)|0);
  $25 = (_system_io_file_system_PrefixLength($0,$24)|0);
  $26 = ($25|0)==(3);
  if ($26) {
   $27 = (_g_strndup($24,2)|0);
   _g_free(0);
   $28 = ($27|0)==(0|0);
   if (!($28)) {
    HEAP32[$vararg_buffer6>>2] = $4;
    $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
    HEAP32[$vararg_ptr9>>2] = 0;
    $29 = (_g_strconcat($27,$vararg_buffer6)|0);
    _g_free($27);
    _g_free($24);
    _g_free($4);
    $$2 = $29;
    STACKTOP = sp;return ($$2|0);
   }
  } else {
   _g_free(0);
  }
  HEAP32[$vararg_buffer10>>2] = $4;
  $vararg_ptr13 = ((($vararg_buffer10)) + 4|0);
  HEAP32[$vararg_ptr13>>2] = 0;
  $30 = (_g_strconcat($24,$vararg_buffer10)|0);
  _g_free(0);
  _g_free($24);
  _g_free($4);
  $$2 = $30;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 case 3:  {
  $$2 = $4;
  STACKTOP = sp;return ($$2|0);
  break;
 }
 default: {
  HEAP32[$vararg_buffer46>>2] = $4;
  $vararg_ptr49 = ((($vararg_buffer46)) + 4|0);
  HEAP32[$vararg_ptr49>>2] = 0;
  $98 = (_g_strconcat(132393,$vararg_buffer46)|0);
  $99 = (_system_io_exception_quark()|0);
  $100 = (_g_error_new_literal($99,4,$98)|0);
  _g_free($98);
  HEAP32[$3>>2] = $100;
  _g_free($4);
  $101 = ((($100)) + 8|0);
  $102 = HEAP32[$101>>2]|0;
  $103 = HEAP32[$100>>2]|0;
  $104 = (_g_quark_to_string($103)|0);
  $105 = ((($100)) + 4|0);
  $106 = HEAP32[$105>>2]|0;
  HEAP32[$vararg_buffer50>>2] = 132413;
  $vararg_ptr53 = ((($vararg_buffer50)) + 4|0);
  HEAP32[$vararg_ptr53>>2] = 1874;
  $vararg_ptr54 = ((($vararg_buffer50)) + 8|0);
  HEAP32[$vararg_ptr54>>2] = $102;
  $vararg_ptr55 = ((($vararg_buffer50)) + 12|0);
  HEAP32[$vararg_ptr55>>2] = $104;
  $vararg_ptr56 = ((($vararg_buffer50)) + 16|0);
  HEAP32[$vararg_ptr56>>2] = $106;
  _g_log(0,8,140862,$vararg_buffer50);
  _g_clear_error($3);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 }
 return (0)|0;
}
function _system_io_emscripten_file_system_real_Canonicalize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i = 0, $$0161226$i = 0, $$0161226$i493 = 0, $$0161226$in$i = 0, $$0161226$in$i490 = 0, $$0163223$i = 0, $$0163223$i491 = 0, $$0169222$i = 0, $$0169222$i492 = 0, $$0457 = 0, $$14 = 0, $$4167$i = 0, $$4167$i499 = 0, $$4173$i = 0, $$4173$i498 = 0, $$5473524 = 0, $$5481523 = 0, $$6482 = 0, $$7465 = 0, $$7475 = 0;
 var $$8484 = 0, $$not$i = 0, $$not$i494 = 0, $$off = 0, $$off534 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0;
 var $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0;
 var $131 = 0, $132 = 0, $133 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond$i = 0, $or$cond$i495 = 0, $or$cond245$i = 0, $or$cond245$i496 = 0;
 var $vararg_buffer = 0, $vararg_buffer10 = 0, $vararg_buffer14 = 0, $vararg_buffer18 = 0, $vararg_buffer2 = 0, $vararg_buffer22 = 0, $vararg_buffer26 = 0, $vararg_buffer6 = 0, $vararg_ptr1 = 0, $vararg_ptr13 = 0, $vararg_ptr17 = 0, $vararg_ptr21 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr5 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer26 = sp + 56|0;
 $vararg_buffer22 = sp + 48|0;
 $vararg_buffer18 = sp + 40|0;
 $vararg_buffer14 = sp + 32|0;
 $vararg_buffer10 = sp + 24|0;
 $vararg_buffer6 = sp + 16|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $3 = sp + 64|0;
 $4 = (_strlen($1)|0);
 switch ($4|0) {
 case 2:  {
  $5 = HEAP8[$1>>0]|0;
  $6 = $5 & -33;
  $7 = (($6) + -65)<<24>>24;
  $8 = ($7&255)>(25);
  if (!($8)) {
   $9 = ((($1)) + 1|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = ($10<<24>>24)==(58);
   if ($11) {
    $$off534 = (($5) + -65)<<24>>24;
    $12 = ($$off534&255)<(26);
    if ($12) {
     $13 = (_g_strdup($1)|0);
     $$14 = $13;
     STACKTOP = sp;return ($$14|0);
    } else {
     $14 = $5 << 24 >> 24;
     $15 = (($14) + -32)|0;
     HEAP32[$3>>2] = $15;
     $16 = (_g_strndup($3,1)|0);
     HEAP32[$vararg_buffer>>2] = $16;
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     HEAP32[$vararg_ptr1>>2] = 0;
     $17 = (_g_strconcat(144793,$vararg_buffer)|0);
     HEAP32[$vararg_buffer2>>2] = 132388;
     $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
     HEAP32[$vararg_ptr5>>2] = 0;
     $18 = (_g_strconcat($17,$vararg_buffer2)|0);
     _g_free($17);
     _g_free($16);
     $$14 = $18;
     STACKTOP = sp;return ($$14|0);
    }
   }
  }
  break;
 }
 case 3:  {
  $19 = HEAP8[$1>>0]|0;
  $20 = $19 & -33;
  $21 = (($20) + -65)<<24>>24;
  $22 = ($21&255)>(25);
  if (!($22)) {
   $23 = ((($1)) + 1|0);
   $24 = HEAP8[$23>>0]|0;
   $25 = ($24<<24>>24)==(58);
   if ($25) {
    $26 = ((($1)) + 2|0);
    $27 = HEAP8[$26>>0]|0;
    $28 = ($27<<24>>24)==(92);
    if ($28) {
     $$off = (($19) + -65)<<24>>24;
     $29 = ($$off&255)>(25);
     if ($29) {
      $31 = $19 << 24 >> 24;
      $32 = (($31) + -32)|0;
      HEAP32[$3>>2] = $32;
      $33 = (_g_strndup($3,1)|0);
      HEAP32[$vararg_buffer6>>2] = $33;
      $vararg_ptr9 = ((($vararg_buffer6)) + 4|0);
      HEAP32[$vararg_ptr9>>2] = 0;
      $34 = (_g_strconcat(144793,$vararg_buffer6)|0);
      HEAP32[$vararg_buffer10>>2] = 132390;
      $vararg_ptr13 = ((($vararg_buffer10)) + 4|0);
      HEAP32[$vararg_ptr13>>2] = 0;
      $35 = (_g_strconcat($34,$vararg_buffer10)|0);
      _g_free($34);
      _g_free($33);
      $$14 = $35;
      STACKTOP = sp;return ($$14|0);
     } else {
      $30 = (_g_strdup($1)|0);
      $$14 = $30;
      STACKTOP = sp;return ($$14|0);
     }
    }
   }
  }
  break;
 }
 default: {
 }
 }
 $36 = (0)==(0);
 if ($36) {
  $37 = (_g_strdup($1)|0);
  _g_free(0);
  $$14 = $37;
  STACKTOP = sp;return ($$14|0);
 }
 $38 = ((($0)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 4|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = (_system_collections_generic_map_get($41,$1)|0);
 $43 = ($42|0)==(0|0);
 if (!($43)) {
  $$14 = $42;
  STACKTOP = sp;return ($$14|0);
 }
 $44 = (0)==(0);
 L27: do {
  if ($44) {
   $$5473524 = 0;$$5481523 = 0;
   label = 33;
  } else {
   $45 = ($1|0)==(0|0);
   L29: do {
    if (!($45)) {
     $46 = HEAP8[144792]|0;
     $47 = (_strlen($1)|0);
     $48 = ($47|0)>(1);
     if ($48) {
      $$0161226$in$i490 = $47;$$0163223$i491 = 0;$$0169222$i492 = 0;
      while(1) {
       $$0161226$i493 = (($$0161226$in$i490) + -1)|0;
       $49 = (($1) + ($$0161226$i493)|0);
       $50 = HEAP8[$49>>0]|0;
       $51 = ($50<<24>>24)==(46);
       if ($51) {
        $52 = ($$0163223$i491|0)>(0);
        if ($52) {
         break L29;
        }
        $53 = ($$0169222$i492|0)==(0);
        $54 = (($$0163223$i491) + 1)|0;
        if ($53) {
         break L29;
        } else {
         $$4167$i499 = $54;$$4173$i498 = $$0169222$i492;
        }
       } else {
        $55 = ($50<<24>>24)==($46<<24>>24);
        if ($55) {
         break;
        }
        switch ($50<<24>>24) {
        case 42: case 47:  {
         break L29;
         break;
        }
        default: {
        }
        }
        $65 = ($50<<24>>24)==(63);
        $66 = (($$0169222$i492) + 1)|0;
        if ($65) {
         break L29;
        } else {
         $$4167$i499 = 0;$$4173$i498 = $66;
        }
       }
       $67 = ($$0161226$in$i490|0)>(2);
       if ($67) {
        $$0161226$in$i490 = $$0161226$i493;$$0163223$i491 = $$4167$i499;$$0169222$i492 = $$4173$i498;
       } else {
        break L29;
       }
      }
      $56 = ($$0163223$i491|0)==(1);
      $57 = ($$0169222$i492|0)==(0);
      $$not$i494 = $56 & $57;
      $58 = (($47) + -2)|0;
      $59 = ($$0161226$in$i490|0)>($58|0);
      $or$cond$i495 = $59 | $$not$i494;
      if (!($or$cond$i495)) {
       $60 = (($$0161226$in$i490) + -2)|0;
       $61 = (($1) + ($60)|0);
       $62 = HEAP8[$61>>0]|0;
       $63 = ($62<<24>>24)==($46<<24>>24);
       $64 = ($62<<24>>24)==(47);
       $or$cond245$i496 = $63 | $64;
       if (!($or$cond245$i496)) {
        $68 = (_g_strndup($1,$$0161226$i493)|0);
        _g_free(0);
        $69 = ($68|0)==(0|0);
        if ($69) {
         $$5473524 = 0;$$5481523 = 0;
         label = 33;
         break L27;
        }
        $70 = HEAP32[$38>>2]|0;
        $71 = ((($70)) + 8|0);
        $72 = HEAP32[$71>>2]|0;
        $73 = (_system_collections_generic_map_get($72,$68)|0);
        _g_free(0);
        $74 = ($73|0)==(0|0);
        if ($74) {
         $$5473524 = $68;$$5481523 = 0;
         label = 33;
         break L27;
        }
        $75 = (_strlen($68)|0);
        $76 = (($75) + 1)|0;
        $77 = (_strlen($1)|0);
        $78 = ($75|0)<(-1);
        $79 = $78 ? $77 : 0;
        $$0$i = (($76) + ($79))|0;
        $80 = (($77) - ($$0$i))|0;
        $81 = (($1) + ($$0$i)|0);
        $82 = (_g_strndup($81,$80)|0);
        $83 = HEAP32[35984]|0;
        HEAP32[$vararg_buffer14>>2] = $83;
        $vararg_ptr17 = ((($vararg_buffer14)) + 4|0);
        HEAP32[$vararg_ptr17>>2] = 0;
        $84 = (_g_strconcat($73,$vararg_buffer14)|0);
        HEAP32[$vararg_buffer18>>2] = $82;
        $vararg_ptr21 = ((($vararg_buffer18)) + 4|0);
        HEAP32[$vararg_ptr21>>2] = 0;
        $85 = (_g_strconcat($84,$vararg_buffer18)|0);
        $86 = (_g_strdup($85)|0);
        _g_free($85);
        _g_free($84);
        _g_free(0);
        _g_free(0);
        $87 = HEAP32[$38>>2]|0;
        $88 = ((($87)) + 4|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = HEAP32[35984]|0;
        HEAP32[$vararg_buffer22>>2] = $90;
        $vararg_ptr25 = ((($vararg_buffer22)) + 4|0);
        HEAP32[$vararg_ptr25>>2] = 0;
        $91 = (_g_strconcat($68,$vararg_buffer22)|0);
        HEAP32[$vararg_buffer26>>2] = $82;
        $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
        HEAP32[$vararg_ptr29>>2] = 0;
        $92 = (_g_strconcat($91,$vararg_buffer26)|0);
        _system_collections_generic_map_set($89,$92,$86);
        _g_free($92);
        _g_free($91);
        _g_free(0);
        _g_free($82);
        $93 = ($86|0)==(0|0);
        if ($93) {
         $$5473524 = $68;$$5481523 = $73;
         label = 33;
         break L27;
        } else {
         $$7465 = $86;$$7475 = $68;$$8484 = $73;
         break L27;
        }
       }
      }
     }
    }
   } while(0);
   _g_free(0);
   $$5473524 = 0;$$5481523 = 0;
   label = 33;
  }
 } while(0);
 if ((label|0) == 33) {
  $94 = (_g_strdup($1)|0);
  _g_free(0);
  $95 = HEAP32[$38>>2]|0;
  $96 = ((($95)) + 4|0);
  $97 = HEAP32[$96>>2]|0;
  _system_collections_generic_map_set($97,$1,$94);
  $98 = (0)!=(0);
  $99 = ($$5473524|0)!=(0|0);
  $$0457 = $99 & $98;
  L49: do {
   if ($$0457) {
    $100 = ($94|0)==(0|0);
    L51: do {
     if (!($100)) {
      $101 = HEAP8[144792]|0;
      $102 = (_strlen($94)|0);
      $103 = ($102|0)>(1);
      if ($103) {
       $$0161226$in$i = $102;$$0163223$i = 0;$$0169222$i = 0;
       while(1) {
        $$0161226$i = (($$0161226$in$i) + -1)|0;
        $104 = (($94) + ($$0161226$i)|0);
        $105 = HEAP8[$104>>0]|0;
        $106 = ($105<<24>>24)==(46);
        if ($106) {
         $107 = ($$0163223$i|0)>(0);
         if ($107) {
          break L51;
         }
         $108 = ($$0169222$i|0)==(0);
         $109 = (($$0163223$i) + 1)|0;
         if ($108) {
          break L51;
         } else {
          $$4167$i = $109;$$4173$i = $$0169222$i;
         }
        } else {
         $110 = ($105<<24>>24)==($101<<24>>24);
         if ($110) {
          break;
         }
         switch ($105<<24>>24) {
         case 42: case 47:  {
          break L51;
          break;
         }
         default: {
         }
         }
         $120 = ($105<<24>>24)==(63);
         $121 = (($$0169222$i) + 1)|0;
         if ($120) {
          break L51;
         } else {
          $$4167$i = 0;$$4173$i = $121;
         }
        }
        $122 = ($$0161226$in$i|0)>(2);
        if ($122) {
         $$0161226$in$i = $$0161226$i;$$0163223$i = $$4167$i;$$0169222$i = $$4173$i;
        } else {
         break L51;
        }
       }
       $111 = ($$0163223$i|0)==(1);
       $112 = ($$0169222$i|0)==(0);
       $$not$i = $111 & $112;
       $113 = (($102) + -2)|0;
       $114 = ($$0161226$in$i|0)>($113|0);
       $or$cond$i = $114 | $$not$i;
       if (!($or$cond$i)) {
        $115 = (($$0161226$in$i) + -2)|0;
        $116 = (($94) + ($115)|0);
        $117 = HEAP8[$116>>0]|0;
        $118 = ($117<<24>>24)==($101<<24>>24);
        $119 = ($117<<24>>24)==(47);
        $or$cond245$i = $118 | $119;
        if (!($or$cond245$i)) {
         $123 = (_g_strndup($94,$$0161226$i)|0);
         _g_free($$5481523);
         $124 = ($123|0)==(0|0);
         if ($124) {
          $$6482 = 0;
          break L49;
         }
         $125 = (_system_io_file_new($94,0)|0);
         $126 = (_system_io_file_Exists($125)|0);
         $127 = ($126|0)==(0);
         if (!($127)) {
          $128 = (_system_io_file_IsDirectory($125)|0);
          $129 = ($128|0)==(0);
          if ($129) {
           $130 = HEAP32[$38>>2]|0;
           $131 = ((($130)) + 8|0);
           $132 = HEAP32[$131>>2]|0;
           _system_collections_generic_map_set($132,$$5473524,$123);
          }
         }
         $133 = ($125|0)==(0|0);
         if ($133) {
          $$6482 = $123;
          break L49;
         }
         _g_object_unref($125);
         $$6482 = $123;
         break L49;
        }
       }
      }
     }
    } while(0);
    _g_free($$5481523);
    $$6482 = 0;
   } else {
    $$6482 = $$5481523;
   }
  } while(0);
  _g_free(0);
  $$7465 = $94;$$7475 = $$5473524;$$8484 = $$6482;
 }
 _g_free($$8484);
 _g_free($$7475);
 $$14 = $$7465;
 STACKTOP = sp;return ($$14|0);
}
function _system_io_emscripten_file_system_real_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_fopen($2,132616)|0);
 _g_free($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  return 0;
 }
 (_fclose($3)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_CheckAccess($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_system_io_file_GetPath($1)|0);
 $4 = (_fopen($3,132616)|0);
 _g_free($3);
 $5 = ($4|0)==(0|0);
 if ($5) {
  return 0;
 }
 (_fclose($4)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_GetLastModifiedTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_GetLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_fopen($2,132616)|0);
 _g_free($2);
 $4 = ($3|0)==(0|0);
 if ($4) {
  return 0;
 }
 (_fclose($3)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_SetPermission($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_CreateFileExclusively($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_List($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_g_malloc0_n(1,4)|0);
 $4 = ($2|0)==(0|0);
 if ($4) {
  return ($3|0);
 }
 HEAP32[$2>>2] = 0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_CreateDirectory($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_SetLastModifiedTime($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_SetReadOnly($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_emscripten_file_system_real_Delete($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 _system_collections_generic_map_Clear($5);
 $6 = HEAP32[$2>>2]|0;
 $7 = ((($6)) + 8|0);
 $8 = HEAP32[$7>>2]|0;
 _system_collections_generic_map_Clear($8);
 return 0;
}
function _system_io_emscripten_file_system_real_Rename($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 _system_collections_generic_map_Clear($6);
 $7 = HEAP32[$3>>2]|0;
 $8 = ((($7)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 _system_collections_generic_map_Clear($9);
 return 0;
}
function _system_io_emscripten_file_system_real_ListRoots($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0216 = 0, $$0222 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $spec$select = 0, $spec$select228 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$0216 = 0;
 while(1) {
  $spec$select = (($$0216) + 1)|0;
  $2 = ($spec$select>>>0)<(26);
  if ($2) {
   $$0216 = $spec$select;
  } else {
   break;
  }
 }
 $3 = (_g_malloc0_n(1,4)|0);
 $$0222 = 0;
 while(1) {
  $spec$select228 = (($$0222) + 1)|0;
  $4 = ($spec$select228>>>0)<(26);
  if ($4) {
   $$0222 = $spec$select228;
  } else {
   break;
  }
 }
 $5 = ($1|0)==(0|0);
 if ($5) {
  return ($3|0);
 }
 HEAP32[$1>>2] = 0;
 return ($3|0);
}
function _system_io_emscripten_file_system_real_GetSpace($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_system_io_file_Exists($1)|0);
 return 0;
}
function _system_io_emscripten_file_system_real_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_system_io_file_GetPath($1)|0);
 $4 = (_system_io_file_GetPath($2)|0);
 $5 = (_g_strcmp0($3,$4)|0);
 _g_free($4);
 _g_free($3);
 return ($5|0);
}
function _system_io_emscripten_file_system_real_HashCode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_io_file_GetPath($1)|0);
 $3 = (_g_utf8_strdown($2,-1)|0);
 $4 = (_g_str_hash($3)|0);
 $5 = $4 ^ 1234321;
 _g_free($3);
 _g_free($2);
 return ($5|0);
}
function _system_io_emscripten_file_system_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143924)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_file_system_get_type()|0);
  $4 = (_g_type_register_static($3,132359,119512,0)|0);
  _g_once_init_leave(143924,$4);
 }
 $5 = HEAP32[35981]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 4|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 8|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $20 = HEAP32[35982]|0;
  $21 = (_g_type_check_class_cast($20,80)|0);
  $22 = ((($20)) + 36|0);
  $23 = HEAP32[$22>>2]|0;
  ftCall_vi($23|0,$0);
  return;
 }
 _g_object_unref($16);
 $18 = HEAP32[$7>>2]|0;
 $19 = ((($18)) + 8|0);
 HEAP32[$19>>2] = 0;
 $20 = HEAP32[35982]|0;
 $21 = (_g_type_check_class_cast($20,80)|0);
 $22 = ((($20)) + 36|0);
 $23 = HEAP32[$22>>2]|0;
 ftCall_vi($23|0,$0);
 return;
}
function _system_io_emscripten_file_system_Normalize2($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i$i = 0, $$0143$i = 0, $$0237 = 0, $$088$i = 0, $$1$i = 0, $$1140$i = 0, $$1272 = 0, $$2269 = 0, $$3 = 0, $$3258 = 0, $$5$ph = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$142$i = 0, $not$267 = 0, $spec$select = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ($2|0)==(0);
 if ($4) {
  $5 = (_g_strdup($1)|0);
  $$0 = $5;
  return ($$0|0);
 }
 $6 = ($3|0)<(3);
 $spec$select = $6 ? 0 : $3;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP8[$8>>0]|0;
 $10 = (_g_string_new(144793)|0);
 $11 = ($spec$select|0)==(0);
 L5: do {
  if ($11) {
   $12 = ($2|0)>(0);
   L7: do {
    if ($12) {
     $$0143$i = 0;
     while(1) {
      $13 = (($1) + ($$0143$i)|0);
      $14 = HEAP8[$13>>0]|0;
      $15 = ($14<<24>>24)==(92);
      $16 = ($14<<24>>24)==(47);
      $not$142$i = $16 | $15;
      $17 = $not$142$i&1;
      $$1$i = (($$0143$i) + ($17))|0;
      switch ($14<<24>>24) {
      case 47: case 92:  {
       break;
      }
      default: {
       $$1140$i = $$1$i;
       break L7;
      }
      }
      $18 = ($$1$i|0)<($2|0);
      if ($18) {
       $$0143$i = $$1$i;
      } else {
       $$1140$i = $$1$i;
       break L7;
      }
     }
    } else {
     $$1140$i = 0;
    }
   } while(0);
   $19 = (($2) - ($$1140$i))|0;
   $20 = ($19|0)>(1);
   if ($20) {
    $21 = (($1) + ($$1140$i)|0);
    $22 = HEAP8[$21>>0]|0;
    $23 = $22 & -33;
    $24 = (($23) + -65)<<24>>24;
    $25 = ($24&255)<(26);
    if ($25) {
     $26 = (($$1140$i) + 1)|0;
     $27 = (($1) + ($26)|0);
     $28 = HEAP8[$27>>0]|0;
     $29 = ($28<<24>>24)==(58);
     if ($29) {
      $30 = ((($10)) + 4|0);
      $31 = HEAP32[$30>>2]|0;
      $32 = (($31) + 1)|0;
      $33 = ((($10)) + 8|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = ($32>>>0)<($34>>>0);
      if ($35) {
       $36 = HEAP32[$10>>2]|0;
       HEAP32[$30>>2] = $32;
       $37 = (($36) + ($31)|0);
       HEAP8[$37>>0] = $22;
       $38 = HEAP32[$10>>2]|0;
       $39 = HEAP32[$30>>2]|0;
       $40 = (($38) + ($39)|0);
       HEAP8[$40>>0] = 0;
      } else {
       (_g_string_insert_c($10,-1,$22)|0);
      }
      $41 = HEAP32[$30>>2]|0;
      $42 = (($41) + 1)|0;
      $43 = HEAP32[$33>>2]|0;
      $44 = ($42>>>0)<($43>>>0);
      if ($44) {
       $45 = HEAP32[$10>>2]|0;
       HEAP32[$30>>2] = $42;
       $46 = (($45) + ($41)|0);
       HEAP8[$46>>0] = 58;
       $47 = HEAP32[$10>>2]|0;
       $48 = HEAP32[$30>>2]|0;
       $49 = (($47) + ($48)|0);
       HEAP8[$49>>0] = 0;
      } else {
       (_g_string_insert_c($10,-1,58)|0);
      }
      $50 = (($$1140$i) + 2)|0;
      $$0237 = $50;
      break;
     }
    }
   }
   $51 = ($2|0)>(1);
   if ($51) {
    $52 = HEAP8[$1>>0]|0;
    switch ($52<<24>>24) {
    case 47: case 92:  {
     break;
    }
    default: {
     $$0237 = 0;
     break L5;
    }
    }
    $53 = ((($1)) + 1|0);
    $54 = HEAP8[$53>>0]|0;
    switch ($54<<24>>24) {
    case 47: case 92:  {
     break;
    }
    default: {
     $$0237 = 0;
     break L5;
    }
    }
    $55 = HEAP32[$7>>2]|0;
    $56 = HEAP8[$55>>0]|0;
    $57 = ((($10)) + 4|0);
    $58 = HEAP32[$57>>2]|0;
    $59 = (($58) + 1)|0;
    $60 = ((($10)) + 8|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ($59>>>0)<($61>>>0);
    if ($62) {
     $63 = HEAP32[$10>>2]|0;
     HEAP32[$57>>2] = $59;
     $64 = (($63) + ($58)|0);
     HEAP8[$64>>0] = $56;
     $65 = HEAP32[$10>>2]|0;
     $66 = HEAP32[$57>>2]|0;
     $67 = (($65) + ($66)|0);
     HEAP8[$67>>0] = 0;
     $$0237 = 1;
     break;
    } else {
     (_g_string_insert_c($10,-1,$56)|0);
     $$0237 = 1;
     break;
    }
   } else {
    $$0237 = 0;
   }
  } else {
   $68 = ($spec$select|0)>(-1);
   if ($68) {
    $69 = (_memchr($1,0,$spec$select)|0);
    $70 = ($69|0)==(0|0);
    $71 = $69;
    $72 = $1;
    $73 = (($71) - ($72))|0;
    $$0$i$i = $70 ? $spec$select : $73;
    $$088$i = $$0$i$i;
   } else {
    $74 = (_strlen($1)|0);
    $$088$i = $74;
   }
   $75 = ($spec$select|0)<(0);
   $spec$select$i = $75 ? $$088$i : $spec$select;
   $76 = (_g_strndup($1,$spec$select$i)|0);
   (_g_string_append($10,$76)|0);
   _g_free($76);
   $$0237 = $spec$select;
  }
 } while(0);
 $77 = ($$0237|0)<($2|0);
 if ($77) {
  $78 = ((($10)) + 4|0);
  $79 = ((($10)) + 8|0);
  $$1272 = $$0237;
  L40: while(1) {
   $80 = (($$1272) + 1)|0;
   $81 = (($1) + ($$1272)|0);
   $82 = HEAP8[$81>>0]|0;
   L42: do {
    switch ($82<<24>>24) {
    case 47: case 92:  {
     $83 = ($80|0)<($2|0);
     L48: do {
      if ($83) {
       $$2269 = $80;
       while(1) {
        $84 = (($1) + ($$2269)|0);
        $85 = HEAP8[$84>>0]|0;
        $86 = ($85<<24>>24)==(92);
        $87 = ($85<<24>>24)==(47);
        $not$267 = $87 | $86;
        $88 = $not$267&1;
        $$3 = (($$2269) + ($88))|0;
        switch ($85<<24>>24) {
        case 47: case 92:  {
         break;
        }
        default: {
         $$3258 = $$3;
         break L48;
        }
        }
        $89 = ($$3|0)<($2|0);
        if ($89) {
         $$2269 = $$3;
        } else {
         $$3258 = $$3;
         break L48;
        }
       }
      } else {
       $$3258 = $80;
      }
     } while(0);
     $90 = ($$3258|0)==($2|0);
     $91 = HEAP32[$78>>2]|0;
     if ($90) {
      label = 36;
      break L40;
     }
     $116 = (($91) + 1)|0;
     $117 = HEAP32[$79>>2]|0;
     $118 = ($116>>>0)<($117>>>0);
     if ($118) {
      $119 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = $116;
      $120 = (($119) + ($91)|0);
      HEAP8[$120>>0] = $9;
      $121 = HEAP32[$10>>2]|0;
      $122 = HEAP32[$78>>2]|0;
      $123 = (($121) + ($122)|0);
      HEAP8[$123>>0] = 0;
      $$5$ph = $$3258;
      break L42;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      $$5$ph = $$3258;
      break L42;
     }
     break;
    }
    default: {
     $124 = HEAP32[$78>>2]|0;
     $125 = (($124) + 1)|0;
     $126 = HEAP32[$79>>2]|0;
     $127 = ($125>>>0)<($126>>>0);
     if ($127) {
      $128 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = $125;
      $129 = (($128) + ($124)|0);
      HEAP8[$129>>0] = $82;
      $130 = HEAP32[$10>>2]|0;
      $131 = HEAP32[$78>>2]|0;
      $132 = (($130) + ($131)|0);
      HEAP8[$132>>0] = 0;
      $$5$ph = $80;
      break L42;
     } else {
      (_g_string_insert_c($10,-1,$82)|0);
      $$5$ph = $80;
      break L42;
     }
    }
    }
   } while(0);
   $133 = ($$5$ph|0)<($2|0);
   if ($133) {
    $$1272 = $$5$ph;
   } else {
    break;
   }
  }
  L59: do {
   if ((label|0) == 36) {
    switch ($91|0) {
    case 2:  {
     $92 = HEAP32[$10>>2]|0;
     $93 = ((($92)) + 1|0);
     $94 = HEAP8[$93>>0]|0;
     $95 = ($94<<24>>24)==(58);
     if (!($95)) {
      break L59;
     }
     $96 = HEAP32[$79>>2]|0;
     $97 = ($96>>>0)>(3);
     if ($97) {
      HEAP32[$78>>2] = 3;
      $98 = ((($92)) + 2|0);
      HEAP8[$98>>0] = $9;
      $99 = HEAP32[$10>>2]|0;
      $100 = HEAP32[$78>>2]|0;
      $101 = (($99) + ($100)|0);
      HEAP8[$101>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    case 0:  {
     $102 = HEAP32[$79>>2]|0;
     $103 = ($102>>>0)>(1);
     if ($103) {
      $104 = HEAP32[$10>>2]|0;
      HEAP32[$78>>2] = 1;
      HEAP8[$104>>0] = $9;
      $105 = HEAP32[$10>>2]|0;
      $106 = HEAP32[$78>>2]|0;
      $107 = (($105) + ($106)|0);
      HEAP8[$107>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    case 1:  {
     $108 = HEAP32[$10>>2]|0;
     $109 = HEAP8[$108>>0]|0;
     switch ($109<<24>>24) {
     case 47: case 92:  {
      break;
     }
     default: {
      break L59;
     }
     }
     $110 = HEAP32[$79>>2]|0;
     $111 = ($110>>>0)>(2);
     if ($111) {
      HEAP32[$78>>2] = 2;
      $112 = ((($108)) + 1|0);
      HEAP8[$112>>0] = $9;
      $113 = HEAP32[$10>>2]|0;
      $114 = HEAP32[$78>>2]|0;
      $115 = (($113) + ($114)|0);
      HEAP8[$115>>0] = 0;
      break L59;
     } else {
      (_g_string_insert_c($10,-1,$9)|0);
      break L59;
     }
     break;
    }
    default: {
     break L59;
    }
    }
   }
  } while(0);
  $134 = HEAP32[$10>>2]|0;
  $135 = (_g_strdup($134)|0);
  $139 = $135;
 } else {
  $136 = HEAP32[$10>>2]|0;
  $137 = (_g_strdup($136)|0);
  $138 = ($10|0)==(0|0);
  if ($138) {
   $$0 = $137;
   return ($$0|0);
  } else {
   $139 = $137;
  }
 }
 (_g_string_free($10,1)|0);
 $$0 = $139;
 return ($$0|0);
}
function _system_io_file_IsInvalid($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if (!($5)) {
  $14 = $4;
  $13 = ($14|0)==(1);
  $15 = $13&1;
  return ($15|0);
 }
 $6 = HEAP32[$2>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  label = 4;
 } else {
  $8 = (_g_strcmp0($6,144793)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   label = 4;
  } else {
   $12 = 2;
  }
 }
 if ((label|0) == 4) {
  $12 = 1;
 }
 $10 = HEAP32[$1>>2]|0;
 $11 = ((($10)) + 4|0);
 HEAP32[$11>>2] = $12;
 $14 = $12;
 $13 = ($14|0)==(1);
 $15 = $13&1;
 return ($15|0);
}
function _system_io_file_GetPrefixLength($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_io_file_construct($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$0136 = 0, $$pre$phi137Z2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = (_object_construct($0)|0);
 $5 = ($1|0)==(0|0);
 $6 = ($2|0)==(0|0);
 $$0136 = $5 & $6;
 if ($$0136) {
  $7 = (_system_exception_quark()|0);
  $8 = (_g_error_new_literal($7,9,132463)|0);
  HEAP32[$3>>2] = $8;
  $9 = ((($8)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$8>>2]|0;
  $12 = (_g_quark_to_string($11)|0);
  $13 = ((($8)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  HEAP32[$vararg_buffer>>2] = 132481;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 401;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $12;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($3);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 do {
  if ($6) {
   $15 = HEAP32[35986]|0;
   $16 = (_system_io_file_system_Normalize($15,$1)|0);
   $17 = ((($4)) + 16|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = HEAP32[$18>>2]|0;
   _g_free($19);
   $20 = HEAP32[$17>>2]|0;
   HEAP32[$20>>2] = $16;
   $$pre$phi137Z2D = $17;
  } else {
   if ($5) {
    $40 = HEAP32[35986]|0;
    $41 = (_system_io_file_system_Normalize($40,$2)|0);
    $42 = ((($4)) + 16|0);
    $43 = HEAP32[$42>>2]|0;
    $44 = HEAP32[$43>>2]|0;
    _g_free($44);
    $45 = HEAP32[$42>>2]|0;
    HEAP32[$45>>2] = $41;
    $$pre$phi137Z2D = $42;
    break;
   }
   $21 = (_g_strcmp0($1,144793)|0);
   $22 = ($21|0)==(0);
   $23 = HEAP32[35986]|0;
   if ($22) {
    $24 = (_system_io_file_system_GetDefaultParent($23)|0);
    $25 = HEAP32[35986]|0;
    $26 = (_system_io_file_system_Normalize($25,$2)|0);
    $27 = (_system_io_file_system_Resolve($23,$24,$26)|0);
    $28 = ((($4)) + 16|0);
    $29 = HEAP32[$28>>2]|0;
    $30 = HEAP32[$29>>2]|0;
    _g_free($30);
    $31 = HEAP32[$28>>2]|0;
    HEAP32[$31>>2] = $27;
    _g_free($26);
    _g_free($24);
    $$pre$phi137Z2D = $28;
    break;
   } else {
    $32 = (_system_io_file_system_Normalize($23,$1)|0);
    $33 = HEAP32[35986]|0;
    $34 = (_system_io_file_system_Normalize($33,$2)|0);
    $35 = (_system_io_file_system_Resolve($23,$32,$34)|0);
    $36 = ((($4)) + 16|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = HEAP32[$37>>2]|0;
    _g_free($38);
    $39 = HEAP32[$36>>2]|0;
    HEAP32[$39>>2] = $35;
    _g_free($34);
    _g_free($32);
    $$pre$phi137Z2D = $36;
    break;
   }
  }
 } while(0);
 $46 = HEAP32[35986]|0;
 $47 = HEAP32[$$pre$phi137Z2D>>2]|0;
 $48 = HEAP32[$47>>2]|0;
 $49 = (_system_io_file_system_PrefixLength($46,$48)|0);
 $50 = HEAP32[$$pre$phi137Z2D>>2]|0;
 $51 = ((($50)) + 8|0);
 HEAP32[$51>>2] = $49;
 $$0 = $4;
 STACKTOP = sp;return ($$0|0);
}
function _system_io_file_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(143948)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_object_get_type()|0);
  $5 = (_g_type_register_static($4,132513,119548,0)|0);
  $6 = (_system_icomparable_get_type()|0);
  _g_type_add_interface_static($5,$6,119584);
  _g_once_init_leave(143948,$5);
 }
 $7 = HEAP32[35987]|0;
 $8 = (_system_io_file_construct($7,$0,$1)|0);
 return ($8|0);
}
function _system_io_file_system_icomparable_interface_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_interface_peek_parent($0)|0);
 HEAP32[35988] = $1;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 294;
 return;
}
function _system_io_file_real_CompareTo($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[35986]|0;
 $3 = (_system_io_file_system_Compare($2,$0,$1)|0);
 return ($3|0);
}
function _system_io_file_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35989] = $2;
 _g_type_class_add_private($0,12);
 $3 = (_g_type_check_class_cast($0,80)|0);
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 295;
 $5 = (_system_io_default_file_system_GetFileSystem()|0);
 HEAP32[35986] = $5;
 $6 = (_system_io_file_system_GetSeparator($5)|0);
 HEAP8[144792] = $6;
 $7 = $6 << 24 >> 24;
 HEAP32[$1>>2] = $7;
 $8 = (_g_strndup($1,1)|0);
 HEAP32[35984] = $8;
 $9 = HEAP32[35986]|0;
 $10 = (_system_io_file_system_GetPathSeparator($9)|0);
 $11 = $10 << 24 >> 24;
 HEAP32[$1>>2] = $11;
 $12 = (_g_strndup($1,1)|0);
 HEAP32[35985] = $12;
 STACKTOP = sp;return;
}
function _system_io_file_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143948)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132513,119548,0)|0);
  $5 = (_system_icomparable_get_type()|0);
  _g_type_add_interface_static($4,$5,119584);
  _g_once_init_leave(143948,$4);
 }
 $6 = HEAP32[35987]|0;
 $7 = (_g_type_instance_get_private($0,$6)|0);
 $8 = ((($0)) + 16|0);
 HEAP32[$8>>2] = $7;
 $9 = ((($7)) + 4|0);
 HEAP32[$9>>2] = 0;
 return;
}
function _system_io_file_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143948)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132513,119548,0)|0);
  $5 = (_system_icomparable_get_type()|0);
  _g_type_add_interface_static($4,$5,119584);
  _g_once_init_leave(143948,$4);
 }
 $6 = HEAP32[35987]|0;
 $7 = (_g_type_check_instance_cast($0,$6)|0);
 $8 = ((($0)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = HEAP32[$9>>2]|0;
 _g_free($10);
 $11 = HEAP32[$8>>2]|0;
 HEAP32[$11>>2] = 0;
 $12 = HEAP32[35989]|0;
 $13 = (_g_type_check_class_cast($12,80)|0);
 $14 = ((($12)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$0);
 return;
}
function _system_io_file_GetPath($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_strdup($3)|0);
 return ($4|0);
}
function _system_io_file_Exists($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$2>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   label = 4;
  } else {
   $8 = (_g_strcmp0($6,144793)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    label = 4;
   } else {
    $12 = 2;
   }
  }
  if ((label|0) == 4) {
   $12 = 1;
  }
  $10 = HEAP32[$1>>2]|0;
  $11 = ((($10)) + 4|0);
  HEAP32[$11>>2] = $12;
  $14 = $12;
 } else {
  $14 = $4;
 }
 $13 = ($14|0)==(1);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[35986]|0;
 $16 = (_system_io_file_system_GetBooleanAttributes($15,$0)|0);
 $17 = 65535 & $16;
 $18 = ($17|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_io_file_IsDirectory($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0);
 if ($5) {
  $6 = HEAP32[$2>>2]|0;
  $7 = ($6|0)==(0|0);
  if ($7) {
   label = 4;
  } else {
   $8 = (_g_strcmp0($6,144793)|0);
   $9 = ($8|0)==(0);
   if ($9) {
    label = 4;
   } else {
    $12 = 2;
   }
  }
  if ((label|0) == 4) {
   $12 = 1;
  }
  $10 = HEAP32[$1>>2]|0;
  $11 = ((($10)) + 4|0);
  HEAP32[$11>>2] = $12;
  $14 = $12;
 } else {
  $14 = $4;
 }
 $13 = ($14|0)==(1);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $15 = HEAP32[35986]|0;
 $16 = (_system_io_file_system_GetBooleanAttributes($15,$0)|0);
 $17 = 16384 & $16;
 $18 = ($17|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_io_file_handle_construct($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_object_construct($0)|0);
 $4 = ((($3)) + 16|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $2;
 $7 = (_g_strdup($1)|0);
 $8 = HEAP32[$4>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 _g_free($9);
 $10 = HEAP32[$4>>2]|0;
 HEAP32[$10>>2] = $7;
 $11 = (_system_io_file_new($1,0)|0);
 $12 = ((($3)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  _g_object_unref($13);
  HEAP32[$12>>2] = 0;
 }
 HEAP32[$12>>2] = $11;
 $15 = (_fopen($1,132616)|0);
 $16 = HEAP32[$4>>2]|0;
 $17 = ((($16)) + 8|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $$pre$phiZ2D = $17;
  HEAP32[$$pre$phiZ2D>>2] = $15;
  return ($3|0);
 }
 (_fclose($18)|0);
 $20 = HEAP32[$4>>2]|0;
 $21 = ((($20)) + 8|0);
 HEAP32[$21>>2] = 0;
 $$pre$phiZ2D = $21;
 HEAP32[$$pre$phiZ2D>>2] = $15;
 return ($3|0);
}
function _system_io_file_handle_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(143960)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_object_get_type()|0);
  $5 = (_g_type_register_static($4,132526,119596,0)|0);
  _g_once_init_leave(143960,$5);
 }
 $6 = HEAP32[35990]|0;
 $7 = (_system_io_file_handle_construct($6,$0,$1)|0);
 return ($7|0);
}
function _system_io_file_handle_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35991] = $1;
 _g_type_class_add_private($0,12);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 296;
 return;
}
function _system_io_file_handle_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143960)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132526,119596,0)|0);
  _g_once_init_leave(143960,$4);
 }
 $5 = HEAP32[35990]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_io_file_handle_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143960)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132526,119596,0)|0);
  _g_once_init_leave(143960,$4);
 }
 $5 = HEAP32[35990]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  _g_object_unref($8);
  HEAP32[$7>>2] = 0;
 }
 $10 = ((($0)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 _g_free($12);
 $13 = HEAP32[$10>>2]|0;
 HEAP32[$13>>2] = 0;
 $14 = ((($13)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $19 = HEAP32[35991]|0;
  $20 = (_g_type_check_class_cast($19,80)|0);
  $21 = ((($19)) + 36|0);
  $22 = HEAP32[$21>>2]|0;
  ftCall_vi($22|0,$0);
  return;
 }
 (_fclose($15)|0);
 $17 = HEAP32[$10>>2]|0;
 $18 = ((($17)) + 8|0);
 HEAP32[$18>>2] = 0;
 $19 = HEAP32[35991]|0;
 $20 = (_g_type_check_class_cast($19,80)|0);
 $21 = ((($19)) + 36|0);
 $22 = HEAP32[$21>>2]|0;
 ftCall_vi($22|0,$0);
 return;
}
function _system_io_file_input_stream_construct_FromFile($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$090 = 0, $$3 = 0, $$pre$phi91Z2D = 0, $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0, $vararg_ptr18 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 68|0;
 HEAP32[$3>>2] = 0;
 $4 = (_system_io_input_stream_construct($0)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $14 = 0;
 } else {
  $6 = (_g_object_ref($4)|0);
  $14 = $4;
 }
 $7 = ((($4)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $$pre$phiZ2D = $9;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 4|0);
  HEAP32[$13>>2] = 0;
  $$pre$phiZ2D = $13;
 }
 HEAP32[$$pre$phiZ2D>>2] = $14;
 $15 = ($1|0)==(0|0);
 if ($15) {
  _g_free(0);
  $$090 = 0;
 } else {
  $16 = (_system_io_file_GetPath($1)|0);
  _g_free(0);
  $$090 = $16;
 }
 $17 = (_g_strdup($$090)|0);
 $18 = ($17|0)==(0|0);
 if ($18) {
  $19 = (_system_exception_quark()|0);
  $20 = (_g_error_new_literal($19,9,132588)|0);
  HEAP32[$3>>2] = $20;
  $21 = HEAP32[$20>>2]|0;
  $22 = (_system_io_exception_quark()|0);
  $23 = ($21|0)==($22|0);
  if ($23) {
   _g_propagate_error($2,$20);
   _g_free(0);
   _g_free($$090);
   _g_object_unref($4);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   _g_free(0);
   _g_free($$090);
   $24 = ((($20)) + 8|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = HEAP32[$20>>2]|0;
   $27 = (_g_quark_to_string($26)|0);
   $28 = ((($20)) + 4|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132545;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 325;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $25;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $27;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $29;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $30 = (_system_io_file_IsInvalid($1)|0);
 $31 = ($30|0)==(0);
 if (!($31)) {
  $32 = (_system_io_exception_quark()|0);
  $33 = (_g_error_new_literal($32,1,132598)|0);
  HEAP32[$3>>2] = $33;
  $34 = HEAP32[$33>>2]|0;
  $35 = (_system_io_exception_quark()|0);
  $36 = ($34|0)==($35|0);
  if ($36) {
   _g_propagate_error($2,$33);
   _g_free($17);
   _g_free($$090);
   _g_object_unref($4);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   _g_free($17);
   _g_free($$090);
   $37 = ((($33)) + 8|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = HEAP32[$33>>2]|0;
   $40 = (_g_quark_to_string($39)|0);
   $41 = ((($33)) + 4|0);
   $42 = HEAP32[$41>>2]|0;
   HEAP32[$vararg_buffer5>>2] = 132545;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = 345;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $38;
   $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
   HEAP32[$vararg_ptr10>>2] = $40;
   $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
   HEAP32[$vararg_ptr11>>2] = $42;
   _g_log(0,8,140862,$vararg_buffer5);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $43 = (_fopen($17,132616)|0);
 $44 = HEAP32[$7>>2]|0;
 $45 = HEAP32[$44>>2]|0;
 $46 = ($45|0)==(0|0);
 if ($46) {
  $$pre$phi91Z2D = $44;
 } else {
  (_fclose($45)|0);
  $47 = HEAP32[$7>>2]|0;
  HEAP32[$47>>2] = 0;
  $$pre$phi91Z2D = $47;
 }
 HEAP32[$$pre$phi91Z2D>>2] = $43;
 $48 = ($43|0)==(0|0);
 if (!($48)) {
  _g_free($17);
  _g_free($$090);
  $$3 = $4;
  STACKTOP = sp;return ($$3|0);
 }
 $49 = (_system_io_exception_quark()|0);
 $50 = (_g_error_new_literal($49,1,132618)|0);
 HEAP32[$3>>2] = $50;
 $51 = HEAP32[$50>>2]|0;
 $52 = (_system_io_exception_quark()|0);
 $53 = ($51|0)==($52|0);
 if ($53) {
  _g_propagate_error($2,$50);
  _g_free($17);
  _g_free($$090);
  _g_object_unref($4);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  _g_free($17);
  _g_free($$090);
  $54 = ((($50)) + 8|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = HEAP32[$50>>2]|0;
  $57 = (_g_quark_to_string($56)|0);
  $58 = ((($50)) + 4|0);
  $59 = HEAP32[$58>>2]|0;
  HEAP32[$vararg_buffer12>>2] = 132545;
  $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
  HEAP32[$vararg_ptr15>>2] = 368;
  $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
  HEAP32[$vararg_ptr16>>2] = $55;
  $vararg_ptr17 = ((($vararg_buffer12)) + 12|0);
  HEAP32[$vararg_ptr17>>2] = $57;
  $vararg_ptr18 = ((($vararg_buffer12)) + 16|0);
  HEAP32[$vararg_ptr18>>2] = $59;
  _g_log(0,8,140862,$vararg_buffer12);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_file_input_stream_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35993] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 297;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 298;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 299;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 300;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 301;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 36|0);
 HEAP32[$8>>2] = 302;
 return;
}
function _system_io_file_input_stream_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143968)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_input_stream_get_type()|0);
  $4 = (_g_type_register_static($3,132633,119632,0)|0);
  _g_once_init_leave(143968,$4);
 }
 $5 = HEAP32[35992]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = 0;
 return;
}
function _system_io_file_input_stream_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_fgetc($4)|0);
 return ($5|0);
}
function _system_io_file_input_stream_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0149 = 0, $$0150 = 0, $$0151 = 0, $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 44|0;
 HEAP32[$6>>2] = 0;
 $7 = ($4|0)<(1);
 $spec$select = $7 ? $2 : $4;
 $8 = ($2|0)<(1);
 $9 = ($spec$select|0)<(1);
 $$0149 = $8 & $9;
 if ($$0149) {
  $10 = (_system_io_exception_quark()|0);
  $11 = (_g_error_new_literal($10,3,144793)|0);
  HEAP32[$6>>2] = $11;
  $12 = HEAP32[$11>>2]|0;
  $13 = (_system_io_exception_quark()|0);
  $14 = ($12|0)==($13|0);
  if ($14) {
   _g_propagate_error($5,$11);
   $$2 = 0;
   STACKTOP = sp;return ($$2|0);
  } else {
   $15 = ((($11)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP32[$11>>2]|0;
   $18 = (_g_quark_to_string($17)|0);
   $19 = ((($11)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   HEAP32[$vararg_buffer>>2] = 132545;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 466;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $16;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $18;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $20;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($6);
   $$2 = 0;
   STACKTOP = sp;return ($$2|0);
  }
 }
 $21 = ($3|0)<(0);
 $22 = (($2) - ($3))|0;
 $23 = ($22|0)<($spec$select|0);
 $$0150 = $21 | $23;
 if (!($$0150)) {
  $35 = (($spec$select) - ($3))|0;
  $36 = (_g_malloc0($35)|0);
  $37 = ((($0)) + 20|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_fread($36,1,$35,$39)|0);
  $41 = ($40|0)<(1);
  if ($41) {
   $$0151 = -1;
  } else {
   $42 = (($1) + ($3)|0);
   _memcpy(($42|0),($36|0),($40|0))|0;
   $$0151 = $40;
  }
  _g_free($36);
  $$2 = $$0151;
  STACKTOP = sp;return ($$2|0);
 }
 $24 = (_system_io_exception_quark()|0);
 $25 = (_g_error_new_literal($24,3,144793)|0);
 HEAP32[$6>>2] = $25;
 $26 = HEAP32[$25>>2]|0;
 $27 = (_system_io_exception_quark()|0);
 $28 = ($26|0)==($27|0);
 if ($28) {
  _g_propagate_error($5,$25);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  $29 = ((($25)) + 8|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = HEAP32[$25>>2]|0;
  $32 = (_g_quark_to_string($31)|0);
  $33 = ((($25)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 132545;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 495;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $30;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $32;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $34;
  _g_log(0,8,140862,$vararg_buffer5);
  _g_clear_error($6);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_file_input_stream_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$$0 = 0, $$0 = 0, $$044 = 0, $$047 = 0, $$049 = 0, $$1 = 0, $$lobit = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $spec$select = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $$0 = 0;$$044 = 0;$$049 = 0;
 L1: while(1) {
  $spec$select = (($$044) + ($$049))|0;
  $4 = ($spec$select|0)<($1|0);
  do {
   if ($4) {
    $5 = (_system_io_input_stream_ReadOne($0,$3)|0);
    $6 = HEAP32[$3>>2]|0;
    $7 = ($6|0)==(0|0);
    if ($7) {
     $18 = ($5|0)<(0);
     $$lobit = $5 >>> 31;
     $$$0 = $18 ? -1 : $$0;
     $$047 = $$lobit;$$1 = $$$0;
     break;
    }
    $8 = HEAP32[$6>>2]|0;
    $9 = (_system_io_exception_quark()|0);
    $10 = ($8|0)==($9|0);
    $11 = HEAP32[$3>>2]|0;
    if ($10) {
     _g_propagate_error($2,$11);
     $$047 = 1;$$1 = 0;
     break;
    } else {
     $12 = ((($11)) + 8|0);
     $13 = HEAP32[$12>>2]|0;
     $14 = HEAP32[$11>>2]|0;
     $15 = (_g_quark_to_string($14)|0);
     $16 = ((($11)) + 4|0);
     $17 = HEAP32[$16>>2]|0;
     HEAP32[$vararg_buffer>>2] = 132545;
     $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
     HEAP32[$vararg_ptr1>>2] = 594;
     $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
     HEAP32[$vararg_ptr2>>2] = $13;
     $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
     HEAP32[$vararg_ptr3>>2] = $15;
     $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
     HEAP32[$vararg_ptr4>>2] = $17;
     _g_log(0,8,140862,$vararg_buffer);
     _g_clear_error($3);
     $$047 = 1;$$1 = 0;
     break;
    }
   } else {
    $$047 = 3;$$1 = $$0;
   }
  } while(0);
  $trunc = $$047&255;
  $trunc$clear = $trunc & 3;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0 = $$1;$$044 = $spec$select;$$049 = 1;
   break;
  }
  case 3:  {
   break L1;
   break;
  }
  default: {
   label = 9;
   break L1;
  }
  }
 }
 if ((label|0) == 9) {
  $cond = ($$047|0)==(0);
  if (!($cond)) {
   $19 = $$1;
   STACKTOP = sp;return ($19|0);
  }
 }
 $19 = $spec$select;
 STACKTOP = sp;return ($19|0);
}
function _system_io_file_input_stream_real_Available($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 1;
}
function _system_io_file_input_stream_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $$pre$phiZ2D = $3;
 } else {
  (_fclose($4)|0);
  $6 = HEAP32[$2>>2]|0;
  HEAP32[$6>>2] = 0;
  $$pre$phiZ2D = $6;
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 return;
}
function _system_io_file_input_stream_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143968)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_input_stream_get_type()|0);
  $4 = (_g_type_register_static($3,132633,119632,0)|0);
  _g_once_init_leave(143968,$4);
 }
 $5 = HEAP32[35992]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if ($10) {
  $13 = $8;
 } else {
  (_fclose($9)|0);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
  $13 = $11;
 }
 $12 = ((($13)) + 4|0);
 $14 = HEAP32[$12>>2]|0;
 $15 = ($14|0)==(0|0);
 if (!($15)) {
  _g_object_unref($14);
  $16 = HEAP32[$7>>2]|0;
  $17 = ((($16)) + 4|0);
  HEAP32[$17>>2] = 0;
 }
 $18 = HEAP32[35993]|0;
 $19 = (_g_type_check_class_cast($18,80)|0);
 $20 = ((($18)) + 36|0);
 $21 = HEAP32[$20>>2]|0;
 ftCall_vi($21|0,$0);
 return;
}
function _system_io_file_input_stream_new_FromFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(143968)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_system_io_input_stream_get_type()|0);
  $5 = (_g_type_register_static($4,132633,119632,0)|0);
  _g_once_init_leave(143968,$5);
 }
 $6 = HEAP32[35992]|0;
 $7 = (_system_io_file_input_stream_construct_FromFile($6,$0,$1)|0);
 return ($7|0);
}
function _system_io_file_system_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 96|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 104|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 112|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 return ($6|0);
}
function _system_io_file_system_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 116|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_io_file_system_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 136|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_file_system_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 192|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_iiii($5|0,$0,$1,$2)|0);
 return ($6|0);
}
function _system_io_file_system_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _system_io_file_system_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143976)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[35994]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,132657,119668,16)|0);
 _g_once_init_leave(143976,$3);
 $4 = HEAP32[35994]|0;
 return ($4|0);
}
function _system_io_file_system_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35995] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 303;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 304;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 305;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 306;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 307;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 308;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 309;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 310;
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 311;
 $11 = ((($0)) + 132|0);
 HEAP32[$11>>2] = 312;
 $12 = ((($0)) + 136|0);
 HEAP32[$12>>2] = 313;
 $13 = ((($0)) + 140|0);
 HEAP32[$13>>2] = 314;
 $14 = ((($0)) + 144|0);
 HEAP32[$14>>2] = 315;
 $15 = ((($0)) + 148|0);
 HEAP32[$15>>2] = 316;
 $16 = ((($0)) + 152|0);
 HEAP32[$16>>2] = 317;
 $17 = ((($0)) + 156|0);
 HEAP32[$17>>2] = 318;
 $18 = ((($0)) + 160|0);
 HEAP32[$18>>2] = 319;
 $19 = ((($0)) + 164|0);
 HEAP32[$19>>2] = 320;
 $20 = ((($0)) + 168|0);
 HEAP32[$20>>2] = 321;
 $21 = ((($0)) + 172|0);
 HEAP32[$21>>2] = 322;
 $22 = ((($0)) + 176|0);
 HEAP32[$22>>2] = 323;
 $23 = ((($0)) + 180|0);
 HEAP32[$23>>2] = 324;
 $24 = ((($0)) + 184|0);
 HEAP32[$24>>2] = 325;
 $25 = ((($0)) + 188|0);
 HEAP32[$25>>2] = 326;
 $26 = ((($0)) + 192|0);
 HEAP32[$26>>2] = 327;
 $27 = ((($0)) + 196|0);
 HEAP32[$27>>2] = 328;
 $28 = (_g_type_check_class_cast($0,80)|0);
 $29 = ((($0)) + 36|0);
 HEAP32[$29>>2] = 329;
 return;
}
function _system_io_file_system_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_file_system_real_GetSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134716,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetPathSeparator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134630,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Normalize($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134551,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_PrefixLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134469,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Resolve($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,134392,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetDefaultParent($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,134306,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_FromURIPath($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134225,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_IsAbsolute($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134145,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_ResolveFile($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134064,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_Canonicalize($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133982,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetBooleanAttributes($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133892,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_CheckAccess($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133811,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetPermission($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $5 = 0, $6 = 0, $7 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $5 = HEAP32[$0>>2]|0;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_g_type_name($6)|0);
 HEAP32[$vararg_buffer>>2] = $7;
 _g_log(0,8,133728,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetLastModifiedTime($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133639,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_GetLength($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133560,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_CreateFileExclusively($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133469,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Delete($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133393,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_List($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133319,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_CreateDirectory($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,133234,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Rename($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133158,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetLastModifiedTime($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,133069,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_SetReadOnly($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,132988,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_ListRoots($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,132909,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_io_file_system_real_GetSpace($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,132831,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_Compare($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,132754,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_real_HashCode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,132676,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_file_system_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143976)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,132657,119668,16)|0);
  _g_once_init_leave(143976,$4);
 }
 $5 = HEAP32[35994]|0;
 (_g_type_check_instance_cast($0,$5)|0);
 $6 = HEAP32[35995]|0;
 $7 = (_g_type_check_class_cast($6,80)|0);
 $8 = ((($6)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$0);
 return;
}
function _system_io_input_stream_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 96|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_input_stream_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($6)) + 100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_iiiiiii($8|0,$0,$1,$2,$3,$4,$5)|0);
 return ($9|0);
}
function _system_io_input_stream_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 112|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _system_io_input_stream_construct($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_object_construct($0)|0);
 return ($1|0);
}
function _system_io_input_stream_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(143984)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $5 = HEAP32[35996]|0;
  return ($5|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,134798,119704,16)|0);
 $4 = (_system_io_closeable_get_type()|0);
 _g_type_add_interface_static($3,$4,119740);
 _g_once_init_leave(143984,$3);
 $5 = HEAP32[35996]|0;
 return ($5|0);
}
function _system_io_input_stream_system_io_closeable_interface_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_interface_peek_parent($0)|0);
 HEAP32[35997] = $1;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 330;
 return;
}
function _system_io_input_stream_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[35998] = $1;
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 331;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 332;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 333;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 334;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 335;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 336;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 337;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 338;
 return;
}
function _system_io_input_stream_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,134930,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_input_stream_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0193 = 0, $$9 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $spec$select212 = 0, $spec$select212229 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer19 = 0, $vararg_buffer26 = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr17 = 0;
 var $vararg_ptr18 = 0, $vararg_ptr2 = 0, $vararg_ptr22 = 0, $vararg_ptr23 = 0, $vararg_ptr24 = 0, $vararg_ptr25 = 0, $vararg_ptr29 = 0, $vararg_ptr3 = 0, $vararg_ptr30 = 0, $vararg_ptr31 = 0, $vararg_ptr32 = 0, $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $vararg_buffer26 = sp + 96|0;
 $vararg_buffer19 = sp + 72|0;
 $vararg_buffer12 = sp + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $6 = sp + 116|0;
 HEAP32[$6>>2] = 0;
 $7 = ($1|0)==(0|0);
 if ($7) {
  $8 = (_system_exception_quark()|0);
  $9 = (_g_error_new_literal($8,9,144793)|0);
  HEAP32[$6>>2] = $9;
  $10 = HEAP32[$9>>2]|0;
  $11 = (_system_io_exception_quark()|0);
  $12 = ($10|0)==($11|0);
  if ($12) {
   _g_propagate_error($5,$9);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $13 = ((($9)) + 8|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = HEAP32[$9>>2]|0;
   $16 = (_g_quark_to_string($15)|0);
   $17 = ((($9)) + 4|0);
   $18 = HEAP32[$17>>2]|0;
   HEAP32[$vararg_buffer>>2] = 134843;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 251;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $14;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $16;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $18;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $19 = $4 | $3;
 $20 = ($19|0)>(-1);
 $21 = (($2) - ($3))|0;
 $22 = ($21|0)>=($4|0);
 $23 = $22 & $20;
 if (!($23)) {
  $24 = (_system_io_exception_quark()|0);
  $25 = (_g_error_new_literal($24,3,144793)|0);
  HEAP32[$6>>2] = $25;
  $26 = HEAP32[$25>>2]|0;
  $27 = (_system_io_exception_quark()|0);
  $28 = ($26|0)==($27|0);
  if ($28) {
   _g_propagate_error($5,$25);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $29 = ((($25)) + 8|0);
   $30 = HEAP32[$29>>2]|0;
   $31 = HEAP32[$25>>2]|0;
   $32 = (_g_quark_to_string($31)|0);
   $33 = ((($25)) + 4|0);
   $34 = HEAP32[$33>>2]|0;
   HEAP32[$vararg_buffer5>>2] = 134843;
   $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
   HEAP32[$vararg_ptr8>>2] = 290;
   $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
   HEAP32[$vararg_ptr9>>2] = $30;
   $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
   HEAP32[$vararg_ptr10>>2] = $32;
   $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
   HEAP32[$vararg_ptr11>>2] = $34;
   _g_log(0,8,140862,$vararg_buffer5);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $35 = ($4|0)==(0);
 if ($35) {
  $36 = ($2|0)==(0);
  if ($36) {
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $$0193 = $2;
  }
 } else {
  $$0193 = $4;
 }
 $37 = HEAP32[$0>>2]|0;
 $38 = ((($37)) + 96|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = (ftCall_iii($39|0,$0,$6)|0);
 $41 = HEAP32[$6>>2]|0;
 $42 = ($41|0)==(0|0);
 if (!($42)) {
  $43 = HEAP32[$41>>2]|0;
  $44 = (_system_io_exception_quark()|0);
  $45 = ($43|0)==($44|0);
  $46 = HEAP32[$6>>2]|0;
  if ($45) {
   _g_propagate_error($5,$46);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $47 = ((($46)) + 8|0);
   $48 = HEAP32[$47>>2]|0;
   $49 = HEAP32[$46>>2]|0;
   $50 = (_g_quark_to_string($49)|0);
   $51 = ((($46)) + 4|0);
   $52 = HEAP32[$51>>2]|0;
   HEAP32[$vararg_buffer12>>2] = 134843;
   $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
   HEAP32[$vararg_ptr15>>2] = 321;
   $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
   HEAP32[$vararg_ptr16>>2] = $48;
   $vararg_ptr17 = ((($vararg_buffer12)) + 12|0);
   HEAP32[$vararg_ptr17>>2] = $50;
   $vararg_ptr18 = ((($vararg_buffer12)) + 16|0);
   HEAP32[$vararg_ptr18>>2] = $52;
   _g_log(0,8,140862,$vararg_buffer12);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 $53 = ($40|0)==(-1);
 if ($53) {
  $$9 = -1;
  STACKTOP = sp;return ($$9|0);
 }
 $54 = $40&255;
 $55 = (($1) + ($3)|0);
 HEAP8[$55>>0] = $54;
 $56 = ($$0193|0)>(1);
 if (!($56)) {
  $$9 = 1;
  STACKTOP = sp;return ($$9|0);
 }
 $spec$select212229 = 1;
 while(1) {
  $57 = HEAP32[$0>>2]|0;
  $58 = ((($57)) + 96|0);
  $59 = HEAP32[$58>>2]|0;
  $60 = (ftCall_iii($59|0,$0,$6)|0);
  $61 = HEAP32[$6>>2]|0;
  $62 = ($61|0)==(0|0);
  if (!($62)) {
   label = 19;
   break;
  }
  $73 = ($60|0)==(-1);
  if ($73) {
   $$9 = $spec$select212229;
   label = 28;
   break;
  }
  $74 = (($spec$select212229) + ($3))|0;
  $75 = (($1) + ($74)|0);
  $76 = $60&255;
  HEAP8[$75>>0] = $76;
  $spec$select212 = (($spec$select212229) + 1)|0;
  $77 = ($spec$select212|0)<($$0193|0);
  if ($77) {
   $spec$select212229 = $spec$select212;
  } else {
   $$9 = $spec$select212;
   label = 28;
   break;
  }
 }
 if ((label|0) == 19) {
  $63 = HEAP32[$61>>2]|0;
  $64 = (_system_io_exception_quark()|0);
  $65 = ($63|0)==($64|0);
  $66 = HEAP32[$6>>2]|0;
  if (!($65)) {
   $67 = ((($66)) + 8|0);
   $68 = HEAP32[$67>>2]|0;
   $69 = HEAP32[$66>>2]|0;
   $70 = (_g_quark_to_string($69)|0);
   $71 = ((($66)) + 4|0);
   $72 = HEAP32[$71>>2]|0;
   HEAP32[$vararg_buffer19>>2] = 134843;
   $vararg_ptr22 = ((($vararg_buffer19)) + 4|0);
   HEAP32[$vararg_ptr22>>2] = 372;
   $vararg_ptr23 = ((($vararg_buffer19)) + 8|0);
   HEAP32[$vararg_ptr23>>2] = $68;
   $vararg_ptr24 = ((($vararg_buffer19)) + 12|0);
   HEAP32[$vararg_ptr24>>2] = $70;
   $vararg_ptr25 = ((($vararg_buffer19)) + 16|0);
   HEAP32[$vararg_ptr25>>2] = $72;
   _g_log(0,8,134882,$vararg_buffer19);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
  HEAP32[$6>>2] = 0;
  $78 = ($66|0)==(0|0);
  if ($78) {
   $$9 = $spec$select212229;
   STACKTOP = sp;return ($$9|0);
  }
  _g_error_free($66);
  $$pre = HEAP32[$6>>2]|0;
  $79 = ($$pre|0)==(0|0);
  if ($79) {
   $$9 = $spec$select212229;
   STACKTOP = sp;return ($$9|0);
  }
  $80 = HEAP32[$$pre>>2]|0;
  $81 = (_system_io_exception_quark()|0);
  $82 = ($80|0)==($81|0);
  $83 = HEAP32[$6>>2]|0;
  if ($82) {
   _g_propagate_error($5,$83);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  } else {
   $84 = ((($83)) + 8|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = HEAP32[$83>>2]|0;
   $87 = (_g_quark_to_string($86)|0);
   $88 = ((($83)) + 4|0);
   $89 = HEAP32[$88>>2]|0;
   HEAP32[$vararg_buffer26>>2] = 134843;
   $vararg_ptr29 = ((($vararg_buffer26)) + 4|0);
   HEAP32[$vararg_ptr29>>2] = 407;
   $vararg_ptr30 = ((($vararg_buffer26)) + 8|0);
   HEAP32[$vararg_ptr30>>2] = $85;
   $vararg_ptr31 = ((($vararg_buffer26)) + 12|0);
   HEAP32[$vararg_ptr31>>2] = $87;
   $vararg_ptr32 = ((($vararg_buffer26)) + 16|0);
   HEAP32[$vararg_ptr32>>2] = $89;
   _g_log(0,8,140862,$vararg_buffer26);
   _g_clear_error($6);
   $$9 = 0;
   STACKTOP = sp;return ($$9|0);
  }
 }
 else if ((label|0) == 28) {
  STACKTOP = sp;return ($$9|0);
 }
 return (0)|0;
}
function _system_io_input_stream_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0115126 = 0, $$2 = 0, $$not = 0, $10 = Math_fround(0), $11 = Math_fround(0), $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $4 = 0, $5 = Math_fround(0), $6 = Math_fround(0), $7 = 0, $8 = 0, $9 = Math_fround(0), $or$cond = 0, $spec$select122 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(1);
 if ($4) {
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $5 = (Math_fround(($1|0)));
 $6 = (Math_fround(+(_llvm_minnum_f32((+$5),2048.0))));
 $7 = (~~(($6)));
 $8 = (_g_malloc0($7)|0);
 $9 = (Math_fround(($7|0)));
 $$0115126 = $1;
 while(1) {
  $10 = (Math_fround(($$0115126|0)));
  $11 = (Math_fround(+(_llvm_minnum_f32((+$9),(+$10)))));
  $12 = (~~(($11)));
  $13 = HEAP32[$0>>2]|0;
  $14 = ((($13)) + 100|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = (ftCall_iiiiiii($15|0,$0,$8,$7,0,$12,$3)|0);
  $17 = HEAP32[$3>>2]|0;
  $18 = ($17|0)==(0|0);
  if (!($18)) {
   break;
  }
  $30 = ($16|0)<(0);
  $31 = $30 ? 0 : $16;
  $spec$select122 = (($$0115126) - ($31))|0;
  $$not = $30 ^ 1;
  $32 = ($spec$select122|0)>(0);
  $or$cond = $32 & $$not;
  if ($or$cond) {
   $$0115126 = $spec$select122;
  } else {
   label = 8;
   break;
  }
 }
 if ((label|0) == 8) {
  $33 = (($1) - ($spec$select122))|0;
  _g_free($8);
  $$2 = $33;
  STACKTOP = sp;return ($$2|0);
 }
 $19 = HEAP32[$17>>2]|0;
 $20 = (_system_io_exception_quark()|0);
 $21 = ($19|0)==($20|0);
 if ($21) {
  $22 = HEAP32[$3>>2]|0;
  _g_propagate_error($2,$22);
  _g_free($8);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 } else {
  _g_free($8);
  $23 = HEAP32[$3>>2]|0;
  $24 = ((($23)) + 8|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = HEAP32[$23>>2]|0;
  $27 = (_g_quark_to_string($26)|0);
  $28 = ((($23)) + 4|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$vararg_buffer>>2] = 134843;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 509;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $25;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $27;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $29;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($3);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _system_io_input_stream_real_Available($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_input_stream_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_Mark($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _system_io_input_stream_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_input_stream_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,6,134818)|0);
 HEAP32[$2>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($1,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 134843;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 709;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_input_stream_reader_new($0) {
 $0 = $0|0;
 var $$in$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143996)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135008,119752,0)|0);
  _g_once_init_leave(143996,$4);
 }
 $5 = HEAP32[35999]|0;
 $6 = (_system_io_reader_construct($5,0)|0);
 $7 = ($0|0)==(0|0);
 if ($7) {
  $14 = 0;
 } else {
  $8 = (_g_object_ref($0)|0);
  $14 = $0;
 }
 $9 = ((($6)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$10>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$in$i = $10;
  HEAP32[$$in$i>>2] = $14;
  return ($6|0);
 }
 _g_object_unref($11);
 $13 = HEAP32[$9>>2]|0;
 HEAP32[$13>>2] = 0;
 $$in$i = $13;
 HEAP32[$$in$i>>2] = $14;
 return ($6|0);
}
function _system_io_input_stream_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36000] = $1;
 _g_type_class_add_private($0,4);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 339;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 340;
 $4 = ((($0)) + 124|0);
 HEAP32[$4>>2] = 341;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 36|0);
 HEAP32[$6>>2] = 342;
 return;
}
function _system_io_input_stream_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143996)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135008,119752,0)|0);
  _g_once_init_leave(143996,$4);
 }
 $5 = HEAP32[35999]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_io_input_stream_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_input_stream_ReadOne($5,$2)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = $6;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = HEAP32[$7>>2]|0;
 $10 = (_system_io_exception_quark()|0);
 $11 = ($9|0)==($10|0);
 $12 = HEAP32[$2>>2]|0;
 if ($11) {
  _g_propagate_error($1,$12);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $13 = ((($12)) + 8|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$12>>2]|0;
  $16 = (_g_quark_to_string($15)|0);
  $17 = ((($12)) + 4|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135034;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 222;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $14;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $16;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $18;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _system_io_input_stream_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $6 = sp + 20|0;
 HEAP32[$6>>2] = 0;
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = (_system_io_input_stream_Read($9,$1,$2,$3,$4,$6)|0);
 $11 = HEAP32[$6>>2]|0;
 $12 = ($11|0)==(0|0);
 if ($12) {
  $$0 = $10;
  STACKTOP = sp;return ($$0|0);
 }
 $13 = HEAP32[$11>>2]|0;
 $14 = (_system_io_exception_quark()|0);
 $15 = ($13|0)==($14|0);
 $16 = HEAP32[$6>>2]|0;
 if ($15) {
  _g_propagate_error($5,$16);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $17 = ((($16)) + 8|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = HEAP32[$16>>2]|0;
  $20 = (_g_quark_to_string($19)|0);
  $21 = ((($16)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135034;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 270;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $18;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $20;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($6);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _system_io_input_stream_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 _system_io_input_stream_Close($5,$2);
 $6 = HEAP32[$2>>2]|0;
 $7 = ($6|0)==(0|0);
 if ($7) {
  STACKTOP = sp;return;
 }
 $8 = HEAP32[$6>>2]|0;
 $9 = (_system_io_exception_quark()|0);
 $10 = ($8|0)==($9|0);
 $11 = HEAP32[$2>>2]|0;
 if ($10) {
  _g_propagate_error($1,$11);
  STACKTOP = sp;return;
 } else {
  $12 = ((($11)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$11>>2]|0;
  $15 = (_g_quark_to_string($14)|0);
  $16 = ((($11)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135034;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 299;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $13;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $15;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $17;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_input_stream_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(143996)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_io_reader_get_type()|0);
  $4 = (_g_type_register_static($3,135008,119752,0)|0);
  _g_once_init_leave(143996,$4);
 }
 $5 = HEAP32[35999]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0|0);
 if (!($10)) {
  _g_object_unref($9);
  $11 = HEAP32[$7>>2]|0;
  HEAP32[$11>>2] = 0;
 }
 $12 = HEAP32[36000]|0;
 $13 = (_g_type_check_class_cast($12,80)|0);
 $14 = ((($12)) + 36|0);
 $15 = HEAP32[$14>>2]|0;
 ftCall_vi($15|0,$0);
 return;
}
function _system_io_closeable_base_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[36002]|0;
 $2 = ($1|0)==(0);
 if (!($2)) {
  return;
 }
 HEAP32[36002] = 1;
 return;
}
function _system_io_closeable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144004)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36001]|0;
  return ($4|0);
 }
 $2 = (_g_type_register_static(8,135079,119788,0)|0);
 $3 = (_object_get_type()|0);
 _g_type_interface_add_prerequisite($2,$3);
 _g_once_init_leave(144004,$2);
 $4 = HEAP32[36001]|0;
 return ($4|0);
}
function _system_io_reader_construct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$ = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_object_construct($0)|0);
 $3 = ($1|0)==(0|0);
 $$ = $3 ? $2 : $1;
 $4 = ($$|0)==(0|0);
 if ($4) {
  $9 = 0;
 } else {
  $5 = (_g_object_ref($$)|0);
  $9 = $$;
 }
 $6 = ((($2)) + 20|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)==(0|0);
 if ($8) {
  HEAP32[$6>>2] = $9;
  return ($2|0);
 }
 _g_object_unref($7);
 HEAP32[$6>>2] = 0;
 HEAP32[$6>>2] = $9;
 return ($2|0);
}
function _system_io_reader_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = HEAP32[$0>>2]|0;
 $7 = ((($6)) + 100|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (ftCall_iiiiiii($8|0,$0,$1,$2,$3,$4,$5)|0);
 return ($9|0);
}
function _system_io_reader_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 108|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_io_reader_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 124|0);
 $4 = HEAP32[$3>>2]|0;
 ftCall_vii($4|0,$0,$1);
 return;
}
function _system_io_reader_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144012)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $5 = HEAP32[36003]|0;
  return ($5|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,135097,119824,16)|0);
 $4 = (_system_io_closeable_get_type()|0);
 _g_type_add_interface_static($3,$4,119860);
 _g_once_init_leave(144012,$3);
 $5 = HEAP32[36003]|0;
 return ($5|0);
}
function _system_io_reader_system_io_closeable_interface_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_interface_peek_parent($0)|0);
 HEAP32[36004] = $1;
 $2 = ((($0)) + 8|0);
 HEAP32[$2>>2] = 343;
 return;
}
function _system_io_reader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36005] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 344;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 345;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 346;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 347;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 348;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 349;
 $8 = ((($0)) + 120|0);
 HEAP32[$8>>2] = 350;
 $9 = ((($0)) + 124|0);
 HEAP32[$9>>2] = 351;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 36|0);
 HEAP32[$11>>2] = 352;
 return;
}
function _system_io_reader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144012)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,135097,119824,16)|0);
  $5 = (_system_io_closeable_get_type()|0);
  _g_type_add_interface_static($4,$5,119860);
  _g_once_init_leave(144012,$4);
 }
 $6 = HEAP32[36003]|0;
 $7 = (_g_type_instance_get_private($0,$6)|0);
 $8 = ((($0)) + 16|0);
 HEAP32[$8>>2] = $7;
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($9)) + 12|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($9)) + 16|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($9)) + 20|0);
 HEAP32[$12>>2] = 0;
 return;
}
function _system_io_reader_real_ReadOne($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 HEAP32[$2>>2] = 0;
 $3 = (_g_malloc0(1)|0);
 $4 = HEAP32[$0>>2]|0;
 $5 = ((($4)) + 100|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_iiiiiii($6|0,$0,$3,1,0,1,$2)|0);
 $8 = HEAP32[$2>>2]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  $21 = ($7|0)==(-1);
  if ($21) {
   _g_free($3);
   $$0 = -1;
   STACKTOP = sp;return ($$0|0);
  } else {
   $22 = HEAP8[$3>>0]|0;
   $23 = $22 << 24 >> 24;
   _g_free($3);
   $$0 = $23;
   STACKTOP = sp;return ($$0|0);
  }
 } else {
  $10 = HEAP32[$8>>2]|0;
  $11 = (_system_io_exception_quark()|0);
  $12 = ($10|0)==($11|0);
  if ($12) {
   $13 = HEAP32[$2>>2]|0;
   _g_propagate_error($1,$13);
   _g_free($3);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  } else {
   _g_free($3);
   $14 = HEAP32[$2>>2]|0;
   $15 = ((($14)) + 8|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = HEAP32[$14>>2]|0;
   $18 = (_g_quark_to_string($17)|0);
   $19 = ((($14)) + 4|0);
   $20 = HEAP32[$19>>2]|0;
   HEAP32[$vararg_buffer>>2] = 135204;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 221;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $16;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $18;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $20;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($2);
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 return (0)|0;
}
function _system_io_reader_real_Read($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $6 = 0, $7 = 0, $8 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $6 = HEAP32[$0>>2]|0;
 $7 = HEAP32[$6>>2]|0;
 $8 = (_g_type_name($7)|0);
 HEAP32[$vararg_buffer>>2] = $8;
 _g_log(0,8,135283,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_io_reader_real_Skip($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0154 = 0, $$0158 = 0, $$1159 = 0, $$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $17 = 0.0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0.0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0.0, $43 = 0.0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $spec$select = 0, $spec$select161 = 0, $spec$select163 = 0, $spec$select164 = 0, $trunc = 0, $trunc$clear = 0, $vararg_buffer = 0, $vararg_buffer5 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr8 = 0, $vararg_ptr9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer5 = sp + 24|0;
 $vararg_buffer = sp;
 $3 = sp + 44|0;
 HEAP32[$3>>2] = 0;
 $4 = ($1|0)<(0);
 if ($4) {
  $5 = (_system_io_exception_quark()|0);
  $6 = (_g_error_new_literal($5,2,135260)|0);
  HEAP32[$3>>2] = $6;
  $7 = HEAP32[$6>>2]|0;
  $8 = (_system_io_exception_quark()|0);
  $9 = ($7|0)==($8|0);
  if ($9) {
   _g_propagate_error($2,$6);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  } else {
   $10 = ((($6)) + 8|0);
   $11 = HEAP32[$10>>2]|0;
   $12 = HEAP32[$6>>2]|0;
   $13 = (_g_quark_to_string($12)|0);
   $14 = ((($6)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   HEAP32[$vararg_buffer>>2] = 135204;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 304;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = $11;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $13;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $15;
   _g_log(0,8,140862,$vararg_buffer);
   _g_clear_error($3);
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $16 = (+($1|0));
 $17 = (+_llvm_minnum_f64((+$16),8192.0));
 $18 = (~~(($17)));
 $19 = ((($0)) + 16|0);
 $20 = HEAP32[$19>>2]|0;
 $21 = ((($20)) + 12|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = ($22|0)==(0|0);
 if ($23) {
  label = 7;
 } else {
  $24 = ((($20)) + 16|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = ($25|0)<($18|0);
  if ($26) {
   label = 7;
  }
 }
 if ((label|0) == 7) {
  $27 = (_g_malloc0($18)|0);
  $28 = HEAP32[$19>>2]|0;
  $29 = ((($28)) + 12|0);
  $30 = HEAP32[$29>>2]|0;
  _g_free($30);
  $31 = HEAP32[$19>>2]|0;
  $32 = ((($31)) + 12|0);
  HEAP32[$32>>2] = $27;
  $33 = ((($31)) + 16|0);
  HEAP32[$33>>2] = $18;
  $34 = ((($31)) + 20|0);
  HEAP32[$34>>2] = $18;
 }
 $35 = (+($18|0));
 $$0158 = $1;
 L14: while(1) {
  $36 = ($$0158|0)>(0);
  if ($36) {
   $37 = HEAP32[$19>>2]|0;
   $38 = ((($37)) + 12|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($37)) + 16|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (+($$0158|0));
   $43 = (+_llvm_minnum_f64((+$42),(+$35)));
   $44 = (~~(($43)));
   $45 = HEAP32[$0>>2]|0;
   $46 = ((($45)) + 100|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (ftCall_iiiiiii($47|0,$0,$39,$41,0,$44,$3)|0);
   $49 = HEAP32[$3>>2]|0;
   $50 = ($49|0)!=(0|0);
   $51 = ($48|0)==(-1);
   $spec$select161 = $51 ? 3 : 0;
   $52 = $51 | $50;
   $spec$select = $52 ? 0 : $48;
   $spec$select163 = (($$0158) - ($spec$select))|0;
   $spec$select164 = $50 ? 4 : $spec$select161;
   $$0154 = $spec$select164;$$1159 = $spec$select163;
  } else {
   $$0154 = 3;$$1159 = $$0158;
  }
  $trunc = $$0154&255;
  $trunc$clear = $trunc & 7;
  switch ($trunc$clear<<24>>24) {
  case 0:  {
   $$0158 = $$1159;
   break;
  }
  case 3:  {
   label = 12;
   break L14;
   break;
  }
  default: {
   break L14;
  }
  }
 }
 if ((label|0) == 12) {
  $53 = (($1) - ($$1159))|0;
  $$3 = $53;
  STACKTOP = sp;return ($$3|0);
 }
 $cond = ($$0154|0)==(4);
 if (!($cond)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $54 = HEAP32[$3>>2]|0;
 $55 = HEAP32[$54>>2]|0;
 $56 = (_system_io_exception_quark()|0);
 $57 = ($55|0)==($56|0);
 $58 = HEAP32[$3>>2]|0;
 if ($57) {
  _g_propagate_error($2,$58);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 } else {
  $59 = ((($58)) + 8|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = HEAP32[$58>>2]|0;
  $62 = (_g_quark_to_string($61)|0);
  $63 = ((($58)) + 4|0);
  $64 = HEAP32[$63>>2]|0;
  HEAP32[$vararg_buffer5>>2] = 135204;
  $vararg_ptr8 = ((($vararg_buffer5)) + 4|0);
  HEAP32[$vararg_ptr8>>2] = 406;
  $vararg_ptr9 = ((($vararg_buffer5)) + 8|0);
  HEAP32[$vararg_ptr9>>2] = $60;
  $vararg_ptr10 = ((($vararg_buffer5)) + 12|0);
  HEAP32[$vararg_ptr10>>2] = $62;
  $vararg_ptr11 = ((($vararg_buffer5)) + 16|0);
  HEAP32[$vararg_ptr11>>2] = $64;
  _g_log(0,8,140862,$vararg_buffer5);
  _g_clear_error($3);
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 return (0)|0;
}
function _system_io_reader_real_Ready($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_reader_real_MarkSupported($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function _system_io_reader_real_Mark($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = (_system_io_exception_quark()|0);
 $5 = (_g_error_new_literal($4,0,135238)|0);
 HEAP32[$3>>2] = $5;
 $6 = HEAP32[$5>>2]|0;
 $7 = (_system_io_exception_quark()|0);
 $8 = ($6|0)==($7|0);
 if ($8) {
  _g_propagate_error($2,$5);
  STACKTOP = sp;return;
 } else {
  $9 = ((($5)) + 8|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = HEAP32[$5>>2]|0;
  $12 = (_g_quark_to_string($11)|0);
  $13 = ((($5)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135204;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 484;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $12;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($3);
  STACKTOP = sp;return;
 }
}
function _system_io_reader_real_Reset($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $2 = sp + 20|0;
 $3 = (_system_io_exception_quark()|0);
 $4 = (_g_error_new_literal($3,0,135182)|0);
 HEAP32[$2>>2] = $4;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_io_exception_quark()|0);
 $7 = ($5|0)==($6|0);
 if ($7) {
  _g_propagate_error($1,$4);
  STACKTOP = sp;return;
 } else {
  $8 = ((($4)) + 8|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = HEAP32[$4>>2]|0;
  $11 = (_g_quark_to_string($10)|0);
  $12 = ((($4)) + 4|0);
  $13 = HEAP32[$12>>2]|0;
  HEAP32[$vararg_buffer>>2] = 135204;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 519;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $9;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $11;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $13;
  _g_log(0,8,140862,$vararg_buffer);
  _g_clear_error($2);
  STACKTOP = sp;return;
 }
}
function _system_io_reader_real_Close($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135112,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_io_reader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144012)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,135097,119824,16)|0);
  $5 = (_system_io_closeable_get_type()|0);
  _g_type_add_interface_static($4,$5,119860);
  _g_once_init_leave(144012,$4);
 }
 $6 = HEAP32[36003]|0;
 $7 = (_g_type_check_instance_cast($0,$6)|0);
 $8 = ((($0)) + 16|0);
 $9 = ((($0)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  HEAP32[$9>>2] = 0;
 }
 $12 = HEAP32[$8>>2]|0;
 $13 = ((($12)) + 12|0);
 $14 = HEAP32[$13>>2]|0;
 _g_free($14);
 $15 = HEAP32[$8>>2]|0;
 $16 = ((($15)) + 12|0);
 HEAP32[$16>>2] = 0;
 $17 = HEAP32[36005]|0;
 $18 = (_g_type_check_class_cast($17,80)|0);
 $19 = ((($17)) + 36|0);
 $20 = HEAP32[$19>>2]|0;
 ftCall_vi($20|0,$0);
 return;
}
function _object_construct($0) {
 $0 = $0|0;
 var $1 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = (_g_object_new($0,0,$vararg_buffer)|0);
 STACKTOP = sp;return ($1|0);
}
function _object_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144024)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_g_type_register_static(80,135352,119872,16)|0);
  _g_once_init_leave(144024,$2);
 }
 $3 = HEAP32[36006]|0;
 return ($3|0);
}
function _object_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36007] = $1;
 $2 = ((($0)) + 80|0);
 HEAP32[$2>>2] = 353;
 $3 = ((($0)) + 84|0);
 HEAP32[$3>>2] = 354;
 $4 = ((($0)) + 88|0);
 HEAP32[$4>>2] = 355;
 $5 = ((($0)) + 92|0);
 HEAP32[$5>>2] = 356;
 return;
}
function _object_instance_init($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _object_real_ToString($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_check_instance_cast($0,80)|0);
 $2 = (_g_object_to_string($0)|0);
 return ($2|0);
}
function _object_real_Equals($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_type_check_instance_cast($0,80)|0);
 $3 = (_g_object_equals($0,$1)|0);
 return ($3|0);
}
function _object_real_GetHashCode($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_check_instance_cast($0,80)|0);
 $2 = (_g_object_get_hash_code($0)|0);
 return ($2|0);
}
function _object_real_Clone($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $phitmp = 0, $phitmp55 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer1 = sp + 8|0;
 $vararg_buffer = sp;
 $2 = sp + 28|0;
 HEAP32[$2>>2] = 0;
 $3 = (_system_icloneable_get_type()|0);
 $4 = ($0|0)==(0|0);
 $5 = HEAP32[$0>>2]|0;
 do {
  if ($4) {
   $6 = HEAP32[$5>>2]|0;
   $27 = $6;
  } else {
   $7 = ($5|0)==(0|0);
   if ($7) {
    $40 = 0;
    label = 5;
   } else {
    $8 = HEAP32[$5>>2]|0;
    $9 = ($8|0)==($3|0);
    if ($9) {
     $11 = $3;
    } else {
     $40 = $8;
     label = 5;
    }
   }
   if ((label|0) == 5) {
    $10 = (_g_type_check_instance_is_a($0,$3)|0);
    $phitmp = ($10|0)==(0);
    if ($phitmp) {
     $27 = $40;
     break;
    } else {
     $11 = $40;
    }
   }
   $12 = (_g_object_new($11,0,$vararg_buffer)|0);
   $13 = (_g_initially_unowned_get_type()|0);
   $14 = ($12|0)==(0|0);
   do {
    if ($14) {
     $25 = 0;
    } else {
     $15 = HEAP32[$12>>2]|0;
     $16 = ($15|0)==(0|0);
     if ($16) {
      label = 9;
     } else {
      $17 = HEAP32[$15>>2]|0;
      $18 = ($17|0)==($13|0);
      if (!($18)) {
       label = 9;
      }
     }
     if ((label|0) == 9) {
      $19 = (_g_type_check_instance_is_a($12,$13)|0);
      $phitmp55 = ($19|0)==(0);
      if ($phitmp55) {
       $25 = $12;
       break;
      }
     }
     $20 = (_g_object_ref_sink($12)|0);
     $25 = $12;
    }
   } while(0);
   $21 = (_g_once_init_enter(144024)|0);
   $22 = ($21|0)==(0);
   if (!($22)) {
    $23 = (_g_type_register_static(80,135352,119872,16)|0);
    _g_once_init_leave(144024,$23);
   }
   $24 = HEAP32[36006]|0;
   $26 = (_g_type_check_instance_cast($25,$24)|0);
   $$0 = $25;
   STACKTOP = sp;return ($$0|0);
  }
 } while(0);
 $28 = (_g_type_name($27)|0);
 $29 = (_system_exception_quark()|0);
 $30 = (_g_error_new_literal($29,2,$28)|0);
 HEAP32[$2>>2] = $30;
 $31 = HEAP32[$30>>2]|0;
 $32 = (_system_exception_quark()|0);
 $33 = ($31|0)==($32|0);
 if ($33) {
  _g_propagate_error($1,$30);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 } else {
  $34 = ((($30)) + 8|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = HEAP32[$30>>2]|0;
  $37 = (_g_quark_to_string($36)|0);
  $38 = ((($30)) + 4|0);
  $39 = HEAP32[$38>>2]|0;
  HEAP32[$vararg_buffer1>>2] = 135359;
  $vararg_ptr3 = ((($vararg_buffer1)) + 4|0);
  HEAP32[$vararg_ptr3>>2] = 173;
  $vararg_ptr4 = ((($vararg_buffer1)) + 8|0);
  HEAP32[$vararg_ptr4>>2] = $35;
  $vararg_ptr5 = ((($vararg_buffer1)) + 12|0);
  HEAP32[$vararg_ptr5>>2] = $37;
  $vararg_ptr6 = ((($vararg_buffer1)) + 16|0);
  HEAP32[$vararg_ptr6>>2] = $39;
  _g_log(0,8,140862,$vararg_buffer1);
  _g_clear_error($2);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 return (0)|0;
}
function _system_collections_generic_collection_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_system_collections_generic_iterable_construct($0,$1,$2,$3)|0);
 $5 = ((($4)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_collection_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_collection_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144032)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36008]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_iterable_get_type()|0);
 $3 = (_g_type_register_static($2,135396,119908,16)|0);
 _g_once_init_leave(144032,$3);
 $4 = HEAP32[36008]|0;
 return ($4|0);
}
function _system_collections_generic_collection_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36009] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = 357;
 $3 = ((($0)) + 108|0);
 HEAP32[$3>>2] = 358;
 $4 = ((($0)) + 112|0);
 HEAP32[$4>>2] = 359;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 360;
 $6 = ((($0)) + 120|0);
 HEAP32[$6>>2] = 361;
 $7 = ((($0)) + 124|0);
 HEAP32[$7>>2] = 362;
 $8 = (_g_once_init_enter(144032)|0);
 $9 = ($8|0)==(0);
 if (!($9)) {
  $10 = (_system_collections_generic_iterable_get_type()|0);
  $11 = (_g_type_register_static($10,135396,119908,16)|0);
  _g_once_init_leave(144032,$11);
 }
 $12 = HEAP32[36008]|0;
 $13 = (_g_type_check_class_cast($0,$12)|0);
 $14 = ((($0)) + 132|0);
 HEAP32[$14>>2] = 363;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 28|0);
 HEAP32[$16>>2] = 364;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = ((($0)) + 24|0);
 HEAP32[$18>>2] = 365;
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_gtype(139075,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(139087,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(139107,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
 HEAP32[(142160)>>2] = $26;
 _g_object_class_install_property($0,4,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_boolean(135431,135431,135431,0,225)|0);
 HEAP32[(142164)>>2] = $28;
 _g_object_class_install_property($0,5,$28);
 return;
}
function _system_collections_generic_collection_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144032)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterable_get_type()|0);
  $4 = (_g_type_register_static($3,135396,119908,16)|0);
  _g_once_init_leave(144032,$4);
 }
 $5 = HEAP32[36008]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_collection_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135766,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135677,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,135585,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_collection_real_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,135494,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_collection_real_AddAll($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$052$lcssa = 0, $$05255 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_collections_generic_iterable_iterator($1)|0);
 $3 = (_system_collections_generic_iterator_next($2)|0);
 $4 = ($3|0)==(0);
 if ($4) {
  $$052$lcssa = 0;
 } else {
  $5 = ((($0)) + 20|0);
  $$05255 = 0;
  while(1) {
   $6 = (_system_collections_generic_iterator_get($2)|0);
   $7 = HEAP32[$0>>2]|0;
   $8 = ((($7)) + 104|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = (ftCall_iii($9|0,$0,$6)|0);
   $11 = ($10|0)==(0);
   if ($11) {
    $12 = HEAP32[$0>>2]|0;
    $13 = ((($12)) + 108|0);
    $14 = HEAP32[$13>>2]|0;
    (ftCall_iii($14|0,$0,$6)|0);
    $$1 = 1;
   } else {
    $$1 = $$05255;
   }
   $15 = ($6|0)==(0|0);
   if (!($15)) {
    $16 = HEAP32[$5>>2]|0;
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ($18|0)==(0|0);
    if (!($19)) {
     ftCall_vi($18|0,$6);
    }
   }
   $20 = (_system_collections_generic_iterator_next($2)|0);
   $21 = ($20|0)==(0);
   if ($21) {
    $$052$lcssa = $$1;
    break;
   } else {
    $$05255 = $$1;
   }
  }
 }
 $22 = ($2|0)==(0|0);
 if ($22) {
  return ($$052$lcssa|0);
 }
 _g_object_unref($2);
 return ($$052$lcssa|0);
}
function _system_collections_generic_collection_real_ToArray($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0101104$i = 0, $$0101104$i345 = 0, $$0101104$i357 = 0, $$0101104$i361 = 0, $$0322403 = 0, $$08790$i = 0, $$08790$i330 = 0, $$09396$i = 0, $$09396$i334 = 0, $$09396$i338 = 0, $$09396$i349 = 0, $$09396$i353 = 0, $$09396$i365 = 0, $$11 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0;
 var $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0;
 var $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0;
 var $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0;
 var $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0;
 var $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (($4) + -12)|0;
 $6 = $5 >>> 2;
 $7 = $5 << 30;
 $8 = $6 | $7;
 do {
  switch ($8|0) {
  case 2:  {
   $9 = (_g_once_init_enter(144032)|0);
   $10 = ($9|0)==(0);
   if (!($10)) {
    $11 = (_system_collections_generic_iterable_get_type()|0);
    $12 = (_g_type_register_static($11,135396,119908,16)|0);
    _g_once_init_leave(144032,$12);
   }
   $13 = HEAP32[36008]|0;
   $14 = (_g_type_check_instance_cast($0,$13)|0);
   $15 = HEAP32[$0>>2]|0;
   $16 = ((($15)) + 128|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (ftCall_ii($17|0,$0)|0);
   $19 = (_g_malloc0_n($18,4)|0);
   $20 = (_system_collections_generic_iterable_iterator($0)|0);
   $21 = (_system_collections_generic_iterator_next($20)|0);
   $22 = ($21|0)==(0);
   if (!($22)) {
    $$09396$i = 0;
    while(1) {
     $23 = (($19) + ($$09396$i<<2)|0);
     $24 = (($$09396$i) + 1)|0;
     $25 = (_system_collections_generic_iterator_get($20)|0);
     $26 = $25;
     HEAP32[$23>>2] = $26;
     $27 = (_system_collections_generic_iterator_next($20)|0);
     $28 = ($27|0)==(0);
     if ($28) {
      break;
     } else {
      $$09396$i = $24;
     }
    }
   }
   $29 = ($20|0)==(0|0);
   if (!($29)) {
    _g_object_unref($20);
   }
   $30 = ($1|0)==(0|0);
   if ($30) {
    $$11 = $19;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $18;
   $$11 = $19;
   return ($$11|0);
   break;
  }
  case 0:  {
   $31 = (_g_once_init_enter(144032)|0);
   $32 = ($31|0)==(0);
   if (!($32)) {
    $33 = (_system_collections_generic_iterable_get_type()|0);
    $34 = (_g_type_register_static($33,135396,119908,16)|0);
    _g_once_init_leave(144032,$34);
   }
   $35 = HEAP32[36008]|0;
   $36 = (_g_type_check_instance_cast($0,$35)|0);
   $37 = HEAP32[$0>>2]|0;
   $38 = ((($37)) + 128|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = (ftCall_ii($39|0,$0)|0);
   $41 = (_g_malloc0($40)|0);
   $42 = (_system_collections_generic_iterable_iterator($0)|0);
   $43 = (_system_collections_generic_iterator_next($42)|0);
   $44 = ($43|0)==(0);
   if (!($44)) {
    $$08790$i = 0;
    while(1) {
     $45 = (($41) + ($$08790$i)|0);
     $46 = (($$08790$i) + 1)|0;
     $47 = (_system_collections_generic_iterator_get($42)|0);
     $48 = $47;
     $49 = $48&255;
     HEAP8[$45>>0] = $49;
     $50 = (_system_collections_generic_iterator_next($42)|0);
     $51 = ($50|0)==(0);
     if ($51) {
      break;
     } else {
      $$08790$i = $46;
     }
    }
   }
   $52 = ($42|0)==(0|0);
   if (!($52)) {
    _g_object_unref($42);
   }
   $53 = ($1|0)==(0|0);
   if ($53) {
    $$11 = $41;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $40;
   $$11 = $41;
   return ($$11|0);
   break;
  }
  case 1:  {
   $54 = (_g_once_init_enter(144032)|0);
   $55 = ($54|0)==(0);
   if (!($55)) {
    $56 = (_system_collections_generic_iterable_get_type()|0);
    $57 = (_g_type_register_static($56,135396,119908,16)|0);
    _g_once_init_leave(144032,$57);
   }
   $58 = HEAP32[36008]|0;
   $59 = (_g_type_check_instance_cast($0,$58)|0);
   $60 = HEAP32[$0>>2]|0;
   $61 = ((($60)) + 128|0);
   $62 = HEAP32[$61>>2]|0;
   $63 = (ftCall_ii($62|0,$0)|0);
   $64 = (_g_malloc0($63)|0);
   $65 = (_system_collections_generic_iterable_iterator($0)|0);
   $66 = (_system_collections_generic_iterator_next($65)|0);
   $67 = ($66|0)==(0);
   if (!($67)) {
    $$08790$i330 = 0;
    while(1) {
     $68 = (($64) + ($$08790$i330)|0);
     $69 = (($$08790$i330) + 1)|0;
     $70 = (_system_collections_generic_iterator_get($65)|0);
     $71 = $70;
     $72 = $71&255;
     HEAP8[$68>>0] = $72;
     $73 = (_system_collections_generic_iterator_next($65)|0);
     $74 = ($73|0)==(0);
     if ($74) {
      break;
     } else {
      $$08790$i330 = $69;
     }
    }
   }
   $75 = ($65|0)==(0|0);
   if (!($75)) {
    _g_object_unref($65);
   }
   $76 = ($1|0)==(0|0);
   if ($76) {
    $$11 = $64;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $63;
   $$11 = $64;
   return ($$11|0);
   break;
  }
  case 3:  {
   $77 = (_g_once_init_enter(144032)|0);
   $78 = ($77|0)==(0);
   if (!($78)) {
    $79 = (_system_collections_generic_iterable_get_type()|0);
    $80 = (_g_type_register_static($79,135396,119908,16)|0);
    _g_once_init_leave(144032,$80);
   }
   $81 = HEAP32[36008]|0;
   $82 = (_g_type_check_instance_cast($0,$81)|0);
   $83 = HEAP32[$0>>2]|0;
   $84 = ((($83)) + 128|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = (ftCall_ii($85|0,$0)|0);
   $87 = (_g_malloc0_n($86,4)|0);
   $88 = (_system_collections_generic_iterable_iterator($0)|0);
   $89 = (_system_collections_generic_iterator_next($88)|0);
   $90 = ($89|0)==(0);
   if (!($90)) {
    $$09396$i334 = 0;
    while(1) {
     $91 = (($87) + ($$09396$i334<<2)|0);
     $92 = (($$09396$i334) + 1)|0;
     $93 = (_system_collections_generic_iterator_get($88)|0);
     $94 = $93;
     HEAP32[$91>>2] = $94;
     $95 = (_system_collections_generic_iterator_next($88)|0);
     $96 = ($95|0)==(0);
     if ($96) {
      break;
     } else {
      $$09396$i334 = $92;
     }
    }
   }
   $97 = ($88|0)==(0|0);
   if (!($97)) {
    _g_object_unref($88);
   }
   $98 = ($1|0)==(0|0);
   if ($98) {
    $$11 = $87;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $86;
   $$11 = $87;
   return ($$11|0);
   break;
  }
  case 4:  {
   $99 = (_g_once_init_enter(144032)|0);
   $100 = ($99|0)==(0);
   if (!($100)) {
    $101 = (_system_collections_generic_iterable_get_type()|0);
    $102 = (_g_type_register_static($101,135396,119908,16)|0);
    _g_once_init_leave(144032,$102);
   }
   $103 = HEAP32[36008]|0;
   $104 = (_g_type_check_instance_cast($0,$103)|0);
   $105 = HEAP32[$0>>2]|0;
   $106 = ((($105)) + 128|0);
   $107 = HEAP32[$106>>2]|0;
   $108 = (ftCall_ii($107|0,$0)|0);
   $109 = (_g_malloc0_n($108,4)|0);
   $110 = (_system_collections_generic_iterable_iterator($0)|0);
   $111 = (_system_collections_generic_iterator_next($110)|0);
   $112 = ($111|0)==(0);
   if (!($112)) {
    $$09396$i338 = 0;
    while(1) {
     $113 = (($109) + ($$09396$i338<<2)|0);
     $114 = (($$09396$i338) + 1)|0;
     $115 = (_system_collections_generic_iterator_get($110)|0);
     $116 = $115;
     HEAP32[$113>>2] = $116;
     $117 = (_system_collections_generic_iterator_next($110)|0);
     $118 = ($117|0)==(0);
     if ($118) {
      break;
     } else {
      $$09396$i338 = $114;
     }
    }
   }
   $119 = ($110|0)==(0|0);
   if (!($119)) {
    _g_object_unref($110);
   }
   $120 = ($1|0)==(0|0);
   if ($120) {
    $$11 = $109;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $108;
   $$11 = $109;
   return ($$11|0);
   break;
  }
  case 7:  {
   $121 = (_g_once_init_enter(144032)|0);
   $122 = ($121|0)==(0);
   if (!($122)) {
    $123 = (_system_collections_generic_iterable_get_type()|0);
    $124 = (_g_type_register_static($123,135396,119908,16)|0);
    _g_once_init_leave(144032,$124);
   }
   $125 = HEAP32[36008]|0;
   $126 = (_g_type_check_instance_cast($0,$125)|0);
   $127 = HEAP32[$0>>2]|0;
   $128 = ((($127)) + 128|0);
   $129 = HEAP32[$128>>2]|0;
   $130 = (ftCall_ii($129|0,$0)|0);
   $131 = (_g_malloc0_n($130,4)|0);
   $132 = (_system_collections_generic_iterable_iterator($0)|0);
   $133 = (_system_collections_generic_iterator_next($132)|0);
   $134 = ($133|0)==(0);
   if (!($134)) {
    $$0101104$i = 0;
    while(1) {
     $135 = (_system_collections_generic_iterator_get($132)|0);
     $136 = (($$0101104$i) + 1)|0;
     $137 = (($131) + ($$0101104$i<<2)|0);
     $138 = HEAP32[$137>>2]|0;
     $139 = ($138|0)==(0|0);
     if (!($139)) {
      _g_free($138);
      HEAP32[$137>>2] = 0;
     }
     HEAP32[$137>>2] = $135;
     $140 = (_system_collections_generic_iterator_next($132)|0);
     $141 = ($140|0)==(0);
     if ($141) {
      break;
     } else {
      $$0101104$i = $136;
     }
    }
   }
   $142 = ($132|0)==(0|0);
   if (!($142)) {
    _g_object_unref($132);
   }
   $143 = ($1|0)==(0|0);
   if ($143) {
    $$11 = $131;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $130;
   $$11 = $131;
   return ($$11|0);
   break;
  }
  case 8:  {
   $144 = (_g_once_init_enter(144032)|0);
   $145 = ($144|0)==(0);
   if (!($145)) {
    $146 = (_system_collections_generic_iterable_get_type()|0);
    $147 = (_g_type_register_static($146,135396,119908,16)|0);
    _g_once_init_leave(144032,$147);
   }
   $148 = HEAP32[36008]|0;
   $149 = (_g_type_check_instance_cast($0,$148)|0);
   $150 = HEAP32[$0>>2]|0;
   $151 = ((($150)) + 128|0);
   $152 = HEAP32[$151>>2]|0;
   $153 = (ftCall_ii($152|0,$0)|0);
   $154 = (_g_malloc0_n($153,4)|0);
   $155 = (_system_collections_generic_iterable_iterator($0)|0);
   $156 = (_system_collections_generic_iterator_next($155)|0);
   $157 = ($156|0)==(0);
   if (!($157)) {
    $$0101104$i345 = 0;
    while(1) {
     $158 = (_system_collections_generic_iterator_get($155)|0);
     $159 = (($$0101104$i345) + 1)|0;
     $160 = (($154) + ($$0101104$i345<<2)|0);
     $161 = HEAP32[$160>>2]|0;
     $162 = ($161|0)==(0|0);
     if (!($162)) {
      _g_free($161);
      HEAP32[$160>>2] = 0;
     }
     HEAP32[$160>>2] = $158;
     $163 = (_system_collections_generic_iterator_next($155)|0);
     $164 = ($163|0)==(0);
     if ($164) {
      break;
     } else {
      $$0101104$i345 = $159;
     }
    }
   }
   $165 = ($155|0)==(0|0);
   if (!($165)) {
    _g_object_unref($155);
   }
   $166 = ($1|0)==(0|0);
   if ($166) {
    $$11 = $154;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $153;
   $$11 = $154;
   return ($$11|0);
   break;
  }
  case 5:  {
   $167 = (_g_once_init_enter(144032)|0);
   $168 = ($167|0)==(0);
   if (!($168)) {
    $169 = (_system_collections_generic_iterable_get_type()|0);
    $170 = (_g_type_register_static($169,135396,119908,16)|0);
    _g_once_init_leave(144032,$170);
   }
   $171 = HEAP32[36008]|0;
   $172 = (_g_type_check_instance_cast($0,$171)|0);
   $173 = HEAP32[$0>>2]|0;
   $174 = ((($173)) + 128|0);
   $175 = HEAP32[$174>>2]|0;
   $176 = (ftCall_ii($175|0,$0)|0);
   $177 = (_g_malloc0_n($176,4)|0);
   $178 = (_system_collections_generic_iterable_iterator($0)|0);
   $179 = (_system_collections_generic_iterator_next($178)|0);
   $180 = ($179|0)==(0);
   if (!($180)) {
    $$09396$i349 = 0;
    while(1) {
     $181 = (($177) + ($$09396$i349<<2)|0);
     $182 = (($$09396$i349) + 1)|0;
     $183 = (_system_collections_generic_iterator_get($178)|0);
     $184 = $183;
     HEAP32[$181>>2] = $184;
     $185 = (_system_collections_generic_iterator_next($178)|0);
     $186 = ($185|0)==(0);
     if ($186) {
      break;
     } else {
      $$09396$i349 = $182;
     }
    }
   }
   $187 = ($178|0)==(0|0);
   if (!($187)) {
    _g_object_unref($178);
   }
   $188 = ($1|0)==(0|0);
   if ($188) {
    $$11 = $177;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $176;
   $$11 = $177;
   return ($$11|0);
   break;
  }
  case 6:  {
   $189 = (_g_once_init_enter(144032)|0);
   $190 = ($189|0)==(0);
   if (!($190)) {
    $191 = (_system_collections_generic_iterable_get_type()|0);
    $192 = (_g_type_register_static($191,135396,119908,16)|0);
    _g_once_init_leave(144032,$192);
   }
   $193 = HEAP32[36008]|0;
   $194 = (_g_type_check_instance_cast($0,$193)|0);
   $195 = HEAP32[$0>>2]|0;
   $196 = ((($195)) + 128|0);
   $197 = HEAP32[$196>>2]|0;
   $198 = (ftCall_ii($197|0,$0)|0);
   $199 = (_g_malloc0_n($198,4)|0);
   $200 = (_system_collections_generic_iterable_iterator($0)|0);
   $201 = (_system_collections_generic_iterator_next($200)|0);
   $202 = ($201|0)==(0);
   if (!($202)) {
    $$09396$i353 = 0;
    while(1) {
     $203 = (($199) + ($$09396$i353<<2)|0);
     $204 = (($$09396$i353) + 1)|0;
     $205 = (_system_collections_generic_iterator_get($200)|0);
     $206 = $205;
     HEAP32[$203>>2] = $206;
     $207 = (_system_collections_generic_iterator_next($200)|0);
     $208 = ($207|0)==(0);
     if ($208) {
      break;
     } else {
      $$09396$i353 = $204;
     }
    }
   }
   $209 = ($200|0)==(0|0);
   if (!($209)) {
    _g_object_unref($200);
   }
   $210 = ($1|0)==(0|0);
   if ($210) {
    $$11 = $199;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $198;
   $$11 = $199;
   return ($$11|0);
   break;
  }
  case 11:  {
   $211 = (_g_once_init_enter(144032)|0);
   $212 = ($211|0)==(0);
   if (!($212)) {
    $213 = (_system_collections_generic_iterable_get_type()|0);
    $214 = (_g_type_register_static($213,135396,119908,16)|0);
    _g_once_init_leave(144032,$214);
   }
   $215 = HEAP32[36008]|0;
   $216 = (_g_type_check_instance_cast($0,$215)|0);
   $217 = HEAP32[$0>>2]|0;
   $218 = ((($217)) + 128|0);
   $219 = HEAP32[$218>>2]|0;
   $220 = (ftCall_ii($219|0,$0)|0);
   $221 = (_g_malloc0_n($220,4)|0);
   $222 = (_system_collections_generic_iterable_iterator($0)|0);
   $223 = (_system_collections_generic_iterator_next($222)|0);
   $224 = ($223|0)==(0);
   if (!($224)) {
    $$0101104$i357 = 0;
    while(1) {
     $225 = (_system_collections_generic_iterator_get($222)|0);
     $226 = (($$0101104$i357) + 1)|0;
     $227 = (($221) + ($$0101104$i357<<2)|0);
     $228 = HEAP32[$227>>2]|0;
     $229 = ($228|0)==(0|0);
     if (!($229)) {
      _g_free($228);
      HEAP32[$227>>2] = 0;
     }
     HEAP32[$227>>2] = $225;
     $230 = (_system_collections_generic_iterator_next($222)|0);
     $231 = ($230|0)==(0);
     if ($231) {
      break;
     } else {
      $$0101104$i357 = $226;
     }
    }
   }
   $232 = ($222|0)==(0|0);
   if (!($232)) {
    _g_object_unref($222);
   }
   $233 = ($1|0)==(0|0);
   if ($233) {
    $$11 = $221;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $220;
   $$11 = $221;
   return ($$11|0);
   break;
  }
  case 12:  {
   $234 = (_g_once_init_enter(144032)|0);
   $235 = ($234|0)==(0);
   if (!($235)) {
    $236 = (_system_collections_generic_iterable_get_type()|0);
    $237 = (_g_type_register_static($236,135396,119908,16)|0);
    _g_once_init_leave(144032,$237);
   }
   $238 = HEAP32[36008]|0;
   $239 = (_g_type_check_instance_cast($0,$238)|0);
   $240 = HEAP32[$0>>2]|0;
   $241 = ((($240)) + 128|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = (ftCall_ii($242|0,$0)|0);
   $244 = (_g_malloc0_n($243,4)|0);
   $245 = (_system_collections_generic_iterable_iterator($0)|0);
   $246 = (_system_collections_generic_iterator_next($245)|0);
   $247 = ($246|0)==(0);
   if (!($247)) {
    $$0101104$i361 = 0;
    while(1) {
     $248 = (_system_collections_generic_iterator_get($245)|0);
     $249 = (($$0101104$i361) + 1)|0;
     $250 = (($244) + ($$0101104$i361<<2)|0);
     $251 = HEAP32[$250>>2]|0;
     $252 = ($251|0)==(0|0);
     if (!($252)) {
      _g_free($251);
      HEAP32[$250>>2] = 0;
     }
     HEAP32[$250>>2] = $248;
     $253 = (_system_collections_generic_iterator_next($245)|0);
     $254 = ($253|0)==(0);
     if ($254) {
      break;
     } else {
      $$0101104$i361 = $249;
     }
    }
   }
   $255 = ($245|0)==(0|0);
   if (!($255)) {
    _g_object_unref($245);
   }
   $256 = ($1|0)==(0|0);
   if ($256) {
    $$11 = $244;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $243;
   $$11 = $244;
   return ($$11|0);
   break;
  }
  default: {
   $257 = (_g_type_fundamental($4)|0);
   $258 = ($257|0)==(48);
   if (!($258)) {
    $259 = (_g_type_fundamental($4)|0);
    $260 = ($259|0)==(52);
    if (!($260)) {
     $283 = HEAP32[$0>>2]|0;
     $284 = ((($283)) + 128|0);
     $285 = HEAP32[$284>>2]|0;
     $286 = (ftCall_ii($285|0,$0)|0);
     $287 = (_g_malloc0_n($286,4)|0);
     $288 = (_system_collections_generic_iterable_iterator($0)|0);
     $289 = (_system_collections_generic_iterator_next($288)|0);
     $290 = ($289|0)==(0);
     if (!($290)) {
      $$0322403 = 0;
      while(1) {
       $291 = (_system_collections_generic_iterator_get($288)|0);
       $292 = (($$0322403) + 1)|0;
       $293 = (($287) + ($$0322403<<2)|0);
       $294 = HEAP32[$293>>2]|0;
       $295 = ($294|0)==(0|0);
       if (!($295)) {
        $296 = HEAP32[$2>>2]|0;
        $297 = ((($296)) + 8|0);
        $298 = HEAP32[$297>>2]|0;
        $299 = ($298|0)==(0|0);
        if (!($299)) {
         ftCall_vi($298|0,$294);
         HEAP32[$293>>2] = 0;
        }
       }
       HEAP32[$293>>2] = $291;
       $300 = (_system_collections_generic_iterator_next($288)|0);
       $301 = ($300|0)==(0);
       if ($301) {
        break;
       } else {
        $$0322403 = $292;
       }
      }
     }
     $302 = ($288|0)==(0|0);
     if (!($302)) {
      _g_object_unref($288);
     }
     $303 = ($1|0)==(0|0);
     if ($303) {
      $$11 = $287;
      return ($$11|0);
     }
     HEAP32[$1>>2] = $286;
     $$11 = $287;
     return ($$11|0);
    }
   }
   $261 = (_g_once_init_enter(144032)|0);
   $262 = ($261|0)==(0);
   if (!($262)) {
    $263 = (_system_collections_generic_iterable_get_type()|0);
    $264 = (_g_type_register_static($263,135396,119908,16)|0);
    _g_once_init_leave(144032,$264);
   }
   $265 = HEAP32[36008]|0;
   $266 = (_g_type_check_instance_cast($0,$265)|0);
   $267 = HEAP32[$0>>2]|0;
   $268 = ((($267)) + 128|0);
   $269 = HEAP32[$268>>2]|0;
   $270 = (ftCall_ii($269|0,$0)|0);
   $271 = (_g_malloc0_n($270,4)|0);
   $272 = (_system_collections_generic_iterable_iterator($0)|0);
   $273 = (_system_collections_generic_iterator_next($272)|0);
   $274 = ($273|0)==(0);
   if (!($274)) {
    $$09396$i365 = 0;
    while(1) {
     $275 = (($271) + ($$09396$i365<<2)|0);
     $276 = (($$09396$i365) + 1)|0;
     $277 = (_system_collections_generic_iterator_get($272)|0);
     $278 = $277;
     HEAP32[$275>>2] = $278;
     $279 = (_system_collections_generic_iterator_next($272)|0);
     $280 = ($279|0)==(0);
     if ($280) {
      break;
     } else {
      $$09396$i365 = $276;
     }
    }
   }
   $281 = ($272|0)==(0|0);
   if (!($281)) {
    _g_object_unref($272);
   }
   $282 = ($1|0)==(0|0);
   if ($282) {
    $$11 = $271;
    return ($$11|0);
   }
   HEAP32[$1>>2] = $270;
   $$11 = $271;
   return ($$11|0);
  }
  }
 } while(0);
 return (0)|0;
}
function _system_collections_generic_collection_real_get_IsEmpty($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 $5 = ($4|0)==(0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_collection_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0;
 var $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144032)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterable_get_type()|0);
  $7 = (_g_type_register_static($6,135396,119908,16)|0);
  _g_once_init_leave(144032,$7);
 }
 $8 = HEAP32[36008]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(5);
 if ($cond) {
  $10 = HEAP32[$0>>2]|0;
  $11 = ((($10)) + 132|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = (ftCall_ii($12|0,$0)|0);
  _g_value_set_boolean($2,$13);
  STACKTOP = sp;return;
 } else {
  $14 = ((($3)) + 4|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = HEAP32[$3>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  $19 = HEAP32[$0>>2]|0;
  $20 = HEAP32[$19>>2]|0;
  $21 = (_g_type_name($20)|0);
  HEAP32[$vararg_buffer>>2] = 135439;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1475;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $15;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $18;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $21;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_collection_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144032)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterable_get_type()|0);
  $7 = (_g_type_register_static($6,135396,119908,16)|0);
  _g_once_init_leave(144032,$7);
 }
 $8 = HEAP32[36008]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 20|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 20|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 20|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 135439;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1495;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_construct($0,$1,$2,$3,$4,$5,$6,$7,$8,$9) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 $9 = $9|0;
 var $$01$i$i = 0, $$0122 = 0, $$0123 = 0, $$0124 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $exitcond$i$i = 0, $g_direct_equal$g_str_equal = 0, $g_direct_equal$g_str_equal128 = 0, $g_direct_hash$g_str_hash = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $10 = (_system_collections_generic_map_construct($0,$1,$2,$3,$4,$5,$6)|0);
 $11 = ((($10)) + 20|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$12>>2] = $1;
 $13 = ((($12)) + 4|0);
 HEAP32[$13>>2] = $2;
 $14 = ((($12)) + 8|0);
 HEAP32[$14>>2] = $3;
 $15 = ((($12)) + 12|0);
 HEAP32[$15>>2] = $4;
 $16 = ((($12)) + 16|0);
 HEAP32[$16>>2] = $5;
 $17 = ((($12)) + 20|0);
 HEAP32[$17>>2] = $6;
 $18 = ($7|0)==(0|0);
 if ($18) {
  $19 = (_g_type_is_a($1,64)|0);
  $20 = ($19|0)==(0);
  $g_direct_hash$g_str_hash = $20 ? 250 : 254;
  $$pre = HEAP32[$11>>2]|0;
  $$0122 = $g_direct_hash$g_str_hash;$22 = $$pre;
 } else {
  $$0122 = $7;$22 = $12;
 }
 $21 = ((($22)) + 48|0);
 HEAP32[$21>>2] = $$0122;
 $23 = ($8|0)==(0|0);
 if ($23) {
  $24 = (_g_type_is_a($1,64)|0);
  $25 = ($24|0)==(0);
  $g_direct_equal$g_str_equal = $25 ? 366 : 255;
  $$0123 = $g_direct_equal$g_str_equal;
 } else {
  $$0123 = $8;
 }
 $26 = HEAP32[$11>>2]|0;
 $27 = ((($26)) + 52|0);
 HEAP32[$27>>2] = $$0123;
 $28 = ($9|0)==(0|0);
 if ($28) {
  $29 = (_g_type_is_a($4,64)|0);
  $30 = ($29|0)==(0);
  $g_direct_equal$g_str_equal128 = $30 ? 366 : 255;
  $$0124 = $g_direct_equal$g_str_equal128;
 } else {
  $$0124 = $9;
 }
 $31 = HEAP32[$11>>2]|0;
 $32 = ((($31)) + 56|0);
 HEAP32[$32>>2] = $$0124;
 $33 = HEAP32[$11>>2]|0;
 $34 = ((($33)) + 24|0);
 HEAP32[$34>>2] = 11;
 $35 = (_g_malloc0_n(12,4)|0);
 $36 = HEAP32[$11>>2]|0;
 $37 = ((($36)) + 32|0);
 $38 = HEAP32[$37>>2]|0;
 $39 = ((($36)) + 36|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = ($38|0)!=(0|0);
 $42 = ($40|0)>(0);
 $or$cond$i$i = $41 & $42;
 if (!($or$cond$i$i)) {
  _g_free($38);
  $47 = HEAP32[$11>>2]|0;
  $48 = ((($47)) + 32|0);
  HEAP32[$48>>2] = $35;
  $49 = ((($47)) + 36|0);
  HEAP32[$49>>2] = 11;
  $50 = ((($47)) + 40|0);
  HEAP32[$50>>2] = 11;
  return ($10|0);
 }
 $$01$i$i = 0;
 while(1) {
  $43 = (($38) + ($$01$i$i<<2)|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ($44|0)==(0|0);
  if (!($45)) {
   _system_collections_generic_dictionary_node_free($44);
  }
  $46 = (($$01$i$i) + 1)|0;
  $exitcond$i$i = ($46|0)==($40|0);
  if ($exitcond$i$i) {
   break;
  } else {
   $$01$i$i = $46;
  }
 }
 _g_free($38);
 $47 = HEAP32[$11>>2]|0;
 $48 = ((($47)) + 32|0);
 HEAP32[$48>>2] = $35;
 $49 = ((($47)) + 36|0);
 HEAP32[$49>>2] = 11;
 $50 = ((($47)) + 40|0);
 HEAP32[$50>>2] = 11;
 return ($10|0);
}
function _system_collections_generic_dictionary_node_free($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 8|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if ($3) {
  _g_slice_free1(16,$0);
  return;
 }
 _system_collections_generic_dictionary_node_free($2);
 HEAP32[$1>>2] = 0;
 _g_slice_free1(16,$0);
 return;
}
function _system_collections_generic_dictionary_new($0,$1,$2,$3,$4,$5,$6,$7,$8) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 $8 = $8|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $9 = (_g_once_init_enter(144040)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  $11 = (_system_collections_generic_map_get_type()|0);
  $12 = (_g_type_register_static($11,135860,119944,0)|0);
  _g_once_init_leave(144040,$12);
 }
 $13 = HEAP32[36010]|0;
 $14 = (_system_collections_generic_dictionary_construct($13,$0,$1,$2,$3,$4,$5,$6,$7,$8)|0);
 return ($14|0);
}
function _system_collections_generic_dictionary_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36011] = $1;
 _g_type_class_add_private($0,60);
 $2 = ((($0)) + 116|0);
 HEAP32[$2>>2] = 367;
 $3 = ((($0)) + 96|0);
 HEAP32[$3>>2] = 368;
 $4 = ((($0)) + 100|0);
 HEAP32[$4>>2] = 369;
 $5 = ((($0)) + 104|0);
 HEAP32[$5>>2] = 370;
 $6 = ((($0)) + 108|0);
 HEAP32[$6>>2] = 371;
 $7 = ((($0)) + 112|0);
 HEAP32[$7>>2] = 372;
 $8 = (_system_collections_generic_map_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 120|0);
 HEAP32[$10>>2] = 373;
 $11 = (_g_type_check_class_cast($0,$8)|0);
 $12 = ((($0)) + 124|0);
 HEAP32[$12>>2] = 374;
 $13 = (_g_type_check_class_cast($0,$8)|0);
 $14 = ((($0)) + 128|0);
 HEAP32[$14>>2] = 375;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 28|0);
 HEAP32[$16>>2] = 376;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = ((($0)) + 24|0);
 HEAP32[$18>>2] = 377;
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = ((($0)) + 36|0);
 HEAP32[$20>>2] = 378;
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$30);
 $31 = (_g_type_check_class_cast($0,80)|0);
 $32 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$32);
 $33 = (_g_type_check_class_cast($0,80)|0);
 $34 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
 HEAP32[35552] = $34;
 _g_object_class_install_property($0,7,$34);
 $35 = (_g_type_check_class_cast($0,80)|0);
 $36 = (_g_param_spec_pointer(135895,135895,135895,226)|0);
 HEAP32[35544] = $36;
 _g_object_class_install_property($0,8,$36);
 $37 = (_g_type_check_class_cast($0,80)|0);
 $38 = (_g_param_spec_pointer(135909,135909,135909,226)|0);
 HEAP32[35548] = $38;
 _g_object_class_install_property($0,9,$38);
 $39 = (_g_type_check_class_cast($0,80)|0);
 $40 = (_g_param_spec_pointer(135924,135924,135924,226)|0);
 HEAP32[35918] = $40;
 _g_object_class_install_property($0,10,$40);
 $41 = (_g_type_check_class_cast($0,80)|0);
 $42 = (_system_collections_generic_set_get_type()|0);
 $43 = (_g_param_spec_object(138473,138473,138473,$42,225)|0);
 HEAP32[35556] = $43;
 _g_object_class_install_property($0,11,$43);
 $44 = (_g_type_check_class_cast($0,80)|0);
 $45 = (_system_collections_generic_collection_get_type()|0);
 $46 = (_g_param_spec_object(138478,138478,138478,$45,225)|0);
 HEAP32[35560] = $46;
 _g_object_class_install_property($0,12,$46);
 return;
}
function _system_collections_generic_dictionary_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144040)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_get_type()|0);
  $4 = (_g_type_register_static($3,135860,119944,0)|0);
  _g_once_init_leave(144040,$4);
 }
 $5 = HEAP32[36010]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 44|0);
 HEAP32[$8>>2] = 0;
 return;
}
function _system_collections_generic_dictionary_real_map_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(144080)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_map_iterator_get_type()|0);
  $17 = (_g_type_register_static($16,137094,120124,0)|0);
  _g_once_init_leave(144080,$17);
 }
 $18 = HEAP32[36020]|0;
 $19 = (_system_collections_generic_map_iterator_construct($18,$3,$5,$7,$9,$11,$13)|0);
 $20 = ((($19)) + 20|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;$38 = $$pre$i$i;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  $33 = ((($0)) + 20|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 44|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($38)) + 36|0);
  HEAP32[$37>>2] = $36;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;$38 = $31;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 $33 = ((($0)) + 20|0);
 $34 = HEAP32[$33>>2]|0;
 $35 = ((($34)) + 44|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ((($38)) + 36|0);
 HEAP32[$37>>2] = $36;
 return ($19|0);
}
function _system_collections_generic_dictionary_real_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$07985$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $phitmp17 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $30 = 0;
  return ($30|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $30 = 0;
   label = 7;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 7) {
  return ($30|0);
 }
 $phitmp = ($$pre$i|0)!=(0|0);
 $phitmp17 = $phitmp&1;
 $30 = $phitmp17;
 return ($30|0);
}
function _system_collections_generic_dictionary_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07985$i = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$0 = 0;
  return ($$0|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$0 = 0;
   label = 10;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 10) {
  return ($$0|0);
 }
 $30 = ($$pre$i|0)==(0|0);
 if ($30) {
  $$0 = 0;
  return ($$0|0);
 }
 $31 = ((($$pre$i)) + 4|0);
 $32 = HEAP32[$31>>2]|0;
 $33 = ($32|0)==(0|0);
 if ($33) {
  $$0 = 0;
  return ($$0|0);
 }
 $34 = HEAP32[$2>>2]|0;
 $35 = ((($34)) + 16|0);
 $36 = HEAP32[$35>>2]|0;
 $37 = ($36|0)==(0|0);
 if ($37) {
  $$0 = $32;
  return ($$0|0);
 }
 $38 = (ftCall_ii($36|0,$32)|0);
 $$0 = $38;
 return ($$0|0);
}
function _system_collections_generic_dictionary_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$079$lcssa$i95 = 0, $$07985$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phiZ2D = 0, $$pre98 = 0, $$pre99 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 20|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (ftCall_ii($6|0,$1)|0);
 $8 = HEAP32[$3>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 24|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($7>>>0) % ($12>>>0))&-1;
 $14 = (($10) + ($13<<2)|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)==(0|0);
 L1: do {
  if ($16) {
   $$079$lcssa$i95 = $14;
  } else {
   $$07985$i = $14;$18 = $15;
   while(1) {
    $17 = ((($18)) + 12|0);
    $19 = HEAP32[$17>>2]|0;
    $20 = ($7|0)==($19|0);
    if ($20) {
     $21 = HEAP32[$3>>2]|0;
     $22 = ((($21)) + 52|0);
     $23 = HEAP32[$22>>2]|0;
     $24 = HEAP32[$18>>2]|0;
     $25 = (ftCall_iii($23|0,$24,$1)|0);
     $26 = ($25|0)==(0);
     $$pre$i = HEAP32[$$07985$i>>2]|0;
     if ($26) {
      $28 = $$pre$i;
     } else {
      break;
     }
    } else {
     $28 = $18;
    }
    $27 = ((($28)) + 8|0);
    $29 = HEAP32[$27>>2]|0;
    $30 = ($29|0)==(0|0);
    if ($30) {
     $$079$lcssa$i95 = $27;
     break L1;
    } else {
     $$07985$i = $27;$18 = $29;
    }
   }
   $31 = ($$pre$i|0)==(0|0);
   if ($31) {
    $$079$lcssa$i95 = $$07985$i;
   } else {
    $32 = ($2|0)==(0|0);
    if ($32) {
     $39 = $$pre$i;$48 = 0;
    } else {
     $33 = HEAP32[$3>>2]|0;
     $34 = ((($33)) + 16|0);
     $35 = HEAP32[$34>>2]|0;
     $36 = ($35|0)==(0|0);
     if ($36) {
      $39 = $$pre$i;$48 = $2;
     } else {
      $37 = (ftCall_ii($35|0,$2)|0);
      $$pre = HEAP32[$$07985$i>>2]|0;
      $39 = $$pre;$48 = $37;
     }
    }
    $38 = ((($39)) + 4|0);
    $40 = HEAP32[$38>>2]|0;
    $41 = ($40|0)==(0|0);
    if ($41) {
     $$pre$phiZ2D = $38;
    } else {
     $42 = HEAP32[$3>>2]|0;
     $43 = ((($42)) + 20|0);
     $44 = HEAP32[$43>>2]|0;
     $45 = ($44|0)==(0|0);
     if ($45) {
      $$pre$phiZ2D = $38;
     } else {
      ftCall_vi($44|0,$40);
      $46 = HEAP32[$$07985$i>>2]|0;
      $47 = ((($46)) + 4|0);
      HEAP32[$47>>2] = 0;
      $$pre98 = HEAP32[$$07985$i>>2]|0;
      $$pre99 = ((($$pre98)) + 4|0);
      $$pre$phiZ2D = $$pre99;
     }
    }
    HEAP32[$$pre$phiZ2D>>2] = $48;
    $74 = HEAP32[$3>>2]|0;
    $75 = ((($74)) + 44|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = (($76) + 1)|0;
    HEAP32[$75>>2] = $77;
    return;
   }
  }
 } while(0);
 $49 = HEAP32[$3>>2]|0;
 $50 = ((($49)) + 48|0);
 $51 = HEAP32[$50>>2]|0;
 $52 = (ftCall_ii($51|0,$1)|0);
 $53 = ($1|0)==(0|0);
 if ($53) {
  $66 = 0;
 } else {
  $54 = HEAP32[$3>>2]|0;
  $55 = ((($54)) + 4|0);
  $56 = HEAP32[$55>>2]|0;
  $57 = ($56|0)==(0|0);
  if ($57) {
   $66 = $1;
  } else {
   $58 = (ftCall_ii($56|0,$1)|0);
   $66 = $58;
  }
 }
 $59 = ($2|0)==(0|0);
 if ($59) {
  $68 = 0;
 } else {
  $60 = HEAP32[$3>>2]|0;
  $61 = ((($60)) + 16|0);
  $62 = HEAP32[$61>>2]|0;
  $63 = ($62|0)==(0|0);
  if ($63) {
   $68 = $2;
  } else {
   $64 = (ftCall_ii($62|0,$2)|0);
   $68 = $64;
  }
 }
 $65 = (_g_slice_alloc0(16)|0);
 HEAP32[$65>>2] = $66;
 $67 = ((($65)) + 4|0);
 HEAP32[$67>>2] = $68;
 $69 = ((($65)) + 12|0);
 HEAP32[$69>>2] = $52;
 HEAP32[$$079$lcssa$i95>>2] = $65;
 $70 = HEAP32[$3>>2]|0;
 $71 = ((($70)) + 28|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = (($72) + 1)|0;
 HEAP32[$71>>2] = $73;
 _system_collections_generic_dictionary_resize($0);
 $74 = HEAP32[$3>>2]|0;
 $75 = ((($74)) + 44|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = (($76) + 1)|0;
 HEAP32[$75>>2] = $77;
 return;
}
function _system_collections_generic_dictionary_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$07985$i = 0, $$pre = 0, $$pre$i = 0, $$pre$phi81Z2D = 0, $$pre$phiZ2D = 0, $$pre78 = 0, $$pre80 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 20|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 48|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (ftCall_ii($5|0,$1)|0);
 $7 = HEAP32[$2>>2]|0;
 $8 = ((($7)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($7)) + 24|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = (($6>>>0) % ($11>>>0))&-1;
 $13 = (($9) + ($12<<2)|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$0 = 0;
  return ($$0|0);
 }
 $$07985$i = $13;$17 = $14;
 while(1) {
  $16 = ((($17)) + 12|0);
  $18 = HEAP32[$16>>2]|0;
  $19 = ($6|0)==($18|0);
  if ($19) {
   $20 = HEAP32[$2>>2]|0;
   $21 = ((($20)) + 52|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = HEAP32[$17>>2]|0;
   $24 = (ftCall_iii($22|0,$23,$1)|0);
   $25 = ($24|0)==(0);
   $$pre$i = HEAP32[$$07985$i>>2]|0;
   if ($25) {
    $27 = $$pre$i;
   } else {
    break;
   }
  } else {
   $27 = $17;
  }
  $26 = ((($27)) + 8|0);
  $28 = HEAP32[$26>>2]|0;
  $29 = ($28|0)==(0|0);
  if ($29) {
   $$0 = 0;
   label = 14;
   break;
  } else {
   $$07985$i = $26;$17 = $28;
  }
 }
 if ((label|0) == 14) {
  return ($$0|0);
 }
 $30 = ($$pre$i|0)==(0|0);
 if ($30) {
  $$0 = 0;
  return ($$0|0);
 }
 $31 = ((($$pre$i)) + 8|0);
 $32 = HEAP32[$31>>2]|0;
 HEAP32[$31>>2] = 0;
 $33 = HEAP32[$$07985$i>>2]|0;
 $34 = HEAP32[$33>>2]|0;
 $35 = ($34|0)==(0|0);
 if ($35) {
  $$pre$phiZ2D = $33;
 } else {
  $36 = HEAP32[$2>>2]|0;
  $37 = ((($36)) + 8|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ($38|0)==(0|0);
  if ($39) {
   $$pre$phiZ2D = $33;
  } else {
   ftCall_vi($38|0,$34);
   $40 = HEAP32[$$07985$i>>2]|0;
   HEAP32[$40>>2] = 0;
   $$pre = HEAP32[$$07985$i>>2]|0;
   $$pre$phiZ2D = $$pre;
  }
 }
 HEAP32[$$pre$phiZ2D>>2] = 0;
 $41 = HEAP32[$$07985$i>>2]|0;
 $42 = ((($41)) + 4|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ($43|0)==(0|0);
 if ($44) {
  $$pre$phi81Z2D = $42;
 } else {
  $45 = HEAP32[$2>>2]|0;
  $46 = ((($45)) + 20|0);
  $47 = HEAP32[$46>>2]|0;
  $48 = ($47|0)==(0|0);
  if ($48) {
   $$pre$phi81Z2D = $42;
  } else {
   ftCall_vi($47|0,$43);
   $49 = HEAP32[$$07985$i>>2]|0;
   $50 = ((($49)) + 4|0);
   HEAP32[$50>>2] = 0;
   $$pre78 = HEAP32[$$07985$i>>2]|0;
   $$pre80 = ((($$pre78)) + 4|0);
   $$pre$phi81Z2D = $$pre80;
  }
 }
 HEAP32[$$pre$phi81Z2D>>2] = 0;
 $51 = HEAP32[$$07985$i>>2]|0;
 _system_collections_generic_dictionary_node_free($51);
 HEAP32[$$07985$i>>2] = $32;
 $52 = HEAP32[$2>>2]|0;
 $53 = ((($52)) + 28|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = (($54) + -1)|0;
 HEAP32[$53>>2] = $55;
 _system_collections_generic_dictionary_resize($0);
 $56 = HEAP32[$2>>2]|0;
 $57 = ((($56)) + 44|0);
 $58 = HEAP32[$57>>2]|0;
 $59 = (($58) + 1)|0;
 HEAP32[$57>>2] = $59;
 $$0 = 1;
 return ($$0|0);
}
function _system_collections_generic_dictionary_real_Clear($0) {
 $0 = $0|0;
 var $$08489 = 0, $$lcssa = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, $spec$select90 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(0);
 if (!($5)) {
  $$lcssa = $2;
  $32 = ((($$lcssa)) + 28|0);
  HEAP32[$32>>2] = 0;
  _system_collections_generic_dictionary_resize($0);
  return;
 }
 $7 = $2;$spec$select90 = 0;
 while(1) {
  $6 = ((($7)) + 32|0);
  $8 = HEAP32[$6>>2]|0;
  $9 = (($8) + ($spec$select90<<2)|0);
  $10 = HEAP32[$9>>2]|0;
  HEAP32[$9>>2] = 0;
  $11 = ($10|0)==(0|0);
  if (!($11)) {
   $$08489 = $10;
   while(1) {
    $12 = ((($$08489)) + 8|0);
    $13 = HEAP32[$12>>2]|0;
    HEAP32[$12>>2] = 0;
    $14 = HEAP32[$$08489>>2]|0;
    $15 = ($14|0)==(0|0);
    if (!($15)) {
     $16 = HEAP32[$1>>2]|0;
     $17 = ((($16)) + 8|0);
     $18 = HEAP32[$17>>2]|0;
     $19 = ($18|0)==(0|0);
     if (!($19)) {
      ftCall_vi($18|0,$14);
      HEAP32[$$08489>>2] = 0;
     }
    }
    HEAP32[$$08489>>2] = 0;
    $20 = ((($$08489)) + 4|0);
    $21 = HEAP32[$20>>2]|0;
    $22 = ($21|0)==(0|0);
    if (!($22)) {
     $23 = HEAP32[$1>>2]|0;
     $24 = ((($23)) + 20|0);
     $25 = HEAP32[$24>>2]|0;
     $26 = ($25|0)==(0|0);
     if (!($26)) {
      ftCall_vi($25|0,$21);
      HEAP32[$20>>2] = 0;
     }
    }
    HEAP32[$20>>2] = 0;
    _system_collections_generic_dictionary_node_free($$08489);
    $27 = ($13|0)==(0|0);
    if ($27) {
     break;
    } else {
     $$08489 = $13;
    }
   }
  }
  $spec$select = (($spec$select90) + 1)|0;
  $28 = HEAP32[$1>>2]|0;
  $29 = ((($28)) + 24|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($spec$select|0)<($30|0);
  if ($31) {
   $7 = $28;$spec$select90 = $spec$select;
  } else {
   $$lcssa = $28;
   break;
  }
 }
 $32 = ((($$lcssa)) + 28|0);
 HEAP32[$32>>2] = 0;
 _system_collections_generic_dictionary_resize($0);
 return;
}
function _system_collections_generic_dictionary_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_collections_generic_dictionary_real_get_Keys($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(144064)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_set_get_type()|0);
  $17 = (_g_type_register_static($16,136588,120052,0)|0);
  _g_once_init_leave(144064,$17);
 }
 $18 = HEAP32[36016]|0;
 $19 = (_system_collections_generic_set_construct($18,$3,$5,$7)|0);
 $20 = ((($19)) + 28|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 return ($19|0);
}
function _system_collections_generic_dictionary_real_get_Values($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($2)) + 4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($2)) + 8|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = (_g_once_init_enter(144048)|0);
 $15 = ($14|0)==(0);
 if (!($15)) {
  $16 = (_system_collections_generic_collection_get_type()|0);
  $17 = (_g_type_register_static($16,135996,119980,0)|0);
  _g_once_init_leave(144048,$17);
 }
 $18 = HEAP32[36012]|0;
 $19 = (_system_collections_generic_collection_construct($18,$9,$11,$13)|0);
 $20 = ((($19)) + 24|0);
 $21 = HEAP32[$20>>2]|0;
 HEAP32[$21>>2] = $3;
 $22 = ((($21)) + 4|0);
 HEAP32[$22>>2] = $5;
 $23 = ((($21)) + 8|0);
 HEAP32[$23>>2] = $7;
 $24 = ((($21)) + 12|0);
 HEAP32[$24>>2] = $9;
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = $11;
 $26 = ((($21)) + 20|0);
 HEAP32[$26>>2] = $13;
 $27 = (_g_object_ref($0)|0);
 $$pre$i$i = HEAP32[$20>>2]|0;
 $28 = ((($$pre$i$i)) + 24|0);
 $29 = HEAP32[$28>>2]|0;
 $30 = ($29|0)==(0|0);
 if ($30) {
  $$pre$phi$i$i$iZ2D = $28;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
  return ($19|0);
 }
 _g_object_unref($29);
 $31 = HEAP32[$20>>2]|0;
 $32 = ((($31)) + 24|0);
 HEAP32[$32>>2] = 0;
 $$pre$phi$i$i$iZ2D = $32;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $27;
 return ($19|0);
}
function __vala_system_collections_generic_dictionary_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144040)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_get_type()|0);
  $7 = (_g_type_register_static($6,135860,119944,0)|0);
  _g_once_init_leave(144040,$7);
 }
 $8 = HEAP32[36010]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_system_collections_generic_map_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
  break;
 }
 case 11:  {
  $11 = (_system_collections_generic_map_get_Keys($0)|0);
  _g_value_take_object($2,$11);
  STACKTOP = sp;return;
  break;
 }
 case 12:  {
  $12 = (_system_collections_generic_map_get_Values($0)|0);
  _g_value_take_object($2,$12);
  STACKTOP = sp;return;
  break;
 }
 default: {
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$3>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (_g_type_name($19)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2590;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $20;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function __vala_system_collections_generic_dictionary_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144040)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_get_type()|0);
  $7 = (_g_type_register_static($6,135860,119944,0)|0);
  _g_once_init_leave(144040,$7);
 }
 $8 = HEAP32[36010]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 do {
  switch ($1|0) {
  case 8:  {
   $10 = (_g_value_get_pointer($2)|0);
   $11 = ((($0)) + 20|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($12)) + 48|0);
   HEAP32[$13>>2] = $10;
   STACKTOP = sp;return;
   break;
  }
  case 9:  {
   $14 = (_g_value_get_pointer($2)|0);
   $15 = ((($0)) + 20|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($16)) + 52|0);
   HEAP32[$17>>2] = $14;
   STACKTOP = sp;return;
   break;
  }
  case 10:  {
   $18 = (_g_value_get_pointer($2)|0);
   $19 = ((($0)) + 20|0);
   $20 = HEAP32[$19>>2]|0;
   $21 = ((($20)) + 56|0);
   HEAP32[$21>>2] = $18;
   STACKTOP = sp;return;
   break;
  }
  case 1:  {
   $22 = (_g_value_get_gtype($2)|0);
   $23 = ((($0)) + 20|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$24>>2] = $22;
   STACKTOP = sp;return;
   break;
  }
  case 2:  {
   $25 = (_g_value_get_pointer($2)|0);
   $26 = ((($0)) + 20|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = ((($27)) + 4|0);
   HEAP32[$28>>2] = $25;
   STACKTOP = sp;return;
   break;
  }
  case 3:  {
   $29 = (_g_value_get_pointer($2)|0);
   $30 = ((($0)) + 20|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ((($31)) + 8|0);
   HEAP32[$32>>2] = $29;
   STACKTOP = sp;return;
   break;
  }
  case 4:  {
   $33 = (_g_value_get_gtype($2)|0);
   $34 = ((($0)) + 20|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($35)) + 12|0);
   HEAP32[$36>>2] = $33;
   STACKTOP = sp;return;
   break;
  }
  case 5:  {
   $37 = (_g_value_get_pointer($2)|0);
   $38 = ((($0)) + 20|0);
   $39 = HEAP32[$38>>2]|0;
   $40 = ((($39)) + 16|0);
   HEAP32[$40>>2] = $37;
   STACKTOP = sp;return;
   break;
  }
  case 6:  {
   $41 = (_g_value_get_pointer($2)|0);
   $42 = ((($0)) + 20|0);
   $43 = HEAP32[$42>>2]|0;
   $44 = ((($43)) + 20|0);
   HEAP32[$44>>2] = $41;
   STACKTOP = sp;return;
   break;
  }
  default: {
   $45 = ((($3)) + 4|0);
   $46 = HEAP32[$45>>2]|0;
   $47 = HEAP32[$3>>2]|0;
   $48 = HEAP32[$47>>2]|0;
   $49 = (_g_type_name($48)|0);
   $50 = HEAP32[$0>>2]|0;
   $51 = HEAP32[$50>>2]|0;
   $52 = (_g_type_name($51)|0);
   HEAP32[$vararg_buffer>>2] = 135941;
   $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
   HEAP32[$vararg_ptr1>>2] = 2628;
   $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
   HEAP32[$vararg_ptr2>>2] = 140993;
   $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
   HEAP32[$vararg_ptr3>>2] = $1;
   $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
   HEAP32[$vararg_ptr4>>2] = $46;
   $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
   HEAP32[$vararg_ptr5>>2] = $49;
   $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
   HEAP32[$vararg_ptr6>>2] = $52;
   _g_log(0,16,140939,$vararg_buffer);
   STACKTOP = sp;return;
  }
  }
 } while(0);
}
function _system_collections_generic_dictionary_finalize($0) {
 $0 = $0|0;
 var $$01$i$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $or$cond$i$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144040)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_get_type()|0);
  $4 = (_g_type_register_static($3,135860,119944,0)|0);
  _g_once_init_leave(144040,$4);
 }
 $5 = HEAP32[36010]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 _system_collections_generic_map_Clear($0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 32|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($8)) + 36|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ($10|0)!=(0|0);
 $14 = ($12|0)>(0);
 $or$cond$i$i = $13 & $14;
 if ($or$cond$i$i) {
  $$01$i$i = 0;
  while(1) {
   $15 = (($10) + ($$01$i$i<<2)|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ($16|0)==(0|0);
   if (!($17)) {
    _system_collections_generic_dictionary_node_free($16);
   }
   $18 = (($$01$i$i) + 1)|0;
   $exitcond$i$i = ($18|0)==($12|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01$i$i = $18;
   }
  }
 }
 _g_free($10);
 $19 = HEAP32[$7>>2]|0;
 $20 = ((($19)) + 32|0);
 HEAP32[$20>>2] = 0;
 $21 = HEAP32[36011]|0;
 $22 = (_g_type_check_class_cast($21,80)|0);
 $23 = ((($21)) + 36|0);
 $24 = HEAP32[$23>>2]|0;
 ftCall_vi($24|0,$0);
 return;
}
function _system_collections_generic_dictionary_value_collection_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36013] = $1;
 _g_type_class_add_private($0,28);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 379;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 380;
 $4 = ((($0)) + 108|0);
 HEAP32[$4>>2] = 381;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 382;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 383;
 $7 = ((($0)) + 104|0);
 HEAP32[$7>>2] = 384;
 $8 = (_system_collections_generic_collection_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 385;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = 386;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 24|0);
 HEAP32[$14>>2] = 387;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 36|0);
 HEAP32[$16>>2] = 388;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_once_init_enter(144040)|0);
 $31 = ($30|0)==(0);
 if ($31) {
  $34 = HEAP32[36010]|0;
  $35 = (_g_param_spec_object(136046,136046,136046,$34,226)|0);
  HEAP32[35564] = $35;
  _g_object_class_install_property($0,7,$35);
  $36 = (_g_type_check_class_cast($0,80)|0);
  $37 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
  HEAP32[35568] = $37;
  _g_object_class_install_property($0,8,$37);
  return;
 }
 $32 = (_system_collections_generic_map_get_type()|0);
 $33 = (_g_type_register_static($32,135860,119944,0)|0);
 _g_once_init_leave(144040,$33);
 $34 = HEAP32[36010]|0;
 $35 = (_g_param_spec_object(136046,136046,136046,$34,226)|0);
 HEAP32[35564] = $35;
 _g_object_class_install_property($0,7,$35);
 $36 = (_g_type_check_class_cast($0,80)|0);
 $37 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
 HEAP32[35568] = $37;
 _g_object_class_install_property($0,8,$37);
 return;
}
function _system_collections_generic_dictionary_value_collection_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144048)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,135996,119980,0)|0);
  _g_once_init_leave(144048,$4);
 }
 $5 = HEAP32[36012]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_dictionary_value_collection_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _system_collections_generic_dictionary_value_collection_real_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_once_init_enter(144056)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  $18 = (_system_collections_generic_iterator_get_type()|0);
  $19 = (_g_type_register_static($18,136247,120016,0)|0);
  _g_once_init_leave(144056,$19);
 }
 $20 = HEAP32[36014]|0;
 $21 = (_system_collections_generic_iterator_construct($20,$11,$13,$15)|0);
 $22 = ((($21)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$23>>2] = $5;
 $24 = ((($23)) + 4|0);
 HEAP32[$24>>2] = $7;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $9;
 $26 = ((($23)) + 12|0);
 HEAP32[$26>>2] = $11;
 $27 = ((($23)) + 16|0);
 HEAP32[$27>>2] = $13;
 $28 = ((($23)) + 20|0);
 HEAP32[$28>>2] = $15;
 $29 = ($4|0)==(0|0);
 if ($29) {
  $32 = $23;$37 = 0;
 } else {
  $30 = (_g_object_ref($4)|0);
  $$pre$i$i = HEAP32[$22>>2]|0;
  $32 = $$pre$i$i;$37 = $4;
 }
 $31 = ((($32)) + 24|0);
 $33 = HEAP32[$31>>2]|0;
 $34 = ($33|0)==(0|0);
 if ($34) {
  $$pre$phi$i$i$iZ2D = $31;$43 = $32;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
  $38 = ((($37)) + 20|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 44|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($43)) + 40|0);
  HEAP32[$42>>2] = $41;
  return ($21|0);
 }
 _g_object_unref($33);
 $35 = HEAP32[$22>>2]|0;
 $36 = ((($35)) + 24|0);
 HEAP32[$36>>2] = 0;
 $$pre$phi$i$i$iZ2D = $36;$43 = $35;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
 $38 = ((($37)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 44|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($43)) + 40|0);
 HEAP32[$42>>2] = $41;
 return ($21|0);
}
function _system_collections_generic_dictionary_value_collection_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,2057,136183,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_value_collection_real_Clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,2065,136117,0);
 // unreachable;
}
function _system_collections_generic_dictionary_value_collection_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,2073,136050,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_value_collection_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$2 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_system_collections_generic_iterable_iterator($0)|0);
 $3 = (_system_collections_generic_iterator_next($2)|0);
 $4 = ($3|0)==(0);
 L1: do {
  if (!($4)) {
   $5 = ((($0)) + 24|0);
   while(1) {
    $8 = HEAP32[$5>>2]|0;
    $9 = ((($8)) + 24|0);
    $10 = HEAP32[$9>>2]|0;
    $11 = ((($10)) + 20|0);
    $12 = HEAP32[$11>>2]|0;
    $13 = ((($12)) + 56|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = (_system_collections_generic_iterator_get($2)|0);
    $16 = (ftCall_iii($14|0,$15,$1)|0);
    $17 = ($15|0)==(0|0);
    if (!($17)) {
     $18 = HEAP32[$5>>2]|0;
     $19 = ((($18)) + 20|0);
     $20 = HEAP32[$19>>2]|0;
     $21 = ($20|0)==(0|0);
     if (!($21)) {
      ftCall_vi($20|0,$15);
     }
    }
    $22 = ($16|0)==(0);
    if (!($22)) {
     break;
    }
    $6 = (_system_collections_generic_iterator_next($2)|0);
    $7 = ($6|0)==(0);
    if ($7) {
     break L1;
    }
   }
   $23 = ($2|0)==(0|0);
   if ($23) {
    $$2 = 1;
    return ($$2|0);
   }
   _g_object_unref($2);
   $$2 = 1;
   return ($$2|0);
  }
 } while(0);
 $24 = ($2|0)==(0|0);
 if ($24) {
  $$2 = 0;
  return ($$2|0);
 }
 _g_object_unref($2);
 $$2 = 0;
 return ($$2|0);
}
function _system_collections_generic_dictionary_value_collection_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 24|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_map_get_Count($4)|0);
 return ($5|0);
}
function __vala_system_collections_generic_dictionary_value_collection_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144048)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,135996,119980,0)|0);
  _g_once_init_leave(144048,$7);
 }
 $8 = HEAP32[36012]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_collection_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2207;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_value_collection_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144048)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,135996,119980,0)|0);
  _g_once_init_leave(144048,$7);
 }
 $8 = HEAP32[36012]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 24|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 24|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$23>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $24 = (_g_value_get_pointer($2)|0);
  $25 = ((($0)) + 24|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  HEAP32[$27>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $28 = (_g_value_get_pointer($2)|0);
  $29 = ((($0)) + 24|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($30)) + 8|0);
  HEAP32[$31>>2] = $28;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $32 = (_g_value_get_gtype($2)|0);
  $33 = ((($0)) + 24|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 12|0);
  HEAP32[$35>>2] = $32;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $36 = (_g_value_get_pointer($2)|0);
  $37 = ((($0)) + 24|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($38)) + 16|0);
  HEAP32[$39>>2] = $36;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $40 = (_g_value_get_pointer($2)|0);
  $41 = ((($0)) + 24|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ((($42)) + 20|0);
  HEAP32[$43>>2] = $40;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $44 = ((($3)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$3>>2]|0;
  $47 = HEAP32[$46>>2]|0;
  $48 = (_g_type_name($47)|0);
  $49 = HEAP32[$0>>2]|0;
  $50 = HEAP32[$49>>2]|0;
  $51 = (_g_type_name($50)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2239;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $45;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $48;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $51;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_value_collection_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144048)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,135996,119980,0)|0);
  _g_once_init_leave(144048,$4);
 }
 $5 = HEAP32[36012]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 24|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36013]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_value_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36015] = $1;
 _g_type_class_add_private($0,44);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 389;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 390;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 391;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 392;
 $6 = (_system_collections_generic_iterator_get_type()|0);
 $7 = (_g_type_check_class_cast($0,$6)|0);
 $8 = ((($0)) + 112|0);
 HEAP32[$8>>2] = 393;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 394;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 24|0);
 HEAP32[$12>>2] = 395;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 36|0);
 HEAP32[$14>>2] = 396;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_once_init_enter(144040)|0);
 $29 = ($28|0)==(0);
 if ($29) {
  $32 = HEAP32[36010]|0;
  $33 = (_g_param_spec_object(136046,136046,136046,$32,226)|0);
  HEAP32[35572] = $33;
  _g_object_class_install_property($0,7,$33);
  $34 = (_g_type_check_class_cast($0,80)|0);
  $35 = (_g_param_spec_boolean(137581,137581,137581,0,225)|0);
  HEAP32[35576] = $35;
  _g_object_class_install_property($0,8,$35);
  return;
 }
 $30 = (_system_collections_generic_map_get_type()|0);
 $31 = (_g_type_register_static($30,135860,119944,0)|0);
 _g_once_init_leave(144040,$31);
 $32 = HEAP32[36010]|0;
 $33 = (_g_param_spec_object(136046,136046,136046,$32,226)|0);
 HEAP32[35572] = $33;
 _g_object_class_install_property($0,7,$33);
 $34 = (_g_type_check_class_cast($0,80)|0);
 $35 = (_g_param_spec_boolean(137581,137581,137581,0,225)|0);
 HEAP32[35576] = $35;
 _g_object_class_install_property($0,8,$35);
 return;
}
function _system_collections_generic_dictionary_value_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144056)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136247,120016,0)|0);
  _g_once_init_leave(144056,$4);
 }
 $5 = HEAP32[36014]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_value_iterator_real_next($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,2280,136525,136422);
  // unreachable;
 }
 $12 = (_system_collections_generic_iterator_has_next($0)|0);
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = HEAP32[$1>>2]|0;
 $15 = ((($14)) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($14)) + 32|0);
 HEAP32[$17>>2] = $16;
 HEAP32[$15>>2] = 0;
 $18 = ($16|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_collections_generic_dictionary_value_iterator_real_has_next($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,2307,136458,136422);
  // unreachable;
 }
 $12 = ((($2)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $38 = $13;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $15 = ((($2)) + 32|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ($16|0)==(0);
 $18 = $16;
 if ($17) {
  $24 = $18;
 } else {
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  HEAP32[$12>>2] = $20;
  $21 = $20;
  $24 = $21;
 }
 $22 = ((($2)) + 28|0);
 $23 = ($24|0)==(0|0);
 if (!($23)) {
  $38 = $24;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $25 = ((($8)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($8)) + 32|0);
 $$pre = HEAP32[$22>>2]|0;
 $29 = $$pre;$40 = $24;
 while(1) {
  $28 = (($29) + 1)|0;
  $30 = ($28|0)<($26|0);
  if (!($30)) {
   $38 = $40;
   label = 11;
   break;
  }
  HEAP32[$22>>2] = $28;
  $31 = HEAP32[$27>>2]|0;
  $32 = (($31) + ($28<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ($33|0)==(0);
  $35 = $33;
  if ($34) {
   $29 = $28;$40 = $35;
  } else {
   break;
  }
 }
 if ((label|0) == 11) {
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $36 = $33;
 $38 = $36;
 $37 = ($38|0)!=(0|0);
 $39 = $37&1;
 return ($39|0);
}
function _system_collections_generic_dictionary_value_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,2376,136360,136422);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,135941,2378,136360,136444);
  // unreachable;
 }
 $15 = ((($13)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $22 = 0;
  return ($22|0);
 }
 $18 = ((($2)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $22 = $16;
  return ($22|0);
 }
 $21 = (ftCall_ii($19|0,$16)|0);
 $22 = $21;
 return ($22|0);
}
function _system_collections_generic_dictionary_value_iterator_real_Remove($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,2390,136295,0);
 // unreachable;
}
function _system_collections_generic_dictionary_value_iterator_real_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_dictionary_value_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144056)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136247,120016,0)|0);
  _g_once_init_leave(144056,$7);
 }
 $8 = HEAP32[36014]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_iterator_get_valid($0)|0);
  _g_value_set_boolean($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2478;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_value_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144056)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136247,120016,0)|0);
  _g_once_init_leave(144056,$7);
 }
 $8 = HEAP32[36014]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 40|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2510;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_value_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144056)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136247,120016,0)|0);
  _g_once_init_leave(144056,$4);
 }
 $5 = HEAP32[36014]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36015]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_key_set_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36017] = $1;
 _g_type_class_add_private($0,28);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 397;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 398;
 $4 = ((($0)) + 108|0);
 HEAP32[$4>>2] = 399;
 $5 = ((($0)) + 116|0);
 HEAP32[$5>>2] = 400;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 401;
 $7 = ((($0)) + 104|0);
 HEAP32[$7>>2] = 402;
 $8 = (_system_collections_generic_collection_get_type()|0);
 $9 = (_g_type_check_class_cast($0,$8)|0);
 $10 = ((($0)) + 128|0);
 HEAP32[$10>>2] = 403;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = 404;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 24|0);
 HEAP32[$14>>2] = 405;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = ((($0)) + 36|0);
 HEAP32[$16>>2] = 406;
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_g_once_init_enter(144040)|0);
 $31 = ($30|0)==(0);
 if ($31) {
  $34 = HEAP32[36010]|0;
  $35 = (_g_param_spec_object(136046,136046,136046,$34,226)|0);
  HEAP32[35580] = $35;
  _g_object_class_install_property($0,7,$35);
  $36 = (_g_type_check_class_cast($0,80)|0);
  $37 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
  HEAP32[35584] = $37;
  _g_object_class_install_property($0,8,$37);
  return;
 }
 $32 = (_system_collections_generic_map_get_type()|0);
 $33 = (_g_type_register_static($32,135860,119944,0)|0);
 _g_once_init_leave(144040,$33);
 $34 = HEAP32[36010]|0;
 $35 = (_g_param_spec_object(136046,136046,136046,$34,226)|0);
 HEAP32[35580] = $35;
 _g_object_class_install_property($0,7,$35);
 $36 = (_g_type_check_class_cast($0,80)|0);
 $37 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
 HEAP32[35584] = $37;
 _g_object_class_install_property($0,8,$37);
 return;
}
function _system_collections_generic_dictionary_key_set_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144064)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_set_get_type()|0);
  $4 = (_g_type_register_static($3,136588,120052,0)|0);
  _g_once_init_leave(144064,$4);
 }
 $5 = HEAP32[36016]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_dictionary_key_set_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 return ($3|0);
}
function _system_collections_generic_dictionary_key_set_real_iterator($0) {
 $0 = $0|0;
 var $$pre$i$i = 0, $$pre$phi$i$i$iZ2D = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$2>>2]|0;
 $6 = ((($2)) + 4|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($2)) + 8|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ((($2)) + 12|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($2)) + 16|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($2)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_once_init_enter(144072)|0);
 $17 = ($16|0)==(0);
 if (!($17)) {
  $18 = (_system_collections_generic_iterator_get_type()|0);
  $19 = (_g_type_register_static($18,136799,120088,0)|0);
  _g_once_init_leave(144072,$19);
 }
 $20 = HEAP32[36018]|0;
 $21 = (_system_collections_generic_iterator_construct($20,$5,$7,$9)|0);
 $22 = ((($21)) + 20|0);
 $23 = HEAP32[$22>>2]|0;
 HEAP32[$23>>2] = $5;
 $24 = ((($23)) + 4|0);
 HEAP32[$24>>2] = $7;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $9;
 $26 = ((($23)) + 12|0);
 HEAP32[$26>>2] = $11;
 $27 = ((($23)) + 16|0);
 HEAP32[$27>>2] = $13;
 $28 = ((($23)) + 20|0);
 HEAP32[$28>>2] = $15;
 $29 = ($4|0)==(0|0);
 if ($29) {
  $32 = $23;$37 = 0;
 } else {
  $30 = (_g_object_ref($4)|0);
  $$pre$i$i = HEAP32[$22>>2]|0;
  $32 = $$pre$i$i;$37 = $4;
 }
 $31 = ((($32)) + 24|0);
 $33 = HEAP32[$31>>2]|0;
 $34 = ($33|0)==(0|0);
 if ($34) {
  $$pre$phi$i$i$iZ2D = $31;$43 = $32;
  HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
  $38 = ((($37)) + 20|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ((($39)) + 44|0);
  $41 = HEAP32[$40>>2]|0;
  $42 = ((($43)) + 40|0);
  HEAP32[$42>>2] = $41;
  return ($21|0);
 }
 _g_object_unref($33);
 $35 = HEAP32[$22>>2]|0;
 $36 = ((($35)) + 24|0);
 HEAP32[$36>>2] = 0;
 $$pre$phi$i$i$iZ2D = $36;$43 = $35;
 HEAP32[$$pre$phi$i$i$iZ2D>>2] = $37;
 $38 = ((($37)) + 20|0);
 $39 = HEAP32[$38>>2]|0;
 $40 = ((($39)) + 44|0);
 $41 = HEAP32[$40>>2]|0;
 $42 = ((($43)) + 40|0);
 HEAP32[$42>>2] = $41;
 return ($21|0);
}
function _system_collections_generic_dictionary_key_set_real_Add($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,1345,136744,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_key_set_real_Clear($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,1353,136687,0);
 // unreachable;
}
function _system_collections_generic_dictionary_key_set_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,1361,136629,0);
 // unreachable;
 return (0)|0;
}
function _system_collections_generic_dictionary_key_set_real_Contains($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 28|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($3)) + 24|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = (_system_collections_generic_map_ContainsKey($5,$1)|0);
 return ($6|0);
}
function _system_collections_generic_dictionary_key_set_real_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 28|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_system_collections_generic_map_get_Count($4)|0);
 return ($5|0);
}
function __vala_system_collections_generic_dictionary_key_set_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144064)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_set_get_type()|0);
  $7 = (_g_type_register_static($6,136588,120052,0)|0);
  _g_once_init_leave(144064,$7);
 }
 $8 = HEAP32[36016]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_collection_get_Count($0)|0);
  _g_value_set_int($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1470;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_key_set_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144064)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_set_get_type()|0);
  $7 = (_g_type_register_static($6,136588,120052,0)|0);
  _g_once_init_leave(144064,$7);
 }
 $8 = HEAP32[36016]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 28|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 28|0);
  $23 = HEAP32[$22>>2]|0;
  HEAP32[$23>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $24 = (_g_value_get_pointer($2)|0);
  $25 = ((($0)) + 28|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = ((($26)) + 4|0);
  HEAP32[$27>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $28 = (_g_value_get_pointer($2)|0);
  $29 = ((($0)) + 28|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($30)) + 8|0);
  HEAP32[$31>>2] = $28;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $32 = (_g_value_get_gtype($2)|0);
  $33 = ((($0)) + 28|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = ((($34)) + 12|0);
  HEAP32[$35>>2] = $32;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $36 = (_g_value_get_pointer($2)|0);
  $37 = ((($0)) + 28|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = ((($38)) + 16|0);
  HEAP32[$39>>2] = $36;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $40 = (_g_value_get_pointer($2)|0);
  $41 = ((($0)) + 28|0);
  $42 = HEAP32[$41>>2]|0;
  $43 = ((($42)) + 20|0);
  HEAP32[$43>>2] = $40;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $44 = ((($3)) + 4|0);
  $45 = HEAP32[$44>>2]|0;
  $46 = HEAP32[$3>>2]|0;
  $47 = HEAP32[$46>>2]|0;
  $48 = (_g_type_name($47)|0);
  $49 = HEAP32[$0>>2]|0;
  $50 = HEAP32[$49>>2]|0;
  $51 = (_g_type_name($50)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1502;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $45;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $48;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $51;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_key_set_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144064)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_set_get_type()|0);
  $4 = (_g_type_register_static($3,136588,120052,0)|0);
  _g_once_init_leave(144064,$4);
 }
 $5 = HEAP32[36016]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 28|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36017]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_key_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36019] = $1;
 _g_type_class_add_private($0,44);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 407;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 408;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 409;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 410;
 $6 = (_system_collections_generic_iterator_get_type()|0);
 $7 = (_g_type_check_class_cast($0,$6)|0);
 $8 = ((($0)) + 112|0);
 HEAP32[$8>>2] = 411;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 28|0);
 HEAP32[$10>>2] = 412;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = ((($0)) + 24|0);
 HEAP32[$12>>2] = 413;
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = ((($0)) + 36|0);
 HEAP32[$14>>2] = 414;
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$24);
 $25 = (_g_type_check_class_cast($0,80)|0);
 $26 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$26);
 $27 = (_g_type_check_class_cast($0,80)|0);
 $28 = (_g_once_init_enter(144040)|0);
 $29 = ($28|0)==(0);
 if ($29) {
  $32 = HEAP32[36010]|0;
  $33 = (_g_param_spec_object(136046,136046,136046,$32,226)|0);
  HEAP32[35588] = $33;
  _g_object_class_install_property($0,7,$33);
  $34 = (_g_type_check_class_cast($0,80)|0);
  $35 = (_g_param_spec_boolean(137581,137581,137581,0,225)|0);
  HEAP32[35592] = $35;
  _g_object_class_install_property($0,8,$35);
  return;
 }
 $30 = (_system_collections_generic_map_get_type()|0);
 $31 = (_g_type_register_static($30,135860,119944,0)|0);
 _g_once_init_leave(144040,$31);
 $32 = HEAP32[36010]|0;
 $33 = (_g_param_spec_object(136046,136046,136046,$32,226)|0);
 HEAP32[35588] = $33;
 _g_object_class_install_property($0,7,$33);
 $34 = (_g_type_check_class_cast($0,80)|0);
 $35 = (_g_param_spec_boolean(137581,137581,137581,0,225)|0);
 HEAP32[35592] = $35;
 _g_object_class_install_property($0,8,$35);
 return;
}
function _system_collections_generic_dictionary_key_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144072)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136799,120088,0)|0);
  _g_once_init_leave(144072,$4);
 }
 $5 = HEAP32[36018]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_key_iterator_real_next($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,1773,137033,136422);
  // unreachable;
 }
 $12 = (_system_collections_generic_iterator_has_next($0)|0);
 $13 = ($12|0)==(0);
 if ($13) {
  $$0 = 0;
  return ($$0|0);
 }
 $14 = HEAP32[$1>>2]|0;
 $15 = ((($14)) + 36|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ((($14)) + 32|0);
 HEAP32[$17>>2] = $16;
 HEAP32[$15>>2] = 0;
 $18 = ($16|0)!=(0);
 $19 = $18&1;
 $$0 = $19;
 return ($$0|0);
}
function _system_collections_generic_dictionary_key_iterator_real_has_next($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,1800,136968,136422);
  // unreachable;
 }
 $12 = ((($2)) + 36|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if (!($14)) {
  $38 = $13;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $15 = ((($2)) + 32|0);
 $16 = HEAP32[$15>>2]|0;
 HEAP32[$12>>2] = $16;
 $17 = ($16|0)==(0);
 $18 = $16;
 if ($17) {
  $24 = $18;
 } else {
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  HEAP32[$12>>2] = $20;
  $21 = $20;
  $24 = $21;
 }
 $22 = ((($2)) + 28|0);
 $23 = ($24|0)==(0|0);
 if (!($23)) {
  $38 = $24;
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $25 = ((($8)) + 24|0);
 $26 = HEAP32[$25>>2]|0;
 $27 = ((($8)) + 32|0);
 $$pre = HEAP32[$22>>2]|0;
 $29 = $$pre;$40 = $24;
 while(1) {
  $28 = (($29) + 1)|0;
  $30 = ($28|0)<($26|0);
  if (!($30)) {
   $38 = $40;
   label = 11;
   break;
  }
  HEAP32[$22>>2] = $28;
  $31 = HEAP32[$27>>2]|0;
  $32 = (($31) + ($28<<2)|0);
  $33 = HEAP32[$32>>2]|0;
  HEAP32[$12>>2] = $33;
  $34 = ($33|0)==(0);
  $35 = $33;
  if ($34) {
   $29 = $28;$40 = $35;
  } else {
   break;
  }
 }
 if ((label|0) == 11) {
  $37 = ($38|0)!=(0|0);
  $39 = $37&1;
  return ($39|0);
 }
 $36 = $33;
 $38 = $36;
 $37 = ($38|0)!=(0|0);
 $39 = $37&1;
 return ($39|0);
}
function _system_collections_generic_dictionary_key_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 40|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,1869,136908,136422);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,135941,1871,136908,136444);
  // unreachable;
 }
 $15 = HEAP32[$13>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $21 = 0;
  return ($21|0);
 }
 $17 = ((($2)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $21 = $15;
  return ($21|0);
 }
 $20 = (ftCall_ii($18|0,$15)|0);
 $21 = $20;
 return ($21|0);
}
function _system_collections_generic_dictionary_key_iterator_real_Remove($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _g_assertion_message_expr(0,135941,1883,136845,0);
 // unreachable;
}
function _system_collections_generic_dictionary_key_iterator_real_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)!=(0|0);
 $6 = $5&1;
 return ($6|0);
}
function __vala_system_collections_generic_dictionary_key_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0;
 var $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144072)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136799,120088,0)|0);
  _g_once_init_leave(144072,$7);
 }
 $8 = HEAP32[36018]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(8);
 if ($cond) {
  $10 = (_system_collections_generic_iterator_get_valid($0)|0);
  _g_value_set_boolean($2,$10);
  STACKTOP = sp;return;
 } else {
  $11 = ((($3)) + 4|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = HEAP32[$3>>2]|0;
  $14 = HEAP32[$13>>2]|0;
  $15 = (_g_type_name($14)|0);
  $16 = HEAP32[$0>>2]|0;
  $17 = HEAP32[$16>>2]|0;
  $18 = (_g_type_name($17)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1971;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $12;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $15;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $18;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function __vala_system_collections_generic_dictionary_key_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144072)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,136799,120088,0)|0);
  _g_once_init_leave(144072,$7);
 }
 $8 = HEAP32[36018]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 40|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 2003;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_key_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144072)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,136799,120088,0)|0);
  _g_once_init_leave(144072,$4);
 }
 $5 = HEAP32[36018]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36019]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_dictionary_resize($0) {
 $0 = $0|0;
 var $$01$i$i = 0, $$0227$not = 0, $$0232 = 0, $$0234 = 0, $$0239 = 0, $$1233 = 0, $$1235 = 0, $$lcssa = 0, $$lcssa243 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i$i = 0, $or$cond = 0, $or$cond$i$i = 0, $spec$select = 0, $spec$select244 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 24|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 28|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6*3)|0;
 $8 = ($4|0)<($7|0);
 $9 = ($4|0)<(11);
 $10 = ($4*3)|0;
 $11 = ($10|0)>($6|0);
 $12 = ($4|0)>(13845162);
 $$0227$not = $9 | $8;
 $13 = $12 | $11;
 $or$cond = $13 & $$0227$not;
 if ($or$cond) {
  return;
 }
 $14 = (_g_spaced_primes_closest($6)|0);
 $15 = ($14|0)>(11);
 $16 = $15 ? $14 : 11;
 $17 = ($16|0)<(13845163);
 $18 = $17 ? $16 : 13845163;
 $19 = (($18) + 1)|0;
 $20 = (_g_malloc0_n($19,4)|0);
 $21 = HEAP32[$1>>2]|0;
 $22 = ((($21)) + 24|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = ($23|0)>(0);
 $25 = ((($21)) + 32|0);
 if ($24) {
  $27 = $25;$spec$select244 = 0;
  while(1) {
   $26 = HEAP32[$27>>2]|0;
   $28 = (($26) + ($spec$select244<<2)|0);
   $29 = HEAP32[$28>>2]|0;
   HEAP32[$28>>2] = 0;
   $$0232 = $29;$$0234 = 0;$$0239 = 1;
   while(1) {
    if ($$0239) {
     $$1233 = $$0232;$$1235 = $$0234;
    } else {
     $30 = ($$0232|0)==(0|0);
     if ($30) {
      $$1233 = $$0234;$$1235 = 0;
     } else {
      _system_collections_generic_dictionary_node_free($$0232);
      $$1233 = $$0234;$$1235 = 0;
     }
    }
    $31 = ($$1233|0)==(0|0);
    if ($31) {
     break;
    }
    $32 = ((($$1233)) + 8|0);
    $33 = HEAP32[$32>>2]|0;
    HEAP32[$32>>2] = 0;
    $34 = ($$1235|0)==(0|0);
    if (!($34)) {
     _system_collections_generic_dictionary_node_free($$1235);
    }
    $35 = ((($$1233)) + 12|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = (($36>>>0) % ($18>>>0))&-1;
    $38 = (($20) + ($37<<2)|0);
    $39 = HEAP32[$38>>2]|0;
    HEAP32[$38>>2] = 0;
    $40 = HEAP32[$32>>2]|0;
    $41 = ($40|0)==(0|0);
    if (!($41)) {
     _system_collections_generic_dictionary_node_free($40);
     HEAP32[$32>>2] = 0;
    }
    HEAP32[$32>>2] = $39;
    $42 = HEAP32[$38>>2]|0;
    $43 = ($42|0)==(0|0);
    if (!($43)) {
     _system_collections_generic_dictionary_node_free($42);
     HEAP32[$38>>2] = 0;
    }
    HEAP32[$38>>2] = $$1233;
    $$0232 = 0;$$0234 = $33;$$0239 = 0;
   }
   $44 = ($$1235|0)==(0|0);
   if (!($44)) {
    _system_collections_generic_dictionary_node_free($$1235);
   }
   $spec$select = (($spec$select244) + 1)|0;
   $45 = HEAP32[$1>>2]|0;
   $46 = ((($45)) + 24|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = ($spec$select|0)<($47|0);
   $49 = ((($45)) + 32|0);
   if ($48) {
    $27 = $49;$spec$select244 = $spec$select;
   } else {
    $$lcssa = $49;$$lcssa243 = $45;
    break;
   }
  }
 } else {
  $$lcssa = $25;$$lcssa243 = $21;
 }
 $50 = HEAP32[$$lcssa>>2]|0;
 $51 = ((($$lcssa243)) + 36|0);
 $52 = HEAP32[$51>>2]|0;
 $53 = ($50|0)!=(0|0);
 $54 = ($52|0)>(0);
 $or$cond$i$i = $53 & $54;
 if ($or$cond$i$i) {
  $$01$i$i = 0;
  while(1) {
   $55 = (($50) + ($$01$i$i<<2)|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ($56|0)==(0|0);
   if (!($57)) {
    _system_collections_generic_dictionary_node_free($56);
   }
   $58 = (($$01$i$i) + 1)|0;
   $exitcond$i$i = ($58|0)==($52|0);
   if ($exitcond$i$i) {
    break;
   } else {
    $$01$i$i = $58;
   }
  }
 }
 _g_free($50);
 $59 = HEAP32[$1>>2]|0;
 $60 = ((($59)) + 32|0);
 HEAP32[$60>>2] = $20;
 $61 = ((($59)) + 36|0);
 HEAP32[$61>>2] = $18;
 $62 = ((($59)) + 40|0);
 HEAP32[$62>>2] = $18;
 $63 = ((($59)) + 24|0);
 HEAP32[$63>>2] = $18;
 _g_free(0);
 return;
}
function _system_collections_generic_dictionary_map_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36021] = $1;
 _g_type_class_add_private($0,40);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 415;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 416;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 417;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 418;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 24|0);
 HEAP32[$8>>2] = 419;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = ((($0)) + 36|0);
 HEAP32[$10>>2] = 420;
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$12);
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$14);
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$20);
 $21 = (_g_type_check_class_cast($0,80)|0);
 $22 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$22);
 $23 = (_g_type_check_class_cast($0,80)|0);
 $24 = (_g_once_init_enter(144040)|0);
 $25 = ($24|0)==(0);
 if ($25) {
  $28 = HEAP32[36010]|0;
  $29 = (_g_param_spec_object(136046,136046,136046,$28,226)|0);
  HEAP32[35596] = $29;
  _g_object_class_install_property($0,7,$29);
  return;
 }
 $26 = (_system_collections_generic_map_get_type()|0);
 $27 = (_g_type_register_static($26,135860,119944,0)|0);
 _g_once_init_leave(144040,$27);
 $28 = HEAP32[36010]|0;
 $29 = (_g_param_spec_object(136046,136046,136046,$28,226)|0);
 HEAP32[35596] = $29;
 _g_object_class_install_property($0,7,$29);
 return;
}
function _system_collections_generic_dictionary_map_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144080)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137094,120124,0)|0);
  _g_once_init_leave(144080,$4);
 }
 $5 = HEAP32[36020]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 20|0);
 HEAP32[$7>>2] = $6;
 $8 = ((($6)) + 28|0);
 HEAP32[$8>>2] = -1;
 return;
}
function _system_collections_generic_dictionary_map_iterator_real_next($0) {
 $0 = $0|0;
 var $$lcssa = 0, $$phi$trans$insert = 0, $$phi$trans$insert72 = 0, $$pre = 0, $$pre70 = 0, $$pre71 = 0, $$pre73 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 32|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 8|0);
  $7 = HEAP32[$6>>2]|0;
  HEAP32[$3>>2] = $7;
  $8 = $7;
  $9 = ($7|0)==(0);
  if (!($9)) {
   $$lcssa = $8;
   $22 = ($$lcssa|0)!=(0|0);
   $23 = $22&1;
   return ($23|0);
  }
 }
 $10 = ((($2)) + 28|0);
 $11 = ((($2)) + 24|0);
 $$pre = HEAP32[$10>>2]|0;
 $$pre70 = HEAP32[$11>>2]|0;
 $$phi$trans$insert = ((($$pre70)) + 20|0);
 $$pre71 = HEAP32[$$phi$trans$insert>>2]|0;
 $$phi$trans$insert72 = ((($$pre71)) + 24|0);
 $$pre73 = HEAP32[$$phi$trans$insert72>>2]|0;
 $12 = ((($$pre71)) + 32|0);
 $14 = $$pre;$24 = 0;
 while(1) {
  $13 = (($14) + 1)|0;
  $15 = ($13|0)<($$pre73|0);
  if (!($15)) {
   $$lcssa = $24;
   label = 7;
   break;
  }
  HEAP32[$10>>2] = $13;
  $16 = HEAP32[$12>>2]|0;
  $17 = (($16) + ($13<<2)|0);
  $18 = HEAP32[$17>>2]|0;
  HEAP32[$3>>2] = $18;
  $19 = $18;
  $20 = ($18|0)==(0);
  if ($20) {
   $14 = $13;$24 = $19;
  } else {
   break;
  }
 }
 if ((label|0) == 7) {
  $22 = ($$lcssa|0)!=(0|0);
  $23 = $22&1;
  return ($23|0);
 }
 $21 = $18;
 $$lcssa = $21;
 $22 = ($$lcssa|0)!=(0|0);
 $23 = $22&1;
 return ($23|0);
}
function _system_collections_generic_dictionary_map_iterator_real_get_key($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,1597,137206,136422);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,135941,1599,137206,136444);
  // unreachable;
 }
 $15 = HEAP32[$13>>2]|0;
 $16 = ($15|0)==(0|0);
 if ($16) {
  $21 = 0;
  return ($21|0);
 }
 $17 = ((($2)) + 4|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ($18|0)==(0|0);
 if ($19) {
  $21 = $15;
  return ($21|0);
 }
 $20 = (ftCall_ii($18|0,$15)|0);
 $21 = $20;
 return ($21|0);
}
function _system_collections_generic_dictionary_map_iterator_real_get_value($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 36|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($2)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ((($6)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 44|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($4|0)==($10|0);
 if (!($11)) {
  _g_assertion_message_expr(0,135941,1622,137140,136422);
  // unreachable;
 }
 $12 = ((($2)) + 32|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  _g_assertion_message_expr(0,135941,1624,137140,136444);
  // unreachable;
 }
 $15 = ((($13)) + 4|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $22 = 0;
  return ($22|0);
 }
 $18 = ((($2)) + 16|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = ($19|0)==(0|0);
 if ($20) {
  $22 = $16;
  return ($22|0);
 }
 $21 = (ftCall_ii($19|0,$16)|0);
 $22 = $21;
 return ($22|0);
}
function __vala_system_collections_generic_dictionary_map_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144080)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137094,120124,0)|0);
  _g_once_init_leave(144080,$7);
 }
 $8 = HEAP32[36020]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 135941;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 1700;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_dictionary_map_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$pre$phi$iZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0;
 var $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144080)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_map_iterator_get_type()|0);
  $7 = (_g_type_register_static($6,137094,120124,0)|0);
  _g_once_init_leave(144080,$7);
 }
 $8 = HEAP32[36020]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 7:  {
  $10 = (_g_value_get_object($2)|0);
  $11 = ($10|0)==(0|0);
  if ($11) {
   $20 = 0;
  } else {
   $12 = (_g_object_ref($10)|0);
   $20 = $10;
  }
  $13 = ((($0)) + 20|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 24|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($16|0)==(0|0);
  if ($17) {
   $$pre$phi$iZ2D = $15;$26 = $14;
  } else {
   _g_object_unref($16);
   $18 = HEAP32[$13>>2]|0;
   $19 = ((($18)) + 24|0);
   HEAP32[$19>>2] = 0;
   $$pre$phi$iZ2D = $19;$26 = $18;
  }
  HEAP32[$$pre$phi$iZ2D>>2] = $20;
  $21 = ((($20)) + 20|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 44|0);
  $24 = HEAP32[$23>>2]|0;
  $25 = ((($26)) + 36|0);
  HEAP32[$25>>2] = $24;
  STACKTOP = sp;return;
  break;
 }
 case 1:  {
  $27 = (_g_value_get_gtype($2)|0);
  $28 = ((($0)) + 20|0);
  $29 = HEAP32[$28>>2]|0;
  HEAP32[$29>>2] = $27;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $30 = (_g_value_get_pointer($2)|0);
  $31 = ((($0)) + 20|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ((($32)) + 4|0);
  HEAP32[$33>>2] = $30;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $34 = (_g_value_get_pointer($2)|0);
  $35 = ((($0)) + 20|0);
  $36 = HEAP32[$35>>2]|0;
  $37 = ((($36)) + 8|0);
  HEAP32[$37>>2] = $34;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $38 = (_g_value_get_gtype($2)|0);
  $39 = ((($0)) + 20|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = ((($40)) + 12|0);
  HEAP32[$41>>2] = $38;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $42 = (_g_value_get_pointer($2)|0);
  $43 = ((($0)) + 20|0);
  $44 = HEAP32[$43>>2]|0;
  $45 = ((($44)) + 16|0);
  HEAP32[$45>>2] = $42;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $46 = (_g_value_get_pointer($2)|0);
  $47 = ((($0)) + 20|0);
  $48 = HEAP32[$47>>2]|0;
  $49 = ((($48)) + 20|0);
  HEAP32[$49>>2] = $46;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $50 = ((($3)) + 4|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = HEAP32[$3>>2]|0;
  $53 = HEAP32[$52>>2]|0;
  $54 = (_g_type_name($53)|0);
  $55 = HEAP32[$0>>2]|0;
  $56 = HEAP32[$55>>2]|0;
  $57 = (_g_type_name($56)|0);
  HEAP32[$vararg_buffer>>2] = 135941;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 1732;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $51;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $54;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $57;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_dictionary_map_iterator_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144080)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_map_iterator_get_type()|0);
  $4 = (_g_type_register_static($3,137094,120124,0)|0);
  _g_once_init_leave(144080,$4);
 }
 $5 = HEAP32[36020]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 24|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 24|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36021]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _system_collections_generic_iterable_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterable_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_object_construct($0)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_iterable_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144088)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36022]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,137270,120160,16)|0);
 _g_once_init_leave(144088,$3);
 $4 = HEAP32[36022]|0;
 return ($4|0);
}
function _system_collections_generic_iterable_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36023] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 421;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 422;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 28|0);
 HEAP32[$5>>2] = 423;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = 424;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_gtype(139075,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(139087,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(139107,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$13);
 return;
}
function _system_collections_generic_iterable_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144088)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,137270,120160,16)|0);
  _g_once_init_leave(144088,$4);
 }
 $5 = HEAP32[36022]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_iterable_real_get_element_type($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137448,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterable_real_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137356,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_iterable_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144088)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137270,120160,16)|0);
  _g_once_init_leave(144088,$7);
 }
 $8 = HEAP32[36022]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 137303;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 233;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterable_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144088)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137270,120160,16)|0);
  _g_once_init_leave(144088,$7);
 }
 $8 = HEAP32[36022]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 137303;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 253;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_iterator_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 96|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_has_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 100|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_get($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 104|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_object_construct($0)|0);
 $5 = ((($4)) + 16|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_iterator_get_valid($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 112|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_iterator_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144096)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36024]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,137548,120196,16)|0);
 _g_once_init_leave(144096,$3);
 $4 = HEAP32[36024]|0;
 return ($4|0);
}
function _system_collections_generic_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36025] = $1;
 _g_type_class_add_private($0,12);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 425;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 426;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 427;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 428;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = ((($0)) + 28|0);
 HEAP32[$7>>2] = 429;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = ((($0)) + 24|0);
 HEAP32[$9>>2] = 430;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_gtype(139075,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(139087,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$13);
 $14 = (_g_type_check_class_cast($0,80)|0);
 $15 = (_g_param_spec_pointer(139107,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$15);
 $16 = (_g_type_check_class_cast($0,80)|0);
 $17 = (_g_param_spec_boolean(137581,137581,137581,0,225)|0);
 HEAP32[(142416)>>2] = $17;
 _g_object_class_install_property($0,4,$17);
 return;
}
function _system_collections_generic_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144096)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,137548,120196,16)|0);
  _g_once_init_leave(144096,$4);
 }
 $5 = HEAP32[36024]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_iterator_real_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137909,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterator_real_has_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137817,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_iterator_real_get($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137730,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_iterator_real_Remove($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,137640,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144096)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137548,120196,16)|0);
  _g_once_init_leave(144096,$7);
 }
 $8 = HEAP32[36024]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 137587;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 267;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144096)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137548,120196,16)|0);
  _g_once_init_leave(144096,$7);
 }
 $8 = HEAP32[36024]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 137587;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 287;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_map_iterator_construct($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_object_construct($0)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $1;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $2;
 $11 = ((($9)) + 8|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($9)) + 12|0);
 HEAP32[$12>>2] = $4;
 $13 = ((($9)) + 16|0);
 HEAP32[$13>>2] = $5;
 $14 = ((($9)) + 20|0);
 HEAP32[$14>>2] = $6;
 return ($7|0);
}
function _system_collections_generic_map_iterator_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144104)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36026]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,137997,120232,16)|0);
 _g_once_init_leave(144104,$3);
 $4 = HEAP32[36026]|0;
 return ($4|0);
}
function _system_collections_generic_map_iterator_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36027] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 431;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 432;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 433;
 $5 = (_g_type_check_class_cast($0,80)|0);
 $6 = ((($0)) + 28|0);
 HEAP32[$6>>2] = 434;
 $7 = (_g_type_check_class_cast($0,80)|0);
 $8 = ((($0)) + 24|0);
 HEAP32[$8>>2] = 435;
 $9 = (_g_type_check_class_cast($0,80)|0);
 $10 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$10);
 $11 = (_g_type_check_class_cast($0,80)|0);
 $12 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$12);
 $13 = (_g_type_check_class_cast($0,80)|0);
 $14 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$14);
 $15 = (_g_type_check_class_cast($0,80)|0);
 $16 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$16);
 $17 = (_g_type_check_class_cast($0,80)|0);
 $18 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$18);
 $19 = (_g_type_check_class_cast($0,80)|0);
 $20 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$20);
 return;
}
function _system_collections_generic_map_iterator_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144104)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,137997,120232,16)|0);
  _g_once_init_leave(144104,$4);
 }
 $5 = HEAP32[36026]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_map_iterator_real_next($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138281,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_iterator_real_get_key($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138186,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_map_iterator_real_get_value($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138089,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_map_iterator_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144104)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137997,120232,16)|0);
  _g_once_init_leave(144104,$7);
 }
 $8 = HEAP32[36026]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 138033;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 242;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_map_iterator_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144104)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,137997,120232,16)|0);
  _g_once_init_leave(144104,$7);
 }
 $8 = HEAP32[36026]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 12|0);
  HEAP32[$24>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $25 = (_g_value_get_pointer($2)|0);
  $26 = ((($0)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 16|0);
  HEAP32[$28>>2] = $25;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $29 = (_g_value_get_pointer($2)|0);
  $30 = ((($0)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 20|0);
  HEAP32[$32>>2] = $29;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $33 = ((($3)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$3>>2]|0;
  $36 = HEAP32[$35>>2]|0;
  $37 = (_g_type_name($36)|0);
  $38 = HEAP32[$0>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_g_type_name($39)|0);
  HEAP32[$vararg_buffer>>2] = 138033;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 271;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $34;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $37;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $40;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_map_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 96|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_map_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$0>>2]|0;
 $3 = ((($2)) + 100|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (ftCall_iii($4|0,$0,$1)|0);
 return ($5|0);
}
function _system_collections_generic_map_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = ((($3)) + 104|0);
 $5 = HEAP32[$4>>2]|0;
 ftCall_viii($5|0,$0,$1,$2);
 return;
}
function _system_collections_generic_map_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 112|0);
 $3 = HEAP32[$2>>2]|0;
 ftCall_vi($3|0,$0);
 return;
}
function _system_collections_generic_map_construct($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $7 = (_object_construct($0)|0);
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 HEAP32[$9>>2] = $1;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $2;
 $11 = ((($9)) + 8|0);
 HEAP32[$11>>2] = $3;
 $12 = ((($9)) + 12|0);
 HEAP32[$12>>2] = $4;
 $13 = ((($9)) + 16|0);
 HEAP32[$13>>2] = $5;
 $14 = ((($9)) + 20|0);
 HEAP32[$14>>2] = $6;
 return ($7|0);
}
function _system_collections_generic_map_get_Count($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 120|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_Keys($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 124|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_Values($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = ((($1)) + 128|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (ftCall_ii($3|0,$0)|0);
 return ($4|0);
}
function _system_collections_generic_map_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144112)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36028]|0;
  return ($4|0);
 }
 $2 = (_object_get_type()|0);
 $3 = (_g_type_register_static($2,138373,120268,16)|0);
 _g_once_init_leave(144112,$3);
 $4 = HEAP32[36028]|0;
 return ($4|0);
}
function _system_collections_generic_map_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36029] = $1;
 _g_type_class_add_private($0,24);
 $2 = ((($0)) + 96|0);
 HEAP32[$2>>2] = 436;
 $3 = ((($0)) + 100|0);
 HEAP32[$3>>2] = 437;
 $4 = ((($0)) + 104|0);
 HEAP32[$4>>2] = 438;
 $5 = ((($0)) + 108|0);
 HEAP32[$5>>2] = 439;
 $6 = ((($0)) + 112|0);
 HEAP32[$6>>2] = 440;
 $7 = ((($0)) + 116|0);
 HEAP32[$7>>2] = 441;
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = ((($0)) + 28|0);
 HEAP32[$9>>2] = 442;
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = ((($0)) + 24|0);
 HEAP32[$11>>2] = 443;
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_gtype(138401,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$13);
 $14 = (_g_type_check_class_cast($0,80)|0);
 $15 = (_g_param_spec_pointer(138408,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$15);
 $16 = (_g_type_check_class_cast($0,80)|0);
 $17 = (_g_param_spec_pointer(138419,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$17);
 $18 = (_g_type_check_class_cast($0,80)|0);
 $19 = (_g_param_spec_gtype(138434,139082,139082,4,234)|0);
 _g_object_class_install_property($0,4,$19);
 $20 = (_g_type_check_class_cast($0,80)|0);
 $21 = (_g_param_spec_pointer(138441,139098,139098,234)|0);
 _g_object_class_install_property($0,5,$21);
 $22 = (_g_type_check_class_cast($0,80)|0);
 $23 = (_g_param_spec_pointer(138452,139122,139122,234)|0);
 _g_object_class_install_property($0,6,$23);
 $24 = (_g_type_check_class_cast($0,80)|0);
 $25 = (_g_param_spec_int(138467,138467,138467,-2147483648,2147483647,0,225)|0);
 HEAP32[(142460)>>2] = $25;
 _g_object_class_install_property($0,7,$25);
 $26 = (_g_type_check_class_cast($0,80)|0);
 $27 = (_system_collections_generic_set_get_type()|0);
 $28 = (_g_param_spec_object(138473,138473,138473,$27,225)|0);
 HEAP32[(142464)>>2] = $28;
 _g_object_class_install_property($0,8,$28);
 $29 = (_g_type_check_class_cast($0,80)|0);
 $30 = (_system_collections_generic_collection_get_type()|0);
 $31 = (_g_param_spec_object(138478,138478,138478,$30,225)|0);
 HEAP32[(142468)>>2] = $31;
 _g_object_class_install_property($0,9,$31);
 return;
}
function _system_collections_generic_map_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144112)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,138373,120268,16)|0);
  _g_once_init_leave(144112,$4);
 }
 $5 = HEAP32[36028]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function _system_collections_generic_map_real_ContainsKey($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,138957,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_real_get($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,138875,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function _system_collections_generic_map_real_set($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $3 = HEAP32[$0>>2]|0;
 $4 = HEAP32[$3>>2]|0;
 $5 = (_g_type_name($4)|0);
 HEAP32[$vararg_buffer>>2] = $5;
 _g_log(0,8,138793,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_map_real_Remove($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP32[$0>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 $4 = (_g_type_name($3)|0);
 HEAP32[$vararg_buffer>>2] = $4;
 _g_log(0,8,138708,$vararg_buffer);
 STACKTOP = sp;return 0;
}
function _system_collections_generic_map_real_Clear($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138624,$vararg_buffer);
 STACKTOP = sp;return;
}
function _system_collections_generic_map_real_map_iterator($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP32[$1>>2]|0;
 $3 = (_g_type_name($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 _g_log(0,8,138533,$vararg_buffer);
 STACKTOP = sp;return (0|0);
}
function __vala_system_collections_generic_map_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144112)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138373,120268,16)|0);
  _g_once_init_leave(144112,$7);
 }
 $8 = HEAP32[36028]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 138485;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 402;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_map_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144112)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,138373,120268,16)|0);
  _g_once_init_leave(144112,$7);
 }
 $8 = HEAP32[36028]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 16|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 16|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = (_g_value_get_gtype($2)|0);
  $22 = ((($0)) + 16|0);
  $23 = HEAP32[$22>>2]|0;
  $24 = ((($23)) + 12|0);
  HEAP32[$24>>2] = $21;
  STACKTOP = sp;return;
  break;
 }
 case 5:  {
  $25 = (_g_value_get_pointer($2)|0);
  $26 = ((($0)) + 16|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = ((($27)) + 16|0);
  HEAP32[$28>>2] = $25;
  STACKTOP = sp;return;
  break;
 }
 case 6:  {
  $29 = (_g_value_get_pointer($2)|0);
  $30 = ((($0)) + 16|0);
  $31 = HEAP32[$30>>2]|0;
  $32 = ((($31)) + 20|0);
  HEAP32[$32>>2] = $29;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $33 = ((($3)) + 4|0);
  $34 = HEAP32[$33>>2]|0;
  $35 = HEAP32[$3>>2]|0;
  $36 = HEAP32[$35>>2]|0;
  $37 = (_g_type_name($36)|0);
  $38 = HEAP32[$0>>2]|0;
  $39 = HEAP32[$38>>2]|0;
  $40 = (_g_type_name($39)|0);
  HEAP32[$vararg_buffer>>2] = 138485;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 431;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $34;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $37;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $40;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _system_collections_generic_set_construct($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = (_system_collections_generic_collection_construct($0,$1,$2,$3)|0);
 $5 = ((($4)) + 24|0);
 $6 = HEAP32[$5>>2]|0;
 HEAP32[$6>>2] = $1;
 $7 = ((($6)) + 4|0);
 HEAP32[$7>>2] = $2;
 $8 = ((($6)) + 8|0);
 HEAP32[$8>>2] = $3;
 return ($4|0);
}
function _system_collections_generic_set_get_type() {
 var $0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144120)|0);
 $1 = ($0|0)==(0);
 if ($1) {
  $4 = HEAP32[36030]|0;
  return ($4|0);
 }
 $2 = (_system_collections_generic_collection_get_type()|0);
 $3 = (_g_type_register_static($2,139047,120304,16)|0);
 _g_once_init_leave(144120,$3);
 $4 = HEAP32[36030]|0;
 return ($4|0);
}
function _system_collections_generic_set_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36031] = $1;
 _g_type_class_add_private($0,12);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 444;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 24|0);
 HEAP32[$5>>2] = 445;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_gtype(139075,139082,139082,4,234)|0);
 _g_object_class_install_property($0,1,$7);
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_pointer(139087,139098,139098,234)|0);
 _g_object_class_install_property($0,2,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_pointer(139107,139122,139122,234)|0);
 _g_object_class_install_property($0,3,$11);
 return;
}
function _system_collections_generic_set_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144120)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_system_collections_generic_collection_get_type()|0);
  $4 = (_g_type_register_static($3,139047,120304,16)|0);
  _g_once_init_leave(144120,$4);
 }
 $5 = HEAP32[36030]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 24|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_system_collections_generic_set_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144120)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,139047,120304,16)|0);
  _g_once_init_leave(144120,$7);
 }
 $8 = HEAP32[36030]|0;
 (_g_type_check_instance_cast($0,$8)|0);
 $9 = ((($3)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = HEAP32[$11>>2]|0;
 $13 = (_g_type_name($12)|0);
 $14 = HEAP32[$0>>2]|0;
 $15 = HEAP32[$14>>2]|0;
 $16 = (_g_type_name($15)|0);
 HEAP32[$vararg_buffer>>2] = 139135;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 229;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 140993;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $1;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $10;
 $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
 HEAP32[$vararg_ptr5>>2] = $13;
 $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
 HEAP32[$vararg_ptr6>>2] = $16;
 _g_log(0,16,140939,$vararg_buffer);
 STACKTOP = sp;return;
}
function __vala_system_collections_generic_set_set_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144120)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_system_collections_generic_collection_get_type()|0);
  $7 = (_g_type_register_static($6,139047,120304,16)|0);
  _g_once_init_leave(144120,$7);
 }
 $8 = HEAP32[36030]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = (_g_value_get_gtype($2)|0);
  $11 = ((($0)) + 24|0);
  $12 = HEAP32[$11>>2]|0;
  HEAP32[$12>>2] = $10;
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = (_g_value_get_pointer($2)|0);
  $14 = ((($0)) + 24|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($15)) + 4|0);
  HEAP32[$16>>2] = $13;
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = (_g_value_get_pointer($2)|0);
  $18 = ((($0)) + 24|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($19)) + 8|0);
  HEAP32[$20>>2] = $17;
  STACKTOP = sp;return;
  break;
 }
 default: {
  $21 = ((($3)) + 4|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = HEAP32[$3>>2]|0;
  $24 = HEAP32[$23>>2]|0;
  $25 = (_g_type_name($24)|0);
  $26 = HEAP32[$0>>2]|0;
  $27 = HEAP32[$26>>2]|0;
  $28 = (_g_type_name($27)|0);
  HEAP32[$vararg_buffer>>2] = 139135;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 249;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $22;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $25;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $28;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _stbi_image_free($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _free($0);
 return;
}
function _stbi_set_flip_vertically_on_load($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 HEAP32[36033] = $0;
 return;
}
function _stbi_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$cast$i$i$i = 0, $$sink$i$i$i$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 192|0;
 $5 = sp;
 $6 = (_fopen($0,139183)|0);
 $7 = ($6|0)==(0|0);
 if ($7) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $8 = ((($5)) + 16|0);
 ;HEAP32[$8>>2]=HEAP32[120340>>2]|0;HEAP32[$8+4>>2]=HEAP32[120340+4>>2]|0;HEAP32[$8+8>>2]=HEAP32[120340+8>>2]|0;
 $9 = ((($5)) + 28|0);
 HEAP32[$9>>2] = $6;
 $10 = ((($5)) + 36|0);
 HEAP32[$10>>2] = 128;
 $11 = ((($5)) + 32|0);
 HEAP32[$11>>2] = 1;
 $12 = ((($5)) + 40|0);
 $13 = ((($5)) + 176|0);
 HEAP32[$13>>2] = $12;
 $14 = ((($5)) + 16|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (ftCall_iiii($15|0,$6,$12,128)|0);
 $17 = ($16|0)==(0);
 if ($17) {
  HEAP32[$11>>2] = 0;
  $18 = ((($5)) + 41|0);
  HEAP8[$12>>0] = 0;
  $$sink$i$i$i$i = $18;
 } else {
  $19 = (((($5)) + 40|0) + ($16)|0);
  $$sink$i$i$i$i = $19;
 }
 $20 = ((($5)) + 168|0);
 HEAP32[$20>>2] = $12;
 $21 = ((($5)) + 172|0);
 HEAP32[$21>>2] = $$sink$i$i$i$i;
 $$cast$i$i$i = $$sink$i$i$i$i;
 $22 = ((($5)) + 180|0);
 HEAP32[$22>>2] = $$cast$i$i$i;
 $23 = (_stbi__load_and_postprocess_8bit($5,$1,$2,$3,$4)|0);
 $24 = ($23|0)==(0|0);
 if (!($24)) {
  $25 = HEAP32[$21>>2]|0;
  $26 = HEAP32[$20>>2]|0;
  $27 = (($26) - ($25))|0;
  (_fseek($6,$27,1)|0);
 }
 (_fclose($6)|0);
 $$0 = $23;
 STACKTOP = sp;return ($$0|0);
}
function _stbi__load_and_postprocess_8bit($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0 = 0, $$0$i = 0, $$01819$i = 0, $$023 = 0, $$04553$i = 0, $$04652$i = 0, $$04751$i = 0, $$054$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2064|0;
 $5 = sp;
 $6 = sp + 2048|0;
 $7 = (_stbi__load_main($0,$1,$2,$3,$4,$6,8)|0);
 $8 = ($7|0)==(0|0);
 if ($8) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $9 = HEAP32[$6>>2]|0;
 switch ($9|0) {
 case 8:  {
  $$023 = $7;
  break;
 }
 case 16:  {
  label = 4;
  break;
 }
 default: {
  ___assert_fail((139186|0),(139212|0),1094,(139238|0));
  // unreachable;
 }
 }
 if ((label|0) == 4) {
  $10 = HEAP32[$1>>2]|0;
  $11 = HEAP32[$2>>2]|0;
  $12 = ($4|0)==(0);
  if ($12) {
   $13 = HEAP32[$3>>2]|0;
   $16 = $13;
  } else {
   $16 = $4;
  }
  $14 = Math_imul($11, $10)|0;
  $15 = Math_imul($14, $16)|0;
  $17 = (_malloc($15)|0);
  $18 = ($17|0)==(0|0);
  if ($18) {
   $$0$i = 0;
  } else {
   $19 = ($15|0)>(0);
   if ($19) {
    $$01819$i = 0;
    while(1) {
     $20 = (($7) + ($$01819$i<<1)|0);
     $21 = HEAP16[$20>>1]|0;
     $22 = ($21&65535) >>> 8;
     $23 = $22&255;
     $24 = (($17) + ($$01819$i)|0);
     HEAP8[$24>>0] = $23;
     $25 = (($$01819$i) + 1)|0;
     $exitcond$i = ($25|0)==($15|0);
     if ($exitcond$i) {
      break;
     } else {
      $$01819$i = $25;
     }
    }
   }
   _free($7);
   $$0$i = $17;
  }
  HEAP32[$6>>2] = 8;
  $$023 = $$0$i;
 }
 $26 = HEAP32[36033]|0;
 $27 = ($26|0)==(0);
 if ($27) {
  $$0 = $$023;
  STACKTOP = sp;return ($$0|0);
 }
 $28 = ($4|0)==(0);
 if ($28) {
  $29 = HEAP32[$3>>2]|0;
  $33 = $29;
 } else {
  $33 = $4;
 }
 $30 = HEAP32[$1>>2]|0;
 $31 = HEAP32[$2>>2]|0;
 $32 = Math_imul($30, $33)|0;
 $34 = $31 >> 1;
 $35 = ($31|0)>(1);
 if ($35) {
  $36 = (($31) + -1)|0;
  $37 = ($32|0)==(0);
  if (!($37)) {
   $$054$i = 0;
   while(1) {
    $38 = Math_imul($$054$i, $32)|0;
    $39 = (($$023) + ($38)|0);
    $40 = (($36) - ($$054$i))|0;
    $41 = Math_imul($40, $32)|0;
    $42 = (($$023) + ($41)|0);
    $$04553$i = $32;$$04652$i = $42;$$04751$i = $39;
    while(1) {
     $43 = ($$04553$i>>>0)<(2048);
     $44 = $43 ? $$04553$i : 2048;
     _memcpy(($5|0),($$04751$i|0),($44|0))|0;
     _memcpy(($$04751$i|0),($$04652$i|0),($44|0))|0;
     _memcpy(($$04652$i|0),($5|0),($44|0))|0;
     $45 = (($$04751$i) + ($44)|0);
     $46 = (($$04652$i) + ($44)|0);
     $47 = (($$04553$i) - ($44))|0;
     $48 = ($47|0)==(0);
     if ($48) {
      break;
     } else {
      $$04553$i = $47;$$04652$i = $46;$$04751$i = $45;
     }
    }
    $49 = (($$054$i) + 1)|0;
    $50 = ($49|0)<($34|0);
    if ($50) {
     $$054$i = $49;
    } else {
     break;
    }
   }
  }
 }
 $$0 = $$023;
 STACKTOP = sp;return ($$0|0);
}
function _stbi__load_main($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$$i = 0, $$$i$i = 0, $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i124 = 0, $$0$i$i$i197 = 0, $$0$i$i$i221 = 0, $$0$i$i$i75 = 0, $$0$i$i$i85 = 0, $$0$i$i103$i = 0, $$0$i$i106 = 0, $$0$i$i152 = 0, $$0$i$i166$i = 0, $$0$i$i213 = 0, $$0$i$i22$i = 0, $$0$i$i244$i = 0, $$0$i$i258$i = 0;
 var $$0$i$i272$i = 0, $$0$i$i304$i = 0, $$0$i$i321$i = 0, $$0$i$i339$i = 0, $$0$i$i348$i = 0, $$0$i$i48$i = 0, $$0$i$i6$i = 0, $$0$i$i71$i = 0, $$0$i$i85$i = 0, $$0$i106$i = 0, $$0$i11$i = 0, $$0$i11$i157 = 0, $$0$i117$i = 0, $$0$i124$i = 0, $$0$i131$i = 0, $$0$i136$i = 0, $$0$i138$i = 0, $$0$i145$i = 0, $$0$i148 = 0, $$0$i15$i = 0;
 var $$0$i152$i = 0, $$0$i159$i = 0, $$0$i169$i$i = 0, $$0$i176$i$i = 0, $$0$i18$i = 0, $$0$i180$us = Math_fround(0), $$0$i183$i$i = 0, $$0$i191$i$i = 0, $$0$i2$i = 0, $$0$i203$i$i = 0, $$0$i259 = 0, $$0$i26$i$i = 0, $$0$i315$i = 0, $$0$i33$i = 0, $$0$i36$i = 0, $$0$i40$i = 0, $$0$i44$i = 0, $$0$i47$i = 0, $$0$i47$i$i = 0, $$0$i5$i = 0;
 var $$0$i54$i$i = 0, $$0$i60$i = 0, $$0$i60$i$us = 0, $$0$i67$i = 0, $$0$i67$i$us = 0, $$0$i68$i = 0, $$0$i68119$i = 0, $$0$i75$i = 0, $$0$i8$i = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i = 0, $$0$i8$i$i129 = 0, $$0$i8$i$i204 = 0, $$0$i8$i$i228 = 0, $$0$i8$i$i91 = 0, $$0$i8$i110$i = 0, $$0$i8$i13$i = 0, $$0$i8$i173$i = 0, $$0$i8$i251$i = 0, $$0$i8$i265$i = 0;
 var $$0$i8$i279$i = 0, $$0$i8$i29$i = 0, $$0$i8$i311$i = 0, $$0$i8$i355$i = 0, $$0$i8$i78$i = 0, $$0$i8$i92$i = 0, $$0$i82$i = 0, $$0$i84$i = 0, $$0$i95$i = 0, $$0$i99$i = 0, $$0$us$i$us = Math_fround(0), $$0126$i$i = 0, $$0128249$i$i = 0, $$0131253$i$i = 0, $$0132260$i$i = 0, $$0134264$i$i = 0, $$0135263$i$i = 0, $$0147267$i$i = 0, $$0157$i$i = 0, $$0161268$i$i = 0;
 var $$0162$i$i = 0, $$0224392$i = 0, $$0226390$i = 0, $$0228200$i = 0, $$0229$i = 0, $$023$i117$i = 0, $$0230203$us$i = 0, $$0231202$us$i = 0, $$0233226$i = 0, $$0233389$i = 0, $$0234221$i = 0, $$0234376$i = 0, $$0235220$i = 0, $$0235373$i = 0, $$0236382$i = 0, $$0237219$i = 0, $$0238385$i = 0, $$0242229$i = 0, $$0242229$us$i = 0, $$0246$i = 0;
 var $$0247$i$i = 0, $$0248$ph$i = 0, $$0318$i = 0, $$0319235$i = 0, $$0322154$i = 0, $$0323234$i = 0, $$0329$i = 0, $$0330$i = 0, $$0331$i = 0, $$0332$i = 0, $$0333$i = 0, $$0334$i = 0, $$0335$i = 0, $$0336$i = 0, $$03362$i$i = 0, $$0337$i = 0, $$0337$i$us = 0, $$0338$i = 0, $$0338$i$us = 0, $$0339$i = 0;
 var $$0340196$i = 0, $$0342195$i = 0, $$0344200$i = 0, $$0354215$i = 0, $$03564$i$i = 0, $$0361$ph$i = 0, $$0363199$i = 0, $$03963$i$i = 0, $$04169$i = 0, $$042$i = 0, $$043$i = 0, $$043$i$i = 0, $$052$us$i = Math_fround(0), $$052$us$i$us = Math_fround(0), $$055$i = 0, $$05658$us$i = 0, $$05658$us$i$us = 0, $$05759$i$us = 0, $$05759$us$i = 0, $$05759$us$i$us = 0;
 var $$06$i$i = 0, $$1$i$i = 0, $$1$i$i69 = 0, $$1$i$us = Math_fround(0), $$1$i100$i = 0, $$1$i111$i = 0, $$1$i87$i = 0, $$1$us$i$us = Math_fround(0), $$1127$i$i = 0, $$1136259$i$i = 0, $$120$i$i = 0, $$120$i110$i = 0, $$120$i86$i = 0, $$120$i99$i = 0, $$1225388$i = 0, $$1227377$i = 0, $$1230$i = 0, $$1236192$i = 0, $$1236193$i = 0, $$1236193265$i = 0;
 var $$1236193268$i = 0, $$1237379$i = 0, $$1238190$i = 0, $$1238191$i = 0, $$1238191266$i = 0, $$1238191269$i = 0, $$1240208$i = 0, $$1243225$i = 0, $$1245$i$i = 0, $$1320228$i = 0, $$1324227$i = 0, $$1341$i = 0, $$1343$i = 0, $$1345$lcssa$i = 0, $$1345194$i = 0, $$13460$i$i = 0, $$1355193$i = 0, $$1364211$i = 0, $$13661$i$i = 0, $$153$us$i = Math_fround(0);
 var $$153$us$i$us = Math_fround(0), $$2$i = 0, $$2$i$i = 0, $$2$i$i70 = 0, $$2$i102$i = 0, $$2$i113$i = 0, $$2$i89$i = 0, $$2$lcssa$i$i = 0, $$2181$ph$i = 0, $$2181183$i = 0, $$2181184$i = 0, $$221$i$i = 0, $$221$i101$i = 0, $$221$i112$i = 0, $$221$i88$i = 0, $$2228374$i = 0, $$2231$i = 0, $$2244218$i = 0, $$2252$i$i = 0, $$2321221$i = 0;
 var $$2325$i = 0, $$2346212$i = 0, $$2356203$i = 0, $$2356203$i$us = 0, $$2365233$i = 0, $$23759$i$i = 0, $$241$i$i = 0, $$3$i = 0, $$3$i$i = 0, $$3$i104$i = 0, $$3$i115$i = 0, $$3$i91$i = 0, $$3205$us$i = 0, $$322$i$i = 0, $$322$i103$i = 0, $$322$i114$i = 0, $$322$i90$i = 0, $$3245201$us$i = 0, $$3326220$i = 0, $$3347204$i = 0;
 var $$3347204$i$us = 0, $$3357226$i = 0, $$3366187$us$i = 0, $$3386$i = 0, $$4$i$i = 0, $$4199$i = 0, $$4248$i$i = 0, $$4327$i = 0, $$4358219$i = 0, $$4383$i = 0, $$5$i = 0, $$5$lcssa$i$i = 0, $$5246$i$i = 0, $$5328$i = 0, $$5359190$i = 0, $$5380$i = 0, $$6360186$us$i = 0, $$6370$i = 0, $$7$i = 0, $$7244$i$i = 0;
 var $$7371$i = 0, $$8$i$i = 0, $$cast = 0, $$cast267 = 0, $$in$i = 0, $$in$i185 = 0, $$in$i212 = 0, $$in$i84 = 0, $$in123$i = 0, $$in124$i = 0, $$in125$i = 0, $$in248$i = 0, $$in249$i = 0, $$in250$i = 0, $$in251$i = 0, $$in252$i = 0, $$in253$i = 0, $$in254$i = 0, $$in255$i = 0, $$in256$i = 0;
 var $$in257$i = 0, $$in258$i = 0, $$in259$i = 0, $$in260$i = 0, $$in261$i = 0, $$in262$i = 0, $$in263$i = 0, $$off$i = 0, $$old = 0, $$ph = 0, $$ph417 = 0, $$ph419 = 0, $$ph421 = 0, $$ph424 = 0, $$ph427 = 0, $$ph430 = 0, $$ph433 = 0, $$ph437 = 0, $$ph438 = 0, $$ph439 = 0;
 var $$ph440 = 0, $$ph441 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$i121 = 0, $$pre$i$i$i192 = 0, $$pre$i$i$i216 = 0, $$pre$i$i$i72 = 0, $$pre$i$i$i79 = 0, $$pre$i$i1$i = 0, $$pre$i$i112 = 0, $$pre$i$i149 = 0, $$pre$i$i161$i = 0, $$pre$i$i169 = 0, $$pre$i$i17$i = 0, $$pre$i$i207 = 0, $$pre$i$i239$i = 0;
 var $$pre$i$i253$i = 0, $$pre$i$i267$i = 0, $$pre$i$i299$i = 0, $$pre$i$i316$i = 0, $$pre$i$i336$i = 0, $$pre$i$i343$i = 0, $$pre$i$i45$i = 0, $$pre$i$i66$i = 0, $$pre$i$i77 = 0, $$pre$i$i80$i = 0, $$pre$i$i90 = 0, $$pre$i$i98$i = 0, $$pre$i10$i = 0, $$pre$i101$i = 0, $$pre$i112$i = 0, $$pre$i119$i = 0, $$pre$i119$i230 = 0, $$pre$i122$i = 0, $$pre$i122$us$i = 0, $$pre$i125$i = 0;
 var $$pre$i126$i = 0, $$pre$i13$i = 0, $$pre$i131 = 0, $$pre$i131$i = 0, $$pre$i133$i = 0, $$pre$i139$i = 0, $$pre$i140$i = 0, $$pre$i147$i = 0, $$pre$i154$i = 0, $$pre$i164$i$i = 0, $$pre$i171$i$i = 0, $$pre$i178$i$i = 0, $$pre$i186$i$i = 0, $$pre$i188 = 0, $$pre$i198$i$i = 0, $$pre$i21$i$i = 0, $$pre$i251 = 0, $$pre$i28$i = 0, $$pre$i282$i = 0, $$pre$i288$i = 0;
 var $$pre$i294$i = 0, $$pre$i3$i = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$i = 0, $$pre$i3$i$i126 = 0, $$pre$i3$i$i199 = 0, $$pre$i3$i$i223 = 0, $$pre$i3$i$i87 = 0, $$pre$i3$i105$i = 0, $$pre$i3$i168$i = 0, $$pre$i3$i215 = 0, $$pre$i3$i24$i = 0, $$pre$i3$i246$i = 0, $$pre$i3$i260$i = 0, $$pre$i3$i274$i = 0, $$pre$i3$i306$i = 0, $$pre$i3$i350$i = 0, $$pre$i3$i73$i = 0, $$pre$i3$i8$i = 0, $$pre$i3$i87$i = 0;
 var $$pre$i31$i = 0, $$pre$i313$i = 0, $$pre$i331$i = 0, $$pre$i331412$i = 0, $$pre$i331413$i = 0, $$pre$i341$i = 0, $$pre$i35$i = 0, $$pre$i42$i = 0, $$pre$i42$i$i = 0, $$pre$i49$i$i = 0, $$pre$i50$i = 0, $$pre$i50$i138 = 0, $$pre$i55$i = 0, $$pre$i55$i$us = 0, $$pre$i6$i = 0, $$pre$i6$i154 = 0, $$pre$i62$i = 0, $$pre$i62$i$us = 0, $$pre$i63$i = 0, $$pre$i70$i = 0;
 var $$pre$i70$i187 = 0, $$pre$i71 = 0, $$pre$i76$i = 0, $$pre$i79$i = 0, $$pre$i87$i = 0, $$pre$i92 = 0, $$pre$i94$i = 0, $$pre$phi$i$i$i$i$sinkZ2D = 0, $$pre$phi$i$i$i$iZ2D = 0, $$pre$phi$i$i$i194Z2D = 0, $$pre$phi$i$i$i218Z2D = 0, $$pre$phi$i$i$i81Z2D = 0, $$pre$phi$i$i$iZ2D = 0, $$pre$phi$i$i100$iZ2D = 0, $$pre$phi$i$i182$sinkZ2D = 0, $$pre$phi$i$i182Z2D = 0, $$pre$phi$i$i19$iZ2D = 0, $$pre$phi$i$i209Z2D = 0, $$pre$phi$i$i241$iZ2D = 0, $$pre$phi$i$i255$iZ2D = 0;
 var $$pre$phi$i$i269$iZ2D = 0, $$pre$phi$i$i30$i$i$sinkZ2D = 0, $$pre$phi$i$i30$i$iZ2D = 0, $$pre$phi$i$i301$iZ2D = 0, $$pre$phi$i$i40$i$sinkZ2D = 0, $$pre$phi$i$i40$iZ2D = 0, $$pre$phi$i$i54$i$sinkZ2D = 0, $$pre$phi$i$i54$iZ2D = 0, $$pre$phi$i$i68$iZ2D = 0, $$pre$phi$i$i82$iZ2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i103$iZ2D = 0, $$pre$phi$i114$iZ2D = 0, $$pre$phi$i12$iZ2D = 0, $$pre$phi$i23$i$iZ2D = 0, $$pre$phi$i33$iZ2D = 0, $$pre$phi$i5$i$i$i$sinkZ2D = 0, $$pre$phi$i5$i$i$iZ2D = 0, $$pre$phi$i5$i$i201Z2D = 0, $$pre$phi$i5$i$i225Z2D = 0;
 var $$pre$phi$i5$i$iZ2D = 0, $$pre$phi$i5$i107$iZ2D = 0, $$pre$phi$i5$i248$iZ2D = 0, $$pre$phi$i5$i26$iZ2D = 0, $$pre$phi$i5$i262$iZ2D = 0, $$pre$phi$i5$i276$iZ2D = 0, $$pre$phi$i5$i308$iZ2D = 0, $$pre$phi$i5$i37$i$i$sinkZ2D = 0, $$pre$phi$i5$i37$i$iZ2D = 0, $$pre$phi$i5$i47$i$sinkZ2D = 0, $$pre$phi$i5$i47$iZ2D = 0, $$pre$phi$i5$i61$i$sinkZ2D = 0, $$pre$phi$i5$i61$iZ2D = 0, $$pre$phi$i5$i75$iZ2D = 0, $$pre$phi$i5$i89$iZ2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre$phi$i65$iZ2D = 0, $$pre$phi$i72$iZ2D = 0, $$pre$phi$i8$iZ2D = 0, $$pre$phi$i81$iZ2D = 0;
 var $$pre$phi$i96$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi46$i$iZ2D = 0, $$pre121$i = 0, $$pre245$i = 0, $$pre246$i = 0, $$pre247$i = 0, $$pre247$i252 = 0, $$pre248$i = 0, $$pre249$i = 0, $$pre250$i = 0, $$pre251$i = 0, $$pre251$pre$i = 0, $$pre285$i$i = 0, $$pre286$i$i = 0, $$pre287$i$i = 0, $$pre288$i$i = 0, $$pre289$i$i = 0, $$pre290$i$i = 0, $$pre291$i$i = 0;
 var $$pre292$i$i = 0, $$pre293$i$i = 0, $$pre339 = 0, $$pre339$pre = 0, $$pre340 = 0, $$pre341 = 0, $$pre341$pre = 0, $$pre36$i$i = 0, $$pre36$i$i244 = 0, $$pre36$i$us$i = 0, $$pre36$i141$i = 0, $$pre409$i = 0, $$pre410$i = 0, $$pre414$i = 0, $$pre415$i = 0, $$pre45$i$i = 0, $$pre5$i$i = 0, $$pre5$i$i$i = 0, $$pre5$i$i$i$i = 0, $$pre5$i$i$i193 = 0;
 var $$pre5$i$i$i217 = 0, $$pre5$i$i$i80 = 0, $$pre5$i$i18$i = 0, $$pre5$i$i181 = 0, $$pre5$i$i208 = 0, $$pre5$i$i240$i = 0, $$pre5$i$i254$i = 0, $$pre5$i$i268$i = 0, $$pre5$i$i29$i$i = 0, $$pre5$i$i300$i = 0, $$pre5$i$i39$i = 0, $$pre5$i$i53$i = 0, $$pre5$i$i67$i = 0, $$pre5$i$i81$i = 0, $$pre5$i$i99$i = 0, $$pre5$i102$i = 0, $$pre5$i11$i = 0, $$pre5$i113$i = 0, $$pre5$i22$i$i = 0, $$pre5$i32$i = 0;
 var $$pre5$i4$i = 0, $$pre5$i4$i$i = 0, $$pre5$i4$i$i$i = 0, $$pre5$i4$i$i200 = 0, $$pre5$i4$i$i224 = 0, $$pre5$i4$i106$i = 0, $$pre5$i4$i247$i = 0, $$pre5$i4$i25$i = 0, $$pre5$i4$i261$i = 0, $$pre5$i4$i275$i = 0, $$pre5$i4$i307$i = 0, $$pre5$i4$i36$i$i = 0, $$pre5$i4$i46$i = 0, $$pre5$i4$i60$i = 0, $$pre5$i4$i74$i = 0, $$pre5$i4$i88$i = 0, $$pre5$i64$i = 0, $$pre5$i7$i = 0, $$pre5$i71$i = 0, $$pre5$i80$i = 0;
 var $$pre5$i95$i = 0, $$pre7$i$i = 0, $$pre75$i$i = 0, $$pre82$i = 0, $$pre83$i = 0, $$sink = 0, $$sink$i$i$i = 0, $$sink$i$i$i$i = 0, $$sink$i$i$i$i$i = 0, $$sink$i$i$i$i$i139 = 0, $$sink$i$i$i$i113 = 0, $$sink$i$i$i$i122 = 0, $$sink$i$i$i$i195 = 0, $$sink$i$i$i$i219 = 0, $$sink$i$i$i$i73 = 0, $$sink$i$i$i$i82 = 0, $$sink$i$i$i101$i = 0, $$sink$i$i$i104 = 0, $$sink$i$i$i117 = 0, $$sink$i$i$i150 = 0;
 var $$sink$i$i$i164$i = 0, $$sink$i$i$i183 = 0, $$sink$i$i$i19$i = 0, $$sink$i$i$i20$i = 0, $$sink$i$i$i210 = 0, $$sink$i$i$i242$i = 0, $$sink$i$i$i256$i = 0, $$sink$i$i$i270$i = 0, $$sink$i$i$i302$i = 0, $$sink$i$i$i31$i$i = 0, $$sink$i$i$i319$i = 0, $$sink$i$i$i33$i = 0, $$sink$i$i$i337$i = 0, $$sink$i$i$i346$i = 0, $$sink$i$i$i4$i = 0, $$sink$i$i$i41$i = 0, $$sink$i$i$i46$i = 0, $$sink$i$i$i55$i = 0, $$sink$i$i$i69$i = 0, $$sink$i$i$i83$i = 0;
 var $$sink$i$i104$i = 0, $$sink$i$i115$i = 0, $$sink$i$i122$i = 0, $$sink$i$i129$i = 0, $$sink$i$i13$i = 0, $$sink$i$i134$i = 0, $$sink$i$i136$i = 0, $$sink$i$i143$i = 0, $$sink$i$i150$i = 0, $$sink$i$i157$i = 0, $$sink$i$i16$i = 0, $$sink$i$i167$i$i = 0, $$sink$i$i174$i$i = 0, $$sink$i$i181$i$i = 0, $$sink$i$i189$i$i = 0, $$sink$i$i201$i$i = 0, $$sink$i$i23$i = 0, $$sink$i$i24$i$i = 0, $$sink$i$i34$i = 0, $$sink$i$i38$i = 0;
 var $$sink$i$i45$i = 0, $$sink$i$i45$i$i = 0, $$sink$i$i52$i$i = 0, $$sink$i$i58$i = 0, $$sink$i$i58$i$us = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i$i = 0, $$sink$i$i6$i$i$i = 0, $$sink$i$i6$i$i$i142 = 0, $$sink$i$i6$i$i127 = 0, $$sink$i$i6$i$i202 = 0, $$sink$i$i6$i$i226 = 0, $$sink$i$i6$i$i88 = 0, $$sink$i$i6$i108$i = 0, $$sink$i$i6$i11$i = 0, $$sink$i$i6$i171$i = 0, $$sink$i$i6$i249$i = 0, $$sink$i$i6$i26$i = 0, $$sink$i$i6$i263$i = 0, $$sink$i$i6$i27$i = 0;
 var $$sink$i$i6$i277$i = 0, $$sink$i$i6$i309$i = 0, $$sink$i$i6$i326$i = 0, $$sink$i$i6$i353$i = 0, $$sink$i$i6$i38$i$i = 0, $$sink$i$i6$i40$i = 0, $$sink$i$i6$i48$i = 0, $$sink$i$i6$i62$i = 0, $$sink$i$i6$i76$i = 0, $$sink$i$i6$i90$i = 0, $$sink$i$i65$i = 0, $$sink$i$i65$i$us = 0, $$sink$i$i66$i = 0, $$sink$i$i73$i = 0, $$sink$i$i82$i = 0, $$sink$i$i9$i = 0, $$sink$i$i9$i155 = 0, $$sink$i$i97$i = 0, $$sink423 = 0, $$sink426 = 0;
 var $$sink429 = 0, $$sink432 = 0, $$sink435 = 0, $$sink436 = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0, $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0;
 var $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0, $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0;
 var $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0;
 var $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0;
 var $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0;
 var $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0;
 var $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0, $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0;
 var $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0;
 var $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0;
 var $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0, $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0;
 var $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0, $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0;
 var $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0;
 var $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0, $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0;
 var $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0, $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0;
 var $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0, $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0;
 var $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0, $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0;
 var $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0;
 var $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0;
 var $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0, $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0;
 var $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0, $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0;
 var $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0, $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0;
 var $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0;
 var $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0;
 var $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0, $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0;
 var $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0;
 var $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0, $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0;
 var $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0, $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0;
 var $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0;
 var $150 = 0, $1500 = 0, $1501 = Math_fround(0), $1502 = Math_fround(0), $1503 = Math_fround(0), $1504 = Math_fround(0), $1505 = Math_fround(0), $1506 = 0, $1507 = Math_fround(0), $1508 = Math_fround(0), $1509 = Math_fround(0), $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = Math_fround(0), $1514 = Math_fround(0), $1515 = Math_fround(0), $1516 = 0, $1517 = 0;
 var $1518 = 0, $1519 = Math_fround(0), $152 = 0, $1520 = Math_fround(0), $1521 = Math_fround(0), $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $1527 = 0, $1528 = Math_fround(0), $1529 = Math_fround(0), $153 = 0, $1530 = Math_fround(0), $1531 = Math_fround(0), $1532 = Math_fround(0), $1533 = 0, $1534 = Math_fround(0), $1535 = Math_fround(0);
 var $1536 = Math_fround(0), $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = Math_fround(0), $1541 = Math_fround(0), $1542 = Math_fround(0), $1543 = 0, $1544 = 0, $1545 = 0, $1546 = Math_fround(0), $1547 = Math_fround(0), $1548 = Math_fround(0), $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0;
 var $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0, $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0;
 var $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0, $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0;
 var $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0, $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0;
 var $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0;
 var $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0;
 var $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0, $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0;
 var $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0, $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0;
 var $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0, $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0;
 var $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0, $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0;
 var $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0, $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0;
 var $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0, $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0;
 var $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0;
 var $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0;
 var $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0, $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0;
 var $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0, $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0;
 var $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0;
 var $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0, $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0;
 var $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0, $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0;
 var $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0;
 var $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0;
 var $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0;
 var $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0;
 var $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0;
 var $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0, $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0;
 var $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0;
 var $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0, $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0;
 var $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0, $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0;
 var $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0, $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0;
 var $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0, $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0;
 var $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0;
 var $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0, $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0.0, $211 = 0, $2110 = 0, $2111 = 0;
 var $2112 = 0, $2113 = 0, $2114 = Math_fround(0), $2115 = Math_fround(0), $2116 = 0.0, $2117 = 0.0, $2118 = Math_fround(0), $2119 = Math_fround(0), $212 = 0, $2120 = Math_fround(0), $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = Math_fround(0), $213 = 0;
 var $2130 = Math_fround(0), $2131 = Math_fround(0), $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $2141 = Math_fround(0), $2142 = Math_fround(0), $2143 = 0.0, $2144 = 0.0, $2145 = Math_fround(0), $2146 = Math_fround(0), $2147 = Math_fround(0), $2148 = 0;
 var $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0, $2157 = 0, $2158 = Math_fround(0), $2159 = Math_fround(0), $216 = 0, $2160 = Math_fround(0), $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0;
 var $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0, $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0;
 var $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0, $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0;
 var $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0, $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0;
 var $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0;
 var $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0, $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0;
 var $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0;
 var $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0;
 var $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0;
 var $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0;
 var $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0;
 var $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $2357 = 0, $2358 = 0, $2359 = 0, $236 = 0, $2360 = 0, $2361 = 0, $2362 = 0, $2363 = 0, $2364 = 0;
 var $2365 = 0, $2366 = 0, $2367 = 0, $2368 = 0, $2369 = 0, $237 = 0, $2370 = 0, $2371 = 0, $2372 = 0, $2373 = 0, $2374 = 0, $2375 = 0, $2376 = 0, $2377 = 0, $2378 = 0, $2379 = 0, $238 = 0, $2380 = 0, $2381 = 0, $2382 = 0;
 var $2383 = 0, $2384 = 0, $2385 = 0, $2386 = 0, $2387 = 0, $2388 = 0, $2389 = 0, $239 = 0, $2390 = 0, $2391 = 0, $2392 = 0, $2393 = 0, $2394 = 0, $2395 = 0, $2396 = 0, $2397 = 0, $2398 = 0, $2399 = 0, $24 = 0, $240 = 0;
 var $2400 = 0, $2401 = 0, $2402 = 0, $2403 = 0, $2404 = 0, $2405 = 0, $2406 = 0, $2407 = 0, $2408 = 0, $2409 = 0, $241 = 0, $2410 = 0, $2411 = 0, $2412 = 0, $2413 = 0, $2414 = 0, $2415 = 0, $2416 = 0, $2417 = 0, $2418 = 0;
 var $2419 = 0, $242 = 0, $2420 = 0, $2421 = 0, $2422 = 0, $2423 = 0, $2424 = 0, $2425 = 0, $2426 = 0, $2427 = 0, $2428 = 0, $2429 = 0, $243 = 0, $2430 = 0, $2431 = 0, $2432 = 0, $2433 = 0, $2434 = 0, $2435 = 0, $2436 = 0;
 var $2437 = 0, $2438 = 0, $2439 = 0, $244 = 0, $2440 = 0, $2441 = 0, $2442 = 0, $2443 = 0, $2444 = 0, $2445 = 0, $2446 = 0, $2447 = 0, $2448 = 0, $2449 = 0, $245 = 0, $2450 = 0, $2451 = 0, $2452 = 0, $2453 = 0, $2454 = 0;
 var $2455 = 0, $2456 = 0, $2457 = 0, $2458 = 0, $2459 = 0, $246 = 0, $2460 = 0, $2461 = 0, $2462 = 0, $2463 = 0, $2464 = 0, $2465 = 0, $2466 = 0, $2467 = 0, $2468 = 0, $2469 = 0, $247 = 0, $2470 = 0, $2471 = 0, $2472 = 0;
 var $2473 = 0, $2474 = 0, $2475 = 0, $2476 = 0, $2477 = 0, $2478 = 0, $2479 = 0, $248 = 0, $2480 = 0, $2481 = 0, $2482 = 0, $2483 = 0, $2484 = 0, $2485 = 0, $2486 = 0, $2487 = 0, $2488 = 0, $2489 = 0, $249 = 0, $2490 = 0;
 var $2491 = 0, $2492 = 0, $2493 = 0, $2494 = 0, $2495 = 0, $2496 = 0, $2497 = 0, $2498 = 0, $2499 = 0, $25 = 0, $250 = 0, $2500 = 0, $2501 = 0, $2502 = 0, $2503 = 0, $2504 = 0, $2505 = 0, $2506 = 0, $2507 = 0, $2508 = 0;
 var $2509 = 0, $251 = 0, $2510 = 0, $2511 = 0, $2512 = 0, $2513 = 0, $2514 = 0, $2515 = 0, $2516 = 0, $2517 = 0, $2518 = 0, $2519 = 0, $252 = 0, $2520 = 0, $2521 = 0, $2522 = 0, $2523 = 0, $2524 = 0, $2525 = 0, $2526 = 0;
 var $2527 = 0, $2528 = 0, $2529 = 0, $253 = 0, $2530 = 0, $2531 = 0, $2532 = 0, $2533 = 0, $2534 = 0, $2535 = 0, $2536 = 0, $2537 = 0, $2538 = 0, $2539 = 0, $254 = 0, $2540 = 0, $2541 = 0, $2542 = 0, $2543 = 0, $2544 = 0;
 var $2545 = 0, $2546 = 0, $2547 = 0, $2548 = 0, $2549 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $2555 = 0, $2556 = 0, $2557 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $2562 = 0;
 var $2563 = 0, $2564 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $2568 = 0, $2569 = 0, $257 = 0, $2570 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $2574 = 0, $2575 = 0, $2576 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $258 = 0, $2580 = 0;
 var $2581 = 0, $2582 = 0, $2583 = 0, $2584 = 0, $2585 = 0, $2586 = 0, $2587 = 0, $2588 = 0, $2589 = 0, $259 = 0, $2590 = 0, $2591 = 0, $2592 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $2597 = 0, $2598 = 0, $2599 = 0;
 var $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $2602 = 0, $2603 = 0, $2604 = 0, $2605 = 0, $2606 = 0, $2607 = 0, $2608 = 0, $2609 = 0, $261 = 0, $2610 = 0, $2611 = 0, $2612 = 0, $2613 = 0, $2614 = 0, $2615 = 0, $2616 = 0;
 var $2617 = 0, $2618 = 0, $2619 = 0, $262 = 0, $2620 = 0, $2621 = 0, $2622 = 0, $2623 = 0, $2624 = 0, $2625 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $2631 = 0, $2632 = 0, $2633 = 0, $2634 = 0;
 var $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $2639 = 0, $264 = 0, $2640 = 0, $2641 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $2646 = 0, $2647 = 0, $2648 = 0, $2649 = 0, $265 = 0, $2650 = 0, $2651 = 0, $2652 = 0;
 var $2653 = 0, $2654 = 0, $2655 = 0, $2656 = 0, $2657 = 0, $2658 = 0, $2659 = 0, $266 = 0, $2660 = 0, $2661 = 0, $2662 = 0, $2663 = 0, $2664 = 0, $2665 = 0, $2666 = 0, $2667 = 0, $2668 = 0, $2669 = 0, $267 = 0, $2670 = 0;
 var $2671 = 0, $2672 = 0, $2673 = 0, $2674 = 0, $2675 = 0, $2676 = 0, $2677 = 0, $2678 = 0, $2679 = 0, $268 = 0, $2680 = 0, $2681 = 0, $2682 = 0, $2683 = 0, $2684 = 0, $2685 = 0, $2686 = 0, $2687 = 0, $2688 = 0, $2689 = 0;
 var $269 = 0, $2690 = 0, $2691 = 0, $2692 = 0, $2693 = 0, $2694 = 0, $2695 = 0, $2696 = 0, $2697 = 0, $2698 = 0, $2699 = 0, $27 = 0, $270 = 0, $2700 = 0, $2701 = 0, $2702 = 0, $2703 = 0, $2704 = 0, $2705 = 0, $2706 = 0;
 var $2707 = 0, $2708 = 0, $2709 = 0, $271 = 0, $2710 = 0, $2711 = 0, $2712 = 0, $2713 = 0, $2714 = 0, $2715 = 0, $2716 = 0, $2717 = 0, $2718 = 0, $2719 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $2723 = 0, $2724 = 0;
 var $2725 = 0, $2726 = 0, $2727 = 0, $2728 = 0, $2729 = 0, $273 = 0, $2730 = 0, $2731 = 0, $2732 = 0, $2733 = 0, $2734 = 0, $2735 = 0, $2736 = 0, $2737 = 0, $2738 = 0, $2739 = 0, $274 = 0, $2740 = 0, $2741 = 0, $2742 = 0;
 var $2743 = 0, $2744 = 0, $2745 = 0, $2746 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $275 = 0, $2750 = 0, $2751 = 0, $2752 = 0, $2753 = 0, $2754 = 0, $2755 = 0, $2756 = 0, $2757 = 0, $2758 = 0, $2759 = 0, $276 = 0, $2760 = 0;
 var $2761 = 0, $2762 = 0, $2763 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $2767 = 0, $2768 = 0, $2769 = 0, $277 = 0, $2770 = 0, $2771 = 0, $2772 = 0, $2773 = 0, $2774 = 0, $2775 = 0, $2776 = 0, $2777 = 0, $2778 = 0, $2779 = 0;
 var $278 = 0, $2780 = 0, $2781 = 0, $2782 = 0, $2783 = 0, $2784 = 0, $2785 = 0, $2786 = 0, $2787 = 0, $2788 = 0, $2789 = 0, $279 = 0, $2790 = 0, $2791 = 0, $2792 = 0, $2793 = 0, $2794 = 0, $2795 = 0, $2796 = 0, $2797 = 0;
 var $2798 = 0, $2799 = 0, $28 = 0, $280 = 0, $2800 = 0, $2801 = 0, $2802 = 0, $2803 = 0, $2804 = 0, $2805 = 0, $2806 = 0, $2807 = 0, $2808 = 0, $2809 = 0, $281 = 0, $2810 = 0, $2811 = 0, $2812 = 0, $2813 = 0, $2814 = 0;
 var $2815 = 0, $2816 = 0, $2817 = 0, $2818 = 0, $2819 = 0, $282 = 0, $2820 = 0, $2821 = 0, $2822 = 0, $2823 = 0, $2824 = 0, $2825 = 0, $2826 = 0, $2827 = 0, $2828 = 0, $2829 = 0, $283 = 0, $2830 = 0, $2831 = 0, $2832 = 0;
 var $2833 = 0, $2834 = 0, $2835 = 0, $2836 = 0, $2837 = 0, $2838 = 0, $2839 = 0, $284 = 0, $2840 = 0, $2841 = 0, $2842 = 0, $2843 = 0, $2844 = 0, $2845 = 0, $2846 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $285 = 0, $2850 = 0;
 var $2851 = 0, $2852 = 0, $2853 = 0, $2854 = 0, $2855 = 0, $2856 = 0, $2857 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $2862 = 0, $2863 = 0, $2864 = 0, $2865 = 0, $2866 = 0, $2867 = 0, $2868 = 0, $2869 = 0;
 var $287 = 0, $2870 = 0, $2871 = 0, $2872 = 0, $2873 = 0, $2874 = 0, $2875 = 0, $2876 = 0, $2877 = 0, $2878 = 0, $2879 = 0, $288 = 0, $2880 = 0, $2881 = 0, $2882 = 0, $2883 = 0, $2884 = 0, $2885 = 0, $2886 = 0, $2887 = 0;
 var $2888 = 0, $2889 = 0, $289 = 0, $2890 = 0, $2891 = 0, $2892 = 0, $2893 = 0, $2894 = 0, $2895 = 0, $2896 = 0, $2897 = 0, $2898 = 0, $2899 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $2902 = 0, $2903 = 0, $2904 = 0;
 var $2905 = 0, $2906 = 0, $2907 = 0, $2908 = 0, $2909 = 0, $291 = 0, $2910 = 0, $2911 = 0, $2912 = 0, $2913 = 0, $2914 = 0, $2915 = 0, $2916 = 0, $2917 = 0, $2918 = 0, $2919 = 0, $292 = 0, $2920 = 0, $2921 = 0, $2922 = 0;
 var $2923 = 0, $2924 = 0, $2925 = 0, $2926 = 0, $2927 = 0, $2928 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $2932 = 0, $2933 = 0, $2934 = 0, $2935 = 0, $2936 = 0, $2937 = 0, $2938 = 0, $2939 = 0, $294 = 0, $2940 = 0;
 var $2941 = 0, $2942 = 0, $2943 = 0, $2944 = 0, $2945 = 0, $2946 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $2951 = 0, $2952 = 0, $2953 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0;
 var $296 = 0, $2960 = 0, $2961 = 0, $2962 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $2969 = 0, $297 = 0, $2970 = 0, $2971 = 0, $2972 = 0, $2973 = 0, $2974 = 0, $2975 = 0, $2976 = 0, $2977 = 0;
 var $2978 = 0, $2979 = 0, $298 = 0, $2980 = 0, $2981 = 0, $2982 = 0, $2983 = 0, $2984 = 0, $2985 = 0, $2986 = 0, $2987 = 0, $2988 = 0, $2989 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0;
 var $2996 = 0, $2997 = 0, $2998 = 0, $2999 = 0, $30 = 0, $300 = 0, $3000 = 0, $3001 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $301 = 0, $3010 = 0, $3011 = 0, $3012 = 0;
 var $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $3021 = 0, $3022 = 0, $3023 = 0, $3024 = 0, $3025 = 0, $3026 = 0, $3027 = 0, $3028 = 0, $3029 = 0, $303 = 0, $3030 = 0;
 var $3031 = 0, $3032 = 0, $3033 = 0, $3034 = 0, $3035 = 0, $3036 = 0, $3037 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $3041 = 0, $3042 = 0, $3043 = 0, $3044 = 0, $3045 = 0, $3046 = 0, $3047 = 0, $3048 = 0, $3049 = 0;
 var $305 = 0, $3050 = 0, $3051 = 0, $3052 = 0, $3053 = 0, $3054 = 0, $3055 = 0, $3056 = 0, $3057 = 0, $3058 = 0, $3059 = 0, $306 = 0, $3060 = 0, $3061 = 0, $3062 = 0, $3063 = 0, $3064 = 0, $3065 = 0, $3066 = 0, $3067 = 0;
 var $3068 = 0, $3069 = 0, $307 = 0, $3070 = 0, $3071 = 0, $3072 = 0, $3073 = 0, $3074 = 0, $3075 = 0, $3076 = 0, $3077 = 0, $3078 = 0, $3079 = 0, $308 = 0, $3080 = 0, $3081 = 0, $3082 = 0, $3083 = 0, $3084 = 0, $3085 = 0;
 var $3086 = 0, $3087 = 0, $3088 = 0, $3089 = 0, $309 = 0, $3090 = 0, $3091 = 0, $3092 = 0, $3093 = 0, $3094 = 0, $3095 = 0, $3096 = 0, $3097 = 0, $3098 = 0, $3099 = 0, $31 = 0, $310 = 0, $3100 = 0, $3101 = 0, $3102 = 0;
 var $3103 = 0, $3104 = 0, $3105 = 0, $3106 = 0, $3107 = 0, $3108 = 0, $3109 = 0, $311 = 0, $3110 = 0, $3111 = 0, $3112 = 0, $3113 = 0, $3114 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0;
 var $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0;
 var $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0;
 var $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0;
 var $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0;
 var $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0;
 var $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0;
 var $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0;
 var $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0;
 var $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0;
 var $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0;
 var $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0;
 var $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0;
 var $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0;
 var $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0;
 var $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0;
 var $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0;
 var $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0;
 var $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0;
 var $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0;
 var $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0;
 var $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0;
 var $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0;
 var $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0;
 var $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0;
 var $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0;
 var $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0;
 var $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0;
 var $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0, $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i$i145 = 0, $exitcond$i108 = 0, $exitcond$i119 = 0, $exitcond$i178 = 0, $exitcond$i178$us = 0, $exitcond$i256 = 0;
 var $exitcond236$i = 0, $exitcond239$i = 0, $exitcond243$i = 0, $exitcond244$i = 0, $exitcond244$i243 = 0, $exitcond245$i = 0, $exitcond284$i$i = 0, $exitcond400$i = 0, $exitcond401$i = 0, $exitcond402$i = 0, $exitcond403$i = 0, $exitcond404$i = 0, $exitcond405$i = 0, $exitcond406$i = 0, $exitcond407$i = 0, $exitcond64$i = 0, $exitcond64$i$us = 0, $exitcond65$i$us = 0, $ispos$i = 0, $neg$i = 0;
 var $or$cond = 0, $or$cond$i = 0, $or$cond$i132 = 0, $or$cond$i158 = 0, $or$cond$i257 = 0, $or$cond1 = 0, $or$cond10$i = 0, $or$cond12$i = 0, $or$cond14$i = 0, $or$cond16$i = 0, $or$cond232$i = 0, $or$cond265$i = 0, $or$cond271$i = 0, $or$cond4$i = 0, $or$cond5$i = 0, $or$cond5$i254 = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond9$i = 0;
 var $phitmp$i = 0, $scevgep$i = 0, $scevgep$i$i = 0, $scevgep$i$i146 = 0, $scevgep242$i = 0, $scevgep283$i$i = 0, $scevgep72$i$i = 0, $scevgep73$i$i = 0, $scevgep74$i$i = 0, $sext$i = 0, $smax$i = 0, $spec$select$i = 0, $spec$select$i108$i = 0, $spec$select$i231 = 0, $spec$select$i51$i = 0, $spec$select$i81$i = 0, $spec$select$i84$i = 0, $spec$select$i97$i = 0, $spec$select1$i = 0, $spec$select24$i$i = 0;
 var $spec$select24$i109$i = 0, $spec$select24$i85$i = 0, $spec$select24$i98$i = 0, $spec$select25$i$i = 0, $spec$select25$i105$i = 0, $spec$select25$i116$i = 0, $spec$select25$i92$i = 0, $spec$store$select$i = 0, $spec$store$select$i250 = 0, $switch$i = 0, $trunc$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 34944|0;
 $7 = sp;
 $8 = sp + 34912|0;
 $9 = sp + 34904|0;
 HEAP32[$5>>2] = 8;
 $10 = ((($5)) + 8|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($5)) + 4|0);
 HEAP32[$11>>2] = 0;
 $12 = (_malloc(18456)|0);
 HEAP32[$12>>2] = $0;
 $13 = ((($12)) + 18444|0);
 HEAP32[$13>>2] = 446;
 $14 = ((($12)) + 18448|0);
 HEAP32[$14>>2] = 447;
 $15 = ((($12)) + 18452|0);
 HEAP32[$15>>2] = 448;
 $16 = (_stbi__decode_jpeg_header($12,1)|0);
 $17 = ((($0)) + 176|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = ((($0)) + 168|0);
 HEAP32[$19>>2] = $18;
 $20 = ((($0)) + 180|0);
 $21 = HEAP32[$20>>2]|0;
 $22 = ((($0)) + 172|0);
 HEAP32[$22>>2] = $21;
 _free($12);
 $23 = ($16|0)==(0);
 if (!($23)) {
  $24 = (_malloc(18456)|0);
  HEAP32[$24>>2] = $0;
  $25 = ((($24)) + 18444|0);
  HEAP32[$25>>2] = 446;
  $26 = ((($24)) + 18448|0);
  HEAP32[$26>>2] = 447;
  $27 = ((($24)) + 18452|0);
  HEAP32[$27>>2] = 448;
  $28 = (_load_jpeg_image($24,$1,$2,$3,$4)|0);
  _free($24);
  $$0 = $28;
  STACKTOP = sp;return ($$0|0);
 }
 $29 = (_stbi__check_png_header($0)|0);
 $30 = HEAP32[$17>>2]|0;
 HEAP32[$19>>2] = $30;
 $31 = HEAP32[$20>>2]|0;
 HEAP32[$22>>2] = $31;
 $32 = ($29|0)==(0);
 $33 = $30;
 $34 = $31;
 if (!($32)) {
  HEAP32[$7>>2] = $0;
  $35 = ($4>>>0)>(4);
  do {
   if ($35) {
    $$043$i$i = 0;
   } else {
    $36 = (_stbi__parse_png_file($7,0,$4)|0);
    $37 = ($36|0)==(0);
    if ($37) {
     $$pre45$i$i = ((($7)) + 12|0);
     $$pre$i = HEAP32[$$pre45$i$i>>2]|0;
     $$2$i$i = 0;$$pre$phi46$i$iZ2D = $$pre45$i$i;$63 = $$pre$i;
    } else {
     $38 = ((($7)) + 16|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)>(8);
     $$$i$i = $40 ? $39 : 8;
     HEAP32[$5>>2] = $$$i$i;
     $41 = ((($7)) + 12|0);
     $42 = HEAP32[$41>>2]|0;
     HEAP32[$41>>2] = 0;
     $43 = ($4|0)==(0);
     $$pre$i$i = HEAP32[$7>>2]|0;
     if ($43) {
      $$1$i$i = $42;
     } else {
      $44 = ((($$pre$i$i)) + 12|0);
      $45 = HEAP32[$44>>2]|0;
      $46 = ($45|0)==($4|0);
      if ($46) {
       $$1$i$i = $42;
      } else {
       $47 = ($39|0)<(9);
       if ($47) {
        $48 = HEAP32[$$pre$i$i>>2]|0;
        $49 = ((($$pre$i$i)) + 4|0);
        $50 = HEAP32[$49>>2]|0;
        $51 = (_stbi__convert_format($42,$45,$4,$48,$50)|0);
        $$0$i$i = $51;
       } else {
        $52 = HEAP32[$$pre$i$i>>2]|0;
        $53 = ((($$pre$i$i)) + 4|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = (_stbi__convert_format16($42,$45,$4,$52,$54)|0);
        $$0$i$i = $55;
       }
       HEAP32[$44>>2] = $4;
       $56 = ($$0$i$i|0)==(0|0);
       if ($56) {
        $$043$i$i = 0;
        break;
       } else {
        $$1$i$i = $$0$i$i;
       }
      }
     }
     $57 = HEAP32[$$pre$i$i>>2]|0;
     HEAP32[$1>>2] = $57;
     $58 = ((($$pre$i$i)) + 4|0);
     $59 = HEAP32[$58>>2]|0;
     HEAP32[$2>>2] = $59;
     $60 = ($3|0)==(0|0);
     if ($60) {
      $$2$i$i = $$1$i$i;$$pre$phi46$i$iZ2D = $41;$63 = 0;
     } else {
      $61 = ((($$pre$i$i)) + 8|0);
      $62 = HEAP32[$61>>2]|0;
      HEAP32[$3>>2] = $62;
      $$2$i$i = $$1$i$i;$$pre$phi46$i$iZ2D = $41;$63 = 0;
     }
    }
    _free($63);
    HEAP32[$$pre$phi46$i$iZ2D>>2] = 0;
    $64 = ((($7)) + 8|0);
    $65 = HEAP32[$64>>2]|0;
    _free($65);
    HEAP32[$64>>2] = 0;
    $66 = ((($7)) + 4|0);
    $67 = HEAP32[$66>>2]|0;
    _free($67);
    HEAP32[$66>>2] = 0;
    $$043$i$i = $$2$i$i;
   }
  } while(0);
  $$0 = $$043$i$i;
  STACKTOP = sp;return ($$0|0);
 }
 $68 = ($33>>>0)<($34>>>0);
 if ($68) {
  $69 = ((($33)) + 1|0);
  HEAP32[$19>>2] = $69;
  $70 = HEAP8[$33>>0]|0;
  $$0$i$i$i = $70;$87 = $69;$88 = $34;
  label = 24;
 } else {
  $71 = ((($0)) + 32|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)==(0);
  if ($73) {
   label = 66;
  } else {
   $74 = ((($0)) + 16|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = ((($0)) + 28|0);
   $77 = HEAP32[$76>>2]|0;
   $78 = ((($0)) + 40|0);
   $79 = ((($0)) + 36|0);
   $80 = HEAP32[$79>>2]|0;
   $81 = (ftCall_iiii($75|0,$77,$78,$80)|0);
   $82 = ($81|0)==(0);
   if ($82) {
    HEAP32[$71>>2] = 0;
    $83 = ((($0)) + 41|0);
    HEAP8[$78>>0] = 0;
    $$pre$phi$i$i$iZ2D = $83;$$sink$i$i$i$i = $83;$2990 = 0;
   } else {
    $84 = (((($0)) + 40|0) + ($81)|0);
    $$pre$i$i$i = HEAP8[$78>>0]|0;
    $$pre5$i$i$i = ((($0)) + 41|0);
    $$pre$phi$i$i$iZ2D = $$pre5$i$i$i;$$sink$i$i$i$i = $84;$2990 = $$pre$i$i$i;
   }
   HEAP32[$22>>2] = $$sink$i$i$i$i;
   HEAP32[$19>>2] = $$pre$phi$i$i$iZ2D;
   $$0$i$i$i = $2990;$87 = $$pre$phi$i$i$iZ2D;$88 = $$sink$i$i$i$i;
   label = 24;
  }
 }
 L33: do {
  if ((label|0) == 24) {
   $85 = ($$0$i$i$i<<24>>24)==(66);
   if ($85) {
    $86 = ($87>>>0)<($88>>>0);
    if ($86) {
     $89 = ((($87)) + 1|0);
     HEAP32[$19>>2] = $89;
     $90 = HEAP8[$87>>0]|0;
     $$0$i26$i$i = $90;
    } else {
     $91 = ((($0)) + 32|0);
     $92 = HEAP32[$91>>2]|0;
     $93 = ($92|0)==(0);
     if ($93) {
      label = 66;
      break;
     }
     $94 = ((($0)) + 16|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ((($0)) + 28|0);
     $97 = HEAP32[$96>>2]|0;
     $98 = ((($0)) + 40|0);
     $99 = ((($0)) + 36|0);
     $100 = HEAP32[$99>>2]|0;
     $101 = (ftCall_iiii($95|0,$97,$98,$100)|0);
     $102 = ($101|0)==(0);
     if ($102) {
      HEAP32[$91>>2] = 0;
      $103 = ((($0)) + 41|0);
      HEAP8[$98>>0] = 0;
      $$pre$phi$i23$i$iZ2D = $103;$$sink$i$i24$i$i = $103;$2991 = 0;
     } else {
      $104 = (((($0)) + 40|0) + ($101)|0);
      $$pre$i21$i$i = HEAP8[$98>>0]|0;
      $$pre5$i22$i$i = ((($0)) + 41|0);
      $$pre$phi$i23$i$iZ2D = $$pre5$i22$i$i;$$sink$i$i24$i$i = $104;$2991 = $$pre$i21$i$i;
     }
     HEAP32[$22>>2] = $$sink$i$i24$i$i;
     HEAP32[$19>>2] = $$pre$phi$i23$i$iZ2D;
     $$0$i26$i$i = $2991;
    }
    $105 = ($$0$i26$i$i<<24>>24)==(77);
    if ($105) {
     (_stbi__get32le($0)|0);
     $106 = HEAP32[$19>>2]|0;
     $107 = HEAP32[$22>>2]|0;
     $108 = ($106>>>0)<($107>>>0);
     if ($108) {
      $109 = ((($106)) + 1|0);
      $$ph = $107;$$pre$phi$i$i$i$i$sinkZ2D = $109;
      label = 40;
     } else {
      $110 = ((($0)) + 32|0);
      $111 = HEAP32[$110>>2]|0;
      $112 = ($111|0)==(0);
      if ($112) {
       $125 = $106;$126 = $107;
      } else {
       $113 = ((($0)) + 16|0);
       $114 = HEAP32[$113>>2]|0;
       $115 = ((($0)) + 28|0);
       $116 = HEAP32[$115>>2]|0;
       $117 = ((($0)) + 40|0);
       $118 = ((($0)) + 36|0);
       $119 = HEAP32[$118>>2]|0;
       $120 = (ftCall_iiii($114|0,$116,$117,$119)|0);
       $121 = ($120|0)==(0);
       if ($121) {
        HEAP32[$110>>2] = 0;
        $122 = ((($0)) + 41|0);
        HEAP8[$117>>0] = 0;
        $$pre$phi$i$i$i$iZ2D = $122;$$sink$i$i$i$i$i = $122;
       } else {
        $123 = (((($0)) + 40|0) + ($120)|0);
        $$pre5$i$i$i$i = ((($0)) + 41|0);
        $$pre$phi$i$i$i$iZ2D = $$pre5$i$i$i$i;$$sink$i$i$i$i$i = $123;
       }
       HEAP32[$22>>2] = $$sink$i$i$i$i$i;
       $$ph = $$sink$i$i$i$i$i;$$pre$phi$i$i$i$i$sinkZ2D = $$pre$phi$i$i$i$iZ2D;
       label = 40;
      }
     }
     if ((label|0) == 40) {
      HEAP32[$19>>2] = $$pre$phi$i$i$i$i$sinkZ2D;
      $125 = $$pre$phi$i$i$i$i$sinkZ2D;$126 = $$ph;
     }
     $124 = ($125>>>0)<($126>>>0);
     if ($124) {
      $127 = ((($125)) + 1|0);
      $$ph417 = $126;$$pre$phi$i5$i$i$i$sinkZ2D = $127;
      label = 48;
     } else {
      $128 = ((($0)) + 32|0);
      $129 = HEAP32[$128>>2]|0;
      $130 = ($129|0)==(0);
      if ($130) {
       $143 = $125;$144 = $126;
      } else {
       $131 = ((($0)) + 16|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = ((($0)) + 28|0);
       $134 = HEAP32[$133>>2]|0;
       $135 = ((($0)) + 40|0);
       $136 = ((($0)) + 36|0);
       $137 = HEAP32[$136>>2]|0;
       $138 = (ftCall_iiii($132|0,$134,$135,$137)|0);
       $139 = ($138|0)==(0);
       if ($139) {
        HEAP32[$128>>2] = 0;
        $140 = ((($0)) + 41|0);
        HEAP8[$135>>0] = 0;
        $$pre$phi$i5$i$i$iZ2D = $140;$$sink$i$i6$i$i$i = $140;
       } else {
        $141 = (((($0)) + 40|0) + ($138)|0);
        $$pre5$i4$i$i$i = ((($0)) + 41|0);
        $$pre$phi$i5$i$i$iZ2D = $$pre5$i4$i$i$i;$$sink$i$i6$i$i$i = $141;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i$i$i;
       $$ph417 = $$sink$i$i6$i$i$i;$$pre$phi$i5$i$i$i$sinkZ2D = $$pre$phi$i5$i$i$iZ2D;
       label = 48;
      }
     }
     if ((label|0) == 48) {
      HEAP32[$19>>2] = $$pre$phi$i5$i$i$i$sinkZ2D;
      $143 = $$pre$phi$i5$i$i$i$sinkZ2D;$144 = $$ph417;
     }
     $142 = ($143>>>0)<($144>>>0);
     if ($142) {
      $145 = ((($143)) + 1|0);
      $$ph419 = $144;$$pre$phi$i$i30$i$i$sinkZ2D = $145;
      label = 56;
     } else {
      $146 = ((($0)) + 32|0);
      $147 = HEAP32[$146>>2]|0;
      $148 = ($147|0)==(0);
      if ($148) {
       $161 = $143;$162 = $144;
      } else {
       $149 = ((($0)) + 16|0);
       $150 = HEAP32[$149>>2]|0;
       $151 = ((($0)) + 28|0);
       $152 = HEAP32[$151>>2]|0;
       $153 = ((($0)) + 40|0);
       $154 = ((($0)) + 36|0);
       $155 = HEAP32[$154>>2]|0;
       $156 = (ftCall_iiii($150|0,$152,$153,$155)|0);
       $157 = ($156|0)==(0);
       if ($157) {
        HEAP32[$146>>2] = 0;
        $158 = ((($0)) + 41|0);
        HEAP8[$153>>0] = 0;
        $$pre$phi$i$i30$i$iZ2D = $158;$$sink$i$i$i31$i$i = $158;
       } else {
        $159 = (((($0)) + 40|0) + ($156)|0);
        $$pre5$i$i29$i$i = ((($0)) + 41|0);
        $$pre$phi$i$i30$i$iZ2D = $$pre5$i$i29$i$i;$$sink$i$i$i31$i$i = $159;
       }
       HEAP32[$22>>2] = $$sink$i$i$i31$i$i;
       $$ph419 = $$sink$i$i$i31$i$i;$$pre$phi$i$i30$i$i$sinkZ2D = $$pre$phi$i$i30$i$iZ2D;
       label = 56;
      }
     }
     if ((label|0) == 56) {
      HEAP32[$19>>2] = $$pre$phi$i$i30$i$i$sinkZ2D;
      $161 = $$pre$phi$i$i30$i$i$sinkZ2D;$162 = $$ph419;
     }
     $160 = ($161>>>0)<($162>>>0);
     if ($160) {
      $163 = ((($161)) + 1|0);
      $$pre$phi$i5$i37$i$i$sinkZ2D = $163;
      label = 64;
     } else {
      $164 = ((($0)) + 32|0);
      $165 = HEAP32[$164>>2]|0;
      $166 = ($165|0)==(0);
      if (!($166)) {
       $167 = ((($0)) + 16|0);
       $168 = HEAP32[$167>>2]|0;
       $169 = ((($0)) + 28|0);
       $170 = HEAP32[$169>>2]|0;
       $171 = ((($0)) + 40|0);
       $172 = ((($0)) + 36|0);
       $173 = HEAP32[$172>>2]|0;
       $174 = (ftCall_iiii($168|0,$170,$171,$173)|0);
       $175 = ($174|0)==(0);
       if ($175) {
        HEAP32[$164>>2] = 0;
        $176 = ((($0)) + 41|0);
        HEAP8[$171>>0] = 0;
        $$pre$phi$i5$i37$i$iZ2D = $176;$$sink$i$i6$i38$i$i = $176;
       } else {
        $177 = (((($0)) + 40|0) + ($174)|0);
        $$pre5$i4$i36$i$i = ((($0)) + 41|0);
        $$pre$phi$i5$i37$i$iZ2D = $$pre5$i4$i36$i$i;$$sink$i$i6$i38$i$i = $177;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i38$i$i;
       $$pre$phi$i5$i37$i$i$sinkZ2D = $$pre$phi$i5$i37$i$iZ2D;
       label = 64;
      }
     }
     if ((label|0) == 64) {
      HEAP32[$19>>2] = $$pre$phi$i5$i37$i$i$sinkZ2D;
     }
     (_stbi__get32le($0)|0);
     $178 = (_stbi__get32le($0)|0);
     switch ($178|0) {
     case 12: case 40: case 56: case 108:  {
      $181 = HEAP32[$17>>2]|0;
      HEAP32[$19>>2] = $181;
      $182 = HEAP32[$20>>2]|0;
      HEAP32[$22>>2] = $182;
      break;
     }
     default: {
      $183 = ($178|0)==(124);
      $184 = HEAP32[$17>>2]|0;
      HEAP32[$19>>2] = $184;
      $185 = HEAP32[$20>>2]|0;
      HEAP32[$22>>2] = $185;
      if (!($183)) {
       break L33;
      }
     }
     }
     $186 = ((($8)) + 28|0);
     HEAP32[$186>>2] = 255;
     $187 = (_stbi__bmp_parse_header($0,$8)|0);
     $188 = ($187|0)==(0|0);
     L94: do {
      if ($188) {
       $$2$i = 0;
      } else {
       $189 = ((($0)) + 4|0);
       $190 = HEAP32[$189>>2]|0;
       $191 = ($190|0)>(0);
       $ispos$i = ($190|0)>(-1);
       $neg$i = (0 - ($190))|0;
       $192 = $ispos$i ? $190 : $neg$i;
       HEAP32[$189>>2] = $192;
       $193 = ((($8)) + 12|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = ((($8)) + 16|0);
       $196 = HEAP32[$195>>2]|0;
       $197 = ((($8)) + 20|0);
       $198 = HEAP32[$197>>2]|0;
       $199 = ((($8)) + 24|0);
       $200 = HEAP32[$199>>2]|0;
       $201 = HEAP32[$186>>2]|0;
       $202 = ((($8)) + 8|0);
       $203 = HEAP32[$202>>2]|0;
       $204 = ($203|0)==(12);
       $205 = HEAP32[$8>>2]|0;
       if ($204) {
        $206 = ($205|0)<(24);
        if ($206) {
         $207 = ((($8)) + 4|0);
         $208 = HEAP32[$207>>2]|0;
         $209 = (($208) + -38)|0;
         $210 = (($209|0) / 3)&-1;
         $$0339$i = $210;
        } else {
         $$0339$i = 0;
        }
       } else {
        $211 = ($205|0)<(16);
        if ($211) {
         $212 = (-14 - ($203))|0;
         $213 = ((($8)) + 4|0);
         $214 = HEAP32[$213>>2]|0;
         $215 = (($212) + ($214))|0;
         $216 = $215 >> 2;
         $$0339$i = $216;
        } else {
         $$0339$i = 0;
        }
       }
       $217 = ($200|0)!=(0);
       $218 = $217 ? 4 : 3;
       $219 = ((($0)) + 8|0);
       HEAP32[$219>>2] = $218;
       $220 = ($4|0)==(0);
       $221 = ($4|0)>(2);
       $$$i = $221 ? $4 : $218;
       $222 = HEAP32[$0>>2]|0;
       $223 = $222 | $$$i;
       $224 = ($223|0)<(0);
       if ($224) {
        $$2$i = 0;
       } else {
        $225 = ($222|0)==(0);
        if (!($225)) {
         $226 = (2147483647 / ($222|0))&-1;
         $227 = ($226|0)<($$$i|0);
         if ($227) {
          $$2$i = 0;
          break;
         }
        }
        $228 = Math_imul($222, $$$i)|0;
        $229 = $228 | $192;
        $230 = ($229|0)<(0);
        if ($230) {
         $$2$i = 0;
        } else {
         $231 = ($192|0)==(0);
         if (!($231)) {
          $232 = (2147483647 / ($192|0))&-1;
          $233 = ($232|0)<($228|0);
          if ($233) {
           $$2$i = 0;
           break;
          }
         }
         if (!($225)) {
          $234 = (2147483647 / ($222|0))&-1;
          $235 = ($234|0)<($$$i|0);
          if ($235) {
           $$2$i = 0;
           break;
          }
         }
         if (!($231)) {
          $236 = (2147483647 / ($192|0))&-1;
          $237 = ($236|0)<($228|0);
          if ($237) {
           $$2$i = 0;
           break;
          }
         }
         $238 = Math_imul($228, $192)|0;
         $239 = (_malloc($238)|0);
         $240 = ($239|0)==(0|0);
         if ($240) {
          $$2$i = 0;
          break;
         }
         $241 = ($205|0)<(16);
         L117: do {
          if ($241) {
           $242 = ($$0339$i|0)==(0);
           $243 = ($$0339$i|0)>(256);
           $or$cond4$i = $242 | $243;
           if ($or$cond4$i) {
            _free($239);
            $$2$i = 0;
            break L94;
           }
           $244 = ($$0339$i|0)>(0);
           if ($244) {
            $245 = ((($0)) + 32|0);
            $246 = ((($0)) + 16|0);
            $247 = ((($0)) + 28|0);
            $248 = ((($0)) + 40|0);
            $249 = ((($0)) + 36|0);
            $250 = ((($0)) + 41|0);
            $$pre246$i = HEAP32[$19>>2]|0;
            $$pre247$i = HEAP32[$22>>2]|0;
            $$0354215$i = 0;$252 = $$pre246$i;$253 = $$pre247$i;
            while(1) {
             $251 = ($252>>>0)<($253>>>0);
             do {
              if ($251) {
               $254 = ((($252)) + 1|0);
               HEAP32[$19>>2] = $254;
               $255 = HEAP8[$252>>0]|0;
               $$0$i5$i = $255;$266 = $254;$267 = $253;
              } else {
               $256 = HEAP32[$245>>2]|0;
               $257 = ($256|0)==(0);
               if ($257) {
                $$0$i5$i = 0;$266 = $252;$267 = $253;
                break;
               }
               $258 = HEAP32[$246>>2]|0;
               $259 = HEAP32[$247>>2]|0;
               $260 = HEAP32[$249>>2]|0;
               $261 = (ftCall_iiii($258|0,$259,$248,$260)|0);
               $262 = ($261|0)==(0);
               if ($262) {
                HEAP32[$245>>2] = 0;
                HEAP8[$248>>0] = 0;
                $$sink$i$i$i = $250;$2992 = 0;
               } else {
                $263 = (((($0)) + 40|0) + ($261)|0);
                $$pre$i3$i = HEAP8[$248>>0]|0;
                $$sink$i$i$i = $263;$2992 = $$pre$i3$i;
               }
               HEAP32[$22>>2] = $$sink$i$i$i;
               HEAP32[$19>>2] = $250;
               $$0$i5$i = $2992;$266 = $250;$267 = $$sink$i$i$i;
              }
             } while(0);
             $264 = (((($7) + ($$0354215$i<<2)|0)) + 2|0);
             HEAP8[$264>>0] = $$0$i5$i;
             $265 = ($266>>>0)<($267>>>0);
             do {
              if ($265) {
               $268 = ((($266)) + 1|0);
               HEAP32[$19>>2] = $268;
               $269 = HEAP8[$266>>0]|0;
               $$0$i11$i = $269;$280 = $268;$281 = $267;
              } else {
               $270 = HEAP32[$245>>2]|0;
               $271 = ($270|0)==(0);
               if ($271) {
                $$0$i11$i = 0;$280 = $266;$281 = $267;
                break;
               }
               $272 = HEAP32[$246>>2]|0;
               $273 = HEAP32[$247>>2]|0;
               $274 = HEAP32[$249>>2]|0;
               $275 = (ftCall_iiii($272|0,$273,$248,$274)|0);
               $276 = ($275|0)==(0);
               if ($276) {
                HEAP32[$245>>2] = 0;
                HEAP8[$248>>0] = 0;
                $$sink$i$i9$i = $250;$2993 = 0;
               } else {
                $277 = (((($0)) + 40|0) + ($275)|0);
                $$pre$i6$i = HEAP8[$248>>0]|0;
                $$sink$i$i9$i = $277;$2993 = $$pre$i6$i;
               }
               HEAP32[$22>>2] = $$sink$i$i9$i;
               HEAP32[$19>>2] = $250;
               $$0$i11$i = $2993;$280 = $250;$281 = $$sink$i$i9$i;
              }
             } while(0);
             $278 = (((($7) + ($$0354215$i<<2)|0)) + 1|0);
             HEAP8[$278>>0] = $$0$i11$i;
             $279 = ($280>>>0)<($281>>>0);
             do {
              if ($279) {
               $282 = ((($280)) + 1|0);
               HEAP32[$19>>2] = $282;
               $283 = HEAP8[$280>>0]|0;
               $$0$i18$i = $283;$294 = $282;$295 = $281;
              } else {
               $284 = HEAP32[$245>>2]|0;
               $285 = ($284|0)==(0);
               if ($285) {
                $$0$i18$i = 0;$294 = $280;$295 = $281;
                break;
               }
               $286 = HEAP32[$246>>2]|0;
               $287 = HEAP32[$247>>2]|0;
               $288 = HEAP32[$249>>2]|0;
               $289 = (ftCall_iiii($286|0,$287,$248,$288)|0);
               $290 = ($289|0)==(0);
               if ($290) {
                HEAP32[$245>>2] = 0;
                HEAP8[$248>>0] = 0;
                $$sink$i$i16$i = $250;$2994 = 0;
               } else {
                $291 = (((($0)) + 40|0) + ($289)|0);
                $$pre$i13$i = HEAP8[$248>>0]|0;
                $$sink$i$i16$i = $291;$2994 = $$pre$i13$i;
               }
               HEAP32[$22>>2] = $$sink$i$i16$i;
               HEAP32[$19>>2] = $250;
               $$0$i18$i = $2994;$294 = $250;$295 = $$sink$i$i16$i;
              }
             } while(0);
             $292 = (($7) + ($$0354215$i<<2)|0);
             HEAP8[$292>>0] = $$0$i18$i;
             do {
              if ($204) {
               $2995 = $295;$2996 = $294;
              } else {
               $293 = ($294>>>0)<($295>>>0);
               if ($293) {
                $296 = ((($294)) + 1|0);
                HEAP32[$19>>2] = $296;
                $2995 = $295;$2996 = $296;
                break;
               }
               $297 = HEAP32[$245>>2]|0;
               $298 = ($297|0)==(0);
               if ($298) {
                $2995 = $295;$2996 = $294;
                break;
               }
               $299 = HEAP32[$246>>2]|0;
               $300 = HEAP32[$247>>2]|0;
               $301 = HEAP32[$249>>2]|0;
               $302 = (ftCall_iiii($299|0,$300,$248,$301)|0);
               $303 = ($302|0)==(0);
               if ($303) {
                HEAP32[$245>>2] = 0;
                HEAP8[$248>>0] = 0;
                $$sink$i$i23$i = $250;
               } else {
                $304 = (((($0)) + 40|0) + ($302)|0);
                $$sink$i$i23$i = $304;
               }
               HEAP32[$22>>2] = $$sink$i$i23$i;
               HEAP32[$19>>2] = $250;
               $2995 = $$sink$i$i23$i;$2996 = $250;
              }
             } while(0);
             $305 = (((($7) + ($$0354215$i<<2)|0)) + 3|0);
             HEAP8[$305>>0] = -1;
             $306 = (($$0354215$i) + 1)|0;
             $exitcond244$i = ($306|0)==($$0339$i|0);
             if ($exitcond244$i) {
              break;
             } else {
              $$0354215$i = $306;$252 = $2996;$253 = $2995;
             }
            }
           }
           $307 = ((($8)) + 4|0);
           $308 = HEAP32[$307>>2]|0;
           $309 = $204 ? 3 : 4;
           $310 = Math_imul($$0339$i, $309)|0;
           $311 = (-14 - ($203))|0;
           $312 = (($311) - ($310))|0;
           $313 = (($312) + ($308))|0;
           $314 = ($313|0)<(0);
           L165: do {
            if ($314) {
             $315 = HEAP32[$22>>2]|0;
             HEAP32[$19>>2] = $315;
            } else {
             $316 = ((($0)) + 16|0);
             $317 = HEAP32[$316>>2]|0;
             $318 = ($317|0)==(0|0);
             do {
              if ($318) {
               $$pre$i28$i = HEAP32[$19>>2]|0;
               $331 = $$pre$i28$i;
              } else {
               $319 = HEAP32[$22>>2]|0;
               $320 = HEAP32[$19>>2]|0;
               $321 = $319;
               $322 = (($321) - ($320))|0;
               $323 = ($313|0)>($322|0);
               $324 = $320;
               if (!($323)) {
                $331 = $324;
                break;
               }
               HEAP32[$19>>2] = $319;
               $325 = ((($0)) + 20|0);
               $326 = HEAP32[$325>>2]|0;
               $327 = ((($0)) + 28|0);
               $328 = HEAP32[$327>>2]|0;
               $329 = (($313) - ($322))|0;
               ftCall_vii($326|0,$328,$329);
               break L165;
              }
             } while(0);
             $330 = (($331) + ($313)|0);
             HEAP32[$19>>2] = $330;
            }
           } while(0);
           switch ($205|0) {
           case 1:  {
            $336 = HEAP32[$0>>2]|0;
            $337 = (($336) + 7)|0;
            $338 = $337 >>> 3;
            $339 = (0 - ($338))|0;
            $340 = $339 & 3;
            $341 = HEAP32[$189>>2]|0;
            $342 = ($341|0)>(0);
            if (!($342)) {
             $$5$i = $201;$943 = $341;
             break L117;
            }
            $343 = ((($0)) + 32|0);
            $344 = ((($0)) + 16|0);
            $345 = ((($0)) + 28|0);
            $346 = ((($0)) + 40|0);
            $347 = ((($0)) + 36|0);
            $348 = ((($0)) + 41|0);
            $349 = ((($0)) + 20|0);
            $350 = $348;
            $$0344200$i = 0;$$0363199$i = 0;
            while(1) {
             $351 = HEAP32[$19>>2]|0;
             $352 = HEAP32[$22>>2]|0;
             $353 = ($351>>>0)<($352>>>0);
             do {
              if ($353) {
               $354 = ((($351)) + 1|0);
               HEAP32[$19>>2] = $354;
               $355 = HEAP8[$351>>0]|0;
               $$0$i40$i = $355;$$in$i = $354;$2998 = $352;
              } else {
               $356 = HEAP32[$343>>2]|0;
               $357 = ($356|0)==(0);
               if ($357) {
                $$0$i40$i = 0;$$in$i = $351;$2998 = $352;
                break;
               }
               $358 = HEAP32[$344>>2]|0;
               $359 = HEAP32[$345>>2]|0;
               $360 = HEAP32[$347>>2]|0;
               $361 = (ftCall_iiii($358|0,$359,$346,$360)|0);
               $362 = ($361|0)==(0);
               if ($362) {
                HEAP32[$343>>2] = 0;
                HEAP8[$346>>0] = 0;
                $$sink$i$i38$i = $348;$2999 = 0;
               } else {
                $363 = (((($0)) + 40|0) + ($361)|0);
                $$pre$i35$i = HEAP8[$346>>0]|0;
                $$sink$i$i38$i = $363;$2999 = $$pre$i35$i;
               }
               HEAP32[$22>>2] = $$sink$i$i38$i;
               HEAP32[$19>>2] = $348;
               $$0$i40$i = $2999;$$in$i = $348;$2998 = $$sink$i$i38$i;
              }
             } while(0);
             $364 = $$in$i;
             $365 = HEAP32[$0>>2]|0;
             $366 = ($365|0)>(0);
             if ($366) {
              $367 = $$0$i40$i&255;
              $$0340196$i = $367;$$0342195$i = 7;$$1345194$i = $$0344200$i;$$1355193$i = 0;$3000 = $364;$3001 = $365;$385 = $$in$i;$386 = $2998;
              while(1) {
               $368 = $$0340196$i >>> $$0342195$i;
               $369 = $368 & 1;
               $370 = (($7) + ($369<<2)|0);
               $371 = HEAP8[$370>>0]|0;
               $372 = (($$1345194$i) + 1)|0;
               $373 = (($239) + ($$1345194$i)|0);
               HEAP8[$373>>0] = $371;
               $374 = (((($7) + ($369<<2)|0)) + 1|0);
               $375 = HEAP8[$374>>0]|0;
               $376 = (($$1345194$i) + 2)|0;
               $377 = (($239) + ($372)|0);
               HEAP8[$377>>0] = $375;
               $378 = (((($7) + ($369<<2)|0)) + 2|0);
               $379 = HEAP8[$378>>0]|0;
               $380 = (($$1345194$i) + 3)|0;
               $381 = (($239) + ($376)|0);
               HEAP8[$381>>0] = $379;
               $382 = (($$0342195$i) + -1)|0;
               $383 = ($$0342195$i|0)<(1);
               if ($383) {
                $384 = ($385>>>0)<($386>>>0);
                do {
                 if ($384) {
                  $387 = ((($385)) + 1|0);
                  HEAP32[$19>>2] = $387;
                  $388 = HEAP8[$385>>0]|0;
                  $389 = $387;
                  $$0$i47$i = $388;$$pre251$i = $3001;$3005 = $389;$3006 = $386;$3007 = $387;
                 } else {
                  $390 = HEAP32[$343>>2]|0;
                  $391 = ($390|0)==(0);
                  if ($391) {
                   $$0$i47$i = 0;$$pre251$i = $3001;$3005 = $3000;$3006 = $386;$3007 = $385;
                   break;
                  }
                  $392 = HEAP32[$344>>2]|0;
                  $393 = HEAP32[$345>>2]|0;
                  $394 = HEAP32[$347>>2]|0;
                  $395 = (ftCall_iiii($392|0,$393,$346,$394)|0);
                  $396 = ($395|0)==(0);
                  if ($396) {
                   HEAP32[$343>>2] = 0;
                   HEAP8[$346>>0] = 0;
                   $$sink$i$i45$i = $348;$3008 = 0;
                  } else {
                   $397 = (((($0)) + 40|0) + ($395)|0);
                   $$pre$i42$i = HEAP8[$346>>0]|0;
                   $$sink$i$i45$i = $397;$3008 = $$pre$i42$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i45$i;
                  HEAP32[$19>>2] = $348;
                  $$pre251$pre$i = HEAP32[$0>>2]|0;
                  $$0$i47$i = $3008;$$pre251$i = $$pre251$pre$i;$3005 = $350;$3006 = $$sink$i$i45$i;$3007 = $348;
                 }
                } while(0);
                $398 = $$0$i47$i&255;
                $$1341$i = $398;$$1343$i = 7;$3002 = $3005;$3003 = $3006;$3004 = $3007;$401 = $$pre251$i;
               } else {
                $$1341$i = $$0340196$i;$$1343$i = $382;$3002 = $3000;$3003 = $386;$3004 = $385;$401 = $3001;
               }
               $399 = (($$1355193$i) + 1)|0;
               $400 = ($399|0)<($401|0);
               if ($400) {
                $$0340196$i = $$1341$i;$$0342195$i = $$1343$i;$$1345194$i = $380;$$1355193$i = $399;$3000 = $3002;$3001 = $401;$385 = $3004;$386 = $3003;
               } else {
                $$1345$lcssa$i = $380;$$pre$i50$i = $3004;$405 = $3003;$407 = $3002;
                break;
               }
              }
             } else {
              $$1345$lcssa$i = $$0344200$i;$$pre$i50$i = $$in$i;$405 = $2998;$407 = $364;
             }
             $402 = HEAP32[$344>>2]|0;
             $403 = ($402|0)==(0|0);
             do {
              if ($403) {
               $414 = $$pre$i50$i;
               label = 156;
              } else {
               $404 = $405;
               $406 = (($404) - ($407))|0;
               $408 = ($340|0)>($406|0);
               $409 = $407;
               if (!($408)) {
                $414 = $409;
                label = 156;
                break;
               }
               HEAP32[$19>>2] = $405;
               $410 = HEAP32[$349>>2]|0;
               $411 = HEAP32[$345>>2]|0;
               $412 = (($340) - ($406))|0;
               ftCall_vii($410|0,$411,$412);
              }
             } while(0);
             if ((label|0) == 156) {
              label = 0;
              $413 = (($414) + ($340)|0);
              HEAP32[$19>>2] = $413;
             }
             $415 = (($$0363199$i) + 1)|0;
             $416 = HEAP32[$189>>2]|0;
             $417 = ($415|0)<($416|0);
             if ($417) {
              $$0344200$i = $$1345$lcssa$i;$$0363199$i = $415;
             } else {
              $$5$i = $201;$943 = $416;
              break L117;
             }
            }
            break;
           }
           case 4:  {
            $332 = HEAP32[$0>>2]|0;
            $333 = (($332) + 1)|0;
            $334 = $333 >>> 1;
            $$0361$ph$i = $334;$2997 = $332;
            break;
           }
           case 8:  {
            $335 = HEAP32[$0>>2]|0;
            $$0361$ph$i = $335;$2997 = $335;
            break;
           }
           default: {
            _free($239);
            $$2$i = 0;
            break L94;
           }
           }
           $418 = (0 - ($$0361$ph$i))|0;
           $419 = $418 & 3;
           $420 = HEAP32[$189>>2]|0;
           $421 = ($420|0)>(0);
           if (!($421)) {
            $$5$i = $201;$943 = $420;
            break;
           }
           $422 = ((($0)) + 16|0);
           $423 = ($205|0)==(4);
           $424 = ($$$i|0)==(4);
           $425 = ((($0)) + 32|0);
           $426 = ((($0)) + 28|0);
           $427 = ((($0)) + 40|0);
           $428 = ((($0)) + 36|0);
           $429 = ($205|0)==(8);
           $430 = ((($0)) + 41|0);
           $431 = ((($0)) + 20|0);
           $$1364211$i = 0;$$2346212$i = 0;$433 = $2997;
           while(1) {
            $432 = ($433|0)>(0);
            L218: do {
             if ($432) {
              $$pre249$i = HEAP32[$19>>2]|0;
              $$pre250$i = HEAP32[$22>>2]|0;
              if ($424) {
               $$2356203$i$us = 0;$$3347204$i$us = $$2346212$i;$3010 = $433;$435 = $$pre249$i;$436 = $$pre250$i;
               while(1) {
                $434 = ($435>>>0)<($436>>>0);
                do {
                 if ($434) {
                  $445 = ((($435)) + 1|0);
                  HEAP32[$19>>2] = $445;
                  $446 = HEAP8[$435>>0]|0;
                  $$0$i60$i$us = $446;$465 = $3010;$468 = $445;$469 = $436;
                 } else {
                  $437 = HEAP32[$425>>2]|0;
                  $438 = ($437|0)==(0);
                  if ($438) {
                   $$0$i60$i$us = 0;$465 = $3010;$468 = $435;$469 = $436;
                   break;
                  }
                  $439 = HEAP32[$422>>2]|0;
                  $440 = HEAP32[$426>>2]|0;
                  $441 = HEAP32[$428>>2]|0;
                  $442 = (ftCall_iiii($439|0,$440,$427,$441)|0);
                  $443 = ($442|0)==(0);
                  if ($443) {
                   HEAP32[$425>>2] = 0;
                   HEAP8[$427>>0] = 0;
                   $$sink$i$i58$i$us = $430;$3011 = 0;
                  } else {
                   $444 = (((($0)) + 40|0) + ($442)|0);
                   $$pre$i55$i$us = HEAP8[$427>>0]|0;
                   $$sink$i$i58$i$us = $444;$3011 = $$pre$i55$i$us;
                  }
                  HEAP32[$22>>2] = $$sink$i$i58$i$us;
                  HEAP32[$19>>2] = $430;
                  $$pre340 = HEAP32[$0>>2]|0;
                  $$0$i60$i$us = $3011;$465 = $$pre340;$468 = $430;$469 = $$sink$i$i58$i$us;
                 }
                } while(0);
                $447 = $$0$i60$i$us&255;
                $448 = $447 >>> 4;
                $$0338$i$us = $423 ? $448 : $447;
                $449 = (($7) + ($$0338$i$us<<2)|0);
                $450 = HEAP8[$449>>0]|0;
                $451 = (($$3347204$i$us) + 1)|0;
                $452 = (($239) + ($$3347204$i$us)|0);
                HEAP8[$452>>0] = $450;
                $453 = (((($7) + ($$0338$i$us<<2)|0)) + 1|0);
                $454 = HEAP8[$453>>0]|0;
                $455 = (($$3347204$i$us) + 2)|0;
                $456 = (($239) + ($451)|0);
                HEAP8[$456>>0] = $454;
                $457 = (((($7) + ($$0338$i$us<<2)|0)) + 2|0);
                $458 = HEAP8[$457>>0]|0;
                $459 = (($$3347204$i$us) + 3)|0;
                $460 = (($239) + ($455)|0);
                HEAP8[$460>>0] = $458;
                $461 = (($$3347204$i$us) + 4)|0;
                $462 = (($239) + ($459)|0);
                HEAP8[$462>>0] = -1;
                $463 = $$2356203$i$us | 1;
                $464 = ($463|0)==($465|0);
                if ($464) {
                 $$7$i = $461;
                 break L218;
                }
                $466 = $447 & 15;
                $$0337$i$us = $423 ? $466 : 0;
                if ($429) {
                 $467 = ($468>>>0)<($469>>>0);
                 do {
                  if ($467) {
                   $478 = ((($468)) + 1|0);
                   HEAP32[$19>>2] = $478;
                   $479 = HEAP8[$468>>0]|0;
                   $$0$i67$i$us = $479;$$pre341 = $465;$3014 = $469;$3015 = $478;
                  } else {
                   $470 = HEAP32[$425>>2]|0;
                   $471 = ($470|0)==(0);
                   if ($471) {
                    $$0$i67$i$us = 0;$$pre341 = $465;$3014 = $469;$3015 = $468;
                    break;
                   }
                   $472 = HEAP32[$422>>2]|0;
                   $473 = HEAP32[$426>>2]|0;
                   $474 = HEAP32[$428>>2]|0;
                   $475 = (ftCall_iiii($472|0,$473,$427,$474)|0);
                   $476 = ($475|0)==(0);
                   if ($476) {
                    HEAP32[$425>>2] = 0;
                    HEAP8[$427>>0] = 0;
                    $$sink$i$i65$i$us = $430;$3016 = 0;
                   } else {
                    $477 = (((($0)) + 40|0) + ($475)|0);
                    $$pre$i62$i$us = HEAP8[$427>>0]|0;
                    $$sink$i$i65$i$us = $477;$3016 = $$pre$i62$i$us;
                   }
                   HEAP32[$22>>2] = $$sink$i$i65$i$us;
                   HEAP32[$19>>2] = $430;
                   $$pre341$pre = HEAP32[$0>>2]|0;
                   $$0$i67$i$us = $3016;$$pre341 = $$pre341$pre;$3014 = $$sink$i$i65$i$us;$3015 = $430;
                  }
                 } while(0);
                 $480 = $$0$i67$i$us&255;
                 $3012 = $3014;$3013 = $3015;$482 = $480;$498 = $$pre341;
                } else {
                 $3012 = $469;$3013 = $468;$482 = $$0337$i$us;$498 = $465;
                }
                $481 = (($7) + ($482<<2)|0);
                $483 = HEAP8[$481>>0]|0;
                $484 = (($$3347204$i$us) + 5)|0;
                $485 = (($239) + ($461)|0);
                HEAP8[$485>>0] = $483;
                $486 = (((($7) + ($482<<2)|0)) + 1|0);
                $487 = HEAP8[$486>>0]|0;
                $488 = (($$3347204$i$us) + 6)|0;
                $489 = (($239) + ($484)|0);
                HEAP8[$489>>0] = $487;
                $490 = (((($7) + ($482<<2)|0)) + 2|0);
                $491 = HEAP8[$490>>0]|0;
                $492 = (($$3347204$i$us) + 7)|0;
                $493 = (($239) + ($488)|0);
                HEAP8[$493>>0] = $491;
                $494 = (($$3347204$i$us) + 8)|0;
                $495 = (($239) + ($492)|0);
                HEAP8[$495>>0] = -1;
                $496 = (($$2356203$i$us) + 2)|0;
                $497 = ($496|0)<($498|0);
                if ($497) {
                 $$2356203$i$us = $496;$$3347204$i$us = $494;$3010 = $498;$435 = $3013;$436 = $3012;
                } else {
                 $$7$i = $494;
                 break;
                }
               }
              } else {
               $$2356203$i = 0;$$3347204$i = $$2346212$i;$3009 = $433;$500 = $$pre249$i;$501 = $$pre250$i;
               while(1) {
                $499 = ($500>>>0)<($501>>>0);
                do {
                 if ($499) {
                  $502 = ((($500)) + 1|0);
                  HEAP32[$19>>2] = $502;
                  $503 = HEAP8[$500>>0]|0;
                  $$0$i60$i = $503;$528 = $3009;$531 = $502;$532 = $501;
                 } else {
                  $504 = HEAP32[$425>>2]|0;
                  $505 = ($504|0)==(0);
                  if ($505) {
                   $$0$i60$i = 0;$528 = $3009;$531 = $500;$532 = $501;
                   break;
                  }
                  $506 = HEAP32[$422>>2]|0;
                  $507 = HEAP32[$426>>2]|0;
                  $508 = HEAP32[$428>>2]|0;
                  $509 = (ftCall_iiii($506|0,$507,$427,$508)|0);
                  $510 = ($509|0)==(0);
                  if ($510) {
                   HEAP32[$425>>2] = 0;
                   HEAP8[$427>>0] = 0;
                   $$sink$i$i58$i = $430;$3017 = 0;
                  } else {
                   $511 = (((($0)) + 40|0) + ($509)|0);
                   $$pre$i55$i = HEAP8[$427>>0]|0;
                   $$sink$i$i58$i = $511;$3017 = $$pre$i55$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i58$i;
                  HEAP32[$19>>2] = $430;
                  $$pre = HEAP32[$0>>2]|0;
                  $$0$i60$i = $3017;$528 = $$pre;$531 = $430;$532 = $$sink$i$i58$i;
                 }
                } while(0);
                $512 = $$0$i60$i&255;
                $513 = $512 >>> 4;
                $$0338$i = $423 ? $513 : $512;
                $514 = (($7) + ($$0338$i<<2)|0);
                $515 = HEAP8[$514>>0]|0;
                $516 = (($$3347204$i) + 1)|0;
                $517 = (($239) + ($$3347204$i)|0);
                HEAP8[$517>>0] = $515;
                $518 = (((($7) + ($$0338$i<<2)|0)) + 1|0);
                $519 = HEAP8[$518>>0]|0;
                $520 = (($$3347204$i) + 2)|0;
                $521 = (($239) + ($516)|0);
                HEAP8[$521>>0] = $519;
                $522 = (((($7) + ($$0338$i<<2)|0)) + 2|0);
                $523 = HEAP8[$522>>0]|0;
                $524 = (($$3347204$i) + 3)|0;
                $525 = (($239) + ($520)|0);
                HEAP8[$525>>0] = $523;
                $526 = $$2356203$i | 1;
                $527 = ($526|0)==($528|0);
                if ($527) {
                 $$7$i = $524;
                 break L218;
                }
                $529 = $512 & 15;
                $$0337$i = $423 ? $529 : 0;
                if ($429) {
                 $530 = ($531>>>0)<($532>>>0);
                 do {
                  if ($530) {
                   $533 = ((($531)) + 1|0);
                   HEAP32[$19>>2] = $533;
                   $534 = HEAP8[$531>>0]|0;
                   $$0$i67$i = $534;$$pre339 = $528;$3020 = $532;$3021 = $533;
                  } else {
                   $535 = HEAP32[$425>>2]|0;
                   $536 = ($535|0)==(0);
                   if ($536) {
                    $$0$i67$i = 0;$$pre339 = $528;$3020 = $532;$3021 = $531;
                    break;
                   }
                   $537 = HEAP32[$422>>2]|0;
                   $538 = HEAP32[$426>>2]|0;
                   $539 = HEAP32[$428>>2]|0;
                   $540 = (ftCall_iiii($537|0,$538,$427,$539)|0);
                   $541 = ($540|0)==(0);
                   if ($541) {
                    HEAP32[$425>>2] = 0;
                    HEAP8[$427>>0] = 0;
                    $$sink$i$i65$i = $430;$3022 = 0;
                   } else {
                    $542 = (((($0)) + 40|0) + ($540)|0);
                    $$pre$i62$i = HEAP8[$427>>0]|0;
                    $$sink$i$i65$i = $542;$3022 = $$pre$i62$i;
                   }
                   HEAP32[$22>>2] = $$sink$i$i65$i;
                   HEAP32[$19>>2] = $430;
                   $$pre339$pre = HEAP32[$0>>2]|0;
                   $$0$i67$i = $3022;$$pre339 = $$pre339$pre;$3020 = $$sink$i$i65$i;$3021 = $430;
                  }
                 } while(0);
                 $543 = $$0$i67$i&255;
                 $3018 = $3020;$3019 = $3021;$545 = $543;$559 = $$pre339;
                } else {
                 $3018 = $532;$3019 = $531;$545 = $$0337$i;$559 = $528;
                }
                $544 = (($7) + ($545<<2)|0);
                $546 = HEAP8[$544>>0]|0;
                $547 = (($$3347204$i) + 4)|0;
                $548 = (($239) + ($524)|0);
                HEAP8[$548>>0] = $546;
                $549 = (((($7) + ($545<<2)|0)) + 1|0);
                $550 = HEAP8[$549>>0]|0;
                $551 = (($$3347204$i) + 5)|0;
                $552 = (($239) + ($547)|0);
                HEAP8[$552>>0] = $550;
                $553 = (((($7) + ($545<<2)|0)) + 2|0);
                $554 = HEAP8[$553>>0]|0;
                $555 = (($$3347204$i) + 6)|0;
                $556 = (($239) + ($551)|0);
                HEAP8[$556>>0] = $554;
                $557 = (($$2356203$i) + 2)|0;
                $558 = ($557|0)<($559|0);
                if ($558) {
                 $$2356203$i = $557;$$3347204$i = $555;$3009 = $559;$500 = $3019;$501 = $3018;
                } else {
                 $$7$i = $555;
                 break;
                }
               }
              }
             } else {
              $$7$i = $$2346212$i;
             }
            } while(0);
            $560 = HEAP32[$422>>2]|0;
            $561 = ($560|0)==(0|0);
            do {
             if ($561) {
              $$pre$i70$i = HEAP32[$19>>2]|0;
              $572 = $$pre$i70$i;
              label = 204;
             } else {
              $562 = HEAP32[$22>>2]|0;
              $563 = HEAP32[$19>>2]|0;
              $564 = $562;
              $565 = (($564) - ($563))|0;
              $566 = ($419|0)>($565|0);
              $567 = $563;
              if (!($566)) {
               $572 = $567;
               label = 204;
               break;
              }
              HEAP32[$19>>2] = $562;
              $568 = HEAP32[$431>>2]|0;
              $569 = HEAP32[$426>>2]|0;
              $570 = (($419) - ($565))|0;
              ftCall_vii($568|0,$569,$570);
             }
            } while(0);
            if ((label|0) == 204) {
             label = 0;
             $571 = (($572) + ($419)|0);
             HEAP32[$19>>2] = $571;
            }
            $573 = (($$1364211$i) + 1)|0;
            $574 = HEAP32[$189>>2]|0;
            $575 = ($573|0)<($574|0);
            if (!($575)) {
             $$5$i = $201;$943 = $574;
             break L117;
            }
            $$pre248$i = HEAP32[$0>>2]|0;
            $$1364211$i = $573;$$2346212$i = $$7$i;$433 = $$pre248$i;
           }
          } else {
           $576 = ((($8)) + 4|0);
           $577 = HEAP32[$576>>2]|0;
           $578 = (-14 - ($203))|0;
           $579 = (($577) + ($578))|0;
           $580 = ($579|0)<(0);
           L281: do {
            if ($580) {
             $581 = HEAP32[$22>>2]|0;
             HEAP32[$19>>2] = $581;
            } else {
             $582 = ((($0)) + 16|0);
             $583 = HEAP32[$582>>2]|0;
             $584 = ($583|0)==(0|0);
             do {
              if ($584) {
               $$pre$i76$i = HEAP32[$19>>2]|0;
               $597 = $$pre$i76$i;
              } else {
               $585 = HEAP32[$22>>2]|0;
               $586 = HEAP32[$19>>2]|0;
               $587 = $585;
               $588 = (($587) - ($586))|0;
               $589 = ($579|0)>($588|0);
               $590 = $586;
               if (!($589)) {
                $597 = $590;
                break;
               }
               HEAP32[$19>>2] = $585;
               $591 = ((($0)) + 20|0);
               $592 = HEAP32[$591>>2]|0;
               $593 = ((($0)) + 28|0);
               $594 = HEAP32[$593>>2]|0;
               $595 = (($579) - ($588))|0;
               ftCall_vii($592|0,$594,$595);
               break L281;
              }
             } while(0);
             $596 = (($597) + ($579)|0);
             HEAP32[$19>>2] = $596;
            }
           } while(0);
           switch ($205|0) {
           case 24:  {
            $598 = HEAP32[$0>>2]|0;
            $599 = Math_imul($598, -3)|0;
            $600 = $599 & 3;
            $$0322154$i = 1;$$0329$i = 0;$$0330$i = 0;$$0331$i = 0;$$0332$i = 0;$$0333$i = 0;$$0334$i = 0;$$0335$i = 0;$$0336$i = 0;$3024 = 1;$929 = $600;
            break;
           }
           case 16:  {
            $601 = HEAP32[$0>>2]|0;
            $602 = $601 << 1;
            $603 = (0 - ($602))|0;
            $604 = $603 & 2;
            $3023 = $604;
            label = 218;
            break;
           }
           case 32:  {
            $605 = ($198|0)==(255);
            $606 = ($196|0)==(65280);
            $or$cond6$i = $606 & $605;
            $607 = ($194|0)==(16711680);
            $or$cond8$i = $607 & $or$cond6$i;
            $608 = ($200|0)==(-16777216);
            $or$cond10$i = $608 & $or$cond8$i;
            if ($or$cond10$i) {
             $$0322154$i = 2;$$0329$i = 0;$$0330$i = 0;$$0331$i = 0;$$0332$i = 0;$$0333$i = 0;$$0334$i = 0;$$0335$i = 0;$$0336$i = 0;$3024 = 1;$929 = 0;
            } else {
             $3023 = 0;
             label = 218;
            }
            break;
           }
           default: {
            $3023 = 0;
            label = 218;
           }
           }
           if ((label|0) == 218) {
            $609 = ($194|0)!=(0);
            $610 = ($196|0)!=(0);
            $or$cond12$i = $609 & $610;
            $611 = ($198|0)!=(0);
            $or$cond14$i = $or$cond12$i & $611;
            if (!($or$cond14$i)) {
             _free($239);
             $$2$i = 0;
             break L94;
            }
            $612 = ($194>>>0)>(65535);
            $613 = $194 >>> 16;
            $spec$select$i81$i = $612 ? $613 : $194;
            $spec$select24$i$i = $612 ? 16 : 0;
            $614 = ($spec$select$i81$i>>>0)>(255);
            $615 = $spec$select24$i$i | 8;
            $616 = $spec$select$i81$i >>> 8;
            $$120$i$i = $614 ? $616 : $spec$select$i81$i;
            $$1$i$i69 = $614 ? $615 : $spec$select24$i$i;
            $617 = ($$120$i$i>>>0)>(15);
            $618 = $$1$i$i69 | 4;
            $619 = $$120$i$i >>> 4;
            $$221$i$i = $617 ? $619 : $$120$i$i;
            $$2$i$i70 = $617 ? $618 : $$1$i$i69;
            $620 = ($$221$i$i>>>0)>(3);
            $621 = $$2$i$i70 | 2;
            $622 = $$221$i$i >>> 2;
            $$322$i$i = $620 ? $622 : $$221$i$i;
            $$3$i$i = $620 ? $621 : $$2$i$i70;
            $623 = ($$322$i$i>>>0)>(1);
            $624 = $623&1;
            $spec$select25$i$i = (($$3$i$i) + -7)|0;
            $625 = (($spec$select25$i$i) + ($624))|0;
            $626 = $194 & 1431655765;
            $627 = $194 >>> 1;
            $628 = $627 & 1431655765;
            $629 = (($628) + ($626))|0;
            $630 = $629 & 858993459;
            $631 = $629 >>> 2;
            $632 = $631 & 858993459;
            $633 = (($632) + ($630))|0;
            $634 = $633 >>> 4;
            $635 = (($634) + ($633))|0;
            $636 = $635 & 252645135;
            $637 = $636 >>> 8;
            $638 = (($637) + ($636))|0;
            $639 = $638 >>> 16;
            $640 = (($639) + ($638))|0;
            $641 = $640 & 63;
            $642 = ($196>>>0)>(65535);
            $643 = $196 >>> 16;
            $spec$select$i84$i = $642 ? $643 : $196;
            $spec$select24$i85$i = $642 ? 16 : 0;
            $644 = ($spec$select$i84$i>>>0)>(255);
            $645 = $spec$select24$i85$i | 8;
            $646 = $spec$select$i84$i >>> 8;
            $$120$i86$i = $644 ? $646 : $spec$select$i84$i;
            $$1$i87$i = $644 ? $645 : $spec$select24$i85$i;
            $647 = ($$120$i86$i>>>0)>(15);
            $648 = $$1$i87$i | 4;
            $649 = $$120$i86$i >>> 4;
            $$221$i88$i = $647 ? $649 : $$120$i86$i;
            $$2$i89$i = $647 ? $648 : $$1$i87$i;
            $650 = ($$221$i88$i>>>0)>(3);
            $651 = $$2$i89$i | 2;
            $652 = $$221$i88$i >>> 2;
            $$322$i90$i = $650 ? $652 : $$221$i88$i;
            $$3$i91$i = $650 ? $651 : $$2$i89$i;
            $653 = ($$322$i90$i>>>0)>(1);
            $654 = $653&1;
            $spec$select25$i92$i = (($$3$i91$i) + -7)|0;
            $655 = (($spec$select25$i92$i) + ($654))|0;
            $656 = $196 & 1431655765;
            $657 = $196 >>> 1;
            $658 = $657 & 1431655765;
            $659 = (($658) + ($656))|0;
            $660 = $659 & 858993459;
            $661 = $659 >>> 2;
            $662 = $661 & 858993459;
            $663 = (($662) + ($660))|0;
            $664 = $663 >>> 4;
            $665 = (($664) + ($663))|0;
            $666 = $665 & 252645135;
            $667 = $666 >>> 8;
            $668 = (($667) + ($666))|0;
            $669 = $668 >>> 16;
            $670 = (($669) + ($668))|0;
            $671 = $670 & 63;
            $672 = ($198>>>0)>(65535);
            $673 = $198 >>> 16;
            $spec$select$i97$i = $672 ? $673 : $198;
            $spec$select24$i98$i = $672 ? 16 : 0;
            $674 = ($spec$select$i97$i>>>0)>(255);
            $675 = $spec$select24$i98$i | 8;
            $676 = $spec$select$i97$i >>> 8;
            $$120$i99$i = $674 ? $676 : $spec$select$i97$i;
            $$1$i100$i = $674 ? $675 : $spec$select24$i98$i;
            $677 = ($$120$i99$i>>>0)>(15);
            $678 = $$1$i100$i | 4;
            $679 = $$120$i99$i >>> 4;
            $$221$i101$i = $677 ? $679 : $$120$i99$i;
            $$2$i102$i = $677 ? $678 : $$1$i100$i;
            $680 = ($$221$i101$i>>>0)>(3);
            $681 = $$2$i102$i | 2;
            $682 = $$221$i101$i >>> 2;
            $$322$i103$i = $680 ? $682 : $$221$i101$i;
            $$3$i104$i = $680 ? $681 : $$2$i102$i;
            $683 = ($$322$i103$i>>>0)>(1);
            $684 = $683&1;
            $spec$select25$i105$i = (($$3$i104$i) + -7)|0;
            $685 = (($spec$select25$i105$i) + ($684))|0;
            $686 = $198 & 1431655765;
            $687 = $198 >>> 1;
            $688 = $687 & 1431655765;
            $689 = (($688) + ($686))|0;
            $690 = $689 & 858993459;
            $691 = $689 >>> 2;
            $692 = $691 & 858993459;
            $693 = (($692) + ($690))|0;
            $694 = $693 >>> 4;
            $695 = (($694) + ($693))|0;
            $696 = $695 & 252645135;
            $697 = $696 >>> 8;
            $698 = (($697) + ($696))|0;
            $699 = $698 >>> 16;
            $700 = (($699) + ($698))|0;
            $701 = $700 & 63;
            $702 = ($200|0)==(0);
            if ($702) {
             $$023$i117$i = -8;
            } else {
             $703 = ($200>>>0)>(65535);
             $704 = $200 >>> 16;
             $spec$select$i108$i = $703 ? $704 : $200;
             $spec$select24$i109$i = $703 ? 16 : 0;
             $705 = ($spec$select$i108$i>>>0)>(255);
             $706 = $spec$select24$i109$i | 8;
             $707 = $spec$select$i108$i >>> 8;
             $$120$i110$i = $705 ? $707 : $spec$select$i108$i;
             $$1$i111$i = $705 ? $706 : $spec$select24$i109$i;
             $708 = ($$120$i110$i>>>0)>(15);
             $709 = $$1$i111$i | 4;
             $710 = $$120$i110$i >>> 4;
             $$221$i112$i = $708 ? $710 : $$120$i110$i;
             $$2$i113$i = $708 ? $709 : $$1$i111$i;
             $711 = ($$221$i112$i>>>0)>(3);
             $712 = $$2$i113$i | 2;
             $713 = $$221$i112$i >>> 2;
             $$322$i114$i = $711 ? $713 : $$221$i112$i;
             $$3$i115$i = $711 ? $712 : $$2$i113$i;
             $714 = ($$322$i114$i>>>0)>(1);
             $715 = $714&1;
             $spec$select25$i116$i = (($$3$i115$i) + -7)|0;
             $phitmp$i = (($spec$select25$i116$i) + ($715))|0;
             $$023$i117$i = $phitmp$i;
            }
            $716 = $200 & 1431655765;
            $717 = $200 >>> 1;
            $718 = $717 & 1431655765;
            $719 = (($718) + ($716))|0;
            $720 = $719 & 858993459;
            $721 = $719 >>> 2;
            $722 = $721 & 858993459;
            $723 = (($722) + ($720))|0;
            $724 = $723 >>> 4;
            $725 = (($724) + ($723))|0;
            $726 = $725 & 252645135;
            $727 = $726 >>> 8;
            $728 = (($727) + ($726))|0;
            $729 = $728 >>> 16;
            $730 = (($729) + ($728))|0;
            $731 = $730 & 63;
            $$0322154$i = 0;$$0329$i = $731;$$0330$i = $701;$$0331$i = $671;$$0332$i = $641;$$0333$i = $$023$i117$i;$$0334$i = $685;$$0335$i = $655;$$0336$i = $625;$3024 = 0;$929 = $3023;
           }
           $732 = HEAP32[$189>>2]|0;
           $733 = ($732|0)>(0);
           if (!($733)) {
            $$5$i = $201;$943 = $732;
            break;
           }
           $734 = ((($0)) + 16|0);
           $735 = ((($0)) + 32|0);
           $736 = ((($0)) + 28|0);
           $737 = ((($0)) + 40|0);
           $738 = ((($0)) + 36|0);
           $739 = ($$0322154$i|0)==(2);
           $740 = ((($0)) + 41|0);
           $741 = ($$$i|0)==(4);
           $742 = ($205|0)==(16);
           $743 = ($$0336$i|0)<(0);
           $744 = (0 - ($$0336$i))|0;
           $745 = ($$0332$i>>>0)<(9);
           $746 = (8 - ($$0332$i))|0;
           $747 = (113552 + ($$0332$i<<2)|0);
           $748 = (113600 + ($$0332$i<<2)|0);
           $749 = ($$0335$i|0)<(0);
           $750 = (0 - ($$0335$i))|0;
           $751 = ($$0331$i>>>0)<(9);
           $752 = (8 - ($$0331$i))|0;
           $753 = (113552 + ($$0331$i<<2)|0);
           $754 = (113600 + ($$0331$i<<2)|0);
           $755 = ($$0334$i|0)<(0);
           $756 = (0 - ($$0334$i))|0;
           $757 = ($$0330$i>>>0)<(9);
           $758 = (8 - ($$0330$i))|0;
           $759 = (113552 + ($$0330$i<<2)|0);
           $760 = (113600 + ($$0330$i<<2)|0);
           $761 = ($$0333$i|0)<(0);
           $762 = (0 - ($$0333$i))|0;
           $763 = ($$0329$i>>>0)<(9);
           $764 = (8 - ($$0329$i))|0;
           $765 = (113552 + ($$0329$i<<2)|0);
           $766 = (113600 + ($$0329$i<<2)|0);
           $767 = ((($0)) + 20|0);
           $$0319235$i = $201;$$0323234$i = 0;$$2365233$i = 0;
           L304: while(1) {
            $768 = HEAP32[$0>>2]|0;
            $769 = ($768|0)>(0);
            do {
             if ($3024) {
              if (!($769)) {
               $$3$i = $$0319235$i;$$5328$i = $$0323234$i;
               break;
              }
              $$pre$i71 = HEAP32[$19>>2]|0;
              $$pre245$i = HEAP32[$22>>2]|0;
              $$1320228$i = $$0319235$i;$$1324227$i = $$0323234$i;$$3357226$i = 0;$771 = $$pre$i71;$772 = $$pre245$i;
              while(1) {
               $770 = ($771>>>0)<($772>>>0);
               do {
                if ($770) {
                 $773 = ((($771)) + 1|0);
                 HEAP32[$19>>2] = $773;
                 $774 = HEAP8[$771>>0]|0;
                 $$0$i131$i = $774;$786 = $773;$787 = $772;
                } else {
                 $775 = HEAP32[$735>>2]|0;
                 $776 = ($775|0)==(0);
                 if ($776) {
                  $$0$i131$i = 0;$786 = $771;$787 = $772;
                  break;
                 }
                 $777 = HEAP32[$734>>2]|0;
                 $778 = HEAP32[$736>>2]|0;
                 $779 = HEAP32[$738>>2]|0;
                 $780 = (ftCall_iiii($777|0,$778,$737,$779)|0);
                 $781 = ($780|0)==(0);
                 if ($781) {
                  HEAP32[$735>>2] = 0;
                  HEAP8[$737>>0] = 0;
                  $$sink$i$i129$i = $740;$3025 = 0;
                 } else {
                  $782 = (((($0)) + 40|0) + ($780)|0);
                  $$pre$i126$i = HEAP8[$737>>0]|0;
                  $$sink$i$i129$i = $782;$3025 = $$pre$i126$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i129$i;
                 HEAP32[$19>>2] = $740;
                 $$0$i131$i = $3025;$786 = $740;$787 = $$sink$i$i129$i;
                }
               } while(0);
               $783 = (($$1324227$i) + 2)|0;
               $784 = (($239) + ($783)|0);
               HEAP8[$784>>0] = $$0$i131$i;
               $785 = ($786>>>0)<($787>>>0);
               do {
                if ($785) {
                 $788 = ((($786)) + 1|0);
                 HEAP32[$19>>2] = $788;
                 $789 = HEAP8[$786>>0]|0;
                 $$0$i138$i = $789;$801 = $788;$802 = $787;
                } else {
                 $790 = HEAP32[$735>>2]|0;
                 $791 = ($790|0)==(0);
                 if ($791) {
                  $$0$i138$i = 0;$801 = $786;$802 = $787;
                  break;
                 }
                 $792 = HEAP32[$734>>2]|0;
                 $793 = HEAP32[$736>>2]|0;
                 $794 = HEAP32[$738>>2]|0;
                 $795 = (ftCall_iiii($792|0,$793,$737,$794)|0);
                 $796 = ($795|0)==(0);
                 if ($796) {
                  HEAP32[$735>>2] = 0;
                  HEAP8[$737>>0] = 0;
                  $$sink$i$i136$i = $740;$3026 = 0;
                 } else {
                  $797 = (((($0)) + 40|0) + ($795)|0);
                  $$pre$i133$i = HEAP8[$737>>0]|0;
                  $$sink$i$i136$i = $797;$3026 = $$pre$i133$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i136$i;
                 HEAP32[$19>>2] = $740;
                 $$0$i138$i = $3026;$801 = $740;$802 = $$sink$i$i136$i;
                }
               } while(0);
               $798 = (($$1324227$i) + 1)|0;
               $799 = (($239) + ($798)|0);
               HEAP8[$799>>0] = $$0$i138$i;
               $800 = ($801>>>0)<($802>>>0);
               do {
                if ($800) {
                 $803 = ((($801)) + 1|0);
                 HEAP32[$19>>2] = $803;
                 $804 = HEAP8[$801>>0]|0;
                 $$0$i145$i = $804;$816 = $803;$817 = $802;
                } else {
                 $805 = HEAP32[$735>>2]|0;
                 $806 = ($805|0)==(0);
                 if ($806) {
                  $$0$i145$i = 0;$816 = $801;$817 = $802;
                  break;
                 }
                 $807 = HEAP32[$734>>2]|0;
                 $808 = HEAP32[$736>>2]|0;
                 $809 = HEAP32[$738>>2]|0;
                 $810 = (ftCall_iiii($807|0,$808,$737,$809)|0);
                 $811 = ($810|0)==(0);
                 if ($811) {
                  HEAP32[$735>>2] = 0;
                  HEAP8[$737>>0] = 0;
                  $$sink$i$i143$i = $740;$3027 = 0;
                 } else {
                  $812 = (((($0)) + 40|0) + ($810)|0);
                  $$pre$i140$i = HEAP8[$737>>0]|0;
                  $$sink$i$i143$i = $812;$3027 = $$pre$i140$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i143$i;
                 HEAP32[$19>>2] = $740;
                 $$0$i145$i = $3027;$816 = $740;$817 = $$sink$i$i143$i;
                }
               } while(0);
               $813 = (($239) + ($$1324227$i)|0);
               HEAP8[$813>>0] = $$0$i145$i;
               $814 = (($$1324227$i) + 3)|0;
               if ($739) {
                $815 = ($816>>>0)<($817>>>0);
                do {
                 if ($815) {
                  $818 = ((($816)) + 1|0);
                  HEAP32[$19>>2] = $818;
                  $819 = HEAP8[$816>>0]|0;
                  $$0$i124$i = $819;$3030 = $817;$3031 = $818;
                 } else {
                  $820 = HEAP32[$735>>2]|0;
                  $821 = ($820|0)==(0);
                  if ($821) {
                   $$0$i124$i = 0;$3030 = $817;$3031 = $816;
                   break;
                  }
                  $822 = HEAP32[$734>>2]|0;
                  $823 = HEAP32[$736>>2]|0;
                  $824 = HEAP32[$738>>2]|0;
                  $825 = (ftCall_iiii($822|0,$823,$737,$824)|0);
                  $826 = ($825|0)==(0);
                  if ($826) {
                   HEAP32[$735>>2] = 0;
                   HEAP8[$737>>0] = 0;
                   $$sink$i$i122$i = $740;$3032 = 0;
                  } else {
                   $827 = (((($0)) + 40|0) + ($825)|0);
                   $$pre$i119$i = HEAP8[$737>>0]|0;
                   $$sink$i$i122$i = $827;$3032 = $$pre$i119$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i122$i;
                  HEAP32[$19>>2] = $740;
                  $$0$i124$i = $3032;$3030 = $$sink$i$i122$i;$3031 = $740;
                 }
                } while(0);
                $828 = $$0$i124$i&255;
                $3028 = $3030;$3029 = $3031;$830 = $828;
               } else {
                $3028 = $817;$3029 = $816;$830 = 255;
               }
               $829 = $830 | $$1320228$i;
               if ($741) {
                $831 = (($$1324227$i) + 4)|0;
                $832 = (($239) + ($814)|0);
                $833 = $830&255;
                HEAP8[$832>>0] = $833;
                $$2325$i = $831;
               } else {
                $$2325$i = $814;
               }
               $834 = (($$3357226$i) + 1)|0;
               $835 = HEAP32[$0>>2]|0;
               $836 = ($834|0)<($835|0);
               if ($836) {
                $$1320228$i = $829;$$1324227$i = $$2325$i;$$3357226$i = $834;$771 = $3029;$772 = $3028;
               } else {
                $$3$i = $829;$$5328$i = $$2325$i;
                break;
               }
              }
             } else {
              if (!($769)) {
               $$3$i = $$0319235$i;$$5328$i = $$0323234$i;
               break;
              }
              $$2321221$i = $$0319235$i;$$3326220$i = $$0323234$i;$$4358219$i = 0;
              while(1) {
               if ($742) {
                $837 = HEAP32[$19>>2]|0;
                $838 = HEAP32[$22>>2]|0;
                $839 = ($837>>>0)<($838>>>0);
                do {
                 if ($839) {
                  $840 = ((($837)) + 1|0);
                  HEAP32[$19>>2] = $840;
                  $841 = HEAP8[$837>>0]|0;
                  $$0$i$i$i75 = $841;$852 = $840;$853 = $838;
                 } else {
                  $842 = HEAP32[$735>>2]|0;
                  $843 = ($842|0)==(0);
                  if ($843) {
                   $$0$i$i$i75 = 0;$852 = $837;$853 = $838;
                   break;
                  }
                  $844 = HEAP32[$734>>2]|0;
                  $845 = HEAP32[$736>>2]|0;
                  $846 = HEAP32[$738>>2]|0;
                  $847 = (ftCall_iiii($844|0,$845,$737,$846)|0);
                  $848 = ($847|0)==(0);
                  if ($848) {
                   HEAP32[$735>>2] = 0;
                   HEAP8[$737>>0] = 0;
                   $$sink$i$i$i$i73 = $740;$3033 = 0;
                  } else {
                   $849 = (((($0)) + 40|0) + ($847)|0);
                   $$pre$i$i$i72 = HEAP8[$737>>0]|0;
                   $$sink$i$i$i$i73 = $849;$3033 = $$pre$i$i$i72;
                  }
                  HEAP32[$22>>2] = $$sink$i$i$i$i73;
                  HEAP32[$19>>2] = $740;
                  $$0$i$i$i75 = $3033;$852 = $740;$853 = $$sink$i$i$i$i73;
                 }
                } while(0);
                $850 = $$0$i$i$i75&255;
                $851 = ($852>>>0)<($853>>>0);
                do {
                 if ($851) {
                  $854 = ((($852)) + 1|0);
                  HEAP32[$19>>2] = $854;
                  $855 = HEAP8[$852>>0]|0;
                  $$0$i8$i$i = $855;
                 } else {
                  $856 = HEAP32[$735>>2]|0;
                  $857 = ($856|0)==(0);
                  if ($857) {
                   $$0$i8$i$i = 0;
                   break;
                  }
                  $858 = HEAP32[$734>>2]|0;
                  $859 = HEAP32[$736>>2]|0;
                  $860 = HEAP32[$738>>2]|0;
                  $861 = (ftCall_iiii($858|0,$859,$737,$860)|0);
                  $862 = ($861|0)==(0);
                  if ($862) {
                   HEAP32[$735>>2] = 0;
                   HEAP8[$737>>0] = 0;
                   $$sink$i$i6$i$i = $740;$3034 = 0;
                  } else {
                   $863 = (((($0)) + 40|0) + ($861)|0);
                   $$pre$i3$i$i = HEAP8[$737>>0]|0;
                   $$sink$i$i6$i$i = $863;$3034 = $$pre$i3$i$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i6$i$i;
                  HEAP32[$19>>2] = $740;
                  $$0$i8$i$i = $3034;
                 }
                } while(0);
                $864 = $$0$i8$i$i&255;
                $865 = $864 << 8;
                $866 = $865 | $850;
                $869 = $866;
               } else {
                $867 = (_stbi__get32le($0)|0);
                $869 = $867;
               }
               $868 = $869 & $194;
               $870 = $868 << $744;
               $871 = $868 >> $$0336$i;
               $$0$i95$i = $743 ? $870 : $871;
               $872 = ($$0$i95$i>>>0)<(256);
               if (!($872)) {
                label = 280;
                break L304;
               }
               if (!($745)) {
                label = 282;
                break L304;
               }
               $873 = $$0$i95$i >>> $746;
               $874 = HEAP32[$747>>2]|0;
               $875 = Math_imul($874, $873)|0;
               $876 = HEAP32[$748>>2]|0;
               $877 = $875 >> $876;
               $878 = $877&255;
               $879 = (($$3326220$i) + 1)|0;
               $880 = (($239) + ($$3326220$i)|0);
               HEAP8[$880>>0] = $878;
               $881 = $869 & $196;
               $882 = $881 << $750;
               $883 = $881 >> $$0335$i;
               $$0$i82$i = $749 ? $882 : $883;
               $884 = ($$0$i82$i>>>0)<(256);
               if (!($884)) {
                label = 284;
                break L304;
               }
               if (!($751)) {
                label = 286;
                break L304;
               }
               $885 = $$0$i82$i >>> $752;
               $886 = HEAP32[$753>>2]|0;
               $887 = Math_imul($886, $885)|0;
               $888 = HEAP32[$754>>2]|0;
               $889 = $887 >> $888;
               $890 = $889&255;
               $891 = (($$3326220$i) + 2)|0;
               $892 = (($239) + ($879)|0);
               HEAP8[$892>>0] = $890;
               $893 = $869 & $198;
               $894 = $893 << $756;
               $895 = $893 >> $$0334$i;
               $$0$i33$i = $755 ? $894 : $895;
               $896 = ($$0$i33$i>>>0)<(256);
               if (!($896)) {
                label = 288;
                break L304;
               }
               if (!($757)) {
                label = 290;
                break L304;
               }
               $897 = $$0$i33$i >>> $758;
               $898 = HEAP32[$759>>2]|0;
               $899 = Math_imul($898, $897)|0;
               $900 = HEAP32[$760>>2]|0;
               $901 = $899 >> $900;
               $902 = $901&255;
               $903 = (($$3326220$i) + 3)|0;
               $904 = (($239) + ($891)|0);
               HEAP8[$904>>0] = $902;
               if ($217) {
                $905 = $869 & $200;
                $906 = $905 << $762;
                $907 = $905 >> $$0333$i;
                $$0$i2$i = $761 ? $906 : $907;
                $908 = ($$0$i2$i>>>0)<(256);
                if (!($908)) {
                 label = 293;
                 break L304;
                }
                if (!($763)) {
                 label = 295;
                 break L304;
                }
                $909 = $$0$i2$i >>> $764;
                $910 = HEAP32[$765>>2]|0;
                $911 = Math_imul($910, $909)|0;
                $912 = HEAP32[$766>>2]|0;
                $913 = $911 >> $912;
                $915 = $913;
               } else {
                $915 = 255;
               }
               $914 = $915 | $$2321221$i;
               if ($741) {
                $916 = (($$3326220$i) + 4)|0;
                $917 = (($239) + ($903)|0);
                $918 = $915&255;
                HEAP8[$917>>0] = $918;
                $$4327$i = $916;
               } else {
                $$4327$i = $903;
               }
               $919 = (($$4358219$i) + 1)|0;
               $920 = HEAP32[$0>>2]|0;
               $921 = ($919|0)<($920|0);
               if ($921) {
                $$2321221$i = $914;$$3326220$i = $$4327$i;$$4358219$i = $919;
               } else {
                $$3$i = $914;$$5328$i = $$4327$i;
                break;
               }
              }
             }
            } while(0);
            $922 = HEAP32[$734>>2]|0;
            $923 = ($922|0)==(0|0);
            do {
             if ($923) {
              $$pre$i$i77 = HEAP32[$19>>2]|0;
              $935 = $$pre$i$i77;
              label = 304;
             } else {
              $924 = HEAP32[$22>>2]|0;
              $925 = HEAP32[$19>>2]|0;
              $926 = $924;
              $927 = (($926) - ($925))|0;
              $928 = ($929|0)>($927|0);
              $930 = $925;
              if (!($928)) {
               $935 = $930;
               label = 304;
               break;
              }
              HEAP32[$19>>2] = $924;
              $931 = HEAP32[$767>>2]|0;
              $932 = HEAP32[$736>>2]|0;
              $933 = (($929) - ($927))|0;
              ftCall_vii($931|0,$932,$933);
             }
            } while(0);
            if ((label|0) == 304) {
             label = 0;
             $934 = (($935) + ($929)|0);
             HEAP32[$19>>2] = $934;
            }
            $936 = (($$2365233$i) + 1)|0;
            $937 = HEAP32[$189>>2]|0;
            $938 = ($936|0)<($937|0);
            if ($938) {
             $$0319235$i = $$3$i;$$0323234$i = $$5328$i;$$2365233$i = $936;
            } else {
             $$5$i = $$3$i;$943 = $937;
             break L117;
            }
           }
           if ((label|0) == 280) {
            ___assert_fail((139279|0),(139212|0),5047,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 282) {
            ___assert_fail((139315|0),(139212|0),5049,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 284) {
            ___assert_fail((139279|0),(139212|0),5047,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 286) {
            ___assert_fail((139315|0),(139212|0),5049,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 288) {
            ___assert_fail((139279|0),(139212|0),5047,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 290) {
            ___assert_fail((139315|0),(139212|0),5049,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 293) {
            ___assert_fail((139279|0),(139212|0),5047,(139297|0));
            // unreachable;
           }
           else if ((label|0) == 295) {
            ___assert_fail((139315|0),(139212|0),5049,(139297|0));
            // unreachable;
           }
          }
         } while(0);
         $939 = ($$$i|0)==(4);
         $940 = ($$5$i|0)==(0);
         $or$cond16$i = $939 & $940;
         do {
          if ($or$cond16$i) {
           $941 = HEAP32[$0>>2]|0;
           $942 = $943 << 2;
           $944 = Math_imul($942, $941)|0;
           $945 = (($944) + -1)|0;
           $946 = ($945|0)>(-1);
           if (!($946)) {
            break;
           }
           $$5359190$i = $945;
           while(1) {
            $947 = (($239) + ($$5359190$i)|0);
            HEAP8[$947>>0] = -1;
            $948 = (($$5359190$i) + -4)|0;
            $949 = ($$5359190$i|0)>(3);
            if ($949) {
             $$5359190$i = $948;
            } else {
             break;
            }
           }
          }
         } while(0);
         $950 = ($943|0)>(1);
         $or$cond265$i = $191 & $950;
         do {
          if ($or$cond265$i) {
           $951 = HEAP32[$0>>2]|0;
           $952 = Math_imul($951, $$$i)|0;
           $953 = ($952|0)>(0);
           $954 = $943 >>> 1;
           if (!($953)) {
            break;
           }
           $$3366187$us$i = 0;
           while(1) {
            $955 = Math_imul($$3366187$us$i, $952)|0;
            $956 = (($239) + ($955)|0);
            $957 = $$3366187$us$i ^ -1;
            $958 = (($943) + ($957))|0;
            $959 = Math_imul($958, $952)|0;
            $960 = (($239) + ($959)|0);
            $$6360186$us$i = 0;
            while(1) {
             $961 = (($956) + ($$6360186$us$i)|0);
             $962 = HEAP8[$961>>0]|0;
             $963 = (($960) + ($$6360186$us$i)|0);
             $964 = HEAP8[$963>>0]|0;
             HEAP8[$961>>0] = $964;
             HEAP8[$963>>0] = $962;
             $965 = (($$6360186$us$i) + 1)|0;
             $exitcond$i = ($965|0)==($952|0);
             if ($exitcond$i) {
              break;
             } else {
              $$6360186$us$i = $965;
             }
            }
            $966 = (($$3366187$us$i) + 1)|0;
            $967 = ($966>>>0)<($954>>>0);
            if ($967) {
             $$3366187$us$i = $966;
            } else {
             break;
            }
           }
          }
         } while(0);
         $968 = ($$$i|0)==($4|0);
         $or$cond$i = $220 | $968;
         if ($or$cond$i) {
          $$0318$i = $239;
         } else {
          $969 = HEAP32[$0>>2]|0;
          $970 = (_stbi__convert_format($239,$$$i,$4,$969,$943)|0);
          $971 = ($970|0)==(0|0);
          if ($971) {
           $$2$i = 0;
           break;
          } else {
           $$0318$i = $970;
          }
         }
         $972 = HEAP32[$0>>2]|0;
         HEAP32[$1>>2] = $972;
         $973 = HEAP32[$189>>2]|0;
         HEAP32[$2>>2] = $973;
         $974 = ($3|0)==(0|0);
         if ($974) {
          $$2$i = $$0318$i;
          break;
         }
         $975 = HEAP32[$219>>2]|0;
         HEAP32[$3>>2] = $975;
         $$2$i = $$0318$i;
        }
       }
      }
     } while(0);
     $$0 = $$2$i;
     STACKTOP = sp;return ($$0|0);
    } else {
     label = 66;
    }
   } else {
    label = 66;
   }
  }
 } while(0);
 if ((label|0) == 66) {
  $179 = HEAP32[$17>>2]|0;
  HEAP32[$19>>2] = $179;
  $180 = HEAP32[$20>>2]|0;
  HEAP32[$22>>2] = $180;
 }
 $976 = (_stbi__gif_test($0)|0);
 $977 = ($976|0)==(0);
 if (!($977)) {
  _memset(($7|0),0,34904)|0;
  $978 = (_stbi__gif_load_next($0,$7,$3,0)|0);
  $979 = ($978|0)==($0|0);
  $spec$store$select$i = $979 ? 0 : $978;
  $980 = ($spec$store$select$i|0)==(0|0);
  if ($980) {
   $$0$i = 0;
  } else {
   $981 = HEAP32[$7>>2]|0;
   HEAP32[$1>>2] = $981;
   $982 = ((($7)) + 4|0);
   $983 = HEAP32[$982>>2]|0;
   HEAP32[$2>>2] = $983;
   $984 = $4 | 4;
   $985 = ($984|0)==(4);
   if ($985) {
    $$0$i = $spec$store$select$i;
   } else {
    $986 = (_stbi__convert_format($spec$store$select$i,4,$4,$981,$983)|0);
    $$0$i = $986;
   }
  }
  $987 = ((($7)) + 16|0);
  $988 = HEAP32[$987>>2]|0;
  _free($988);
  $989 = ((($7)) + 12|0);
  $990 = HEAP32[$989>>2]|0;
  _free($990);
  $$0 = $$0$i;
  STACKTOP = sp;return ($$0|0);
 }
 $991 = (_stbi__get32be($0)|0);
 $992 = ($991|0)==(943870035);
 $993 = HEAP32[$17>>2]|0;
 HEAP32[$19>>2] = $993;
 $994 = HEAP32[$20>>2]|0;
 HEAP32[$22>>2] = $994;
 if ($992) {
  $995 = (_stbi__get32be($0)|0);
  $996 = ($995|0)==(943870035);
  if (!($996)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $997 = HEAP32[$19>>2]|0;
  $998 = HEAP32[$22>>2]|0;
  $999 = ($997>>>0)<($998>>>0);
  if ($999) {
   $1000 = ((($997)) + 1|0);
   HEAP32[$19>>2] = $1000;
   $1001 = HEAP8[$997>>0]|0;
   $$0$i$i$i85 = $1001;$$in$i84 = $1000;$1019 = $998;
  } else {
   $1002 = ((($0)) + 32|0);
   $1003 = HEAP32[$1002>>2]|0;
   $1004 = ($1003|0)==(0);
   if ($1004) {
    $$0$i$i$i85 = 0;$$in$i84 = $997;$1019 = $998;
   } else {
    $1005 = ((($0)) + 16|0);
    $1006 = HEAP32[$1005>>2]|0;
    $1007 = ((($0)) + 28|0);
    $1008 = HEAP32[$1007>>2]|0;
    $1009 = ((($0)) + 40|0);
    $1010 = ((($0)) + 36|0);
    $1011 = HEAP32[$1010>>2]|0;
    $1012 = (ftCall_iiii($1006|0,$1008,$1009,$1011)|0);
    $1013 = ($1012|0)==(0);
    if ($1013) {
     HEAP32[$1002>>2] = 0;
     $1014 = ((($0)) + 41|0);
     HEAP8[$1009>>0] = 0;
     $$pre$phi$i$i$i81Z2D = $1014;$$sink$i$i$i$i82 = $1014;$3035 = 0;
    } else {
     $1015 = (((($0)) + 40|0) + ($1012)|0);
     $$pre$i$i$i79 = HEAP8[$1009>>0]|0;
     $$pre5$i$i$i80 = ((($0)) + 41|0);
     $$pre$phi$i$i$i81Z2D = $$pre5$i$i$i80;$$sink$i$i$i$i82 = $1015;$3035 = $$pre$i$i$i79;
    }
    HEAP32[$22>>2] = $$sink$i$i$i$i82;
    HEAP32[$19>>2] = $$pre$phi$i$i$i81Z2D;
    $$0$i$i$i85 = $3035;$$in$i84 = $$pre$phi$i$i$i81Z2D;$1019 = $$sink$i$i$i$i82;
   }
  }
  $1016 = $$0$i$i$i85&255;
  $1017 = $1016 << 8;
  $1018 = ($$in$i84>>>0)<($1019>>>0);
  if ($1018) {
   $1020 = ((($$in$i84)) + 1|0);
   HEAP32[$19>>2] = $1020;
   $1021 = HEAP8[$$in$i84>>0]|0;
   $$0$i8$i$i91 = $1021;$$pre$i$i90 = $1020;$1044 = $1019;
  } else {
   $1022 = ((($0)) + 32|0);
   $1023 = HEAP32[$1022>>2]|0;
   $1024 = ($1023|0)==(0);
   if ($1024) {
    $$0$i8$i$i91 = 0;$$pre$i$i90 = $$in$i84;$1044 = $1019;
   } else {
    $1025 = ((($0)) + 16|0);
    $1026 = HEAP32[$1025>>2]|0;
    $1027 = ((($0)) + 28|0);
    $1028 = HEAP32[$1027>>2]|0;
    $1029 = ((($0)) + 40|0);
    $1030 = ((($0)) + 36|0);
    $1031 = HEAP32[$1030>>2]|0;
    $1032 = (ftCall_iiii($1026|0,$1028,$1029,$1031)|0);
    $1033 = ($1032|0)==(0);
    if ($1033) {
     HEAP32[$1022>>2] = 0;
     $1034 = ((($0)) + 41|0);
     HEAP8[$1029>>0] = 0;
     $$pre$phi$i5$i$iZ2D = $1034;$$sink$i$i6$i$i88 = $1034;$3036 = 0;
    } else {
     $1035 = (((($0)) + 40|0) + ($1032)|0);
     $$pre$i3$i$i87 = HEAP8[$1029>>0]|0;
     $$pre5$i4$i$i = ((($0)) + 41|0);
     $$pre$phi$i5$i$iZ2D = $$pre5$i4$i$i;$$sink$i$i6$i$i88 = $1035;$3036 = $$pre$i3$i$i87;
    }
    HEAP32[$22>>2] = $$sink$i$i6$i$i88;
    HEAP32[$19>>2] = $$pre$phi$i5$i$iZ2D;
    $$0$i8$i$i91 = $3036;$$pre$i$i90 = $$pre$phi$i5$i$iZ2D;$1044 = $$sink$i$i6$i$i88;
   }
  }
  $1036 = $$pre$i$i90;
  $1037 = $$0$i8$i$i91&255;
  $1038 = $1017 | $1037;
  $1039 = ($1038|0)==(1);
  if (!($1039)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1040 = ((($0)) + 16|0);
  $1041 = HEAP32[$1040>>2]|0;
  $1042 = ($1041|0)==(0|0);
  if ($1042) {
   label = 347;
  } else {
   $1043 = $1044;
   $1045 = (($1043) - ($1036))|0;
   $1046 = ($1045|0)<(6);
   if ($1046) {
    HEAP32[$19>>2] = $1044;
    $1047 = ((($0)) + 20|0);
    $1048 = HEAP32[$1047>>2]|0;
    $1049 = ((($0)) + 28|0);
    $1050 = HEAP32[$1049>>2]|0;
    $1051 = (6 - ($1045))|0;
    ftCall_vii($1048|0,$1050,$1051);
    $$pre$i92 = HEAP32[$19>>2]|0;
    $$pre409$i = HEAP32[$22>>2]|0;
    $1054 = $$pre$i92;$1055 = $$pre409$i;
   } else {
    label = 347;
   }
  }
  if ((label|0) == 347) {
   $1052 = ((($$pre$i$i90)) + 6|0);
   HEAP32[$19>>2] = $1052;
   $1054 = $1052;$1055 = $1044;
  }
  $1053 = ($1054>>>0)<($1055>>>0);
  if ($1053) {
   $1056 = ((($1054)) + 1|0);
   HEAP32[$19>>2] = $1056;
   $1057 = HEAP8[$1054>>0]|0;
   $$0$i$i244$i = $1057;$1074 = $1056;$1075 = $1055;
  } else {
   $1058 = ((($0)) + 32|0);
   $1059 = HEAP32[$1058>>2]|0;
   $1060 = ($1059|0)==(0);
   if ($1060) {
    $$0$i$i244$i = 0;$1074 = $1054;$1075 = $1055;
   } else {
    $1061 = HEAP32[$1040>>2]|0;
    $1062 = ((($0)) + 28|0);
    $1063 = HEAP32[$1062>>2]|0;
    $1064 = ((($0)) + 40|0);
    $1065 = ((($0)) + 36|0);
    $1066 = HEAP32[$1065>>2]|0;
    $1067 = (ftCall_iiii($1061|0,$1063,$1064,$1066)|0);
    $1068 = ($1067|0)==(0);
    if ($1068) {
     HEAP32[$1058>>2] = 0;
     $1069 = ((($0)) + 41|0);
     HEAP8[$1064>>0] = 0;
     $$pre$phi$i$i241$iZ2D = $1069;$$sink$i$i$i242$i = $1069;$3037 = 0;
    } else {
     $1070 = (((($0)) + 40|0) + ($1067)|0);
     $$pre$i$i239$i = HEAP8[$1064>>0]|0;
     $$pre5$i$i240$i = ((($0)) + 41|0);
     $$pre$phi$i$i241$iZ2D = $$pre5$i$i240$i;$$sink$i$i$i242$i = $1070;$3037 = $$pre$i$i239$i;
    }
    HEAP32[$22>>2] = $$sink$i$i$i242$i;
    HEAP32[$19>>2] = $$pre$phi$i$i241$iZ2D;
    $$0$i$i244$i = $3037;$1074 = $$pre$phi$i$i241$iZ2D;$1075 = $$sink$i$i$i242$i;
   }
  }
  $1071 = $$0$i$i244$i&255;
  $1072 = $1071 << 8;
  $1073 = ($1074>>>0)<($1075>>>0);
  if ($1073) {
   $1076 = ((($1074)) + 1|0);
   HEAP32[$19>>2] = $1076;
   $1077 = HEAP8[$1074>>0]|0;
   $$0$i8$i251$i = $1077;
  } else {
   $1078 = ((($0)) + 32|0);
   $1079 = HEAP32[$1078>>2]|0;
   $1080 = ($1079|0)==(0);
   if ($1080) {
    $$0$i8$i251$i = 0;
   } else {
    $1081 = HEAP32[$1040>>2]|0;
    $1082 = ((($0)) + 28|0);
    $1083 = HEAP32[$1082>>2]|0;
    $1084 = ((($0)) + 40|0);
    $1085 = ((($0)) + 36|0);
    $1086 = HEAP32[$1085>>2]|0;
    $1087 = (ftCall_iiii($1081|0,$1083,$1084,$1086)|0);
    $1088 = ($1087|0)==(0);
    if ($1088) {
     HEAP32[$1078>>2] = 0;
     $1089 = ((($0)) + 41|0);
     HEAP8[$1084>>0] = 0;
     $$pre$phi$i5$i248$iZ2D = $1089;$$sink$i$i6$i249$i = $1089;$3038 = 0;
    } else {
     $1090 = (((($0)) + 40|0) + ($1087)|0);
     $$pre$i3$i246$i = HEAP8[$1084>>0]|0;
     $$pre5$i4$i247$i = ((($0)) + 41|0);
     $$pre$phi$i5$i248$iZ2D = $$pre5$i4$i247$i;$$sink$i$i6$i249$i = $1090;$3038 = $$pre$i3$i246$i;
    }
    HEAP32[$22>>2] = $$sink$i$i6$i249$i;
    HEAP32[$19>>2] = $$pre$phi$i5$i248$iZ2D;
    $$0$i8$i251$i = $3038;
   }
  }
  $1091 = $$0$i8$i251$i&255;
  $1092 = $1072 | $1091;
  $1093 = ($1092>>>0)>(16);
  if ($1093) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1094 = (_stbi__get32be($0)|0);
  $1095 = (_stbi__get32be($0)|0);
  $1096 = HEAP32[$19>>2]|0;
  $1097 = HEAP32[$22>>2]|0;
  $1098 = ($1096>>>0)<($1097>>>0);
  if ($1098) {
   $1099 = ((($1096)) + 1|0);
   HEAP32[$19>>2] = $1099;
   $1100 = HEAP8[$1096>>0]|0;
   $$0$i$i258$i = $1100;$1117 = $1099;$1118 = $1097;
  } else {
   $1101 = ((($0)) + 32|0);
   $1102 = HEAP32[$1101>>2]|0;
   $1103 = ($1102|0)==(0);
   if ($1103) {
    $$0$i$i258$i = 0;$1117 = $1096;$1118 = $1097;
   } else {
    $1104 = HEAP32[$1040>>2]|0;
    $1105 = ((($0)) + 28|0);
    $1106 = HEAP32[$1105>>2]|0;
    $1107 = ((($0)) + 40|0);
    $1108 = ((($0)) + 36|0);
    $1109 = HEAP32[$1108>>2]|0;
    $1110 = (ftCall_iiii($1104|0,$1106,$1107,$1109)|0);
    $1111 = ($1110|0)==(0);
    if ($1111) {
     HEAP32[$1101>>2] = 0;
     $1112 = ((($0)) + 41|0);
     HEAP8[$1107>>0] = 0;
     $$pre$phi$i$i255$iZ2D = $1112;$$sink$i$i$i256$i = $1112;$3039 = 0;
    } else {
     $1113 = (((($0)) + 40|0) + ($1110)|0);
     $$pre$i$i253$i = HEAP8[$1107>>0]|0;
     $$pre5$i$i254$i = ((($0)) + 41|0);
     $$pre$phi$i$i255$iZ2D = $$pre5$i$i254$i;$$sink$i$i$i256$i = $1113;$3039 = $$pre$i$i253$i;
    }
    HEAP32[$22>>2] = $$sink$i$i$i256$i;
    HEAP32[$19>>2] = $$pre$phi$i$i255$iZ2D;
    $$0$i$i258$i = $3039;$1117 = $$pre$phi$i$i255$iZ2D;$1118 = $$sink$i$i$i256$i;
   }
  }
  $1114 = $$0$i$i258$i&255;
  $1115 = $1114 << 8;
  $1116 = ($1117>>>0)<($1118>>>0);
  if ($1116) {
   $1119 = ((($1117)) + 1|0);
   HEAP32[$19>>2] = $1119;
   $1120 = HEAP8[$1117>>0]|0;
   $$0$i8$i265$i = $1120;$1137 = $1119;$1138 = $1118;
  } else {
   $1121 = ((($0)) + 32|0);
   $1122 = HEAP32[$1121>>2]|0;
   $1123 = ($1122|0)==(0);
   if ($1123) {
    $$0$i8$i265$i = 0;$1137 = $1117;$1138 = $1118;
   } else {
    $1124 = HEAP32[$1040>>2]|0;
    $1125 = ((($0)) + 28|0);
    $1126 = HEAP32[$1125>>2]|0;
    $1127 = ((($0)) + 40|0);
    $1128 = ((($0)) + 36|0);
    $1129 = HEAP32[$1128>>2]|0;
    $1130 = (ftCall_iiii($1124|0,$1126,$1127,$1129)|0);
    $1131 = ($1130|0)==(0);
    if ($1131) {
     HEAP32[$1121>>2] = 0;
     $1132 = ((($0)) + 41|0);
     HEAP8[$1127>>0] = 0;
     $$pre$phi$i5$i262$iZ2D = $1132;$$sink$i$i6$i263$i = $1132;$3040 = 0;
    } else {
     $1133 = (((($0)) + 40|0) + ($1130)|0);
     $$pre$i3$i260$i = HEAP8[$1127>>0]|0;
     $$pre5$i4$i261$i = ((($0)) + 41|0);
     $$pre$phi$i5$i262$iZ2D = $$pre5$i4$i261$i;$$sink$i$i6$i263$i = $1133;$3040 = $$pre$i3$i260$i;
    }
    HEAP32[$22>>2] = $$sink$i$i6$i263$i;
    HEAP32[$19>>2] = $$pre$phi$i5$i262$iZ2D;
    $$0$i8$i265$i = $3040;$1137 = $$pre$phi$i5$i262$iZ2D;$1138 = $$sink$i$i6$i263$i;
   }
  }
  $1134 = $$0$i8$i265$i&255;
  $1135 = $1115 | $1134;
  $trunc$i = $1135&65535;
  switch ($trunc$i<<16>>16) {
  case 8: case 16:  {
   break;
  }
  default: {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  }
  $1136 = ($1137>>>0)<($1138>>>0);
  if ($1136) {
   $1139 = ((($1137)) + 1|0);
   HEAP32[$19>>2] = $1139;
   $1140 = HEAP8[$1137>>0]|0;
   $$0$i$i272$i = $1140;$1157 = $1139;$1158 = $1138;
  } else {
   $1141 = ((($0)) + 32|0);
   $1142 = HEAP32[$1141>>2]|0;
   $1143 = ($1142|0)==(0);
   if ($1143) {
    $$0$i$i272$i = 0;$1157 = $1137;$1158 = $1138;
   } else {
    $1144 = HEAP32[$1040>>2]|0;
    $1145 = ((($0)) + 28|0);
    $1146 = HEAP32[$1145>>2]|0;
    $1147 = ((($0)) + 40|0);
    $1148 = ((($0)) + 36|0);
    $1149 = HEAP32[$1148>>2]|0;
    $1150 = (ftCall_iiii($1144|0,$1146,$1147,$1149)|0);
    $1151 = ($1150|0)==(0);
    if ($1151) {
     HEAP32[$1141>>2] = 0;
     $1152 = ((($0)) + 41|0);
     HEAP8[$1147>>0] = 0;
     $$pre$phi$i$i269$iZ2D = $1152;$$sink$i$i$i270$i = $1152;$3041 = 0;
    } else {
     $1153 = (((($0)) + 40|0) + ($1150)|0);
     $$pre$i$i267$i = HEAP8[$1147>>0]|0;
     $$pre5$i$i268$i = ((($0)) + 41|0);
     $$pre$phi$i$i269$iZ2D = $$pre5$i$i268$i;$$sink$i$i$i270$i = $1153;$3041 = $$pre$i$i267$i;
    }
    HEAP32[$22>>2] = $$sink$i$i$i270$i;
    HEAP32[$19>>2] = $$pre$phi$i$i269$iZ2D;
    $$0$i$i272$i = $3041;$1157 = $$pre$phi$i$i269$iZ2D;$1158 = $$sink$i$i$i270$i;
   }
  }
  $1154 = $$0$i$i272$i&255;
  $1155 = $1154 << 8;
  $1156 = ($1157>>>0)<($1158>>>0);
  if ($1156) {
   $1159 = ((($1157)) + 1|0);
   HEAP32[$19>>2] = $1159;
   $1160 = HEAP8[$1157>>0]|0;
   $$0$i8$i279$i = $1160;
  } else {
   $1161 = ((($0)) + 32|0);
   $1162 = HEAP32[$1161>>2]|0;
   $1163 = ($1162|0)==(0);
   if ($1163) {
    $$0$i8$i279$i = 0;
   } else {
    $1164 = HEAP32[$1040>>2]|0;
    $1165 = ((($0)) + 28|0);
    $1166 = HEAP32[$1165>>2]|0;
    $1167 = ((($0)) + 40|0);
    $1168 = ((($0)) + 36|0);
    $1169 = HEAP32[$1168>>2]|0;
    $1170 = (ftCall_iiii($1164|0,$1166,$1167,$1169)|0);
    $1171 = ($1170|0)==(0);
    if ($1171) {
     HEAP32[$1161>>2] = 0;
     $1172 = ((($0)) + 41|0);
     HEAP8[$1167>>0] = 0;
     $$pre$phi$i5$i276$iZ2D = $1172;$$sink$i$i6$i277$i = $1172;$3042 = 0;
    } else {
     $1173 = (((($0)) + 40|0) + ($1170)|0);
     $$pre$i3$i274$i = HEAP8[$1167>>0]|0;
     $$pre5$i4$i275$i = ((($0)) + 41|0);
     $$pre$phi$i5$i276$iZ2D = $$pre5$i4$i275$i;$$sink$i$i6$i277$i = $1173;$3042 = $$pre$i3$i274$i;
    }
    HEAP32[$22>>2] = $$sink$i$i6$i277$i;
    HEAP32[$19>>2] = $$pre$phi$i5$i276$iZ2D;
    $$0$i8$i279$i = $3042;
   }
  }
  $1174 = $$0$i8$i279$i&255;
  $1175 = $1155 | $1174;
  $1176 = ($1175|0)==(3);
  if (!($1176)) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1177 = (_stbi__get32be($0)|0);
  $1178 = ($1177|0)<(0);
  L538: do {
   if ($1178) {
    $1179 = HEAP32[$22>>2]|0;
    HEAP32[$19>>2] = $1179;
   } else {
    $1180 = HEAP32[$1040>>2]|0;
    $1181 = ($1180|0)==(0|0);
    do {
     if ($1181) {
      $$pre$i282$i = HEAP32[$19>>2]|0;
      $1194 = $$pre$i282$i;
     } else {
      $1182 = HEAP32[$22>>2]|0;
      $1183 = HEAP32[$19>>2]|0;
      $1184 = $1182;
      $1185 = (($1184) - ($1183))|0;
      $1186 = ($1177|0)>($1185|0);
      $1187 = $1183;
      if (!($1186)) {
       $1194 = $1187;
       break;
      }
      HEAP32[$19>>2] = $1182;
      $1188 = ((($0)) + 20|0);
      $1189 = HEAP32[$1188>>2]|0;
      $1190 = ((($0)) + 28|0);
      $1191 = HEAP32[$1190>>2]|0;
      $1192 = (($1177) - ($1185))|0;
      ftCall_vii($1189|0,$1191,$1192);
      break L538;
     }
    } while(0);
    $1193 = (($1194) + ($1177)|0);
    HEAP32[$19>>2] = $1193;
   }
  } while(0);
  $1195 = (_stbi__get32be($0)|0);
  $1196 = ($1195|0)<(0);
  L547: do {
   if ($1196) {
    $1197 = HEAP32[$22>>2]|0;
    HEAP32[$19>>2] = $1197;
   } else {
    $1198 = HEAP32[$1040>>2]|0;
    $1199 = ($1198|0)==(0|0);
    do {
     if ($1199) {
      $$pre$i288$i = HEAP32[$19>>2]|0;
      $1212 = $$pre$i288$i;
     } else {
      $1200 = HEAP32[$22>>2]|0;
      $1201 = HEAP32[$19>>2]|0;
      $1202 = $1200;
      $1203 = (($1202) - ($1201))|0;
      $1204 = ($1195|0)>($1203|0);
      $1205 = $1201;
      if (!($1204)) {
       $1212 = $1205;
       break;
      }
      HEAP32[$19>>2] = $1200;
      $1206 = ((($0)) + 20|0);
      $1207 = HEAP32[$1206>>2]|0;
      $1208 = ((($0)) + 28|0);
      $1209 = HEAP32[$1208>>2]|0;
      $1210 = (($1195) - ($1203))|0;
      ftCall_vii($1207|0,$1209,$1210);
      break L547;
     }
    } while(0);
    $1211 = (($1212) + ($1195)|0);
    HEAP32[$19>>2] = $1211;
   }
  } while(0);
  $1213 = (_stbi__get32be($0)|0);
  $1214 = ($1213|0)<(0);
  L556: do {
   if ($1214) {
    $1215 = HEAP32[$22>>2]|0;
    HEAP32[$19>>2] = $1215;
    $1216 = $1215;
    $$pre$i331413$i = $1216;$3043 = $1215;
   } else {
    $1217 = HEAP32[$1040>>2]|0;
    $1218 = ($1217|0)==(0|0);
    do {
     if ($1218) {
      $$pre$i294$i = HEAP32[$19>>2]|0;
      $1232 = $$pre$i294$i;
     } else {
      $1219 = HEAP32[$22>>2]|0;
      $1220 = HEAP32[$19>>2]|0;
      $1221 = $1219;
      $1222 = (($1221) - ($1220))|0;
      $1223 = ($1213|0)>($1222|0);
      $1224 = $1220;
      if (!($1223)) {
       $1232 = $1224;
       break;
      }
      HEAP32[$19>>2] = $1219;
      $1225 = ((($0)) + 20|0);
      $1226 = HEAP32[$1225>>2]|0;
      $1227 = ((($0)) + 28|0);
      $1228 = HEAP32[$1227>>2]|0;
      $1229 = (($1213) - ($1222))|0;
      ftCall_vii($1226|0,$1228,$1229);
      $$pre410$i = HEAP32[$19>>2]|0;
      $1230 = $$pre410$i;
      $$pre$i331413$i = $$pre410$i;$3043 = $1230;
      break L556;
     }
    } while(0);
    $1231 = (($1232) + ($1213)|0);
    HEAP32[$19>>2] = $1231;
    $1233 = $1231;
    $$pre$i331413$i = $1231;$3043 = $1233;
   }
  } while(0);
  $1234 = HEAP32[$22>>2]|0;
  $1235 = ($$pre$i331413$i>>>0)<($1234>>>0);
  $1236 = $1234;
  do {
   if ($1235) {
    $1237 = ((($$pre$i331413$i)) + 1|0);
    HEAP32[$19>>2] = $1237;
    $1238 = HEAP8[$$pre$i331413$i>>0]|0;
    $1239 = $1237;
    $$0$i$i304$i = $1238;$$pre$i331412$i = $1237;$1258 = $1234;$3044 = $1236;$3045 = $1239;
   } else {
    $1240 = ((($0)) + 32|0);
    $1241 = HEAP32[$1240>>2]|0;
    $1242 = ($1241|0)==(0);
    if ($1242) {
     $$0$i$i304$i = 0;$$pre$i331412$i = $$pre$i331413$i;$1258 = $1234;$3044 = $1236;$3045 = $3043;
     break;
    }
    $1243 = HEAP32[$1040>>2]|0;
    $1244 = ((($0)) + 28|0);
    $1245 = HEAP32[$1244>>2]|0;
    $1246 = ((($0)) + 40|0);
    $1247 = ((($0)) + 36|0);
    $1248 = HEAP32[$1247>>2]|0;
    $1249 = (ftCall_iiii($1243|0,$1245,$1246,$1248)|0);
    $1250 = ($1249|0)==(0);
    if ($1250) {
     HEAP32[$1240>>2] = 0;
     $1251 = ((($0)) + 41|0);
     HEAP8[$1246>>0] = 0;
     $$pre$phi$i$i301$iZ2D = $1251;$$sink$i$i$i302$i = $1251;$3046 = 0;
    } else {
     $1252 = (((($0)) + 40|0) + ($1249)|0);
     $$pre$i$i299$i = HEAP8[$1246>>0]|0;
     $$pre5$i$i300$i = ((($0)) + 41|0);
     $$pre$phi$i$i301$iZ2D = $$pre5$i$i300$i;$$sink$i$i$i302$i = $1252;$3046 = $$pre$i$i299$i;
    }
    HEAP32[$22>>2] = $$sink$i$i$i302$i;
    HEAP32[$19>>2] = $$pre$phi$i$i301$iZ2D;
    $1253 = $$pre$phi$i$i301$iZ2D;
    $1254 = $$sink$i$i$i302$i;
    $$0$i$i304$i = $3046;$$pre$i331412$i = $$pre$phi$i$i301$iZ2D;$1258 = $$sink$i$i$i302$i;$3044 = $1254;$3045 = $1253;
   }
  } while(0);
  $1255 = $$0$i$i304$i&255;
  $1256 = $1255 << 8;
  $1257 = ($$pre$i331412$i>>>0)<($1258>>>0);
  do {
   if ($1257) {
    $1259 = ((($$pre$i331412$i)) + 1|0);
    HEAP32[$19>>2] = $1259;
    $1260 = HEAP8[$$pre$i331412$i>>0]|0;
    $1261 = $1259;
    $$0$i8$i311$i = $1260;$$pre$i331$i = $1259;$1306 = $3044;$1310 = $1258;$1312 = $1261;
   } else {
    $1262 = ((($0)) + 32|0);
    $1263 = HEAP32[$1262>>2]|0;
    $1264 = ($1263|0)==(0);
    if ($1264) {
     $$0$i8$i311$i = 0;$$pre$i331$i = $$pre$i331412$i;$1306 = $3044;$1310 = $1258;$1312 = $3045;
     break;
    }
    $1265 = HEAP32[$1040>>2]|0;
    $1266 = ((($0)) + 28|0);
    $1267 = HEAP32[$1266>>2]|0;
    $1268 = ((($0)) + 40|0);
    $1269 = ((($0)) + 36|0);
    $1270 = HEAP32[$1269>>2]|0;
    $1271 = (ftCall_iiii($1265|0,$1267,$1268,$1270)|0);
    $1272 = ($1271|0)==(0);
    if ($1272) {
     HEAP32[$1262>>2] = 0;
     $1273 = ((($0)) + 41|0);
     HEAP8[$1268>>0] = 0;
     $$pre$phi$i5$i308$iZ2D = $1273;$$sink$i$i6$i309$i = $1273;$3047 = 0;
    } else {
     $1274 = (((($0)) + 40|0) + ($1271)|0);
     $$pre$i3$i306$i = HEAP8[$1268>>0]|0;
     $$pre5$i4$i307$i = ((($0)) + 41|0);
     $$pre$phi$i5$i308$iZ2D = $$pre5$i4$i307$i;$$sink$i$i6$i309$i = $1274;$3047 = $$pre$i3$i306$i;
    }
    HEAP32[$22>>2] = $$sink$i$i6$i309$i;
    HEAP32[$19>>2] = $$pre$phi$i5$i308$iZ2D;
    $1275 = $$pre$phi$i5$i308$iZ2D;
    $1276 = $$sink$i$i6$i309$i;
    $$0$i8$i311$i = $3047;$$pre$i331$i = $$pre$phi$i5$i308$iZ2D;$1306 = $1276;$1310 = $$sink$i$i6$i309$i;$1312 = $1275;
   }
  } while(0);
  $1277 = $$0$i8$i311$i&255;
  $1278 = $1256 | $1277;
  $1279 = ($1278>>>0)>(1);
  $1280 = ($1095>>>0)>(536870911);
  $or$cond = $1279 | $1280;
  if ($or$cond) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1281 = $1095 << 2;
  $1282 = $1281 | $1094;
  $1283 = ($1282|0)<(0);
  if ($1283) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1284 = ($1094|0)==(0);
  do {
   if (!($1284)) {
    $1285 = (2147483647 / ($1094|0))&-1;
    $1286 = ($1285|0)<($1281|0);
    if ($1286) {
     $$0 = 0;
    } else {
     break;
    }
    STACKTOP = sp;return ($$0|0);
   }
  } while(0);
  $1287 = ($1278|0)==(0);
  $1288 = ($1135|0)==(16);
  $or$cond5$i = $1288 & $1287;
  $1289 = ($6|0)==(16);
  $or$cond7$i = $1289 & $or$cond5$i;
  if ($or$cond7$i) {
   $1290 = ($1095>>>0)>(268435455);
   do {
    if ($1290) {
     $$0$i315$i = 0;
    } else {
     $1291 = $1095 << 3;
     $1292 = $1291 | $1094;
     $1293 = ($1292|0)<(0);
     if ($1293) {
      $$0$i315$i = 0;
      break;
     }
     if (!($1284)) {
      $1294 = (2147483647 / ($1094|0))&-1;
      $1295 = ($1294|0)<($1291|0);
      if ($1295) {
       $$0$i315$i = 0;
       break;
      }
     }
     $1296 = Math_imul($1291, $1094)|0;
     $1297 = (_malloc($1296)|0);
     $$0$i315$i = $1297;
    }
   } while(0);
   HEAP32[$5>>2] = 16;
   $$0229$i = $$0$i315$i;
  } else {
   $1298 = $1094 << 2;
   $1299 = Math_imul($1298, $1095)|0;
   $1300 = (_malloc($1299)|0);
   $$0229$i = $1300;
  }
  $1301 = ($$0229$i|0)==(0|0);
  if ($1301) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $1302 = Math_imul($1095, $1094)|0;
  L607: do {
   if ($1287) {
    $or$cond9$i = $1289 & $1288;
    $1397 = ($1302|0)>(0);
    $1398 = ((($0)) + 32|0);
    $1399 = ((($0)) + 28|0);
    $1400 = ((($0)) + 40|0);
    $1401 = ((($0)) + 36|0);
    $1402 = ((($0)) + 41|0);
    $$1225388$i = 0;
    while(1) {
     $1403 = ($$1225388$i>>>0)<($1092>>>0);
     L611: do {
      if ($1403) {
       $1413 = HEAP32[$5>>2]|0;
       $1414 = ($1413|0)==(16);
       if ($1414) {
        if (!($1397)) {
         break;
        }
        $1415 = (($$0229$i) + ($$1225388$i<<1)|0);
        $$pre414$i = HEAP32[$19>>2]|0;
        $$pre415$i = HEAP32[$22>>2]|0;
        $$0238385$i = $1415;$$3386$i = 0;$1417 = $$pre414$i;$1418 = $$pre415$i;
        while(1) {
         $1416 = ($1417>>>0)<($1418>>>0);
         do {
          if ($1416) {
           $1419 = ((($1417)) + 1|0);
           HEAP32[$19>>2] = $1419;
           $1420 = HEAP8[$1417>>0]|0;
           $$0$i$i348$i = $1420;$1432 = $1419;$1433 = $1418;
          } else {
           $1421 = HEAP32[$1398>>2]|0;
           $1422 = ($1421|0)==(0);
           if ($1422) {
            $$0$i$i348$i = 0;$1432 = $1417;$1433 = $1418;
            break;
           }
           $1423 = HEAP32[$1040>>2]|0;
           $1424 = HEAP32[$1399>>2]|0;
           $1425 = HEAP32[$1401>>2]|0;
           $1426 = (ftCall_iiii($1423|0,$1424,$1400,$1425)|0);
           $1427 = ($1426|0)==(0);
           if ($1427) {
            HEAP32[$1398>>2] = 0;
            HEAP8[$1400>>0] = 0;
            $$sink$i$i$i346$i = $1402;$3053 = 0;
           } else {
            $1428 = (((($0)) + 40|0) + ($1426)|0);
            $$pre$i$i343$i = HEAP8[$1400>>0]|0;
            $$sink$i$i$i346$i = $1428;$3053 = $$pre$i$i343$i;
           }
           HEAP32[$22>>2] = $$sink$i$i$i346$i;
           HEAP32[$19>>2] = $1402;
           $$0$i$i348$i = $3053;$1432 = $1402;$1433 = $$sink$i$i$i346$i;
          }
         } while(0);
         $1429 = $$0$i$i348$i&255;
         $1430 = $1429 << 8;
         $1431 = ($1432>>>0)<($1433>>>0);
         do {
          if ($1431) {
           $1434 = ((($1432)) + 1|0);
           HEAP32[$19>>2] = $1434;
           $1435 = HEAP8[$1432>>0]|0;
           $$0$i8$i355$i = $1435;$3054 = $1433;$3055 = $1434;
          } else {
           $1436 = HEAP32[$1398>>2]|0;
           $1437 = ($1436|0)==(0);
           if ($1437) {
            $$0$i8$i355$i = 0;$3054 = $1433;$3055 = $1432;
            break;
           }
           $1438 = HEAP32[$1040>>2]|0;
           $1439 = HEAP32[$1399>>2]|0;
           $1440 = HEAP32[$1401>>2]|0;
           $1441 = (ftCall_iiii($1438|0,$1439,$1400,$1440)|0);
           $1442 = ($1441|0)==(0);
           if ($1442) {
            HEAP32[$1398>>2] = 0;
            HEAP8[$1400>>0] = 0;
            $$sink$i$i6$i353$i = $1402;$3056 = 0;
           } else {
            $1443 = (((($0)) + 40|0) + ($1441)|0);
            $$pre$i3$i350$i = HEAP8[$1400>>0]|0;
            $$sink$i$i6$i353$i = $1443;$3056 = $$pre$i3$i350$i;
           }
           HEAP32[$22>>2] = $$sink$i$i6$i353$i;
           HEAP32[$19>>2] = $1402;
           $$0$i8$i355$i = $3056;$3054 = $$sink$i$i6$i353$i;$3055 = $1402;
          }
         } while(0);
         $1444 = $$0$i8$i355$i&255;
         $1445 = $1430 | $1444;
         $1446 = $1445&65535;
         HEAP16[$$0238385$i>>1] = $1446;
         $1447 = (($$3386$i) + 1)|0;
         $1448 = ((($$0238385$i)) + 8|0);
         $exitcond405$i = ($1447|0)==($1302|0);
         if ($exitcond405$i) {
          break L611;
         } else {
          $$0238385$i = $1448;$$3386$i = $1447;$1417 = $3055;$1418 = $3054;
         }
        }
       }
       $1449 = (($$0229$i) + ($$1225388$i)|0);
       if (!($1288)) {
        if (!($1397)) {
         break;
        }
        $$1237379$i = $1449;$$5380$i = 0;
        while(1) {
         $1477 = HEAP32[$19>>2]|0;
         $1478 = HEAP32[$22>>2]|0;
         $1479 = ($1477>>>0)<($1478>>>0);
         do {
          if ($1479) {
           $1480 = ((($1477)) + 1|0);
           HEAP32[$19>>2] = $1480;
           $1481 = HEAP8[$1477>>0]|0;
           $$0$i$i106 = $1481;
          } else {
           $1482 = HEAP32[$1398>>2]|0;
           $1483 = ($1482|0)==(0);
           if ($1483) {
            $$0$i$i106 = 0;
            break;
           }
           $1484 = HEAP32[$1040>>2]|0;
           $1485 = HEAP32[$1399>>2]|0;
           $1486 = HEAP32[$1401>>2]|0;
           $1487 = (ftCall_iiii($1484|0,$1485,$1400,$1486)|0);
           $1488 = ($1487|0)==(0);
           if ($1488) {
            HEAP32[$1398>>2] = 0;
            HEAP8[$1400>>0] = 0;
            $$sink$i$i$i104 = $1402;$3058 = 0;
           } else {
            $1489 = (((($0)) + 40|0) + ($1487)|0);
            $$pre$i313$i = HEAP8[$1400>>0]|0;
            $$sink$i$i$i104 = $1489;$3058 = $$pre$i313$i;
           }
           HEAP32[$22>>2] = $$sink$i$i$i104;
           HEAP32[$19>>2] = $1402;
           $$0$i$i106 = $3058;
          }
         } while(0);
         HEAP8[$$1237379$i>>0] = $$0$i$i106;
         $1490 = (($$5380$i) + 1)|0;
         $1491 = ((($$1237379$i)) + 4|0);
         $exitcond403$i = ($1490|0)==($1302|0);
         if ($exitcond403$i) {
          break L611;
         } else {
          $$1237379$i = $1491;$$5380$i = $1490;
         }
        }
       }
       if (!($1397)) {
        break;
       }
       $$0236382$i = $1449;$$4383$i = 0;
       while(1) {
        $1450 = HEAP32[$19>>2]|0;
        $1451 = HEAP32[$22>>2]|0;
        $1452 = ($1450>>>0)<($1451>>>0);
        do {
         if ($1452) {
          $1453 = ((($1450)) + 1|0);
          HEAP32[$19>>2] = $1453;
          $1454 = HEAP8[$1450>>0]|0;
          $$0$i$i321$i = $1454;$1464 = $1453;$1465 = $1451;
         } else {
          $1455 = HEAP32[$1398>>2]|0;
          $1456 = ($1455|0)==(0);
          if ($1456) {
           $$0$i$i321$i = 0;$1464 = $1450;$1465 = $1451;
           break;
          }
          $1457 = HEAP32[$1040>>2]|0;
          $1458 = HEAP32[$1399>>2]|0;
          $1459 = HEAP32[$1401>>2]|0;
          $1460 = (ftCall_iiii($1457|0,$1458,$1400,$1459)|0);
          $1461 = ($1460|0)==(0);
          if ($1461) {
           HEAP32[$1398>>2] = 0;
           HEAP8[$1400>>0] = 0;
           $$sink$i$i$i319$i = $1402;$3057 = 0;
          } else {
           $1462 = (((($0)) + 40|0) + ($1460)|0);
           $$pre$i$i316$i = HEAP8[$1400>>0]|0;
           $$sink$i$i$i319$i = $1462;$3057 = $$pre$i$i316$i;
          }
          HEAP32[$22>>2] = $$sink$i$i$i319$i;
          HEAP32[$19>>2] = $1402;
          $$0$i$i321$i = $3057;$1464 = $1402;$1465 = $$sink$i$i$i319$i;
         }
        } while(0);
        $1463 = ($1464>>>0)<($1465>>>0);
        do {
         if ($1463) {
          $1466 = ((($1464)) + 1|0);
          $$sink = $1466;
          label = 535;
         } else {
          $1467 = HEAP32[$1398>>2]|0;
          $1468 = ($1467|0)==(0);
          if ($1468) {
           break;
          }
          $1469 = HEAP32[$1040>>2]|0;
          $1470 = HEAP32[$1399>>2]|0;
          $1471 = HEAP32[$1401>>2]|0;
          $1472 = (ftCall_iiii($1469|0,$1470,$1400,$1471)|0);
          $1473 = ($1472|0)==(0);
          if ($1473) {
           HEAP32[$1398>>2] = 0;
           HEAP8[$1400>>0] = 0;
           $$sink$i$i6$i326$i = $1402;
          } else {
           $1474 = (((($0)) + 40|0) + ($1472)|0);
           $$sink$i$i6$i326$i = $1474;
          }
          HEAP32[$22>>2] = $$sink$i$i6$i326$i;
          $$sink = $1402;
          label = 535;
         }
        } while(0);
        if ((label|0) == 535) {
         label = 0;
         HEAP32[$19>>2] = $$sink;
        }
        HEAP8[$$0236382$i>>0] = $$0$i$i321$i;
        $1475 = (($$4383$i) + 1)|0;
        $1476 = ((($$0236382$i)) + 4|0);
        $exitcond404$i = ($1475|0)==($1302|0);
        if ($exitcond404$i) {
         break;
        } else {
         $$0236382$i = $1476;$$4383$i = $1475;
        }
       }
      } else {
       $1404 = ($$1225388$i|0)==(3);
       if ($or$cond9$i) {
        $1405 = $1404 << 31 >> 31;
        if (!($1397)) {
         break;
        }
        $1406 = (($$0229$i) + ($$1225388$i<<1)|0);
        $$0234376$i = $1406;$$1227377$i = 0;
        while(1) {
         HEAP16[$$0234376$i>>1] = $1405;
         $1407 = (($$1227377$i) + 1)|0;
         $1408 = ((($$0234376$i)) + 8|0);
         $exitcond402$i = ($1407|0)==($1302|0);
         if ($exitcond402$i) {
          break;
         } else {
          $$0234376$i = $1408;$$1227377$i = $1407;
         }
        }
       } else {
        $1409 = $1404 << 31 >> 31;
        if (!($1397)) {
         break;
        }
        $1410 = (($$0229$i) + ($$1225388$i)|0);
        $$0235373$i = $1410;$$2228374$i = 0;
        while(1) {
         HEAP8[$$0235373$i>>0] = $1409;
         $1411 = (($$2228374$i) + 1)|0;
         $1412 = ((($$0235373$i)) + 4|0);
         $exitcond401$i = ($1411|0)==($1302|0);
         if ($exitcond401$i) {
          break;
         } else {
          $$0235373$i = $1412;$$2228374$i = $1411;
         }
        }
       }
      }
     } while(0);
     $1492 = (($$1225388$i) + 1)|0;
     $exitcond406$i = ($1492|0)==(4);
     if ($exitcond406$i) {
      break;
     } else {
      $$1225388$i = $1492;
     }
    }
   } else {
    $1303 = Math_imul($1094, $1092)|0;
    $1304 = $1303 << 1;
    $1305 = ($1303|0)<(0);
    L687: do {
     if ($1305) {
      HEAP32[$19>>2] = $1306;
     } else {
      $1307 = HEAP32[$1040>>2]|0;
      $1308 = ($1307|0)==(0|0);
      do {
       if ($1308) {
        $1321 = $$pre$i331$i;
       } else {
        $1309 = $1310;
        $1311 = (($1309) - ($1312))|0;
        $1313 = ($1304|0)>($1311|0);
        $1314 = $1312;
        if (!($1313)) {
         $1321 = $1314;
         break;
        }
        HEAP32[$19>>2] = $1310;
        $1315 = ((($0)) + 20|0);
        $1316 = HEAP32[$1315>>2]|0;
        $1317 = ((($0)) + 28|0);
        $1318 = HEAP32[$1317>>2]|0;
        $1319 = (($1304) - ($1311))|0;
        ftCall_vii($1316|0,$1318,$1319);
        break L687;
       }
      } while(0);
      $1320 = (($1321) + ($1304)|0);
      HEAP32[$19>>2] = $1320;
     }
    } while(0);
    $1322 = ($1302|0)>(0);
    $1323 = ((($0)) + 32|0);
    $1324 = ((($0)) + 28|0);
    $1325 = ((($0)) + 40|0);
    $1326 = ((($0)) + 36|0);
    $1327 = ((($0)) + 41|0);
    $$0224392$i = 0;
    L695: while(1) {
     $1328 = (($$0229$i) + ($$0224392$i)|0);
     $1329 = ($$0224392$i>>>0)<($1092>>>0);
     do {
      if ($1329) {
       if (!($1322)) {
        break;
       }
       $$03564$i$i = $1328;$$03963$i$i = 0;$1353 = $1302;
       while(1) {
        $1334 = HEAP32[$19>>2]|0;
        $1335 = HEAP32[$22>>2]|0;
        $1336 = ($1334>>>0)<($1335>>>0);
        do {
         if ($1336) {
          $1337 = ((($1334)) + 1|0);
          HEAP32[$19>>2] = $1337;
          $1338 = HEAP8[$1334>>0]|0;
          $$0$i$i339$i = $1338;$1373 = $1337;$1374 = $1335;
          label = 462;
         } else {
          $1339 = HEAP32[$1323>>2]|0;
          $1340 = ($1339|0)==(0);
          if ($1340) {
           $1351 = 0;$3048 = $1335;$3049 = $1334;
           label = 464;
           break;
          }
          $1341 = HEAP32[$1040>>2]|0;
          $1342 = HEAP32[$1324>>2]|0;
          $1343 = HEAP32[$1326>>2]|0;
          $1344 = (ftCall_iiii($1341|0,$1342,$1325,$1343)|0);
          $1345 = ($1344|0)==(0);
          if ($1345) {
           HEAP32[$1323>>2] = 0;
           HEAP8[$1325>>0] = 0;
           $$sink$i$i$i337$i = $1327;$3050 = 0;
          } else {
           $1346 = (((($0)) + 40|0) + ($1344)|0);
           $$pre$i$i336$i = HEAP8[$1325>>0]|0;
           $$sink$i$i$i337$i = $1346;$3050 = $$pre$i$i336$i;
          }
          HEAP32[$22>>2] = $$sink$i$i$i337$i;
          HEAP32[$19>>2] = $1327;
          $$0$i$i339$i = $3050;$1373 = $1327;$1374 = $$sink$i$i$i337$i;
          label = 462;
         }
        } while(0);
        do {
         if ((label|0) == 462) {
          label = 0;
          $1347 = $$0$i$i339$i&255;
          $1348 = ($$0$i$i339$i<<24>>24)==(-128);
          if ($1348) {
           $$241$i$i = $$03963$i$i;$$4$i$i = $$03564$i$i;
           break;
          }
          $1349 = ($$0$i$i339$i<<24>>24)>(-1);
          if ($1349) {
           $1351 = $1347;$3048 = $1374;$3049 = $1373;
           label = 464;
           break;
          }
          $1370 = (257 - ($1347))|0;
          $1371 = ($1370|0)>($1353|0);
          if ($1371) {
           break L695;
          }
          $1372 = ($1373>>>0)<($1374>>>0);
          do {
           if ($1372) {
            $1375 = ((($1373)) + 1|0);
            HEAP32[$19>>2] = $1375;
            $1376 = HEAP8[$1373>>0]|0;
            $$0$i54$i$i = $1376;
           } else {
            $1377 = HEAP32[$1323>>2]|0;
            $1378 = ($1377|0)==(0);
            if ($1378) {
             $$0$i54$i$i = 0;
             break;
            }
            $1379 = HEAP32[$1040>>2]|0;
            $1380 = HEAP32[$1324>>2]|0;
            $1381 = HEAP32[$1326>>2]|0;
            $1382 = (ftCall_iiii($1379|0,$1380,$1325,$1381)|0);
            $1383 = ($1382|0)==(0);
            if ($1383) {
             HEAP32[$1323>>2] = 0;
             HEAP8[$1325>>0] = 0;
             $$sink$i$i52$i$i = $1327;$3052 = 0;
            } else {
             $1384 = (((($0)) + 40|0) + ($1382)|0);
             $$pre$i49$i$i = HEAP8[$1325>>0]|0;
             $$sink$i$i52$i$i = $1384;$3052 = $$pre$i49$i$i;
            }
            HEAP32[$22>>2] = $$sink$i$i52$i$i;
            HEAP32[$19>>2] = $1327;
            $$0$i54$i$i = $3052;
           }
          } while(0);
          $1385 = (($1370) + ($$03963$i$i))|0;
          $1386 = ($1370|0)==(0);
          if ($1386) {
           $$241$i$i = $1385;$$4$i$i = $$03564$i$i;
           break;
          }
          $$13460$i$i = $1370;$$23759$i$i = $$03564$i$i;
          while(1) {
           HEAP8[$$23759$i$i>>0] = $$0$i54$i$i;
           $1387 = ((($$23759$i$i)) + 4|0);
           $1388 = (($$13460$i$i) + -1)|0;
           $1389 = ($1388|0)==(0);
           if ($1389) {
            break;
           } else {
            $$13460$i$i = $1388;$$23759$i$i = $1387;
           }
          }
          $1392 = Math_imul($1347, -4)|0;
          $scevgep$i$i = ((($$03564$i$i)) + 1028|0);
          $scevgep72$i$i = (($scevgep$i$i) + ($1392)|0);
          $$241$i$i = $1385;$$4$i$i = $scevgep72$i$i;
         }
        } while(0);
        if ((label|0) == 464) {
         label = 0;
         $1350 = (($1351) + 1)|0;
         $1352 = ($1353|0)>($1351|0);
         if (!($1352)) {
          break L695;
         }
         $$03362$i$i = $1350;$$13661$i$i = $$03564$i$i;$1355 = $3049;$1356 = $3048;
         while(1) {
          $1354 = ($1355>>>0)<($1356>>>0);
          do {
           if ($1354) {
            $1357 = ((($1355)) + 1|0);
            HEAP32[$19>>2] = $1357;
            $1358 = HEAP8[$1355>>0]|0;
            $$0$i47$i$i = $1358;
           } else {
            $1359 = HEAP32[$1323>>2]|0;
            $1360 = ($1359|0)==(0);
            if ($1360) {
             $$0$i47$i$i = 0;
             break;
            }
            $1361 = HEAP32[$1040>>2]|0;
            $1362 = HEAP32[$1324>>2]|0;
            $1363 = HEAP32[$1326>>2]|0;
            $1364 = (ftCall_iiii($1361|0,$1362,$1325,$1363)|0);
            $1365 = ($1364|0)==(0);
            if ($1365) {
             HEAP32[$1323>>2] = 0;
             HEAP8[$1325>>0] = 0;
             $$sink$i$i45$i$i = $1327;$3051 = 0;
            } else {
             $1366 = (((($0)) + 40|0) + ($1364)|0);
             $$pre$i42$i$i = HEAP8[$1325>>0]|0;
             $$sink$i$i45$i$i = $1366;$3051 = $$pre$i42$i$i;
            }
            HEAP32[$22>>2] = $$sink$i$i45$i$i;
            HEAP32[$19>>2] = $1327;
            $$0$i47$i$i = $3051;
           }
          } while(0);
          HEAP8[$$13661$i$i>>0] = $$0$i47$i$i;
          $1367 = (($$03362$i$i) + -1)|0;
          $1368 = ($1367|0)==(0);
          if ($1368) {
           break;
          }
          $1369 = ((($$13661$i$i)) + 4|0);
          $$pre$i341$i = HEAP32[$19>>2]|0;
          $$pre75$i$i = HEAP32[$22>>2]|0;
          $$03362$i$i = $1367;$$13661$i$i = $1369;$1355 = $$pre$i341$i;$1356 = $$pre75$i$i;
         }
         $1390 = (($1350) + ($$03963$i$i))|0;
         $1391 = $1351 << 2;
         $scevgep73$i$i = ((($$03564$i$i)) + 4|0);
         $scevgep74$i$i = (($scevgep73$i$i) + ($1391)|0);
         $$241$i$i = $1390;$$4$i$i = $scevgep74$i$i;
        }
        $1393 = (($1302) - ($$241$i$i))|0;
        $1394 = ($1393|0)>(0);
        if ($1394) {
         $$03564$i$i = $$4$i$i;$$03963$i$i = $$241$i$i;$1353 = $1393;
        } else {
         break;
        }
       }
      } else {
       if (!($1322)) {
        break;
       }
       $1330 = ($$0224392$i|0)==(3);
       $1331 = $1330 << 31 >> 31;
       $$0226390$i = 0;$$0233389$i = $1328;
       while(1) {
        HEAP8[$$0233389$i>>0] = $1331;
        $1332 = (($$0226390$i) + 1)|0;
        $1333 = ((($$0233389$i)) + 4|0);
        $exitcond407$i = ($1332|0)==($1302|0);
        if ($exitcond407$i) {
         break;
        } else {
         $$0226390$i = $1332;$$0233389$i = $1333;
        }
       }
      }
     } while(0);
     $1395 = (($$0224392$i) + 1)|0;
     $1396 = ($1395>>>0)<(4);
     if ($1396) {
      $$0224392$i = $1395;
     } else {
      break L607;
     }
    }
    _free($$0229$i);
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
  } while(0);
  $1493 = ($1092>>>0)>(3);
  L753: do {
   if ($1493) {
    $1494 = HEAP32[$5>>2]|0;
    $1495 = ($1494|0)==(16);
    $1496 = ($1302|0)>(0);
    if ($1495) {
     if (!($1496)) {
      break;
     }
     $$6370$i = 0;
     while(1) {
      $1497 = $$6370$i << 2;
      $1498 = (($$0229$i) + ($1497<<1)|0);
      $1499 = ((($1498)) + 6|0);
      $1500 = HEAP16[$1499>>1]|0;
      switch ($1500<<16>>16) {
      case -1: case 0:  {
       break;
      }
      default: {
       $1501 = (Math_fround(($1500&65535)));
       $1502 = Math_fround($1501 / Math_fround(65535.0));
       $1503 = Math_fround(Math_fround(1.0) / $1502);
       $1504 = Math_fround(Math_fround(1.0) - $1503);
       $1505 = Math_fround($1504 * Math_fround(65535.0));
       $1506 = HEAP16[$1498>>1]|0;
       $1507 = (Math_fround(($1506&65535)));
       $1508 = Math_fround($1503 * $1507);
       $1509 = Math_fround($1505 + $1508);
       $1510 = (~~(($1509))&65535);
       HEAP16[$1498>>1] = $1510;
       $1511 = ((($1498)) + 2|0);
       $1512 = HEAP16[$1511>>1]|0;
       $1513 = (Math_fround(($1512&65535)));
       $1514 = Math_fround($1503 * $1513);
       $1515 = Math_fround($1505 + $1514);
       $1516 = (~~(($1515))&65535);
       HEAP16[$1511>>1] = $1516;
       $1517 = ((($1498)) + 4|0);
       $1518 = HEAP16[$1517>>1]|0;
       $1519 = (Math_fround(($1518&65535)));
       $1520 = Math_fround($1503 * $1519);
       $1521 = Math_fround($1505 + $1520);
       $1522 = (~~(($1521))&65535);
       HEAP16[$1517>>1] = $1522;
      }
      }
      $1523 = (($$6370$i) + 1)|0;
      $exitcond$i108 = ($1523|0)==($1302|0);
      if ($exitcond$i108) {
       break L753;
      } else {
       $$6370$i = $1523;
      }
     }
    } else {
     if (!($1496)) {
      break;
     }
     $$7371$i = 0;
     while(1) {
      $1524 = $$7371$i << 2;
      $1525 = (($$0229$i) + ($1524)|0);
      $1526 = ((($1525)) + 3|0);
      $1527 = HEAP8[$1526>>0]|0;
      switch ($1527<<24>>24) {
      case -1: case 0:  {
       break;
      }
      default: {
       $1528 = (Math_fround(($1527&255)));
       $1529 = Math_fround($1528 / Math_fround(255.0));
       $1530 = Math_fround(Math_fround(1.0) / $1529);
       $1531 = Math_fround(Math_fround(1.0) - $1530);
       $1532 = Math_fround($1531 * Math_fround(255.0));
       $1533 = HEAP8[$1525>>0]|0;
       $1534 = (Math_fround(($1533&255)));
       $1535 = Math_fround($1530 * $1534);
       $1536 = Math_fround($1532 + $1535);
       $1537 = (~~(($1536))&255);
       HEAP8[$1525>>0] = $1537;
       $1538 = ((($1525)) + 1|0);
       $1539 = HEAP8[$1538>>0]|0;
       $1540 = (Math_fround(($1539&255)));
       $1541 = Math_fround($1530 * $1540);
       $1542 = Math_fround($1532 + $1541);
       $1543 = (~~(($1542))&255);
       HEAP8[$1538>>0] = $1543;
       $1544 = ((($1525)) + 2|0);
       $1545 = HEAP8[$1544>>0]|0;
       $1546 = (Math_fround(($1545&255)));
       $1547 = Math_fround($1530 * $1546);
       $1548 = Math_fround($1532 + $1547);
       $1549 = (~~(($1548))&255);
       HEAP8[$1544>>0] = $1549;
      }
      }
      $1550 = (($$7371$i) + 1)|0;
      $exitcond400$i = ($1550|0)==($1302|0);
      if ($exitcond400$i) {
       break L753;
      } else {
       $$7371$i = $1550;
      }
     }
    }
   }
  } while(0);
  $1551 = $4 | 4;
  $1552 = ($1551|0)==(4);
  do {
   if ($1552) {
    $$2231$i = $$0229$i;
   } else {
    $1553 = HEAP32[$5>>2]|0;
    $1554 = ($1553|0)==(16);
    if ($1554) {
     $1555 = (_stbi__convert_format16($$0229$i,4,$4,$1095,$1094)|0);
     $$1230$i = $1555;
    } else {
     $1556 = (_stbi__convert_format($$0229$i,4,$4,$1095,$1094)|0);
     $$1230$i = $1556;
    }
    $1557 = ($$1230$i|0)==(0|0);
    if ($1557) {
     $$0 = 0;
    } else {
     $$2231$i = $$1230$i;
     break;
    }
    STACKTOP = sp;return ($$0|0);
   }
  } while(0);
  $1558 = ($3|0)==(0|0);
  if (!($1558)) {
   HEAP32[$3>>2] = 4;
  }
  HEAP32[$2>>2] = $1094;
  HEAP32[$1>>2] = $1095;
  $$0 = $$2231$i;
  STACKTOP = sp;return ($$0|0);
 }
 $1559 = (_stbi__pic_is4($0,139338)|0);
 $1560 = ($1559|0)==(0);
 if ($1560) {
  $1561 = HEAP32[$17>>2]|0;
  HEAP32[$19>>2] = $1561;
  $1562 = HEAP32[$20>>2]|0;
  HEAP32[$22>>2] = $1562;
  $1563 = $1561;
  $1564 = $1562;
  $1990 = $1563;$1991 = $1564;
 } else {
  $1565 = ((($0)) + 32|0);
  $1566 = ((($0)) + 16|0);
  $1567 = ((($0)) + 28|0);
  $1568 = ((($0)) + 40|0);
  $1569 = ((($0)) + 36|0);
  $1570 = ((($0)) + 41|0);
  $$pre$i$i112 = HEAP32[$19>>2]|0;
  $$pre7$i$i = HEAP32[$22>>2]|0;
  $$06$i$i = 0;$1572 = $$pre$i$i112;$1573 = $$pre7$i$i;
  while(1) {
   $1571 = ($1572>>>0)<($1573>>>0);
   if ($1571) {
    $1574 = ((($1572)) + 1|0);
    $$ph421 = $1573;$$sink423 = $1574;
    label = 578;
   } else {
    $1575 = HEAP32[$1565>>2]|0;
    $1576 = ($1575|0)==(0);
    if ($1576) {
     $3059 = $1573;$3060 = $1572;
    } else {
     $1577 = HEAP32[$1566>>2]|0;
     $1578 = HEAP32[$1567>>2]|0;
     $1579 = HEAP32[$1569>>2]|0;
     $1580 = (ftCall_iiii($1577|0,$1578,$1568,$1579)|0);
     $1581 = ($1580|0)==(0);
     if ($1581) {
      HEAP32[$1565>>2] = 0;
      HEAP8[$1568>>0] = 0;
      $$sink$i$i$i$i113 = $1570;
     } else {
      $1582 = (((($0)) + 40|0) + ($1580)|0);
      $$sink$i$i$i$i113 = $1582;
     }
     HEAP32[$22>>2] = $$sink$i$i$i$i113;
     $$ph421 = $$sink$i$i$i$i113;$$sink423 = $1570;
     label = 578;
    }
   }
   if ((label|0) == 578) {
    label = 0;
    HEAP32[$19>>2] = $$sink423;
    $3059 = $$ph421;$3060 = $$sink423;
   }
   $1583 = (($$06$i$i) + 1)|0;
   $exitcond$i$i = ($1583|0)==(84);
   if ($exitcond$i$i) {
    break;
   } else {
    $$06$i$i = $1583;$1572 = $3060;$1573 = $3059;
   }
  }
  $1584 = (_stbi__pic_is4($0,139343)|0);
  $1585 = ($1584|0)==(0);
  $1586 = HEAP32[$17>>2]|0;
  HEAP32[$19>>2] = $1586;
  $1587 = HEAP32[$20>>2]|0;
  HEAP32[$22>>2] = $1587;
  $1588 = $1586;
  $1589 = $1587;
  if ($1585) {
   $1990 = $1588;$1991 = $1589;
  } else {
   $1590 = ($1588>>>0)<($1589>>>0);
   $$04169$i = 0;$1592 = $1588;$3061 = $1589;$3062 = $1590;
   while(1) {
    if ($3062) {
     $1591 = ((($1592)) + 1|0);
     $$ph424 = $3061;$$sink426 = $1591;
     label = 589;
    } else {
     $1593 = HEAP32[$1565>>2]|0;
     $1594 = ($1593|0)==(0);
     if ($1594) {
      $1603 = $1592;$1604 = $3061;
     } else {
      $1595 = HEAP32[$1566>>2]|0;
      $1596 = HEAP32[$1567>>2]|0;
      $1597 = HEAP32[$1569>>2]|0;
      $1598 = (ftCall_iiii($1595|0,$1596,$1568,$1597)|0);
      $1599 = ($1598|0)==(0);
      if ($1599) {
       HEAP32[$1565>>2] = 0;
       HEAP8[$1568>>0] = 0;
       $$sink$i$i$i117 = $1570;
      } else {
       $1600 = (((($0)) + 40|0) + ($1598)|0);
       $$sink$i$i$i117 = $1600;
      }
      HEAP32[$22>>2] = $$sink$i$i$i117;
      $$ph424 = $$sink$i$i$i117;$$sink426 = $1570;
      label = 589;
     }
    }
    if ((label|0) == 589) {
     label = 0;
     HEAP32[$19>>2] = $$sink426;
     $1603 = $$sink426;$1604 = $$ph424;
    }
    $1601 = (($$04169$i) + 1)|0;
    $1602 = ($1603>>>0)<($1604>>>0);
    $exitcond$i119 = ($1601|0)==(92);
    if ($exitcond$i119) {
     break;
    } else {
     $$04169$i = $1601;$1592 = $1603;$3061 = $1604;$3062 = $1602;
    }
   }
   $1605 = ($3|0)==(0|0);
   $spec$select$i = $1605 ? $9 : $3;
   if ($1602) {
    $1606 = ((($1603)) + 1|0);
    HEAP32[$19>>2] = $1606;
    $1607 = HEAP8[$1603>>0]|0;
    $$0$i$i$i124 = $1607;$1619 = $1606;$1620 = $1604;
   } else {
    $1608 = HEAP32[$1565>>2]|0;
    $1609 = ($1608|0)==(0);
    if ($1609) {
     $$0$i$i$i124 = 0;$1619 = $1603;$1620 = $1604;
    } else {
     $1610 = HEAP32[$1566>>2]|0;
     $1611 = HEAP32[$1567>>2]|0;
     $1612 = HEAP32[$1569>>2]|0;
     $1613 = (ftCall_iiii($1610|0,$1611,$1568,$1612)|0);
     $1614 = ($1613|0)==(0);
     if ($1614) {
      HEAP32[$1565>>2] = 0;
      HEAP8[$1568>>0] = 0;
      $$sink$i$i$i$i122 = $1570;$3063 = 0;
     } else {
      $1615 = (((($0)) + 40|0) + ($1613)|0);
      $$pre$i$i$i121 = HEAP8[$1568>>0]|0;
      $$sink$i$i$i$i122 = $1615;$3063 = $$pre$i$i$i121;
     }
     HEAP32[$22>>2] = $$sink$i$i$i$i122;
     HEAP32[$19>>2] = $1570;
     $$0$i$i$i124 = $3063;$1619 = $1570;$1620 = $$sink$i$i$i$i122;
    }
   }
   $1616 = $$0$i$i$i124&255;
   $1617 = $1616 << 8;
   $1618 = ($1619>>>0)<($1620>>>0);
   if ($1618) {
    $1621 = ((($1619)) + 1|0);
    HEAP32[$19>>2] = $1621;
    $1622 = HEAP8[$1619>>0]|0;
    $$0$i8$i$i129 = $1622;$1634 = $1621;$1635 = $1620;
   } else {
    $1623 = HEAP32[$1565>>2]|0;
    $1624 = ($1623|0)==(0);
    if ($1624) {
     $$0$i8$i$i129 = 0;$1634 = $1619;$1635 = $1620;
    } else {
     $1625 = HEAP32[$1566>>2]|0;
     $1626 = HEAP32[$1567>>2]|0;
     $1627 = HEAP32[$1569>>2]|0;
     $1628 = (ftCall_iiii($1625|0,$1626,$1568,$1627)|0);
     $1629 = ($1628|0)==(0);
     if ($1629) {
      HEAP32[$1565>>2] = 0;
      HEAP8[$1568>>0] = 0;
      $$sink$i$i6$i$i127 = $1570;$3064 = 0;
     } else {
      $1630 = (((($0)) + 40|0) + ($1628)|0);
      $$pre$i3$i$i126 = HEAP8[$1568>>0]|0;
      $$sink$i$i6$i$i127 = $1630;$3064 = $$pre$i3$i$i126;
     }
     HEAP32[$22>>2] = $$sink$i$i6$i$i127;
     HEAP32[$19>>2] = $1570;
     $$0$i8$i$i129 = $3064;$1634 = $1570;$1635 = $$sink$i$i6$i$i127;
    }
   }
   $1631 = $$0$i8$i$i129&255;
   $1632 = $1617 | $1631;
   $1633 = ($1634>>>0)<($1635>>>0);
   if ($1633) {
    $1636 = ((($1634)) + 1|0);
    HEAP32[$19>>2] = $1636;
    $1637 = HEAP8[$1634>>0]|0;
    $$0$i$i6$i = $1637;$1649 = $1636;$1650 = $1635;
   } else {
    $1638 = HEAP32[$1565>>2]|0;
    $1639 = ($1638|0)==(0);
    if ($1639) {
     $$0$i$i6$i = 0;$1649 = $1634;$1650 = $1635;
    } else {
     $1640 = HEAP32[$1566>>2]|0;
     $1641 = HEAP32[$1567>>2]|0;
     $1642 = HEAP32[$1569>>2]|0;
     $1643 = (ftCall_iiii($1640|0,$1641,$1568,$1642)|0);
     $1644 = ($1643|0)==(0);
     if ($1644) {
      HEAP32[$1565>>2] = 0;
      HEAP8[$1568>>0] = 0;
      $$sink$i$i$i4$i = $1570;$3065 = 0;
     } else {
      $1645 = (((($0)) + 40|0) + ($1643)|0);
      $$pre$i$i1$i = HEAP8[$1568>>0]|0;
      $$sink$i$i$i4$i = $1645;$3065 = $$pre$i$i1$i;
     }
     HEAP32[$22>>2] = $$sink$i$i$i4$i;
     HEAP32[$19>>2] = $1570;
     $$0$i$i6$i = $3065;$1649 = $1570;$1650 = $$sink$i$i$i4$i;
    }
   }
   $1646 = $$0$i$i6$i&255;
   $1647 = $1646 << 8;
   $1648 = ($1649>>>0)<($1650>>>0);
   if ($1648) {
    $1651 = ((($1649)) + 1|0);
    HEAP32[$19>>2] = $1651;
    $1652 = HEAP8[$1649>>0]|0;
    $$0$i8$i13$i = $1652;$3066 = $1650;$3067 = $1651;
   } else {
    $1653 = HEAP32[$1565>>2]|0;
    $1654 = ($1653|0)==(0);
    if ($1654) {
     $$0$i8$i13$i = 0;$3066 = $1650;$3067 = $1649;
    } else {
     $1655 = HEAP32[$1566>>2]|0;
     $1656 = HEAP32[$1567>>2]|0;
     $1657 = HEAP32[$1569>>2]|0;
     $1658 = (ftCall_iiii($1655|0,$1656,$1568,$1657)|0);
     $1659 = ($1658|0)==(0);
     if ($1659) {
      HEAP32[$1565>>2] = 0;
      HEAP8[$1568>>0] = 0;
      $$sink$i$i6$i11$i = $1570;$3068 = 0;
     } else {
      $1660 = (((($0)) + 40|0) + ($1658)|0);
      $$pre$i3$i8$i = HEAP8[$1568>>0]|0;
      $$sink$i$i6$i11$i = $1660;$3068 = $$pre$i3$i8$i;
     }
     HEAP32[$22>>2] = $$sink$i$i6$i11$i;
     HEAP32[$19>>2] = $1570;
     $$0$i8$i13$i = $3068;$3066 = $$sink$i$i6$i11$i;$3067 = $1570;
    }
   }
   $1661 = $$0$i8$i13$i&255;
   $1662 = $1647 | $1661;
   $1663 = HEAP32[$1566>>2]|0;
   $1664 = ($1663|0)==(0|0);
   if ($1664) {
    $1673 = $3067;$1674 = $3066;
    label = 623;
   } else {
    $1665 = ((($0)) + 24|0);
    $1666 = HEAP32[$1665>>2]|0;
    $1667 = HEAP32[$1567>>2]|0;
    $1668 = (ftCall_ii($1666|0,$1667)|0);
    $1669 = ($1668|0)==(0);
    if ($1669) {
     label = 624;
    } else {
     $1670 = HEAP32[$1565>>2]|0;
     $1671 = ($1670|0)==(0);
     if ($1671) {
      $$0$i148 = 0;
     } else {
      $$pre$i131 = HEAP32[$19>>2]|0;
      $$pre82$i = HEAP32[$22>>2]|0;
      $1673 = $$pre$i131;$1674 = $$pre82$i;
      label = 623;
     }
    }
   }
   if ((label|0) == 623) {
    $1672 = ($1673>>>0)<($1674>>>0);
    if ($1672) {
     label = 624;
    } else {
     $$0$i148 = 0;
    }
   }
   do {
    if ((label|0) == 624) {
     $1675 = ($1662|0)==(0);
     if (!($1675)) {
      $1676 = (2147483647 / ($1662>>>0))&-1;
      $1677 = ($1676>>>0)<($1632>>>0);
      $1678 = Math_imul($1662, $1632)|0;
      $1679 = ($1678>>>0)>(536870911);
      $or$cond$i132 = $1679 | $1677;
      if ($or$cond$i132) {
       $$0$i148 = 0;
       break;
      }
     }
     (_stbi__get32be($0)|0);
     $1680 = HEAP32[$19>>2]|0;
     $1681 = HEAP32[$22>>2]|0;
     $1682 = ($1680>>>0)<($1681>>>0);
     if ($1682) {
      $1683 = ((($1680)) + 1|0);
      $$ph427 = $1681;$$sink429 = $1683;
      label = 633;
     } else {
      $1684 = HEAP32[$1565>>2]|0;
      $1685 = ($1684|0)==(0);
      if ($1685) {
       $1693 = $1680;$1694 = $1681;
      } else {
       $1686 = HEAP32[$1566>>2]|0;
       $1687 = HEAP32[$1567>>2]|0;
       $1688 = HEAP32[$1569>>2]|0;
       $1689 = (ftCall_iiii($1686|0,$1687,$1568,$1688)|0);
       $1690 = ($1689|0)==(0);
       if ($1690) {
        HEAP32[$1565>>2] = 0;
        HEAP8[$1568>>0] = 0;
        $$sink$i$i$i19$i = $1570;
       } else {
        $1691 = (((($0)) + 40|0) + ($1689)|0);
        $$sink$i$i$i19$i = $1691;
       }
       HEAP32[$22>>2] = $$sink$i$i$i19$i;
       $$ph427 = $$sink$i$i$i19$i;$$sink429 = $1570;
       label = 633;
      }
     }
     if ((label|0) == 633) {
      HEAP32[$19>>2] = $$sink429;
      $1693 = $$sink429;$1694 = $$ph427;
     }
     $1692 = ($1693>>>0)<($1694>>>0);
     if ($1692) {
      $1695 = ((($1693)) + 1|0);
      $$ph430 = $1694;$$sink432 = $1695;
      label = 641;
     } else {
      $1696 = HEAP32[$1565>>2]|0;
      $1697 = ($1696|0)==(0);
      if ($1697) {
       $1705 = $1693;$1706 = $1694;
      } else {
       $1698 = HEAP32[$1566>>2]|0;
       $1699 = HEAP32[$1567>>2]|0;
       $1700 = HEAP32[$1569>>2]|0;
       $1701 = (ftCall_iiii($1698|0,$1699,$1568,$1700)|0);
       $1702 = ($1701|0)==(0);
       if ($1702) {
        HEAP32[$1565>>2] = 0;
        HEAP8[$1568>>0] = 0;
        $$sink$i$i6$i26$i = $1570;
       } else {
        $1703 = (((($0)) + 40|0) + ($1701)|0);
        $$sink$i$i6$i26$i = $1703;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i26$i;
       $$ph430 = $$sink$i$i6$i26$i;$$sink432 = $1570;
       label = 641;
      }
     }
     if ((label|0) == 641) {
      HEAP32[$19>>2] = $$sink432;
      $1705 = $$sink432;$1706 = $$ph430;
     }
     $1704 = ($1705>>>0)<($1706>>>0);
     if ($1704) {
      $1707 = ((($1705)) + 1|0);
      $$ph433 = $1706;$$sink435 = $1707;
      label = 649;
     } else {
      $1708 = HEAP32[$1565>>2]|0;
      $1709 = ($1708|0)==(0);
      if ($1709) {
       $1717 = $1705;$1718 = $1706;
      } else {
       $1710 = HEAP32[$1566>>2]|0;
       $1711 = HEAP32[$1567>>2]|0;
       $1712 = HEAP32[$1569>>2]|0;
       $1713 = (ftCall_iiii($1710|0,$1711,$1568,$1712)|0);
       $1714 = ($1713|0)==(0);
       if ($1714) {
        HEAP32[$1565>>2] = 0;
        HEAP8[$1568>>0] = 0;
        $$sink$i$i$i33$i = $1570;
       } else {
        $1715 = (((($0)) + 40|0) + ($1713)|0);
        $$sink$i$i$i33$i = $1715;
       }
       HEAP32[$22>>2] = $$sink$i$i$i33$i;
       $$ph433 = $$sink$i$i$i33$i;$$sink435 = $1570;
       label = 649;
      }
     }
     if ((label|0) == 649) {
      HEAP32[$19>>2] = $$sink435;
      $1717 = $$sink435;$1718 = $$ph433;
     }
     $1716 = ($1717>>>0)<($1718>>>0);
     do {
      if ($1716) {
       $1719 = ((($1717)) + 1|0);
       $$sink436 = $1719;
       label = 657;
      } else {
       $1720 = HEAP32[$1565>>2]|0;
       $1721 = ($1720|0)==(0);
       if ($1721) {
        break;
       }
       $1722 = HEAP32[$1566>>2]|0;
       $1723 = HEAP32[$1567>>2]|0;
       $1724 = HEAP32[$1569>>2]|0;
       $1725 = (ftCall_iiii($1722|0,$1723,$1568,$1724)|0);
       $1726 = ($1725|0)==(0);
       if ($1726) {
        HEAP32[$1565>>2] = 0;
        HEAP8[$1568>>0] = 0;
        $$sink$i$i6$i40$i = $1570;
       } else {
        $1727 = (((($0)) + 40|0) + ($1725)|0);
        $$sink$i$i6$i40$i = $1727;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i40$i;
       $$sink436 = $1570;
       label = 657;
      }
     } while(0);
     if ((label|0) == 657) {
      HEAP32[$19>>2] = $$sink436;
     }
     do {
      if ($1675) {
       label = 661;
      } else {
       $1728 = (2147483647 / ($1662>>>0))&-1;
       $1729 = ($1728>>>0)<($1632>>>0);
       if (!($1729)) {
        label = 661;
        break;
       }
       $$pre83$i = Math_imul($1662, $1632)|0;
       $$0$i44$i = 0;$$pre$phi$iZ2D = $$pre83$i;
      }
     } while(0);
     do {
      if ((label|0) == 661) {
       $1730 = Math_imul($1662, $1632)|0;
       $1731 = ($1730>>>0)<(536870912);
       if (!($1731)) {
        $$0$i44$i = 0;$$pre$phi$iZ2D = $1730;
        break;
       }
       $1732 = $1730 << 2;
       $1733 = (_malloc($1732)|0);
       $$0$i44$i = $1733;$$pre$phi$iZ2D = $1730;
      }
     } while(0);
     $1734 = $$pre$phi$iZ2D << 2;
     _memset(($$0$i44$i|0),-1,($1734|0))|0;
     $1735 = ((($0)) + 24|0);
     $$0157$i$i = 0;$$0162$i$i = 0;
     L914: while(1) {
      $1736 = ($$0162$i$i|0)==(10);
      if ($1736) {
       label = 794;
       break;
      }
      $1737 = (($$0162$i$i) + 1)|0;
      $1738 = HEAP32[$19>>2]|0;
      $1739 = HEAP32[$22>>2]|0;
      $1740 = ($1738>>>0)<($1739>>>0);
      do {
       if ($1740) {
        $1741 = ((($1738)) + 1|0);
        HEAP32[$19>>2] = $1741;
        $1742 = HEAP8[$1738>>0]|0;
        $$0$i$i48$i = $1742;$1752 = $1741;$1753 = $1739;
       } else {
        $1743 = HEAP32[$1565>>2]|0;
        $1744 = ($1743|0)==(0);
        if ($1744) {
         $$0$i$i48$i = 0;$1752 = $1738;$1753 = $1739;
         break;
        }
        $1745 = HEAP32[$1566>>2]|0;
        $1746 = HEAP32[$1567>>2]|0;
        $1747 = HEAP32[$1569>>2]|0;
        $1748 = (ftCall_iiii($1745|0,$1746,$1568,$1747)|0);
        $1749 = ($1748|0)==(0);
        if ($1749) {
         HEAP32[$1565>>2] = 0;
         HEAP8[$1568>>0] = 0;
         $$sink$i$i$i46$i = $1570;$3069 = 0;
        } else {
         $1750 = (((($0)) + 40|0) + ($1748)|0);
         $$pre$i$i45$i = HEAP8[$1568>>0]|0;
         $$sink$i$i$i46$i = $1750;$3069 = $$pre$i$i45$i;
        }
        HEAP32[$22>>2] = $$sink$i$i$i46$i;
        HEAP32[$19>>2] = $1570;
        $$0$i$i48$i = $3069;$1752 = $1570;$1753 = $$sink$i$i$i46$i;
       }
      } while(0);
      $1751 = ($1752>>>0)<($1753>>>0);
      do {
       if ($1751) {
        $1754 = ((($1752)) + 1|0);
        HEAP32[$19>>2] = $1754;
        $1755 = HEAP8[$1752>>0]|0;
        $$0$i169$i$i = $1755;$1766 = $1754;$1767 = $1753;
       } else {
        $1756 = HEAP32[$1565>>2]|0;
        $1757 = ($1756|0)==(0);
        if ($1757) {
         $$0$i169$i$i = 0;$1766 = $1752;$1767 = $1753;
         break;
        }
        $1758 = HEAP32[$1566>>2]|0;
        $1759 = HEAP32[$1567>>2]|0;
        $1760 = HEAP32[$1569>>2]|0;
        $1761 = (ftCall_iiii($1758|0,$1759,$1568,$1760)|0);
        $1762 = ($1761|0)==(0);
        if ($1762) {
         HEAP32[$1565>>2] = 0;
         HEAP8[$1568>>0] = 0;
         $$sink$i$i167$i$i = $1570;$3070 = 0;
        } else {
         $1763 = (((($0)) + 40|0) + ($1761)|0);
         $$pre$i164$i$i = HEAP8[$1568>>0]|0;
         $$sink$i$i167$i$i = $1763;$3070 = $$pre$i164$i$i;
        }
        HEAP32[$22>>2] = $$sink$i$i167$i$i;
        HEAP32[$19>>2] = $1570;
        $$0$i169$i$i = $3070;$1766 = $1570;$1767 = $$sink$i$i167$i$i;
       }
      } while(0);
      $1764 = (($7) + (($$0162$i$i*3)|0)|0);
      HEAP8[$1764>>0] = $$0$i169$i$i;
      $1765 = ($1766>>>0)<($1767>>>0);
      do {
       if ($1765) {
        $1768 = ((($1766)) + 1|0);
        HEAP32[$19>>2] = $1768;
        $1769 = HEAP8[$1766>>0]|0;
        $$0$i176$i$i = $1769;$1780 = $1768;$1781 = $1767;
       } else {
        $1770 = HEAP32[$1565>>2]|0;
        $1771 = ($1770|0)==(0);
        if ($1771) {
         $$0$i176$i$i = 0;$1780 = $1766;$1781 = $1767;
         break;
        }
        $1772 = HEAP32[$1566>>2]|0;
        $1773 = HEAP32[$1567>>2]|0;
        $1774 = HEAP32[$1569>>2]|0;
        $1775 = (ftCall_iiii($1772|0,$1773,$1568,$1774)|0);
        $1776 = ($1775|0)==(0);
        if ($1776) {
         HEAP32[$1565>>2] = 0;
         HEAP8[$1568>>0] = 0;
         $$sink$i$i174$i$i = $1570;$3071 = 0;
        } else {
         $1777 = (((($0)) + 40|0) + ($1775)|0);
         $$pre$i171$i$i = HEAP8[$1568>>0]|0;
         $$sink$i$i174$i$i = $1777;$3071 = $$pre$i171$i$i;
        }
        HEAP32[$22>>2] = $$sink$i$i174$i$i;
        HEAP32[$19>>2] = $1570;
        $$0$i176$i$i = $3071;$1780 = $1570;$1781 = $$sink$i$i174$i$i;
       }
      } while(0);
      $1778 = (((($7) + (($$0162$i$i*3)|0)|0)) + 1|0);
      HEAP8[$1778>>0] = $$0$i176$i$i;
      $1779 = ($1780>>>0)<($1781>>>0);
      do {
       if ($1779) {
        $1782 = ((($1780)) + 1|0);
        HEAP32[$19>>2] = $1782;
        $1783 = HEAP8[$1780>>0]|0;
        $$0$i183$i$i = $1783;$3072 = $1781;$3073 = $1782;
       } else {
        $1784 = HEAP32[$1565>>2]|0;
        $1785 = ($1784|0)==(0);
        if ($1785) {
         $$0$i183$i$i = 0;$3072 = $1781;$3073 = $1780;
         break;
        }
        $1786 = HEAP32[$1566>>2]|0;
        $1787 = HEAP32[$1567>>2]|0;
        $1788 = HEAP32[$1569>>2]|0;
        $1789 = (ftCall_iiii($1786|0,$1787,$1568,$1788)|0);
        $1790 = ($1789|0)==(0);
        if ($1790) {
         HEAP32[$1565>>2] = 0;
         HEAP8[$1568>>0] = 0;
         $$sink$i$i181$i$i = $1570;$3074 = 0;
        } else {
         $1791 = (((($0)) + 40|0) + ($1789)|0);
         $$pre$i178$i$i = HEAP8[$1568>>0]|0;
         $$sink$i$i181$i$i = $1791;$3074 = $$pre$i178$i$i;
        }
        HEAP32[$22>>2] = $$sink$i$i181$i$i;
        HEAP32[$19>>2] = $1570;
        $$0$i183$i$i = $3074;$3072 = $$sink$i$i181$i$i;$3073 = $1570;
       }
      } while(0);
      $1792 = (((($7) + (($$0162$i$i*3)|0)|0)) + 2|0);
      HEAP8[$1792>>0] = $$0$i183$i$i;
      $1793 = $$0$i183$i$i&255;
      $1794 = $$0157$i$i | $1793;
      $1795 = HEAP32[$1566>>2]|0;
      $1796 = ($1795|0)==(0|0);
      do {
       if ($1796) {
        $1804 = $3073;$1805 = $3072;
        label = 697;
       } else {
        $1797 = HEAP32[$1735>>2]|0;
        $1798 = HEAP32[$1567>>2]|0;
        $1799 = (ftCall_ii($1797|0,$1798)|0);
        $1800 = ($1799|0)==(0);
        if ($1800) {
         $$old = ($$0$i169$i$i<<24>>24)==(8);
         if ($$old) {
          break;
         } else {
          label = 794;
          break L914;
         }
        }
        $1801 = HEAP32[$1565>>2]|0;
        $1802 = ($1801|0)==(0);
        if ($1802) {
         label = 794;
         break L914;
        }
        $$pre$i50$i138 = HEAP32[$19>>2]|0;
        $$pre285$i$i = HEAP32[$22>>2]|0;
        $1804 = $$pre$i50$i138;$1805 = $$pre285$i$i;
        label = 697;
       }
      } while(0);
      if ((label|0) == 697) {
       label = 0;
       $1803 = ($1804>>>0)<($1805>>>0);
       $1806 = ($$0$i169$i$i<<24>>24)==(8);
       $or$cond1 = $1803 & $1806;
       if (!($or$cond1)) {
        label = 794;
        break;
       }
      }
      $1807 = ($$0$i$i48$i<<24>>24)==(0);
      if ($1807) {
       label = 700;
       break;
      } else {
       $$0157$i$i = $1794;$$0162$i$i = $1737;
      }
     }
     L962: do {
      if ((label|0) == 700) {
       $1808 = $1794 >>> 4;
       $1809 = $1808 & 1;
       $1810 = (($1809) + 3)|0;
       HEAP32[$spec$select$i>>2] = $1810;
       L964: do {
        if (!($1675)) {
         $1811 = $1632 << 2;
         $1812 = ($1632|0)!=(0);
         $1813 = ((($8)) + 1|0);
         $1814 = ((($8)) + 2|0);
         $1815 = ((($8)) + 3|0);
         $1816 = ((($8)) + 1|0);
         $1817 = ((($8)) + 2|0);
         $1818 = ((($8)) + 3|0);
         $$0161268$i$i = 0;
         L966: while(1) {
          $1819 = Math_imul($1811, $$0161268$i$i)|0;
          $1820 = (($$0$i44$i) + ($1819)|0);
          $$0147267$i$i = 0;
          while(1) {
           $1821 = (((($7) + (($$0147267$i$i*3)|0)|0)) + 1|0);
           $1822 = HEAP8[$1821>>0]|0;
           L970: do {
            switch ($1822<<24>>24) {
            case 0:  {
             if (!($1812)) {
              break L970;
             }
             $1823 = (((($7) + (($$0147267$i$i*3)|0)|0)) + 2|0);
             $$pre293$i$i = HEAP8[$1823>>0]|0;
             $1824 = $$pre293$i$i&255;
             $$0134264$i$i = 0;$$0135263$i$i = $1820;
             while(1) {
              $1825 = (_stbi__readval($0,$1824,$$0135263$i$i)|0);
              $1826 = ($1825|0)==(0|0);
              if ($1826) {
               label = 794;
               break L962;
              }
              $1827 = (($$0134264$i$i) + 1)|0;
              $1828 = ((($$0135263$i$i)) + 4|0);
              $1829 = ($1827>>>0)<($1632>>>0);
              if ($1829) {
               $$0134264$i$i = $1827;$$0135263$i$i = $1828;
              } else {
               break;
              }
             }
             break;
            }
            case 1:  {
             if (!($1812)) {
              break L970;
             }
             $1830 = (((($7) + (($$0147267$i$i*3)|0)|0)) + 2|0);
             $$0132260$i$i = $1632;$$1136259$i$i = $1820;
             while(1) {
              $1831 = HEAP32[$19>>2]|0;
              $1832 = HEAP32[$22>>2]|0;
              $1833 = ($1831>>>0)<($1832>>>0);
              do {
               if ($1833) {
                $1834 = ((($1831)) + 1|0);
                HEAP32[$19>>2] = $1834;
                $1835 = HEAP8[$1831>>0]|0;
                $$0$i191$i$i = $1835;$3075 = $1832;$3076 = $1834;
               } else {
                $1836 = HEAP32[$1565>>2]|0;
                $1837 = ($1836|0)==(0);
                if ($1837) {
                 $$0$i191$i$i = 0;$3075 = $1832;$3076 = $1831;
                 break;
                }
                $1838 = HEAP32[$1566>>2]|0;
                $1839 = HEAP32[$1567>>2]|0;
                $1840 = HEAP32[$1569>>2]|0;
                $1841 = (ftCall_iiii($1838|0,$1839,$1568,$1840)|0);
                $1842 = ($1841|0)==(0);
                if ($1842) {
                 HEAP32[$1565>>2] = 0;
                 HEAP8[$1568>>0] = 0;
                 $$sink$i$i189$i$i = $1570;$3077 = 0;
                } else {
                 $1843 = (((($0)) + 40|0) + ($1841)|0);
                 $$pre$i186$i$i = HEAP8[$1568>>0]|0;
                 $$sink$i$i189$i$i = $1843;$3077 = $$pre$i186$i$i;
                }
                HEAP32[$22>>2] = $$sink$i$i189$i$i;
                HEAP32[$19>>2] = $1570;
                $$0$i191$i$i = $3077;$3075 = $$sink$i$i189$i$i;$3076 = $1570;
               }
              } while(0);
              $1844 = HEAP32[$1566>>2]|0;
              $1845 = ($1844|0)==(0|0);
              do {
               if ($1845) {
                $1853 = $3076;$1854 = $3075;
                label = 721;
               } else {
                $1846 = HEAP32[$1735>>2]|0;
                $1847 = HEAP32[$1567>>2]|0;
                $1848 = (ftCall_ii($1846|0,$1847)|0);
                $1849 = ($1848|0)==(0);
                if ($1849) {
                 break;
                }
                $1850 = HEAP32[$1565>>2]|0;
                $1851 = ($1850|0)==(0);
                if ($1851) {
                 label = 737;
                 break L966;
                }
                $$pre290$i$i = HEAP32[$19>>2]|0;
                $$pre291$i$i = HEAP32[$22>>2]|0;
                $1853 = $$pre290$i$i;$1854 = $$pre291$i$i;
                label = 721;
               }
              } while(0);
              if ((label|0) == 721) {
               label = 0;
               $1852 = ($1853>>>0)<($1854>>>0);
               if (!($1852)) {
                label = 737;
                break L966;
               }
              }
              $1855 = HEAP8[$1830>>0]|0;
              $1856 = $1855&255;
              $1857 = (_stbi__readval($0,$1856,$8)|0);
              $1858 = ($1857|0)==(0|0);
              if ($1858) {
               label = 737;
               break L966;
              }
              $1859 = $$0$i191$i$i&255;
              $1860 = ($$0132260$i$i|0)<($1859|0);
              $1861 = $$0132260$i$i&255;
              $spec$select$i51$i = $1860 ? $1861 : $$0$i191$i$i;
              $1862 = $spec$select$i51$i&255;
              $1863 = ($spec$select$i51$i<<24>>24)==(0);
              if ($1863) {
               $$2$lcssa$i$i = $$1136259$i$i;
              } else {
               $$0131253$i$i = 0;$$2252$i$i = $$1136259$i$i;$1865 = $1855;
               while(1) {
                $1864 = $1865&255;
                $1866 = $1864 & 128;
                $1867 = ($1866|0)==(0);
                if (!($1867)) {
                 $1868 = HEAP8[$8>>0]|0;
                 HEAP8[$$2252$i$i>>0] = $1868;
                }
                $1869 = $1864 & 64;
                $1870 = ($1869|0)==(0);
                if (!($1870)) {
                 $1871 = HEAP8[$1813>>0]|0;
                 $1872 = ((($$2252$i$i)) + 1|0);
                 HEAP8[$1872>>0] = $1871;
                }
                $1873 = $1864 & 32;
                $1874 = ($1873|0)==(0);
                if (!($1874)) {
                 $1875 = HEAP8[$1814>>0]|0;
                 $1876 = ((($$2252$i$i)) + 2|0);
                 HEAP8[$1876>>0] = $1875;
                }
                $1877 = $1864 & 16;
                $1878 = ($1877|0)==(0);
                if (!($1878)) {
                 $1879 = HEAP8[$1815>>0]|0;
                 $1880 = ((($$2252$i$i)) + 3|0);
                 HEAP8[$1880>>0] = $1879;
                }
                $1881 = (($$0131253$i$i) + 1)|0;
                $exitcond284$i$i = ($1881|0)==($1862|0);
                if ($exitcond284$i$i) {
                 break;
                }
                $1882 = ((($$2252$i$i)) + 4|0);
                $$pre292$i$i = HEAP8[$1830>>0]|0;
                $$0131253$i$i = $1881;$$2252$i$i = $1882;$1865 = $$pre292$i$i;
               }
               $1883 = $1862 << 2;
               $scevgep283$i$i = (($$1136259$i$i) + ($1883)|0);
               $$2$lcssa$i$i = $scevgep283$i$i;
              }
              $1884 = (($$0132260$i$i) - ($1862))|0;
              $1885 = ($1884|0)>(0);
              if ($1885) {
               $$0132260$i$i = $1884;$$1136259$i$i = $$2$lcssa$i$i;
              } else {
               break;
              }
             }
             break;
            }
            case 2:  {
             if (!($1812)) {
              break L970;
             }
             $1886 = (((($7) + (($$0147267$i$i*3)|0)|0)) + 2|0);
             $$0128249$i$i = $1632;$$4248$i$i = $1820;
             while(1) {
              $1887 = HEAP32[$19>>2]|0;
              $1888 = HEAP32[$22>>2]|0;
              $1889 = ($1887>>>0)<($1888>>>0);
              do {
               if ($1889) {
                $1890 = ((($1887)) + 1|0);
                HEAP32[$19>>2] = $1890;
                $1891 = HEAP8[$1887>>0]|0;
                $$0$i203$i$i = $1891;$3078 = $1888;$3079 = $1890;
               } else {
                $1892 = HEAP32[$1565>>2]|0;
                $1893 = ($1892|0)==(0);
                if ($1893) {
                 $$0$i203$i$i = 0;$3078 = $1888;$3079 = $1887;
                 break;
                }
                $1894 = HEAP32[$1566>>2]|0;
                $1895 = HEAP32[$1567>>2]|0;
                $1896 = HEAP32[$1569>>2]|0;
                $1897 = (ftCall_iiii($1894|0,$1895,$1568,$1896)|0);
                $1898 = ($1897|0)==(0);
                if ($1898) {
                 HEAP32[$1565>>2] = 0;
                 HEAP8[$1568>>0] = 0;
                 $$sink$i$i201$i$i = $1570;$3080 = 0;
                } else {
                 $1899 = (((($0)) + 40|0) + ($1897)|0);
                 $$pre$i198$i$i = HEAP8[$1568>>0]|0;
                 $$sink$i$i201$i$i = $1899;$3080 = $$pre$i198$i$i;
                }
                HEAP32[$22>>2] = $$sink$i$i201$i$i;
                HEAP32[$19>>2] = $1570;
                $$0$i203$i$i = $3080;$3078 = $$sink$i$i201$i$i;$3079 = $1570;
               }
              } while(0);
              $1900 = $$0$i203$i$i&255;
              $1901 = HEAP32[$1566>>2]|0;
              $1902 = ($1901|0)==(0|0);
              do {
               if ($1902) {
                $1910 = $3079;$1911 = $3078;
                label = 751;
               } else {
                $1903 = HEAP32[$1735>>2]|0;
                $1904 = HEAP32[$1567>>2]|0;
                $1905 = (ftCall_ii($1903|0,$1904)|0);
                $1906 = ($1905|0)==(0);
                if ($1906) {
                 break;
                }
                $1907 = HEAP32[$1565>>2]|0;
                $1908 = ($1907|0)==(0);
                if ($1908) {
                 label = 794;
                 break L962;
                }
                $$pre286$i$i = HEAP32[$19>>2]|0;
                $$pre287$i$i = HEAP32[$22>>2]|0;
                $1910 = $$pre286$i$i;$1911 = $$pre287$i$i;
                label = 751;
               }
              } while(0);
              if ((label|0) == 751) {
               label = 0;
               $1909 = ($1910>>>0)<($1911>>>0);
               if (!($1909)) {
                label = 794;
                break L962;
               }
              }
              $1912 = ($$0$i203$i$i<<24>>24)<(0);
              if ($1912) {
               $1913 = ($$0$i203$i$i<<24>>24)==(-128);
               if ($1913) {
                $1914 = HEAP32[$19>>2]|0;
                $1915 = HEAP32[$22>>2]|0;
                $1916 = ($1914>>>0)<($1915>>>0);
                do {
                 if ($1916) {
                  $1917 = ((($1914)) + 1|0);
                  HEAP32[$19>>2] = $1917;
                  $1918 = HEAP8[$1914>>0]|0;
                  $$0$i$i$i$i = $1918;$1930 = $1917;$1931 = $1915;
                 } else {
                  $1919 = HEAP32[$1565>>2]|0;
                  $1920 = ($1919|0)==(0);
                  if ($1920) {
                   $$0$i$i$i$i = 0;$1930 = $1914;$1931 = $1915;
                   break;
                  }
                  $1921 = HEAP32[$1566>>2]|0;
                  $1922 = HEAP32[$1567>>2]|0;
                  $1923 = HEAP32[$1569>>2]|0;
                  $1924 = (ftCall_iiii($1921|0,$1922,$1568,$1923)|0);
                  $1925 = ($1924|0)==(0);
                  if ($1925) {
                   HEAP32[$1565>>2] = 0;
                   HEAP8[$1568>>0] = 0;
                   $$sink$i$i$i$i$i139 = $1570;$3081 = 0;
                  } else {
                   $1926 = (((($0)) + 40|0) + ($1924)|0);
                   $$pre$i$i$i$i = HEAP8[$1568>>0]|0;
                   $$sink$i$i$i$i$i139 = $1926;$3081 = $$pre$i$i$i$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i$i$i$i139;
                  HEAP32[$19>>2] = $1570;
                  $$0$i$i$i$i = $3081;$1930 = $1570;$1931 = $$sink$i$i$i$i$i139;
                 }
                } while(0);
                $1927 = $$0$i$i$i$i&255;
                $1928 = $1927 << 8;
                $1929 = ($1930>>>0)<($1931>>>0);
                do {
                 if ($1929) {
                  $1932 = ((($1930)) + 1|0);
                  HEAP32[$19>>2] = $1932;
                  $1933 = HEAP8[$1930>>0]|0;
                  $$0$i8$i$i$i = $1933;
                 } else {
                  $1934 = HEAP32[$1565>>2]|0;
                  $1935 = ($1934|0)==(0);
                  if ($1935) {
                   $$0$i8$i$i$i = 0;
                   break;
                  }
                  $1936 = HEAP32[$1566>>2]|0;
                  $1937 = HEAP32[$1567>>2]|0;
                  $1938 = HEAP32[$1569>>2]|0;
                  $1939 = (ftCall_iiii($1936|0,$1937,$1568,$1938)|0);
                  $1940 = ($1939|0)==(0);
                  if ($1940) {
                   HEAP32[$1565>>2] = 0;
                   HEAP8[$1568>>0] = 0;
                   $$sink$i$i6$i$i$i142 = $1570;$3082 = 0;
                  } else {
                   $1941 = (((($0)) + 40|0) + ($1939)|0);
                   $$pre$i3$i$i$i = HEAP8[$1568>>0]|0;
                   $$sink$i$i6$i$i$i142 = $1941;$3082 = $$pre$i3$i$i$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i6$i$i$i142;
                  HEAP32[$19>>2] = $1570;
                  $$0$i8$i$i$i = $3082;
                 }
                } while(0);
                $1942 = $$0$i8$i$i$i&255;
                $1943 = $1928 | $1942;
                $$0126$i$i = $1943;
               } else {
                $1944 = (($1900) + -127)|0;
                $$0126$i$i = $1944;
               }
               $1945 = ($$0126$i$i|0)>($$0128249$i$i|0);
               if ($1945) {
                label = 784;
                break L966;
               }
               $1946 = HEAP8[$1886>>0]|0;
               $1947 = $1946&255;
               $1948 = (_stbi__readval($0,$1947,$8)|0);
               $1949 = ($1948|0)==(0|0);
               if ($1949) {
                label = 784;
                break L966;
               }
               $1950 = ($$0126$i$i|0)>(0);
               if ($1950) {
                $$0247$i$i = 0;$$5246$i$i = $$4248$i$i;$1952 = $1946;
                while(1) {
                 $1951 = $1952&255;
                 $1953 = $1951 & 128;
                 $1954 = ($1953|0)==(0);
                 if (!($1954)) {
                  $1955 = HEAP8[$8>>0]|0;
                  HEAP8[$$5246$i$i>>0] = $1955;
                 }
                 $1956 = $1951 & 64;
                 $1957 = ($1956|0)==(0);
                 if (!($1957)) {
                  $1958 = HEAP8[$1816>>0]|0;
                  $1959 = ((($$5246$i$i)) + 1|0);
                  HEAP8[$1959>>0] = $1958;
                 }
                 $1960 = $1951 & 32;
                 $1961 = ($1960|0)==(0);
                 if (!($1961)) {
                  $1962 = HEAP8[$1817>>0]|0;
                  $1963 = ((($$5246$i$i)) + 2|0);
                  HEAP8[$1963>>0] = $1962;
                 }
                 $1964 = $1951 & 16;
                 $1965 = ($1964|0)==(0);
                 if (!($1965)) {
                  $1966 = HEAP8[$1818>>0]|0;
                  $1967 = ((($$5246$i$i)) + 3|0);
                  HEAP8[$1967>>0] = $1966;
                 }
                 $1968 = (($$0247$i$i) + 1)|0;
                 $exitcond$i$i145 = ($1968|0)==($$0126$i$i|0);
                 if ($exitcond$i$i145) {
                  break;
                 }
                 $1969 = ((($$5246$i$i)) + 4|0);
                 $$pre289$i$i = HEAP8[$1886>>0]|0;
                 $$0247$i$i = $1968;$$5246$i$i = $1969;$1952 = $$pre289$i$i;
                }
                $1970 = $$0126$i$i << 2;
                $scevgep$i$i146 = (($$4248$i$i) + ($1970)|0);
                $$5$lcssa$i$i = $scevgep$i$i146;
               } else {
                $$5$lcssa$i$i = $$4248$i$i;
               }
               $$1127$i$i = $$0126$i$i;$$8$i$i = $$5$lcssa$i$i;
              } else {
               $1971 = (($1900) + 1)|0;
               $1972 = ($$0128249$i$i|0)>($1900|0);
               if (!($1972)) {
                label = 794;
                break L962;
               }
               $$pre288$i$i = HEAP8[$1886>>0]|0;
               $1973 = $$pre288$i$i&255;
               $$1245$i$i = 0;$$7244$i$i = $$4248$i$i;
               while(1) {
                $1974 = (_stbi__readval($0,$1973,$$7244$i$i)|0);
                $1975 = ($1974|0)==(0|0);
                if ($1975) {
                 label = 794;
                 break L962;
                }
                $1976 = (($$1245$i$i) + 1)|0;
                $1977 = ((($$7244$i$i)) + 4|0);
                $1978 = ($$1245$i$i>>>0)<($1900>>>0);
                if ($1978) {
                 $$1245$i$i = $1976;$$7244$i$i = $1977;
                } else {
                 $$1127$i$i = $1971;$$8$i$i = $1977;
                 break;
                }
               }
              }
              $1979 = (($$0128249$i$i) - ($$1127$i$i))|0;
              $1980 = ($1979|0)>(0);
              if ($1980) {
               $$0128249$i$i = $1979;$$4248$i$i = $$8$i$i;
              } else {
               break;
              }
             }
             break;
            }
            default: {
             label = 794;
             break L962;
            }
            }
           } while(0);
           $1981 = (($$0147267$i$i) + 1)|0;
           $1982 = ($$0147267$i$i>>>0)<($$0162$i$i>>>0);
           if ($1982) {
            $$0147267$i$i = $1981;
           } else {
            break;
           }
          }
          $1983 = (($$0161268$i$i) + 1)|0;
          $1984 = ($1983>>>0)<($1662>>>0);
          if ($1984) {
           $$0161268$i$i = $1983;
          } else {
           break L964;
          }
         }
         if ((label|0) == 737) {
          label = 794;
          break L962;
         }
         else if ((label|0) == 784) {
          label = 794;
          break L962;
         }
        }
       } while(0);
       $1985 = ($$0$i44$i|0)==(0|0);
       if ($1985) {
        label = 796;
       } else {
        $$042$i = $$0$i44$i;
       }
      }
     } while(0);
     if ((label|0) == 794) {
      label = 796;
     }
     if ((label|0) == 796) {
      _free($$0$i44$i);
      $$042$i = 0;
     }
     HEAP32[$1>>2] = $1632;
     HEAP32[$2>>2] = $1662;
     $1986 = ($4|0)==(0);
     if ($1986) {
      $1987 = HEAP32[$spec$select$i>>2]|0;
      $$043$i = $1987;
     } else {
      $$043$i = $4;
     }
     $1988 = (_stbi__convert_format($$042$i,4,$$043$i,$1632,$1662)|0);
     $$0$i148 = $1988;
    }
   } while(0);
   $$0 = $$0$i148;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $1989 = ($1990>>>0)<($1991>>>0);
 if ($1989) {
  $1992 = ((($1990)) + 1|0);
  HEAP32[$19>>2] = $1992;
  $1993 = HEAP8[$1990>>0]|0;
  $$0$i$i152 = $1993;$2009 = $1992;$2010 = $1991;
 } else {
  $1994 = ((($0)) + 32|0);
  $1995 = HEAP32[$1994>>2]|0;
  $1996 = ($1995|0)==(0);
  if ($1996) {
   $$0$i$i152 = 0;$2009 = $1990;$2010 = $1991;
  } else {
   $1997 = ((($0)) + 16|0);
   $1998 = HEAP32[$1997>>2]|0;
   $1999 = ((($0)) + 28|0);
   $2000 = HEAP32[$1999>>2]|0;
   $2001 = ((($0)) + 40|0);
   $2002 = ((($0)) + 36|0);
   $2003 = HEAP32[$2002>>2]|0;
   $2004 = (ftCall_iiii($1998|0,$2000,$2001,$2003)|0);
   $2005 = ($2004|0)==(0);
   if ($2005) {
    HEAP32[$1994>>2] = 0;
    $2006 = ((($0)) + 41|0);
    HEAP8[$2001>>0] = 0;
    $$pre$phi$i$iZ2D = $2006;$$sink$i$i$i150 = $2006;$3083 = 0;
   } else {
    $2007 = (((($0)) + 40|0) + ($2004)|0);
    $$pre$i$i149 = HEAP8[$2001>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i150 = $2007;$3083 = $$pre$i$i149;
   }
   HEAP32[$22>>2] = $$sink$i$i$i150;
   HEAP32[$19>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i152 = $3083;$2009 = $$pre$phi$i$iZ2D;$2010 = $$sink$i$i$i150;
  }
 }
 $2008 = ($2009>>>0)<($2010>>>0);
 if ($2008) {
  $2011 = ((($2009)) + 1|0);
  HEAP32[$19>>2] = $2011;
  $2012 = HEAP8[$2009>>0]|0;
  $$0$i11$i157 = $2012;
  label = 815;
 } else {
  $2013 = ((($0)) + 32|0);
  $2014 = HEAP32[$2013>>2]|0;
  $2015 = ($2014|0)==(0);
  if (!($2015)) {
   $2016 = ((($0)) + 16|0);
   $2017 = HEAP32[$2016>>2]|0;
   $2018 = ((($0)) + 28|0);
   $2019 = HEAP32[$2018>>2]|0;
   $2020 = ((($0)) + 40|0);
   $2021 = ((($0)) + 36|0);
   $2022 = HEAP32[$2021>>2]|0;
   $2023 = (ftCall_iiii($2017|0,$2019,$2020,$2022)|0);
   $2024 = ($2023|0)==(0);
   if ($2024) {
    HEAP32[$2013>>2] = 0;
    $2025 = ((($0)) + 41|0);
    HEAP8[$2020>>0] = 0;
    $$pre$phi$i8$iZ2D = $2025;$$sink$i$i9$i155 = $2025;$3084 = 0;
   } else {
    $2026 = (((($0)) + 40|0) + ($2023)|0);
    $$pre$i6$i154 = HEAP8[$2020>>0]|0;
    $$pre5$i7$i = ((($0)) + 41|0);
    $$pre$phi$i8$iZ2D = $$pre5$i7$i;$$sink$i$i9$i155 = $2026;$3084 = $$pre$i6$i154;
   }
   HEAP32[$22>>2] = $$sink$i$i9$i155;
   HEAP32[$19>>2] = $$pre$phi$i8$iZ2D;
   $$0$i11$i157 = $3084;
   label = 815;
  }
 }
 if ((label|0) == 815) {
  $2027 = ($$0$i$i152<<24>>24)==(80);
  $$off$i = (($$0$i11$i157) + -53)<<24>>24;
  $switch$i = ($$off$i&255)<(2);
  $or$cond$i158 = $2027 & $switch$i;
  if ($or$cond$i158) {
   $2028 = ((($0)) + 4|0);
   $2029 = ((($0)) + 8|0);
   $2030 = (_stbi__pnm_info($0,$0,$2028,$2029)|0);
   $2031 = ($2030|0)==(0);
   if ($2031) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $2032 = HEAP32[$0>>2]|0;
   HEAP32[$1>>2] = $2032;
   $2033 = HEAP32[$2028>>2]|0;
   HEAP32[$2>>2] = $2033;
   $2034 = ($3|0)==(0|0);
   if (!($2034)) {
    $2035 = HEAP32[$2029>>2]|0;
    HEAP32[$3>>2] = $2035;
   }
   $2036 = HEAP32[$2029>>2]|0;
   $2037 = HEAP32[$0>>2]|0;
   $2038 = HEAP32[$2028>>2]|0;
   $2039 = $2037 | $2036;
   $2040 = ($2039|0)<(0);
   if ($2040) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $2041 = ($2037|0)==(0);
   if (!($2041)) {
    $2042 = (2147483647 / ($2037|0))&-1;
    $2043 = ($2042|0)<($2036|0);
    if ($2043) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $2044 = Math_imul($2037, $2036)|0;
   $2045 = $2044 | $2038;
   $2046 = ($2045|0)<(0);
   if ($2046) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $2047 = ($2038|0)==(0);
   if (!($2047)) {
    $2048 = (2147483647 / ($2038|0))&-1;
    $2049 = ($2048|0)<($2044|0);
    if ($2049) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
   }
   if (!($2041)) {
    $2050 = (2147483647 / ($2037|0))&-1;
    $2051 = ($2050|0)<($2036|0);
    if ($2051) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
   }
   if (!($2047)) {
    $2052 = (2147483647 / ($2038|0))&-1;
    $2053 = ($2052|0)<($2044|0);
    if ($2053) {
     $$0 = 0;
     STACKTOP = sp;return ($$0|0);
    }
   }
   $2054 = Math_imul($2044, $2038)|0;
   $2055 = (_malloc($2054)|0);
   $2056 = ($2055|0)==(0|0);
   if ($2056) {
    $$0 = 0;
    STACKTOP = sp;return ($$0|0);
   }
   $2057 = ((($0)) + 16|0);
   $2058 = HEAP32[$2057>>2]|0;
   $2059 = ($2058|0)==(0|0);
   do {
    if ($2059) {
     $$pre$i$i169 = HEAP32[$19>>2]|0;
     $$pre36$i$i = HEAP32[$22>>2]|0;
     $2072 = $$pre$i$i169;$2074 = $$pre36$i$i;
     label = 834;
    } else {
     $2060 = HEAP32[$22>>2]|0;
     $2061 = HEAP32[$19>>2]|0;
     $2062 = $2061;
     $2063 = (($2060) - ($2062))|0;
     $2064 = ($2054|0)>($2063|0);
     $2065 = $2060;
     if (!($2064)) {
      $2072 = $2061;$2074 = $2065;
      label = 834;
      break;
     }
     _memcpy(($2055|0),($2061|0),($2063|0))|0;
     $2066 = ((($0)) + 28|0);
     $2067 = HEAP32[$2066>>2]|0;
     $2068 = (($2055) + ($2063)|0);
     $2069 = (($2054) - ($2063))|0;
     (ftCall_iiii($2058|0,$2067,$2068,$2069)|0);
     $2070 = HEAP32[$22>>2]|0;
     HEAP32[$19>>2] = $2070;
    }
   } while(0);
   do {
    if ((label|0) == 834) {
     $2071 = (($2072) + ($2054)|0);
     $2073 = ($2071>>>0)>($2074>>>0);
     if ($2073) {
      break;
     }
     _memcpy(($2055|0),($2072|0),($2054|0))|0;
     HEAP32[$19>>2] = $2071;
    }
   } while(0);
   $2075 = ($4|0)==(0);
   if ($2075) {
    $$0 = $2055;
    STACKTOP = sp;return ($$0|0);
   }
   $2076 = HEAP32[$2029>>2]|0;
   $2077 = ($2076|0)==($4|0);
   if ($2077) {
    $$0 = $2055;
    STACKTOP = sp;return ($$0|0);
   }
   $2078 = HEAP32[$0>>2]|0;
   $2079 = HEAP32[$2028>>2]|0;
   $2080 = (_stbi__convert_format($2055,$2076,$4,$2078,$2079)|0);
   $$0 = $2080;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $2081 = HEAP32[$17>>2]|0;
 HEAP32[$19>>2] = $2081;
 $2082 = HEAP32[$20>>2]|0;
 HEAP32[$22>>2] = $2082;
 $2083 = (_stbi__hdr_test($0)|0);
 $2084 = ($2083|0)==(0);
 if (!($2084)) {
  $2085 = (_stbi__hdr_load($0,$1,$2,$3,$4)|0);
  $2086 = HEAP32[$1>>2]|0;
  $2087 = HEAP32[$2>>2]|0;
  $2088 = ($4|0)==(0);
  if ($2088) {
   $2089 = HEAP32[$3>>2]|0;
   $2098 = $2089;
  } else {
   $2098 = $4;
  }
  $2090 = ($2085|0)==(0|0);
  if ($2090) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
  $2091 = $2087 | $2086;
  $2092 = ($2091|0)<(0);
  do {
   if (!($2092)) {
    $2093 = ($2087|0)==(0);
    if (!($2093)) {
     $2094 = (2147483647 / ($2087|0))&-1;
     $2095 = ($2094|0)<($2086|0);
     if ($2095) {
      break;
     }
    }
    $2096 = Math_imul($2087, $2086)|0;
    $2097 = $2098 | $2096;
    $2099 = ($2097|0)<(0);
    if (!($2099)) {
     $2100 = ($2098|0)==(0);
     if (!($2100)) {
      $2101 = (2147483647 / ($2098|0))&-1;
      $2102 = ($2101|0)<($2096|0);
      if ($2102) {
       break;
      }
     }
     $2103 = Math_imul($2098, $2096)|0;
     $2104 = (_malloc($2103)|0);
     $2105 = ($2104|0)==(0|0);
     if (!($2105)) {
      $2106 = $2098 & 1;
      $sext$i = (($2098) + -1)|0;
      $$055$i = (($sext$i) + ($2106))|0;
      $2107 = ($2096|0)>(0);
      L1189: do {
       if ($2107) {
        $2108 = ($$055$i|0)>(0);
        $2109 = +Math_fround(0.454545438);
        if (!($2108)) {
         $2155 = ($2098|0)>(0);
         if (!($2155)) {
          break;
         }
         $$05759$i$us = 0;
         while(1) {
          $2156 = Math_imul($$05759$i$us, $2098)|0;
          $2157 = (($2085) + ($2156<<2)|0);
          $2158 = Math_fround(HEAPF32[$2157>>2]);
          $2159 = Math_fround($2158 * Math_fround(255.0));
          $2160 = Math_fround($2159 + Math_fround(0.5));
          $2161 = $2160 < Math_fround(0.0);
          $$0$i180$us = $2161 ? Math_fround(0.0) : $2160;
          $2162 = $$0$i180$us > Math_fround(255.0);
          $$1$i$us = $2162 ? Math_fround(255.0) : $$0$i180$us;
          $2163 = (~~(($$1$i$us)));
          $2164 = $2163&255;
          $2165 = (($2104) + ($2156)|0);
          HEAP8[$2165>>0] = $2164;
          $2166 = (($$05759$i$us) + 1)|0;
          $exitcond65$i$us = ($2166|0)==($2096|0);
          if ($exitcond65$i$us) {
           break L1189;
          } else {
           $$05759$i$us = $2166;
          }
         }
        }
        $2110 = ($$055$i|0)<($2098|0);
        if ($2110) {
         $$05759$us$i$us = 0;
         while(1) {
          $2111 = Math_imul($$05759$us$i$us, $2098)|0;
          $$05658$us$i$us = 0;
          while(1) {
           $2112 = (($$05658$us$i$us) + ($2111))|0;
           $2113 = (($2085) + ($2112<<2)|0);
           $2114 = Math_fround(HEAPF32[$2113>>2]);
           $2115 = Math_fround(Math_fround(1.0) * $2114);
           $2116 = +$2115;
           $2117 = (+_pow($2116,$2109));
           $2118 = Math_fround($2117);
           $2119 = Math_fround($2118 * Math_fround(255.0));
           $2120 = Math_fround($2119 + Math_fround(0.5));
           $2121 = $2120 < Math_fround(0.0);
           $$052$us$i$us = $2121 ? Math_fround(0.0) : $2120;
           $2122 = $$052$us$i$us > Math_fround(255.0);
           $$153$us$i$us = $2122 ? Math_fround(255.0) : $$052$us$i$us;
           $2123 = (~~(($$153$us$i$us)));
           $2124 = $2123&255;
           $2125 = (($2104) + ($2112)|0);
           HEAP8[$2125>>0] = $2124;
           $2126 = (($$05658$us$i$us) + 1)|0;
           $exitcond$i178$us = ($2126|0)==($$055$i|0);
           if ($exitcond$i178$us) {
            break;
           } else {
            $$05658$us$i$us = $2126;
           }
          }
          $2127 = (($2111) + ($$055$i))|0;
          $2128 = (($2085) + ($2127<<2)|0);
          $2129 = Math_fround(HEAPF32[$2128>>2]);
          $2130 = Math_fround($2129 * Math_fround(255.0));
          $2131 = Math_fround($2130 + Math_fround(0.5));
          $2132 = $2131 < Math_fround(0.0);
          $$0$us$i$us = $2132 ? Math_fround(0.0) : $2131;
          $2133 = $$0$us$i$us > Math_fround(255.0);
          $$1$us$i$us = $2133 ? Math_fround(255.0) : $$0$us$i$us;
          $2134 = (~~(($$1$us$i$us)));
          $2135 = $2134&255;
          $2136 = (($2104) + ($2127)|0);
          HEAP8[$2136>>0] = $2135;
          $2137 = (($$05759$us$i$us) + 1)|0;
          $exitcond64$i$us = ($2137|0)==($2096|0);
          if ($exitcond64$i$us) {
           break;
          } else {
           $$05759$us$i$us = $2137;
          }
         }
        } else {
         $$05759$us$i = 0;
         while(1) {
          $2138 = Math_imul($$05759$us$i, $2098)|0;
          $$05658$us$i = 0;
          while(1) {
           $2139 = (($$05658$us$i) + ($2138))|0;
           $2140 = (($2085) + ($2139<<2)|0);
           $2141 = Math_fround(HEAPF32[$2140>>2]);
           $2142 = Math_fround(Math_fround(1.0) * $2141);
           $2143 = +$2142;
           $2144 = (+_pow($2143,$2109));
           $2145 = Math_fround($2144);
           $2146 = Math_fround($2145 * Math_fround(255.0));
           $2147 = Math_fround($2146 + Math_fround(0.5));
           $2148 = $2147 < Math_fround(0.0);
           $$052$us$i = $2148 ? Math_fround(0.0) : $2147;
           $2149 = $$052$us$i > Math_fround(255.0);
           $$153$us$i = $2149 ? Math_fround(255.0) : $$052$us$i;
           $2150 = (~~(($$153$us$i)));
           $2151 = $2150&255;
           $2152 = (($2104) + ($2139)|0);
           HEAP8[$2152>>0] = $2151;
           $2153 = (($$05658$us$i) + 1)|0;
           $exitcond$i178 = ($2153|0)==($$055$i|0);
           if ($exitcond$i178) {
            break;
           } else {
            $$05658$us$i = $2153;
           }
          }
          $2154 = (($$05759$us$i) + 1)|0;
          $exitcond64$i = ($2154|0)==($2096|0);
          if ($exitcond64$i) {
           break;
          } else {
           $$05759$us$i = $2154;
          }
         }
        }
       }
      } while(0);
      _free($2085);
      $$0 = $2104;
      STACKTOP = sp;return ($$0|0);
     }
    }
   }
  } while(0);
  _free($2085);
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $2167 = HEAP32[$19>>2]|0;
 $2168 = HEAP32[$22>>2]|0;
 $2169 = ($2167>>>0)<($2168>>>0);
 if ($2169) {
  $2170 = ((($2167)) + 1|0);
  $$ph437 = $2168;$$pre$phi$i$i182$sinkZ2D = $2170;
  label = 873;
 } else {
  $2171 = ((($0)) + 32|0);
  $2172 = HEAP32[$2171>>2]|0;
  $2173 = ($2172|0)==(0);
  if ($2173) {
   $$in$i185 = $2167;$2186 = $2168;
  } else {
   $2174 = ((($0)) + 16|0);
   $2175 = HEAP32[$2174>>2]|0;
   $2176 = ((($0)) + 28|0);
   $2177 = HEAP32[$2176>>2]|0;
   $2178 = ((($0)) + 40|0);
   $2179 = ((($0)) + 36|0);
   $2180 = HEAP32[$2179>>2]|0;
   $2181 = (ftCall_iiii($2175|0,$2177,$2178,$2180)|0);
   $2182 = ($2181|0)==(0);
   if ($2182) {
    HEAP32[$2171>>2] = 0;
    $2183 = ((($0)) + 41|0);
    HEAP8[$2178>>0] = 0;
    $$pre$phi$i$i182Z2D = $2183;$$sink$i$i$i183 = $2183;
   } else {
    $2184 = (((($0)) + 40|0) + ($2181)|0);
    $$pre5$i$i181 = ((($0)) + 41|0);
    $$pre$phi$i$i182Z2D = $$pre5$i$i181;$$sink$i$i$i183 = $2184;
   }
   HEAP32[$22>>2] = $$sink$i$i$i183;
   $$ph437 = $$sink$i$i$i183;$$pre$phi$i$i182$sinkZ2D = $$pre$phi$i$i182Z2D;
   label = 873;
  }
 }
 if ((label|0) == 873) {
  HEAP32[$19>>2] = $$pre$phi$i$i182$sinkZ2D;
  $$in$i185 = $$pre$phi$i$i182$sinkZ2D;$2186 = $$ph437;
 }
 $2185 = ($$in$i185>>>0)<($2186>>>0);
 if ($2185) {
  $2187 = ((($$in$i185)) + 1|0);
  HEAP32[$19>>2] = $2187;
  $2188 = HEAP8[$$in$i185>>0]|0;
  $$0$i68$i = $2188;$$in123$i = $2187;$3085 = $2186;
  label = 881;
 } else {
  $2189 = ((($0)) + 32|0);
  $2190 = HEAP32[$2189>>2]|0;
  $2191 = ($2190|0)==(0);
  if ($2191) {
   $$0$i68119$i = 0;$$in124$i = $$in$i185;$2205 = $2186;
   label = 882;
  } else {
   $2192 = ((($0)) + 16|0);
   $2193 = HEAP32[$2192>>2]|0;
   $2194 = ((($0)) + 28|0);
   $2195 = HEAP32[$2194>>2]|0;
   $2196 = ((($0)) + 40|0);
   $2197 = ((($0)) + 36|0);
   $2198 = HEAP32[$2197>>2]|0;
   $2199 = (ftCall_iiii($2193|0,$2195,$2196,$2198)|0);
   $2200 = ($2199|0)==(0);
   if ($2200) {
    HEAP32[$2189>>2] = 0;
    $2201 = ((($0)) + 41|0);
    HEAP8[$2196>>0] = 0;
    $$pre$phi$i65$iZ2D = $2201;$$sink$i$i66$i = $2201;$3086 = 0;
   } else {
    $2202 = (((($0)) + 40|0) + ($2199)|0);
    $$pre$i63$i = HEAP8[$2196>>0]|0;
    $$pre5$i64$i = ((($0)) + 41|0);
    $$pre$phi$i65$iZ2D = $$pre5$i64$i;$$sink$i$i66$i = $2202;$3086 = $$pre$i63$i;
   }
   HEAP32[$22>>2] = $$sink$i$i66$i;
   HEAP32[$19>>2] = $$pre$phi$i65$iZ2D;
   $$0$i68$i = $3086;$$in123$i = $$pre$phi$i65$iZ2D;$3085 = $$sink$i$i66$i;
   label = 881;
  }
 }
 if ((label|0) == 881) {
  $2203 = ($$0$i68$i&255)>(1);
  if (!($2203)) {
   $$0$i68119$i = $$0$i68$i;$$in124$i = $$in123$i;$2205 = $3085;
   label = 882;
  }
 }
 L1236: do {
  if ((label|0) == 882) {
   $2204 = ($$in124$i>>>0)<($2205>>>0);
   if ($2204) {
    $2206 = ((($$in124$i)) + 1|0);
    HEAP32[$19>>2] = $2206;
    $2207 = HEAP8[$$in124$i>>0]|0;
    $$0$i75$i = $2207;$$in125$i = $2206;$2230 = $2205;
   } else {
    $2208 = ((($0)) + 32|0);
    $2209 = HEAP32[$2208>>2]|0;
    $2210 = ($2209|0)==(0);
    if ($2210) {
     $$0$i75$i = 0;$$in125$i = $$in124$i;$2230 = $2205;
    } else {
     $2211 = ((($0)) + 16|0);
     $2212 = HEAP32[$2211>>2]|0;
     $2213 = ((($0)) + 28|0);
     $2214 = HEAP32[$2213>>2]|0;
     $2215 = ((($0)) + 40|0);
     $2216 = ((($0)) + 36|0);
     $2217 = HEAP32[$2216>>2]|0;
     $2218 = (ftCall_iiii($2212|0,$2214,$2215,$2217)|0);
     $2219 = ($2218|0)==(0);
     if ($2219) {
      HEAP32[$2208>>2] = 0;
      $2220 = ((($0)) + 41|0);
      HEAP8[$2215>>0] = 0;
      $$pre$phi$i72$iZ2D = $2220;$$sink$i$i73$i = $2220;$3087 = 0;
     } else {
      $2221 = (((($0)) + 40|0) + ($2218)|0);
      $$pre$i70$i187 = HEAP8[$2215>>0]|0;
      $$pre5$i71$i = ((($0)) + 41|0);
      $$pre$phi$i72$iZ2D = $$pre5$i71$i;$$sink$i$i73$i = $2221;$3087 = $$pre$i70$i187;
     }
     HEAP32[$22>>2] = $$sink$i$i73$i;
     HEAP32[$19>>2] = $$pre$phi$i72$iZ2D;
     $$0$i75$i = $3087;$$in125$i = $$pre$phi$i72$iZ2D;$2230 = $$sink$i$i73$i;
    }
   }
   $2222 = $$in125$i;
   $2223 = ($$0$i68119$i<<24>>24)==(1);
   L1247: do {
    if ($2223) {
     $2224 = $$0$i75$i | 8;
     $2225 = ($2224<<24>>24)==(9);
     if (!($2225)) {
      break L1236;
     }
     $2226 = ((($0)) + 16|0);
     $2227 = HEAP32[$2226>>2]|0;
     $2228 = ($2227|0)==(0|0);
     if ($2228) {
      label = 894;
     } else {
      $2229 = $2230;
      $2231 = (($2229) - ($2222))|0;
      $2232 = ($2231|0)<(4);
      if ($2232) {
       HEAP32[$19>>2] = $2230;
       $2233 = ((($0)) + 20|0);
       $2234 = HEAP32[$2233>>2]|0;
       $2235 = ((($0)) + 28|0);
       $2236 = HEAP32[$2235>>2]|0;
       $2237 = (4 - ($2231))|0;
       ftCall_vii($2234|0,$2236,$2237);
       $$pre$i188 = HEAP32[$19>>2]|0;
       $$pre121$i = HEAP32[$22>>2]|0;
       $2240 = $$pre$i188;$2241 = $$pre121$i;
      } else {
       label = 894;
      }
     }
     if ((label|0) == 894) {
      $2238 = ((($$in125$i)) + 4|0);
      HEAP32[$19>>2] = $2238;
      $2240 = $2238;$2241 = $2230;
     }
     $2239 = ($2240>>>0)<($2241>>>0);
     if ($2239) {
      $2242 = ((($2240)) + 1|0);
      HEAP32[$19>>2] = $2242;
      $2243 = HEAP8[$2240>>0]|0;
      $$0$i84$i = $2243;$$pre$i87$i = $2242;$2261 = $2241;
     } else {
      $2244 = ((($0)) + 32|0);
      $2245 = HEAP32[$2244>>2]|0;
      $2246 = ($2245|0)==(0);
      if ($2246) {
       break L1236;
      }
      $2247 = HEAP32[$2226>>2]|0;
      $2248 = ((($0)) + 28|0);
      $2249 = HEAP32[$2248>>2]|0;
      $2250 = ((($0)) + 40|0);
      $2251 = ((($0)) + 36|0);
      $2252 = HEAP32[$2251>>2]|0;
      $2253 = (ftCall_iiii($2247|0,$2249,$2250,$2252)|0);
      $2254 = ($2253|0)==(0);
      if ($2254) {
       HEAP32[$2244>>2] = 0;
       $2255 = ((($0)) + 41|0);
       HEAP8[$2250>>0] = 0;
       $$pre$phi$i81$iZ2D = $2255;$$sink$i$i82$i = $2255;$3088 = 0;
      } else {
       $2256 = (((($0)) + 40|0) + ($2253)|0);
       $$pre$i79$i = HEAP8[$2250>>0]|0;
       $$pre5$i80$i = ((($0)) + 41|0);
       $$pre$phi$i81$iZ2D = $$pre5$i80$i;$$sink$i$i82$i = $2256;$3088 = $$pre$i79$i;
      }
      HEAP32[$22>>2] = $$sink$i$i82$i;
      HEAP32[$19>>2] = $$pre$phi$i81$iZ2D;
      $$0$i84$i = $3088;$$pre$i87$i = $$pre$phi$i81$iZ2D;$2261 = $$sink$i$i82$i;
     }
     $2257 = $$pre$i87$i;
     switch ($$0$i84$i<<24>>24) {
     case 8: case 15: case 16: case 24: case 32:  {
      break;
     }
     default: {
      break L1236;
     }
     }
     $2258 = HEAP32[$2226>>2]|0;
     $2259 = ($2258|0)==(0|0);
     do {
      if (!($2259)) {
       $2260 = $2261;
       $2262 = (($2260) - ($2257))|0;
       $2263 = ($2262|0)<(4);
       if (!($2263)) {
        break;
       }
       HEAP32[$19>>2] = $2261;
       $2264 = ((($0)) + 20|0);
       $2265 = HEAP32[$2264>>2]|0;
       $2266 = ((($0)) + 28|0);
       $2267 = HEAP32[$2266>>2]|0;
       $2268 = (4 - ($2262))|0;
       ftCall_vii($2265|0,$2267,$2268);
       break L1247;
      }
     } while(0);
     $2269 = ((($$pre$i87$i)) + 4|0);
     HEAP32[$19>>2] = $2269;
    } else {
     switch ($$0$i75$i<<24>>24) {
     case 2: case 3: case 10: case 11:  {
      break;
     }
     default: {
      break L1236;
     }
     }
     $2270 = ((($0)) + 16|0);
     $2271 = HEAP32[$2270>>2]|0;
     $2272 = ($2271|0)==(0|0);
     if (!($2272)) {
      $2273 = $2230;
      $2274 = (($2273) - ($2222))|0;
      $2275 = ($2274|0)<(9);
      if ($2275) {
       HEAP32[$19>>2] = $2230;
       $2276 = ((($0)) + 20|0);
       $2277 = HEAP32[$2276>>2]|0;
       $2278 = ((($0)) + 28|0);
       $2279 = HEAP32[$2278>>2]|0;
       $2280 = (9 - ($2274))|0;
       ftCall_vii($2277|0,$2279,$2280);
       break;
      }
     }
     $2281 = ((($$in125$i)) + 9|0);
     HEAP32[$19>>2] = $2281;
    }
   } while(0);
   $2282 = HEAP32[$19>>2]|0;
   $2283 = HEAP32[$22>>2]|0;
   $2284 = ($2282>>>0)<($2283>>>0);
   if ($2284) {
    $2285 = ((($2282)) + 1|0);
    HEAP32[$19>>2] = $2285;
    $2286 = HEAP8[$2282>>0]|0;
    $$0$i$i$i197 = $2286;$2303 = $2285;$2304 = $2283;
   } else {
    $2287 = ((($0)) + 32|0);
    $2288 = HEAP32[$2287>>2]|0;
    $2289 = ($2288|0)==(0);
    if ($2289) {
     $$0$i$i$i197 = 0;$2303 = $2282;$2304 = $2283;
    } else {
     $2290 = ((($0)) + 16|0);
     $2291 = HEAP32[$2290>>2]|0;
     $2292 = ((($0)) + 28|0);
     $2293 = HEAP32[$2292>>2]|0;
     $2294 = ((($0)) + 40|0);
     $2295 = ((($0)) + 36|0);
     $2296 = HEAP32[$2295>>2]|0;
     $2297 = (ftCall_iiii($2291|0,$2293,$2294,$2296)|0);
     $2298 = ($2297|0)==(0);
     if ($2298) {
      HEAP32[$2287>>2] = 0;
      $2299 = ((($0)) + 41|0);
      HEAP8[$2294>>0] = 0;
      $$pre$phi$i$i$i194Z2D = $2299;$$sink$i$i$i$i195 = $2299;$3089 = 0;
     } else {
      $2300 = (((($0)) + 40|0) + ($2297)|0);
      $$pre$i$i$i192 = HEAP8[$2294>>0]|0;
      $$pre5$i$i$i193 = ((($0)) + 41|0);
      $$pre$phi$i$i$i194Z2D = $$pre5$i$i$i193;$$sink$i$i$i$i195 = $2300;$3089 = $$pre$i$i$i192;
     }
     HEAP32[$22>>2] = $$sink$i$i$i$i195;
     HEAP32[$19>>2] = $$pre$phi$i$i$i194Z2D;
     $$0$i$i$i197 = $3089;$2303 = $$pre$phi$i$i$i194Z2D;$2304 = $$sink$i$i$i$i195;
    }
   }
   $2301 = $$0$i$i$i197&255;
   $2302 = ($2303>>>0)<($2304>>>0);
   if ($2302) {
    $2305 = ((($2303)) + 1|0);
    HEAP32[$19>>2] = $2305;
    $2306 = HEAP8[$2303>>0]|0;
    $$0$i8$i$i204 = $2306;$2326 = $2305;$2327 = $2304;
   } else {
    $2307 = ((($0)) + 32|0);
    $2308 = HEAP32[$2307>>2]|0;
    $2309 = ($2308|0)==(0);
    if ($2309) {
     $$0$i8$i$i204 = 0;$2326 = $2303;$2327 = $2304;
    } else {
     $2310 = ((($0)) + 16|0);
     $2311 = HEAP32[$2310>>2]|0;
     $2312 = ((($0)) + 28|0);
     $2313 = HEAP32[$2312>>2]|0;
     $2314 = ((($0)) + 40|0);
     $2315 = ((($0)) + 36|0);
     $2316 = HEAP32[$2315>>2]|0;
     $2317 = (ftCall_iiii($2311|0,$2313,$2314,$2316)|0);
     $2318 = ($2317|0)==(0);
     if ($2318) {
      HEAP32[$2307>>2] = 0;
      $2319 = ((($0)) + 41|0);
      HEAP8[$2314>>0] = 0;
      $$pre$phi$i5$i$i201Z2D = $2319;$$sink$i$i6$i$i202 = $2319;$3090 = 0;
     } else {
      $2320 = (((($0)) + 40|0) + ($2317)|0);
      $$pre$i3$i$i199 = HEAP8[$2314>>0]|0;
      $$pre5$i4$i$i200 = ((($0)) + 41|0);
      $$pre$phi$i5$i$i201Z2D = $$pre5$i4$i$i200;$$sink$i$i6$i$i202 = $2320;$3090 = $$pre$i3$i$i199;
     }
     HEAP32[$22>>2] = $$sink$i$i6$i$i202;
     HEAP32[$19>>2] = $$pre$phi$i5$i$i201Z2D;
     $$0$i8$i$i204 = $3090;$2326 = $$pre$phi$i5$i$i201Z2D;$2327 = $$sink$i$i6$i$i202;
    }
   }
   $2321 = $$0$i8$i$i204&255;
   $2322 = $2321 << 8;
   $2323 = $2322 | $2301;
   $2324 = ($2323|0)==(0);
   if (!($2324)) {
    $2325 = ($2326>>>0)<($2327>>>0);
    if ($2325) {
     $2328 = ((($2326)) + 1|0);
     HEAP32[$19>>2] = $2328;
     $2329 = HEAP8[$2326>>0]|0;
     $$0$i$i103$i = $2329;$2346 = $2328;$2347 = $2327;
    } else {
     $2330 = ((($0)) + 32|0);
     $2331 = HEAP32[$2330>>2]|0;
     $2332 = ($2331|0)==(0);
     if ($2332) {
      $$0$i$i103$i = 0;$2346 = $2326;$2347 = $2327;
     } else {
      $2333 = ((($0)) + 16|0);
      $2334 = HEAP32[$2333>>2]|0;
      $2335 = ((($0)) + 28|0);
      $2336 = HEAP32[$2335>>2]|0;
      $2337 = ((($0)) + 40|0);
      $2338 = ((($0)) + 36|0);
      $2339 = HEAP32[$2338>>2]|0;
      $2340 = (ftCall_iiii($2334|0,$2336,$2337,$2339)|0);
      $2341 = ($2340|0)==(0);
      if ($2341) {
       HEAP32[$2330>>2] = 0;
       $2342 = ((($0)) + 41|0);
       HEAP8[$2337>>0] = 0;
       $$pre$phi$i$i100$iZ2D = $2342;$$sink$i$i$i101$i = $2342;$3091 = 0;
      } else {
       $2343 = (((($0)) + 40|0) + ($2340)|0);
       $$pre$i$i98$i = HEAP8[$2337>>0]|0;
       $$pre5$i$i99$i = ((($0)) + 41|0);
       $$pre$phi$i$i100$iZ2D = $$pre5$i$i99$i;$$sink$i$i$i101$i = $2343;$3091 = $$pre$i$i98$i;
      }
      HEAP32[$22>>2] = $$sink$i$i$i101$i;
      HEAP32[$19>>2] = $$pre$phi$i$i100$iZ2D;
      $$0$i$i103$i = $3091;$2346 = $$pre$phi$i$i100$iZ2D;$2347 = $$sink$i$i$i101$i;
     }
    }
    $2344 = $$0$i$i103$i&255;
    $2345 = ($2346>>>0)<($2347>>>0);
    do {
     if ($2345) {
      $2348 = ((($2346)) + 1|0);
      HEAP32[$19>>2] = $2348;
      $2349 = HEAP8[$2346>>0]|0;
      $$0$i8$i110$i = $2349;$2369 = $2348;$2370 = $2347;
     } else {
      $2350 = ((($0)) + 32|0);
      $2351 = HEAP32[$2350>>2]|0;
      $2352 = ($2351|0)==(0);
      if ($2352) {
       $$0$i8$i110$i = 0;$2369 = $2346;$2370 = $2347;
       break;
      }
      $2353 = ((($0)) + 16|0);
      $2354 = HEAP32[$2353>>2]|0;
      $2355 = ((($0)) + 28|0);
      $2356 = HEAP32[$2355>>2]|0;
      $2357 = ((($0)) + 40|0);
      $2358 = ((($0)) + 36|0);
      $2359 = HEAP32[$2358>>2]|0;
      $2360 = (ftCall_iiii($2354|0,$2356,$2357,$2359)|0);
      $2361 = ($2360|0)==(0);
      if ($2361) {
       HEAP32[$2350>>2] = 0;
       $2362 = ((($0)) + 41|0);
       HEAP8[$2357>>0] = 0;
       $$pre$phi$i5$i107$iZ2D = $2362;$$sink$i$i6$i108$i = $2362;$3092 = 0;
      } else {
       $2363 = (((($0)) + 40|0) + ($2360)|0);
       $$pre$i3$i105$i = HEAP8[$2357>>0]|0;
       $$pre5$i4$i106$i = ((($0)) + 41|0);
       $$pre$phi$i5$i107$iZ2D = $$pre5$i4$i106$i;$$sink$i$i6$i108$i = $2363;$3092 = $$pre$i3$i105$i;
      }
      HEAP32[$22>>2] = $$sink$i$i6$i108$i;
      HEAP32[$19>>2] = $$pre$phi$i5$i107$iZ2D;
      $$0$i8$i110$i = $3092;$2369 = $$pre$phi$i5$i107$iZ2D;$2370 = $$sink$i$i6$i108$i;
     }
    } while(0);
    $2364 = $$0$i8$i110$i&255;
    $2365 = $2364 << 8;
    $2366 = $2365 | $2344;
    $2367 = ($2366|0)==(0);
    if (!($2367)) {
     $2368 = ($2369>>>0)<($2370>>>0);
     do {
      if ($2368) {
       $2371 = ((($2369)) + 1|0);
       HEAP32[$19>>2] = $2371;
       $2372 = HEAP8[$2369>>0]|0;
       $$0$i117$i = $2372;
      } else {
       $2373 = ((($0)) + 32|0);
       $2374 = HEAP32[$2373>>2]|0;
       $2375 = ($2374|0)==(0);
       if ($2375) {
        $$0$i117$i = 0;
        break;
       }
       $2376 = ((($0)) + 16|0);
       $2377 = HEAP32[$2376>>2]|0;
       $2378 = ((($0)) + 28|0);
       $2379 = HEAP32[$2378>>2]|0;
       $2380 = ((($0)) + 40|0);
       $2381 = ((($0)) + 36|0);
       $2382 = HEAP32[$2381>>2]|0;
       $2383 = (ftCall_iiii($2377|0,$2379,$2380,$2382)|0);
       $2384 = ($2383|0)==(0);
       if ($2384) {
        HEAP32[$2373>>2] = 0;
        $2385 = ((($0)) + 41|0);
        HEAP8[$2380>>0] = 0;
        $$pre$phi$i114$iZ2D = $2385;$$sink$i$i115$i = $2385;$3093 = 0;
       } else {
        $2386 = (((($0)) + 40|0) + ($2383)|0);
        $$pre$i112$i = HEAP8[$2380>>0]|0;
        $$pre5$i113$i = ((($0)) + 41|0);
        $$pre$phi$i114$iZ2D = $$pre5$i113$i;$$sink$i$i115$i = $2386;$3093 = $$pre$i112$i;
       }
       HEAP32[$22>>2] = $$sink$i$i115$i;
       HEAP32[$19>>2] = $$pre$phi$i114$iZ2D;
       $$0$i117$i = $3093;
      }
     } while(0);
     if ($2223) {
      switch ($$0$i117$i<<24>>24) {
      case 8: case 16:  {
       break;
      }
      default: {
       break L1236;
      }
      }
     } else {
      switch ($$0$i117$i<<24>>24) {
      case 8: case 15: case 16: case 24: case 32:  {
       break;
      }
      default: {
       break L1236;
      }
      }
     }
     $2387 = HEAP32[$17>>2]|0;
     HEAP32[$19>>2] = $2387;
     $2388 = HEAP32[$20>>2]|0;
     HEAP32[$22>>2] = $2388;
     $$cast = $2387;
     $$cast267 = $2388;
     $2389 = ($$cast>>>0)<($$cast267>>>0);
     do {
      if ($2389) {
       $2390 = ((($$cast)) + 1|0);
       HEAP32[$19>>2] = $2390;
       $2391 = HEAP8[$$cast>>0]|0;
       $$0$i$i213 = $2391;$$in$i212 = $2390;$2408 = $$cast267;
      } else {
       $2392 = ((($0)) + 32|0);
       $2393 = HEAP32[$2392>>2]|0;
       $2394 = ($2393|0)==(0);
       if ($2394) {
        $$0$i$i213 = 0;$$in$i212 = $$cast;$2408 = $$cast267;
        break;
       }
       $2395 = ((($0)) + 16|0);
       $2396 = HEAP32[$2395>>2]|0;
       $2397 = ((($0)) + 28|0);
       $2398 = HEAP32[$2397>>2]|0;
       $2399 = ((($0)) + 40|0);
       $2400 = ((($0)) + 36|0);
       $2401 = HEAP32[$2400>>2]|0;
       $2402 = (ftCall_iiii($2396|0,$2398,$2399,$2401)|0);
       $2403 = ($2402|0)==(0);
       if ($2403) {
        HEAP32[$2392>>2] = 0;
        $2404 = ((($0)) + 41|0);
        HEAP8[$2399>>0] = 0;
        $$pre$phi$i$i209Z2D = $2404;$$sink$i$i$i210 = $2404;$3094 = 0;
       } else {
        $2405 = (((($0)) + 40|0) + ($2402)|0);
        $$pre$i$i207 = HEAP8[$2399>>0]|0;
        $$pre5$i$i208 = ((($0)) + 41|0);
        $$pre$phi$i$i209Z2D = $$pre5$i$i208;$$sink$i$i$i210 = $2405;$3094 = $$pre$i$i207;
       }
       HEAP32[$22>>2] = $$sink$i$i$i210;
       HEAP32[$19>>2] = $$pre$phi$i$i209Z2D;
       $$0$i$i213 = $3094;$$in$i212 = $$pre$phi$i$i209Z2D;$2408 = $$sink$i$i$i210;
      }
     } while(0);
     $2406 = $$0$i$i213&255;
     $2407 = ($$in$i212>>>0)<($2408>>>0);
     do {
      if ($2407) {
       $2409 = ((($$in$i212)) + 1|0);
       HEAP32[$19>>2] = $2409;
       $2410 = HEAP8[$$in$i212>>0]|0;
       $$0$i8$i = $2410;$$in248$i = $2409;$2426 = $2408;
      } else {
       $2411 = ((($0)) + 32|0);
       $2412 = HEAP32[$2411>>2]|0;
       $2413 = ($2412|0)==(0);
       if ($2413) {
        $$0$i8$i = 0;$$in248$i = $$in$i212;$2426 = $2408;
        break;
       }
       $2414 = ((($0)) + 16|0);
       $2415 = HEAP32[$2414>>2]|0;
       $2416 = ((($0)) + 28|0);
       $2417 = HEAP32[$2416>>2]|0;
       $2418 = ((($0)) + 40|0);
       $2419 = ((($0)) + 36|0);
       $2420 = HEAP32[$2419>>2]|0;
       $2421 = (ftCall_iiii($2415|0,$2417,$2418,$2420)|0);
       $2422 = ($2421|0)==(0);
       if ($2422) {
        HEAP32[$2411>>2] = 0;
        $2423 = ((($0)) + 41|0);
        HEAP8[$2418>>0] = 0;
        $$pre$phi$i5$iZ2D = $2423;$$sink$i$i6$i = $2423;$3095 = 0;
       } else {
        $2424 = (((($0)) + 40|0) + ($2421)|0);
        $$pre$i3$i215 = HEAP8[$2418>>0]|0;
        $$pre5$i4$i = ((($0)) + 41|0);
        $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $2424;$3095 = $$pre$i3$i215;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i;
       HEAP32[$19>>2] = $$pre$phi$i5$iZ2D;
       $$0$i8$i = $3095;$$in248$i = $$pre$phi$i5$iZ2D;$2426 = $$sink$i$i6$i;
      }
     } while(0);
     $2425 = ($$in248$i>>>0)<($2426>>>0);
     do {
      if ($2425) {
       $2427 = ((($$in248$i)) + 1|0);
       HEAP32[$19>>2] = $2427;
       $2428 = HEAP8[$$in248$i>>0]|0;
       $$0$i15$i = $2428;$$in249$i = $2427;$2445 = $2426;
      } else {
       $2429 = ((($0)) + 32|0);
       $2430 = HEAP32[$2429>>2]|0;
       $2431 = ($2430|0)==(0);
       if ($2431) {
        $$0$i15$i = 0;$$in249$i = $$in248$i;$2445 = $2426;
        break;
       }
       $2432 = ((($0)) + 16|0);
       $2433 = HEAP32[$2432>>2]|0;
       $2434 = ((($0)) + 28|0);
       $2435 = HEAP32[$2434>>2]|0;
       $2436 = ((($0)) + 40|0);
       $2437 = ((($0)) + 36|0);
       $2438 = HEAP32[$2437>>2]|0;
       $2439 = (ftCall_iiii($2433|0,$2435,$2436,$2438)|0);
       $2440 = ($2439|0)==(0);
       if ($2440) {
        HEAP32[$2429>>2] = 0;
        $2441 = ((($0)) + 41|0);
        HEAP8[$2436>>0] = 0;
        $$pre$phi$i12$iZ2D = $2441;$$sink$i$i13$i = $2441;$3096 = 0;
       } else {
        $2442 = (((($0)) + 40|0) + ($2439)|0);
        $$pre$i10$i = HEAP8[$2436>>0]|0;
        $$pre5$i11$i = ((($0)) + 41|0);
        $$pre$phi$i12$iZ2D = $$pre5$i11$i;$$sink$i$i13$i = $2442;$3096 = $$pre$i10$i;
       }
       HEAP32[$22>>2] = $$sink$i$i13$i;
       HEAP32[$19>>2] = $$pre$phi$i12$iZ2D;
       $$0$i15$i = $3096;$$in249$i = $$pre$phi$i12$iZ2D;$2445 = $$sink$i$i13$i;
      }
     } while(0);
     $2443 = $$0$i15$i&255;
     $2444 = ($$in249$i>>>0)<($2445>>>0);
     do {
      if ($2444) {
       $2446 = ((($$in249$i)) + 1|0);
       HEAP32[$19>>2] = $2446;
       $2447 = HEAP8[$$in249$i>>0]|0;
       $$0$i$i$i221 = $2447;$$in250$i = $2446;$2464 = $2445;
      } else {
       $2448 = ((($0)) + 32|0);
       $2449 = HEAP32[$2448>>2]|0;
       $2450 = ($2449|0)==(0);
       if ($2450) {
        $$0$i$i$i221 = 0;$$in250$i = $$in249$i;$2464 = $2445;
        break;
       }
       $2451 = ((($0)) + 16|0);
       $2452 = HEAP32[$2451>>2]|0;
       $2453 = ((($0)) + 28|0);
       $2454 = HEAP32[$2453>>2]|0;
       $2455 = ((($0)) + 40|0);
       $2456 = ((($0)) + 36|0);
       $2457 = HEAP32[$2456>>2]|0;
       $2458 = (ftCall_iiii($2452|0,$2454,$2455,$2457)|0);
       $2459 = ($2458|0)==(0);
       if ($2459) {
        HEAP32[$2448>>2] = 0;
        $2460 = ((($0)) + 41|0);
        HEAP8[$2455>>0] = 0;
        $$pre$phi$i$i$i218Z2D = $2460;$$sink$i$i$i$i219 = $2460;$3097 = 0;
       } else {
        $2461 = (((($0)) + 40|0) + ($2458)|0);
        $$pre$i$i$i216 = HEAP8[$2455>>0]|0;
        $$pre5$i$i$i217 = ((($0)) + 41|0);
        $$pre$phi$i$i$i218Z2D = $$pre5$i$i$i217;$$sink$i$i$i$i219 = $2461;$3097 = $$pre$i$i$i216;
       }
       HEAP32[$22>>2] = $$sink$i$i$i$i219;
       HEAP32[$19>>2] = $$pre$phi$i$i$i218Z2D;
       $$0$i$i$i221 = $3097;$$in250$i = $$pre$phi$i$i$i218Z2D;$2464 = $$sink$i$i$i$i219;
      }
     } while(0);
     $2462 = $$0$i$i$i221&255;
     $2463 = ($$in250$i>>>0)<($2464>>>0);
     do {
      if ($2463) {
       $2465 = ((($$in250$i)) + 1|0);
       HEAP32[$19>>2] = $2465;
       $2466 = HEAP8[$$in250$i>>0]|0;
       $$0$i8$i$i228 = $2466;$$in251$i = $2465;$2485 = $2464;
      } else {
       $2467 = ((($0)) + 32|0);
       $2468 = HEAP32[$2467>>2]|0;
       $2469 = ($2468|0)==(0);
       if ($2469) {
        $$0$i8$i$i228 = 0;$$in251$i = $$in250$i;$2485 = $2464;
        break;
       }
       $2470 = ((($0)) + 16|0);
       $2471 = HEAP32[$2470>>2]|0;
       $2472 = ((($0)) + 28|0);
       $2473 = HEAP32[$2472>>2]|0;
       $2474 = ((($0)) + 40|0);
       $2475 = ((($0)) + 36|0);
       $2476 = HEAP32[$2475>>2]|0;
       $2477 = (ftCall_iiii($2471|0,$2473,$2474,$2476)|0);
       $2478 = ($2477|0)==(0);
       if ($2478) {
        HEAP32[$2467>>2] = 0;
        $2479 = ((($0)) + 41|0);
        HEAP8[$2474>>0] = 0;
        $$pre$phi$i5$i$i225Z2D = $2479;$$sink$i$i6$i$i226 = $2479;$3098 = 0;
       } else {
        $2480 = (((($0)) + 40|0) + ($2477)|0);
        $$pre$i3$i$i223 = HEAP8[$2474>>0]|0;
        $$pre5$i4$i$i224 = ((($0)) + 41|0);
        $$pre$phi$i5$i$i225Z2D = $$pre5$i4$i$i224;$$sink$i$i6$i$i226 = $2480;$3098 = $$pre$i3$i$i223;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i$i226;
       HEAP32[$19>>2] = $$pre$phi$i5$i$i225Z2D;
       $$0$i8$i$i228 = $3098;$$in251$i = $$pre$phi$i5$i$i225Z2D;$2485 = $$sink$i$i6$i$i226;
      }
     } while(0);
     $2481 = $$0$i8$i$i228&255;
     $2482 = $2481 << 8;
     $2483 = $2482 | $2462;
     $2484 = ($$in251$i>>>0)<($2485>>>0);
     do {
      if ($2484) {
       $2486 = ((($$in251$i)) + 1|0);
       HEAP32[$19>>2] = $2486;
       $2487 = HEAP8[$$in251$i>>0]|0;
       $$0$i$i22$i = $2487;$$in252$i = $2486;$2504 = $2485;
      } else {
       $2488 = ((($0)) + 32|0);
       $2489 = HEAP32[$2488>>2]|0;
       $2490 = ($2489|0)==(0);
       if ($2490) {
        $$0$i$i22$i = 0;$$in252$i = $$in251$i;$2504 = $2485;
        break;
       }
       $2491 = ((($0)) + 16|0);
       $2492 = HEAP32[$2491>>2]|0;
       $2493 = ((($0)) + 28|0);
       $2494 = HEAP32[$2493>>2]|0;
       $2495 = ((($0)) + 40|0);
       $2496 = ((($0)) + 36|0);
       $2497 = HEAP32[$2496>>2]|0;
       $2498 = (ftCall_iiii($2492|0,$2494,$2495,$2497)|0);
       $2499 = ($2498|0)==(0);
       if ($2499) {
        HEAP32[$2488>>2] = 0;
        $2500 = ((($0)) + 41|0);
        HEAP8[$2495>>0] = 0;
        $$pre$phi$i$i19$iZ2D = $2500;$$sink$i$i$i20$i = $2500;$3099 = 0;
       } else {
        $2501 = (((($0)) + 40|0) + ($2498)|0);
        $$pre$i$i17$i = HEAP8[$2495>>0]|0;
        $$pre5$i$i18$i = ((($0)) + 41|0);
        $$pre$phi$i$i19$iZ2D = $$pre5$i$i18$i;$$sink$i$i$i20$i = $2501;$3099 = $$pre$i$i17$i;
       }
       HEAP32[$22>>2] = $$sink$i$i$i20$i;
       HEAP32[$19>>2] = $$pre$phi$i$i19$iZ2D;
       $$0$i$i22$i = $3099;$$in252$i = $$pre$phi$i$i19$iZ2D;$2504 = $$sink$i$i$i20$i;
      }
     } while(0);
     $2502 = $$0$i$i22$i&255;
     $2503 = ($$in252$i>>>0)<($2504>>>0);
     do {
      if ($2503) {
       $2505 = ((($$in252$i)) + 1|0);
       HEAP32[$19>>2] = $2505;
       $2506 = HEAP8[$$in252$i>>0]|0;
       $$0$i8$i29$i = $2506;$$in253$i = $2505;$2525 = $2504;
      } else {
       $2507 = ((($0)) + 32|0);
       $2508 = HEAP32[$2507>>2]|0;
       $2509 = ($2508|0)==(0);
       if ($2509) {
        $$0$i8$i29$i = 0;$$in253$i = $$in252$i;$2525 = $2504;
        break;
       }
       $2510 = ((($0)) + 16|0);
       $2511 = HEAP32[$2510>>2]|0;
       $2512 = ((($0)) + 28|0);
       $2513 = HEAP32[$2512>>2]|0;
       $2514 = ((($0)) + 40|0);
       $2515 = ((($0)) + 36|0);
       $2516 = HEAP32[$2515>>2]|0;
       $2517 = (ftCall_iiii($2511|0,$2513,$2514,$2516)|0);
       $2518 = ($2517|0)==(0);
       if ($2518) {
        HEAP32[$2507>>2] = 0;
        $2519 = ((($0)) + 41|0);
        HEAP8[$2514>>0] = 0;
        $$pre$phi$i5$i26$iZ2D = $2519;$$sink$i$i6$i27$i = $2519;$3100 = 0;
       } else {
        $2520 = (((($0)) + 40|0) + ($2517)|0);
        $$pre$i3$i24$i = HEAP8[$2514>>0]|0;
        $$pre5$i4$i25$i = ((($0)) + 41|0);
        $$pre$phi$i5$i26$iZ2D = $$pre5$i4$i25$i;$$sink$i$i6$i27$i = $2520;$3100 = $$pre$i3$i24$i;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i27$i;
       HEAP32[$19>>2] = $$pre$phi$i5$i26$iZ2D;
       $$0$i8$i29$i = $3100;$$in253$i = $$pre$phi$i5$i26$iZ2D;$2525 = $$sink$i$i6$i27$i;
      }
     } while(0);
     $2521 = $$0$i8$i29$i&255;
     $2522 = $2521 << 8;
     $2523 = $2522 | $2502;
     $2524 = ($$in253$i>>>0)<($2525>>>0);
     do {
      if ($2524) {
       $2526 = ((($$in253$i)) + 1|0);
       HEAP32[$19>>2] = $2526;
       $2527 = HEAP8[$$in253$i>>0]|0;
       $$0$i36$i = $2527;$$in254$i = $2526;$2544 = $2525;
      } else {
       $2528 = ((($0)) + 32|0);
       $2529 = HEAP32[$2528>>2]|0;
       $2530 = ($2529|0)==(0);
       if ($2530) {
        $$0$i36$i = 0;$$in254$i = $$in253$i;$2544 = $2525;
        break;
       }
       $2531 = ((($0)) + 16|0);
       $2532 = HEAP32[$2531>>2]|0;
       $2533 = ((($0)) + 28|0);
       $2534 = HEAP32[$2533>>2]|0;
       $2535 = ((($0)) + 40|0);
       $2536 = ((($0)) + 36|0);
       $2537 = HEAP32[$2536>>2]|0;
       $2538 = (ftCall_iiii($2532|0,$2534,$2535,$2537)|0);
       $2539 = ($2538|0)==(0);
       if ($2539) {
        HEAP32[$2528>>2] = 0;
        $2540 = ((($0)) + 41|0);
        HEAP8[$2535>>0] = 0;
        $$pre$phi$i33$iZ2D = $2540;$$sink$i$i34$i = $2540;$3101 = 0;
       } else {
        $2541 = (((($0)) + 40|0) + ($2538)|0);
        $$pre$i31$i = HEAP8[$2535>>0]|0;
        $$pre5$i32$i = ((($0)) + 41|0);
        $$pre$phi$i33$iZ2D = $$pre5$i32$i;$$sink$i$i34$i = $2541;$3101 = $$pre$i31$i;
       }
       HEAP32[$22>>2] = $$sink$i$i34$i;
       HEAP32[$19>>2] = $$pre$phi$i33$iZ2D;
       $$0$i36$i = $3101;$$in254$i = $$pre$phi$i33$iZ2D;$2544 = $$sink$i$i34$i;
      }
     } while(0);
     $2542 = $$0$i36$i&255;
     $2543 = ($$in254$i>>>0)<($2544>>>0);
     do {
      if ($2543) {
       $2545 = ((($$in254$i)) + 1|0);
       $$ph438 = $2544;$$pre$phi$i$i40$i$sinkZ2D = $2545;
       label = 1015;
      } else {
       $2546 = ((($0)) + 32|0);
       $2547 = HEAP32[$2546>>2]|0;
       $2548 = ($2547|0)==(0);
       if ($2548) {
        $$in255$i = $$in254$i;$2561 = $2544;
        break;
       }
       $2549 = ((($0)) + 16|0);
       $2550 = HEAP32[$2549>>2]|0;
       $2551 = ((($0)) + 28|0);
       $2552 = HEAP32[$2551>>2]|0;
       $2553 = ((($0)) + 40|0);
       $2554 = ((($0)) + 36|0);
       $2555 = HEAP32[$2554>>2]|0;
       $2556 = (ftCall_iiii($2550|0,$2552,$2553,$2555)|0);
       $2557 = ($2556|0)==(0);
       if ($2557) {
        HEAP32[$2546>>2] = 0;
        $2558 = ((($0)) + 41|0);
        HEAP8[$2553>>0] = 0;
        $$pre$phi$i$i40$iZ2D = $2558;$$sink$i$i$i41$i = $2558;
       } else {
        $2559 = (((($0)) + 40|0) + ($2556)|0);
        $$pre5$i$i39$i = ((($0)) + 41|0);
        $$pre$phi$i$i40$iZ2D = $$pre5$i$i39$i;$$sink$i$i$i41$i = $2559;
       }
       HEAP32[$22>>2] = $$sink$i$i$i41$i;
       $$ph438 = $$sink$i$i$i41$i;$$pre$phi$i$i40$i$sinkZ2D = $$pre$phi$i$i40$iZ2D;
       label = 1015;
      }
     } while(0);
     if ((label|0) == 1015) {
      HEAP32[$19>>2] = $$pre$phi$i$i40$i$sinkZ2D;
      $$in255$i = $$pre$phi$i$i40$i$sinkZ2D;$2561 = $$ph438;
     }
     $2560 = ($$in255$i>>>0)<($2561>>>0);
     do {
      if ($2560) {
       $2562 = ((($$in255$i)) + 1|0);
       $$ph439 = $2561;$$pre$phi$i5$i47$i$sinkZ2D = $2562;
       label = 1023;
      } else {
       $2563 = ((($0)) + 32|0);
       $2564 = HEAP32[$2563>>2]|0;
       $2565 = ($2564|0)==(0);
       if ($2565) {
        $$in256$i = $$in255$i;$2578 = $2561;
        break;
       }
       $2566 = ((($0)) + 16|0);
       $2567 = HEAP32[$2566>>2]|0;
       $2568 = ((($0)) + 28|0);
       $2569 = HEAP32[$2568>>2]|0;
       $2570 = ((($0)) + 40|0);
       $2571 = ((($0)) + 36|0);
       $2572 = HEAP32[$2571>>2]|0;
       $2573 = (ftCall_iiii($2567|0,$2569,$2570,$2572)|0);
       $2574 = ($2573|0)==(0);
       if ($2574) {
        HEAP32[$2563>>2] = 0;
        $2575 = ((($0)) + 41|0);
        HEAP8[$2570>>0] = 0;
        $$pre$phi$i5$i47$iZ2D = $2575;$$sink$i$i6$i48$i = $2575;
       } else {
        $2576 = (((($0)) + 40|0) + ($2573)|0);
        $$pre5$i4$i46$i = ((($0)) + 41|0);
        $$pre$phi$i5$i47$iZ2D = $$pre5$i4$i46$i;$$sink$i$i6$i48$i = $2576;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i48$i;
       $$ph439 = $$sink$i$i6$i48$i;$$pre$phi$i5$i47$i$sinkZ2D = $$pre$phi$i5$i47$iZ2D;
       label = 1023;
      }
     } while(0);
     if ((label|0) == 1023) {
      HEAP32[$19>>2] = $$pre$phi$i5$i47$i$sinkZ2D;
      $$in256$i = $$pre$phi$i5$i47$i$sinkZ2D;$2578 = $$ph439;
     }
     $2577 = ($$in256$i>>>0)<($2578>>>0);
     do {
      if ($2577) {
       $2579 = ((($$in256$i)) + 1|0);
       $$ph440 = $2578;$$pre$phi$i$i54$i$sinkZ2D = $2579;
       label = 1031;
      } else {
       $2580 = ((($0)) + 32|0);
       $2581 = HEAP32[$2580>>2]|0;
       $2582 = ($2581|0)==(0);
       if ($2582) {
        $$in257$i = $$in256$i;$2595 = $2578;
        break;
       }
       $2583 = ((($0)) + 16|0);
       $2584 = HEAP32[$2583>>2]|0;
       $2585 = ((($0)) + 28|0);
       $2586 = HEAP32[$2585>>2]|0;
       $2587 = ((($0)) + 40|0);
       $2588 = ((($0)) + 36|0);
       $2589 = HEAP32[$2588>>2]|0;
       $2590 = (ftCall_iiii($2584|0,$2586,$2587,$2589)|0);
       $2591 = ($2590|0)==(0);
       if ($2591) {
        HEAP32[$2580>>2] = 0;
        $2592 = ((($0)) + 41|0);
        HEAP8[$2587>>0] = 0;
        $$pre$phi$i$i54$iZ2D = $2592;$$sink$i$i$i55$i = $2592;
       } else {
        $2593 = (((($0)) + 40|0) + ($2590)|0);
        $$pre5$i$i53$i = ((($0)) + 41|0);
        $$pre$phi$i$i54$iZ2D = $$pre5$i$i53$i;$$sink$i$i$i55$i = $2593;
       }
       HEAP32[$22>>2] = $$sink$i$i$i55$i;
       $$ph440 = $$sink$i$i$i55$i;$$pre$phi$i$i54$i$sinkZ2D = $$pre$phi$i$i54$iZ2D;
       label = 1031;
      }
     } while(0);
     if ((label|0) == 1031) {
      HEAP32[$19>>2] = $$pre$phi$i$i54$i$sinkZ2D;
      $$in257$i = $$pre$phi$i$i54$i$sinkZ2D;$2595 = $$ph440;
     }
     $2594 = ($$in257$i>>>0)<($2595>>>0);
     do {
      if ($2594) {
       $2596 = ((($$in257$i)) + 1|0);
       $$ph441 = $2595;$$pre$phi$i5$i61$i$sinkZ2D = $2596;
       label = 1039;
      } else {
       $2597 = ((($0)) + 32|0);
       $2598 = HEAP32[$2597>>2]|0;
       $2599 = ($2598|0)==(0);
       if ($2599) {
        $$in258$i = $$in257$i;$2612 = $2595;
        break;
       }
       $2600 = ((($0)) + 16|0);
       $2601 = HEAP32[$2600>>2]|0;
       $2602 = ((($0)) + 28|0);
       $2603 = HEAP32[$2602>>2]|0;
       $2604 = ((($0)) + 40|0);
       $2605 = ((($0)) + 36|0);
       $2606 = HEAP32[$2605>>2]|0;
       $2607 = (ftCall_iiii($2601|0,$2603,$2604,$2606)|0);
       $2608 = ($2607|0)==(0);
       if ($2608) {
        HEAP32[$2597>>2] = 0;
        $2609 = ((($0)) + 41|0);
        HEAP8[$2604>>0] = 0;
        $$pre$phi$i5$i61$iZ2D = $2609;$$sink$i$i6$i62$i = $2609;
       } else {
        $2610 = (((($0)) + 40|0) + ($2607)|0);
        $$pre5$i4$i60$i = ((($0)) + 41|0);
        $$pre$phi$i5$i61$iZ2D = $$pre5$i4$i60$i;$$sink$i$i6$i62$i = $2610;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i62$i;
       $$ph441 = $$sink$i$i6$i62$i;$$pre$phi$i5$i61$i$sinkZ2D = $$pre$phi$i5$i61$iZ2D;
       label = 1039;
      }
     } while(0);
     if ((label|0) == 1039) {
      HEAP32[$19>>2] = $$pre$phi$i5$i61$i$sinkZ2D;
      $$in258$i = $$pre$phi$i5$i61$i$sinkZ2D;$2612 = $$ph441;
     }
     $2611 = ($$in258$i>>>0)<($2612>>>0);
     do {
      if ($2611) {
       $2613 = ((($$in258$i)) + 1|0);
       HEAP32[$19>>2] = $2613;
       $2614 = HEAP8[$$in258$i>>0]|0;
       $$0$i$i71$i = $2614;$$in259$i = $2613;$2631 = $2612;
      } else {
       $2615 = ((($0)) + 32|0);
       $2616 = HEAP32[$2615>>2]|0;
       $2617 = ($2616|0)==(0);
       if ($2617) {
        $$0$i$i71$i = 0;$$in259$i = $$in258$i;$2631 = $2612;
        break;
       }
       $2618 = ((($0)) + 16|0);
       $2619 = HEAP32[$2618>>2]|0;
       $2620 = ((($0)) + 28|0);
       $2621 = HEAP32[$2620>>2]|0;
       $2622 = ((($0)) + 40|0);
       $2623 = ((($0)) + 36|0);
       $2624 = HEAP32[$2623>>2]|0;
       $2625 = (ftCall_iiii($2619|0,$2621,$2622,$2624)|0);
       $2626 = ($2625|0)==(0);
       if ($2626) {
        HEAP32[$2615>>2] = 0;
        $2627 = ((($0)) + 41|0);
        HEAP8[$2622>>0] = 0;
        $$pre$phi$i$i68$iZ2D = $2627;$$sink$i$i$i69$i = $2627;$3102 = 0;
       } else {
        $2628 = (((($0)) + 40|0) + ($2625)|0);
        $$pre$i$i66$i = HEAP8[$2622>>0]|0;
        $$pre5$i$i67$i = ((($0)) + 41|0);
        $$pre$phi$i$i68$iZ2D = $$pre5$i$i67$i;$$sink$i$i$i69$i = $2628;$3102 = $$pre$i$i66$i;
       }
       HEAP32[$22>>2] = $$sink$i$i$i69$i;
       HEAP32[$19>>2] = $$pre$phi$i$i68$iZ2D;
       $$0$i$i71$i = $3102;$$in259$i = $$pre$phi$i$i68$iZ2D;$2631 = $$sink$i$i$i69$i;
      }
     } while(0);
     $2629 = $$0$i$i71$i&255;
     $2630 = ($$in259$i>>>0)<($2631>>>0);
     do {
      if ($2630) {
       $2632 = ((($$in259$i)) + 1|0);
       HEAP32[$19>>2] = $2632;
       $2633 = HEAP8[$$in259$i>>0]|0;
       $$0$i8$i78$i = $2633;$$in260$i = $2632;$2652 = $2631;
      } else {
       $2634 = ((($0)) + 32|0);
       $2635 = HEAP32[$2634>>2]|0;
       $2636 = ($2635|0)==(0);
       if ($2636) {
        $$0$i8$i78$i = 0;$$in260$i = $$in259$i;$2652 = $2631;
        break;
       }
       $2637 = ((($0)) + 16|0);
       $2638 = HEAP32[$2637>>2]|0;
       $2639 = ((($0)) + 28|0);
       $2640 = HEAP32[$2639>>2]|0;
       $2641 = ((($0)) + 40|0);
       $2642 = ((($0)) + 36|0);
       $2643 = HEAP32[$2642>>2]|0;
       $2644 = (ftCall_iiii($2638|0,$2640,$2641,$2643)|0);
       $2645 = ($2644|0)==(0);
       if ($2645) {
        HEAP32[$2634>>2] = 0;
        $2646 = ((($0)) + 41|0);
        HEAP8[$2641>>0] = 0;
        $$pre$phi$i5$i75$iZ2D = $2646;$$sink$i$i6$i76$i = $2646;$3103 = 0;
       } else {
        $2647 = (((($0)) + 40|0) + ($2644)|0);
        $$pre$i3$i73$i = HEAP8[$2641>>0]|0;
        $$pre5$i4$i74$i = ((($0)) + 41|0);
        $$pre$phi$i5$i75$iZ2D = $$pre5$i4$i74$i;$$sink$i$i6$i76$i = $2647;$3103 = $$pre$i3$i73$i;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i76$i;
       HEAP32[$19>>2] = $$pre$phi$i5$i75$iZ2D;
       $$0$i8$i78$i = $3103;$$in260$i = $$pre$phi$i5$i75$iZ2D;$2652 = $$sink$i$i6$i76$i;
      }
     } while(0);
     $2648 = $$0$i8$i78$i&255;
     $2649 = $2648 << 8;
     $2650 = $2649 | $2629;
     $2651 = ($$in260$i>>>0)<($2652>>>0);
     do {
      if ($2651) {
       $2653 = ((($$in260$i)) + 1|0);
       HEAP32[$19>>2] = $2653;
       $2654 = HEAP8[$$in260$i>>0]|0;
       $$0$i$i85$i = $2654;$$in261$i = $2653;$2671 = $2652;
      } else {
       $2655 = ((($0)) + 32|0);
       $2656 = HEAP32[$2655>>2]|0;
       $2657 = ($2656|0)==(0);
       if ($2657) {
        $$0$i$i85$i = 0;$$in261$i = $$in260$i;$2671 = $2652;
        break;
       }
       $2658 = ((($0)) + 16|0);
       $2659 = HEAP32[$2658>>2]|0;
       $2660 = ((($0)) + 28|0);
       $2661 = HEAP32[$2660>>2]|0;
       $2662 = ((($0)) + 40|0);
       $2663 = ((($0)) + 36|0);
       $2664 = HEAP32[$2663>>2]|0;
       $2665 = (ftCall_iiii($2659|0,$2661,$2662,$2664)|0);
       $2666 = ($2665|0)==(0);
       if ($2666) {
        HEAP32[$2655>>2] = 0;
        $2667 = ((($0)) + 41|0);
        HEAP8[$2662>>0] = 0;
        $$pre$phi$i$i82$iZ2D = $2667;$$sink$i$i$i83$i = $2667;$3104 = 0;
       } else {
        $2668 = (((($0)) + 40|0) + ($2665)|0);
        $$pre$i$i80$i = HEAP8[$2662>>0]|0;
        $$pre5$i$i81$i = ((($0)) + 41|0);
        $$pre$phi$i$i82$iZ2D = $$pre5$i$i81$i;$$sink$i$i$i83$i = $2668;$3104 = $$pre$i$i80$i;
       }
       HEAP32[$22>>2] = $$sink$i$i$i83$i;
       HEAP32[$19>>2] = $$pre$phi$i$i82$iZ2D;
       $$0$i$i85$i = $3104;$$in261$i = $$pre$phi$i$i82$iZ2D;$2671 = $$sink$i$i$i83$i;
      }
     } while(0);
     $2669 = $$0$i$i85$i&255;
     $2670 = ($$in261$i>>>0)<($2671>>>0);
     do {
      if ($2670) {
       $2672 = ((($$in261$i)) + 1|0);
       HEAP32[$19>>2] = $2672;
       $2673 = HEAP8[$$in261$i>>0]|0;
       $$0$i8$i92$i = $2673;$$in262$i = $2672;$2692 = $2671;
      } else {
       $2674 = ((($0)) + 32|0);
       $2675 = HEAP32[$2674>>2]|0;
       $2676 = ($2675|0)==(0);
       if ($2676) {
        $$0$i8$i92$i = 0;$$in262$i = $$in261$i;$2692 = $2671;
        break;
       }
       $2677 = ((($0)) + 16|0);
       $2678 = HEAP32[$2677>>2]|0;
       $2679 = ((($0)) + 28|0);
       $2680 = HEAP32[$2679>>2]|0;
       $2681 = ((($0)) + 40|0);
       $2682 = ((($0)) + 36|0);
       $2683 = HEAP32[$2682>>2]|0;
       $2684 = (ftCall_iiii($2678|0,$2680,$2681,$2683)|0);
       $2685 = ($2684|0)==(0);
       if ($2685) {
        HEAP32[$2674>>2] = 0;
        $2686 = ((($0)) + 41|0);
        HEAP8[$2681>>0] = 0;
        $$pre$phi$i5$i89$iZ2D = $2686;$$sink$i$i6$i90$i = $2686;$3105 = 0;
       } else {
        $2687 = (((($0)) + 40|0) + ($2684)|0);
        $$pre$i3$i87$i = HEAP8[$2681>>0]|0;
        $$pre5$i4$i88$i = ((($0)) + 41|0);
        $$pre$phi$i5$i89$iZ2D = $$pre5$i4$i88$i;$$sink$i$i6$i90$i = $2687;$3105 = $$pre$i3$i87$i;
       }
       HEAP32[$22>>2] = $$sink$i$i6$i90$i;
       HEAP32[$19>>2] = $$pre$phi$i5$i89$iZ2D;
       $$0$i8$i92$i = $3105;$$in262$i = $$pre$phi$i5$i89$iZ2D;$2692 = $$sink$i$i6$i90$i;
      }
     } while(0);
     $2688 = $$0$i8$i92$i&255;
     $2689 = $2688 << 8;
     $2690 = $2689 | $2669;
     $2691 = ($$in262$i>>>0)<($2692>>>0);
     do {
      if ($2691) {
       $2693 = ((($$in262$i)) + 1|0);
       HEAP32[$19>>2] = $2693;
       $2694 = HEAP8[$$in262$i>>0]|0;
       $$0$i99$i = $2694;$$in263$i = $2693;$2711 = $2692;
      } else {
       $2695 = ((($0)) + 32|0);
       $2696 = HEAP32[$2695>>2]|0;
       $2697 = ($2696|0)==(0);
       if ($2697) {
        $$0$i99$i = 0;$$in263$i = $$in262$i;$2711 = $2692;
        break;
       }
       $2698 = ((($0)) + 16|0);
       $2699 = HEAP32[$2698>>2]|0;
       $2700 = ((($0)) + 28|0);
       $2701 = HEAP32[$2700>>2]|0;
       $2702 = ((($0)) + 40|0);
       $2703 = ((($0)) + 36|0);
       $2704 = HEAP32[$2703>>2]|0;
       $2705 = (ftCall_iiii($2699|0,$2701,$2702,$2704)|0);
       $2706 = ($2705|0)==(0);
       if ($2706) {
        HEAP32[$2695>>2] = 0;
        $2707 = ((($0)) + 41|0);
        HEAP8[$2702>>0] = 0;
        $$pre$phi$i96$iZ2D = $2707;$$sink$i$i97$i = $2707;$3106 = 0;
       } else {
        $2708 = (((($0)) + 40|0) + ($2705)|0);
        $$pre$i94$i = HEAP8[$2702>>0]|0;
        $$pre5$i95$i = ((($0)) + 41|0);
        $$pre$phi$i96$iZ2D = $$pre5$i95$i;$$sink$i$i97$i = $2708;$3106 = $$pre$i94$i;
       }
       HEAP32[$22>>2] = $$sink$i$i97$i;
       HEAP32[$19>>2] = $$pre$phi$i96$iZ2D;
       $$0$i99$i = $3106;$$in263$i = $$pre$phi$i96$iZ2D;$2711 = $$sink$i$i97$i;
      }
     } while(0);
     $2709 = $$0$i99$i&255;
     $2710 = ($$in263$i>>>0)<($2711>>>0);
     do {
      if ($2710) {
       $2712 = ((($$in263$i)) + 1|0);
       HEAP32[$19>>2] = $2712;
       $2713 = HEAP8[$$in263$i>>0]|0;
       $$0$i106$i = $2713;$$pre$i119$i230 = $2712;$2765 = $2711;
      } else {
       $2714 = ((($0)) + 32|0);
       $2715 = HEAP32[$2714>>2]|0;
       $2716 = ($2715|0)==(0);
       if ($2716) {
        $$0$i106$i = 0;$$pre$i119$i230 = $$in263$i;$2765 = $2711;
        break;
       }
       $2717 = ((($0)) + 16|0);
       $2718 = HEAP32[$2717>>2]|0;
       $2719 = ((($0)) + 28|0);
       $2720 = HEAP32[$2719>>2]|0;
       $2721 = ((($0)) + 40|0);
       $2722 = ((($0)) + 36|0);
       $2723 = HEAP32[$2722>>2]|0;
       $2724 = (ftCall_iiii($2718|0,$2720,$2721,$2723)|0);
       $2725 = ($2724|0)==(0);
       if ($2725) {
        HEAP32[$2714>>2] = 0;
        $2726 = ((($0)) + 41|0);
        HEAP8[$2721>>0] = 0;
        $$pre$phi$i103$iZ2D = $2726;$$sink$i$i104$i = $2726;$3107 = 0;
       } else {
        $2727 = (((($0)) + 40|0) + ($2724)|0);
        $$pre$i101$i = HEAP8[$2721>>0]|0;
        $$pre5$i102$i = ((($0)) + 41|0);
        $$pre$phi$i103$iZ2D = $$pre5$i102$i;$$sink$i$i104$i = $2727;$3107 = $$pre$i101$i;
       }
       HEAP32[$22>>2] = $$sink$i$i104$i;
       HEAP32[$19>>2] = $$pre$phi$i103$iZ2D;
       $$0$i106$i = $3107;$$pre$i119$i230 = $$pre$phi$i103$iZ2D;$2765 = $$sink$i$i104$i;
      }
     } while(0);
     $2728 = $$pre$i119$i230;
     $2729 = $$0$i106$i&255;
     HEAP32[$7>>2] = 0;
     $2730 = ($$0$i15$i&255)>(7);
     $spec$select$i231 = $2730&1;
     $2731 = $2729 >>> 5;
     $2732 = $2731 & 1;
     $2733 = $2732 ^ 1;
     $2734 = ($$0$i8$i<<24>>24)!=(0);
     L1498: do {
      if ($2734) {
       switch ($$0$i36$i<<24>>24) {
       case 8:  {
        $$0248$ph$i = 1;$$2181$ph$i = 0;
        label = 1090;
        break L1498;
        break;
       }
       case 15: case 16:  {
        $$0248$ph$i = 3;$$2181$ph$i = 1;
        label = 1090;
        break L1498;
        break;
       }
       case 32: case 24:  {
        $2735 = $2542 >>> 3;
        $$0248$ph$i = $2735;$$2181$ph$i = 0;
        label = 1090;
        break L1498;
        break;
       }
       default: {
        $$0$i259 = 0;
        break L1498;
       }
       }
      } else {
       switch ($$0$i99$i<<24>>24) {
       case 8:  {
        $$0248$ph$i = 1;$$2181$ph$i = 0;
        label = 1090;
        break L1498;
        break;
       }
       case 16:  {
        $2736 = (($2443) + -8)|0;
        $spec$select1$i = $2730 ? $2736 : $2443;
        $2737 = ($spec$select1$i|0)==(3);
        if ($2737) {
         $$0248$ph$i = 2;$$2181$ph$i = 0;
         label = 1090;
         break L1498;
        }
        break;
       }
       case 15:  {
        break;
       }
       case 32: case 24:  {
        $2738 = $2709 >>> 3;
        $$0248$ph$i = $2738;$$2181$ph$i = 0;
        label = 1090;
        break L1498;
        break;
       }
       default: {
        $$0$i259 = 0;
        break L1498;
       }
       }
       $$0248$ph$i = 3;$$2181$ph$i = 1;
       label = 1090;
      }
     } while(0);
     L1508: do {
      if ((label|0) == 1090) {
       HEAP32[$1>>2] = $2650;
       HEAP32[$2>>2] = $2690;
       $2739 = ($3|0)==(0|0);
       if ($2739) {
        $2746 = ($2690|0)==(0);
        if (!($2746)) {
         $2747 = (2147483647 / ($2690>>>0))&-1;
         $2748 = ($2747>>>0)<($2650>>>0);
         if ($2748) {
          $$0$i259 = 0;
          break;
         }
        }
        $2749 = Math_imul($2690, $2650)|0;
        $2750 = (2147483647 / ($$0248$ph$i>>>0))&-1;
        $2751 = ($2750>>>0)<($2749>>>0);
        if ($2751) {
         $$0$i259 = 0;
         break;
        }
       } else {
        HEAP32[$3>>2] = $$0248$ph$i;
        $2740 = ($2690|0)==(0);
        if (!($2740)) {
         $2741 = (2147483647 / ($2690>>>0))&-1;
         $2742 = ($2741>>>0)<($2650>>>0);
         if ($2742) {
          $$0$i259 = 0;
          break;
         }
        }
        $2743 = Math_imul($2690, $2650)|0;
        $2744 = (2147483647 / ($$0248$ph$i>>>0))&-1;
        $2745 = ($2744>>>0)<($2743>>>0);
        if ($2745) {
         $$0$i259 = 0;
         break;
        }
       }
       $2752 = ($2690|0)==(0);
       if (!($2752)) {
        $2753 = (2147483647 / ($2690>>>0))&-1;
        $2754 = ($2753>>>0)<($2650>>>0);
        if ($2754) {
         $$0$i259 = 0;
         break;
        }
       }
       $2755 = Math_imul($2690, $2650)|0;
       $2756 = (2147483647 / ($$0248$ph$i>>>0))&-1;
       $2757 = ($2756>>>0)<($2755>>>0);
       if ($2757) {
        $$0$i259 = 0;
        break;
       }
       $2758 = Math_imul($$0248$ph$i, $2755)|0;
       $2759 = (_malloc($2758)|0);
       $2760 = ($2759|0)==(0|0);
       if ($2760) {
        $$0$i259 = 0;
        break;
       }
       $2761 = ((($0)) + 16|0);
       $2762 = HEAP32[$2761>>2]|0;
       $2763 = ($2762|0)==(0|0);
       do {
        if ($2763) {
         label = 1104;
        } else {
         $2764 = $2765;
         $2766 = (($2764) - ($2728))|0;
         $2767 = ($2766|0)<($2406|0);
         if (!($2767)) {
          label = 1104;
          break;
         }
         HEAP32[$19>>2] = $2765;
         $2768 = ((($0)) + 20|0);
         $2769 = HEAP32[$2768>>2]|0;
         $2770 = ((($0)) + 28|0);
         $2771 = HEAP32[$2770>>2]|0;
         $2772 = (($2406) - ($2766))|0;
         ftCall_vii($2769|0,$2771,$2772);
        }
       } while(0);
       if ((label|0) == 1104) {
        $2773 = (($$pre$i119$i230) + ($2406)|0);
        HEAP32[$19>>2] = $2773;
       }
       $2774 = $$2181$ph$i | $spec$select$i231;
       $2775 = ($2774|0)!=(0);
       $2776 = $2734 | $2775;
       do {
        if ($2776) {
         L1533: do {
          if ($2734) {
           $2820 = HEAP32[$2761>>2]|0;
           $2821 = ($2820|0)==(0|0);
           do {
            if ($2821) {
             $$pre$i125$i = HEAP32[$19>>2]|0;
             $2834 = $$pre$i125$i;
             label = 1129;
            } else {
             $2822 = HEAP32[$22>>2]|0;
             $2823 = HEAP32[$19>>2]|0;
             $2824 = $2822;
             $2825 = (($2824) - ($2823))|0;
             $2826 = ($2483|0)>($2825|0);
             $2827 = $2823;
             if (!($2826)) {
              $2834 = $2827;
              label = 1129;
              break;
             }
             HEAP32[$19>>2] = $2822;
             $2828 = ((($0)) + 20|0);
             $2829 = HEAP32[$2828>>2]|0;
             $2830 = ((($0)) + 28|0);
             $2831 = HEAP32[$2830>>2]|0;
             $2832 = (($2483) - ($2825))|0;
             ftCall_vii($2829|0,$2831,$2832);
            }
           } while(0);
           if ((label|0) == 1129) {
            $2833 = (($2834) + ($2483)|0);
            HEAP32[$19>>2] = $2833;
           }
           $2835 = ($2756>>>0)<($2523>>>0);
           do {
            if (!($2835)) {
             $2836 = Math_imul($$0248$ph$i, $2523)|0;
             $2837 = (_malloc($2836)|0);
             $2838 = ($2837|0)==(0|0);
             if ($2838) {
              break;
             }
             $2839 = ($$2181$ph$i|0)==(0);
             if (!($2839)) {
              $2840 = ($$0248$ph$i|0)==(3);
              if (!($2840)) {
               ___assert_fail((139348|0),(139212|0),5532,(139369|0));
               // unreachable;
              }
              $2841 = ($2523|0)==(0);
              if ($2841) {
               $$0246$i = $2837;$$2181183$i = 1;
               break L1533;
              }
              $$0233226$i = $2837;$$1243225$i = 0;
              while(1) {
               _stbi__tga_read_rgb16($0,$$0233226$i);
               $2842 = ((($$0233226$i)) + 3|0);
               $2843 = (($$1243225$i) + 1)|0;
               $exitcond243$i = ($2843|0)==($2523|0);
               if ($exitcond243$i) {
                $$0246$i = $2837;$$2181183$i = $$2181$ph$i;
                break L1533;
               } else {
                $$0233226$i = $2842;$$1243225$i = $2843;
               }
              }
             }
             $2844 = HEAP32[$2761>>2]|0;
             $2845 = ($2844|0)==(0|0);
             do {
              if ($2845) {
               $$pre$i139$i = HEAP32[$19>>2]|0;
               $$pre36$i141$i = HEAP32[$22>>2]|0;
               $2853 = $$pre$i139$i;$2855 = $$pre36$i141$i;
               label = 1142;
              } else {
               $2846 = HEAP32[$22>>2]|0;
               $2847 = HEAP32[$19>>2]|0;
               $2848 = $2847;
               $2849 = (($2846) - ($2848))|0;
               $2850 = ($2836|0)>($2849|0);
               $2851 = $2846;
               if (!($2850)) {
                $2853 = $2847;$2855 = $2851;
                label = 1142;
                break;
               }
               _memcpy(($2837|0),($2847|0),($2849|0))|0;
               $2856 = ((($0)) + 28|0);
               $2857 = HEAP32[$2856>>2]|0;
               $2858 = (($2837) + ($2849)|0);
               $2859 = (($2836) - ($2849))|0;
               $2860 = (ftCall_iiii($2844|0,$2857,$2858,$2859)|0);
               $2861 = ($2860|0)==($2859|0);
               $2862 = HEAP32[$22>>2]|0;
               HEAP32[$19>>2] = $2862;
               if ($2861) {
                $$0246$i = $2837;$$2181183$i = 0;
                break L1533;
               }
              }
             } while(0);
             do {
              if ((label|0) == 1142) {
               $2852 = (($2853) + ($2836)|0);
               $2854 = ($2852>>>0)>($2855>>>0);
               if ($2854) {
                break;
               }
               _memcpy(($2837|0),($2853|0),($2836|0))|0;
               HEAP32[$19>>2] = $2852;
               $$0246$i = $2837;$$2181183$i = 0;
               break L1533;
              }
             } while(0);
             _free($2759);
             _free($2837);
             $$0$i259 = 0;
             break L1508;
            }
           } while(0);
           _free($2759);
           $$0$i259 = 0;
           break L1508;
          } else {
           $$0246$i = 0;$$2181183$i = $$2181$ph$i;
          }
         } while(0);
         $2863 = ($2755|0)==(0);
         L1564: do {
          if (!($2863)) {
           $2864 = ($$0248$ph$i|0)==(0);
           $2865 = ($$0$i99$i<<24>>24)==(8);
           $2866 = ($$2181183$i|0)==(0);
           $2867 = ((($0)) + 32|0);
           $2868 = ($$0248$ph$i|0)==(3);
           $2869 = ((($0)) + 28|0);
           $2870 = ((($0)) + 40|0);
           $2871 = ((($0)) + 36|0);
           $2872 = ((($0)) + 41|0);
           $$0234221$i = 1;$$0235220$i = 0;$$0237219$i = 0;$$2244218$i = 0;
           L1566: while(1) {
            $2873 = Math_imul($$2244218$i, $$0248$ph$i)|0;
            $scevgep242$i = (($2759) + ($2873)|0);
            do {
             if ($2730) {
              $2874 = ($$0237219$i|0)==(0);
              if (!($2874)) {
               $2892 = ($$0235220$i|0)==(0);
               if ($2892) {
                $$1236192$i = 0;$$1238190$i = $$0237219$i;
                label = 1160;
                break;
               }
               $2893 = ($$0234221$i|0)==(0);
               if ($2893) {
                $$1236193$i = $$0235220$i;$$1238191$i = $$0237219$i;
                label = 1201;
                break;
               } else {
                $$1236192$i = $$0235220$i;$$1238190$i = $$0237219$i;
                label = 1160;
                break;
               }
              }
              $2875 = HEAP32[$19>>2]|0;
              $2876 = HEAP32[$22>>2]|0;
              $2877 = ($2875>>>0)<($2876>>>0);
              do {
               if ($2877) {
                $2878 = ((($2875)) + 1|0);
                HEAP32[$19>>2] = $2878;
                $2879 = HEAP8[$2875>>0]|0;
                $$0$i152$i = $2879;
               } else {
                $2880 = HEAP32[$2867>>2]|0;
                $2881 = ($2880|0)==(0);
                if ($2881) {
                 $$0$i152$i = 0;
                 break;
                }
                $2882 = HEAP32[$2761>>2]|0;
                $2883 = HEAP32[$2869>>2]|0;
                $2884 = HEAP32[$2871>>2]|0;
                $2885 = (ftCall_iiii($2882|0,$2883,$2870,$2884)|0);
                $2886 = ($2885|0)==(0);
                if ($2886) {
                 HEAP32[$2867>>2] = 0;
                 HEAP8[$2870>>0] = 0;
                 $$sink$i$i150$i = $2872;$3108 = 0;
                } else {
                 $2887 = (((($0)) + 40|0) + ($2885)|0);
                 $$pre$i147$i = HEAP8[$2870>>0]|0;
                 $$sink$i$i150$i = $2887;$3108 = $$pre$i147$i;
                }
                HEAP32[$22>>2] = $$sink$i$i150$i;
                HEAP32[$19>>2] = $2872;
                $$0$i152$i = $3108;
               }
              } while(0);
              $2888 = $$0$i152$i&255;
              $2889 = $2888 & 127;
              $2890 = (($2889) + 1)|0;
              $2891 = $2888 >>> 7;
              $$1236192$i = $2891;$$1238190$i = $2890;
              label = 1160;
             } else {
              $$1236192$i = $$0235220$i;$$1238190$i = $$0237219$i;
              label = 1160;
             }
            } while(0);
            L1583: do {
             if ((label|0) == 1160) {
              label = 0;
              if (!($2734)) {
               if (!($2866)) {
                if (!($2868)) {
                 break L1566;
                }
                _stbi__tga_read_rgb16($0,$7);
                $$1236193$i = $$1236192$i;$$1238191$i = $$1238190$i;
                label = 1201;
                break;
               }
               if ($2864) {
                $$1236193265$i = $$1236192$i;$$1238191266$i = $$1238190$i;
                break;
               }
               $$pre$i251 = HEAP32[$19>>2]|0;
               $$pre247$i252 = HEAP32[$22>>2]|0;
               $$1240208$i = 0;$2939 = $$pre$i251;$2940 = $$pre247$i252;
               while(1) {
                $2938 = ($2939>>>0)<($2940>>>0);
                do {
                 if ($2938) {
                  $2941 = ((($2939)) + 1|0);
                  HEAP32[$19>>2] = $2941;
                  $2942 = HEAP8[$2939>>0]|0;
                  $$0$i136$i = $2942;$3112 = $2940;$3113 = $2941;
                 } else {
                  $2943 = HEAP32[$2867>>2]|0;
                  $2944 = ($2943|0)==(0);
                  if ($2944) {
                   $$0$i136$i = 0;$3112 = $2940;$3113 = $2939;
                   break;
                  }
                  $2945 = HEAP32[$2761>>2]|0;
                  $2946 = HEAP32[$2869>>2]|0;
                  $2947 = HEAP32[$2871>>2]|0;
                  $2948 = (ftCall_iiii($2945|0,$2946,$2870,$2947)|0);
                  $2949 = ($2948|0)==(0);
                  if ($2949) {
                   HEAP32[$2867>>2] = 0;
                   HEAP8[$2870>>0] = 0;
                   $$sink$i$i134$i = $2872;$3114 = 0;
                  } else {
                   $2950 = (((($0)) + 40|0) + ($2948)|0);
                   $$pre$i131$i = HEAP8[$2870>>0]|0;
                   $$sink$i$i134$i = $2950;$3114 = $$pre$i131$i;
                  }
                  HEAP32[$22>>2] = $$sink$i$i134$i;
                  HEAP32[$19>>2] = $2872;
                  $$0$i136$i = $3114;$3112 = $$sink$i$i134$i;$3113 = $2872;
                 }
                } while(0);
                $2951 = (($7) + ($$1240208$i)|0);
                HEAP8[$2951>>0] = $$0$i136$i;
                $2952 = (($$1240208$i) + 1)|0;
                $exitcond239$i = ($2952|0)==($$0248$ph$i|0);
                if ($exitcond239$i) {
                 $$1236193$i = $$1236192$i;$$1238191$i = $$1238190$i;
                 label = 1201;
                 break L1583;
                } else {
                 $$1240208$i = $2952;$2939 = $3113;$2940 = $3112;
                }
               }
              }
              $2894 = HEAP32[$19>>2]|0;
              $2895 = HEAP32[$22>>2]|0;
              $2896 = ($2894>>>0)<($2895>>>0);
              if ($2865) {
               do {
                if ($2896) {
                 $2897 = ((($2894)) + 1|0);
                 HEAP32[$19>>2] = $2897;
                 $2898 = HEAP8[$2894>>0]|0;
                 $$0$i159$i = $2898;
                } else {
                 $2899 = HEAP32[$2867>>2]|0;
                 $2900 = ($2899|0)==(0);
                 if ($2900) {
                  $$0$i159$i = 0;
                  break;
                 }
                 $2901 = HEAP32[$2761>>2]|0;
                 $2902 = HEAP32[$2869>>2]|0;
                 $2903 = HEAP32[$2871>>2]|0;
                 $2904 = (ftCall_iiii($2901|0,$2902,$2870,$2903)|0);
                 $2905 = ($2904|0)==(0);
                 if ($2905) {
                  HEAP32[$2867>>2] = 0;
                  HEAP8[$2870>>0] = 0;
                  $$sink$i$i157$i = $2872;$3109 = 0;
                 } else {
                  $2906 = (((($0)) + 40|0) + ($2904)|0);
                  $$pre$i154$i = HEAP8[$2870>>0]|0;
                  $$sink$i$i157$i = $2906;$3109 = $$pre$i154$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i157$i;
                 HEAP32[$19>>2] = $2872;
                 $$0$i159$i = $3109;
                }
               } while(0);
               $2907 = $$0$i159$i&255;
               $2936 = $2907;
              } else {
               do {
                if ($2896) {
                 $2908 = ((($2894)) + 1|0);
                 HEAP32[$19>>2] = $2908;
                 $2909 = HEAP8[$2894>>0]|0;
                 $$0$i$i166$i = $2909;$2920 = $2908;$2921 = $2895;
                } else {
                 $2910 = HEAP32[$2867>>2]|0;
                 $2911 = ($2910|0)==(0);
                 if ($2911) {
                  $$0$i$i166$i = 0;$2920 = $2894;$2921 = $2895;
                  break;
                 }
                 $2912 = HEAP32[$2761>>2]|0;
                 $2913 = HEAP32[$2869>>2]|0;
                 $2914 = HEAP32[$2871>>2]|0;
                 $2915 = (ftCall_iiii($2912|0,$2913,$2870,$2914)|0);
                 $2916 = ($2915|0)==(0);
                 if ($2916) {
                  HEAP32[$2867>>2] = 0;
                  HEAP8[$2870>>0] = 0;
                  $$sink$i$i$i164$i = $2872;$3110 = 0;
                 } else {
                  $2917 = (((($0)) + 40|0) + ($2915)|0);
                  $$pre$i$i161$i = HEAP8[$2870>>0]|0;
                  $$sink$i$i$i164$i = $2917;$3110 = $$pre$i$i161$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i$i164$i;
                 HEAP32[$19>>2] = $2872;
                 $$0$i$i166$i = $3110;$2920 = $2872;$2921 = $$sink$i$i$i164$i;
                }
               } while(0);
               $2918 = $$0$i$i166$i&255;
               $2919 = ($2920>>>0)<($2921>>>0);
               do {
                if ($2919) {
                 $2922 = ((($2920)) + 1|0);
                 HEAP32[$19>>2] = $2922;
                 $2923 = HEAP8[$2920>>0]|0;
                 $$0$i8$i173$i = $2923;
                } else {
                 $2924 = HEAP32[$2867>>2]|0;
                 $2925 = ($2924|0)==(0);
                 if ($2925) {
                  $$0$i8$i173$i = 0;
                  break;
                 }
                 $2926 = HEAP32[$2761>>2]|0;
                 $2927 = HEAP32[$2869>>2]|0;
                 $2928 = HEAP32[$2871>>2]|0;
                 $2929 = (ftCall_iiii($2926|0,$2927,$2870,$2928)|0);
                 $2930 = ($2929|0)==(0);
                 if ($2930) {
                  HEAP32[$2867>>2] = 0;
                  HEAP8[$2870>>0] = 0;
                  $$sink$i$i6$i171$i = $2872;$3111 = 0;
                 } else {
                  $2931 = (((($0)) + 40|0) + ($2929)|0);
                  $$pre$i3$i168$i = HEAP8[$2870>>0]|0;
                  $$sink$i$i6$i171$i = $2931;$3111 = $$pre$i3$i168$i;
                 }
                 HEAP32[$22>>2] = $$sink$i$i6$i171$i;
                 HEAP32[$19>>2] = $2872;
                 $$0$i8$i173$i = $3111;
                }
               } while(0);
               $2932 = $$0$i8$i173$i&255;
               $2933 = $2932 << 8;
               $2934 = $2933 | $2918;
               $2936 = $2934;
              }
              if ($2864) {
               $$1236193265$i = $$1236192$i;$$1238191266$i = $$1238190$i;
               break;
              }
              $2935 = ($2936|0)<($2523|0);
              $spec$store$select$i250 = $2935 ? $2936 : 0;
              $2937 = Math_imul($spec$store$select$i250, $$0248$ph$i)|0;
              $scevgep$i = (($$0246$i) + ($2937)|0);
              _memcpy(($7|0),($scevgep$i|0),($$0248$ph$i|0))|0;
              $$1236193268$i = $$1236192$i;$$1238191269$i = $$1238190$i;
              label = 1202;
             }
            } while(0);
            if ((label|0) == 1201) {
             label = 0;
             if ($2864) {
              $$1236193265$i = $$1236193$i;$$1238191266$i = $$1238191$i;
             } else {
              $$1236193268$i = $$1236193$i;$$1238191269$i = $$1238191$i;
              label = 1202;
             }
            }
            if ((label|0) == 1202) {
             label = 0;
             _memcpy(($scevgep242$i|0),($7|0),($$0248$ph$i|0))|0;
             $$1236193265$i = $$1236193268$i;$$1238191266$i = $$1238191269$i;
            }
            $2953 = (($$1238191266$i) + -1)|0;
            $2954 = (($$2244218$i) + 1)|0;
            $2955 = ($2954>>>0)<($2755>>>0);
            if ($2955) {
             $$0234221$i = 0;$$0235220$i = $$1236193265$i;$$0237219$i = $2953;$$2244218$i = $2954;
            } else {
             break L1564;
            }
           }
           ___assert_fail((139348|0),(139212|0),5581,(139369|0));
           // unreachable;
          }
         } while(0);
         $2956 = ($2733|0)!=(0);
         $2957 = ($2690|0)!=(0);
         $or$cond232$i = $2957 & $2956;
         do {
          if ($or$cond232$i) {
           $2958 = Math_imul($$0248$ph$i, $2650)|0;
           $2959 = (($2690) + -1)|0;
           $2960 = ($2958|0)==(0);
           if ($2960) {
            break;
           }
           $2961 = ($2690>>>0)>(2);
           $smax$i = $2961 ? $2690 : 2;
           $2962 = (($smax$i) + -1)|0;
           $2963 = $2962 >>> 1;
           $$3205$us$i = 0;
           while(1) {
            $2964 = Math_imul($$3205$us$i, $2958)|0;
            $2965 = (($2959) - ($$3205$us$i))|0;
            $2966 = Math_imul($2965, $2958)|0;
            $$0230203$us$i = $2966;$$0231202$us$i = $2964;$$3245201$us$i = $2958;
            while(1) {
             $2967 = (($2759) + ($$0231202$us$i)|0);
             $2968 = HEAP8[$2967>>0]|0;
             $2969 = (($2759) + ($$0230203$us$i)|0);
             $2970 = HEAP8[$2969>>0]|0;
             HEAP8[$2967>>0] = $2970;
             HEAP8[$2969>>0] = $2968;
             $2971 = (($$0231202$us$i) + 1)|0;
             $2972 = (($$0230203$us$i) + 1)|0;
             $2973 = (($$3245201$us$i) + -1)|0;
             $2974 = ($$3245201$us$i|0)>(1);
             if ($2974) {
              $$0230203$us$i = $2972;$$0231202$us$i = $2971;$$3245201$us$i = $2973;
             } else {
              break;
             }
            }
            $2975 = (($$3205$us$i) + 1)|0;
            $exitcond236$i = ($$3205$us$i|0)==($2963|0);
            if ($exitcond236$i) {
             break;
            } else {
             $$3205$us$i = $2975;
            }
           }
          }
         } while(0);
         $2976 = ($$0246$i|0)==(0|0);
         if ($2976) {
          $$2181184$i = $$2181183$i;
          label = 1212;
          break;
         }
         _free($$0246$i);
         $$2181184$i = $$2181183$i;
         label = 1212;
        } else {
         if ($2752) {
          break;
         }
         $2777 = ($2733|0)==(0);
         $2778 = (($2690) + -1)|0;
         $2779 = Math_imul($$0248$ph$i, $2650)|0;
         $2780 = ((($0)) + 28|0);
         if ($2777) {
          $$0242229$us$i = 0;
          while(1) {
           $2781 = Math_imul($$0242229$us$i, $2779)|0;
           $2782 = (($2759) + ($2781)|0);
           $2783 = HEAP32[$2761>>2]|0;
           $2784 = ($2783|0)==(0|0);
           do {
            if ($2784) {
             $$pre$i122$us$i = HEAP32[$19>>2]|0;
             $$pre36$i$us$i = HEAP32[$22>>2]|0;
             $2796 = $$pre$i122$us$i;$2798 = $$pre36$i$us$i;
             label = 1114;
            } else {
             $2785 = HEAP32[$22>>2]|0;
             $2786 = HEAP32[$19>>2]|0;
             $2787 = $2786;
             $2788 = (($2785) - ($2787))|0;
             $2789 = ($2779|0)>($2788|0);
             $2790 = $2785;
             if (!($2789)) {
              $2796 = $2786;$2798 = $2790;
              label = 1114;
              break;
             }
             _memcpy(($2782|0),($2786|0),($2788|0))|0;
             $2791 = HEAP32[$2780>>2]|0;
             $2792 = (($2782) + ($2788)|0);
             $2793 = (($2779) - ($2788))|0;
             (ftCall_iiii($2783|0,$2791,$2792,$2793)|0);
             $2794 = HEAP32[$22>>2]|0;
             HEAP32[$19>>2] = $2794;
            }
           } while(0);
           do {
            if ((label|0) == 1114) {
             label = 0;
             $2795 = (($2796) + ($2779)|0);
             $2797 = ($2795>>>0)>($2798>>>0);
             if ($2797) {
              break;
             }
             _memcpy(($2782|0),($2796|0),($2779|0))|0;
             HEAP32[$19>>2] = $2795;
            }
           } while(0);
           $2799 = (($$0242229$us$i) + 1)|0;
           $exitcond244$i243 = ($2799|0)==($2690|0);
           if ($exitcond244$i243) {
            $$2181184$i = $$2181$ph$i;
            label = 1212;
            break;
           } else {
            $$0242229$us$i = $2799;
           }
          }
         } else {
          $$0242229$i = 0;
          while(1) {
           $2800 = (($2778) - ($$0242229$i))|0;
           $2801 = Math_imul($2800, $2779)|0;
           $2802 = (($2759) + ($2801)|0);
           $2803 = HEAP32[$2761>>2]|0;
           $2804 = ($2803|0)==(0|0);
           do {
            if ($2804) {
             $$pre$i122$i = HEAP32[$19>>2]|0;
             $$pre36$i$i244 = HEAP32[$22>>2]|0;
             $2816 = $$pre$i122$i;$2818 = $$pre36$i$i244;
             label = 1121;
            } else {
             $2805 = HEAP32[$22>>2]|0;
             $2806 = HEAP32[$19>>2]|0;
             $2807 = $2806;
             $2808 = (($2805) - ($2807))|0;
             $2809 = ($2779|0)>($2808|0);
             $2810 = $2805;
             if (!($2809)) {
              $2816 = $2806;$2818 = $2810;
              label = 1121;
              break;
             }
             _memcpy(($2802|0),($2806|0),($2808|0))|0;
             $2811 = HEAP32[$2780>>2]|0;
             $2812 = (($2802) + ($2808)|0);
             $2813 = (($2779) - ($2808))|0;
             (ftCall_iiii($2803|0,$2811,$2812,$2813)|0);
             $2814 = HEAP32[$22>>2]|0;
             HEAP32[$19>>2] = $2814;
            }
           } while(0);
           do {
            if ((label|0) == 1121) {
             label = 0;
             $2815 = (($2816) + ($2779)|0);
             $2817 = ($2815>>>0)>($2818>>>0);
             if ($2817) {
              break;
             }
             _memcpy(($2802|0),($2816|0),($2779|0))|0;
             HEAP32[$19>>2] = $2815;
            }
           } while(0);
           $2819 = (($$0242229$i) + 1)|0;
           $exitcond245$i = ($2819|0)==($2690|0);
           if ($exitcond245$i) {
            $$2181184$i = $$2181$ph$i;
            label = 1212;
            break;
           } else {
            $$0242229$i = $2819;
           }
          }
         }
        }
       } while(0);
       do {
        if ((label|0) == 1212) {
         $2977 = ($$0248$ph$i>>>0)<(3);
         $2978 = ($$2181184$i|0)!=(0);
         $or$cond5$i254 = $2977 | $2978;
         $2979 = ($2755|0)==(0);
         $or$cond271$i = $2979 | $or$cond5$i254;
         if ($or$cond271$i) {
          break;
         }
         $$0228200$i = $2759;$$4199$i = 0;
         while(1) {
          $2980 = HEAP8[$$0228200$i>>0]|0;
          $2981 = ((($$0228200$i)) + 2|0);
          $2982 = HEAP8[$2981>>0]|0;
          HEAP8[$$0228200$i>>0] = $2982;
          HEAP8[$2981>>0] = $2980;
          $2983 = (($$0228200$i) + ($$0248$ph$i)|0);
          $2984 = (($$4199$i) + 1)|0;
          $exitcond$i256 = ($2984|0)==($2755|0);
          if ($exitcond$i256) {
           break;
          } else {
           $$0228200$i = $2983;$$4199$i = $2984;
          }
         }
        }
       } while(0);
       $2985 = ($4|0)==(0);
       $2986 = ($$0248$ph$i|0)==($4|0);
       $or$cond$i257 = $2985 | $2986;
       if ($or$cond$i257) {
        $$0$i259 = $2759;
        break;
       }
       $2987 = (_stbi__convert_format($2759,$$0248$ph$i,$4,$2650,$2690)|0);
       $$0$i259 = $2987;
      }
     } while(0);
     $$0 = $$0$i259;
     STACKTOP = sp;return ($$0|0);
    }
   }
  }
 } while(0);
 $2988 = HEAP32[$17>>2]|0;
 HEAP32[$19>>2] = $2988;
 $2989 = HEAP32[$20>>2]|0;
 HEAP32[$22>>2] = $2989;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _stbi__idct_block($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0260290 = 0, $$0262285 = 0, $$0263288 = 0, $$0292 = 0, $$1261286 = 0, $$1287 = 0, $$lobit$i = 0, $$lobit$i264 = 0, $$lobit$i267 = 0, $$lobit$i270 = 0, $$lobit$i273 = 0, $$lobit$i276 = 0, $$lobit$i279 = 0, $$lobit$i282 = 0, $$not$i = 0, $$not$i265 = 0, $$not$i268 = 0, $$not$i271 = 0, $$not$i274 = 0, $$not$i277 = 0;
 var $$not$i280 = 0, $$not$i283 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond293 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $3 = sp;
 $$0260290 = $3;$$0263288 = $2;$$0292 = 0;
 while(1) {
  $4 = ((($$0263288)) + 16|0);
  $5 = HEAP16[$4>>1]|0;
  $6 = ((($$0263288)) + 32|0);
  $7 = HEAP16[$6>>1]|0;
  $8 = $5 | $7;
  $9 = ($8<<16>>16)==(0);
  if ($9) {
   $10 = ((($$0263288)) + 48|0);
   $11 = HEAP16[$10>>1]|0;
   $12 = ($11<<16>>16)==(0);
   if ($12) {
    $13 = ((($$0263288)) + 64|0);
    $14 = HEAP16[$13>>1]|0;
    $15 = ($14<<16>>16)==(0);
    if ($15) {
     $16 = ((($$0263288)) + 80|0);
     $17 = HEAP16[$16>>1]|0;
     $18 = ($17<<16>>16)==(0);
     if ($18) {
      $19 = ((($$0263288)) + 96|0);
      $20 = HEAP16[$19>>1]|0;
      $21 = ($20<<16>>16)==(0);
      if ($21) {
       $22 = ((($$0263288)) + 112|0);
       $23 = HEAP16[$22>>1]|0;
       $24 = ($23<<16>>16)==(0);
       if ($24) {
        $25 = HEAP16[$$0263288>>1]|0;
        $26 = $25 << 16 >> 16;
        $27 = $26 << 2;
        $28 = ((($$0260290)) + 224|0);
        HEAP32[$28>>2] = $27;
        $29 = ((($$0260290)) + 192|0);
        HEAP32[$29>>2] = $27;
        $30 = ((($$0260290)) + 160|0);
        HEAP32[$30>>2] = $27;
        $31 = ((($$0260290)) + 128|0);
        HEAP32[$31>>2] = $27;
        $32 = ((($$0260290)) + 96|0);
        HEAP32[$32>>2] = $27;
        $33 = ((($$0260290)) + 64|0);
        HEAP32[$33>>2] = $27;
        $34 = ((($$0260290)) + 32|0);
        HEAP32[$34>>2] = $27;
        HEAP32[$$0260290>>2] = $27;
       } else {
        $36 = 0;
        label = 9;
       }
      } else {
       $36 = 0;
       label = 9;
      }
     } else {
      $36 = 0;
      label = 9;
     }
    } else {
     $36 = 0;
     label = 9;
    }
   } else {
    $36 = 0;
    label = 9;
   }
  } else {
   $36 = $7;
   label = 9;
  }
  if ((label|0) == 9) {
   label = 0;
   $35 = $36 << 16 >> 16;
   $37 = ((($$0263288)) + 96|0);
   $38 = HEAP16[$37>>1]|0;
   $39 = $38 << 16 >> 16;
   $40 = (($39) + ($35))|0;
   $41 = ($40*2217)|0;
   $42 = Math_imul($39, -7567)|0;
   $43 = (($41) + ($42))|0;
   $44 = ($35*3135)|0;
   $45 = (($41) + ($44))|0;
   $46 = HEAP16[$$0263288>>1]|0;
   $47 = $46 << 16 >> 16;
   $48 = ((($$0263288)) + 64|0);
   $49 = HEAP16[$48>>1]|0;
   $50 = $49 << 16 >> 16;
   $51 = (($50) + ($47))|0;
   $52 = $51 << 12;
   $53 = (($47) - ($50))|0;
   $54 = $53 << 12;
   $55 = (($52) - ($45))|0;
   $56 = (($54) - ($43))|0;
   $57 = ((($$0263288)) + 112|0);
   $58 = HEAP16[$57>>1]|0;
   $59 = $58 << 16 >> 16;
   $60 = ((($$0263288)) + 80|0);
   $61 = HEAP16[$60>>1]|0;
   $62 = $61 << 16 >> 16;
   $63 = ((($$0263288)) + 48|0);
   $64 = HEAP16[$63>>1]|0;
   $65 = $64 << 16 >> 16;
   $66 = $5 << 16 >> 16;
   $67 = (($65) + ($59))|0;
   $68 = (($62) + ($66))|0;
   $69 = (($59) + ($66))|0;
   $70 = (($65) + ($62))|0;
   $71 = (($67) + ($68))|0;
   $72 = ($71*4816)|0;
   $73 = ($59*1223)|0;
   $74 = ($62*8410)|0;
   $75 = ($65*12586)|0;
   $76 = ($66*6149)|0;
   $77 = Math_imul($69, -3685)|0;
   $78 = (($72) + ($77))|0;
   $79 = Math_imul($70, -10497)|0;
   $80 = (($72) + ($79))|0;
   $81 = Math_imul($67, -8034)|0;
   $82 = Math_imul($68, -1597)|0;
   $83 = (($82) + ($76))|0;
   $84 = (($83) + ($78))|0;
   $85 = (($81) + ($75))|0;
   $86 = (($85) + ($80))|0;
   $87 = (($82) + ($74))|0;
   $88 = (($87) + ($80))|0;
   $89 = (($81) + ($73))|0;
   $90 = (($89) + ($78))|0;
   $91 = (($45) + 512)|0;
   $92 = (($91) + ($52))|0;
   $93 = (($43) + 512)|0;
   $94 = (($93) + ($54))|0;
   $95 = (($56) + 512)|0;
   $96 = (($55) + 512)|0;
   $97 = (($84) + ($92))|0;
   $98 = $97 >> 10;
   HEAP32[$$0260290>>2] = $98;
   $99 = (($92) - ($84))|0;
   $100 = $99 >> 10;
   $101 = ((($$0260290)) + 224|0);
   HEAP32[$101>>2] = $100;
   $102 = (($86) + ($94))|0;
   $103 = $102 >> 10;
   $104 = ((($$0260290)) + 32|0);
   HEAP32[$104>>2] = $103;
   $105 = (($94) - ($86))|0;
   $106 = $105 >> 10;
   $107 = ((($$0260290)) + 192|0);
   HEAP32[$107>>2] = $106;
   $108 = (($88) + ($95))|0;
   $109 = $108 >> 10;
   $110 = ((($$0260290)) + 64|0);
   HEAP32[$110>>2] = $109;
   $111 = (($95) - ($88))|0;
   $112 = $111 >> 10;
   $113 = ((($$0260290)) + 160|0);
   HEAP32[$113>>2] = $112;
   $114 = (($90) + ($96))|0;
   $115 = $114 >> 10;
   $116 = ((($$0260290)) + 96|0);
   HEAP32[$116>>2] = $115;
   $117 = (($96) - ($90))|0;
   $118 = $117 >> 10;
   $119 = ((($$0260290)) + 128|0);
   HEAP32[$119>>2] = $118;
  }
  $120 = (($$0292) + 1)|0;
  $121 = ((($$0263288)) + 2|0);
  $122 = ((($$0260290)) + 4|0);
  $exitcond293 = ($120|0)==(8);
  if ($exitcond293) {
   break;
  } else {
   $$0260290 = $122;$$0263288 = $121;$$0292 = $120;
  }
 }
 $$0262285 = $0;$$1261286 = $3;$$1287 = 0;
 while(1) {
  $123 = ((($$1261286)) + 8|0);
  $124 = HEAP32[$123>>2]|0;
  $125 = ((($$1261286)) + 24|0);
  $126 = HEAP32[$125>>2]|0;
  $127 = (($126) + ($124))|0;
  $128 = ($127*2217)|0;
  $129 = Math_imul($126, -7567)|0;
  $130 = (($128) + ($129))|0;
  $131 = ($124*3135)|0;
  $132 = (($128) + ($131))|0;
  $133 = HEAP32[$$1261286>>2]|0;
  $134 = ((($$1261286)) + 16|0);
  $135 = HEAP32[$134>>2]|0;
  $136 = (($135) + ($133))|0;
  $137 = $136 << 12;
  $138 = (($133) - ($135))|0;
  $139 = $138 << 12;
  $140 = (($137) - ($132))|0;
  $141 = (($139) - ($130))|0;
  $142 = ((($$1261286)) + 28|0);
  $143 = HEAP32[$142>>2]|0;
  $144 = ((($$1261286)) + 20|0);
  $145 = HEAP32[$144>>2]|0;
  $146 = ((($$1261286)) + 12|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = ((($$1261286)) + 4|0);
  $149 = HEAP32[$148>>2]|0;
  $150 = (($147) + ($143))|0;
  $151 = (($149) + ($145))|0;
  $152 = (($149) + ($143))|0;
  $153 = (($147) + ($145))|0;
  $154 = (($151) + ($150))|0;
  $155 = ($154*4816)|0;
  $156 = ($143*1223)|0;
  $157 = ($145*8410)|0;
  $158 = ($147*12586)|0;
  $159 = ($149*6149)|0;
  $160 = Math_imul($152, -3685)|0;
  $161 = (($155) + ($160))|0;
  $162 = Math_imul($153, -10497)|0;
  $163 = (($155) + ($162))|0;
  $164 = Math_imul($150, -8034)|0;
  $165 = Math_imul($151, -1597)|0;
  $166 = (($165) + ($159))|0;
  $167 = (($166) + ($161))|0;
  $168 = (($164) + ($158))|0;
  $169 = (($168) + ($163))|0;
  $170 = (($165) + ($157))|0;
  $171 = (($170) + ($163))|0;
  $172 = (($164) + ($156))|0;
  $173 = (($172) + ($161))|0;
  $174 = (($132) + 16842752)|0;
  $175 = (($174) + ($137))|0;
  $176 = (($130) + 16842752)|0;
  $177 = (($176) + ($139))|0;
  $178 = (($141) + 16842752)|0;
  $179 = (($140) + 16842752)|0;
  $180 = (($167) + ($175))|0;
  $181 = $180 >> 17;
  $182 = ($181>>>0)>(255);
  if ($182) {
   $$lobit$i = $180 >> 31;
   $183 = $$lobit$i&255;
   $$not$i = $183 ^ -1;
   $185 = $$not$i;
  } else {
   $184 = $181&255;
   $185 = $184;
  }
  HEAP8[$$0262285>>0] = $185;
  $186 = (($175) - ($167))|0;
  $187 = $186 >> 17;
  $188 = ($187>>>0)>(255);
  if ($188) {
   $$lobit$i282 = $186 >> 31;
   $189 = $$lobit$i282&255;
   $$not$i283 = $189 ^ -1;
   $192 = $$not$i283;
  } else {
   $190 = $187&255;
   $192 = $190;
  }
  $191 = ((($$0262285)) + 7|0);
  HEAP8[$191>>0] = $192;
  $193 = (($169) + ($177))|0;
  $194 = $193 >> 17;
  $195 = ($194>>>0)>(255);
  if ($195) {
   $$lobit$i279 = $193 >> 31;
   $196 = $$lobit$i279&255;
   $$not$i280 = $196 ^ -1;
   $199 = $$not$i280;
  } else {
   $197 = $194&255;
   $199 = $197;
  }
  $198 = ((($$0262285)) + 1|0);
  HEAP8[$198>>0] = $199;
  $200 = (($177) - ($169))|0;
  $201 = $200 >> 17;
  $202 = ($201>>>0)>(255);
  if ($202) {
   $$lobit$i276 = $200 >> 31;
   $203 = $$lobit$i276&255;
   $$not$i277 = $203 ^ -1;
   $206 = $$not$i277;
  } else {
   $204 = $201&255;
   $206 = $204;
  }
  $205 = ((($$0262285)) + 6|0);
  HEAP8[$205>>0] = $206;
  $207 = (($171) + ($178))|0;
  $208 = $207 >> 17;
  $209 = ($208>>>0)>(255);
  if ($209) {
   $$lobit$i273 = $207 >> 31;
   $210 = $$lobit$i273&255;
   $$not$i274 = $210 ^ -1;
   $213 = $$not$i274;
  } else {
   $211 = $208&255;
   $213 = $211;
  }
  $212 = ((($$0262285)) + 2|0);
  HEAP8[$212>>0] = $213;
  $214 = (($178) - ($171))|0;
  $215 = $214 >> 17;
  $216 = ($215>>>0)>(255);
  if ($216) {
   $$lobit$i270 = $214 >> 31;
   $217 = $$lobit$i270&255;
   $$not$i271 = $217 ^ -1;
   $220 = $$not$i271;
  } else {
   $218 = $215&255;
   $220 = $218;
  }
  $219 = ((($$0262285)) + 5|0);
  HEAP8[$219>>0] = $220;
  $221 = (($173) + ($179))|0;
  $222 = $221 >> 17;
  $223 = ($222>>>0)>(255);
  if ($223) {
   $$lobit$i267 = $221 >> 31;
   $224 = $$lobit$i267&255;
   $$not$i268 = $224 ^ -1;
   $227 = $$not$i268;
  } else {
   $225 = $222&255;
   $227 = $225;
  }
  $226 = ((($$0262285)) + 3|0);
  HEAP8[$226>>0] = $227;
  $228 = (($179) - ($173))|0;
  $229 = $228 >> 17;
  $230 = ($229>>>0)>(255);
  if ($230) {
   $$lobit$i264 = $228 >> 31;
   $231 = $$lobit$i264&255;
   $$not$i265 = $231 ^ -1;
   $234 = $$not$i265;
  } else {
   $232 = $229&255;
   $234 = $232;
  }
  $233 = ((($$0262285)) + 4|0);
  HEAP8[$233>>0] = $234;
  $235 = (($$1287) + 1)|0;
  $236 = ((($$1261286)) + 32|0);
  $237 = (($$0262285) + ($1)|0);
  $exitcond = ($235|0)==(8);
  if ($exitcond) {
   break;
  } else {
   $$0262285 = $237;$$1261286 = $236;$$1287 = $235;
  }
 }
 STACKTOP = sp;return;
}
function _stbi__YCbCr_to_RGB_row($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$04652 = 0, $$047 = 0, $$048 = 0, $$049 = 0, $$053 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $6 = ($4|0)>(0);
 if (!($6)) {
  return;
 }
 $$04652 = 0;$$053 = $0;
 while(1) {
  $7 = (($1) + ($$04652)|0);
  $8 = HEAP8[$7>>0]|0;
  $9 = $8&255;
  $10 = $9 << 20;
  $11 = $10 | 524288;
  $12 = (($3) + ($$04652)|0);
  $13 = HEAP8[$12>>0]|0;
  $14 = $13&255;
  $15 = (($14) + -128)|0;
  $16 = (($2) + ($$04652)|0);
  $17 = HEAP8[$16>>0]|0;
  $18 = $17&255;
  $19 = (($18) + -128)|0;
  $20 = Math_imul($15, 1470208)|0;
  $21 = (($20) + ($11))|0;
  $22 = Math_imul($15, -748800)|0;
  $23 = (($22) + ($11))|0;
  $24 = Math_imul($19, -360960)|0;
  $25 = $24 & -65536;
  $26 = (($23) + ($25))|0;
  $27 = Math_imul($19, 1858048)|0;
  $28 = (($27) + ($11))|0;
  $29 = $21 >> 20;
  $30 = $26 >> 20;
  $31 = $28 >> 20;
  $32 = ($29>>>0)>(255);
  $33 = $21 >>> 31;
  $34 = (($33) + 255)|0;
  $$049 = $32 ? $34 : $29;
  $35 = ($30>>>0)>(255);
  $36 = $26 >>> 31;
  $37 = (($36) + 255)|0;
  $$048 = $35 ? $37 : $30;
  $38 = ($31>>>0)>(255);
  $39 = $28 >>> 31;
  $40 = (($39) + 255)|0;
  $$047 = $38 ? $40 : $31;
  $41 = $$049&255;
  HEAP8[$$053>>0] = $41;
  $42 = $$048&255;
  $43 = ((($$053)) + 1|0);
  HEAP8[$43>>0] = $42;
  $44 = $$047&255;
  $45 = ((($$053)) + 2|0);
  HEAP8[$45>>0] = $44;
  $46 = ((($$053)) + 3|0);
  HEAP8[$46>>0] = -1;
  $47 = (($$053) + ($5)|0);
  $48 = (($$04652) + 1)|0;
  $exitcond = ($48|0)==($4|0);
  if ($exitcond) {
   break;
  } else {
   $$04652 = $48;$$053 = $47;
  }
 }
 return;
}
function _stbi__resample_row_hv_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$03334 = 0, $$035 = 0, $$pre = 0, $$pre$phi39Z2D = 0, $$pre36 = 0, $$pre38 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)==(1);
 $6 = HEAP8[$1>>0]|0;
 $7 = $6&255;
 $8 = ($7*3)|0;
 $9 = HEAP8[$2>>0]|0;
 $10 = $9&255;
 $11 = (($8) + ($10))|0;
 $12 = (($11) + 2)|0;
 $13 = $12 >>> 2;
 $14 = $13&255;
 if ($5) {
  $15 = ((($0)) + 1|0);
  HEAP8[$15>>0] = $14;
  HEAP8[$0>>0] = $14;
  return ($0|0);
 }
 HEAP8[$0>>0] = $14;
 $16 = ($3|0)>(1);
 if ($16) {
  $$03334 = 1;$$035 = $11;
  while(1) {
   $17 = (($1) + ($$03334)|0);
   $18 = HEAP8[$17>>0]|0;
   $19 = $18&255;
   $20 = ($19*3)|0;
   $21 = (($2) + ($$03334)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = (($20) + ($23))|0;
   $25 = ($$035*3)|0;
   $26 = (($25) + 8)|0;
   $27 = (($26) + ($24))|0;
   $28 = $27 >>> 4;
   $29 = $28&255;
   $30 = $$03334 << 1;
   $31 = (($30) + -1)|0;
   $32 = (($0) + ($31)|0);
   HEAP8[$32>>0] = $29;
   $33 = ($24*3)|0;
   $34 = (($$035) + 8)|0;
   $35 = (($34) + ($33))|0;
   $36 = $35 >>> 4;
   $37 = $36&255;
   $38 = (($0) + ($30)|0);
   HEAP8[$38>>0] = $37;
   $39 = (($$03334) + 1)|0;
   $exitcond = ($39|0)==($3|0);
   if ($exitcond) {
    break;
   } else {
    $$03334 = $39;$$035 = $24;
   }
  }
  $$pre = (($24) + 2)|0;
  $$pre36 = $$pre >>> 2;
  $$pre38 = $$pre36&255;
  $$pre$phi39Z2D = $$pre38;
 } else {
  $$pre$phi39Z2D = $14;
 }
 $40 = $3 << 1;
 $41 = (($40) + -1)|0;
 $42 = (($0) + ($41)|0);
 HEAP8[$42>>0] = $$pre$phi39Z2D;
 return ($0|0);
}
function _stbi__decode_jpeg_header($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i188$i = 0, $$0$i$i202$i = 0, $$0$i$i28 = 0, $$0$i$i44 = 0, $$0$i$i61 = 0, $$0$i$i77 = 0, $$0$i216$i = 0, $$0$i223$i = 0, $$0$i230$i = 0, $$0$i241$i = 0, $$0$i37 = 0, $$0$i53 = 0, $$0$i70 = 0, $$0$i8$i$i = 0, $$0$i8$i195$i = 0, $$0$i8$i209$i = 0, $$0$off = 0;
 var $$0$off99 = 0, $$01$i$i = 0, $$01$i233$i = 0, $$0101 = 0, $$0177$lcssa$i = 0, $$0177269$i = 0, $$0178$lcssa$i = 0, $$0178268$i = 0, $$0180278$i = 0, $$022 = 0, $$08$i30 = 0, $$08$i46$ph$sink = 0, $$1$i = 0, $$1181272$i = 0, $$2267$i = 0, $$3265$i = 0, $$lcssa96 = 0, $$lcssa96$in = 0, $$old$i = 0, $$pre$i = 0;
 var $$pre$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i183$i = 0, $$pre$i$i197$i = 0, $$pre$i$i23 = 0, $$pre$i$i39 = 0, $$pre$i$i56 = 0, $$pre$i$i72 = 0, $$pre$i211$i = 0, $$pre$i218$i = 0, $$pre$i225$i = 0, $$pre$i236$i = 0, $$pre$i3$i$i = 0, $$pre$i3$i190$i = 0, $$pre$i3$i204$i = 0, $$pre$i32 = 0, $$pre$i48 = 0, $$pre$i65 = 0, $$pre$i79 = 0, $$pre$phi$i$i$iZ2D = 0;
 var $$pre$phi$i$i185$iZ2D = 0, $$pre$phi$i$i199$iZ2D = 0, $$pre$phi$i$i25Z2D = 0, $$pre$phi$i$i41Z2D = 0, $$pre$phi$i$i58Z2D = 0, $$pre$phi$i$i74Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i213$iZ2D = 0, $$pre$phi$i34Z2D = 0, $$pre$phi$i5$i$iZ2D = 0, $$pre$phi$i5$i192$iZ2D = 0, $$pre$phi$i5$i206$iZ2D = 0, $$pre$phi$i50Z2D = 0, $$pre$phi$i67Z2D = 0, $$pre$phi$iZ2D = 0, $$pre298$i = 0, $$pre299$i = 0, $$pre5$i = 0, $$pre5$i$i = 0, $$pre5$i$i$i = 0;
 var $$pre5$i$i184$i = 0, $$pre5$i$i198$i = 0, $$pre5$i$i24 = 0, $$pre5$i$i40 = 0, $$pre5$i$i57 = 0, $$pre5$i$i73 = 0, $$pre5$i212$i = 0, $$pre5$i33 = 0, $$pre5$i4$i$i = 0, $$pre5$i4$i191$i = 0, $$pre5$i4$i205$i = 0, $$pre5$i49 = 0, $$pre5$i66 = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i$i = 0, $$sink$i$i$i186$i = 0, $$sink$i$i$i200$i = 0, $$sink$i$i$i26 = 0, $$sink$i$i$i42 = 0;
 var $$sink$i$i$i59 = 0, $$sink$i$i$i75 = 0, $$sink$i$i214$i = 0, $$sink$i$i221$i = 0, $$sink$i$i228$i = 0, $$sink$i$i239$i = 0, $$sink$i$i35 = 0, $$sink$i$i51 = 0, $$sink$i$i6$i$i = 0, $$sink$i$i6$i193$i = 0, $$sink$i$i6$i207$i = 0, $$sink$i$i68 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0;
 var $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0;
 var $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, $exitcond$i$i = 0, $exitcond$i234$i = 0, $exitcond296$i = 0, $or$cond$i = 0, $or$cond312$i = 0, $spec$select$i = 0, $switch = 0, $switch100 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 18404|0);
 HEAP32[$2>>2] = 0;
 $3 = ((($0)) + 18408|0);
 HEAP32[$3>>2] = -1;
 $4 = ((($0)) + 18372|0);
 HEAP8[$4>>0] = -1;
 $5 = HEAP32[$0>>2]|0;
 $6 = ((($5)) + 168|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($5)) + 172|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7>>>0)<($9>>>0);
 if ($10) {
  $11 = ((($7)) + 1|0);
  HEAP32[$6>>2] = $11;
  $12 = HEAP8[$7>>0]|0;
  $$0$i$i = $12;
 } else {
  $13 = ((($5)) + 32|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ($14|0)==(0);
  if ($15) {
   $$022 = 0;
   return ($$022|0);
  }
  $16 = ((($5)) + 16|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($5)) + 28|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = ((($5)) + 40|0);
  $21 = ((($5)) + 36|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (ftCall_iiii($17|0,$19,$20,$22)|0);
  $24 = ($23|0)==(0);
  if ($24) {
   HEAP32[$13>>2] = 0;
   $25 = ((($5)) + 41|0);
   HEAP8[$20>>0] = 0;
   $$pre$phi$i$iZ2D = $25;$$sink$i$i$i = $25;$591 = 0;
  } else {
   $26 = (((($5)) + 40|0) + ($23)|0);
   $$pre$i$i = HEAP8[$20>>0]|0;
   $$pre5$i$i = ((($5)) + 41|0);
   $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $26;$591 = $$pre$i$i;
  }
  HEAP32[$8>>2] = $$sink$i$i$i;
  HEAP32[$6>>2] = $$pre$phi$i$iZ2D;
  $$0$i$i = $591;
 }
 $27 = ($$0$i$i<<24>>24)==(-1);
 if (!($27)) {
  $$022 = 0;
  return ($$022|0);
 }
 L15: while(1) {
  $28 = HEAP32[$0>>2]|0;
  $29 = ((($28)) + 168|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ((($28)) + 172|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ($30>>>0)<($32>>>0);
  if ($33) {
   $34 = ((($30)) + 1|0);
   HEAP32[$29>>2] = $34;
   $35 = HEAP8[$30>>0]|0;
   $$0$i = $35;
  } else {
   $36 = ((($28)) + 32|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = ($37|0)==(0);
   if ($38) {
    $$022 = 0;
    label = 223;
    break;
   }
   $39 = ((($28)) + 16|0);
   $40 = HEAP32[$39>>2]|0;
   $41 = ((($28)) + 28|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ((($28)) + 40|0);
   $44 = ((($28)) + 36|0);
   $45 = HEAP32[$44>>2]|0;
   $46 = (ftCall_iiii($40|0,$42,$43,$45)|0);
   $47 = ($46|0)==(0);
   if ($47) {
    HEAP32[$36>>2] = 0;
    $48 = ((($28)) + 41|0);
    HEAP8[$43>>0] = 0;
    $$pre$phi$iZ2D = $48;$$sink$i$i = $48;$592 = 0;
   } else {
    $49 = (((($28)) + 40|0) + ($46)|0);
    $$pre$i = HEAP8[$43>>0]|0;
    $$pre5$i = ((($28)) + 41|0);
    $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $49;$592 = $$pre$i;
   }
   HEAP32[$31>>2] = $$sink$i$i;
   HEAP32[$29>>2] = $$pre$phi$iZ2D;
   $$0$i = $592;
  }
  switch ($$0$i<<24>>24) {
  case -1:  {
   break;
  }
  case -40:  {
   label = 18;
   break L15;
   break;
  }
  default: {
   $$022 = 0;
   label = 223;
   break L15;
  }
  }
 }
 if ((label|0) == 18) {
  $50 = ($1|0)==(1);
  if ($50) {
   $$022 = 1;
   return ($$022|0);
  }
  $51 = HEAP8[$4>>0]|0;
  $52 = ($51<<24>>24)==(-1);
  L31: do {
   if ($52) {
    $53 = HEAP32[$0>>2]|0;
    $54 = ((($53)) + 168|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = ((($53)) + 172|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($55>>>0)<($57>>>0);
    if ($58) {
     $59 = ((($55)) + 1|0);
     HEAP32[$54>>2] = $59;
     $60 = HEAP8[$55>>0]|0;
     $$0$i$i28 = $60;
    } else {
     $61 = ((($53)) + 32|0);
     $62 = HEAP32[$61>>2]|0;
     $63 = ($62|0)==(0);
     if ($63) {
      $$08$i30 = -1;
      break;
     }
     $64 = ((($53)) + 16|0);
     $65 = HEAP32[$64>>2]|0;
     $66 = ((($53)) + 28|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($53)) + 40|0);
     $69 = ((($53)) + 36|0);
     $70 = HEAP32[$69>>2]|0;
     $71 = (ftCall_iiii($65|0,$67,$68,$70)|0);
     $72 = ($71|0)==(0);
     if ($72) {
      HEAP32[$61>>2] = 0;
      $73 = ((($53)) + 41|0);
      HEAP8[$68>>0] = 0;
      $$pre$phi$i$i25Z2D = $73;$$sink$i$i$i26 = $73;$593 = 0;
     } else {
      $74 = (((($53)) + 40|0) + ($71)|0);
      $$pre$i$i23 = HEAP8[$68>>0]|0;
      $$pre5$i$i24 = ((($53)) + 41|0);
      $$pre$phi$i$i25Z2D = $$pre5$i$i24;$$sink$i$i$i26 = $74;$593 = $$pre$i$i23;
     }
     HEAP32[$56>>2] = $$sink$i$i$i26;
     HEAP32[$54>>2] = $$pre$phi$i$i25Z2D;
     $$0$i$i28 = $593;
    }
    $75 = ($$0$i$i28<<24>>24)==(-1);
    if ($75) {
     while(1) {
      $76 = HEAP32[$0>>2]|0;
      $77 = ((($76)) + 168|0);
      $78 = HEAP32[$77>>2]|0;
      $79 = ((($76)) + 172|0);
      $80 = HEAP32[$79>>2]|0;
      $81 = ($78>>>0)<($80>>>0);
      if ($81) {
       $82 = ((($78)) + 1|0);
       HEAP32[$77>>2] = $82;
       $83 = HEAP8[$78>>0]|0;
       $$0$i37 = $83;
      } else {
       $84 = ((($76)) + 32|0);
       $85 = HEAP32[$84>>2]|0;
       $86 = ($85|0)==(0);
       if ($86) {
        $$08$i30 = 0;
        break L31;
       }
       $87 = ((($76)) + 16|0);
       $88 = HEAP32[$87>>2]|0;
       $89 = ((($76)) + 28|0);
       $90 = HEAP32[$89>>2]|0;
       $91 = ((($76)) + 40|0);
       $92 = ((($76)) + 36|0);
       $93 = HEAP32[$92>>2]|0;
       $94 = (ftCall_iiii($88|0,$90,$91,$93)|0);
       $95 = ($94|0)==(0);
       if ($95) {
        HEAP32[$84>>2] = 0;
        $96 = ((($76)) + 41|0);
        HEAP8[$91>>0] = 0;
        $$pre$phi$i34Z2D = $96;$$sink$i$i35 = $96;$594 = 0;
       } else {
        $97 = (((($76)) + 40|0) + ($94)|0);
        $$pre$i32 = HEAP8[$91>>0]|0;
        $$pre5$i33 = ((($76)) + 41|0);
        $$pre$phi$i34Z2D = $$pre5$i33;$$sink$i$i35 = $97;$594 = $$pre$i32;
       }
       HEAP32[$79>>2] = $$sink$i$i35;
       HEAP32[$77>>2] = $$pre$phi$i34Z2D;
       $$0$i37 = $594;
      }
      $98 = ($$0$i37<<24>>24)==(-1);
      if (!($98)) {
       $$08$i30 = $$0$i37;
       break;
      }
     }
    } else {
     $$08$i30 = -1;
    }
   } else {
    HEAP8[$4>>0] = -1;
    $$08$i30 = $51;
   }
  } while(0);
  $99 = $$08$i30&255;
  $$0$off99 = (($99) + -192)|0;
  $switch100 = ($$0$off99>>>0)<(3);
  L56: do {
   if ($switch100) {
    $$lcssa96$in = $$08$i30;
   } else {
    $$0101 = $99;
    L58: while(1) {
     $100 = (_stbi__process_marker($0,$$0101)|0);
     $101 = ($100|0)==(0);
     if ($101) {
      $$022 = 0;
      label = 223;
      break;
     }
     $102 = HEAP8[$4>>0]|0;
     $103 = ($102<<24>>24)==(-1);
     L61: do {
      if ($103) {
       $104 = HEAP32[$0>>2]|0;
       $105 = ((($104)) + 168|0);
       $106 = HEAP32[$105>>2]|0;
       $107 = ((($104)) + 172|0);
       $108 = HEAP32[$107>>2]|0;
       $109 = ($106>>>0)<($108>>>0);
       if ($109) {
        $110 = ((($106)) + 1|0);
        HEAP32[$105>>2] = $110;
        $111 = HEAP8[$106>>0]|0;
        $$0$i$i44 = $111;
        label = 51;
       } else {
        $112 = ((($104)) + 32|0);
        $113 = HEAP32[$112>>2]|0;
        $114 = ($113|0)==(0);
        if (!($114)) {
         $115 = ((($104)) + 16|0);
         $116 = HEAP32[$115>>2]|0;
         $117 = ((($104)) + 28|0);
         $118 = HEAP32[$117>>2]|0;
         $119 = ((($104)) + 40|0);
         $120 = ((($104)) + 36|0);
         $121 = HEAP32[$120>>2]|0;
         $122 = (ftCall_iiii($116|0,$118,$119,$121)|0);
         $123 = ($122|0)==(0);
         if ($123) {
          HEAP32[$112>>2] = 0;
          $124 = ((($104)) + 41|0);
          HEAP8[$119>>0] = 0;
          $$pre$phi$i$i41Z2D = $124;$$sink$i$i$i42 = $124;$595 = 0;
         } else {
          $125 = (((($104)) + 40|0) + ($122)|0);
          $$pre$i$i39 = HEAP8[$119>>0]|0;
          $$pre5$i$i40 = ((($104)) + 41|0);
          $$pre$phi$i$i41Z2D = $$pre5$i$i40;$$sink$i$i$i42 = $125;$595 = $$pre$i$i39;
         }
         HEAP32[$107>>2] = $$sink$i$i$i42;
         HEAP32[$105>>2] = $$pre$phi$i$i41Z2D;
         $$0$i$i44 = $595;
         label = 51;
        }
       }
       if ((label|0) == 51) {
        label = 0;
        $126 = ($$0$i$i44<<24>>24)==(-1);
        if ($126) {
         while(1) {
          $127 = HEAP32[$0>>2]|0;
          $128 = ((($127)) + 168|0);
          $129 = HEAP32[$128>>2]|0;
          $130 = ((($127)) + 172|0);
          $131 = HEAP32[$130>>2]|0;
          $132 = ($129>>>0)<($131>>>0);
          if ($132) {
           $133 = ((($129)) + 1|0);
           HEAP32[$128>>2] = $133;
           $134 = HEAP8[$129>>0]|0;
           $$0$i53 = $134;
          } else {
           $135 = ((($127)) + 32|0);
           $136 = HEAP32[$135>>2]|0;
           $137 = ($136|0)==(0);
           if ($137) {
            $$08$i46$ph$sink = 0;
            break L61;
           }
           $138 = ((($127)) + 16|0);
           $139 = HEAP32[$138>>2]|0;
           $140 = ((($127)) + 28|0);
           $141 = HEAP32[$140>>2]|0;
           $142 = ((($127)) + 40|0);
           $143 = ((($127)) + 36|0);
           $144 = HEAP32[$143>>2]|0;
           $145 = (ftCall_iiii($139|0,$141,$142,$144)|0);
           $146 = ($145|0)==(0);
           if ($146) {
            HEAP32[$135>>2] = 0;
            $147 = ((($127)) + 41|0);
            HEAP8[$142>>0] = 0;
            $$pre$phi$i50Z2D = $147;$$sink$i$i51 = $147;$596 = 0;
           } else {
            $148 = (((($127)) + 40|0) + ($145)|0);
            $$pre$i48 = HEAP8[$142>>0]|0;
            $$pre5$i49 = ((($127)) + 41|0);
            $$pre$phi$i50Z2D = $$pre5$i49;$$sink$i$i51 = $148;$596 = $$pre$i48;
           }
           HEAP32[$130>>2] = $$sink$i$i51;
           HEAP32[$128>>2] = $$pre$phi$i50Z2D;
           $$0$i53 = $596;
          }
          $149 = ($$0$i53<<24>>24)==(-1);
          if (!($149)) {
           $$08$i46$ph$sink = $$0$i53;
           break L61;
          }
         }
        }
       }
       while(1) {
        $150 = HEAP32[$0>>2]|0;
        $151 = ((($150)) + 16|0);
        $152 = HEAP32[$151>>2]|0;
        $153 = ($152|0)==(0|0);
        if ($153) {
         label = 64;
        } else {
         $154 = ((($150)) + 24|0);
         $155 = HEAP32[$154>>2]|0;
         $156 = ((($150)) + 28|0);
         $157 = HEAP32[$156>>2]|0;
         $158 = (ftCall_ii($155|0,$157)|0);
         $159 = ($158|0)==(0);
         if (!($159)) {
          $160 = ((($150)) + 32|0);
          $161 = HEAP32[$160>>2]|0;
          $162 = ($161|0)==(0);
          if ($162) {
           $$022 = 0;
           label = 223;
           break L58;
          } else {
           label = 64;
          }
         }
        }
        if ((label|0) == 64) {
         label = 0;
         $163 = ((($150)) + 168|0);
         $164 = HEAP32[$163>>2]|0;
         $165 = ((($150)) + 172|0);
         $166 = HEAP32[$165>>2]|0;
         $167 = ($164>>>0)<($166>>>0);
         if (!($167)) {
          $$022 = 0;
          label = 223;
          break L58;
         }
        }
        $168 = HEAP8[$4>>0]|0;
        $169 = ($168<<24>>24)==(-1);
        if (!($169)) {
         label = 66;
         break;
        }
        $170 = HEAP32[$0>>2]|0;
        $171 = ((($170)) + 168|0);
        $172 = HEAP32[$171>>2]|0;
        $173 = ((($170)) + 172|0);
        $174 = HEAP32[$173>>2]|0;
        $175 = ($172>>>0)<($174>>>0);
        if ($175) {
         $176 = ((($172)) + 1|0);
         HEAP32[$171>>2] = $176;
         $177 = HEAP8[$172>>0]|0;
         $$0$i$i61 = $177;
         label = 75;
        } else {
         $178 = ((($170)) + 32|0);
         $179 = HEAP32[$178>>2]|0;
         $180 = ($179|0)==(0);
         if (!($180)) {
          $181 = ((($170)) + 16|0);
          $182 = HEAP32[$181>>2]|0;
          $183 = ((($170)) + 28|0);
          $184 = HEAP32[$183>>2]|0;
          $185 = ((($170)) + 40|0);
          $186 = ((($170)) + 36|0);
          $187 = HEAP32[$186>>2]|0;
          $188 = (ftCall_iiii($182|0,$184,$185,$187)|0);
          $189 = ($188|0)==(0);
          if ($189) {
           HEAP32[$178>>2] = 0;
           $190 = ((($170)) + 41|0);
           HEAP8[$185>>0] = 0;
           $$pre$phi$i$i58Z2D = $190;$$sink$i$i$i59 = $190;$597 = 0;
          } else {
           $191 = (((($170)) + 40|0) + ($188)|0);
           $$pre$i$i56 = HEAP8[$185>>0]|0;
           $$pre5$i$i57 = ((($170)) + 41|0);
           $$pre$phi$i$i58Z2D = $$pre5$i$i57;$$sink$i$i$i59 = $191;$597 = $$pre$i$i56;
          }
          HEAP32[$173>>2] = $$sink$i$i$i59;
          HEAP32[$171>>2] = $$pre$phi$i$i58Z2D;
          $$0$i$i61 = $597;
          label = 75;
         }
        }
        if ((label|0) == 75) {
         label = 0;
         $192 = ($$0$i$i61<<24>>24)==(-1);
         if ($192) {
          break;
         }
        }
       }
       if ((label|0) == 66) {
        label = 0;
        HEAP8[$4>>0] = -1;
        $$08$i46$ph$sink = $168;
        break;
       }
       while(1) {
        $193 = HEAP32[$0>>2]|0;
        $194 = ((($193)) + 168|0);
        $195 = HEAP32[$194>>2]|0;
        $196 = ((($193)) + 172|0);
        $197 = HEAP32[$196>>2]|0;
        $198 = ($195>>>0)<($197>>>0);
        if ($198) {
         $199 = ((($195)) + 1|0);
         HEAP32[$194>>2] = $199;
         $200 = HEAP8[$195>>0]|0;
         $$0$i70 = $200;
        } else {
         $201 = ((($193)) + 32|0);
         $202 = HEAP32[$201>>2]|0;
         $203 = ($202|0)==(0);
         if ($203) {
          $$08$i46$ph$sink = 0;
          break L61;
         }
         $204 = ((($193)) + 16|0);
         $205 = HEAP32[$204>>2]|0;
         $206 = ((($193)) + 28|0);
         $207 = HEAP32[$206>>2]|0;
         $208 = ((($193)) + 40|0);
         $209 = ((($193)) + 36|0);
         $210 = HEAP32[$209>>2]|0;
         $211 = (ftCall_iiii($205|0,$207,$208,$210)|0);
         $212 = ($211|0)==(0);
         if ($212) {
          HEAP32[$201>>2] = 0;
          $213 = ((($193)) + 41|0);
          HEAP8[$208>>0] = 0;
          $$pre$phi$i67Z2D = $213;$$sink$i$i68 = $213;$598 = 0;
         } else {
          $214 = (((($193)) + 40|0) + ($211)|0);
          $$pre$i65 = HEAP8[$208>>0]|0;
          $$pre5$i66 = ((($193)) + 41|0);
          $$pre$phi$i67Z2D = $$pre5$i66;$$sink$i$i68 = $214;$598 = $$pre$i65;
         }
         HEAP32[$196>>2] = $$sink$i$i68;
         HEAP32[$194>>2] = $$pre$phi$i67Z2D;
         $$0$i70 = $598;
        }
        $215 = ($$0$i70<<24>>24)==(-1);
        if (!($215)) {
         $$08$i46$ph$sink = $$0$i70;
         break;
        }
       }
      } else {
       HEAP8[$4>>0] = -1;
       $$08$i46$ph$sink = $102;
      }
     } while(0);
     $216 = $$08$i46$ph$sink&255;
     $$0$off = (($216) + -192)|0;
     $switch = ($$0$off>>>0)<(3);
     if ($switch) {
      $$lcssa96$in = $$08$i46$ph$sink;
      break L56;
     } else {
      $$0101 = $216;
     }
    }
    if ((label|0) == 223) {
     return ($$022|0);
    }
   }
  } while(0);
  $$lcssa96 = ($$lcssa96$in<<24>>24)==(-62);
  $217 = $$lcssa96&1;
  $218 = ((($0)) + 18380|0);
  HEAP32[$218>>2] = $217;
  $219 = HEAP32[$0>>2]|0;
  $220 = ((($219)) + 168|0);
  $221 = HEAP32[$220>>2]|0;
  $222 = ((($219)) + 172|0);
  $223 = HEAP32[$222>>2]|0;
  $224 = ($221>>>0)<($223>>>0);
  if ($224) {
   $225 = ((($221)) + 1|0);
   HEAP32[$220>>2] = $225;
   $226 = HEAP8[$221>>0]|0;
   $$0$i$i$i = $226;$244 = $225;$245 = $223;
  } else {
   $227 = ((($219)) + 32|0);
   $228 = HEAP32[$227>>2]|0;
   $229 = ($228|0)==(0);
   if ($229) {
    $$0$i$i$i = 0;$244 = $221;$245 = $223;
   } else {
    $230 = ((($219)) + 16|0);
    $231 = HEAP32[$230>>2]|0;
    $232 = ((($219)) + 28|0);
    $233 = HEAP32[$232>>2]|0;
    $234 = ((($219)) + 40|0);
    $235 = ((($219)) + 36|0);
    $236 = HEAP32[$235>>2]|0;
    $237 = (ftCall_iiii($231|0,$233,$234,$236)|0);
    $238 = ($237|0)==(0);
    if ($238) {
     HEAP32[$227>>2] = 0;
     $239 = ((($219)) + 41|0);
     HEAP8[$234>>0] = 0;
     $$pre$phi$i$i$iZ2D = $239;$$sink$i$i$i$i = $239;$599 = 0;
    } else {
     $240 = (((($219)) + 40|0) + ($237)|0);
     $$pre$i$i$i = HEAP8[$234>>0]|0;
     $$pre5$i$i$i = ((($219)) + 41|0);
     $$pre$phi$i$i$iZ2D = $$pre5$i$i$i;$$sink$i$i$i$i = $240;$599 = $$pre$i$i$i;
    }
    HEAP32[$222>>2] = $$sink$i$i$i$i;
    HEAP32[$220>>2] = $$pre$phi$i$i$iZ2D;
    $$0$i$i$i = $599;$244 = $$pre$phi$i$i$iZ2D;$245 = $$sink$i$i$i$i;
   }
  }
  $241 = $$0$i$i$i&255;
  $242 = $241 << 8;
  $243 = ($244>>>0)<($245>>>0);
  if ($243) {
   $246 = ((($244)) + 1|0);
   HEAP32[$220>>2] = $246;
   $247 = HEAP8[$244>>0]|0;
   $$0$i8$i$i = $247;$266 = $246;$267 = $245;
  } else {
   $248 = ((($219)) + 32|0);
   $249 = HEAP32[$248>>2]|0;
   $250 = ($249|0)==(0);
   if ($250) {
    $$0$i8$i$i = 0;$266 = $244;$267 = $245;
   } else {
    $251 = ((($219)) + 16|0);
    $252 = HEAP32[$251>>2]|0;
    $253 = ((($219)) + 28|0);
    $254 = HEAP32[$253>>2]|0;
    $255 = ((($219)) + 40|0);
    $256 = ((($219)) + 36|0);
    $257 = HEAP32[$256>>2]|0;
    $258 = (ftCall_iiii($252|0,$254,$255,$257)|0);
    $259 = ($258|0)==(0);
    if ($259) {
     HEAP32[$248>>2] = 0;
     $260 = ((($219)) + 41|0);
     HEAP8[$255>>0] = 0;
     $$pre$phi$i5$i$iZ2D = $260;$$sink$i$i6$i$i = $260;$600 = 0;
    } else {
     $261 = (((($219)) + 40|0) + ($258)|0);
     $$pre$i3$i$i = HEAP8[$255>>0]|0;
     $$pre5$i4$i$i = ((($219)) + 41|0);
     $$pre$phi$i5$i$iZ2D = $$pre5$i4$i$i;$$sink$i$i6$i$i = $261;$600 = $$pre$i3$i$i;
    }
    HEAP32[$222>>2] = $$sink$i$i6$i$i;
    HEAP32[$220>>2] = $$pre$phi$i5$i$iZ2D;
    $$0$i8$i$i = $600;$266 = $$pre$phi$i5$i$iZ2D;$267 = $$sink$i$i6$i$i;
   }
  }
  $262 = $$0$i8$i$i&255;
  $263 = $242 | $262;
  $264 = ($263>>>0)<(11);
  if ($264) {
   $$022 = 0;
   return ($$022|0);
  }
  $265 = ($266>>>0)<($267>>>0);
  if ($265) {
   $268 = ((($266)) + 1|0);
   HEAP32[$220>>2] = $268;
   $269 = HEAP8[$266>>0]|0;
   $$0$i$i77 = $269;$286 = $268;$287 = $267;
  } else {
   $270 = ((($219)) + 32|0);
   $271 = HEAP32[$270>>2]|0;
   $272 = ($271|0)==(0);
   if ($272) {
    $$022 = 0;
    return ($$022|0);
   }
   $273 = ((($219)) + 16|0);
   $274 = HEAP32[$273>>2]|0;
   $275 = ((($219)) + 28|0);
   $276 = HEAP32[$275>>2]|0;
   $277 = ((($219)) + 40|0);
   $278 = ((($219)) + 36|0);
   $279 = HEAP32[$278>>2]|0;
   $280 = (ftCall_iiii($274|0,$276,$277,$279)|0);
   $281 = ($280|0)==(0);
   if ($281) {
    HEAP32[$270>>2] = 0;
    $282 = ((($219)) + 41|0);
    HEAP8[$277>>0] = 0;
    $$pre$phi$i$i74Z2D = $282;$$sink$i$i$i75 = $282;$601 = 0;
   } else {
    $283 = (((($219)) + 40|0) + ($280)|0);
    $$pre$i$i72 = HEAP8[$277>>0]|0;
    $$pre5$i$i73 = ((($219)) + 41|0);
    $$pre$phi$i$i74Z2D = $$pre5$i$i73;$$sink$i$i$i75 = $283;$601 = $$pre$i$i72;
   }
   HEAP32[$222>>2] = $$sink$i$i$i75;
   HEAP32[$220>>2] = $$pre$phi$i$i74Z2D;
   $$0$i$i77 = $601;$286 = $$pre$phi$i$i74Z2D;$287 = $$sink$i$i$i75;
  }
  $284 = ($$0$i$i77<<24>>24)==(8);
  if (!($284)) {
   $$022 = 0;
   return ($$022|0);
  }
  $285 = ($286>>>0)<($287>>>0);
  if ($285) {
   $288 = ((($286)) + 1|0);
   HEAP32[$220>>2] = $288;
   $289 = HEAP8[$286>>0]|0;
   $$0$i$i188$i = $289;$307 = $288;$308 = $287;
  } else {
   $290 = ((($219)) + 32|0);
   $291 = HEAP32[$290>>2]|0;
   $292 = ($291|0)==(0);
   if ($292) {
    $$0$i$i188$i = 0;$307 = $286;$308 = $287;
   } else {
    $293 = ((($219)) + 16|0);
    $294 = HEAP32[$293>>2]|0;
    $295 = ((($219)) + 28|0);
    $296 = HEAP32[$295>>2]|0;
    $297 = ((($219)) + 40|0);
    $298 = ((($219)) + 36|0);
    $299 = HEAP32[$298>>2]|0;
    $300 = (ftCall_iiii($294|0,$296,$297,$299)|0);
    $301 = ($300|0)==(0);
    if ($301) {
     HEAP32[$290>>2] = 0;
     $302 = ((($219)) + 41|0);
     HEAP8[$297>>0] = 0;
     $$pre$phi$i$i185$iZ2D = $302;$$sink$i$i$i186$i = $302;$602 = 0;
    } else {
     $303 = (((($219)) + 40|0) + ($300)|0);
     $$pre$i$i183$i = HEAP8[$297>>0]|0;
     $$pre5$i$i184$i = ((($219)) + 41|0);
     $$pre$phi$i$i185$iZ2D = $$pre5$i$i184$i;$$sink$i$i$i186$i = $303;$602 = $$pre$i$i183$i;
    }
    HEAP32[$222>>2] = $$sink$i$i$i186$i;
    HEAP32[$220>>2] = $$pre$phi$i$i185$iZ2D;
    $$0$i$i188$i = $602;$307 = $$pre$phi$i$i185$iZ2D;$308 = $$sink$i$i$i186$i;
   }
  }
  $304 = $$0$i$i188$i&255;
  $305 = $304 << 8;
  $306 = ($307>>>0)<($308>>>0);
  if ($306) {
   $309 = ((($307)) + 1|0);
   HEAP32[$220>>2] = $309;
   $310 = HEAP8[$307>>0]|0;
   $$0$i8$i195$i = $310;$330 = $309;$331 = $308;
  } else {
   $311 = ((($219)) + 32|0);
   $312 = HEAP32[$311>>2]|0;
   $313 = ($312|0)==(0);
   if ($313) {
    $$0$i8$i195$i = 0;$330 = $307;$331 = $308;
   } else {
    $314 = ((($219)) + 16|0);
    $315 = HEAP32[$314>>2]|0;
    $316 = ((($219)) + 28|0);
    $317 = HEAP32[$316>>2]|0;
    $318 = ((($219)) + 40|0);
    $319 = ((($219)) + 36|0);
    $320 = HEAP32[$319>>2]|0;
    $321 = (ftCall_iiii($315|0,$317,$318,$320)|0);
    $322 = ($321|0)==(0);
    if ($322) {
     HEAP32[$311>>2] = 0;
     $323 = ((($219)) + 41|0);
     HEAP8[$318>>0] = 0;
     $$pre$phi$i5$i192$iZ2D = $323;$$sink$i$i6$i193$i = $323;$603 = 0;
    } else {
     $324 = (((($219)) + 40|0) + ($321)|0);
     $$pre$i3$i190$i = HEAP8[$318>>0]|0;
     $$pre5$i4$i191$i = ((($219)) + 41|0);
     $$pre$phi$i5$i192$iZ2D = $$pre5$i4$i191$i;$$sink$i$i6$i193$i = $324;$603 = $$pre$i3$i190$i;
    }
    HEAP32[$222>>2] = $$sink$i$i6$i193$i;
    HEAP32[$220>>2] = $$pre$phi$i5$i192$iZ2D;
    $$0$i8$i195$i = $603;$330 = $$pre$phi$i5$i192$iZ2D;$331 = $$sink$i$i6$i193$i;
   }
  }
  $325 = $$0$i8$i195$i&255;
  $326 = $305 | $325;
  $327 = ((($219)) + 4|0);
  HEAP32[$327>>2] = $326;
  $328 = ($326|0)==(0);
  if ($328) {
   $$022 = 0;
   return ($$022|0);
  }
  $329 = ($330>>>0)<($331>>>0);
  if ($329) {
   $332 = ((($330)) + 1|0);
   HEAP32[$220>>2] = $332;
   $333 = HEAP8[$330>>0]|0;
   $$0$i$i202$i = $333;$351 = $332;$352 = $331;
  } else {
   $334 = ((($219)) + 32|0);
   $335 = HEAP32[$334>>2]|0;
   $336 = ($335|0)==(0);
   if ($336) {
    $$0$i$i202$i = 0;$351 = $330;$352 = $331;
   } else {
    $337 = ((($219)) + 16|0);
    $338 = HEAP32[$337>>2]|0;
    $339 = ((($219)) + 28|0);
    $340 = HEAP32[$339>>2]|0;
    $341 = ((($219)) + 40|0);
    $342 = ((($219)) + 36|0);
    $343 = HEAP32[$342>>2]|0;
    $344 = (ftCall_iiii($338|0,$340,$341,$343)|0);
    $345 = ($344|0)==(0);
    if ($345) {
     HEAP32[$334>>2] = 0;
     $346 = ((($219)) + 41|0);
     HEAP8[$341>>0] = 0;
     $$pre$phi$i$i199$iZ2D = $346;$$sink$i$i$i200$i = $346;$604 = 0;
    } else {
     $347 = (((($219)) + 40|0) + ($344)|0);
     $$pre$i$i197$i = HEAP8[$341>>0]|0;
     $$pre5$i$i198$i = ((($219)) + 41|0);
     $$pre$phi$i$i199$iZ2D = $$pre5$i$i198$i;$$sink$i$i$i200$i = $347;$604 = $$pre$i$i197$i;
    }
    HEAP32[$222>>2] = $$sink$i$i$i200$i;
    HEAP32[$220>>2] = $$pre$phi$i$i199$iZ2D;
    $$0$i$i202$i = $604;$351 = $$pre$phi$i$i199$iZ2D;$352 = $$sink$i$i$i200$i;
   }
  }
  $348 = $$0$i$i202$i&255;
  $349 = $348 << 8;
  $350 = ($351>>>0)<($352>>>0);
  if ($350) {
   $353 = ((($351)) + 1|0);
   HEAP32[$220>>2] = $353;
   $354 = HEAP8[$351>>0]|0;
   $$0$i8$i209$i = $354;$373 = $353;$374 = $352;
  } else {
   $355 = ((($219)) + 32|0);
   $356 = HEAP32[$355>>2]|0;
   $357 = ($356|0)==(0);
   if ($357) {
    $$0$i8$i209$i = 0;$373 = $351;$374 = $352;
   } else {
    $358 = ((($219)) + 16|0);
    $359 = HEAP32[$358>>2]|0;
    $360 = ((($219)) + 28|0);
    $361 = HEAP32[$360>>2]|0;
    $362 = ((($219)) + 40|0);
    $363 = ((($219)) + 36|0);
    $364 = HEAP32[$363>>2]|0;
    $365 = (ftCall_iiii($359|0,$361,$362,$364)|0);
    $366 = ($365|0)==(0);
    if ($366) {
     HEAP32[$355>>2] = 0;
     $367 = ((($219)) + 41|0);
     HEAP8[$362>>0] = 0;
     $$pre$phi$i5$i206$iZ2D = $367;$$sink$i$i6$i207$i = $367;$605 = 0;
    } else {
     $368 = (((($219)) + 40|0) + ($365)|0);
     $$pre$i3$i204$i = HEAP8[$362>>0]|0;
     $$pre5$i4$i205$i = ((($219)) + 41|0);
     $$pre$phi$i5$i206$iZ2D = $$pre5$i4$i205$i;$$sink$i$i6$i207$i = $368;$605 = $$pre$i3$i204$i;
    }
    HEAP32[$222>>2] = $$sink$i$i6$i207$i;
    HEAP32[$220>>2] = $$pre$phi$i5$i206$iZ2D;
    $$0$i8$i209$i = $605;$373 = $$pre$phi$i5$i206$iZ2D;$374 = $$sink$i$i6$i207$i;
   }
  }
  $369 = $$0$i8$i209$i&255;
  $370 = $349 | $369;
  HEAP32[$219>>2] = $370;
  $371 = ($370|0)==(0);
  if ($371) {
   $$022 = 0;
   return ($$022|0);
  }
  $372 = ($373>>>0)<($374>>>0);
  if ($372) {
   $375 = ((($373)) + 1|0);
   HEAP32[$220>>2] = $375;
   $376 = HEAP8[$373>>0]|0;
   $$0$i216$i = $376;$606 = $374;$607 = $375;
  } else {
   $377 = ((($219)) + 32|0);
   $378 = HEAP32[$377>>2]|0;
   $379 = ($378|0)==(0);
   if ($379) {
    $$022 = 0;
    return ($$022|0);
   }
   $380 = ((($219)) + 16|0);
   $381 = HEAP32[$380>>2]|0;
   $382 = ((($219)) + 28|0);
   $383 = HEAP32[$382>>2]|0;
   $384 = ((($219)) + 40|0);
   $385 = ((($219)) + 36|0);
   $386 = HEAP32[$385>>2]|0;
   $387 = (ftCall_iiii($381|0,$383,$384,$386)|0);
   $388 = ($387|0)==(0);
   if ($388) {
    HEAP32[$377>>2] = 0;
    $389 = ((($219)) + 41|0);
    HEAP8[$384>>0] = 0;
    $$pre$phi$i213$iZ2D = $389;$$sink$i$i214$i = $389;$608 = 0;
   } else {
    $390 = (((($219)) + 40|0) + ($387)|0);
    $$pre$i211$i = HEAP8[$384>>0]|0;
    $$pre5$i212$i = ((($219)) + 41|0);
    $$pre$phi$i213$iZ2D = $$pre5$i212$i;$$sink$i$i214$i = $390;$608 = $$pre$i211$i;
   }
   HEAP32[$222>>2] = $$sink$i$i214$i;
   HEAP32[$220>>2] = $$pre$phi$i213$iZ2D;
   $$0$i216$i = $608;$606 = $$sink$i$i214$i;$607 = $$pre$phi$i213$iZ2D;
  }
  $391 = $$0$i216$i&255;
  switch ($$0$i216$i<<24>>24) {
  case 1: case 3: case 4:  {
   break;
  }
  default: {
   $$022 = 0;
   return ($$022|0);
  }
  }
  $392 = ((($219)) + 8|0);
  HEAP32[$392>>2] = $391;
  $$0180278$i = 0;
  while(1) {
   $393 = (((((($0)) + 18076|0) + (($$0180278$i*72)|0)|0)) + 44|0);
   HEAP32[$393>>2] = 0;
   $394 = (((((($0)) + 18076|0) + (($$0180278$i*72)|0)|0)) + 56|0);
   HEAP32[$394>>2] = 0;
   $395 = (($$0180278$i) + 1)|0;
   $exitcond296$i = ($395|0)==($391|0);
   if ($exitcond296$i) {
    break;
   } else {
    $$0180278$i = $395;
   }
  }
  $396 = ($391*3)|0;
  $397 = (($396) + 8)|0;
  $398 = ($263|0)==($397|0);
  if (!($398)) {
   $$022 = 0;
   return ($$022|0);
  }
  $399 = ((($0)) + 18412|0);
  HEAP32[$399>>2] = 0;
  $400 = ($$0$i216$i<<24>>24)==(0);
  L224: do {
   if ($400) {
    $481 = 0;
   } else {
    $401 = ((($219)) + 32|0);
    $402 = ((($219)) + 16|0);
    $403 = ((($219)) + 28|0);
    $404 = ((($219)) + 40|0);
    $405 = ((($219)) + 36|0);
    $406 = ((($219)) + 41|0);
    $$1181272$i = 0;$408 = $607;$409 = $606;$609 = $391;
    while(1) {
     $407 = ($408>>>0)<($409>>>0);
     do {
      if ($407) {
       $410 = ((($408)) + 1|0);
       HEAP32[$220>>2] = $410;
       $411 = HEAP8[$408>>0]|0;
       $$0$i223$i = $411;$423 = $609;$430 = $410;$431 = $409;
      } else {
       $412 = HEAP32[$401>>2]|0;
       $413 = ($412|0)==(0);
       if ($413) {
        $$0$i223$i = 0;$423 = $609;$430 = $408;$431 = $409;
        break;
       }
       $414 = HEAP32[$402>>2]|0;
       $415 = HEAP32[$403>>2]|0;
       $416 = HEAP32[$405>>2]|0;
       $417 = (ftCall_iiii($414|0,$415,$404,$416)|0);
       $418 = ($417|0)==(0);
       if ($418) {
        HEAP32[$401>>2] = 0;
        HEAP8[$404>>0] = 0;
        $$sink$i$i221$i = $406;$610 = 0;
       } else {
        $419 = (((($219)) + 40|0) + ($417)|0);
        $$pre$i218$i = HEAP8[$404>>0]|0;
        $$sink$i$i221$i = $419;$610 = $$pre$i218$i;
       }
       HEAP32[$222>>2] = $$sink$i$i221$i;
       HEAP32[$220>>2] = $406;
       $$pre$i79 = HEAP32[$392>>2]|0;
       $$0$i223$i = $610;$423 = $$pre$i79;$430 = $406;$431 = $$sink$i$i221$i;
      }
     } while(0);
     $420 = $$0$i223$i&255;
     $421 = (((($0)) + 18076|0) + (($$1181272$i*72)|0)|0);
     HEAP32[$421>>2] = $420;
     $422 = ($423|0)==(3);
     do {
      if ($422) {
       $424 = (140191 + ($$1181272$i)|0);
       $425 = HEAP8[$424>>0]|0;
       $426 = ($$0$i223$i<<24>>24)==($425<<24>>24);
       if (!($426)) {
        break;
       }
       $427 = HEAP32[$399>>2]|0;
       $428 = (($427) + 1)|0;
       HEAP32[$399>>2] = $428;
      }
     } while(0);
     $429 = ($430>>>0)<($431>>>0);
     do {
      if ($429) {
       $432 = ((($430)) + 1|0);
       HEAP32[$220>>2] = $432;
       $433 = HEAP8[$430>>0]|0;
       $$0$i230$i = $433;$452 = $432;$453 = $431;
      } else {
       $434 = HEAP32[$401>>2]|0;
       $435 = ($434|0)==(0);
       if ($435) {
        $$0$i230$i = 0;$452 = $430;$453 = $431;
        break;
       }
       $436 = HEAP32[$402>>2]|0;
       $437 = HEAP32[$403>>2]|0;
       $438 = HEAP32[$405>>2]|0;
       $439 = (ftCall_iiii($436|0,$437,$404,$438)|0);
       $440 = ($439|0)==(0);
       if ($440) {
        HEAP32[$401>>2] = 0;
        HEAP8[$404>>0] = 0;
        $$sink$i$i228$i = $406;$611 = 0;
       } else {
        $441 = (((($219)) + 40|0) + ($439)|0);
        $$pre$i225$i = HEAP8[$404>>0]|0;
        $$sink$i$i228$i = $441;$611 = $$pre$i225$i;
       }
       HEAP32[$222>>2] = $$sink$i$i228$i;
       HEAP32[$220>>2] = $406;
       $$0$i230$i = $611;$452 = $406;$453 = $$sink$i$i228$i;
      }
     } while(0);
     $442 = $$0$i230$i&255;
     $443 = $442 >>> 4;
     $444 = (((((($0)) + 18076|0) + (($$1181272$i*72)|0)|0)) + 4|0);
     HEAP32[$444>>2] = $443;
     $445 = ($443|0)==(0);
     $446 = ($$0$i230$i&255)>(79);
     $or$cond$i = $446 | $445;
     if ($or$cond$i) {
      $$022 = 0;
      label = 223;
      break;
     }
     $447 = $442 & 15;
     $448 = (((((($0)) + 18076|0) + (($$1181272$i*72)|0)|0)) + 8|0);
     HEAP32[$448>>2] = $447;
     $449 = (($447) + -1)|0;
     $450 = ($449>>>0)>(3);
     if ($450) {
      $$022 = 0;
      label = 223;
      break;
     }
     $451 = ($452>>>0)<($453>>>0);
     do {
      if ($451) {
       $454 = ((($452)) + 1|0);
       HEAP32[$220>>2] = $454;
       $455 = HEAP8[$452>>0]|0;
       $$0$i241$i = $455;$612 = $453;$613 = $454;
       label = 179;
      } else {
       $456 = HEAP32[$401>>2]|0;
       $457 = ($456|0)==(0);
       if ($457) {
        $458 = (((((($0)) + 18076|0) + (($$1181272$i*72)|0)|0)) + 12|0);
        HEAP32[$458>>2] = 0;
        $614 = $453;$615 = $452;
        break;
       }
       $459 = HEAP32[$402>>2]|0;
       $460 = HEAP32[$403>>2]|0;
       $461 = HEAP32[$405>>2]|0;
       $462 = (ftCall_iiii($459|0,$460,$404,$461)|0);
       $463 = ($462|0)==(0);
       if ($463) {
        HEAP32[$401>>2] = 0;
        HEAP8[$404>>0] = 0;
        $$sink$i$i239$i = $406;$616 = 0;
       } else {
        $464 = (((($219)) + 40|0) + ($462)|0);
        $$pre$i236$i = HEAP8[$404>>0]|0;
        $$sink$i$i239$i = $464;$616 = $$pre$i236$i;
       }
       HEAP32[$222>>2] = $$sink$i$i239$i;
       HEAP32[$220>>2] = $406;
       $$0$i241$i = $616;$612 = $$sink$i$i239$i;$613 = $406;
       label = 179;
      }
     } while(0);
     if ((label|0) == 179) {
      label = 0;
      $465 = $$0$i241$i&255;
      $466 = (((((($0)) + 18076|0) + (($$1181272$i*72)|0)|0)) + 12|0);
      HEAP32[$466>>2] = $465;
      $467 = ($$0$i241$i&255)>(3);
      if ($467) {
       $$022 = 0;
       label = 223;
       break;
      } else {
       $614 = $612;$615 = $613;
      }
     }
     $468 = (($$1181272$i) + 1)|0;
     $469 = HEAP32[$392>>2]|0;
     $470 = ($468|0)<($469|0);
     if ($470) {
      $$1181272$i = $468;$408 = $615;$409 = $614;$609 = $469;
     } else {
      $481 = $469;
      break L224;
     }
    }
    if ((label|0) == 223) {
     return ($$022|0);
    }
   }
  } while(0);
  $471 = ($1|0)==(0);
  if (!($471)) {
   $$022 = 1;
   return ($$022|0);
  }
  $472 = HEAP32[$219>>2]|0;
  $473 = HEAP32[$327>>2]|0;
  $474 = $473 | $472;
  $475 = ($474|0)<(0);
  if ($475) {
   $$022 = 0;
   return ($$022|0);
  }
  $476 = ($473|0)==(0);
  do {
   if (!($476)) {
    $477 = (2147483647 / ($473|0))&-1;
    $478 = ($477|0)<($472|0);
    if ($478) {
     $$022 = 0;
    } else {
     break;
    }
    return ($$022|0);
   }
  } while(0);
  $479 = Math_imul($473, $472)|0;
  $480 = $479 | $481;
  $482 = ($480|0)<(0);
  if ($482) {
   $$022 = 0;
   return ($$022|0);
  }
  $483 = ($481|0)==(0);
  do {
   if ($483) {
    $$0177$lcssa$i = 1;$$0178$lcssa$i = 1;$617 = 0;
   } else {
    $484 = (2147483647 / ($481|0))&-1;
    $485 = ($484|0)<($479|0);
    if ($485) {
     $$022 = 0;
     return ($$022|0);
    }
    $486 = ($481|0)>(0);
    if (!($486)) {
     $$0177$lcssa$i = 1;$$0178$lcssa$i = 1;$617 = 0;
     break;
    }
    $$0177269$i = 1;$$0178268$i = 1;$$2267$i = 0;
    while(1) {
     $487 = (((((($0)) + 18076|0) + (($$2267$i*72)|0)|0)) + 4|0);
     $488 = HEAP32[$487>>2]|0;
     $489 = ($488|0)>($$0178268$i|0);
     $spec$select$i = $489 ? $488 : $$0178268$i;
     $490 = (((((($0)) + 18076|0) + (($$2267$i*72)|0)|0)) + 8|0);
     $491 = HEAP32[$490>>2]|0;
     $492 = ($491|0)>($$0177269$i|0);
     $$1$i = $492 ? $491 : $$0177269$i;
     $493 = (($$2267$i) + 1)|0;
     $exitcond$i = ($493|0)==($481|0);
     if ($exitcond$i) {
      $$0177$lcssa$i = $$1$i;$$0178$lcssa$i = $spec$select$i;$617 = 1;
      break;
     } else {
      $$0177269$i = $$1$i;$$0178268$i = $spec$select$i;$$2267$i = $493;
     }
    }
   }
  } while(0);
  $494 = ((($0)) + 18052|0);
  HEAP32[$494>>2] = $$0178$lcssa$i;
  $495 = ((($0)) + 18056|0);
  HEAP32[$495>>2] = $$0177$lcssa$i;
  $496 = $$0178$lcssa$i << 3;
  $497 = ((($0)) + 18068|0);
  HEAP32[$497>>2] = $496;
  $498 = $$0177$lcssa$i << 3;
  $499 = ((($0)) + 18072|0);
  HEAP32[$499>>2] = $498;
  $500 = (($472) + -1)|0;
  $501 = (($500) + ($496))|0;
  $502 = (($501>>>0) / ($496>>>0))&-1;
  $503 = ((($0)) + 18060|0);
  HEAP32[$503>>2] = $502;
  $504 = (($473) + -1)|0;
  $505 = (($504) + ($498))|0;
  $506 = (($505>>>0) / ($498>>>0))&-1;
  $507 = ((($0)) + 18064|0);
  HEAP32[$507>>2] = $506;
  if (!($617)) {
   $$022 = 1;
   return ($$022|0);
  }
  $508 = (($$0178$lcssa$i) + -1)|0;
  $509 = (($$0177$lcssa$i) + -1)|0;
  $$3265$i = 0;$513 = $472;$520 = $473;
  while(1) {
   $510 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 4|0);
   $511 = HEAP32[$510>>2]|0;
   $512 = Math_imul($511, $513)|0;
   $514 = (($508) + ($512))|0;
   $515 = (($514>>>0) / ($$0178$lcssa$i>>>0))&-1;
   $516 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 28|0);
   HEAP32[$516>>2] = $515;
   $517 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 8|0);
   $518 = HEAP32[$517>>2]|0;
   $519 = Math_imul($518, $520)|0;
   $521 = (($509) + ($519))|0;
   $522 = (($521>>>0) / ($$0177$lcssa$i>>>0))&-1;
   $523 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 32|0);
   HEAP32[$523>>2] = $522;
   $524 = Math_imul($511, $502)|0;
   $525 = $524 << 3;
   $526 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 36|0);
   HEAP32[$526>>2] = $525;
   $527 = Math_imul($518, $506)|0;
   $528 = $527 << 3;
   $529 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 40|0);
   HEAP32[$529>>2] = $528;
   $530 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 60|0);
   HEAP32[$530>>2] = 0;
   $531 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 52|0);
   HEAP32[$531>>2] = 0;
   $532 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 56|0);
   HEAP32[$532>>2] = 0;
   $533 = $528 | $525;
   $534 = ($533|0)<(0);
   if ($534) {
    label = 196;
    break;
   }
   $535 = ($527|0)==(0);
   if (!($535)) {
    $536 = (2147483647 / ($528|0))&-1;
    $537 = ($536|0)<($525|0);
    if ($537) {
     label = 196;
     break;
    }
   }
   $539 = Math_imul($528, $525)|0;
   $540 = $539 | 15;
   $541 = (_malloc($540)|0);
   $542 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 48|0);
   HEAP32[$542>>2] = $541;
   $543 = ($541|0)==(0|0);
   if ($543) {
    label = 198;
    break;
   }
   $556 = $541;
   $557 = (($556) + 15)|0;
   $558 = $557 & -16;
   $559 = $558;
   $560 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 44|0);
   HEAP32[$560>>2] = $559;
   $561 = HEAP32[$218>>2]|0;
   $562 = ($561|0)==(0);
   if (!($562)) {
    $563 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 64|0);
    HEAP32[$563>>2] = $524;
    $564 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 68|0);
    HEAP32[$564>>2] = $527;
    if ($535) {
     $$old$i = ($539>>>0)<(1073741824);
     if (!($$old$i)) {
      label = 210;
      break;
     }
    } else {
     $565 = (2147483647 / ($528|0))&-1;
     $566 = ($565|0)>=($525|0);
     $567 = ($539>>>0)<(1073741824);
     $or$cond312$i = $567 & $566;
     if (!($or$cond312$i)) {
      label = 210;
      break;
     }
    }
    $568 = $539 << 1;
    $569 = $568 | 15;
    $570 = (_malloc($569)|0);
    HEAP32[$531>>2] = $570;
    $571 = ($570|0)==(0|0);
    if ($571) {
     label = 212;
     break;
    }
    $584 = $570;
    $585 = (($584) + 15)|0;
    $586 = $585 & -16;
    $587 = $586;
    HEAP32[$530>>2] = $587;
   }
   $588 = (($$3265$i) + 1)|0;
   $589 = HEAP32[$392>>2]|0;
   $590 = ($588|0)<($589|0);
   if (!($590)) {
    $$022 = 1;
    label = 223;
    break;
   }
   $$pre298$i = HEAP32[$219>>2]|0;
   $$pre299$i = HEAP32[$327>>2]|0;
   $$3265$i = $588;$513 = $$pre298$i;$520 = $$pre299$i;
  }
  if ((label|0) == 196) {
   $538 = (((((($0)) + 18076|0) + (($$3265$i*72)|0)|0)) + 48|0);
   HEAP32[$538>>2] = 0;
   label = 198;
  }
  else if ((label|0) == 210) {
   HEAP32[$531>>2] = 0;
   label = 212;
  }
  else if ((label|0) == 223) {
   return ($$022|0);
  }
  if ((label|0) == 198) {
   $$01$i233$i = 0;
   while(1) {
    $544 = (((((($0)) + 18076|0) + (($$01$i233$i*72)|0)|0)) + 48|0);
    $545 = HEAP32[$544>>2]|0;
    $546 = ($545|0)==(0|0);
    if (!($546)) {
     $547 = (((((($0)) + 18076|0) + (($$01$i233$i*72)|0)|0)) + 44|0);
     _free($545);
     HEAP32[$544>>2] = 0;
     HEAP32[$547>>2] = 0;
    }
    $548 = (((((($0)) + 18076|0) + (($$01$i233$i*72)|0)|0)) + 52|0);
    $549 = HEAP32[$548>>2]|0;
    $550 = ($549|0)==(0|0);
    if (!($550)) {
     $551 = (((((($0)) + 18076|0) + (($$01$i233$i*72)|0)|0)) + 60|0);
     _free($549);
     HEAP32[$548>>2] = 0;
     HEAP32[$551>>2] = 0;
    }
    $552 = (((((($0)) + 18076|0) + (($$01$i233$i*72)|0)|0)) + 56|0);
    $553 = HEAP32[$552>>2]|0;
    $554 = ($553|0)==(0|0);
    if (!($554)) {
     _free($553);
     HEAP32[$552>>2] = 0;
    }
    $555 = (($$01$i233$i) + 1)|0;
    $exitcond$i234$i = ($$01$i233$i|0)==($$3265$i|0);
    if ($exitcond$i234$i) {
     $$022 = 0;
     break;
    } else {
     $$01$i233$i = $555;
    }
   }
   return ($$022|0);
  }
  else if ((label|0) == 212) {
   $$01$i$i = 0;
   while(1) {
    $572 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 48|0);
    $573 = HEAP32[$572>>2]|0;
    $574 = ($573|0)==(0|0);
    if (!($574)) {
     $575 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 44|0);
     _free($573);
     HEAP32[$572>>2] = 0;
     HEAP32[$575>>2] = 0;
    }
    $576 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 52|0);
    $577 = HEAP32[$576>>2]|0;
    $578 = ($577|0)==(0|0);
    if (!($578)) {
     $579 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 60|0);
     _free($577);
     HEAP32[$576>>2] = 0;
     HEAP32[$579>>2] = 0;
    }
    $580 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 56|0);
    $581 = HEAP32[$580>>2]|0;
    $582 = ($581|0)==(0|0);
    if (!($582)) {
     _free($581);
     HEAP32[$580>>2] = 0;
    }
    $583 = (($$01$i$i) + 1)|0;
    $exitcond$i$i = ($$01$i$i|0)==($$3265$i|0);
    if ($exitcond$i$i) {
     $$022 = 0;
     break;
    } else {
     $$01$i$i = $583;
    }
   }
   return ($$022|0);
  }
 }
 else if ((label|0) == 223) {
  return ($$022|0);
 }
 return (0)|0;
}
function _load_jpeg_image($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i59$i$sink = 0, $$0$i$i$i59$i$sink$be = 0, $$0$i$i$i59$i$sink$ph = 0, $$0$i$i110$i = 0, $$0$i$i49$i = 0, $$0$i$i67$i$sink = 0, $$0$i$i67$i$sink$be = 0, $$0$i$i67$i$sink$ph = 0, $$0$i$i89$i = 0, $$0$i$i96$i = 0, $$0$i10$i$i = 0, $$0$i103$i$i = 0, $$0$i120$i = 0, $$0$i163$i$i$i$sink = 0, $$0$i163$i$i$i$sink$be = 0, $$0$i163$i$i$i$sink$ph = 0;
 var $$0$i182$i$i$i$sink = 0, $$0$i182$i$i$i$sink$be = 0, $$0$i182$i$i$i$sink$ph = 0, $$0$i193$i$i$i$sink = 0, $$0$i193$i$i$i$sink$be = 0, $$0$i193$i$i$i$sink$ph = 0, $$0$i206$i$i$i$sink = 0, $$0$i206$i$i$i$sink$be = 0, $$0$i206$i$i$i$sink$ph = 0, $$0$i226$i$i$i$sink = 0, $$0$i226$i$i$i$sink$be = 0, $$0$i226$i$i$i$sink$ph = 0, $$0$i246$i$i$i$sink = 0, $$0$i246$i$i$i$sink$be = 0, $$0$i246$i$i$i$sink$ph = 0, $$0$i253$i$i$i = 0, $$0$i267$i$i$i = 0, $$0$i274$i$i$i = 0, $$0$i288$i$i$i = 0, $$0$i291$i$i$sink = 0;
 var $$0$i291$i$i$sink$be = 0, $$0$i291$i$i$sink$ph = 0, $$0$i302$i$i$i = 0, $$0$i309$i$i$i = 0, $$0$i310$i$i$sink = 0, $$0$i310$i$i$sink$be = 0, $$0$i310$i$i$sink$ph = 0, $$0$i316$i$i$i = 0, $$0$i334$i$i$sink = 0, $$0$i334$i$i$sink$be = 0, $$0$i334$i$i$sink$ph = 0, $$0$i349$i$i = 0, $$0$i363$i$i = 0, $$0$i370$i$i = 0, $$0$i377$i$i = 0, $$0$i75$i = 0, $$0$i8$i$i = 0, $$0$i8$i$i$i = 0, $$0$i8$i103$i = 0, $$0$i82$i = 0;
 var $$0$i82$i$i = 0, $$0$i89$i$i = 0, $$0$i96$i$i = 0, $$01$i$i = 0, $$01$i$i292 = 0, $$01$i$i296 = 0, $$01$i$i300 = 0, $$0130$i$i$i = 0, $$0140$i$i$i = 0, $$0141$i$i$i = 0, $$0256424$i$i = 0, $$0257425$i$i = 0, $$0265462$i$i = 0, $$0266458$i$i = 0, $$0267467$i$i = 0, $$0268476$i$i = 0, $$0269471$i$i = 0, $$0270441$i$i = 0, $$0271446$i$i = 0, $$0272437$i$i = 0;
 var $$0273408 = 0, $$0273428$i$i = 0, $$0274432$i$i = 0, $$0275397 = 0, $$0275454$i$i = 0, $$0276450$i$i = 0, $$0279404 = 0, $$0280396 = 0, $$04447$us$i$i = 0, $$04552$i$i = 0, $$046$us$i$i = 0, $$06$i$us$i$i = 0, $$068$i$i = 0, $$069$lcssa$i$i = 0, $$069110$i$i = 0, $$08$i$i = 0, $$08$i112$i = 0, $$11$i$i = 0, $$1142361$i$i$i = 0, $$1274364 = 0;
 var $$1276393 = 0, $$1281392 = 0, $$139$i = 0, $$2 = 0, $$2277389 = 0, $$2282388 = 0, $$26$i$i = 0, $$3 = 0, $$3$i$i = 0, $$3144$ph$i$i$i = 0, $$3278401 = 0, $$3283400 = 0, $$4134$ph$i$i$i = 0, $$4284384 = 0, $$4385 = 0, $$5135363$i$i$i = 0, $$5285380 = 0, $$5381 = 0, $$6136$i$i$i = 0, $$6286376 = 0;
 var $$6377 = 0, $$7137362$i$i$i = 0, $$7287372 = 0, $$7373 = 0, $$8288365 = 0, $$8369 = 0, $$9139$ph$i$i$i = 0, $$9366 = 0, $$in = 0, $$in289 = 0, $$lcssa = 0, $$ph$i$i$i = 0, $$ph385$i$i$i = 0, $$phi$trans$insert$i$i = 0, $$phi$trans$insert121$i$i = 0, $$pr$i = 0, $$pr$i$i$i = 0, $$pr127$i = 0, $$pr386$i$i$i = 0, $$pre$i$i = 0;
 var $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i105$i = 0, $$pre$i$i44$i = 0, $$pre$i$i62$i = 0, $$pre$i$i84$i = 0, $$pre$i$i91$i = 0, $$pre$i$pre$i$i$i = 0, $$pre$i115$i = 0, $$pre$i122$i = 0, $$pre$i153$i$i$i = 0, $$pre$i158$i$i$i = 0, $$pre$i165$i$i$i = 0, $$pre$i172$i$i$i = 0, $$pre$i172$pre$i$i$i = 0, $$pre$i177$i$i$i = 0, $$pre$i188$i$i$i = 0, $$pre$i195$pre$i$i$i = 0, $$pre$i201$i$i$i = 0, $$pre$i208$i$i$i = 0;
 var $$pre$i215$i$i$i = 0, $$pre$i215$pre$i$i$i = 0, $$pre$i221$i$i$i = 0, $$pre$i228$i$i$i = 0, $$pre$i235$pre$i$i$i = 0, $$pre$i241$i$i$i = 0, $$pre$i248$i$i$i = 0, $$pre$i255$i$i$i = 0, $$pre$i262$i$i$i = 0, $$pre$i269$i$i$i = 0, $$pre$i276$i$i$i = 0, $$pre$i283$i$i$i = 0, $$pre$i286$i$i = 0, $$pre$i290$i$i$i = 0, $$pre$i294$i$i = 0, $$pre$i297$i$i$i = 0, $$pre$i3$i$i = 0, $$pre$i3$i$i$i = 0, $$pre$i3$i98$i = 0, $$pre$i304$i$i$i = 0;
 var $$pre$i305$i$i = 0, $$pre$i311$i$i$i = 0, $$pre$i313$i$i = 0, $$pre$i318$i$i$i = 0, $$pre$i322$i$i = 0, $$pre$i329$i$i = 0, $$pre$i337$i$i = 0, $$pre$i344$i$i = 0, $$pre$i351$i$i = 0, $$pre$i358$i$i = 0, $$pre$i365$i$i = 0, $$pre$i372$i$i = 0, $$pre$i51$i = 0, $$pre$i61$i = 0, $$pre$i70$i = 0, $$pre$i77$i = 0, $$pre$i77$i$i = 0, $$pre$i84$i$i = 0, $$pre$i91$i$i = 0, $$pre$i98$i$i = 0;
 var $$pre$phi$i$i$i$iZ2D = 0, $$pre$phi$i$i$i56$iZ2D = 0, $$pre$phi$i$i$iZ2D = 0, $$pre$phi$i$i107$iZ2D = 0, $$pre$phi$i$i46$iZ2D = 0, $$pre$phi$i$i64$iZ2D = 0, $$pre$phi$i$i86$iZ2D = 0, $$pre$phi$i$i93$iZ2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i100$i$iZ2D = 0, $$pre$phi$i117$iZ2D = 0, $$pre$phi$i160$i$i$iZ2D = 0, $$pre$phi$i167$i$i$iZ2D = 0, $$pre$phi$i179$i$i$iZ2D = 0, $$pre$phi$i190$i$i$iZ2D = 0, $$pre$phi$i203$i$i$iZ2D = 0, $$pre$phi$i210$i$i$iZ2D = 0, $$pre$phi$i223$i$i$iZ2D = 0, $$pre$phi$i230$i$i$iZ2D = 0, $$pre$phi$i243$i$i$iZ2D = 0;
 var $$pre$phi$i250$i$i$iZ2D = 0, $$pre$phi$i257$i$i$iZ2D = 0, $$pre$phi$i264$i$i$iZ2D = 0, $$pre$phi$i271$i$i$iZ2D = 0, $$pre$phi$i278$i$i$iZ2D = 0, $$pre$phi$i285$i$i$iZ2D = 0, $$pre$phi$i288$i$iZ2D = 0, $$pre$phi$i292$i$i$iZ2D = 0, $$pre$phi$i296$i$iZ2D = 0, $$pre$phi$i299$i$i$iZ2D = 0, $$pre$phi$i306$i$i$iZ2D = 0, $$pre$phi$i307$i$iZ2D = 0, $$pre$phi$i313$i$i$iZ2D = 0, $$pre$phi$i315$i$iZ2D = 0, $$pre$phi$i320$i$i$iZ2D = 0, $$pre$phi$i331$i$iZ2D = 0, $$pre$phi$i339$i$iZ2D = 0, $$pre$phi$i346$i$iZ2D = 0, $$pre$phi$i353$i$iZ2D = 0, $$pre$phi$i360$i$iZ2D = 0;
 var $$pre$phi$i367$i$iZ2D = 0, $$pre$phi$i374$i$iZ2D = 0, $$pre$phi$i5$i$i$iZ2D = 0, $$pre$phi$i5$i$iZ2D = 0, $$pre$phi$i5$i100$iZ2D = 0, $$pre$phi$i52$iZ2D = 0, $$pre$phi$i72$iZ2D = 0, $$pre$phi$i79$i$iZ2D = 0, $$pre$phi$i79$iZ2D = 0, $$pre$phi$i86$i$iZ2D = 0, $$pre$phi$i93$i$iZ2D = 0, $$pre$phi124$i$iZ2D = 0, $$pre$phi480Z2D = 0, $$pre119$i$i = 0, $$pre120$i$i = 0, $$pre122$i$i = 0, $$pre123$i$i = 0, $$pre382$i$i$i = 0, $$pre384$i$i$i = 0, $$pre472 = 0;
 var $$pre474 = 0, $$pre476 = 0, $$pre477 = 0, $$pre479 = 0, $$pre5$i$i = 0, $$pre5$i$i$i = 0, $$pre5$i$i$i$i = 0, $$pre5$i$i$i55$i = 0, $$pre5$i$i106$i = 0, $$pre5$i$i45$i = 0, $$pre5$i$i63$i = 0, $$pre5$i$i85$i = 0, $$pre5$i$i92$i = 0, $$pre5$i116$i = 0, $$pre5$i159$i$i$i = 0, $$pre5$i166$i$i$i = 0, $$pre5$i178$i$i$i = 0, $$pre5$i189$i$i$i = 0, $$pre5$i202$i$i$i = 0, $$pre5$i209$i$i$i = 0;
 var $$pre5$i222$i$i$i = 0, $$pre5$i229$i$i$i = 0, $$pre5$i242$i$i$i = 0, $$pre5$i249$i$i$i = 0, $$pre5$i256$i$i$i = 0, $$pre5$i263$i$i$i = 0, $$pre5$i270$i$i$i = 0, $$pre5$i277$i$i$i = 0, $$pre5$i284$i$i$i = 0, $$pre5$i287$i$i = 0, $$pre5$i291$i$i$i = 0, $$pre5$i295$i$i = 0, $$pre5$i298$i$i$i = 0, $$pre5$i305$i$i$i = 0, $$pre5$i306$i$i = 0, $$pre5$i312$i$i$i = 0, $$pre5$i314$i$i = 0, $$pre5$i319$i$i$i = 0, $$pre5$i330$i$i = 0, $$pre5$i338$i$i = 0;
 var $$pre5$i345$i$i = 0, $$pre5$i352$i$i = 0, $$pre5$i359$i$i = 0, $$pre5$i366$i$i = 0, $$pre5$i373$i$i = 0, $$pre5$i4$i$i = 0, $$pre5$i4$i$i$i = 0, $$pre5$i4$i99$i = 0, $$pre5$i71$i = 0, $$pre5$i78$i = 0, $$pre5$i78$i$i = 0, $$pre5$i85$i$i = 0, $$pre5$i92$i$i = 0, $$pre5$i99$i$i = 0, $$pre515$i$i = 0, $$pre517$i$i = 0, $$pre519$i$i = 0, $$pre520$i$i = 0, $$pre521$i$i = 0, $$pre522$i$i = 0;
 var $$pre523$i$i = 0, $$pre525$i$i = 0, $$pre527$i$i = 0, $$pre528$i$i = 0, $$pre529$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i$i = 0, $$sink$i$i$i$i$i = 0, $$sink$i$i$i$i57$i = 0, $$sink$i$i$i108$i = 0, $$sink$i$i$i47$i = 0, $$sink$i$i$i65$i = 0, $$sink$i$i$i87$i = 0, $$sink$i$i$i94$i = 0, $$sink$i$i101$i$i = 0, $$sink$i$i118$i = 0, $$sink$i$i161$i$i$i = 0, $$sink$i$i168$i$i$i = 0, $$sink$i$i180$i$i$i = 0, $$sink$i$i191$i$i$i = 0;
 var $$sink$i$i204$i$i$i = 0, $$sink$i$i211$i$i$i = 0, $$sink$i$i224$i$i$i = 0, $$sink$i$i231$i$i$i = 0, $$sink$i$i244$i$i$i = 0, $$sink$i$i251$i$i$i = 0, $$sink$i$i258$i$i$i = 0, $$sink$i$i265$i$i$i = 0, $$sink$i$i272$i$i$i = 0, $$sink$i$i279$i$i$i = 0, $$sink$i$i286$i$i$i = 0, $$sink$i$i289$i$i = 0, $$sink$i$i293$i$i$i = 0, $$sink$i$i297$i$i = 0, $$sink$i$i300$i$i$i = 0, $$sink$i$i307$i$i$i = 0, $$sink$i$i308$i$i = 0, $$sink$i$i314$i$i$i = 0, $$sink$i$i316$i$i = 0, $$sink$i$i321$i$i$i = 0;
 var $$sink$i$i332$i$i = 0, $$sink$i$i340$i$i = 0, $$sink$i$i347$i$i = 0, $$sink$i$i354$i$i = 0, $$sink$i$i361$i$i = 0, $$sink$i$i368$i$i = 0, $$sink$i$i375$i$i = 0, $$sink$i$i6$i$i = 0, $$sink$i$i6$i$i$i = 0, $$sink$i$i6$i101$i = 0, $$sink$i$i73$i = 0, $$sink$i$i80$i = 0, $$sink$i$i80$i$i = 0, $$sink$i$i87$i$i = 0, $$sink$i$i94$i$i = 0, $10 = 0, $100 = 0, $1000 = 0, $1001 = 0, $1002 = 0;
 var $1003 = 0, $1004 = 0, $1005 = 0, $1006 = 0, $1007 = 0, $1008 = 0, $1009 = 0, $101 = 0, $1010 = 0, $1011 = 0, $1012 = 0, $1013 = 0, $1014 = 0, $1015 = 0, $1016 = 0, $1017 = 0, $1018 = 0, $1019 = 0, $102 = 0, $1020 = 0;
 var $1021 = 0, $1022 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $1026 = 0, $1027 = 0, $1028 = 0, $1029 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1032 = 0, $1033 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $1037 = 0, $1038 = 0, $1039 = 0;
 var $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1046 = 0, $1047 = 0, $1048 = 0, $1049 = 0, $105 = 0, $1050 = 0, $1051 = 0, $1052 = 0, $1053 = 0, $1054 = 0, $1055 = 0, $1056 = 0, $1057 = 0;
 var $1058 = 0, $1059 = 0, $106 = 0, $1060 = 0, $1061 = 0, $1062 = 0, $1063 = 0, $1064 = 0, $1065 = 0, $1066 = 0, $1067 = 0, $1068 = 0, $1069 = 0, $107 = 0, $1070 = 0, $1071 = 0, $1072 = 0, $1073 = 0, $1074 = 0, $1075 = 0;
 var $1076 = 0, $1077 = 0, $1078 = 0, $1079 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $1083 = 0, $1084 = 0, $1085 = 0, $1086 = 0, $1087 = 0, $1088 = 0, $1089 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1092 = 0, $1093 = 0;
 var $1094 = 0, $1095 = 0, $1096 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $11 = 0, $110 = 0, $1100 = 0, $1101 = 0, $1102 = 0, $1103 = 0, $1104 = 0, $1105 = 0, $1106 = 0, $1107 = 0, $1108 = 0, $1109 = 0, $111 = 0, $1110 = 0;
 var $1111 = 0, $1112 = 0, $1113 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $1117 = 0, $1118 = 0, $1119 = 0, $112 = 0, $1120 = 0, $1121 = 0, $1122 = 0, $1123 = 0, $1124 = 0, $1125 = 0, $1126 = 0, $1127 = 0, $1128 = 0, $1129 = 0;
 var $113 = 0, $1130 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $1134 = 0, $1135 = 0, $1136 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1142 = 0, $1143 = 0, $1144 = 0, $1145 = 0, $1146 = 0, $1147 = 0;
 var $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $1151 = 0, $1152 = 0, $1153 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $1157 = 0, $1158 = 0, $1159 = 0, $116 = 0, $1160 = 0, $1161 = 0, $1162 = 0, $1163 = 0, $1164 = 0, $1165 = 0;
 var $1166 = 0, $1167 = 0, $1168 = 0, $1169 = 0, $117 = 0, $1170 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $1174 = 0, $1175 = 0, $1176 = 0, $1177 = 0, $1178 = 0, $1179 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1182 = 0, $1183 = 0;
 var $1184 = 0, $1185 = 0, $1186 = 0, $1187 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1192 = 0, $1193 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $1197 = 0, $1198 = 0, $1199 = 0, $12 = 0, $120 = 0, $1200 = 0;
 var $1201 = 0, $1202 = 0, $1203 = 0, $1204 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $1208 = 0, $1209 = 0, $121 = 0, $1210 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $1214 = 0, $1215 = 0, $1216 = 0, $1217 = 0, $1218 = 0, $1219 = 0;
 var $122 = 0, $1220 = 0, $1221 = 0, $1222 = 0, $1223 = 0, $1224 = 0, $1225 = 0, $1226 = 0, $1227 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1232 = 0, $1233 = 0, $1234 = 0, $1235 = 0, $1236 = 0, $1237 = 0;
 var $1238 = 0, $1239 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1242 = 0, $1243 = 0, $1244 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $1248 = 0, $1249 = 0, $125 = 0, $1250 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $1254 = 0, $1255 = 0;
 var $1256 = 0, $1257 = 0, $1258 = 0, $1259 = 0, $126 = 0, $1260 = 0, $1261 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $1265 = 0, $1266 = 0, $1267 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $1271 = 0, $1272 = 0, $1273 = 0;
 var $1274 = 0, $1275 = 0, $1276 = 0, $1277 = 0, $1278 = 0, $1279 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1282 = 0, $1283 = 0, $1284 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $1288 = 0, $1289 = 0, $129 = 0, $1290 = 0, $1291 = 0;
 var $1292 = 0, $1293 = 0, $1294 = 0, $1295 = 0, $1296 = 0, $1297 = 0, $1298 = 0, $1299 = 0, $13 = 0, $130 = 0, $1300 = 0, $1301 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $1305 = 0, $1306 = 0, $1307 = 0, $1308 = 0, $1309 = 0;
 var $131 = 0, $1310 = 0, $1311 = 0, $1312 = 0, $1313 = 0, $1314 = 0, $1315 = 0, $1316 = 0, $1317 = 0, $1318 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $1322 = 0, $1323 = 0, $1324 = 0, $1325 = 0, $1326 = 0, $1327 = 0;
 var $1328 = 0, $1329 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $1333 = 0, $1334 = 0, $1335 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $1339 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1342 = 0, $1343 = 0, $1344 = 0, $1345 = 0;
 var $1346 = 0, $1347 = 0, $1348 = 0, $1349 = 0, $135 = 0, $1350 = 0, $1351 = 0, $1352 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $1356 = 0, $1357 = 0, $1358 = 0, $1359 = 0, $136 = 0, $1360 = 0, $1361 = 0, $1362 = 0, $1363 = 0;
 var $1364 = 0, $1365 = 0, $1366 = 0, $1367 = 0, $1368 = 0, $1369 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $1373 = 0, $1374 = 0, $1375 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $1379 = 0, $138 = 0, $1380 = 0, $1381 = 0;
 var $1382 = 0, $1383 = 0, $1384 = 0, $1385 = 0, $1386 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $139 = 0, $1390 = 0, $1391 = 0, $1392 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $1396 = 0, $1397 = 0, $1398 = 0, $1399 = 0, $14 = 0;
 var $140 = 0, $1400 = 0, $1401 = 0, $1402 = 0, $1403 = 0, $1404 = 0, $1405 = 0, $1406 = 0, $1407 = 0, $1408 = 0, $1409 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $1413 = 0, $1414 = 0, $1415 = 0, $1416 = 0, $1417 = 0;
 var $1418 = 0, $1419 = 0, $142 = 0, $1420 = 0, $1421 = 0, $1422 = 0, $1423 = 0, $1424 = 0, $1425 = 0, $1426 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $143 = 0, $1430 = 0, $1431 = 0, $1432 = 0, $1433 = 0, $1434 = 0, $1435 = 0;
 var $1436 = 0, $1437 = 0, $1438 = 0, $1439 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1442 = 0, $1443 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $1447 = 0, $1448 = 0, $1449 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $1453 = 0;
 var $1454 = 0, $1455 = 0, $1456 = 0, $1457 = 0, $1458 = 0, $1459 = 0, $146 = 0, $1460 = 0, $1461 = 0, $1462 = 0, $1463 = 0, $1464 = 0, $1465 = 0, $1466 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $147 = 0, $1470 = 0, $1471 = 0;
 var $1472 = 0, $1473 = 0, $1474 = 0, $1475 = 0, $1476 = 0, $1477 = 0, $1478 = 0, $1479 = 0, $148 = 0, $1480 = 0, $1481 = 0, $1482 = 0, $1483 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $1487 = 0, $1488 = 0, $1489 = 0, $149 = 0;
 var $1490 = 0, $1491 = 0, $1492 = 0, $1493 = 0, $1494 = 0, $1495 = 0, $1496 = 0, $1497 = 0, $1498 = 0, $1499 = 0, $15 = 0, $150 = 0, $1500 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $1504 = 0, $1505 = 0, $1506 = 0, $1507 = 0;
 var $1508 = 0, $1509 = 0, $151 = 0, $1510 = 0, $1511 = 0, $1512 = 0, $1513 = 0, $1514 = 0, $1515 = 0, $1516 = 0, $1517 = 0, $1518 = 0, $1519 = 0, $152 = 0, $1520 = 0, $1521 = 0, $1522 = 0, $1523 = 0, $1524 = 0, $1525 = 0;
 var $1526 = 0, $1527 = 0, $1528 = 0, $1529 = 0, $153 = 0, $1530 = 0, $1531 = 0, $1532 = 0, $1533 = 0, $1534 = 0, $1535 = 0, $1536 = 0, $1537 = 0, $1538 = 0, $1539 = 0, $154 = 0, $1540 = 0, $1541 = 0, $1542 = 0, $1543 = 0;
 var $1544 = 0, $1545 = 0, $1546 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $155 = 0, $1550 = 0, $1551 = 0, $1552 = 0, $1553 = 0, $1554 = 0, $1555 = 0, $1556 = 0, $1557 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $1561 = 0;
 var $1562 = 0, $1563 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $1567 = 0, $1568 = 0, $1569 = 0, $157 = 0, $1570 = 0, $1571 = 0, $1572 = 0, $1573 = 0, $1574 = 0, $1575 = 0, $1576 = 0, $1577 = 0, $1578 = 0, $1579 = 0, $158 = 0;
 var $1580 = 0, $1581 = 0, $1582 = 0, $1583 = 0, $1584 = 0, $1585 = 0, $1586 = 0, $1587 = 0, $1588 = 0, $1589 = 0, $159 = 0, $1590 = 0, $1591 = 0, $1592 = 0, $1593 = 0, $1594 = 0, $1595 = 0, $1596 = 0, $1597 = 0, $1598 = 0;
 var $1599 = 0, $16 = 0, $160 = 0, $1600 = 0, $1601 = 0, $1602 = 0, $1603 = 0, $1604 = 0, $1605 = 0, $1606 = 0, $1607 = 0, $1608 = 0, $1609 = 0, $161 = 0, $1610 = 0, $1611 = 0, $1612 = 0, $1613 = 0, $1614 = 0, $1615 = 0;
 var $1616 = 0, $1617 = 0, $1618 = 0, $1619 = 0, $162 = 0, $1620 = 0, $1621 = 0, $1622 = 0, $1623 = 0, $1624 = 0, $1625 = 0, $1626 = 0, $1627 = 0, $1628 = 0, $1629 = 0, $163 = 0, $1630 = 0, $1631 = 0, $1632 = 0, $1633 = 0;
 var $1634 = 0, $1635 = 0, $1636 = 0, $1637 = 0, $1638 = 0, $1639 = 0, $164 = 0, $1640 = 0, $1641 = 0, $1642 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $1647 = 0, $1648 = 0, $1649 = 0, $165 = 0, $1650 = 0, $1651 = 0;
 var $1652 = 0, $1653 = 0, $1654 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $1659 = 0, $166 = 0, $1660 = 0, $1661 = 0, $1662 = 0, $1663 = 0, $1664 = 0, $1665 = 0, $1666 = 0, $1667 = 0, $1668 = 0, $1669 = 0, $167 = 0;
 var $1670 = 0, $1671 = 0, $1672 = 0, $1673 = 0, $1674 = 0, $1675 = 0, $1676 = 0, $1677 = 0, $1678 = 0, $1679 = 0, $168 = 0, $1680 = 0, $1681 = 0, $1682 = 0, $1683 = 0, $1684 = 0, $1685 = 0, $1686 = 0, $1687 = 0, $1688 = 0;
 var $1689 = 0, $169 = 0, $1690 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $1694 = 0, $1695 = 0, $1696 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $17 = 0, $170 = 0, $1700 = 0, $1701 = 0, $1702 = 0, $1703 = 0, $1704 = 0, $1705 = 0;
 var $1706 = 0, $1707 = 0, $1708 = 0, $1709 = 0, $171 = 0, $1710 = 0, $1711 = 0, $1712 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $1717 = 0, $1718 = 0, $1719 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $1723 = 0;
 var $1724 = 0, $1725 = 0, $1726 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $173 = 0, $1730 = 0, $1731 = 0, $1732 = 0, $1733 = 0, $1734 = 0, $1735 = 0, $1736 = 0, $1737 = 0, $1738 = 0, $1739 = 0, $174 = 0, $1740 = 0, $1741 = 0;
 var $1742 = 0, $1743 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $1749 = 0, $175 = 0, $1750 = 0, $1751 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $1757 = 0, $1758 = 0, $1759 = 0, $176 = 0;
 var $1760 = 0, $1761 = 0, $1762 = 0, $1763 = 0, $1764 = 0, $1765 = 0, $1766 = 0, $1767 = 0, $1768 = 0, $1769 = 0, $177 = 0, $1770 = 0, $1771 = 0, $1772 = 0, $1773 = 0, $1774 = 0, $1775 = 0, $1776 = 0, $1777 = 0, $1778 = 0;
 var $1779 = 0, $178 = 0, $1780 = 0, $1781 = 0, $1782 = 0, $1783 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $1789 = 0, $179 = 0, $1790 = 0, $1791 = 0, $1792 = 0, $1793 = 0, $1794 = 0, $1795 = 0, $1796 = 0;
 var $1797 = 0, $1798 = 0, $1799 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $1805 = 0, $1806 = 0, $1807 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $1811 = 0, $1812 = 0, $1813 = 0;
 var $1814 = 0, $1815 = 0, $1816 = 0, $1817 = 0, $1818 = 0, $1819 = 0, $182 = 0, $1820 = 0, $1821 = 0, $1822 = 0, $1823 = 0, $1824 = 0, $1825 = 0, $1826 = 0, $1827 = 0, $1828 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0;
 var $1832 = 0, $1833 = 0, $1834 = 0, $1835 = 0, $1836 = 0, $1837 = 0, $1838 = 0, $1839 = 0, $184 = 0, $1840 = 0, $1841 = 0, $1842 = 0, $1843 = 0, $1844 = 0, $1845 = 0, $1846 = 0, $1847 = 0, $1848 = 0, $1849 = 0, $185 = 0;
 var $1850 = 0, $1851 = 0, $1852 = 0, $1853 = 0, $1854 = 0, $1855 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $1859 = 0, $186 = 0, $1860 = 0, $1861 = 0, $1862 = 0, $1863 = 0, $1864 = 0, $1865 = 0, $1866 = 0, $1867 = 0, $1868 = 0;
 var $1869 = 0, $187 = 0, $1870 = 0, $1871 = 0, $1872 = 0, $1873 = 0, $1874 = 0, $1875 = 0, $1876 = 0, $1877 = 0, $1878 = 0, $1879 = 0, $188 = 0, $1880 = 0, $1881 = 0, $1882 = 0, $1883 = 0, $1884 = 0, $1885 = 0, $1886 = 0;
 var $1887 = 0, $1888 = 0, $1889 = 0, $189 = 0, $1890 = 0, $1891 = 0, $1892 = 0, $1893 = 0, $1894 = 0, $1895 = 0, $1896 = 0, $1897 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0;
 var $1904 = 0, $1905 = 0, $1906 = 0, $1907 = 0, $1908 = 0, $1909 = 0, $191 = 0, $1910 = 0, $1911 = 0, $1912 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $1916 = 0, $1917 = 0, $1918 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0;
 var $1922 = 0, $1923 = 0, $1924 = 0, $1925 = 0, $1926 = 0, $1927 = 0, $1928 = 0, $1929 = 0, $193 = 0, $1930 = 0, $1931 = 0, $1932 = 0, $1933 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $1937 = 0, $1938 = 0, $1939 = 0, $194 = 0;
 var $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $1946 = 0, $1947 = 0, $1948 = 0, $1949 = 0, $195 = 0, $1950 = 0, $1951 = 0, $1952 = 0, $1953 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0;
 var $1959 = 0, $196 = 0, $1960 = 0, $1961 = 0, $1962 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $1966 = 0, $1967 = 0, $1968 = 0, $1969 = 0, $197 = 0, $1970 = 0, $1971 = 0, $1972 = 0, $1973 = 0, $1974 = 0, $1975 = 0, $1976 = 0;
 var $1977 = 0, $1978 = 0, $1979 = 0, $198 = 0, $1980 = 0, $1981 = 0, $1982 = 0, $1983 = 0, $1984 = 0, $1985 = 0, $1986 = 0, $1987 = 0, $1988 = 0, $1989 = 0, $199 = 0, $1990 = 0, $1991 = 0, $1992 = 0, $1993 = 0, $1994 = 0;
 var $1995 = 0, $1996 = 0, $1997 = 0, $1998 = 0, $1999 = 0, $20 = 0, $200 = 0, $2000 = 0, $2001 = 0, $2002 = 0, $2003 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $201 = 0, $2010 = 0, $2011 = 0;
 var $2012 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $2019 = 0, $202 = 0, $2020 = 0, $2021 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $2025 = 0, $2026 = 0, $2027 = 0, $2028 = 0, $2029 = 0, $203 = 0;
 var $2030 = 0, $2031 = 0, $2032 = 0, $2033 = 0, $2034 = 0, $2035 = 0, $2036 = 0, $2037 = 0, $2038 = 0, $2039 = 0, $204 = 0, $2040 = 0, $2041 = 0, $2042 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $2046 = 0, $2047 = 0, $2048 = 0;
 var $2049 = 0, $205 = 0, $2050 = 0, $2051 = 0, $2052 = 0, $2053 = 0, $2054 = 0, $2055 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $2059 = 0, $206 = 0, $2060 = 0, $2061 = 0, $2062 = 0, $2063 = 0, $2064 = 0, $2065 = 0, $2066 = 0;
 var $2067 = 0, $2068 = 0, $2069 = 0, $207 = 0, $2070 = 0, $2071 = 0, $2072 = 0, $2073 = 0, $2074 = 0, $2075 = 0, $2076 = 0, $2077 = 0, $2078 = 0, $2079 = 0, $208 = 0, $2080 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0;
 var $2085 = 0, $2086 = 0, $2087 = 0, $2088 = 0, $2089 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $2095 = 0, $2096 = 0, $2097 = 0, $2098 = 0, $2099 = 0, $21 = 0, $210 = 0, $2100 = 0, $2101 = 0;
 var $2102 = 0, $2103 = 0, $2104 = 0, $2105 = 0, $2106 = 0, $2107 = 0, $2108 = 0, $2109 = 0, $211 = 0, $2110 = 0, $2111 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $2117 = 0, $2118 = 0, $2119 = 0, $212 = 0;
 var $2120 = 0, $2121 = 0, $2122 = 0, $2123 = 0, $2124 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $2128 = 0, $2129 = 0, $213 = 0, $2130 = 0, $2131 = 0, $2132 = 0, $2133 = 0, $2134 = 0, $2135 = 0, $2136 = 0, $2137 = 0, $2138 = 0;
 var $2139 = 0, $214 = 0, $2140 = 0, $2141 = 0, $2142 = 0, $2143 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $2149 = 0, $215 = 0, $2150 = 0, $2151 = 0, $2152 = 0, $2153 = 0, $2154 = 0, $2155 = 0, $2156 = 0;
 var $2157 = 0, $2158 = 0, $2159 = 0, $216 = 0, $2160 = 0, $2161 = 0, $2162 = 0, $2163 = 0, $2164 = 0, $2165 = 0, $2166 = 0, $2167 = 0, $2168 = 0, $2169 = 0, $217 = 0, $2170 = 0, $2171 = 0, $2172 = 0, $2173 = 0, $2174 = 0;
 var $2175 = 0, $2176 = 0, $2177 = 0, $2178 = 0, $2179 = 0, $218 = 0, $2180 = 0, $2181 = 0, $2182 = 0, $2183 = 0, $2184 = 0, $2185 = 0, $2186 = 0, $2187 = 0, $2188 = 0, $2189 = 0, $219 = 0, $2190 = 0, $2191 = 0, $2192 = 0;
 var $2193 = 0, $2194 = 0, $2195 = 0, $2196 = 0, $2197 = 0, $2198 = 0, $2199 = 0, $22 = 0, $220 = 0, $2200 = 0, $2201 = 0, $2202 = 0, $2203 = 0, $2204 = 0, $2205 = 0, $2206 = 0, $2207 = 0, $2208 = 0, $2209 = 0, $221 = 0;
 var $2210 = 0, $2211 = 0, $2212 = 0, $2213 = 0, $2214 = 0, $2215 = 0, $2216 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $222 = 0, $2220 = 0, $2221 = 0, $2222 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $2226 = 0, $2227 = 0, $2228 = 0;
 var $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $2232 = 0, $2233 = 0, $2234 = 0, $2235 = 0, $2236 = 0, $2237 = 0, $2238 = 0, $2239 = 0, $224 = 0, $2240 = 0, $2241 = 0, $2242 = 0, $2243 = 0, $2244 = 0, $2245 = 0, $2246 = 0;
 var $2247 = 0, $2248 = 0, $2249 = 0, $225 = 0, $2250 = 0, $2251 = 0, $2252 = 0, $2253 = 0, $2254 = 0, $2255 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $2259 = 0, $226 = 0, $2260 = 0, $2261 = 0, $2262 = 0, $2263 = 0, $2264 = 0;
 var $2265 = 0, $2266 = 0, $2267 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $2271 = 0, $2272 = 0, $2273 = 0, $2274 = 0, $2275 = 0, $2276 = 0, $2277 = 0, $2278 = 0, $2279 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0;
 var $2283 = 0, $2284 = 0, $2285 = 0, $2286 = 0, $2287 = 0, $2288 = 0, $2289 = 0, $229 = 0, $2290 = 0, $2291 = 0, $2292 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $2297 = 0, $2298 = 0, $2299 = 0, $23 = 0, $230 = 0;
 var $2300 = 0, $2301 = 0, $2302 = 0, $2303 = 0, $2304 = 0, $2305 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $2309 = 0, $231 = 0, $2310 = 0, $2311 = 0, $2312 = 0, $2313 = 0, $2314 = 0, $2315 = 0, $2316 = 0, $2317 = 0, $2318 = 0;
 var $2319 = 0, $232 = 0, $2320 = 0, $2321 = 0, $2322 = 0, $2323 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $2327 = 0, $2328 = 0, $2329 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $2333 = 0, $2334 = 0, $2335 = 0, $2336 = 0;
 var $2337 = 0, $2338 = 0, $2339 = 0, $234 = 0, $2340 = 0, $2341 = 0, $2342 = 0, $2343 = 0, $2344 = 0, $2345 = 0, $2346 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $235 = 0, $2350 = 0, $2351 = 0, $2352 = 0, $2353 = 0, $2354 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0;
 var $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0;
 var $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0;
 var $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0;
 var $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0;
 var $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0;
 var $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0;
 var $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0;
 var $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0;
 var $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0;
 var $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0;
 var $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0;
 var $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0;
 var $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0;
 var $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0;
 var $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0;
 var $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0;
 var $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0;
 var $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0;
 var $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0;
 var $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0;
 var $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0;
 var $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0;
 var $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0;
 var $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0;
 var $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0;
 var $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0;
 var $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0;
 var $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0;
 var $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0;
 var $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0;
 var $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0;
 var $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0;
 var $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0;
 var $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0;
 var $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0, $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0;
 var $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0, $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0;
 var $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0, $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0;
 var $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0, $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0;
 var $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0, $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0;
 var $977 = 0, $978 = 0, $979 = 0, $98 = 0, $980 = 0, $981 = 0, $982 = 0, $983 = 0, $984 = 0, $985 = 0, $986 = 0, $987 = 0, $988 = 0, $989 = 0, $99 = 0, $990 = 0, $991 = 0, $992 = 0, $993 = 0, $994 = 0;
 var $995 = 0, $996 = 0, $997 = 0, $998 = 0, $999 = 0, $exitcond = 0, $exitcond$i$i = 0, $exitcond$i$i293 = 0, $exitcond$i$i297 = 0, $exitcond$i$i301 = 0, $exitcond$i$us$i$i = 0, $narrow$i$i = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond5 = 0, $or$cond74$i$i = 0, $or$cond75$i$i = 0, $phitmp$i$i$i = 0, $sext151$i$i$i = 0, $sext152$i$i$i = 0;
 var $spec$select$i$i$i = 0, $spec$select$i281$i$i = 0, $spec$select$i293$i$i = 0, $spec$select$i312$i$i = 0, $spec$select$i323$i$i = 0, $spec$select$i336$i$i = 0, $trunc$i = 0, $trunc$i321$i$i = 0, $trunc$i321$i$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp + 128|0;
 $6 = sp;
 $7 = HEAP32[$0>>2]|0;
 $8 = ((($7)) + 8|0);
 HEAP32[$8>>2] = 0;
 $9 = ($4>>>0)>(4);
 if ($9) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $10 = ((($0)) + 18124|0);
 HEAP32[$10>>2] = 0;
 $11 = ((($0)) + 18128|0);
 HEAP32[$11>>2] = 0;
 $12 = ((($0)) + 18196|0);
 HEAP32[$12>>2] = 0;
 $13 = ((($0)) + 18200|0);
 HEAP32[$13>>2] = 0;
 $14 = ((($0)) + 18268|0);
 HEAP32[$14>>2] = 0;
 $15 = ((($0)) + 18272|0);
 HEAP32[$15>>2] = 0;
 $16 = ((($0)) + 18340|0);
 HEAP32[$16>>2] = 0;
 $17 = ((($0)) + 18344|0);
 HEAP32[$17>>2] = 0;
 $18 = ((($0)) + 18436|0);
 HEAP32[$18>>2] = 0;
 $19 = (_stbi__decode_jpeg_header($0,0)|0);
 $20 = ($19|0)==(0);
 L4: do {
  if (!($20)) {
   $21 = ((($0)) + 18372|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = ($22<<24>>24)==(-1);
   L6: do {
    if ($23) {
     $24 = HEAP32[$0>>2]|0;
     $25 = ((($24)) + 168|0);
     $26 = HEAP32[$25>>2]|0;
     $27 = ((($24)) + 172|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = ($26>>>0)<($28>>>0);
     if ($29) {
      $30 = ((($26)) + 1|0);
      HEAP32[$25>>2] = $30;
      $31 = HEAP8[$26>>0]|0;
      $$0$i$i$i = $31;
     } else {
      $32 = ((($24)) + 32|0);
      $33 = HEAP32[$32>>2]|0;
      $34 = ($33|0)==(0);
      if ($34) {
       $$08$i$i = -1;
       break;
      }
      $35 = ((($24)) + 16|0);
      $36 = HEAP32[$35>>2]|0;
      $37 = ((($24)) + 28|0);
      $38 = HEAP32[$37>>2]|0;
      $39 = ((($24)) + 40|0);
      $40 = ((($24)) + 36|0);
      $41 = HEAP32[$40>>2]|0;
      $42 = (ftCall_iiii($36|0,$38,$39,$41)|0);
      $43 = ($42|0)==(0);
      if ($43) {
       HEAP32[$32>>2] = 0;
       $44 = ((($24)) + 41|0);
       HEAP8[$39>>0] = 0;
       $$pre$phi$i$i$iZ2D = $44;$$sink$i$i$i$i = $44;$2284 = 0;
      } else {
       $45 = (((($24)) + 40|0) + ($42)|0);
       $$pre$i$i$i = HEAP8[$39>>0]|0;
       $$pre5$i$i$i = ((($24)) + 41|0);
       $$pre$phi$i$i$iZ2D = $$pre5$i$i$i;$$sink$i$i$i$i = $45;$2284 = $$pre$i$i$i;
      }
      HEAP32[$27>>2] = $$sink$i$i$i$i;
      HEAP32[$25>>2] = $$pre$phi$i$i$iZ2D;
      $$0$i$i$i = $2284;
     }
     $46 = ($$0$i$i$i<<24>>24)==(-1);
     if ($46) {
      while(1) {
       $47 = HEAP32[$0>>2]|0;
       $48 = ((($47)) + 168|0);
       $49 = HEAP32[$48>>2]|0;
       $50 = ((($47)) + 172|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = ($49>>>0)<($51>>>0);
       if ($52) {
        $53 = ((($49)) + 1|0);
        HEAP32[$48>>2] = $53;
        $54 = HEAP8[$49>>0]|0;
        $$0$i$i = $54;
       } else {
        $55 = ((($47)) + 32|0);
        $56 = HEAP32[$55>>2]|0;
        $57 = ($56|0)==(0);
        if ($57) {
         $$08$i$i = 0;
         break L6;
        }
        $58 = ((($47)) + 16|0);
        $59 = HEAP32[$58>>2]|0;
        $60 = ((($47)) + 28|0);
        $61 = HEAP32[$60>>2]|0;
        $62 = ((($47)) + 40|0);
        $63 = ((($47)) + 36|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = (ftCall_iiii($59|0,$61,$62,$64)|0);
        $66 = ($65|0)==(0);
        if ($66) {
         HEAP32[$55>>2] = 0;
         $67 = ((($47)) + 41|0);
         HEAP8[$62>>0] = 0;
         $$pre$phi$i$iZ2D = $67;$$sink$i$i$i = $67;$2285 = 0;
        } else {
         $68 = (((($47)) + 40|0) + ($65)|0);
         $$pre$i$i = HEAP8[$62>>0]|0;
         $$pre5$i$i = ((($47)) + 41|0);
         $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $68;$2285 = $$pre$i$i;
        }
        HEAP32[$50>>2] = $$sink$i$i$i;
        HEAP32[$48>>2] = $$pre$phi$i$iZ2D;
        $$0$i$i = $2285;
       }
       $69 = ($$0$i$i<<24>>24)==(-1);
       if (!($69)) {
        $$08$i$i = $$0$i$i;
        break;
       }
      }
     } else {
      $$08$i$i = -1;
     }
    } else {
     HEAP8[$21>>0] = -1;
     $$08$i$i = $22;
    }
   } while(0);
   $70 = $$08$i$i&255;
   $71 = ((($0)) + 18416|0);
   $72 = ((($0)) + 18384|0);
   $73 = ((($0)) + 18388|0);
   $74 = ((($0)) + 18392|0);
   $75 = ((($0)) + 18396|0);
   $76 = ((($0)) + 18380|0);
   $77 = ((($0)) + 18368|0);
   $78 = ((($0)) + 18364|0);
   $79 = ((($0)) + 18376|0);
   $80 = ((($0)) + 18316|0);
   $81 = ((($0)) + 18244|0);
   $82 = ((($0)) + 18172|0);
   $83 = ((($0)) + 18100|0);
   $84 = ((($0)) + 18440|0);
   $85 = ((($0)) + 18400|0);
   $86 = ((($0)) + 18420|0);
   $87 = ((($0)) + 18064|0);
   $88 = ((($0)) + 18444|0);
   $89 = ((($0)) + 18060|0);
   $$139$i = $70;
   L31: while(1) {
    $trunc$i = $$139$i&255;
    L33: do {
     switch ($trunc$i<<24>>24) {
     case -39:  {
      break L31;
      break;
     }
     case -38:  {
      $90 = HEAP32[$0>>2]|0;
      $91 = ((($90)) + 168|0);
      $92 = HEAP32[$91>>2]|0;
      $93 = ((($90)) + 172|0);
      $94 = HEAP32[$93>>2]|0;
      $95 = ($92>>>0)<($94>>>0);
      if ($95) {
       $96 = ((($92)) + 1|0);
       HEAP32[$91>>2] = $96;
       $97 = HEAP8[$92>>0]|0;
       $$0$i$i$i$i = $97;$115 = $96;$116 = $94;
      } else {
       $98 = ((($90)) + 32|0);
       $99 = HEAP32[$98>>2]|0;
       $100 = ($99|0)==(0);
       if ($100) {
        $$0$i$i$i$i = 0;$115 = $92;$116 = $94;
       } else {
        $101 = ((($90)) + 16|0);
        $102 = HEAP32[$101>>2]|0;
        $103 = ((($90)) + 28|0);
        $104 = HEAP32[$103>>2]|0;
        $105 = ((($90)) + 40|0);
        $106 = ((($90)) + 36|0);
        $107 = HEAP32[$106>>2]|0;
        $108 = (ftCall_iiii($102|0,$104,$105,$107)|0);
        $109 = ($108|0)==(0);
        if ($109) {
         HEAP32[$98>>2] = 0;
         $110 = ((($90)) + 41|0);
         HEAP8[$105>>0] = 0;
         $$pre$phi$i$i$i$iZ2D = $110;$$sink$i$i$i$i$i = $110;$2286 = 0;
        } else {
         $111 = (((($90)) + 40|0) + ($108)|0);
         $$pre$i$i$i$i = HEAP8[$105>>0]|0;
         $$pre5$i$i$i$i = ((($90)) + 41|0);
         $$pre$phi$i$i$i$iZ2D = $$pre5$i$i$i$i;$$sink$i$i$i$i$i = $111;$2286 = $$pre$i$i$i$i;
        }
        HEAP32[$93>>2] = $$sink$i$i$i$i$i;
        HEAP32[$91>>2] = $$pre$phi$i$i$i$iZ2D;
        $$0$i$i$i$i = $2286;$115 = $$pre$phi$i$i$i$iZ2D;$116 = $$sink$i$i$i$i$i;
       }
      }
      $112 = $$0$i$i$i$i&255;
      $113 = $112 << 8;
      $114 = ($115>>>0)<($116>>>0);
      if ($114) {
       $117 = ((($115)) + 1|0);
       HEAP32[$91>>2] = $117;
       $118 = HEAP8[$115>>0]|0;
       $$0$i8$i$i$i = $118;
      } else {
       $119 = ((($90)) + 32|0);
       $120 = HEAP32[$119>>2]|0;
       $121 = ($120|0)==(0);
       if ($121) {
        $$0$i8$i$i$i = 0;
       } else {
        $122 = ((($90)) + 16|0);
        $123 = HEAP32[$122>>2]|0;
        $124 = ((($90)) + 28|0);
        $125 = HEAP32[$124>>2]|0;
        $126 = ((($90)) + 40|0);
        $127 = ((($90)) + 36|0);
        $128 = HEAP32[$127>>2]|0;
        $129 = (ftCall_iiii($123|0,$125,$126,$128)|0);
        $130 = ($129|0)==(0);
        if ($130) {
         HEAP32[$119>>2] = 0;
         $131 = ((($90)) + 41|0);
         HEAP8[$126>>0] = 0;
         $$pre$phi$i5$i$i$iZ2D = $131;$$sink$i$i6$i$i$i = $131;$2287 = 0;
        } else {
         $132 = (((($90)) + 40|0) + ($129)|0);
         $$pre$i3$i$i$i = HEAP8[$126>>0]|0;
         $$pre5$i4$i$i$i = ((($90)) + 41|0);
         $$pre$phi$i5$i$i$iZ2D = $$pre5$i4$i$i$i;$$sink$i$i6$i$i$i = $132;$2287 = $$pre$i3$i$i$i;
        }
        HEAP32[$93>>2] = $$sink$i$i6$i$i$i;
        HEAP32[$91>>2] = $$pre$phi$i5$i$i$iZ2D;
        $$0$i8$i$i$i = $2287;
       }
      }
      $133 = $$0$i8$i$i$i&255;
      $134 = $113 | $133;
      $135 = HEAP32[$0>>2]|0;
      $136 = ((($135)) + 168|0);
      $137 = HEAP32[$136>>2]|0;
      $138 = ((($135)) + 172|0);
      $139 = HEAP32[$138>>2]|0;
      $140 = ($137>>>0)<($139>>>0);
      if ($140) {
       $141 = ((($137)) + 1|0);
       HEAP32[$136>>2] = $141;
       $142 = HEAP8[$137>>0]|0;
       $$0$i$i49$i = $142;
      } else {
       $143 = ((($135)) + 32|0);
       $144 = HEAP32[$143>>2]|0;
       $145 = ($144|0)==(0);
       if ($145) {
        label = 41;
        break L31;
       }
       $146 = ((($135)) + 16|0);
       $147 = HEAP32[$146>>2]|0;
       $148 = ((($135)) + 28|0);
       $149 = HEAP32[$148>>2]|0;
       $150 = ((($135)) + 40|0);
       $151 = ((($135)) + 36|0);
       $152 = HEAP32[$151>>2]|0;
       $153 = (ftCall_iiii($147|0,$149,$150,$152)|0);
       $154 = ($153|0)==(0);
       if ($154) {
        HEAP32[$143>>2] = 0;
        $155 = ((($135)) + 41|0);
        HEAP8[$150>>0] = 0;
        $$pre$phi$i$i46$iZ2D = $155;$$sink$i$i$i47$i = $155;$2288 = 0;
       } else {
        $156 = (((($135)) + 40|0) + ($153)|0);
        $$pre$i$i44$i = HEAP8[$150>>0]|0;
        $$pre5$i$i45$i = ((($135)) + 41|0);
        $$pre$phi$i$i46$iZ2D = $$pre5$i$i45$i;$$sink$i$i$i47$i = $156;$2288 = $$pre$i$i44$i;
       }
       HEAP32[$138>>2] = $$sink$i$i$i47$i;
       HEAP32[$136>>2] = $$pre$phi$i$i46$iZ2D;
       $$0$i$i49$i = $2288;
      }
      $157 = $$0$i$i49$i&255;
      HEAP32[$71>>2] = $157;
      $158 = (($$0$i$i49$i) + -1)<<24>>24;
      $159 = ($158&255)>(3);
      if ($159) {
       break L4;
      }
      $160 = HEAP32[$0>>2]|0;
      $161 = ((($160)) + 8|0);
      $162 = HEAP32[$161>>2]|0;
      $163 = ($162|0)<($157|0);
      if ($163) {
       break L4;
      }
      $164 = $157 << 1;
      $165 = (($164) + 6)|0;
      $166 = ($134|0)==($165|0);
      if (!($166)) {
       break L4;
      }
      $$068$i$i = 0;$168 = $157;$170 = $160;
      while(1) {
       $167 = ($$068$i$i|0)<($168|0);
       $169 = ((($170)) + 168|0);
       $171 = HEAP32[$169>>2]|0;
       $172 = ((($170)) + 172|0);
       $173 = HEAP32[$172>>2]|0;
       $174 = ($171>>>0)<($173>>>0);
       if ($174) {
        $175 = ((($171)) + 1|0);
        HEAP32[$169>>2] = $175;
        $176 = HEAP8[$171>>0]|0;
        $$0$i89$i$i = $176;
       } else {
        $177 = ((($170)) + 32|0);
        $178 = HEAP32[$177>>2]|0;
        $179 = ($178|0)==(0);
        if ($179) {
         $$0$i89$i$i = 0;
        } else {
         $180 = ((($170)) + 16|0);
         $181 = HEAP32[$180>>2]|0;
         $182 = ((($170)) + 28|0);
         $183 = HEAP32[$182>>2]|0;
         $184 = ((($170)) + 40|0);
         $185 = ((($170)) + 36|0);
         $186 = HEAP32[$185>>2]|0;
         $187 = (ftCall_iiii($181|0,$183,$184,$186)|0);
         $188 = ($187|0)==(0);
         if ($188) {
          HEAP32[$177>>2] = 0;
          $189 = ((($170)) + 41|0);
          HEAP8[$184>>0] = 0;
          $$pre$phi$i86$i$iZ2D = $189;$$sink$i$i87$i$i = $189;$2289 = 0;
         } else {
          $190 = (((($170)) + 40|0) + ($187)|0);
          $$pre$i84$i$i = HEAP8[$184>>0]|0;
          $$pre5$i85$i$i = ((($170)) + 41|0);
          $$pre$phi$i86$i$iZ2D = $$pre5$i85$i$i;$$sink$i$i87$i$i = $190;$2289 = $$pre$i84$i$i;
         }
         HEAP32[$172>>2] = $$sink$i$i87$i$i;
         HEAP32[$169>>2] = $$pre$phi$i86$i$iZ2D;
         $$0$i89$i$i = $2289;
        }
       }
       $191 = $$0$i89$i$i&255;
       if (!($167)) {
        break;
       }
       $192 = HEAP32[$0>>2]|0;
       $193 = ((($192)) + 168|0);
       $194 = HEAP32[$193>>2]|0;
       $195 = ((($192)) + 172|0);
       $196 = HEAP32[$195>>2]|0;
       $197 = ($194>>>0)<($196>>>0);
       if ($197) {
        $198 = ((($194)) + 1|0);
        HEAP32[$193>>2] = $198;
        $199 = HEAP8[$194>>0]|0;
        $$0$i96$i$i = $199;$216 = $192;
       } else {
        $200 = ((($192)) + 32|0);
        $201 = HEAP32[$200>>2]|0;
        $202 = ($201|0)==(0);
        if ($202) {
         $$0$i96$i$i = 0;$216 = $192;
        } else {
         $203 = ((($192)) + 16|0);
         $204 = HEAP32[$203>>2]|0;
         $205 = ((($192)) + 28|0);
         $206 = HEAP32[$205>>2]|0;
         $207 = ((($192)) + 40|0);
         $208 = ((($192)) + 36|0);
         $209 = HEAP32[$208>>2]|0;
         $210 = (ftCall_iiii($204|0,$206,$207,$209)|0);
         $211 = ($210|0)==(0);
         if ($211) {
          HEAP32[$200>>2] = 0;
          $212 = ((($192)) + 41|0);
          HEAP8[$207>>0] = 0;
          $$pre$phi$i93$i$iZ2D = $212;$$sink$i$i94$i$i = $212;$2290 = 0;
         } else {
          $213 = (((($192)) + 40|0) + ($210)|0);
          $$pre$i91$i$i = HEAP8[$207>>0]|0;
          $$pre5$i92$i$i = ((($192)) + 41|0);
          $$pre$phi$i93$i$iZ2D = $$pre5$i92$i$i;$$sink$i$i94$i$i = $213;$2290 = $$pre$i91$i$i;
         }
         HEAP32[$195>>2] = $$sink$i$i94$i$i;
         HEAP32[$193>>2] = $$pre$phi$i93$i$iZ2D;
         $$pre123$i$i = HEAP32[$0>>2]|0;
         $$0$i96$i$i = $2290;$216 = $$pre123$i$i;
        }
       }
       $214 = $$0$i96$i$i&255;
       $215 = ((($216)) + 8|0);
       $217 = HEAP32[$215>>2]|0;
       $218 = ($217|0)>(0);
       L87: do {
        if ($218) {
         $$069110$i$i = 0;
         while(1) {
          $219 = (((($0)) + 18076|0) + (($$069110$i$i*72)|0)|0);
          $220 = HEAP32[$219>>2]|0;
          $221 = ($220|0)==($191|0);
          if ($221) {
           $$069$lcssa$i$i = $$069110$i$i;
           break L87;
          }
          $222 = (($$069110$i$i) + 1)|0;
          $223 = ($222|0)<($217|0);
          if ($223) {
           $$069110$i$i = $222;
          } else {
           $$069$lcssa$i$i = $222;
           break;
          }
         }
        } else {
         $$069$lcssa$i$i = 0;
        }
       } while(0);
       $224 = ($$069$lcssa$i$i|0)==($217|0);
       if ($224) {
        break L4;
       }
       $225 = $214 >>> 4;
       $226 = (((((($0)) + 18076|0) + (($$069$lcssa$i$i*72)|0)|0)) + 16|0);
       HEAP32[$226>>2] = $225;
       $227 = ($$0$i96$i$i&255)>(63);
       if ($227) {
        break L4;
       }
       $228 = $214 & 15;
       $229 = (((((($0)) + 18076|0) + (($$069$lcssa$i$i*72)|0)|0)) + 20|0);
       HEAP32[$229>>2] = $228;
       $230 = ($228>>>0)>(3);
       if ($230) {
        break L4;
       }
       $231 = (((($0)) + 18420|0) + ($$068$i$i<<2)|0);
       HEAP32[$231>>2] = $$069$lcssa$i$i;
       $232 = (($$068$i$i) + 1)|0;
       $$pre$i51$i = HEAP32[$71>>2]|0;
       $$068$i$i = $232;$168 = $$pre$i51$i;$170 = $216;
      }
      HEAP32[$72>>2] = $191;
      $233 = HEAP32[$0>>2]|0;
      $234 = ((($233)) + 168|0);
      $235 = HEAP32[$234>>2]|0;
      $236 = ((($233)) + 172|0);
      $237 = HEAP32[$236>>2]|0;
      $238 = ($235>>>0)<($237>>>0);
      if ($238) {
       $239 = ((($235)) + 1|0);
       HEAP32[$234>>2] = $239;
       $240 = HEAP8[$235>>0]|0;
       $$0$i103$i$i = $240;$$pre$phi$i52$iZ2D = $234;$$pre$phi124$i$iZ2D = $236;$257 = $239;$258 = $237;$262 = $233;
      } else {
       $241 = ((($233)) + 32|0);
       $242 = HEAP32[$241>>2]|0;
       $243 = ($242|0)==(0);
       if ($243) {
        $$0$i103$i$i = 0;$$pre$phi$i52$iZ2D = $234;$$pre$phi124$i$iZ2D = $236;$257 = $235;$258 = $237;$262 = $233;
       } else {
        $244 = ((($233)) + 16|0);
        $245 = HEAP32[$244>>2]|0;
        $246 = ((($233)) + 28|0);
        $247 = HEAP32[$246>>2]|0;
        $248 = ((($233)) + 40|0);
        $249 = ((($233)) + 36|0);
        $250 = HEAP32[$249>>2]|0;
        $251 = (ftCall_iiii($245|0,$247,$248,$250)|0);
        $252 = ($251|0)==(0);
        if ($252) {
         HEAP32[$241>>2] = 0;
         $253 = ((($233)) + 41|0);
         HEAP8[$248>>0] = 0;
         $$pre$phi$i100$i$iZ2D = $253;$$sink$i$i101$i$i = $253;$2291 = 0;
        } else {
         $254 = (((($233)) + 40|0) + ($251)|0);
         $$pre$i98$i$i = HEAP8[$248>>0]|0;
         $$pre5$i99$i$i = ((($233)) + 41|0);
         $$pre$phi$i100$i$iZ2D = $$pre5$i99$i$i;$$sink$i$i101$i$i = $254;$2291 = $$pre$i98$i$i;
        }
        HEAP32[$236>>2] = $$sink$i$i101$i$i;
        HEAP32[$234>>2] = $$pre$phi$i100$i$iZ2D;
        $$pre119$i$i = HEAP32[$0>>2]|0;
        $$phi$trans$insert$i$i = ((($$pre119$i$i)) + 168|0);
        $$pre120$i$i = HEAP32[$$phi$trans$insert$i$i>>2]|0;
        $$phi$trans$insert121$i$i = ((($$pre119$i$i)) + 172|0);
        $$pre122$i$i = HEAP32[$$phi$trans$insert121$i$i>>2]|0;
        $$0$i103$i$i = $2291;$$pre$phi$i52$iZ2D = $$phi$trans$insert$i$i;$$pre$phi124$i$iZ2D = $$phi$trans$insert121$i$i;$257 = $$pre120$i$i;$258 = $$pre122$i$i;$262 = $$pre119$i$i;
       }
      }
      $255 = $$0$i103$i$i&255;
      HEAP32[$73>>2] = $255;
      $256 = ($257>>>0)<($258>>>0);
      if ($256) {
       $259 = ((($257)) + 1|0);
       HEAP32[$$pre$phi$i52$iZ2D>>2] = $259;
       $260 = HEAP8[$257>>0]|0;
       $$0$i82$i$i = $260;
      } else {
       $261 = ((($262)) + 32|0);
       $263 = HEAP32[$261>>2]|0;
       $264 = ($263|0)==(0);
       if ($264) {
        $$0$i82$i$i = 0;
       } else {
        $265 = ((($262)) + 16|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ((($262)) + 28|0);
        $268 = HEAP32[$267>>2]|0;
        $269 = ((($262)) + 40|0);
        $270 = ((($262)) + 36|0);
        $271 = HEAP32[$270>>2]|0;
        $272 = (ftCall_iiii($266|0,$268,$269,$271)|0);
        $273 = ($272|0)==(0);
        if ($273) {
         HEAP32[$261>>2] = 0;
         $274 = ((($262)) + 41|0);
         HEAP8[$269>>0] = 0;
         $$pre$phi$i79$i$iZ2D = $274;$$sink$i$i80$i$i = $274;$2292 = 0;
        } else {
         $275 = (((($262)) + 40|0) + ($272)|0);
         $$pre$i77$i$i = HEAP8[$269>>0]|0;
         $$pre5$i78$i$i = ((($262)) + 41|0);
         $$pre$phi$i79$i$iZ2D = $$pre5$i78$i$i;$$sink$i$i80$i$i = $275;$2292 = $$pre$i77$i$i;
        }
        HEAP32[$$pre$phi124$i$iZ2D>>2] = $$sink$i$i80$i$i;
        HEAP32[$$pre$phi$i52$iZ2D>>2] = $$pre$phi$i79$i$iZ2D;
        $$0$i82$i$i = $2292;
       }
      }
      $276 = $$0$i82$i$i&255;
      $277 = $276 >>> 4;
      HEAP32[$74>>2] = $277;
      $278 = $276 & 15;
      HEAP32[$75>>2] = $278;
      $279 = HEAP32[$76>>2]|0;
      $280 = ($279|0)==(0);
      $281 = HEAP32[$72>>2]|0;
      if ($280) {
       $288 = ($281|0)==(0);
       $289 = $277 | $278;
       $290 = ($289|0)==(0);
       $or$cond = $288 & $290;
       if (!($or$cond)) {
        break L4;
       }
       HEAP32[$73>>2] = 63;
      } else {
       $282 = ($281|0)>(63);
       if ($282) {
        break L4;
       }
       $283 = HEAP32[$73>>2]|0;
       $284 = ($283|0)>(63);
       $285 = ($281|0)>($283|0);
       $or$cond74$i$i = $284 | $285;
       if ($or$cond74$i$i) {
        break L4;
       }
       $286 = ($$0$i82$i$i&255)>(223);
       $287 = ($278>>>0)>(13);
       $or$cond75$i$i = $286 | $287;
       if ($or$cond75$i$i) {
        break L4;
       }
      }
      HEAP32[$77>>2] = 0;
      HEAP32[$78>>2] = 0;
      HEAP32[$79>>2] = 0;
      HEAP32[$80>>2] = 0;
      HEAP32[$81>>2] = 0;
      HEAP32[$82>>2] = 0;
      HEAP32[$83>>2] = 0;
      HEAP8[$21>>0] = -1;
      $291 = HEAP32[$18>>2]|0;
      $292 = ($291|0)==(0);
      $spec$select$i$i$i = $292 ? 2147483647 : $291;
      HEAP32[$84>>2] = $spec$select$i$i$i;
      HEAP32[$85>>2] = 0;
      $293 = HEAP32[$71>>2]|0;
      $294 = ($293|0)==(1);
      L122: do {
       if ($280) {
        if ($294) {
         $295 = HEAP32[$86>>2]|0;
         $296 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 28|0);
         $297 = HEAP32[$296>>2]|0;
         $298 = (($297) + 7)|0;
         $299 = $298 >> 3;
         $300 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 32|0);
         $301 = HEAP32[$300>>2]|0;
         $302 = (($301) + 7)|0;
         $303 = $302 >> 3;
         $304 = ($301|0)>(0);
         L126: do {
          if ($304) {
           $305 = ($297|0)>(0);
           $306 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 20|0);
           $307 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 16|0);
           $308 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 12|0);
           $309 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 44|0);
           $310 = (((((($0)) + 18076|0) + (($295*72)|0)|0)) + 36|0);
           $$0257425$i$i = 0;
           while(1) {
            if ($305) {
             $311 = $$0257425$i$i << 3;
             $$0256424$i$i = 0;
             while(1) {
              $312 = HEAP32[$306>>2]|0;
              $313 = HEAP32[$307>>2]|0;
              $314 = (((($0)) + 4|0) + (($313*1680)|0)|0);
              $315 = (((($0)) + 6724|0) + (($312*1680)|0)|0);
              $316 = (((($0)) + 13956|0) + ($312<<10)|0);
              $317 = HEAP32[$308>>2]|0;
              $318 = (((($0)) + 13444|0) + ($317<<7)|0);
              $319 = (_stbi__jpeg_decode_block($0,$5,$314,$315,$316,$295,$318)|0);
              $320 = ($319|0)==(0);
              if ($320) {
               $$3$i$i = 0;
               break L126;
              }
              $321 = HEAP32[$88>>2]|0;
              $322 = HEAP32[$309>>2]|0;
              $323 = HEAP32[$310>>2]|0;
              $324 = Math_imul($311, $323)|0;
              $325 = (($322) + ($324)|0);
              $326 = $$0256424$i$i << 3;
              $327 = (($325) + ($326)|0);
              ftCall_viii($321|0,$327,$323,$5);
              $328 = HEAP32[$84>>2]|0;
              $329 = (($328) + -1)|0;
              HEAP32[$84>>2] = $329;
              $330 = ($328|0)<(2);
              if ($330) {
               $331 = HEAP32[$77>>2]|0;
               $332 = ($331|0)<(24);
               L137: do {
                if ($332) {
                 L139: while(1) {
                  $333 = HEAP32[$79>>2]|0;
                  $334 = ($333|0)==(0);
                  L141: do {
                   if ($334) {
                    $335 = HEAP32[$0>>2]|0;
                    $336 = ((($335)) + 168|0);
                    $337 = HEAP32[$336>>2]|0;
                    $338 = ((($335)) + 172|0);
                    $339 = HEAP32[$338>>2]|0;
                    $340 = ($337>>>0)<($339>>>0);
                    if ($340) {
                     $341 = ((($337)) + 1|0);
                     HEAP32[$336>>2] = $341;
                     $342 = HEAP8[$337>>0]|0;
                     $$0$i363$i$i = $342;
                    } else {
                     $343 = ((($335)) + 32|0);
                     $344 = HEAP32[$343>>2]|0;
                     $345 = ($344|0)==(0);
                     if ($345) {
                      $406 = 0;
                      break;
                     }
                     $346 = ((($335)) + 16|0);
                     $347 = HEAP32[$346>>2]|0;
                     $348 = ((($335)) + 28|0);
                     $349 = HEAP32[$348>>2]|0;
                     $350 = ((($335)) + 40|0);
                     $351 = ((($335)) + 36|0);
                     $352 = HEAP32[$351>>2]|0;
                     $353 = (ftCall_iiii($347|0,$349,$350,$352)|0);
                     $354 = ($353|0)==(0);
                     if ($354) {
                      HEAP32[$343>>2] = 0;
                      $355 = ((($335)) + 41|0);
                      HEAP8[$350>>0] = 0;
                      $$pre$phi$i360$i$iZ2D = $355;$$sink$i$i361$i$i = $355;$2293 = 0;
                     } else {
                      $356 = (((($335)) + 40|0) + ($353)|0);
                      $$pre$i358$i$i = HEAP8[$350>>0]|0;
                      $$pre5$i359$i$i = ((($335)) + 41|0);
                      $$pre$phi$i360$i$iZ2D = $$pre5$i359$i$i;$$sink$i$i361$i$i = $356;$2293 = $$pre$i358$i$i;
                     }
                     HEAP32[$338>>2] = $$sink$i$i361$i$i;
                     HEAP32[$336>>2] = $$pre$phi$i360$i$iZ2D;
                     $$0$i363$i$i = $2293;
                    }
                    $357 = $$0$i363$i$i&255;
                    $358 = ($$0$i363$i$i<<24>>24)==(-1);
                    if (!($358)) {
                     $406 = $357;
                     break;
                    }
                    $359 = HEAP32[$0>>2]|0;
                    $360 = ((($359)) + 168|0);
                    $361 = HEAP32[$360>>2]|0;
                    $362 = ((($359)) + 172|0);
                    $363 = HEAP32[$362>>2]|0;
                    $364 = ($361>>>0)<($363>>>0);
                    do {
                     if ($364) {
                      $365 = ((($361)) + 1|0);
                      HEAP32[$360>>2] = $365;
                      $366 = HEAP8[$361>>0]|0;
                      $$0$i291$i$i$sink$ph = $366;
                     } else {
                      $367 = ((($359)) + 32|0);
                      $368 = HEAP32[$367>>2]|0;
                      $369 = ($368|0)==(0);
                      if ($369) {
                       $$0$i291$i$i$sink$ph = 0;
                       break;
                      }
                      $370 = ((($359)) + 16|0);
                      $371 = HEAP32[$370>>2]|0;
                      $372 = ((($359)) + 28|0);
                      $373 = HEAP32[$372>>2]|0;
                      $374 = ((($359)) + 40|0);
                      $375 = ((($359)) + 36|0);
                      $376 = HEAP32[$375>>2]|0;
                      $377 = (ftCall_iiii($371|0,$373,$374,$376)|0);
                      $378 = ($377|0)==(0);
                      if ($378) {
                       HEAP32[$367>>2] = 0;
                       $379 = ((($359)) + 41|0);
                       HEAP8[$374>>0] = 0;
                       $$pre$phi$i296$i$iZ2D = $379;$$sink$i$i297$i$i = $379;$2294 = 0;
                      } else {
                       $380 = (((($359)) + 40|0) + ($377)|0);
                       $$pre$i294$i$i = HEAP8[$374>>0]|0;
                       $$pre5$i295$i$i = ((($359)) + 41|0);
                       $$pre$phi$i296$i$iZ2D = $$pre5$i295$i$i;$$sink$i$i297$i$i = $380;$2294 = $$pre$i294$i$i;
                      }
                      HEAP32[$362>>2] = $$sink$i$i297$i$i;
                      HEAP32[$360>>2] = $$pre$phi$i296$i$iZ2D;
                      $$0$i291$i$i$sink$ph = $2294;
                     }
                    } while(0);
                    $$0$i291$i$i$sink = $$0$i291$i$i$sink$ph;
                    while(1) {
                     switch ($$0$i291$i$i$sink<<24>>24) {
                     case 0:  {
                      $406 = $357;
                      break L141;
                      break;
                     }
                     case -1:  {
                      break;
                     }
                     default: {
                      break L139;
                     }
                     }
                     $381 = HEAP32[$0>>2]|0;
                     $382 = ((($381)) + 168|0);
                     $383 = HEAP32[$382>>2]|0;
                     $384 = ((($381)) + 172|0);
                     $385 = HEAP32[$384>>2]|0;
                     $386 = ($383>>>0)<($385>>>0);
                     do {
                      if ($386) {
                       $387 = ((($383)) + 1|0);
                       HEAP32[$382>>2] = $387;
                       $388 = HEAP8[$383>>0]|0;
                       $$0$i291$i$i$sink$be = $388;
                      } else {
                       $389 = ((($381)) + 32|0);
                       $390 = HEAP32[$389>>2]|0;
                       $391 = ($390|0)==(0);
                       if ($391) {
                        $$0$i291$i$i$sink$be = 0;
                        break;
                       }
                       $392 = ((($381)) + 16|0);
                       $393 = HEAP32[$392>>2]|0;
                       $394 = ((($381)) + 28|0);
                       $395 = HEAP32[$394>>2]|0;
                       $396 = ((($381)) + 40|0);
                       $397 = ((($381)) + 36|0);
                       $398 = HEAP32[$397>>2]|0;
                       $399 = (ftCall_iiii($393|0,$395,$396,$398)|0);
                       $400 = ($399|0)==(0);
                       if ($400) {
                        HEAP32[$389>>2] = 0;
                        $401 = ((($381)) + 41|0);
                        HEAP8[$396>>0] = 0;
                        $$pre$phi$i288$i$iZ2D = $401;$$sink$i$i289$i$i = $401;$2295 = 0;
                       } else {
                        $402 = (((($381)) + 40|0) + ($399)|0);
                        $$pre$i286$i$i = HEAP8[$396>>0]|0;
                        $$pre5$i287$i$i = ((($381)) + 41|0);
                        $$pre$phi$i288$i$iZ2D = $$pre5$i287$i$i;$$sink$i$i289$i$i = $402;$2295 = $$pre$i286$i$i;
                       }
                       HEAP32[$384>>2] = $$sink$i$i289$i$i;
                       HEAP32[$382>>2] = $$pre$phi$i288$i$iZ2D;
                       $$0$i291$i$i$sink$be = $2295;
                      }
                     } while(0);
                     $$0$i291$i$i$sink = $$0$i291$i$i$sink$be;
                    }
                   } else {
                    $406 = 0;
                   }
                  } while(0);
                  $403 = HEAP32[$77>>2]|0;
                  $404 = (24 - ($403))|0;
                  $405 = $406 << $404;
                  $407 = HEAP32[$78>>2]|0;
                  $408 = $405 | $407;
                  HEAP32[$78>>2] = $408;
                  $409 = (($403) + 8)|0;
                  HEAP32[$77>>2] = $409;
                  $410 = ($403|0)<(17);
                  if (!($410)) {
                   break L137;
                  }
                 }
                 HEAP8[$21>>0] = $$0$i291$i$i$sink;
                 HEAP32[$79>>2] = 1;
                }
               } while(0);
               $411 = HEAP8[$21>>0]|0;
               $412 = $411 & -8;
               $413 = ($412<<24>>24)==(-48);
               if (!($413)) {
                $$3$i$i = 1;
                break L126;
               }
               HEAP32[$77>>2] = 0;
               HEAP32[$78>>2] = 0;
               HEAP32[$79>>2] = 0;
               HEAP32[$80>>2] = 0;
               HEAP32[$81>>2] = 0;
               HEAP32[$82>>2] = 0;
               HEAP32[$83>>2] = 0;
               HEAP8[$21>>0] = -1;
               $414 = HEAP32[$18>>2]|0;
               $415 = ($414|0)==(0);
               $spec$select$i293$i$i = $415 ? 2147483647 : $414;
               HEAP32[$84>>2] = $spec$select$i293$i$i;
               HEAP32[$85>>2] = 0;
              }
              $416 = (($$0256424$i$i) + 1)|0;
              $417 = ($416|0)<($299|0);
              if ($417) {
               $$0256424$i$i = $416;
              } else {
               break;
              }
             }
            }
            $418 = (($$0257425$i$i) + 1)|0;
            $419 = ($418|0)<($303|0);
            if ($419) {
             $$0257425$i$i = $418;
            } else {
             $$3$i$i = 1;
             break;
            }
           }
          } else {
           $$3$i$i = 1;
          }
         } while(0);
         $$26$i$i = $$3$i$i;
        } else {
         $420 = HEAP32[$87>>2]|0;
         $421 = ($420|0)>(0);
         L182: do {
          if ($421) {
           $$pre522$i$i = HEAP32[$89>>2]|0;
           $$0271446$i$i = 0;$2296 = $420;$2297 = $spec$select$i$i$i;$423 = $$pre522$i$i;
           while(1) {
            $422 = ($423|0)>(0);
            if ($422) {
             $$0270441$i$i = 0;$2300 = $2297;
             while(1) {
              $424 = HEAP32[$71>>2]|0;
              $425 = ($424|0)>(0);
              if ($425) {
               $$0272437$i$i = 0;$2301 = $424;
               while(1) {
                $426 = (((($0)) + 18420|0) + ($$0272437$i$i<<2)|0);
                $427 = HEAP32[$426>>2]|0;
                $428 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 8|0);
                $429 = HEAP32[$428>>2]|0;
                $430 = ($429|0)>(0);
                if ($430) {
                 $431 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 4|0);
                 $432 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 20|0);
                 $433 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 16|0);
                 $434 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 12|0);
                 $435 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 44|0);
                 $436 = (((((($0)) + 18076|0) + (($427*72)|0)|0)) + 36|0);
                 $$pre523$i$i = HEAP32[$431>>2]|0;
                 $$0274432$i$i = 0;$2302 = $429;$438 = $$pre523$i$i;
                 while(1) {
                  $437 = ($438|0)>(0);
                  if ($437) {
                   $$0273428$i$i = 0;$449 = $2302;$453 = $438;
                   while(1) {
                    $439 = HEAP32[$432>>2]|0;
                    $440 = HEAP32[$433>>2]|0;
                    $441 = (((($0)) + 4|0) + (($440*1680)|0)|0);
                    $442 = (((($0)) + 6724|0) + (($439*1680)|0)|0);
                    $443 = (((($0)) + 13956|0) + ($439<<10)|0);
                    $444 = HEAP32[$434>>2]|0;
                    $445 = (((($0)) + 13444|0) + ($444<<7)|0);
                    $446 = (_stbi__jpeg_decode_block($0,$5,$441,$442,$443,$427,$445)|0);
                    $447 = ($446|0)==(0);
                    if ($447) {
                     $$11$i$i = 0;
                     break L182;
                    }
                    $448 = Math_imul($449, $$0271446$i$i)|0;
                    $450 = (($448) + ($$0274432$i$i))|0;
                    $451 = $450 << 3;
                    $452 = Math_imul($453, $$0270441$i$i)|0;
                    $454 = (($452) + ($$0273428$i$i))|0;
                    $455 = $454 << 3;
                    $456 = HEAP32[$88>>2]|0;
                    $457 = HEAP32[$435>>2]|0;
                    $458 = HEAP32[$436>>2]|0;
                    $459 = Math_imul($451, $458)|0;
                    $460 = (($457) + ($459)|0);
                    $461 = (($460) + ($455)|0);
                    ftCall_viii($456|0,$461,$458,$5);
                    $462 = (($$0273428$i$i) + 1)|0;
                    $463 = HEAP32[$431>>2]|0;
                    $464 = ($462|0)<($463|0);
                    $$pre525$i$i = HEAP32[$428>>2]|0;
                    if ($464) {
                     $$0273428$i$i = $462;$449 = $$pre525$i$i;$453 = $463;
                    } else {
                     $2303 = $463;$467 = $$pre525$i$i;
                     break;
                    }
                   }
                  } else {
                   $2303 = $438;$467 = $2302;
                  }
                  $465 = (($$0274432$i$i) + 1)|0;
                  $466 = ($465|0)<($467|0);
                  if ($466) {
                   $$0274432$i$i = $465;$2302 = $467;$438 = $2303;
                  } else {
                   break;
                  }
                 }
                 $$pre527$i$i = HEAP32[$71>>2]|0;
                 $470 = $$pre527$i$i;
                } else {
                 $470 = $2301;
                }
                $468 = (($$0272437$i$i) + 1)|0;
                $469 = ($468|0)<($470|0);
                if ($469) {
                 $$0272437$i$i = $468;$2301 = $470;
                } else {
                 break;
                }
               }
               $$pre528$i$i = HEAP32[$84>>2]|0;
               $472 = $$pre528$i$i;
              } else {
               $472 = $2300;
              }
              $471 = (($472) + -1)|0;
              HEAP32[$84>>2] = $471;
              $473 = ($472|0)<(2);
              if ($473) {
               $474 = HEAP32[$77>>2]|0;
               $475 = ($474|0)<(24);
               L210: do {
                if ($475) {
                 L212: while(1) {
                  $476 = HEAP32[$79>>2]|0;
                  $477 = ($476|0)==(0);
                  L214: do {
                   if ($477) {
                    $478 = HEAP32[$0>>2]|0;
                    $479 = ((($478)) + 168|0);
                    $480 = HEAP32[$479>>2]|0;
                    $481 = ((($478)) + 172|0);
                    $482 = HEAP32[$481>>2]|0;
                    $483 = ($480>>>0)<($482>>>0);
                    if ($483) {
                     $484 = ((($480)) + 1|0);
                     HEAP32[$479>>2] = $484;
                     $485 = HEAP8[$480>>0]|0;
                     $$0$i370$i$i = $485;
                    } else {
                     $486 = ((($478)) + 32|0);
                     $487 = HEAP32[$486>>2]|0;
                     $488 = ($487|0)==(0);
                     if ($488) {
                      $549 = 0;
                      break;
                     }
                     $489 = ((($478)) + 16|0);
                     $490 = HEAP32[$489>>2]|0;
                     $491 = ((($478)) + 28|0);
                     $492 = HEAP32[$491>>2]|0;
                     $493 = ((($478)) + 40|0);
                     $494 = ((($478)) + 36|0);
                     $495 = HEAP32[$494>>2]|0;
                     $496 = (ftCall_iiii($490|0,$492,$493,$495)|0);
                     $497 = ($496|0)==(0);
                     if ($497) {
                      HEAP32[$486>>2] = 0;
                      $498 = ((($478)) + 41|0);
                      HEAP8[$493>>0] = 0;
                      $$pre$phi$i367$i$iZ2D = $498;$$sink$i$i368$i$i = $498;$2305 = 0;
                     } else {
                      $499 = (((($478)) + 40|0) + ($496)|0);
                      $$pre$i365$i$i = HEAP8[$493>>0]|0;
                      $$pre5$i366$i$i = ((($478)) + 41|0);
                      $$pre$phi$i367$i$iZ2D = $$pre5$i366$i$i;$$sink$i$i368$i$i = $499;$2305 = $$pre$i365$i$i;
                     }
                     HEAP32[$481>>2] = $$sink$i$i368$i$i;
                     HEAP32[$479>>2] = $$pre$phi$i367$i$iZ2D;
                     $$0$i370$i$i = $2305;
                    }
                    $500 = $$0$i370$i$i&255;
                    $501 = ($$0$i370$i$i<<24>>24)==(-1);
                    if (!($501)) {
                     $549 = $500;
                     break;
                    }
                    $502 = HEAP32[$0>>2]|0;
                    $503 = ((($502)) + 168|0);
                    $504 = HEAP32[$503>>2]|0;
                    $505 = ((($502)) + 172|0);
                    $506 = HEAP32[$505>>2]|0;
                    $507 = ($504>>>0)<($506>>>0);
                    do {
                     if ($507) {
                      $508 = ((($504)) + 1|0);
                      HEAP32[$503>>2] = $508;
                      $509 = HEAP8[$504>>0]|0;
                      $$0$i310$i$i$sink$ph = $509;
                     } else {
                      $510 = ((($502)) + 32|0);
                      $511 = HEAP32[$510>>2]|0;
                      $512 = ($511|0)==(0);
                      if ($512) {
                       $$0$i310$i$i$sink$ph = 0;
                       break;
                      }
                      $513 = ((($502)) + 16|0);
                      $514 = HEAP32[$513>>2]|0;
                      $515 = ((($502)) + 28|0);
                      $516 = HEAP32[$515>>2]|0;
                      $517 = ((($502)) + 40|0);
                      $518 = ((($502)) + 36|0);
                      $519 = HEAP32[$518>>2]|0;
                      $520 = (ftCall_iiii($514|0,$516,$517,$519)|0);
                      $521 = ($520|0)==(0);
                      if ($521) {
                       HEAP32[$510>>2] = 0;
                       $522 = ((($502)) + 41|0);
                       HEAP8[$517>>0] = 0;
                       $$pre$phi$i315$i$iZ2D = $522;$$sink$i$i316$i$i = $522;$2306 = 0;
                      } else {
                       $523 = (((($502)) + 40|0) + ($520)|0);
                       $$pre$i313$i$i = HEAP8[$517>>0]|0;
                       $$pre5$i314$i$i = ((($502)) + 41|0);
                       $$pre$phi$i315$i$iZ2D = $$pre5$i314$i$i;$$sink$i$i316$i$i = $523;$2306 = $$pre$i313$i$i;
                      }
                      HEAP32[$505>>2] = $$sink$i$i316$i$i;
                      HEAP32[$503>>2] = $$pre$phi$i315$i$iZ2D;
                      $$0$i310$i$i$sink$ph = $2306;
                     }
                    } while(0);
                    $$0$i310$i$i$sink = $$0$i310$i$i$sink$ph;
                    while(1) {
                     switch ($$0$i310$i$i$sink<<24>>24) {
                     case 0:  {
                      $549 = $500;
                      break L214;
                      break;
                     }
                     case -1:  {
                      break;
                     }
                     default: {
                      break L212;
                     }
                     }
                     $524 = HEAP32[$0>>2]|0;
                     $525 = ((($524)) + 168|0);
                     $526 = HEAP32[$525>>2]|0;
                     $527 = ((($524)) + 172|0);
                     $528 = HEAP32[$527>>2]|0;
                     $529 = ($526>>>0)<($528>>>0);
                     do {
                      if ($529) {
                       $530 = ((($526)) + 1|0);
                       HEAP32[$525>>2] = $530;
                       $531 = HEAP8[$526>>0]|0;
                       $$0$i310$i$i$sink$be = $531;
                      } else {
                       $532 = ((($524)) + 32|0);
                       $533 = HEAP32[$532>>2]|0;
                       $534 = ($533|0)==(0);
                       if ($534) {
                        $$0$i310$i$i$sink$be = 0;
                        break;
                       }
                       $535 = ((($524)) + 16|0);
                       $536 = HEAP32[$535>>2]|0;
                       $537 = ((($524)) + 28|0);
                       $538 = HEAP32[$537>>2]|0;
                       $539 = ((($524)) + 40|0);
                       $540 = ((($524)) + 36|0);
                       $541 = HEAP32[$540>>2]|0;
                       $542 = (ftCall_iiii($536|0,$538,$539,$541)|0);
                       $543 = ($542|0)==(0);
                       if ($543) {
                        HEAP32[$532>>2] = 0;
                        $544 = ((($524)) + 41|0);
                        HEAP8[$539>>0] = 0;
                        $$pre$phi$i307$i$iZ2D = $544;$$sink$i$i308$i$i = $544;$2307 = 0;
                       } else {
                        $545 = (((($524)) + 40|0) + ($542)|0);
                        $$pre$i305$i$i = HEAP8[$539>>0]|0;
                        $$pre5$i306$i$i = ((($524)) + 41|0);
                        $$pre$phi$i307$i$iZ2D = $$pre5$i306$i$i;$$sink$i$i308$i$i = $545;$2307 = $$pre$i305$i$i;
                       }
                       HEAP32[$527>>2] = $$sink$i$i308$i$i;
                       HEAP32[$525>>2] = $$pre$phi$i307$i$iZ2D;
                       $$0$i310$i$i$sink$be = $2307;
                      }
                     } while(0);
                     $$0$i310$i$i$sink = $$0$i310$i$i$sink$be;
                    }
                   } else {
                    $549 = 0;
                   }
                  } while(0);
                  $546 = HEAP32[$77>>2]|0;
                  $547 = (24 - ($546))|0;
                  $548 = $549 << $547;
                  $550 = HEAP32[$78>>2]|0;
                  $551 = $548 | $550;
                  HEAP32[$78>>2] = $551;
                  $552 = (($546) + 8)|0;
                  HEAP32[$77>>2] = $552;
                  $553 = ($546|0)<(17);
                  if (!($553)) {
                   break L210;
                  }
                 }
                 HEAP8[$21>>0] = $$0$i310$i$i$sink;
                 HEAP32[$79>>2] = 1;
                }
               } while(0);
               $554 = HEAP8[$21>>0]|0;
               $555 = $554 & -8;
               $556 = ($555<<24>>24)==(-48);
               if (!($556)) {
                $$11$i$i = 1;
                break L182;
               }
               HEAP32[$77>>2] = 0;
               HEAP32[$78>>2] = 0;
               HEAP32[$79>>2] = 0;
               HEAP32[$80>>2] = 0;
               HEAP32[$81>>2] = 0;
               HEAP32[$82>>2] = 0;
               HEAP32[$83>>2] = 0;
               HEAP8[$21>>0] = -1;
               $557 = HEAP32[$18>>2]|0;
               $558 = ($557|0)==(0);
               $spec$select$i312$i$i = $558 ? 2147483647 : $557;
               HEAP32[$84>>2] = $spec$select$i312$i$i;
               HEAP32[$85>>2] = 0;
               $2304 = $spec$select$i312$i$i;
              } else {
               $2304 = $471;
              }
              $559 = (($$0270441$i$i) + 1)|0;
              $560 = HEAP32[$89>>2]|0;
              $561 = ($559|0)<($560|0);
              if ($561) {
               $$0270441$i$i = $559;$2300 = $2304;
              } else {
               break;
              }
             }
             $$pre529$i$i = HEAP32[$87>>2]|0;
             $2298 = $2304;$2299 = $560;$564 = $$pre529$i$i;
            } else {
             $2298 = $2297;$2299 = $423;$564 = $2296;
            }
            $562 = (($$0271446$i$i) + 1)|0;
            $563 = ($562|0)<($564|0);
            if ($563) {
             $$0271446$i$i = $562;$2296 = $564;$2297 = $2298;$423 = $2299;
            } else {
             $$11$i$i = 1;
             break;
            }
           }
          } else {
           $$11$i$i = 1;
          }
         } while(0);
         $$26$i$i = $$11$i$i;
        }
        $1550 = ($$26$i$i|0)==(0);
        if ($1550) {
         break L4;
        } else {
         label = 543;
        }
       } else {
        if (!($294)) {
         $1414 = HEAP32[$87>>2]|0;
         $1415 = ($1414|0)>(0);
         if (!($1415)) {
          label = 543;
          break;
         }
         $$pre$i61$i = HEAP32[$89>>2]|0;
         $$0268476$i$i = 0;$1417 = $$pre$i61$i;$2333 = $1414;$2334 = $spec$select$i$i$i;
         while(1) {
          $1416 = ($1417|0)>(0);
          if ($1416) {
           $$0269471$i$i = 0;$2337 = $2334;
           while(1) {
            $1418 = HEAP32[$71>>2]|0;
            $1419 = ($1418|0)>(0);
            if ($1419) {
             $$0267467$i$i = 0;$2338 = $1418;
             while(1) {
              $1420 = (((($0)) + 18420|0) + ($$0267467$i$i<<2)|0);
              $1421 = HEAP32[$1420>>2]|0;
              $1422 = (((((($0)) + 18076|0) + (($1421*72)|0)|0)) + 8|0);
              $1423 = HEAP32[$1422>>2]|0;
              $1424 = ($1423|0)>(0);
              if ($1424) {
               $1425 = (((((($0)) + 18076|0) + (($1421*72)|0)|0)) + 4|0);
               $1426 = (((((($0)) + 18076|0) + (($1421*72)|0)|0)) + 60|0);
               $1427 = (((((($0)) + 18076|0) + (($1421*72)|0)|0)) + 64|0);
               $1428 = (((((($0)) + 18076|0) + (($1421*72)|0)|0)) + 16|0);
               $$pre515$i$i = HEAP32[$1425>>2]|0;
               $$0265462$i$i = 0;$1430 = $$pre515$i$i;$2339 = $1423;
               while(1) {
                $1429 = ($1430|0)>(0);
                if ($1429) {
                 $$0266458$i$i = 0;$1435 = $1430;$1438 = $2339;
                 while(1) {
                  $1434 = Math_imul($1435, $$0269471$i$i)|0;
                  $1436 = (($1434) + ($$0266458$i$i))|0;
                  $1437 = Math_imul($1438, $$0268476$i$i)|0;
                  $1439 = (($1437) + ($$0265462$i$i))|0;
                  $1440 = HEAP32[$1426>>2]|0;
                  $1441 = HEAP32[$1427>>2]|0;
                  $1442 = Math_imul($1441, $1439)|0;
                  $1443 = (($1436) + ($1442))|0;
                  $1444 = $1443 << 6;
                  $1445 = (($1440) + ($1444<<1)|0);
                  $1446 = HEAP32[$1428>>2]|0;
                  $1447 = (((($0)) + 4|0) + (($1446*1680)|0)|0);
                  $1448 = (_stbi__jpeg_decode_block_prog_dc($0,$1445,$1447,$1421)|0);
                  $1449 = ($1448|0)==(0);
                  $1433 = (($$0266458$i$i) + 1)|0;
                  if ($1449) {
                   break L4;
                  }
                  $1431 = HEAP32[$1425>>2]|0;
                  $1432 = ($1433|0)<($1431|0);
                  $$pre517$i$i = HEAP32[$1422>>2]|0;
                  if ($1432) {
                   $$0266458$i$i = $1433;$1435 = $1431;$1438 = $$pre517$i$i;
                  } else {
                   $1452 = $$pre517$i$i;$2340 = $1431;
                   break;
                  }
                 }
                } else {
                 $1452 = $2339;$2340 = $1430;
                }
                $1450 = (($$0265462$i$i) + 1)|0;
                $1451 = ($1450|0)<($1452|0);
                if ($1451) {
                 $$0265462$i$i = $1450;$1430 = $2340;$2339 = $1452;
                } else {
                 break;
                }
               }
               $$pre519$i$i = HEAP32[$71>>2]|0;
               $1455 = $$pre519$i$i;
              } else {
               $1455 = $2338;
              }
              $1453 = (($$0267467$i$i) + 1)|0;
              $1454 = ($1453|0)<($1455|0);
              if ($1454) {
               $$0267467$i$i = $1453;$2338 = $1455;
              } else {
               break;
              }
             }
             $$pre520$i$i = HEAP32[$84>>2]|0;
             $1457 = $$pre520$i$i;
            } else {
             $1457 = $2337;
            }
            $1456 = (($1457) + -1)|0;
            HEAP32[$84>>2] = $1456;
            $1458 = ($1457|0)<(2);
            if ($1458) {
             $1459 = HEAP32[$77>>2]|0;
             $1460 = ($1459|0)<(24);
             L286: do {
              if ($1460) {
               L288: while(1) {
                $1461 = HEAP32[$79>>2]|0;
                $1462 = ($1461|0)==(0);
                L290: do {
                 if ($1462) {
                  $1463 = HEAP32[$0>>2]|0;
                  $1464 = ((($1463)) + 168|0);
                  $1465 = HEAP32[$1464>>2]|0;
                  $1466 = ((($1463)) + 172|0);
                  $1467 = HEAP32[$1466>>2]|0;
                  $1468 = ($1465>>>0)<($1467>>>0);
                  if ($1468) {
                   $1469 = ((($1465)) + 1|0);
                   HEAP32[$1464>>2] = $1469;
                   $1470 = HEAP8[$1465>>0]|0;
                   $$0$i349$i$i = $1470;
                  } else {
                   $1471 = ((($1463)) + 32|0);
                   $1472 = HEAP32[$1471>>2]|0;
                   $1473 = ($1472|0)==(0);
                   if ($1473) {
                    $1534 = 0;
                    break;
                   }
                   $1474 = ((($1463)) + 16|0);
                   $1475 = HEAP32[$1474>>2]|0;
                   $1476 = ((($1463)) + 28|0);
                   $1477 = HEAP32[$1476>>2]|0;
                   $1478 = ((($1463)) + 40|0);
                   $1479 = ((($1463)) + 36|0);
                   $1480 = HEAP32[$1479>>2]|0;
                   $1481 = (ftCall_iiii($1475|0,$1477,$1478,$1480)|0);
                   $1482 = ($1481|0)==(0);
                   if ($1482) {
                    HEAP32[$1471>>2] = 0;
                    $1483 = ((($1463)) + 41|0);
                    HEAP8[$1478>>0] = 0;
                    $$pre$phi$i346$i$iZ2D = $1483;$$sink$i$i347$i$i = $1483;$2342 = 0;
                   } else {
                    $1484 = (((($1463)) + 40|0) + ($1481)|0);
                    $$pre$i344$i$i = HEAP8[$1478>>0]|0;
                    $$pre5$i345$i$i = ((($1463)) + 41|0);
                    $$pre$phi$i346$i$iZ2D = $$pre5$i345$i$i;$$sink$i$i347$i$i = $1484;$2342 = $$pre$i344$i$i;
                   }
                   HEAP32[$1466>>2] = $$sink$i$i347$i$i;
                   HEAP32[$1464>>2] = $$pre$phi$i346$i$iZ2D;
                   $$0$i349$i$i = $2342;
                  }
                  $1485 = $$0$i349$i$i&255;
                  $1486 = ($$0$i349$i$i<<24>>24)==(-1);
                  if (!($1486)) {
                   $1534 = $1485;
                   break;
                  }
                  $1487 = HEAP32[$0>>2]|0;
                  $1488 = ((($1487)) + 168|0);
                  $1489 = HEAP32[$1488>>2]|0;
                  $1490 = ((($1487)) + 172|0);
                  $1491 = HEAP32[$1490>>2]|0;
                  $1492 = ($1489>>>0)<($1491>>>0);
                  do {
                   if ($1492) {
                    $1493 = ((($1489)) + 1|0);
                    HEAP32[$1488>>2] = $1493;
                    $1494 = HEAP8[$1489>>0]|0;
                    $$0$i$i67$i$sink$ph = $1494;
                   } else {
                    $1495 = ((($1487)) + 32|0);
                    $1496 = HEAP32[$1495>>2]|0;
                    $1497 = ($1496|0)==(0);
                    if ($1497) {
                     $$0$i$i67$i$sink$ph = 0;
                     break;
                    }
                    $1498 = ((($1487)) + 16|0);
                    $1499 = HEAP32[$1498>>2]|0;
                    $1500 = ((($1487)) + 28|0);
                    $1501 = HEAP32[$1500>>2]|0;
                    $1502 = ((($1487)) + 40|0);
                    $1503 = ((($1487)) + 36|0);
                    $1504 = HEAP32[$1503>>2]|0;
                    $1505 = (ftCall_iiii($1499|0,$1501,$1502,$1504)|0);
                    $1506 = ($1505|0)==(0);
                    if ($1506) {
                     HEAP32[$1495>>2] = 0;
                     $1507 = ((($1487)) + 41|0);
                     HEAP8[$1502>>0] = 0;
                     $$pre$phi$i353$i$iZ2D = $1507;$$sink$i$i354$i$i = $1507;$2343 = 0;
                    } else {
                     $1508 = (((($1487)) + 40|0) + ($1505)|0);
                     $$pre$i351$i$i = HEAP8[$1502>>0]|0;
                     $$pre5$i352$i$i = ((($1487)) + 41|0);
                     $$pre$phi$i353$i$iZ2D = $$pre5$i352$i$i;$$sink$i$i354$i$i = $1508;$2343 = $$pre$i351$i$i;
                    }
                    HEAP32[$1490>>2] = $$sink$i$i354$i$i;
                    HEAP32[$1488>>2] = $$pre$phi$i353$i$iZ2D;
                    $$0$i$i67$i$sink$ph = $2343;
                   }
                  } while(0);
                  $$0$i$i67$i$sink = $$0$i$i67$i$sink$ph;
                  while(1) {
                   switch ($$0$i$i67$i$sink<<24>>24) {
                   case 0:  {
                    $1534 = $1485;
                    break L290;
                    break;
                   }
                   case -1:  {
                    break;
                   }
                   default: {
                    break L288;
                   }
                   }
                   $1509 = HEAP32[$0>>2]|0;
                   $1510 = ((($1509)) + 168|0);
                   $1511 = HEAP32[$1510>>2]|0;
                   $1512 = ((($1509)) + 172|0);
                   $1513 = HEAP32[$1512>>2]|0;
                   $1514 = ($1511>>>0)<($1513>>>0);
                   do {
                    if ($1514) {
                     $1515 = ((($1511)) + 1|0);
                     HEAP32[$1510>>2] = $1515;
                     $1516 = HEAP8[$1511>>0]|0;
                     $$0$i$i67$i$sink$be = $1516;
                    } else {
                     $1517 = ((($1509)) + 32|0);
                     $1518 = HEAP32[$1517>>2]|0;
                     $1519 = ($1518|0)==(0);
                     if ($1519) {
                      $$0$i$i67$i$sink$be = 0;
                      break;
                     }
                     $1520 = ((($1509)) + 16|0);
                     $1521 = HEAP32[$1520>>2]|0;
                     $1522 = ((($1509)) + 28|0);
                     $1523 = HEAP32[$1522>>2]|0;
                     $1524 = ((($1509)) + 40|0);
                     $1525 = ((($1509)) + 36|0);
                     $1526 = HEAP32[$1525>>2]|0;
                     $1527 = (ftCall_iiii($1521|0,$1523,$1524,$1526)|0);
                     $1528 = ($1527|0)==(0);
                     if ($1528) {
                      HEAP32[$1517>>2] = 0;
                      $1529 = ((($1509)) + 41|0);
                      HEAP8[$1524>>0] = 0;
                      $$pre$phi$i$i64$iZ2D = $1529;$$sink$i$i$i65$i = $1529;$2344 = 0;
                     } else {
                      $1530 = (((($1509)) + 40|0) + ($1527)|0);
                      $$pre$i$i62$i = HEAP8[$1524>>0]|0;
                      $$pre5$i$i63$i = ((($1509)) + 41|0);
                      $$pre$phi$i$i64$iZ2D = $$pre5$i$i63$i;$$sink$i$i$i65$i = $1530;$2344 = $$pre$i$i62$i;
                     }
                     HEAP32[$1512>>2] = $$sink$i$i$i65$i;
                     HEAP32[$1510>>2] = $$pre$phi$i$i64$iZ2D;
                     $$0$i$i67$i$sink$be = $2344;
                    }
                   } while(0);
                   $$0$i$i67$i$sink = $$0$i$i67$i$sink$be;
                  }
                 } else {
                  $1534 = 0;
                 }
                } while(0);
                $1531 = HEAP32[$77>>2]|0;
                $1532 = (24 - ($1531))|0;
                $1533 = $1534 << $1532;
                $1535 = HEAP32[$78>>2]|0;
                $1536 = $1533 | $1535;
                HEAP32[$78>>2] = $1536;
                $1537 = (($1531) + 8)|0;
                HEAP32[$77>>2] = $1537;
                $1538 = ($1531|0)<(17);
                if (!($1538)) {
                 break L286;
                }
               }
               HEAP8[$21>>0] = $$0$i$i67$i$sink;
               HEAP32[$79>>2] = 1;
              }
             } while(0);
             $1539 = HEAP8[$21>>0]|0;
             $1540 = $1539 & -8;
             $1541 = ($1540<<24>>24)==(-48);
             if (!($1541)) {
              $1552 = $1539;
              break L122;
             }
             HEAP32[$77>>2] = 0;
             HEAP32[$78>>2] = 0;
             HEAP32[$79>>2] = 0;
             HEAP32[$80>>2] = 0;
             HEAP32[$81>>2] = 0;
             HEAP32[$82>>2] = 0;
             HEAP32[$83>>2] = 0;
             HEAP8[$21>>0] = -1;
             $1542 = HEAP32[$18>>2]|0;
             $1543 = ($1542|0)==(0);
             $spec$select$i281$i$i = $1543 ? 2147483647 : $1542;
             HEAP32[$84>>2] = $spec$select$i281$i$i;
             HEAP32[$85>>2] = 0;
             $2341 = $spec$select$i281$i$i;
            } else {
             $2341 = $1456;
            }
            $1544 = (($$0269471$i$i) + 1)|0;
            $1545 = HEAP32[$89>>2]|0;
            $1546 = ($1544|0)<($1545|0);
            if ($1546) {
             $$0269471$i$i = $1544;$2337 = $2341;
            } else {
             break;
            }
           }
           $$pre521$i$i = HEAP32[$87>>2]|0;
           $1549 = $$pre521$i$i;$2335 = $2341;$2336 = $1545;
          } else {
           $1549 = $2333;$2335 = $2334;$2336 = $1417;
          }
          $1547 = (($$0268476$i$i) + 1)|0;
          $1548 = ($1547|0)<($1549|0);
          if ($1548) {
           $$0268476$i$i = $1547;$1417 = $2336;$2333 = $1549;$2334 = $2335;
          } else {
           label = 543;
           break L122;
          }
         }
        }
        $565 = HEAP32[$86>>2]|0;
        $566 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 28|0);
        $567 = HEAP32[$566>>2]|0;
        $568 = (($567) + 7)|0;
        $569 = $568 >> 3;
        $570 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 32|0);
        $571 = HEAP32[$570>>2]|0;
        $572 = (($571) + 7)|0;
        $573 = $572 >> 3;
        $574 = ($571|0)>(0);
        if ($574) {
         $575 = ($567|0)>(0);
         $576 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 60|0);
         $577 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 64|0);
         $578 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 16|0);
         $579 = (((((($0)) + 18076|0) + (($565*72)|0)|0)) + 20|0);
         $$0275454$i$i = 0;
         while(1) {
          if ($575) {
           $$0276450$i$i = 0;
           while(1) {
            $580 = HEAP32[$576>>2]|0;
            $581 = HEAP32[$577>>2]|0;
            $582 = Math_imul($581, $$0275454$i$i)|0;
            $583 = (($582) + ($$0276450$i$i))|0;
            $584 = $583 << 6;
            $585 = (($580) + ($584<<1)|0);
            $586 = HEAP32[$72>>2]|0;
            $587 = ($586|0)==(0);
            L338: do {
             if ($587) {
              $588 = HEAP32[$578>>2]|0;
              $589 = (((($0)) + 4|0) + (($588*1680)|0)|0);
              $590 = (_stbi__jpeg_decode_block_prog_dc($0,$585,$589,$565)|0);
              $591 = ($590|0)==(0);
              if ($591) {
               break L4;
              }
             } else {
              $592 = HEAP32[$579>>2]|0;
              $593 = (((($0)) + 6724|0) + (($592*1680)|0)|0);
              $594 = HEAP32[$74>>2]|0;
              $595 = ($594|0)==(0);
              $596 = HEAP32[$75>>2]|0;
              if ($595) {
               $597 = HEAP32[$85>>2]|0;
               $598 = ($597|0)==(0);
               if (!($598)) {
                $599 = (($597) + -1)|0;
                HEAP32[$85>>2] = $599;
                break;
               }
               $$0130$i$i$i = $586;
               L346: while(1) {
                $600 = HEAP32[$77>>2]|0;
                $601 = ($600|0)<(16);
                L348: do {
                 if ($601) {
                  L350: while(1) {
                   $602 = HEAP32[$79>>2]|0;
                   $603 = ($602|0)==(0);
                   L352: do {
                    if ($603) {
                     $604 = HEAP32[$0>>2]|0;
                     $605 = ((($604)) + 168|0);
                     $606 = HEAP32[$605>>2]|0;
                     $607 = ((($604)) + 172|0);
                     $608 = HEAP32[$607>>2]|0;
                     $609 = ($606>>>0)<($608>>>0);
                     if ($609) {
                      $610 = ((($606)) + 1|0);
                      HEAP32[$605>>2] = $610;
                      $611 = HEAP8[$606>>0]|0;
                      $$0$i267$i$i$i = $611;
                     } else {
                      $612 = ((($604)) + 32|0);
                      $613 = HEAP32[$612>>2]|0;
                      $614 = ($613|0)==(0);
                      if ($614) {
                       $675 = 0;
                       break;
                      }
                      $615 = ((($604)) + 16|0);
                      $616 = HEAP32[$615>>2]|0;
                      $617 = ((($604)) + 28|0);
                      $618 = HEAP32[$617>>2]|0;
                      $619 = ((($604)) + 40|0);
                      $620 = ((($604)) + 36|0);
                      $621 = HEAP32[$620>>2]|0;
                      $622 = (ftCall_iiii($616|0,$618,$619,$621)|0);
                      $623 = ($622|0)==(0);
                      if ($623) {
                       HEAP32[$612>>2] = 0;
                       $624 = ((($604)) + 41|0);
                       HEAP8[$619>>0] = 0;
                       $$pre$phi$i264$i$i$iZ2D = $624;$$sink$i$i265$i$i$i = $624;$2308 = 0;
                      } else {
                       $625 = (((($604)) + 40|0) + ($622)|0);
                       $$pre$i262$i$i$i = HEAP8[$619>>0]|0;
                       $$pre5$i263$i$i$i = ((($604)) + 41|0);
                       $$pre$phi$i264$i$i$iZ2D = $$pre5$i263$i$i$i;$$sink$i$i265$i$i$i = $625;$2308 = $$pre$i262$i$i$i;
                      }
                      HEAP32[$607>>2] = $$sink$i$i265$i$i$i;
                      HEAP32[$605>>2] = $$pre$phi$i264$i$i$iZ2D;
                      $$0$i267$i$i$i = $2308;
                     }
                     $626 = $$0$i267$i$i$i&255;
                     $627 = ($$0$i267$i$i$i<<24>>24)==(-1);
                     if (!($627)) {
                      $675 = $626;
                      break;
                     }
                     $628 = HEAP32[$0>>2]|0;
                     $629 = ((($628)) + 168|0);
                     $630 = HEAP32[$629>>2]|0;
                     $631 = ((($628)) + 172|0);
                     $632 = HEAP32[$631>>2]|0;
                     $633 = ($630>>>0)<($632>>>0);
                     do {
                      if ($633) {
                       $634 = ((($630)) + 1|0);
                       HEAP32[$629>>2] = $634;
                       $635 = HEAP8[$630>>0]|0;
                       $$0$i163$i$i$i$sink$ph = $635;
                      } else {
                       $636 = ((($628)) + 32|0);
                       $637 = HEAP32[$636>>2]|0;
                       $638 = ($637|0)==(0);
                       if ($638) {
                        $$0$i163$i$i$i$sink$ph = 0;
                        break;
                       }
                       $639 = ((($628)) + 16|0);
                       $640 = HEAP32[$639>>2]|0;
                       $641 = ((($628)) + 28|0);
                       $642 = HEAP32[$641>>2]|0;
                       $643 = ((($628)) + 40|0);
                       $644 = ((($628)) + 36|0);
                       $645 = HEAP32[$644>>2]|0;
                       $646 = (ftCall_iiii($640|0,$642,$643,$645)|0);
                       $647 = ($646|0)==(0);
                       if ($647) {
                        HEAP32[$636>>2] = 0;
                        $648 = ((($628)) + 41|0);
                        HEAP8[$643>>0] = 0;
                        $$pre$phi$i167$i$i$iZ2D = $648;$$sink$i$i168$i$i$i = $648;$2309 = 0;
                       } else {
                        $649 = (((($628)) + 40|0) + ($646)|0);
                        $$pre$i165$i$i$i = HEAP8[$643>>0]|0;
                        $$pre5$i166$i$i$i = ((($628)) + 41|0);
                        $$pre$phi$i167$i$i$iZ2D = $$pre5$i166$i$i$i;$$sink$i$i168$i$i$i = $649;$2309 = $$pre$i165$i$i$i;
                       }
                       HEAP32[$631>>2] = $$sink$i$i168$i$i$i;
                       HEAP32[$629>>2] = $$pre$phi$i167$i$i$iZ2D;
                       $$0$i163$i$i$i$sink$ph = $2309;
                      }
                     } while(0);
                     $$0$i163$i$i$i$sink = $$0$i163$i$i$i$sink$ph;
                     while(1) {
                      switch ($$0$i163$i$i$i$sink<<24>>24) {
                      case 0:  {
                       $675 = $626;
                       break L352;
                       break;
                      }
                      case -1:  {
                       break;
                      }
                      default: {
                       break L350;
                      }
                      }
                      $650 = HEAP32[$0>>2]|0;
                      $651 = ((($650)) + 168|0);
                      $652 = HEAP32[$651>>2]|0;
                      $653 = ((($650)) + 172|0);
                      $654 = HEAP32[$653>>2]|0;
                      $655 = ($652>>>0)<($654>>>0);
                      do {
                       if ($655) {
                        $656 = ((($652)) + 1|0);
                        HEAP32[$651>>2] = $656;
                        $657 = HEAP8[$652>>0]|0;
                        $$0$i163$i$i$i$sink$be = $657;
                       } else {
                        $658 = ((($650)) + 32|0);
                        $659 = HEAP32[$658>>2]|0;
                        $660 = ($659|0)==(0);
                        if ($660) {
                         $$0$i163$i$i$i$sink$be = 0;
                         break;
                        }
                        $661 = ((($650)) + 16|0);
                        $662 = HEAP32[$661>>2]|0;
                        $663 = ((($650)) + 28|0);
                        $664 = HEAP32[$663>>2]|0;
                        $665 = ((($650)) + 40|0);
                        $666 = ((($650)) + 36|0);
                        $667 = HEAP32[$666>>2]|0;
                        $668 = (ftCall_iiii($662|0,$664,$665,$667)|0);
                        $669 = ($668|0)==(0);
                        if ($669) {
                         HEAP32[$658>>2] = 0;
                         $670 = ((($650)) + 41|0);
                         HEAP8[$665>>0] = 0;
                         $$pre$phi$i160$i$i$iZ2D = $670;$$sink$i$i161$i$i$i = $670;$2310 = 0;
                        } else {
                         $671 = (((($650)) + 40|0) + ($668)|0);
                         $$pre$i158$i$i$i = HEAP8[$665>>0]|0;
                         $$pre5$i159$i$i$i = ((($650)) + 41|0);
                         $$pre$phi$i160$i$i$iZ2D = $$pre5$i159$i$i$i;$$sink$i$i161$i$i$i = $671;$2310 = $$pre$i158$i$i$i;
                        }
                        HEAP32[$653>>2] = $$sink$i$i161$i$i$i;
                        HEAP32[$651>>2] = $$pre$phi$i160$i$i$iZ2D;
                        $$0$i163$i$i$i$sink$be = $2310;
                       }
                      } while(0);
                      $$0$i163$i$i$i$sink = $$0$i163$i$i$i$sink$be;
                     }
                    } else {
                     $675 = 0;
                    }
                   } while(0);
                   $672 = HEAP32[$77>>2]|0;
                   $673 = (24 - ($672))|0;
                   $674 = $675 << $673;
                   $676 = HEAP32[$78>>2]|0;
                   $677 = $674 | $676;
                   HEAP32[$78>>2] = $677;
                   $678 = (($672) + 8)|0;
                   HEAP32[$77>>2] = $678;
                   $679 = ($672|0)<(17);
                   if (!($679)) {
                    break L348;
                   }
                  }
                  HEAP8[$21>>0] = $$0$i163$i$i$i$sink;
                  HEAP32[$79>>2] = 1;
                 }
                } while(0);
                $680 = HEAP32[$78>>2]|0;
                $681 = $680 >>> 23;
                $682 = ((((($0)) + 13956|0) + ($592<<10)|0) + ($681<<1)|0);
                $683 = HEAP16[$682>>1]|0;
                $684 = $683 << 16 >> 16;
                $685 = ($683<<16>>16)==(0);
                do {
                 if ($685) {
                  $701 = (_stbi__jpeg_huff_decode($0,$593)|0);
                  $702 = ($701|0)<(0);
                  if ($702) {
                   break L4;
                  }
                  $703 = $701 & 15;
                  $704 = $701 >>> 4;
                  $705 = ($703|0)==(0);
                  if ($705) {
                   $706 = ($701|0)<(240);
                   if ($706) {
                    break L346;
                   }
                   $803 = (($$0130$i$i$i) + 16)|0;
                   $$4134$ph$i$i$i = $803;
                   break;
                  }
                  $804 = (($704) + ($$0130$i$i$i))|0;
                  $805 = (($804) + 1)|0;
                  $806 = (114640 + ($804)|0);
                  $807 = HEAP8[$806>>0]|0;
                  $808 = $807&255;
                  $809 = HEAP32[$77>>2]|0;
                  $810 = ($809|0)<($703|0);
                  L395: do {
                   if ($810) {
                    L397: while(1) {
                     $811 = HEAP32[$79>>2]|0;
                     $812 = ($811|0)==(0);
                     L399: do {
                      if ($812) {
                       $813 = HEAP32[$0>>2]|0;
                       $814 = ((($813)) + 168|0);
                       $815 = HEAP32[$814>>2]|0;
                       $816 = ((($813)) + 172|0);
                       $817 = HEAP32[$816>>2]|0;
                       $818 = ($815>>>0)<($817>>>0);
                       if ($818) {
                        $819 = ((($815)) + 1|0);
                        HEAP32[$814>>2] = $819;
                        $820 = HEAP8[$815>>0]|0;
                        $$0$i288$i$i$i = $820;
                       } else {
                        $821 = ((($813)) + 32|0);
                        $822 = HEAP32[$821>>2]|0;
                        $823 = ($822|0)==(0);
                        if ($823) {
                         $884 = 0;
                         break;
                        }
                        $824 = ((($813)) + 16|0);
                        $825 = HEAP32[$824>>2]|0;
                        $826 = ((($813)) + 28|0);
                        $827 = HEAP32[$826>>2]|0;
                        $828 = ((($813)) + 40|0);
                        $829 = ((($813)) + 36|0);
                        $830 = HEAP32[$829>>2]|0;
                        $831 = (ftCall_iiii($825|0,$827,$828,$830)|0);
                        $832 = ($831|0)==(0);
                        if ($832) {
                         HEAP32[$821>>2] = 0;
                         $833 = ((($813)) + 41|0);
                         HEAP8[$828>>0] = 0;
                         $$pre$phi$i285$i$i$iZ2D = $833;$$sink$i$i286$i$i$i = $833;$2314 = 0;
                        } else {
                         $834 = (((($813)) + 40|0) + ($831)|0);
                         $$pre$i283$i$i$i = HEAP8[$828>>0]|0;
                         $$pre5$i284$i$i$i = ((($813)) + 41|0);
                         $$pre$phi$i285$i$i$iZ2D = $$pre5$i284$i$i$i;$$sink$i$i286$i$i$i = $834;$2314 = $$pre$i283$i$i$i;
                        }
                        HEAP32[$816>>2] = $$sink$i$i286$i$i$i;
                        HEAP32[$814>>2] = $$pre$phi$i285$i$i$iZ2D;
                        $$0$i288$i$i$i = $2314;
                       }
                       $835 = $$0$i288$i$i$i&255;
                       $836 = ($$0$i288$i$i$i<<24>>24)==(-1);
                       if (!($836)) {
                        $884 = $835;
                        break;
                       }
                       $837 = HEAP32[$0>>2]|0;
                       $838 = ((($837)) + 168|0);
                       $839 = HEAP32[$838>>2]|0;
                       $840 = ((($837)) + 172|0);
                       $841 = HEAP32[$840>>2]|0;
                       $842 = ($839>>>0)<($841>>>0);
                       do {
                        if ($842) {
                         $843 = ((($839)) + 1|0);
                         HEAP32[$838>>2] = $843;
                         $844 = HEAP8[$839>>0]|0;
                         $$0$i193$i$i$i$sink$ph = $844;
                        } else {
                         $845 = ((($837)) + 32|0);
                         $846 = HEAP32[$845>>2]|0;
                         $847 = ($846|0)==(0);
                         if ($847) {
                          $$0$i193$i$i$i$sink$ph = 0;
                          break;
                         }
                         $848 = ((($837)) + 16|0);
                         $849 = HEAP32[$848>>2]|0;
                         $850 = ((($837)) + 28|0);
                         $851 = HEAP32[$850>>2]|0;
                         $852 = ((($837)) + 40|0);
                         $853 = ((($837)) + 36|0);
                         $854 = HEAP32[$853>>2]|0;
                         $855 = (ftCall_iiii($849|0,$851,$852,$854)|0);
                         $856 = ($855|0)==(0);
                         if ($856) {
                          HEAP32[$845>>2] = 0;
                          $857 = ((($837)) + 41|0);
                          HEAP8[$852>>0] = 0;
                          $$pre$phi$i292$i$i$iZ2D = $857;$$sink$i$i293$i$i$i = $857;$2315 = 0;
                         } else {
                          $858 = (((($837)) + 40|0) + ($855)|0);
                          $$pre$i290$i$i$i = HEAP8[$852>>0]|0;
                          $$pre5$i291$i$i$i = ((($837)) + 41|0);
                          $$pre$phi$i292$i$i$iZ2D = $$pre5$i291$i$i$i;$$sink$i$i293$i$i$i = $858;$2315 = $$pre$i290$i$i$i;
                         }
                         HEAP32[$840>>2] = $$sink$i$i293$i$i$i;
                         HEAP32[$838>>2] = $$pre$phi$i292$i$i$iZ2D;
                         $$0$i193$i$i$i$sink$ph = $2315;
                        }
                       } while(0);
                       $$0$i193$i$i$i$sink = $$0$i193$i$i$i$sink$ph;
                       while(1) {
                        switch ($$0$i193$i$i$i$sink<<24>>24) {
                        case 0:  {
                         $884 = $835;
                         break L399;
                         break;
                        }
                        case -1:  {
                         break;
                        }
                        default: {
                         break L397;
                        }
                        }
                        $859 = HEAP32[$0>>2]|0;
                        $860 = ((($859)) + 168|0);
                        $861 = HEAP32[$860>>2]|0;
                        $862 = ((($859)) + 172|0);
                        $863 = HEAP32[$862>>2]|0;
                        $864 = ($861>>>0)<($863>>>0);
                        do {
                         if ($864) {
                          $865 = ((($861)) + 1|0);
                          HEAP32[$860>>2] = $865;
                          $866 = HEAP8[$861>>0]|0;
                          $$0$i193$i$i$i$sink$be = $866;
                         } else {
                          $867 = ((($859)) + 32|0);
                          $868 = HEAP32[$867>>2]|0;
                          $869 = ($868|0)==(0);
                          if ($869) {
                           $$0$i193$i$i$i$sink$be = 0;
                           break;
                          }
                          $870 = ((($859)) + 16|0);
                          $871 = HEAP32[$870>>2]|0;
                          $872 = ((($859)) + 28|0);
                          $873 = HEAP32[$872>>2]|0;
                          $874 = ((($859)) + 40|0);
                          $875 = ((($859)) + 36|0);
                          $876 = HEAP32[$875>>2]|0;
                          $877 = (ftCall_iiii($871|0,$873,$874,$876)|0);
                          $878 = ($877|0)==(0);
                          if ($878) {
                           HEAP32[$867>>2] = 0;
                           $879 = ((($859)) + 41|0);
                           HEAP8[$874>>0] = 0;
                           $$pre$phi$i190$i$i$iZ2D = $879;$$sink$i$i191$i$i$i = $879;$2316 = 0;
                          } else {
                           $880 = (((($859)) + 40|0) + ($877)|0);
                           $$pre$i188$i$i$i = HEAP8[$874>>0]|0;
                           $$pre5$i189$i$i$i = ((($859)) + 41|0);
                           $$pre$phi$i190$i$i$iZ2D = $$pre5$i189$i$i$i;$$sink$i$i191$i$i$i = $880;$2316 = $$pre$i188$i$i$i;
                          }
                          HEAP32[$862>>2] = $$sink$i$i191$i$i$i;
                          HEAP32[$860>>2] = $$pre$phi$i190$i$i$iZ2D;
                          $$0$i193$i$i$i$sink$be = $2316;
                         }
                        } while(0);
                        $$0$i193$i$i$i$sink = $$0$i193$i$i$i$sink$be;
                       }
                      } else {
                       $884 = 0;
                      }
                     } while(0);
                     $881 = HEAP32[$77>>2]|0;
                     $882 = (24 - ($881))|0;
                     $883 = $884 << $882;
                     $885 = HEAP32[$78>>2]|0;
                     $886 = $883 | $885;
                     HEAP32[$78>>2] = $886;
                     $887 = (($881) + 8)|0;
                     HEAP32[$77>>2] = $887;
                     $888 = ($881|0)<(17);
                     if (!($888)) {
                      $901 = $887;
                      break L395;
                     }
                    }
                    HEAP8[$21>>0] = $$0$i193$i$i$i$sink;
                    HEAP32[$79>>2] = 1;
                    $$pre382$i$i$i = HEAP32[$77>>2]|0;
                    $901 = $$pre382$i$i$i;
                   } else {
                    $901 = $809;
                   }
                  } while(0);
                  $889 = HEAP32[$78>>2]|0;
                  $890 = $889 << $703;
                  $891 = (32 - ($703))|0;
                  $892 = $889 >>> $891;
                  $893 = $890 | $892;
                  $894 = $889 >> 31;
                  $895 = (114720 + ($703<<2)|0);
                  $896 = HEAP32[$895>>2]|0;
                  $897 = $896 ^ -1;
                  $898 = $893 & $897;
                  HEAP32[$78>>2] = $898;
                  $899 = $893 & $896;
                  $900 = (($901) - ($703))|0;
                  HEAP32[$77>>2] = $900;
                  $902 = (114800 + ($703<<2)|0);
                  $903 = HEAP32[$902>>2]|0;
                  $904 = $894 ^ -1;
                  $905 = $903 & $904;
                  $906 = (($905) + ($899))|0;
                  $907 = $906 << $596;
                  $908 = $907&65535;
                  $909 = (($585) + ($808<<1)|0);
                  HEAP16[$909>>1] = $908;
                  $$4134$ph$i$i$i = $805;
                 } else {
                  $686 = $684 >>> 4;
                  $687 = $686 & 15;
                  $688 = (($687) + ($$0130$i$i$i))|0;
                  $689 = $684 & 15;
                  $690 = $680 << $689;
                  HEAP32[$78>>2] = $690;
                  $691 = HEAP32[$77>>2]|0;
                  $692 = (($691) - ($689))|0;
                  HEAP32[$77>>2] = $692;
                  $693 = (($688) + 1)|0;
                  $694 = (114640 + ($688)|0);
                  $695 = HEAP8[$694>>0]|0;
                  $696 = $695&255;
                  $697 = $684 >> 8;
                  $698 = $697 << $596;
                  $699 = $698&65535;
                  $700 = (($585) + ($696<<1)|0);
                  HEAP16[$700>>1] = $699;
                  $$4134$ph$i$i$i = $693;
                 }
                } while(0);
                $911 = HEAP32[$73>>2]|0;
                $912 = ($$4134$ph$i$i$i|0)>($911|0);
                if ($912) {
                 break L338;
                } else {
                 $$0130$i$i$i = $$4134$ph$i$i$i;
                }
               }
               $707 = 1 << $704;
               HEAP32[$85>>2] = $707;
               $708 = ($704|0)==(0);
               if ($708) {
                $910 = 0;
               } else {
                $709 = HEAP32[$77>>2]|0;
                $710 = ($709|0)<($704|0);
                if ($710) {
                 L442: while(1) {
                  $711 = HEAP32[$79>>2]|0;
                  $712 = ($711|0)==(0);
                  L444: do {
                   if ($712) {
                    $713 = HEAP32[$0>>2]|0;
                    $714 = ((($713)) + 168|0);
                    $715 = HEAP32[$714>>2]|0;
                    $716 = ((($713)) + 172|0);
                    $717 = HEAP32[$716>>2]|0;
                    $718 = ($715>>>0)<($717>>>0);
                    if ($718) {
                     $719 = ((($715)) + 1|0);
                     HEAP32[$714>>2] = $719;
                     $720 = HEAP8[$715>>0]|0;
                     $$0$i274$i$i$i = $720;
                    } else {
                     $721 = ((($713)) + 32|0);
                     $722 = HEAP32[$721>>2]|0;
                     $723 = ($722|0)==(0);
                     if ($723) {
                      $784 = 0;
                      break;
                     }
                     $724 = ((($713)) + 16|0);
                     $725 = HEAP32[$724>>2]|0;
                     $726 = ((($713)) + 28|0);
                     $727 = HEAP32[$726>>2]|0;
                     $728 = ((($713)) + 40|0);
                     $729 = ((($713)) + 36|0);
                     $730 = HEAP32[$729>>2]|0;
                     $731 = (ftCall_iiii($725|0,$727,$728,$730)|0);
                     $732 = ($731|0)==(0);
                     if ($732) {
                      HEAP32[$721>>2] = 0;
                      $733 = ((($713)) + 41|0);
                      HEAP8[$728>>0] = 0;
                      $$pre$phi$i271$i$i$iZ2D = $733;$$sink$i$i272$i$i$i = $733;$2311 = 0;
                     } else {
                      $734 = (((($713)) + 40|0) + ($731)|0);
                      $$pre$i269$i$i$i = HEAP8[$728>>0]|0;
                      $$pre5$i270$i$i$i = ((($713)) + 41|0);
                      $$pre$phi$i271$i$i$iZ2D = $$pre5$i270$i$i$i;$$sink$i$i272$i$i$i = $734;$2311 = $$pre$i269$i$i$i;
                     }
                     HEAP32[$716>>2] = $$sink$i$i272$i$i$i;
                     HEAP32[$714>>2] = $$pre$phi$i271$i$i$iZ2D;
                     $$0$i274$i$i$i = $2311;
                    }
                    $735 = $$0$i274$i$i$i&255;
                    $736 = ($$0$i274$i$i$i<<24>>24)==(-1);
                    if (!($736)) {
                     $784 = $735;
                     break;
                    }
                    $737 = HEAP32[$0>>2]|0;
                    $738 = ((($737)) + 168|0);
                    $739 = HEAP32[$738>>2]|0;
                    $740 = ((($737)) + 172|0);
                    $741 = HEAP32[$740>>2]|0;
                    $742 = ($739>>>0)<($741>>>0);
                    do {
                     if ($742) {
                      $743 = ((($739)) + 1|0);
                      HEAP32[$738>>2] = $743;
                      $744 = HEAP8[$739>>0]|0;
                      $$0$i182$i$i$i$sink$ph = $744;
                     } else {
                      $745 = ((($737)) + 32|0);
                      $746 = HEAP32[$745>>2]|0;
                      $747 = ($746|0)==(0);
                      if ($747) {
                       $$0$i182$i$i$i$sink$ph = 0;
                       break;
                      }
                      $748 = ((($737)) + 16|0);
                      $749 = HEAP32[$748>>2]|0;
                      $750 = ((($737)) + 28|0);
                      $751 = HEAP32[$750>>2]|0;
                      $752 = ((($737)) + 40|0);
                      $753 = ((($737)) + 36|0);
                      $754 = HEAP32[$753>>2]|0;
                      $755 = (ftCall_iiii($749|0,$751,$752,$754)|0);
                      $756 = ($755|0)==(0);
                      if ($756) {
                       HEAP32[$745>>2] = 0;
                       $757 = ((($737)) + 41|0);
                       HEAP8[$752>>0] = 0;
                       $$pre$phi$i278$i$i$iZ2D = $757;$$sink$i$i279$i$i$i = $757;$2312 = 0;
                      } else {
                       $758 = (((($737)) + 40|0) + ($755)|0);
                       $$pre$i276$i$i$i = HEAP8[$752>>0]|0;
                       $$pre5$i277$i$i$i = ((($737)) + 41|0);
                       $$pre$phi$i278$i$i$iZ2D = $$pre5$i277$i$i$i;$$sink$i$i279$i$i$i = $758;$2312 = $$pre$i276$i$i$i;
                      }
                      HEAP32[$740>>2] = $$sink$i$i279$i$i$i;
                      HEAP32[$738>>2] = $$pre$phi$i278$i$i$iZ2D;
                      $$0$i182$i$i$i$sink$ph = $2312;
                     }
                    } while(0);
                    $$0$i182$i$i$i$sink = $$0$i182$i$i$i$sink$ph;
                    while(1) {
                     switch ($$0$i182$i$i$i$sink<<24>>24) {
                     case 0:  {
                      $784 = $735;
                      break L444;
                      break;
                     }
                     case -1:  {
                      break;
                     }
                     default: {
                      label = 264;
                      break L442;
                     }
                     }
                     $759 = HEAP32[$0>>2]|0;
                     $760 = ((($759)) + 168|0);
                     $761 = HEAP32[$760>>2]|0;
                     $762 = ((($759)) + 172|0);
                     $763 = HEAP32[$762>>2]|0;
                     $764 = ($761>>>0)<($763>>>0);
                     do {
                      if ($764) {
                       $765 = ((($761)) + 1|0);
                       HEAP32[$760>>2] = $765;
                       $766 = HEAP8[$761>>0]|0;
                       $$0$i182$i$i$i$sink$be = $766;
                      } else {
                       $767 = ((($759)) + 32|0);
                       $768 = HEAP32[$767>>2]|0;
                       $769 = ($768|0)==(0);
                       if ($769) {
                        $$0$i182$i$i$i$sink$be = 0;
                        break;
                       }
                       $770 = ((($759)) + 16|0);
                       $771 = HEAP32[$770>>2]|0;
                       $772 = ((($759)) + 28|0);
                       $773 = HEAP32[$772>>2]|0;
                       $774 = ((($759)) + 40|0);
                       $775 = ((($759)) + 36|0);
                       $776 = HEAP32[$775>>2]|0;
                       $777 = (ftCall_iiii($771|0,$773,$774,$776)|0);
                       $778 = ($777|0)==(0);
                       if ($778) {
                        HEAP32[$767>>2] = 0;
                        $779 = ((($759)) + 41|0);
                        HEAP8[$774>>0] = 0;
                        $$pre$phi$i179$i$i$iZ2D = $779;$$sink$i$i180$i$i$i = $779;$2313 = 0;
                       } else {
                        $780 = (((($759)) + 40|0) + ($777)|0);
                        $$pre$i177$i$i$i = HEAP8[$774>>0]|0;
                        $$pre5$i178$i$i$i = ((($759)) + 41|0);
                        $$pre$phi$i179$i$i$iZ2D = $$pre5$i178$i$i$i;$$sink$i$i180$i$i$i = $780;$2313 = $$pre$i177$i$i$i;
                       }
                       HEAP32[$762>>2] = $$sink$i$i180$i$i$i;
                       HEAP32[$760>>2] = $$pre$phi$i179$i$i$iZ2D;
                       $$0$i182$i$i$i$sink$be = $2313;
                      }
                     } while(0);
                     $$0$i182$i$i$i$sink = $$0$i182$i$i$i$sink$be;
                    }
                   } else {
                    $784 = 0;
                   }
                  } while(0);
                  $781 = HEAP32[$77>>2]|0;
                  $782 = (24 - ($781))|0;
                  $783 = $784 << $782;
                  $785 = HEAP32[$78>>2]|0;
                  $786 = $783 | $785;
                  HEAP32[$78>>2] = $786;
                  $787 = (($781) + 8)|0;
                  HEAP32[$77>>2] = $787;
                  $788 = ($781|0)<(17);
                  if (!($788)) {
                   $$pre$i172$i$i$i = $787;
                   break;
                  }
                 }
                 if ((label|0) == 264) {
                  label = 0;
                  HEAP8[$21>>0] = $$0$i182$i$i$i$sink;
                  HEAP32[$79>>2] = 1;
                  $$pre$i172$pre$i$i$i = HEAP32[$77>>2]|0;
                  $$pre$i172$i$i$i = $$pre$i172$pre$i$i$i;
                 }
                 $$pre384$i$i$i = HEAP32[$85>>2]|0;
                 $800 = $$pre$i172$i$i$i;$802 = $$pre384$i$i$i;
                } else {
                 $800 = $709;$802 = $707;
                }
                $789 = HEAP32[$78>>2]|0;
                $790 = $789 << $704;
                $791 = (32 - ($704))|0;
                $792 = $789 >>> $791;
                $793 = $790 | $792;
                $794 = (114720 + ($704<<2)|0);
                $795 = HEAP32[$794>>2]|0;
                $796 = $795 ^ -1;
                $797 = $793 & $796;
                HEAP32[$78>>2] = $797;
                $798 = $793 & $795;
                $799 = (($800) - ($704))|0;
                HEAP32[$77>>2] = $799;
                $801 = (($798) + ($802))|0;
                HEAP32[$85>>2] = $801;
                $phitmp$i$i$i = (($801) + -1)|0;
                $910 = $phitmp$i$i$i;
               }
               HEAP32[$85>>2] = $910;
               break;
              }
              $913 = 1 << $596;
              $914 = HEAP32[$85>>2]|0;
              $915 = ($914|0)==(0);
              if (!($915)) {
               $916 = (($914) + -1)|0;
               HEAP32[$85>>2] = $916;
               $917 = HEAP32[$73>>2]|0;
               $918 = ($586|0)>($917|0);
               if ($918) {
                break;
               }
               $sext152$i$i$i = $913 << 16;
               $919 = $sext152$i$i$i >> 16;
               $$5135363$i$i$i = $586;
               while(1) {
                $920 = (114640 + ($$5135363$i$i$i)|0);
                $921 = HEAP8[$920>>0]|0;
                $922 = $921&255;
                $923 = (($585) + ($922<<1)|0);
                $924 = HEAP16[$923>>1]|0;
                $925 = ($924<<16>>16)==(0);
                do {
                 if (!($925)) {
                  $926 = HEAP32[$77>>2]|0;
                  $927 = ($926|0)<(1);
                  L491: do {
                   if ($927) {
                    L493: while(1) {
                     $928 = HEAP32[$79>>2]|0;
                     $929 = ($928|0)==(0);
                     L495: do {
                      if ($929) {
                       $930 = HEAP32[$0>>2]|0;
                       $931 = ((($930)) + 168|0);
                       $932 = HEAP32[$931>>2]|0;
                       $933 = ((($930)) + 172|0);
                       $934 = HEAP32[$933>>2]|0;
                       $935 = ($932>>>0)<($934>>>0);
                       if ($935) {
                        $936 = ((($932)) + 1|0);
                        HEAP32[$931>>2] = $936;
                        $937 = HEAP8[$932>>0]|0;
                        $$0$i302$i$i$i = $937;
                       } else {
                        $938 = ((($930)) + 32|0);
                        $939 = HEAP32[$938>>2]|0;
                        $940 = ($939|0)==(0);
                        if ($940) {
                         $1001 = 0;
                         break;
                        }
                        $941 = ((($930)) + 16|0);
                        $942 = HEAP32[$941>>2]|0;
                        $943 = ((($930)) + 28|0);
                        $944 = HEAP32[$943>>2]|0;
                        $945 = ((($930)) + 40|0);
                        $946 = ((($930)) + 36|0);
                        $947 = HEAP32[$946>>2]|0;
                        $948 = (ftCall_iiii($942|0,$944,$945,$947)|0);
                        $949 = ($948|0)==(0);
                        if ($949) {
                         HEAP32[$938>>2] = 0;
                         $950 = ((($930)) + 41|0);
                         HEAP8[$945>>0] = 0;
                         $$pre$phi$i299$i$i$iZ2D = $950;$$sink$i$i300$i$i$i = $950;$2317 = 0;
                        } else {
                         $951 = (((($930)) + 40|0) + ($948)|0);
                         $$pre$i297$i$i$i = HEAP8[$945>>0]|0;
                         $$pre5$i298$i$i$i = ((($930)) + 41|0);
                         $$pre$phi$i299$i$i$iZ2D = $$pre5$i298$i$i$i;$$sink$i$i300$i$i$i = $951;$2317 = $$pre$i297$i$i$i;
                        }
                        HEAP32[$933>>2] = $$sink$i$i300$i$i$i;
                        HEAP32[$931>>2] = $$pre$phi$i299$i$i$iZ2D;
                        $$0$i302$i$i$i = $2317;
                       }
                       $952 = $$0$i302$i$i$i&255;
                       $953 = ($$0$i302$i$i$i<<24>>24)==(-1);
                       if (!($953)) {
                        $1001 = $952;
                        break;
                       }
                       $954 = HEAP32[$0>>2]|0;
                       $955 = ((($954)) + 168|0);
                       $956 = HEAP32[$955>>2]|0;
                       $957 = ((($954)) + 172|0);
                       $958 = HEAP32[$957>>2]|0;
                       $959 = ($956>>>0)<($958>>>0);
                       do {
                        if ($959) {
                         $960 = ((($956)) + 1|0);
                         HEAP32[$955>>2] = $960;
                         $961 = HEAP8[$956>>0]|0;
                         $$0$i206$i$i$i$sink$ph = $961;
                        } else {
                         $962 = ((($954)) + 32|0);
                         $963 = HEAP32[$962>>2]|0;
                         $964 = ($963|0)==(0);
                         if ($964) {
                          $$0$i206$i$i$i$sink$ph = 0;
                          break;
                         }
                         $965 = ((($954)) + 16|0);
                         $966 = HEAP32[$965>>2]|0;
                         $967 = ((($954)) + 28|0);
                         $968 = HEAP32[$967>>2]|0;
                         $969 = ((($954)) + 40|0);
                         $970 = ((($954)) + 36|0);
                         $971 = HEAP32[$970>>2]|0;
                         $972 = (ftCall_iiii($966|0,$968,$969,$971)|0);
                         $973 = ($972|0)==(0);
                         if ($973) {
                          HEAP32[$962>>2] = 0;
                          $974 = ((($954)) + 41|0);
                          HEAP8[$969>>0] = 0;
                          $$pre$phi$i210$i$i$iZ2D = $974;$$sink$i$i211$i$i$i = $974;$2318 = 0;
                         } else {
                          $975 = (((($954)) + 40|0) + ($972)|0);
                          $$pre$i208$i$i$i = HEAP8[$969>>0]|0;
                          $$pre5$i209$i$i$i = ((($954)) + 41|0);
                          $$pre$phi$i210$i$i$iZ2D = $$pre5$i209$i$i$i;$$sink$i$i211$i$i$i = $975;$2318 = $$pre$i208$i$i$i;
                         }
                         HEAP32[$957>>2] = $$sink$i$i211$i$i$i;
                         HEAP32[$955>>2] = $$pre$phi$i210$i$i$iZ2D;
                         $$0$i206$i$i$i$sink$ph = $2318;
                        }
                       } while(0);
                       $$0$i206$i$i$i$sink = $$0$i206$i$i$i$sink$ph;
                       while(1) {
                        switch ($$0$i206$i$i$i$sink<<24>>24) {
                        case 0:  {
                         $1001 = $952;
                         break L495;
                         break;
                        }
                        case -1:  {
                         break;
                        }
                        default: {
                         break L493;
                        }
                        }
                        $976 = HEAP32[$0>>2]|0;
                        $977 = ((($976)) + 168|0);
                        $978 = HEAP32[$977>>2]|0;
                        $979 = ((($976)) + 172|0);
                        $980 = HEAP32[$979>>2]|0;
                        $981 = ($978>>>0)<($980>>>0);
                        do {
                         if ($981) {
                          $982 = ((($978)) + 1|0);
                          HEAP32[$977>>2] = $982;
                          $983 = HEAP8[$978>>0]|0;
                          $$0$i206$i$i$i$sink$be = $983;
                         } else {
                          $984 = ((($976)) + 32|0);
                          $985 = HEAP32[$984>>2]|0;
                          $986 = ($985|0)==(0);
                          if ($986) {
                           $$0$i206$i$i$i$sink$be = 0;
                           break;
                          }
                          $987 = ((($976)) + 16|0);
                          $988 = HEAP32[$987>>2]|0;
                          $989 = ((($976)) + 28|0);
                          $990 = HEAP32[$989>>2]|0;
                          $991 = ((($976)) + 40|0);
                          $992 = ((($976)) + 36|0);
                          $993 = HEAP32[$992>>2]|0;
                          $994 = (ftCall_iiii($988|0,$990,$991,$993)|0);
                          $995 = ($994|0)==(0);
                          if ($995) {
                           HEAP32[$984>>2] = 0;
                           $996 = ((($976)) + 41|0);
                           HEAP8[$991>>0] = 0;
                           $$pre$phi$i203$i$i$iZ2D = $996;$$sink$i$i204$i$i$i = $996;$2319 = 0;
                          } else {
                           $997 = (((($976)) + 40|0) + ($994)|0);
                           $$pre$i201$i$i$i = HEAP8[$991>>0]|0;
                           $$pre5$i202$i$i$i = ((($976)) + 41|0);
                           $$pre$phi$i203$i$i$iZ2D = $$pre5$i202$i$i$i;$$sink$i$i204$i$i$i = $997;$2319 = $$pre$i201$i$i$i;
                          }
                          HEAP32[$979>>2] = $$sink$i$i204$i$i$i;
                          HEAP32[$977>>2] = $$pre$phi$i203$i$i$iZ2D;
                          $$0$i206$i$i$i$sink$be = $2319;
                         }
                        } while(0);
                        $$0$i206$i$i$i$sink = $$0$i206$i$i$i$sink$be;
                       }
                      } else {
                       $1001 = 0;
                      }
                     } while(0);
                     $998 = HEAP32[$77>>2]|0;
                     $999 = (24 - ($998))|0;
                     $1000 = $1001 << $999;
                     $1002 = HEAP32[$78>>2]|0;
                     $1003 = $1000 | $1002;
                     HEAP32[$78>>2] = $1003;
                     $1004 = (($998) + 8)|0;
                     HEAP32[$77>>2] = $1004;
                     $1005 = ($998|0)<(17);
                     if (!($1005)) {
                      $1007 = $1003;$1009 = $1004;
                      break L491;
                     }
                    }
                    HEAP8[$21>>0] = $$0$i206$i$i$i$sink;
                    HEAP32[$79>>2] = 1;
                    $$pre$i195$pre$i$i$i = HEAP32[$77>>2]|0;
                    $$ph$i$i$i = $$pre$i195$pre$i$i$i;
                    label = 336;
                   } else {
                    $$ph$i$i$i = $926;
                    label = 336;
                   }
                  } while(0);
                  if ((label|0) == 336) {
                   label = 0;
                   $$pr$i$i$i = HEAP32[$78>>2]|0;
                   $1007 = $$pr$i$i$i;$1009 = $$ph$i$i$i;
                  }
                  $1006 = $1007 << 1;
                  HEAP32[$78>>2] = $1006;
                  $1008 = (($1009) + -1)|0;
                  HEAP32[$77>>2] = $1008;
                  $1010 = ($1007|0)>(-1);
                  if ($1010) {
                   break;
                  }
                  $1011 = HEAP16[$923>>1]|0;
                  $1012 = $1011 << 16 >> 16;
                  $1013 = $919 & $1012;
                  $1014 = ($1013|0)==(0);
                  if (!($1014)) {
                   break;
                  }
                  $1015 = ($1011<<16>>16)>(0);
                  if ($1015) {
                   $1016 = (($919) + ($1012))|0;
                   $1017 = $1016&65535;
                   HEAP16[$923>>1] = $1017;
                   break;
                  } else {
                   $1018 = (($1012) - ($919))|0;
                   $1019 = $1018&65535;
                   HEAP16[$923>>1] = $1019;
                   break;
                  }
                 }
                } while(0);
                $1020 = (($$5135363$i$i$i) + 1)|0;
                $1021 = HEAP32[$73>>2]|0;
                $1022 = ($$5135363$i$i$i|0)<($1021|0);
                if ($1022) {
                 $$5135363$i$i$i = $1020;
                } else {
                 break L338;
                }
               }
              }
              $sext151$i$i$i = $913 << 16;
              $1023 = $sext151$i$i$i >> 16;
              $1024 = (0 - ($1023))|0;
              $$6136$i$i$i = $586;
              while(1) {
               $1025 = (_stbi__jpeg_huff_decode($0,$593)|0);
               $1026 = ($1025|0)<(0);
               if ($1026) {
                break L4;
               }
               $1027 = $1025 & 15;
               $1028 = $1025 >>> 4;
               $trunc$i321$i$i = $1025&255;
               $trunc$i321$i$i$clear = $trunc$i321$i$i & 15;
               L543: do {
                switch ($trunc$i321$i$i$clear<<24>>24) {
                case 0:  {
                 $1029 = ($1025|0)<(240);
                 if (!($1029)) {
                  $$0140$i$i$i = 0;$$0141$i$i$i = $1028;
                  break L543;
                 }
                 $1030 = 1 << $1028;
                 $1031 = (($1030) + -1)|0;
                 HEAP32[$85>>2] = $1031;
                 $1032 = ($1028|0)==(0);
                 if ($1032) {
                  $$0140$i$i$i = 0;$$0141$i$i$i = 64;
                  break L543;
                 }
                 $1033 = HEAP32[$77>>2]|0;
                 $1034 = ($1033|0)<($1028|0);
                 if ($1034) {
                  L549: while(1) {
                   $1035 = HEAP32[$79>>2]|0;
                   $1036 = ($1035|0)==(0);
                   L551: do {
                    if ($1036) {
                     $1037 = HEAP32[$0>>2]|0;
                     $1038 = ((($1037)) + 168|0);
                     $1039 = HEAP32[$1038>>2]|0;
                     $1040 = ((($1037)) + 172|0);
                     $1041 = HEAP32[$1040>>2]|0;
                     $1042 = ($1039>>>0)<($1041>>>0);
                     if ($1042) {
                      $1043 = ((($1039)) + 1|0);
                      HEAP32[$1038>>2] = $1043;
                      $1044 = HEAP8[$1039>>0]|0;
                      $$0$i309$i$i$i = $1044;
                     } else {
                      $1045 = ((($1037)) + 32|0);
                      $1046 = HEAP32[$1045>>2]|0;
                      $1047 = ($1046|0)==(0);
                      if ($1047) {
                       $1108 = 0;
                       break;
                      }
                      $1048 = ((($1037)) + 16|0);
                      $1049 = HEAP32[$1048>>2]|0;
                      $1050 = ((($1037)) + 28|0);
                      $1051 = HEAP32[$1050>>2]|0;
                      $1052 = ((($1037)) + 40|0);
                      $1053 = ((($1037)) + 36|0);
                      $1054 = HEAP32[$1053>>2]|0;
                      $1055 = (ftCall_iiii($1049|0,$1051,$1052,$1054)|0);
                      $1056 = ($1055|0)==(0);
                      if ($1056) {
                       HEAP32[$1045>>2] = 0;
                       $1057 = ((($1037)) + 41|0);
                       HEAP8[$1052>>0] = 0;
                       $$pre$phi$i306$i$i$iZ2D = $1057;$$sink$i$i307$i$i$i = $1057;$2320 = 0;
                      } else {
                       $1058 = (((($1037)) + 40|0) + ($1055)|0);
                       $$pre$i304$i$i$i = HEAP8[$1052>>0]|0;
                       $$pre5$i305$i$i$i = ((($1037)) + 41|0);
                       $$pre$phi$i306$i$i$iZ2D = $$pre5$i305$i$i$i;$$sink$i$i307$i$i$i = $1058;$2320 = $$pre$i304$i$i$i;
                      }
                      HEAP32[$1040>>2] = $$sink$i$i307$i$i$i;
                      HEAP32[$1038>>2] = $$pre$phi$i306$i$i$iZ2D;
                      $$0$i309$i$i$i = $2320;
                     }
                     $1059 = $$0$i309$i$i$i&255;
                     $1060 = ($$0$i309$i$i$i<<24>>24)==(-1);
                     if (!($1060)) {
                      $1108 = $1059;
                      break;
                     }
                     $1061 = HEAP32[$0>>2]|0;
                     $1062 = ((($1061)) + 168|0);
                     $1063 = HEAP32[$1062>>2]|0;
                     $1064 = ((($1061)) + 172|0);
                     $1065 = HEAP32[$1064>>2]|0;
                     $1066 = ($1063>>>0)<($1065>>>0);
                     do {
                      if ($1066) {
                       $1067 = ((($1063)) + 1|0);
                       HEAP32[$1062>>2] = $1067;
                       $1068 = HEAP8[$1063>>0]|0;
                       $$0$i226$i$i$i$sink$ph = $1068;
                      } else {
                       $1069 = ((($1061)) + 32|0);
                       $1070 = HEAP32[$1069>>2]|0;
                       $1071 = ($1070|0)==(0);
                       if ($1071) {
                        $$0$i226$i$i$i$sink$ph = 0;
                        break;
                       }
                       $1072 = ((($1061)) + 16|0);
                       $1073 = HEAP32[$1072>>2]|0;
                       $1074 = ((($1061)) + 28|0);
                       $1075 = HEAP32[$1074>>2]|0;
                       $1076 = ((($1061)) + 40|0);
                       $1077 = ((($1061)) + 36|0);
                       $1078 = HEAP32[$1077>>2]|0;
                       $1079 = (ftCall_iiii($1073|0,$1075,$1076,$1078)|0);
                       $1080 = ($1079|0)==(0);
                       if ($1080) {
                        HEAP32[$1069>>2] = 0;
                        $1081 = ((($1061)) + 41|0);
                        HEAP8[$1076>>0] = 0;
                        $$pre$phi$i230$i$i$iZ2D = $1081;$$sink$i$i231$i$i$i = $1081;$2321 = 0;
                       } else {
                        $1082 = (((($1061)) + 40|0) + ($1079)|0);
                        $$pre$i228$i$i$i = HEAP8[$1076>>0]|0;
                        $$pre5$i229$i$i$i = ((($1061)) + 41|0);
                        $$pre$phi$i230$i$i$iZ2D = $$pre5$i229$i$i$i;$$sink$i$i231$i$i$i = $1082;$2321 = $$pre$i228$i$i$i;
                       }
                       HEAP32[$1064>>2] = $$sink$i$i231$i$i$i;
                       HEAP32[$1062>>2] = $$pre$phi$i230$i$i$iZ2D;
                       $$0$i226$i$i$i$sink$ph = $2321;
                      }
                     } while(0);
                     $$0$i226$i$i$i$sink = $$0$i226$i$i$i$sink$ph;
                     while(1) {
                      switch ($$0$i226$i$i$i$sink<<24>>24) {
                      case 0:  {
                       $1108 = $1059;
                       break L551;
                       break;
                      }
                      case -1:  {
                       break;
                      }
                      default: {
                       label = 376;
                       break L549;
                      }
                      }
                      $1083 = HEAP32[$0>>2]|0;
                      $1084 = ((($1083)) + 168|0);
                      $1085 = HEAP32[$1084>>2]|0;
                      $1086 = ((($1083)) + 172|0);
                      $1087 = HEAP32[$1086>>2]|0;
                      $1088 = ($1085>>>0)<($1087>>>0);
                      do {
                       if ($1088) {
                        $1089 = ((($1085)) + 1|0);
                        HEAP32[$1084>>2] = $1089;
                        $1090 = HEAP8[$1085>>0]|0;
                        $$0$i226$i$i$i$sink$be = $1090;
                       } else {
                        $1091 = ((($1083)) + 32|0);
                        $1092 = HEAP32[$1091>>2]|0;
                        $1093 = ($1092|0)==(0);
                        if ($1093) {
                         $$0$i226$i$i$i$sink$be = 0;
                         break;
                        }
                        $1094 = ((($1083)) + 16|0);
                        $1095 = HEAP32[$1094>>2]|0;
                        $1096 = ((($1083)) + 28|0);
                        $1097 = HEAP32[$1096>>2]|0;
                        $1098 = ((($1083)) + 40|0);
                        $1099 = ((($1083)) + 36|0);
                        $1100 = HEAP32[$1099>>2]|0;
                        $1101 = (ftCall_iiii($1095|0,$1097,$1098,$1100)|0);
                        $1102 = ($1101|0)==(0);
                        if ($1102) {
                         HEAP32[$1091>>2] = 0;
                         $1103 = ((($1083)) + 41|0);
                         HEAP8[$1098>>0] = 0;
                         $$pre$phi$i223$i$i$iZ2D = $1103;$$sink$i$i224$i$i$i = $1103;$2322 = 0;
                        } else {
                         $1104 = (((($1083)) + 40|0) + ($1101)|0);
                         $$pre$i221$i$i$i = HEAP8[$1098>>0]|0;
                         $$pre5$i222$i$i$i = ((($1083)) + 41|0);
                         $$pre$phi$i223$i$i$iZ2D = $$pre5$i222$i$i$i;$$sink$i$i224$i$i$i = $1104;$2322 = $$pre$i221$i$i$i;
                        }
                        HEAP32[$1086>>2] = $$sink$i$i224$i$i$i;
                        HEAP32[$1084>>2] = $$pre$phi$i223$i$i$iZ2D;
                        $$0$i226$i$i$i$sink$be = $2322;
                       }
                      } while(0);
                      $$0$i226$i$i$i$sink = $$0$i226$i$i$i$sink$be;
                     }
                    } else {
                     $1108 = 0;
                    }
                   } while(0);
                   $1105 = HEAP32[$77>>2]|0;
                   $1106 = (24 - ($1105))|0;
                   $1107 = $1108 << $1106;
                   $1109 = HEAP32[$78>>2]|0;
                   $1110 = $1107 | $1109;
                   HEAP32[$78>>2] = $1110;
                   $1111 = (($1105) + 8)|0;
                   HEAP32[$77>>2] = $1111;
                   $1112 = ($1105|0)<(17);
                   if (!($1112)) {
                    $$pre$i215$i$i$i = $1111;
                    break;
                   }
                  }
                  if ((label|0) == 376) {
                   label = 0;
                   HEAP8[$21>>0] = $$0$i226$i$i$i$sink;
                   HEAP32[$79>>2] = 1;
                   $$pre$i215$pre$i$i$i = HEAP32[$77>>2]|0;
                   $$pre$i215$i$i$i = $$pre$i215$pre$i$i$i;
                  }
                  $$pre$i322$i$i = HEAP32[$85>>2]|0;
                  $1124 = $$pre$i215$i$i$i;$1126 = $$pre$i322$i$i;
                 } else {
                  $1124 = $1033;$1126 = $1031;
                 }
                 $1113 = HEAP32[$78>>2]|0;
                 $1114 = $1113 << $1028;
                 $1115 = (32 - ($1028))|0;
                 $1116 = $1113 >>> $1115;
                 $1117 = $1114 | $1116;
                 $1118 = (114720 + ($1028<<2)|0);
                 $1119 = HEAP32[$1118>>2]|0;
                 $1120 = $1119 ^ -1;
                 $1121 = $1117 & $1120;
                 HEAP32[$78>>2] = $1121;
                 $1122 = $1117 & $1119;
                 $1123 = (($1124) - ($1028))|0;
                 HEAP32[$77>>2] = $1123;
                 $1125 = (($1122) + ($1126))|0;
                 HEAP32[$85>>2] = $1125;
                 $$0140$i$i$i = $1027;$$0141$i$i$i = 64;
                 break;
                }
                case 1:  {
                 $1127 = HEAP32[$77>>2]|0;
                 $1128 = ($1127|0)<(1);
                 L590: do {
                  if ($1128) {
                   L592: while(1) {
                    $1129 = HEAP32[$79>>2]|0;
                    $1130 = ($1129|0)==(0);
                    L594: do {
                     if ($1130) {
                      $1131 = HEAP32[$0>>2]|0;
                      $1132 = ((($1131)) + 168|0);
                      $1133 = HEAP32[$1132>>2]|0;
                      $1134 = ((($1131)) + 172|0);
                      $1135 = HEAP32[$1134>>2]|0;
                      $1136 = ($1133>>>0)<($1135>>>0);
                      if ($1136) {
                       $1137 = ((($1133)) + 1|0);
                       HEAP32[$1132>>2] = $1137;
                       $1138 = HEAP8[$1133>>0]|0;
                       $$0$i316$i$i$i = $1138;
                      } else {
                       $1139 = ((($1131)) + 32|0);
                       $1140 = HEAP32[$1139>>2]|0;
                       $1141 = ($1140|0)==(0);
                       if ($1141) {
                        $1202 = 0;
                        break;
                       }
                       $1142 = ((($1131)) + 16|0);
                       $1143 = HEAP32[$1142>>2]|0;
                       $1144 = ((($1131)) + 28|0);
                       $1145 = HEAP32[$1144>>2]|0;
                       $1146 = ((($1131)) + 40|0);
                       $1147 = ((($1131)) + 36|0);
                       $1148 = HEAP32[$1147>>2]|0;
                       $1149 = (ftCall_iiii($1143|0,$1145,$1146,$1148)|0);
                       $1150 = ($1149|0)==(0);
                       if ($1150) {
                        HEAP32[$1139>>2] = 0;
                        $1151 = ((($1131)) + 41|0);
                        HEAP8[$1146>>0] = 0;
                        $$pre$phi$i313$i$i$iZ2D = $1151;$$sink$i$i314$i$i$i = $1151;$2323 = 0;
                       } else {
                        $1152 = (((($1131)) + 40|0) + ($1149)|0);
                        $$pre$i311$i$i$i = HEAP8[$1146>>0]|0;
                        $$pre5$i312$i$i$i = ((($1131)) + 41|0);
                        $$pre$phi$i313$i$i$iZ2D = $$pre5$i312$i$i$i;$$sink$i$i314$i$i$i = $1152;$2323 = $$pre$i311$i$i$i;
                       }
                       HEAP32[$1134>>2] = $$sink$i$i314$i$i$i;
                       HEAP32[$1132>>2] = $$pre$phi$i313$i$i$iZ2D;
                       $$0$i316$i$i$i = $2323;
                      }
                      $1153 = $$0$i316$i$i$i&255;
                      $1154 = ($$0$i316$i$i$i<<24>>24)==(-1);
                      if (!($1154)) {
                       $1202 = $1153;
                       break;
                      }
                      $1155 = HEAP32[$0>>2]|0;
                      $1156 = ((($1155)) + 168|0);
                      $1157 = HEAP32[$1156>>2]|0;
                      $1158 = ((($1155)) + 172|0);
                      $1159 = HEAP32[$1158>>2]|0;
                      $1160 = ($1157>>>0)<($1159>>>0);
                      do {
                       if ($1160) {
                        $1161 = ((($1157)) + 1|0);
                        HEAP32[$1156>>2] = $1161;
                        $1162 = HEAP8[$1157>>0]|0;
                        $$0$i246$i$i$i$sink$ph = $1162;
                       } else {
                        $1163 = ((($1155)) + 32|0);
                        $1164 = HEAP32[$1163>>2]|0;
                        $1165 = ($1164|0)==(0);
                        if ($1165) {
                         $$0$i246$i$i$i$sink$ph = 0;
                         break;
                        }
                        $1166 = ((($1155)) + 16|0);
                        $1167 = HEAP32[$1166>>2]|0;
                        $1168 = ((($1155)) + 28|0);
                        $1169 = HEAP32[$1168>>2]|0;
                        $1170 = ((($1155)) + 40|0);
                        $1171 = ((($1155)) + 36|0);
                        $1172 = HEAP32[$1171>>2]|0;
                        $1173 = (ftCall_iiii($1167|0,$1169,$1170,$1172)|0);
                        $1174 = ($1173|0)==(0);
                        if ($1174) {
                         HEAP32[$1163>>2] = 0;
                         $1175 = ((($1155)) + 41|0);
                         HEAP8[$1170>>0] = 0;
                         $$pre$phi$i320$i$i$iZ2D = $1175;$$sink$i$i321$i$i$i = $1175;$2324 = 0;
                        } else {
                         $1176 = (((($1155)) + 40|0) + ($1173)|0);
                         $$pre$i318$i$i$i = HEAP8[$1170>>0]|0;
                         $$pre5$i319$i$i$i = ((($1155)) + 41|0);
                         $$pre$phi$i320$i$i$iZ2D = $$pre5$i319$i$i$i;$$sink$i$i321$i$i$i = $1176;$2324 = $$pre$i318$i$i$i;
                        }
                        HEAP32[$1158>>2] = $$sink$i$i321$i$i$i;
                        HEAP32[$1156>>2] = $$pre$phi$i320$i$i$iZ2D;
                        $$0$i246$i$i$i$sink$ph = $2324;
                       }
                      } while(0);
                      $$0$i246$i$i$i$sink = $$0$i246$i$i$i$sink$ph;
                      while(1) {
                       switch ($$0$i246$i$i$i$sink<<24>>24) {
                       case 0:  {
                        $1202 = $1153;
                        break L594;
                        break;
                       }
                       case -1:  {
                        break;
                       }
                       default: {
                        break L592;
                       }
                       }
                       $1177 = HEAP32[$0>>2]|0;
                       $1178 = ((($1177)) + 168|0);
                       $1179 = HEAP32[$1178>>2]|0;
                       $1180 = ((($1177)) + 172|0);
                       $1181 = HEAP32[$1180>>2]|0;
                       $1182 = ($1179>>>0)<($1181>>>0);
                       do {
                        if ($1182) {
                         $1183 = ((($1179)) + 1|0);
                         HEAP32[$1178>>2] = $1183;
                         $1184 = HEAP8[$1179>>0]|0;
                         $$0$i246$i$i$i$sink$be = $1184;
                        } else {
                         $1185 = ((($1177)) + 32|0);
                         $1186 = HEAP32[$1185>>2]|0;
                         $1187 = ($1186|0)==(0);
                         if ($1187) {
                          $$0$i246$i$i$i$sink$be = 0;
                          break;
                         }
                         $1188 = ((($1177)) + 16|0);
                         $1189 = HEAP32[$1188>>2]|0;
                         $1190 = ((($1177)) + 28|0);
                         $1191 = HEAP32[$1190>>2]|0;
                         $1192 = ((($1177)) + 40|0);
                         $1193 = ((($1177)) + 36|0);
                         $1194 = HEAP32[$1193>>2]|0;
                         $1195 = (ftCall_iiii($1189|0,$1191,$1192,$1194)|0);
                         $1196 = ($1195|0)==(0);
                         if ($1196) {
                          HEAP32[$1185>>2] = 0;
                          $1197 = ((($1177)) + 41|0);
                          HEAP8[$1192>>0] = 0;
                          $$pre$phi$i243$i$i$iZ2D = $1197;$$sink$i$i244$i$i$i = $1197;$2325 = 0;
                         } else {
                          $1198 = (((($1177)) + 40|0) + ($1195)|0);
                          $$pre$i241$i$i$i = HEAP8[$1192>>0]|0;
                          $$pre5$i242$i$i$i = ((($1177)) + 41|0);
                          $$pre$phi$i243$i$i$iZ2D = $$pre5$i242$i$i$i;$$sink$i$i244$i$i$i = $1198;$2325 = $$pre$i241$i$i$i;
                         }
                         HEAP32[$1180>>2] = $$sink$i$i244$i$i$i;
                         HEAP32[$1178>>2] = $$pre$phi$i243$i$i$iZ2D;
                         $$0$i246$i$i$i$sink$be = $2325;
                        }
                       } while(0);
                       $$0$i246$i$i$i$sink = $$0$i246$i$i$i$sink$be;
                      }
                     } else {
                      $1202 = 0;
                     }
                    } while(0);
                    $1199 = HEAP32[$77>>2]|0;
                    $1200 = (24 - ($1199))|0;
                    $1201 = $1202 << $1200;
                    $1203 = HEAP32[$78>>2]|0;
                    $1204 = $1201 | $1203;
                    HEAP32[$78>>2] = $1204;
                    $1205 = (($1199) + 8)|0;
                    HEAP32[$77>>2] = $1205;
                    $1206 = ($1199|0)<(17);
                    if (!($1206)) {
                     $1210 = $1205;
                     break L590;
                    }
                   }
                   HEAP8[$21>>0] = $$0$i246$i$i$i$sink;
                   HEAP32[$79>>2] = 1;
                   $$pre$i235$pre$i$i$i = HEAP32[$77>>2]|0;
                   $1210 = $$pre$i235$pre$i$i$i;
                  } else {
                   $1210 = $1127;
                  }
                 } while(0);
                 $1207 = HEAP32[$78>>2]|0;
                 $1208 = $1207 << 1;
                 HEAP32[$78>>2] = $1208;
                 $1209 = (($1210) + -1)|0;
                 HEAP32[$77>>2] = $1209;
                 $1211 = ($1207|0)>(-1);
                 $spec$select$i323$i$i = $1211 ? $1024 : $1023;
                 $$0140$i$i$i = $spec$select$i323$i$i;$$0141$i$i$i = $1028;
                 break;
                }
                default: {
                 break L4;
                }
                }
               } while(0);
               $1212 = HEAP32[$73>>2]|0;
               $1213 = ($$6136$i$i$i|0)>($1212|0);
               L631: do {
                if ($1213) {
                 $$9139$ph$i$i$i = $$6136$i$i$i;$1321 = $1212;
                } else {
                 $$1142361$i$i$i = $$0141$i$i$i;$$7137362$i$i$i = $$6136$i$i$i;$2326 = $1212;
                 L633: while(1) {
                  $1214 = (($$7137362$i$i$i) + 1)|0;
                  $1215 = (114640 + ($$7137362$i$i$i)|0);
                  $1216 = HEAP8[$1215>>0]|0;
                  $1217 = $1216&255;
                  $1218 = (($585) + ($1217<<1)|0);
                  $1219 = HEAP16[$1218>>1]|0;
                  $1220 = ($1219<<16>>16)==(0);
                  do {
                   if ($1220) {
                    $1315 = ($$1142361$i$i$i|0)==(0);
                    if ($1315) {
                     break L633;
                    }
                    $1316 = (($$1142361$i$i$i) + -1)|0;
                    $$3144$ph$i$i$i = $1316;
                   } else {
                    $1221 = HEAP32[$77>>2]|0;
                    $1222 = ($1221|0)<(1);
                    L639: do {
                     if ($1222) {
                      L641: while(1) {
                       $1223 = HEAP32[$79>>2]|0;
                       $1224 = ($1223|0)==(0);
                       L643: do {
                        if ($1224) {
                         $1225 = HEAP32[$0>>2]|0;
                         $1226 = ((($1225)) + 168|0);
                         $1227 = HEAP32[$1226>>2]|0;
                         $1228 = ((($1225)) + 172|0);
                         $1229 = HEAP32[$1228>>2]|0;
                         $1230 = ($1227>>>0)<($1229>>>0);
                         if ($1230) {
                          $1231 = ((($1227)) + 1|0);
                          HEAP32[$1226>>2] = $1231;
                          $1232 = HEAP8[$1227>>0]|0;
                          $$0$i253$i$i$i = $1232;
                         } else {
                          $1233 = ((($1225)) + 32|0);
                          $1234 = HEAP32[$1233>>2]|0;
                          $1235 = ($1234|0)==(0);
                          if ($1235) {
                           $1296 = 0;
                           break;
                          }
                          $1236 = ((($1225)) + 16|0);
                          $1237 = HEAP32[$1236>>2]|0;
                          $1238 = ((($1225)) + 28|0);
                          $1239 = HEAP32[$1238>>2]|0;
                          $1240 = ((($1225)) + 40|0);
                          $1241 = ((($1225)) + 36|0);
                          $1242 = HEAP32[$1241>>2]|0;
                          $1243 = (ftCall_iiii($1237|0,$1239,$1240,$1242)|0);
                          $1244 = ($1243|0)==(0);
                          if ($1244) {
                           HEAP32[$1233>>2] = 0;
                           $1245 = ((($1225)) + 41|0);
                           HEAP8[$1240>>0] = 0;
                           $$pre$phi$i250$i$i$iZ2D = $1245;$$sink$i$i251$i$i$i = $1245;$2327 = 0;
                          } else {
                           $1246 = (((($1225)) + 40|0) + ($1243)|0);
                           $$pre$i248$i$i$i = HEAP8[$1240>>0]|0;
                           $$pre5$i249$i$i$i = ((($1225)) + 41|0);
                           $$pre$phi$i250$i$i$iZ2D = $$pre5$i249$i$i$i;$$sink$i$i251$i$i$i = $1246;$2327 = $$pre$i248$i$i$i;
                          }
                          HEAP32[$1228>>2] = $$sink$i$i251$i$i$i;
                          HEAP32[$1226>>2] = $$pre$phi$i250$i$i$iZ2D;
                          $$0$i253$i$i$i = $2327;
                         }
                         $1247 = $$0$i253$i$i$i&255;
                         $1248 = ($$0$i253$i$i$i<<24>>24)==(-1);
                         if (!($1248)) {
                          $1296 = $1247;
                          break;
                         }
                         $1249 = HEAP32[$0>>2]|0;
                         $1250 = ((($1249)) + 168|0);
                         $1251 = HEAP32[$1250>>2]|0;
                         $1252 = ((($1249)) + 172|0);
                         $1253 = HEAP32[$1252>>2]|0;
                         $1254 = ($1251>>>0)<($1253>>>0);
                         do {
                          if ($1254) {
                           $1255 = ((($1251)) + 1|0);
                           HEAP32[$1250>>2] = $1255;
                           $1256 = HEAP8[$1251>>0]|0;
                           $$0$i$i$i59$i$sink$ph = $1256;
                          } else {
                           $1257 = ((($1249)) + 32|0);
                           $1258 = HEAP32[$1257>>2]|0;
                           $1259 = ($1258|0)==(0);
                           if ($1259) {
                            $$0$i$i$i59$i$sink$ph = 0;
                            break;
                           }
                           $1260 = ((($1249)) + 16|0);
                           $1261 = HEAP32[$1260>>2]|0;
                           $1262 = ((($1249)) + 28|0);
                           $1263 = HEAP32[$1262>>2]|0;
                           $1264 = ((($1249)) + 40|0);
                           $1265 = ((($1249)) + 36|0);
                           $1266 = HEAP32[$1265>>2]|0;
                           $1267 = (ftCall_iiii($1261|0,$1263,$1264,$1266)|0);
                           $1268 = ($1267|0)==(0);
                           if ($1268) {
                            HEAP32[$1257>>2] = 0;
                            $1269 = ((($1249)) + 41|0);
                            HEAP8[$1264>>0] = 0;
                            $$pre$phi$i257$i$i$iZ2D = $1269;$$sink$i$i258$i$i$i = $1269;$2328 = 0;
                           } else {
                            $1270 = (((($1249)) + 40|0) + ($1267)|0);
                            $$pre$i255$i$i$i = HEAP8[$1264>>0]|0;
                            $$pre5$i256$i$i$i = ((($1249)) + 41|0);
                            $$pre$phi$i257$i$i$iZ2D = $$pre5$i256$i$i$i;$$sink$i$i258$i$i$i = $1270;$2328 = $$pre$i255$i$i$i;
                           }
                           HEAP32[$1252>>2] = $$sink$i$i258$i$i$i;
                           HEAP32[$1250>>2] = $$pre$phi$i257$i$i$iZ2D;
                           $$0$i$i$i59$i$sink$ph = $2328;
                          }
                         } while(0);
                         $$0$i$i$i59$i$sink = $$0$i$i$i59$i$sink$ph;
                         while(1) {
                          switch ($$0$i$i$i59$i$sink<<24>>24) {
                          case 0:  {
                           $1296 = $1247;
                           break L643;
                           break;
                          }
                          case -1:  {
                           break;
                          }
                          default: {
                           break L641;
                          }
                          }
                          $1271 = HEAP32[$0>>2]|0;
                          $1272 = ((($1271)) + 168|0);
                          $1273 = HEAP32[$1272>>2]|0;
                          $1274 = ((($1271)) + 172|0);
                          $1275 = HEAP32[$1274>>2]|0;
                          $1276 = ($1273>>>0)<($1275>>>0);
                          do {
                           if ($1276) {
                            $1277 = ((($1273)) + 1|0);
                            HEAP32[$1272>>2] = $1277;
                            $1278 = HEAP8[$1273>>0]|0;
                            $$0$i$i$i59$i$sink$be = $1278;
                           } else {
                            $1279 = ((($1271)) + 32|0);
                            $1280 = HEAP32[$1279>>2]|0;
                            $1281 = ($1280|0)==(0);
                            if ($1281) {
                             $$0$i$i$i59$i$sink$be = 0;
                             break;
                            }
                            $1282 = ((($1271)) + 16|0);
                            $1283 = HEAP32[$1282>>2]|0;
                            $1284 = ((($1271)) + 28|0);
                            $1285 = HEAP32[$1284>>2]|0;
                            $1286 = ((($1271)) + 40|0);
                            $1287 = ((($1271)) + 36|0);
                            $1288 = HEAP32[$1287>>2]|0;
                            $1289 = (ftCall_iiii($1283|0,$1285,$1286,$1288)|0);
                            $1290 = ($1289|0)==(0);
                            if ($1290) {
                             HEAP32[$1279>>2] = 0;
                             $1291 = ((($1271)) + 41|0);
                             HEAP8[$1286>>0] = 0;
                             $$pre$phi$i$i$i56$iZ2D = $1291;$$sink$i$i$i$i57$i = $1291;$2329 = 0;
                            } else {
                             $1292 = (((($1271)) + 40|0) + ($1289)|0);
                             $$pre$i153$i$i$i = HEAP8[$1286>>0]|0;
                             $$pre5$i$i$i55$i = ((($1271)) + 41|0);
                             $$pre$phi$i$i$i56$iZ2D = $$pre5$i$i$i55$i;$$sink$i$i$i$i57$i = $1292;$2329 = $$pre$i153$i$i$i;
                            }
                            HEAP32[$1274>>2] = $$sink$i$i$i$i57$i;
                            HEAP32[$1272>>2] = $$pre$phi$i$i$i56$iZ2D;
                            $$0$i$i$i59$i$sink$be = $2329;
                           }
                          } while(0);
                          $$0$i$i$i59$i$sink = $$0$i$i$i59$i$sink$be;
                         }
                        } else {
                         $1296 = 0;
                        }
                       } while(0);
                       $1293 = HEAP32[$77>>2]|0;
                       $1294 = (24 - ($1293))|0;
                       $1295 = $1296 << $1294;
                       $1297 = HEAP32[$78>>2]|0;
                       $1298 = $1295 | $1297;
                       HEAP32[$78>>2] = $1298;
                       $1299 = (($1293) + 8)|0;
                       HEAP32[$77>>2] = $1299;
                       $1300 = ($1293|0)<(17);
                       if (!($1300)) {
                        $1302 = $1298;$1304 = $1299;
                        break L639;
                       }
                      }
                      HEAP8[$21>>0] = $$0$i$i$i59$i$sink;
                      HEAP32[$79>>2] = 1;
                      $$pre$i$pre$i$i$i = HEAP32[$77>>2]|0;
                      $$ph385$i$i$i = $$pre$i$pre$i$i$i;
                      label = 444;
                     } else {
                      $$ph385$i$i$i = $1221;
                      label = 444;
                     }
                    } while(0);
                    if ((label|0) == 444) {
                     label = 0;
                     $$pr386$i$i$i = HEAP32[$78>>2]|0;
                     $1302 = $$pr386$i$i$i;$1304 = $$ph385$i$i$i;
                    }
                    $1301 = $1302 << 1;
                    HEAP32[$78>>2] = $1301;
                    $1303 = (($1304) + -1)|0;
                    HEAP32[$77>>2] = $1303;
                    $1305 = ($1302|0)>(-1);
                    if ($1305) {
                     $$3144$ph$i$i$i = $$1142361$i$i$i;
                     break;
                    }
                    $1306 = HEAP16[$1218>>1]|0;
                    $1307 = $1306 << 16 >> 16;
                    $1308 = $1023 & $1307;
                    $1309 = ($1308|0)==(0);
                    if (!($1309)) {
                     $$3144$ph$i$i$i = $$1142361$i$i$i;
                     break;
                    }
                    $1310 = ($1306<<16>>16)>(0);
                    if ($1310) {
                     $1311 = (($1023) + ($1307))|0;
                     $1312 = $1311&65535;
                     HEAP16[$1218>>1] = $1312;
                     $$3144$ph$i$i$i = $$1142361$i$i$i;
                     break;
                    } else {
                     $1313 = (($1307) - ($1023))|0;
                     $1314 = $1313&65535;
                     HEAP16[$1218>>1] = $1314;
                     $$3144$ph$i$i$i = $$1142361$i$i$i;
                     break;
                    }
                   }
                  } while(0);
                  $1318 = HEAP32[$73>>2]|0;
                  $1319 = ($$7137362$i$i$i|0)<($1318|0);
                  if ($1319) {
                   $$1142361$i$i$i = $$3144$ph$i$i$i;$$7137362$i$i$i = $1214;$2326 = $1318;
                  } else {
                   $$9139$ph$i$i$i = $1214;$1321 = $1318;
                   break L631;
                  }
                 }
                 $1317 = $$0140$i$i$i&65535;
                 HEAP16[$1218>>1] = $1317;
                 $$9139$ph$i$i$i = $1214;$1321 = $2326;
                }
               } while(0);
               $1320 = ($$9139$ph$i$i$i|0)>($1321|0);
               if ($1320) {
                break L338;
               } else {
                $$6136$i$i$i = $$9139$ph$i$i$i;
               }
              }
             }
            } while(0);
            $1322 = HEAP32[$84>>2]|0;
            $1323 = (($1322) + -1)|0;
            HEAP32[$84>>2] = $1323;
            $1324 = ($1322|0)<(2);
            if ($1324) {
             $1325 = HEAP32[$77>>2]|0;
             $1326 = ($1325|0)<(24);
             L692: do {
              if ($1326) {
               L694: while(1) {
                $1327 = HEAP32[$79>>2]|0;
                $1328 = ($1327|0)==(0);
                L696: do {
                 if ($1328) {
                  $1329 = HEAP32[$0>>2]|0;
                  $1330 = ((($1329)) + 168|0);
                  $1331 = HEAP32[$1330>>2]|0;
                  $1332 = ((($1329)) + 172|0);
                  $1333 = HEAP32[$1332>>2]|0;
                  $1334 = ($1331>>>0)<($1333>>>0);
                  if ($1334) {
                   $1335 = ((($1331)) + 1|0);
                   HEAP32[$1330>>2] = $1335;
                   $1336 = HEAP8[$1331>>0]|0;
                   $$0$i377$i$i = $1336;
                  } else {
                   $1337 = ((($1329)) + 32|0);
                   $1338 = HEAP32[$1337>>2]|0;
                   $1339 = ($1338|0)==(0);
                   if ($1339) {
                    $1400 = 0;
                    break;
                   }
                   $1340 = ((($1329)) + 16|0);
                   $1341 = HEAP32[$1340>>2]|0;
                   $1342 = ((($1329)) + 28|0);
                   $1343 = HEAP32[$1342>>2]|0;
                   $1344 = ((($1329)) + 40|0);
                   $1345 = ((($1329)) + 36|0);
                   $1346 = HEAP32[$1345>>2]|0;
                   $1347 = (ftCall_iiii($1341|0,$1343,$1344,$1346)|0);
                   $1348 = ($1347|0)==(0);
                   if ($1348) {
                    HEAP32[$1337>>2] = 0;
                    $1349 = ((($1329)) + 41|0);
                    HEAP8[$1344>>0] = 0;
                    $$pre$phi$i374$i$iZ2D = $1349;$$sink$i$i375$i$i = $1349;$2330 = 0;
                   } else {
                    $1350 = (((($1329)) + 40|0) + ($1347)|0);
                    $$pre$i372$i$i = HEAP8[$1344>>0]|0;
                    $$pre5$i373$i$i = ((($1329)) + 41|0);
                    $$pre$phi$i374$i$iZ2D = $$pre5$i373$i$i;$$sink$i$i375$i$i = $1350;$2330 = $$pre$i372$i$i;
                   }
                   HEAP32[$1332>>2] = $$sink$i$i375$i$i;
                   HEAP32[$1330>>2] = $$pre$phi$i374$i$iZ2D;
                   $$0$i377$i$i = $2330;
                  }
                  $1351 = $$0$i377$i$i&255;
                  $1352 = ($$0$i377$i$i<<24>>24)==(-1);
                  if (!($1352)) {
                   $1400 = $1351;
                   break;
                  }
                  $1353 = HEAP32[$0>>2]|0;
                  $1354 = ((($1353)) + 168|0);
                  $1355 = HEAP32[$1354>>2]|0;
                  $1356 = ((($1353)) + 172|0);
                  $1357 = HEAP32[$1356>>2]|0;
                  $1358 = ($1355>>>0)<($1357>>>0);
                  do {
                   if ($1358) {
                    $1359 = ((($1355)) + 1|0);
                    HEAP32[$1354>>2] = $1359;
                    $1360 = HEAP8[$1355>>0]|0;
                    $$0$i334$i$i$sink$ph = $1360;
                   } else {
                    $1361 = ((($1353)) + 32|0);
                    $1362 = HEAP32[$1361>>2]|0;
                    $1363 = ($1362|0)==(0);
                    if ($1363) {
                     $$0$i334$i$i$sink$ph = 0;
                     break;
                    }
                    $1364 = ((($1353)) + 16|0);
                    $1365 = HEAP32[$1364>>2]|0;
                    $1366 = ((($1353)) + 28|0);
                    $1367 = HEAP32[$1366>>2]|0;
                    $1368 = ((($1353)) + 40|0);
                    $1369 = ((($1353)) + 36|0);
                    $1370 = HEAP32[$1369>>2]|0;
                    $1371 = (ftCall_iiii($1365|0,$1367,$1368,$1370)|0);
                    $1372 = ($1371|0)==(0);
                    if ($1372) {
                     HEAP32[$1361>>2] = 0;
                     $1373 = ((($1353)) + 41|0);
                     HEAP8[$1368>>0] = 0;
                     $$pre$phi$i339$i$iZ2D = $1373;$$sink$i$i340$i$i = $1373;$2331 = 0;
                    } else {
                     $1374 = (((($1353)) + 40|0) + ($1371)|0);
                     $$pre$i337$i$i = HEAP8[$1368>>0]|0;
                     $$pre5$i338$i$i = ((($1353)) + 41|0);
                     $$pre$phi$i339$i$iZ2D = $$pre5$i338$i$i;$$sink$i$i340$i$i = $1374;$2331 = $$pre$i337$i$i;
                    }
                    HEAP32[$1356>>2] = $$sink$i$i340$i$i;
                    HEAP32[$1354>>2] = $$pre$phi$i339$i$iZ2D;
                    $$0$i334$i$i$sink$ph = $2331;
                   }
                  } while(0);
                  $$0$i334$i$i$sink = $$0$i334$i$i$sink$ph;
                  while(1) {
                   switch ($$0$i334$i$i$sink<<24>>24) {
                   case 0:  {
                    $1400 = $1351;
                    break L696;
                    break;
                   }
                   case -1:  {
                    break;
                   }
                   default: {
                    break L694;
                   }
                   }
                   $1375 = HEAP32[$0>>2]|0;
                   $1376 = ((($1375)) + 168|0);
                   $1377 = HEAP32[$1376>>2]|0;
                   $1378 = ((($1375)) + 172|0);
                   $1379 = HEAP32[$1378>>2]|0;
                   $1380 = ($1377>>>0)<($1379>>>0);
                   do {
                    if ($1380) {
                     $1381 = ((($1377)) + 1|0);
                     HEAP32[$1376>>2] = $1381;
                     $1382 = HEAP8[$1377>>0]|0;
                     $$0$i334$i$i$sink$be = $1382;
                    } else {
                     $1383 = ((($1375)) + 32|0);
                     $1384 = HEAP32[$1383>>2]|0;
                     $1385 = ($1384|0)==(0);
                     if ($1385) {
                      $$0$i334$i$i$sink$be = 0;
                      break;
                     }
                     $1386 = ((($1375)) + 16|0);
                     $1387 = HEAP32[$1386>>2]|0;
                     $1388 = ((($1375)) + 28|0);
                     $1389 = HEAP32[$1388>>2]|0;
                     $1390 = ((($1375)) + 40|0);
                     $1391 = ((($1375)) + 36|0);
                     $1392 = HEAP32[$1391>>2]|0;
                     $1393 = (ftCall_iiii($1387|0,$1389,$1390,$1392)|0);
                     $1394 = ($1393|0)==(0);
                     if ($1394) {
                      HEAP32[$1383>>2] = 0;
                      $1395 = ((($1375)) + 41|0);
                      HEAP8[$1390>>0] = 0;
                      $$pre$phi$i331$i$iZ2D = $1395;$$sink$i$i332$i$i = $1395;$2332 = 0;
                     } else {
                      $1396 = (((($1375)) + 40|0) + ($1393)|0);
                      $$pre$i329$i$i = HEAP8[$1390>>0]|0;
                      $$pre5$i330$i$i = ((($1375)) + 41|0);
                      $$pre$phi$i331$i$iZ2D = $$pre5$i330$i$i;$$sink$i$i332$i$i = $1396;$2332 = $$pre$i329$i$i;
                     }
                     HEAP32[$1378>>2] = $$sink$i$i332$i$i;
                     HEAP32[$1376>>2] = $$pre$phi$i331$i$iZ2D;
                     $$0$i334$i$i$sink$be = $2332;
                    }
                   } while(0);
                   $$0$i334$i$i$sink = $$0$i334$i$i$sink$be;
                  }
                 } else {
                  $1400 = 0;
                 }
                } while(0);
                $1397 = HEAP32[$77>>2]|0;
                $1398 = (24 - ($1397))|0;
                $1399 = $1400 << $1398;
                $1401 = HEAP32[$78>>2]|0;
                $1402 = $1399 | $1401;
                HEAP32[$78>>2] = $1402;
                $1403 = (($1397) + 8)|0;
                HEAP32[$77>>2] = $1403;
                $1404 = ($1397|0)<(17);
                if (!($1404)) {
                 break L692;
                }
               }
               HEAP8[$21>>0] = $$0$i334$i$i$sink;
               HEAP32[$79>>2] = 1;
              }
             } while(0);
             $1405 = HEAP8[$21>>0]|0;
             $1406 = $1405 & -8;
             $1407 = ($1406<<24>>24)==(-48);
             if (!($1407)) {
              $1552 = $1405;
              break L122;
             }
             HEAP32[$77>>2] = 0;
             HEAP32[$78>>2] = 0;
             HEAP32[$79>>2] = 0;
             HEAP32[$80>>2] = 0;
             HEAP32[$81>>2] = 0;
             HEAP32[$82>>2] = 0;
             HEAP32[$83>>2] = 0;
             HEAP8[$21>>0] = -1;
             $1408 = HEAP32[$18>>2]|0;
             $1409 = ($1408|0)==(0);
             $spec$select$i336$i$i = $1409 ? 2147483647 : $1408;
             HEAP32[$84>>2] = $spec$select$i336$i$i;
             HEAP32[$85>>2] = 0;
            }
            $1410 = (($$0276450$i$i) + 1)|0;
            $1411 = ($1410|0)<($569|0);
            if ($1411) {
             $$0276450$i$i = $1410;
            } else {
             break;
            }
           }
          }
          $1412 = (($$0275454$i$i) + 1)|0;
          $1413 = ($1412|0)<($573|0);
          if ($1413) {
           $$0275454$i$i = $1412;
          } else {
           label = 543;
           break;
          }
         }
        } else {
         label = 543;
        }
       }
      } while(0);
      if ((label|0) == 543) {
       label = 0;
       $$pr127$i = HEAP8[$21>>0]|0;
       $1552 = $$pr127$i;
      }
      $1551 = ($1552<<24>>24)==(-1);
      if ($1551) {
       while(1) {
        $1553 = HEAP32[$0>>2]|0;
        $1554 = ((($1553)) + 16|0);
        $1555 = HEAP32[$1554>>2]|0;
        $1556 = ($1555|0)==(0|0);
        do {
         if ($1556) {
          label = 549;
         } else {
          $1557 = ((($1553)) + 24|0);
          $1558 = HEAP32[$1557>>2]|0;
          $1559 = ((($1553)) + 28|0);
          $1560 = HEAP32[$1559>>2]|0;
          $1561 = (ftCall_ii($1558|0,$1560)|0);
          $1562 = ($1561|0)==(0);
          if ($1562) {
           break;
          }
          $1563 = ((($1553)) + 32|0);
          $1564 = HEAP32[$1563>>2]|0;
          $1565 = ($1564|0)==(0);
          if ($1565) {
           label = 598;
           break L33;
          } else {
           label = 549;
          }
         }
        } while(0);
        if ((label|0) == 549) {
         label = 0;
         $1566 = ((($1553)) + 168|0);
         $1567 = HEAP32[$1566>>2]|0;
         $1568 = ((($1553)) + 172|0);
         $1569 = HEAP32[$1568>>2]|0;
         $1570 = ($1567>>>0)<($1569>>>0);
         if (!($1570)) {
          label = 598;
          break L33;
         }
        }
        $1571 = HEAP32[$0>>2]|0;
        $1572 = ((($1571)) + 168|0);
        $1573 = HEAP32[$1572>>2]|0;
        $1574 = ((($1571)) + 172|0);
        $1575 = HEAP32[$1574>>2]|0;
        $1576 = ($1573>>>0)<($1575>>>0);
        do {
         if ($1576) {
          $1577 = ((($1573)) + 1|0);
          HEAP32[$1572>>2] = $1577;
          $1578 = HEAP8[$1573>>0]|0;
          $$0$i75$i = $1578;
          label = 557;
         } else {
          $1579 = ((($1571)) + 32|0);
          $1580 = HEAP32[$1579>>2]|0;
          $1581 = ($1580|0)==(0);
          if ($1581) {
           break;
          }
          $1582 = ((($1571)) + 16|0);
          $1583 = HEAP32[$1582>>2]|0;
          $1584 = ((($1571)) + 28|0);
          $1585 = HEAP32[$1584>>2]|0;
          $1586 = ((($1571)) + 40|0);
          $1587 = ((($1571)) + 36|0);
          $1588 = HEAP32[$1587>>2]|0;
          $1589 = (ftCall_iiii($1583|0,$1585,$1586,$1588)|0);
          $1590 = ($1589|0)==(0);
          if ($1590) {
           HEAP32[$1579>>2] = 0;
           $1591 = ((($1571)) + 41|0);
           HEAP8[$1586>>0] = 0;
           $$pre$phi$i72$iZ2D = $1591;$$sink$i$i73$i = $1591;$2346 = 0;
          } else {
           $1592 = (((($1571)) + 40|0) + ($1589)|0);
           $$pre$i70$i = HEAP8[$1586>>0]|0;
           $$pre5$i71$i = ((($1571)) + 41|0);
           $$pre$phi$i72$iZ2D = $$pre5$i71$i;$$sink$i$i73$i = $1592;$2346 = $$pre$i70$i;
          }
          HEAP32[$1574>>2] = $$sink$i$i73$i;
          HEAP32[$1572>>2] = $$pre$phi$i72$iZ2D;
          $$0$i75$i = $2346;
          label = 557;
         }
        } while(0);
        if ((label|0) == 557) {
         label = 0;
         $1593 = ($$0$i75$i<<24>>24)==(-1);
         if ($1593) {
          break;
         }
        }
       }
       $1594 = HEAP32[$0>>2]|0;
       $1595 = ((($1594)) + 168|0);
       $1596 = HEAP32[$1595>>2]|0;
       $1597 = ((($1594)) + 172|0);
       $1598 = HEAP32[$1597>>2]|0;
       $1599 = ($1596>>>0)<($1598>>>0);
       if ($1599) {
        $1600 = ((($1596)) + 1|0);
        HEAP32[$1595>>2] = $1600;
        $1601 = HEAP8[$1596>>0]|0;
        $$0$i82$i = $1601;
       } else {
        $1602 = ((($1594)) + 32|0);
        $1603 = HEAP32[$1602>>2]|0;
        $1604 = ($1603|0)==(0);
        if ($1604) {
         $$0$i82$i = 0;
        } else {
         $1605 = ((($1594)) + 16|0);
         $1606 = HEAP32[$1605>>2]|0;
         $1607 = ((($1594)) + 28|0);
         $1608 = HEAP32[$1607>>2]|0;
         $1609 = ((($1594)) + 40|0);
         $1610 = ((($1594)) + 36|0);
         $1611 = HEAP32[$1610>>2]|0;
         $1612 = (ftCall_iiii($1606|0,$1608,$1609,$1611)|0);
         $1613 = ($1612|0)==(0);
         if ($1613) {
          HEAP32[$1602>>2] = 0;
          $1614 = ((($1594)) + 41|0);
          HEAP8[$1609>>0] = 0;
          $$pre$phi$i79$iZ2D = $1614;$$sink$i$i80$i = $1614;$2347 = 0;
         } else {
          $1615 = (((($1594)) + 40|0) + ($1612)|0);
          $$pre$i77$i = HEAP8[$1609>>0]|0;
          $$pre5$i78$i = ((($1594)) + 41|0);
          $$pre$phi$i79$iZ2D = $$pre5$i78$i;$$sink$i$i80$i = $1615;$2347 = $$pre$i77$i;
         }
         HEAP32[$1597>>2] = $$sink$i$i80$i;
         HEAP32[$1595>>2] = $$pre$phi$i79$iZ2D;
         $$0$i82$i = $2347;
        }
       }
       HEAP8[$21>>0] = $$0$i82$i;
       $1714 = $$0$i82$i;
       label = 599;
      } else {
       $2345 = $1552;
       label = 600;
      }
      break;
     }
     case -36:  {
      $1616 = HEAP32[$0>>2]|0;
      $1617 = ((($1616)) + 168|0);
      $1618 = HEAP32[$1617>>2]|0;
      $1619 = ((($1616)) + 172|0);
      $1620 = HEAP32[$1619>>2]|0;
      $1621 = ($1618>>>0)<($1620>>>0);
      if ($1621) {
       $1622 = ((($1618)) + 1|0);
       HEAP32[$1617>>2] = $1622;
       $1623 = HEAP8[$1618>>0]|0;
       $$0$i$i89$i = $1623;$1641 = $1622;$1642 = $1620;
      } else {
       $1624 = ((($1616)) + 32|0);
       $1625 = HEAP32[$1624>>2]|0;
       $1626 = ($1625|0)==(0);
       if ($1626) {
        $$0$i$i89$i = 0;$1641 = $1618;$1642 = $1620;
       } else {
        $1627 = ((($1616)) + 16|0);
        $1628 = HEAP32[$1627>>2]|0;
        $1629 = ((($1616)) + 28|0);
        $1630 = HEAP32[$1629>>2]|0;
        $1631 = ((($1616)) + 40|0);
        $1632 = ((($1616)) + 36|0);
        $1633 = HEAP32[$1632>>2]|0;
        $1634 = (ftCall_iiii($1628|0,$1630,$1631,$1633)|0);
        $1635 = ($1634|0)==(0);
        if ($1635) {
         HEAP32[$1624>>2] = 0;
         $1636 = ((($1616)) + 41|0);
         HEAP8[$1631>>0] = 0;
         $$pre$phi$i$i86$iZ2D = $1636;$$sink$i$i$i87$i = $1636;$2348 = 0;
        } else {
         $1637 = (((($1616)) + 40|0) + ($1634)|0);
         $$pre$i$i84$i = HEAP8[$1631>>0]|0;
         $$pre5$i$i85$i = ((($1616)) + 41|0);
         $$pre$phi$i$i86$iZ2D = $$pre5$i$i85$i;$$sink$i$i$i87$i = $1637;$2348 = $$pre$i$i84$i;
        }
        HEAP32[$1619>>2] = $$sink$i$i$i87$i;
        HEAP32[$1617>>2] = $$pre$phi$i$i86$iZ2D;
        $$0$i$i89$i = $2348;$1641 = $$pre$phi$i$i86$iZ2D;$1642 = $$sink$i$i$i87$i;
       }
      }
      $1638 = $$0$i$i89$i&255;
      $1639 = $1638 << 8;
      $1640 = ($1641>>>0)<($1642>>>0);
      if ($1640) {
       $1643 = ((($1641)) + 1|0);
       HEAP32[$1617>>2] = $1643;
       $1644 = HEAP8[$1641>>0]|0;
       $$0$i8$i$i = $1644;
      } else {
       $1645 = ((($1616)) + 32|0);
       $1646 = HEAP32[$1645>>2]|0;
       $1647 = ($1646|0)==(0);
       if ($1647) {
        $$0$i8$i$i = 0;
       } else {
        $1648 = ((($1616)) + 16|0);
        $1649 = HEAP32[$1648>>2]|0;
        $1650 = ((($1616)) + 28|0);
        $1651 = HEAP32[$1650>>2]|0;
        $1652 = ((($1616)) + 40|0);
        $1653 = ((($1616)) + 36|0);
        $1654 = HEAP32[$1653>>2]|0;
        $1655 = (ftCall_iiii($1649|0,$1651,$1652,$1654)|0);
        $1656 = ($1655|0)==(0);
        if ($1656) {
         HEAP32[$1645>>2] = 0;
         $1657 = ((($1616)) + 41|0);
         HEAP8[$1652>>0] = 0;
         $$pre$phi$i5$i$iZ2D = $1657;$$sink$i$i6$i$i = $1657;$2349 = 0;
        } else {
         $1658 = (((($1616)) + 40|0) + ($1655)|0);
         $$pre$i3$i$i = HEAP8[$1652>>0]|0;
         $$pre5$i4$i$i = ((($1616)) + 41|0);
         $$pre$phi$i5$i$iZ2D = $$pre5$i4$i$i;$$sink$i$i6$i$i = $1658;$2349 = $$pre$i3$i$i;
        }
        HEAP32[$1619>>2] = $$sink$i$i6$i$i;
        HEAP32[$1617>>2] = $$pre$phi$i5$i$iZ2D;
        $$0$i8$i$i = $2349;
       }
      }
      $1659 = $$0$i8$i$i&255;
      $1660 = $1639 | $1659;
      $1661 = HEAP32[$0>>2]|0;
      $1662 = ((($1661)) + 168|0);
      $1663 = HEAP32[$1662>>2]|0;
      $1664 = ((($1661)) + 172|0);
      $1665 = HEAP32[$1664>>2]|0;
      $1666 = ($1663>>>0)<($1665>>>0);
      if ($1666) {
       $1667 = ((($1663)) + 1|0);
       HEAP32[$1662>>2] = $1667;
       $1668 = HEAP8[$1663>>0]|0;
       $$0$i$i96$i = $1668;$1686 = $1667;$1687 = $1665;
      } else {
       $1669 = ((($1661)) + 32|0);
       $1670 = HEAP32[$1669>>2]|0;
       $1671 = ($1670|0)==(0);
       if ($1671) {
        $$0$i$i96$i = 0;$1686 = $1663;$1687 = $1665;
       } else {
        $1672 = ((($1661)) + 16|0);
        $1673 = HEAP32[$1672>>2]|0;
        $1674 = ((($1661)) + 28|0);
        $1675 = HEAP32[$1674>>2]|0;
        $1676 = ((($1661)) + 40|0);
        $1677 = ((($1661)) + 36|0);
        $1678 = HEAP32[$1677>>2]|0;
        $1679 = (ftCall_iiii($1673|0,$1675,$1676,$1678)|0);
        $1680 = ($1679|0)==(0);
        if ($1680) {
         HEAP32[$1669>>2] = 0;
         $1681 = ((($1661)) + 41|0);
         HEAP8[$1676>>0] = 0;
         $$pre$phi$i$i93$iZ2D = $1681;$$sink$i$i$i94$i = $1681;$2350 = 0;
        } else {
         $1682 = (((($1661)) + 40|0) + ($1679)|0);
         $$pre$i$i91$i = HEAP8[$1676>>0]|0;
         $$pre5$i$i92$i = ((($1661)) + 41|0);
         $$pre$phi$i$i93$iZ2D = $$pre5$i$i92$i;$$sink$i$i$i94$i = $1682;$2350 = $$pre$i$i91$i;
        }
        HEAP32[$1664>>2] = $$sink$i$i$i94$i;
        HEAP32[$1662>>2] = $$pre$phi$i$i93$iZ2D;
        $$0$i$i96$i = $2350;$1686 = $$pre$phi$i$i93$iZ2D;$1687 = $$sink$i$i$i94$i;
       }
      }
      $1683 = $$0$i$i96$i&255;
      $1684 = $1683 << 8;
      $1685 = ($1686>>>0)<($1687>>>0);
      if ($1685) {
       $1688 = ((($1686)) + 1|0);
       HEAP32[$1662>>2] = $1688;
       $1689 = HEAP8[$1686>>0]|0;
       $$0$i8$i103$i = $1689;
      } else {
       $1690 = ((($1661)) + 32|0);
       $1691 = HEAP32[$1690>>2]|0;
       $1692 = ($1691|0)==(0);
       if ($1692) {
        $$0$i8$i103$i = 0;
       } else {
        $1693 = ((($1661)) + 16|0);
        $1694 = HEAP32[$1693>>2]|0;
        $1695 = ((($1661)) + 28|0);
        $1696 = HEAP32[$1695>>2]|0;
        $1697 = ((($1661)) + 40|0);
        $1698 = ((($1661)) + 36|0);
        $1699 = HEAP32[$1698>>2]|0;
        $1700 = (ftCall_iiii($1694|0,$1696,$1697,$1699)|0);
        $1701 = ($1700|0)==(0);
        if ($1701) {
         HEAP32[$1690>>2] = 0;
         $1702 = ((($1661)) + 41|0);
         HEAP8[$1697>>0] = 0;
         $$pre$phi$i5$i100$iZ2D = $1702;$$sink$i$i6$i101$i = $1702;$2351 = 0;
        } else {
         $1703 = (((($1661)) + 40|0) + ($1700)|0);
         $$pre$i3$i98$i = HEAP8[$1697>>0]|0;
         $$pre5$i4$i99$i = ((($1661)) + 41|0);
         $$pre$phi$i5$i100$iZ2D = $$pre5$i4$i99$i;$$sink$i$i6$i101$i = $1703;$2351 = $$pre$i3$i98$i;
        }
        HEAP32[$1664>>2] = $$sink$i$i6$i101$i;
        HEAP32[$1662>>2] = $$pre$phi$i5$i100$iZ2D;
        $$0$i8$i103$i = $2351;
       }
      }
      $1704 = ($1660|0)==(4);
      if (!($1704)) {
       break L4;
      }
      $1705 = $$0$i8$i103$i&255;
      $1706 = $1684 | $1705;
      $1707 = HEAP32[$0>>2]|0;
      $1708 = ((($1707)) + 4|0);
      $1709 = HEAP32[$1708>>2]|0;
      $1710 = ($1706|0)==($1709|0);
      if ($1710) {
       label = 598;
      } else {
       break L4;
      }
      break;
     }
     default: {
      $1711 = (_stbi__process_marker($0,$$139$i)|0);
      $1712 = ($1711|0)==(0);
      if ($1712) {
       break L4;
      } else {
       label = 598;
      }
     }
     }
    } while(0);
    if ((label|0) == 598) {
     label = 0;
     $$pr$i = HEAP8[$21>>0]|0;
     $1714 = $$pr$i;
     label = 599;
    }
    L808: do {
     if ((label|0) == 599) {
      label = 0;
      $1713 = ($1714<<24>>24)==(-1);
      if ($1713) {
       $1715 = HEAP32[$0>>2]|0;
       $1716 = ((($1715)) + 168|0);
       $1717 = HEAP32[$1716>>2]|0;
       $1718 = ((($1715)) + 172|0);
       $1719 = HEAP32[$1718>>2]|0;
       $1720 = ($1717>>>0)<($1719>>>0);
       if ($1720) {
        $1721 = ((($1717)) + 1|0);
        HEAP32[$1716>>2] = $1721;
        $1722 = HEAP8[$1717>>0]|0;
        $$0$i$i110$i = $1722;
       } else {
        $1723 = ((($1715)) + 32|0);
        $1724 = HEAP32[$1723>>2]|0;
        $1725 = ($1724|0)==(0);
        if ($1725) {
         $$08$i112$i = -1;
         break;
        }
        $1726 = ((($1715)) + 16|0);
        $1727 = HEAP32[$1726>>2]|0;
        $1728 = ((($1715)) + 28|0);
        $1729 = HEAP32[$1728>>2]|0;
        $1730 = ((($1715)) + 40|0);
        $1731 = ((($1715)) + 36|0);
        $1732 = HEAP32[$1731>>2]|0;
        $1733 = (ftCall_iiii($1727|0,$1729,$1730,$1732)|0);
        $1734 = ($1733|0)==(0);
        if ($1734) {
         HEAP32[$1723>>2] = 0;
         $1735 = ((($1715)) + 41|0);
         HEAP8[$1730>>0] = 0;
         $$pre$phi$i$i107$iZ2D = $1735;$$sink$i$i$i108$i = $1735;$2352 = 0;
        } else {
         $1736 = (((($1715)) + 40|0) + ($1733)|0);
         $$pre$i$i105$i = HEAP8[$1730>>0]|0;
         $$pre5$i$i106$i = ((($1715)) + 41|0);
         $$pre$phi$i$i107$iZ2D = $$pre5$i$i106$i;$$sink$i$i$i108$i = $1736;$2352 = $$pre$i$i105$i;
        }
        HEAP32[$1718>>2] = $$sink$i$i$i108$i;
        HEAP32[$1716>>2] = $$pre$phi$i$i107$iZ2D;
        $$0$i$i110$i = $2352;
       }
       $1737 = ($$0$i$i110$i<<24>>24)==(-1);
       if ($1737) {
        while(1) {
         $1738 = HEAP32[$0>>2]|0;
         $1739 = ((($1738)) + 168|0);
         $1740 = HEAP32[$1739>>2]|0;
         $1741 = ((($1738)) + 172|0);
         $1742 = HEAP32[$1741>>2]|0;
         $1743 = ($1740>>>0)<($1742>>>0);
         if ($1743) {
          $1744 = ((($1740)) + 1|0);
          HEAP32[$1739>>2] = $1744;
          $1745 = HEAP8[$1740>>0]|0;
          $$0$i120$i = $1745;
         } else {
          $1746 = ((($1738)) + 32|0);
          $1747 = HEAP32[$1746>>2]|0;
          $1748 = ($1747|0)==(0);
          if ($1748) {
           $$08$i112$i = 0;
           break L808;
          }
          $1749 = ((($1738)) + 16|0);
          $1750 = HEAP32[$1749>>2]|0;
          $1751 = ((($1738)) + 28|0);
          $1752 = HEAP32[$1751>>2]|0;
          $1753 = ((($1738)) + 40|0);
          $1754 = ((($1738)) + 36|0);
          $1755 = HEAP32[$1754>>2]|0;
          $1756 = (ftCall_iiii($1750|0,$1752,$1753,$1755)|0);
          $1757 = ($1756|0)==(0);
          if ($1757) {
           HEAP32[$1746>>2] = 0;
           $1758 = ((($1738)) + 41|0);
           HEAP8[$1753>>0] = 0;
           $$pre$phi$i117$iZ2D = $1758;$$sink$i$i118$i = $1758;$2353 = 0;
          } else {
           $1759 = (((($1738)) + 40|0) + ($1756)|0);
           $$pre$i115$i = HEAP8[$1753>>0]|0;
           $$pre5$i116$i = ((($1738)) + 41|0);
           $$pre$phi$i117$iZ2D = $$pre5$i116$i;$$sink$i$i118$i = $1759;$2353 = $$pre$i115$i;
          }
          HEAP32[$1741>>2] = $$sink$i$i118$i;
          HEAP32[$1739>>2] = $$pre$phi$i117$iZ2D;
          $$0$i120$i = $2353;
         }
         $1760 = ($$0$i120$i<<24>>24)==(-1);
         if (!($1760)) {
          $$08$i112$i = $$0$i120$i;
          break;
         }
        }
       } else {
        $$08$i112$i = -1;
       }
      } else {
       $2345 = $1714;
       label = 600;
      }
     }
    } while(0);
    if ((label|0) == 600) {
     label = 0;
     HEAP8[$21>>0] = -1;
     $$08$i112$i = $2345;
    }
    $1761 = $$08$i112$i&255;
    $$139$i = $1761;
   }
   if ((label|0) == 41) {
    HEAP32[$71>>2] = 0;
    break;
   }
   $1762 = HEAP32[$76>>2]|0;
   $1763 = ($1762|0)==(0);
   if (!($1763)) {
    $1764 = HEAP32[$0>>2]|0;
    $1765 = ((($1764)) + 8|0);
    $1766 = HEAP32[$1765>>2]|0;
    $1767 = ($1766|0)>(0);
    if ($1767) {
     $$04552$i$i = 0;$2354 = $1764;
     while(1) {
      $1768 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 28|0);
      $1769 = HEAP32[$1768>>2]|0;
      $1770 = (($1769) + 7)|0;
      $1771 = $1770 >> 3;
      $1772 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 32|0);
      $1773 = HEAP32[$1772>>2]|0;
      $1774 = (($1773) + 7)|0;
      $1775 = $1774 >> 3;
      $1776 = ($1773|0)>(0);
      if ($1776) {
       $1777 = ($1769|0)>(0);
       $1778 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 60|0);
       $1779 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 64|0);
       $1780 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 12|0);
       $1781 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 44|0);
       $1782 = (((((($0)) + 18076|0) + (($$04552$i$i*72)|0)|0)) + 36|0);
       if ($1777) {
        $$04447$us$i$i = 0;
        while(1) {
         $1783 = $$04447$us$i$i << 3;
         $$046$us$i$i = 0;
         while(1) {
          $1784 = HEAP32[$1778>>2]|0;
          $1785 = HEAP32[$1779>>2]|0;
          $1786 = Math_imul($1785, $$04447$us$i$i)|0;
          $1787 = (($1786) + ($$046$us$i$i))|0;
          $1788 = $1787 << 6;
          $1789 = (($1784) + ($1788<<1)|0);
          $1790 = HEAP32[$1780>>2]|0;
          $$06$i$us$i$i = 0;
          while(1) {
           $1791 = ((((($0)) + 13444|0) + ($1790<<7)|0) + ($$06$i$us$i$i<<1)|0);
           $1792 = HEAP16[$1791>>1]|0;
           $1793 = $1792&65535;
           $1794 = (($1789) + ($$06$i$us$i$i<<1)|0);
           $1795 = HEAP16[$1794>>1]|0;
           $1796 = $1795 << 16 >> 16;
           $1797 = Math_imul($1796, $1793)|0;
           $1798 = $1797&65535;
           HEAP16[$1794>>1] = $1798;
           $1799 = (($$06$i$us$i$i) + 1)|0;
           $exitcond$i$us$i$i = ($1799|0)==(64);
           if ($exitcond$i$us$i$i) {
            break;
           } else {
            $$06$i$us$i$i = $1799;
           }
          }
          $1800 = HEAP32[$88>>2]|0;
          $1801 = HEAP32[$1781>>2]|0;
          $1802 = HEAP32[$1782>>2]|0;
          $1803 = Math_imul($1783, $1802)|0;
          $1804 = (($1801) + ($1803)|0);
          $1805 = $$046$us$i$i << 3;
          $1806 = (($1804) + ($1805)|0);
          ftCall_viii($1800|0,$1806,$1802,$1789);
          $1807 = (($$046$us$i$i) + 1)|0;
          $1808 = ($1807|0)<($1771|0);
          if ($1808) {
           $$046$us$i$i = $1807;
          } else {
           break;
          }
         }
         $1809 = (($$04447$us$i$i) + 1)|0;
         $1810 = ($1809|0)<($1775|0);
         if ($1810) {
          $$04447$us$i$i = $1809;
         } else {
          break;
         }
        }
        $$pre$i122$i = HEAP32[$0>>2]|0;
        $1813 = $$pre$i122$i;
       } else {
        $1813 = $2354;
       }
      } else {
       $1813 = $2354;
      }
      $1811 = (($$04552$i$i) + 1)|0;
      $1812 = ((($1813)) + 8|0);
      $1814 = HEAP32[$1812>>2]|0;
      $1815 = ($1811|0)<($1814|0);
      if ($1815) {
       $$04552$i$i = $1811;$2354 = $1813;
      } else {
       break;
      }
     }
    }
   }
   $1832 = ($4|0)==(0);
   $1833 = HEAP32[$0>>2]|0;
   $1834 = ((($1833)) + 8|0);
   $1835 = HEAP32[$1834>>2]|0;
   $1836 = ($1835|0)>(2);
   $1837 = $1836 ? 3 : 1;
   $1838 = $1832 ? $1837 : $4;
   $1839 = ($1835|0)==(3);
   if ($1839) {
    $1840 = ((($0)) + 18412|0);
    $1841 = HEAP32[$1840>>2]|0;
    $1842 = ($1841|0)==(3);
    if ($1842) {
     $1851 = 1;
    } else {
     $1843 = ((($0)) + 18408|0);
     $1844 = HEAP32[$1843>>2]|0;
     $1845 = ($1844|0)==(0);
     if ($1845) {
      $1846 = ((($0)) + 18404|0);
      $1847 = HEAP32[$1846>>2]|0;
      $1848 = ($1847|0)==(0);
      $1851 = $1848;
     } else {
      $1851 = 0;
     }
    }
   } else {
    $1851 = 0;
   }
   $1849 = ($1835|0)!=(3);
   $1850 = ($1838|0)>(2);
   $or$cond3$not = $1850 | $1849;
   $or$cond5 = $or$cond3$not | $1851;
   $$ = $or$cond5 ? $1835 : 1;
   $1852 = ($$|0)>(0);
   L862: do {
    if ($1852) {
     $1853 = ((($0)) + 18052|0);
     $1854 = ((($0)) + 18056|0);
     $1855 = ((($0)) + 18452|0);
     $$pre472 = HEAP32[$1833>>2]|0;
     $$0273408 = 0;$1858 = $$pre472;
     while(1) {
      $1856 = (($6) + ($$0273408<<5)|0);
      $1857 = (($1858) + 3)|0;
      $1859 = (_malloc($1857)|0);
      $1860 = (((((($0)) + 18076|0) + (($$0273408*72)|0)|0)) + 56|0);
      HEAP32[$1860>>2] = $1859;
      $1861 = ($1859|0)==(0|0);
      if ($1861) {
       break;
      }
      $1876 = HEAP32[$1853>>2]|0;
      $1877 = (((((($0)) + 18076|0) + (($$0273408*72)|0)|0)) + 4|0);
      $1878 = HEAP32[$1877>>2]|0;
      $1879 = (($1876|0) / ($1878|0))&-1;
      $1880 = (((($6) + ($$0273408<<5)|0)) + 12|0);
      HEAP32[$1880>>2] = $1879;
      $1881 = HEAP32[$1854>>2]|0;
      $1882 = (((((($0)) + 18076|0) + (($$0273408*72)|0)|0)) + 8|0);
      $1883 = HEAP32[$1882>>2]|0;
      $1884 = (($1881|0) / ($1883|0))&-1;
      $1885 = (((($6) + ($$0273408<<5)|0)) + 16|0);
      HEAP32[$1885>>2] = $1884;
      $1886 = $1884 >> 1;
      $1887 = (((($6) + ($$0273408<<5)|0)) + 24|0);
      HEAP32[$1887>>2] = $1886;
      $1888 = HEAP32[$1833>>2]|0;
      $1889 = (($1879) + -1)|0;
      $1890 = (($1889) + ($1888))|0;
      $1891 = (($1890>>>0) / ($1879>>>0))&-1;
      $1892 = (((($6) + ($$0273408<<5)|0)) + 20|0);
      HEAP32[$1892>>2] = $1891;
      $1893 = (((($6) + ($$0273408<<5)|0)) + 28|0);
      HEAP32[$1893>>2] = 0;
      $1894 = (((((($0)) + 18076|0) + (($$0273408*72)|0)|0)) + 44|0);
      $1895 = HEAP32[$1894>>2]|0;
      $1896 = (((($6) + ($$0273408<<5)|0)) + 8|0);
      HEAP32[$1896>>2] = $1895;
      $1897 = (((($6) + ($$0273408<<5)|0)) + 4|0);
      HEAP32[$1897>>2] = $1895;
      L867: do {
       switch ($1879|0) {
       case 1:  {
        switch ($1884|0) {
        case 1:  {
         HEAP32[$1856>>2] = 449;
         break L867;
         break;
        }
        case 2:  {
         HEAP32[$1856>>2] = 450;
         break L867;
         break;
        }
        default: {
         label = 665;
         break L867;
        }
        }
        break;
       }
       case 2:  {
        switch ($1884|0) {
        case 1:  {
         HEAP32[$1856>>2] = 451;
         break L867;
         break;
        }
        case 2:  {
         $1898 = HEAP32[$1855>>2]|0;
         HEAP32[$1856>>2] = $1898;
         break L867;
         break;
        }
        default: {
         label = 665;
         break L867;
        }
        }
        break;
       }
       default: {
        label = 665;
       }
       }
      } while(0);
      if ((label|0) == 665) {
       label = 0;
       HEAP32[$1856>>2] = 452;
      }
      $1899 = (($$0273408) + 1)|0;
      $1900 = ($1899|0)<($$|0);
      if ($1900) {
       $$0273408 = $1899;$1858 = $1888;
      } else {
       $1904 = $1888;
       label = 667;
       break L862;
      }
     }
     $1862 = HEAP32[$1834>>2]|0;
     $1863 = ($1862|0)>(0);
     if ($1863) {
      $$01$i$i296 = 0;
      while(1) {
       $1864 = (((((($0)) + 18076|0) + (($$01$i$i296*72)|0)|0)) + 48|0);
       $1865 = HEAP32[$1864>>2]|0;
       $1866 = ($1865|0)==(0|0);
       if (!($1866)) {
        $1867 = (((((($0)) + 18076|0) + (($$01$i$i296*72)|0)|0)) + 44|0);
        _free($1865);
        HEAP32[$1864>>2] = 0;
        HEAP32[$1867>>2] = 0;
       }
       $1868 = (((((($0)) + 18076|0) + (($$01$i$i296*72)|0)|0)) + 52|0);
       $1869 = HEAP32[$1868>>2]|0;
       $1870 = ($1869|0)==(0|0);
       if (!($1870)) {
        $1871 = (((((($0)) + 18076|0) + (($$01$i$i296*72)|0)|0)) + 60|0);
        _free($1869);
        HEAP32[$1868>>2] = 0;
        HEAP32[$1871>>2] = 0;
       }
       $1872 = (((((($0)) + 18076|0) + (($$01$i$i296*72)|0)|0)) + 56|0);
       $1873 = HEAP32[$1872>>2]|0;
       $1874 = ($1873|0)==(0|0);
       if (!($1874)) {
        _free($1873);
        HEAP32[$1872>>2] = 0;
       }
       $1875 = (($$01$i$i296) + 1)|0;
       $exitcond$i$i297 = ($1875|0)==($1862|0);
       if ($exitcond$i$i297) {
        $$2 = 0;
        break;
       } else {
        $$01$i$i296 = $1875;
       }
      }
     } else {
      $$2 = 0;
     }
    } else {
     $$pre474 = HEAP32[$1833>>2]|0;
     $1904 = $$pre474;
     label = 667;
    }
   } while(0);
   L893: do {
    if ((label|0) == 667) {
     $1901 = ((($1833)) + 4|0);
     $1902 = HEAP32[$1901>>2]|0;
     $1903 = $1904 | $1838;
     $1905 = ($1903|0)<(0);
     do {
      if (!($1905)) {
       $1906 = ($1904|0)==(0);
       if (!($1906)) {
        $1907 = (2147483647 / ($1904|0))&-1;
        $1908 = ($1907|0)<($1838|0);
        if ($1908) {
         break;
        }
       }
       $1909 = Math_imul($1904, $1838)|0;
       $1910 = $1909 | $1902;
       $1911 = ($1910|0)<(0);
       if (!($1911)) {
        $1912 = ($1902|0)==(0);
        if ($1912) {
         $$0$i10$i$i = 1;
        } else {
         $1913 = (2147483647 / ($1902|0))&-1;
         $1914 = ($1913|0)>=($1909|0);
         $$0$i10$i$i = $1914;
        }
        $1915 = Math_imul($1909, $1902)|0;
        $1916 = ($1915|0)!=(2147483647);
        $narrow$i$i = $1916 & $$0$i10$i$i;
        if ($narrow$i$i) {
         $1917 = (($1915) + 1)|0;
         $1918 = (_malloc($1917)|0);
         $1919 = ($1918|0)==(0|0);
         if (!($1919)) {
          $1934 = HEAP32[$1901>>2]|0;
          $1935 = ($1934|0)==(0);
          if ($1935) {
           $$lcssa = $1833;$$pre$phi480Z2D = $1834;
          } else {
           $1936 = ((($0)) + 18408|0);
           $1937 = ($1838|0)==(1);
           $1938 = ((($0)) + 18448|0);
           $1939 = ((($5)) + 4|0);
           $1940 = ((($5)) + 8|0);
           $1941 = ((($5)) + 12|0);
           $$0279404 = 0;$1943 = $1833;
           while(1) {
            $1942 = HEAP32[$1943>>2]|0;
            $1944 = Math_imul($$0279404, $1838)|0;
            $1945 = Math_imul($1944, $1942)|0;
            $1946 = (($1918) + ($1945)|0);
            if ($1852) {
             $$1274364 = 0;
             while(1) {
              $1947 = (((($6) + ($$1274364<<5)|0)) + 24|0);
              $1948 = HEAP32[$1947>>2]|0;
              $1949 = (((($6) + ($$1274364<<5)|0)) + 16|0);
              $1950 = HEAP32[$1949>>2]|0;
              $1951 = $1950 >> 1;
              $1952 = ($1948|0)>=($1951|0);
              $1953 = (($6) + ($$1274364<<5)|0);
              $1954 = HEAP32[$1953>>2]|0;
              $1955 = (((((($0)) + 18076|0) + (($$1274364*72)|0)|0)) + 56|0);
              $1956 = HEAP32[$1955>>2]|0;
              $1957 = (((($6) + ($$1274364<<5)|0)) + 8|0);
              $1958 = (((($6) + ($$1274364<<5)|0)) + 4|0);
              $$in = $1952 ? $1957 : $1958;
              $1959 = HEAP32[$$in>>2]|0;
              $$in289 = $1952 ? $1958 : $1957;
              $1960 = HEAP32[$$in289>>2]|0;
              $1961 = (((($6) + ($$1274364<<5)|0)) + 20|0);
              $1962 = HEAP32[$1961>>2]|0;
              $1963 = (((($6) + ($$1274364<<5)|0)) + 12|0);
              $1964 = HEAP32[$1963>>2]|0;
              $1965 = (ftCall_iiiiii($1954|0,$1956,$1959,$1960,$1962,$1964)|0);
              $1966 = (($5) + ($$1274364<<2)|0);
              HEAP32[$1966>>2] = $1965;
              $1967 = (($1948) + 1)|0;
              HEAP32[$1947>>2] = $1967;
              $1968 = ($1967|0)<($1950|0);
              do {
               if (!($1968)) {
                HEAP32[$1947>>2] = 0;
                $1969 = HEAP32[$1957>>2]|0;
                HEAP32[$1958>>2] = $1969;
                $1970 = (((($6) + ($$1274364<<5)|0)) + 28|0);
                $1971 = HEAP32[$1970>>2]|0;
                $1972 = (($1971) + 1)|0;
                HEAP32[$1970>>2] = $1972;
                $1973 = (((((($0)) + 18076|0) + (($$1274364*72)|0)|0)) + 32|0);
                $1974 = HEAP32[$1973>>2]|0;
                $1975 = ($1972|0)<($1974|0);
                if (!($1975)) {
                 break;
                }
                $1976 = $1969;
                $1977 = (((((($0)) + 18076|0) + (($$1274364*72)|0)|0)) + 36|0);
                $1978 = HEAP32[$1977>>2]|0;
                $1979 = (($1976) + ($1978)|0);
                HEAP32[$1957>>2] = $1979;
               }
              } while(0);
              $1980 = (($$1274364) + 1)|0;
              $exitcond = ($1980|0)==($$|0);
              if ($exitcond) {
               break;
              } else {
               $$1274364 = $1980;
              }
             }
            }
            L919: do {
             if ($1850) {
              $1981 = HEAP32[$5>>2]|0;
              $1982 = HEAP32[$0>>2]|0;
              $1983 = ((($1982)) + 8|0);
              $1984 = HEAP32[$1983>>2]|0;
              switch ($1984|0) {
              case 3:  {
               if (!($1851)) {
                $2003 = HEAP32[$1938>>2]|0;
                $2004 = HEAP32[$1939>>2]|0;
                $2005 = HEAP32[$1940>>2]|0;
                $2006 = HEAP32[$1982>>2]|0;
                ftCall_viiiiii($2003|0,$1946,$1981,$2004,$2005,$2006,$1838);
                break L919;
               }
               $1985 = HEAP32[$1982>>2]|0;
               $1986 = ($1985|0)==(0);
               if ($1986) {
                break L919;
               }
               $$0275397 = 0;$$0280396 = $1946;
               while(1) {
                $1987 = (($1981) + ($$0275397)|0);
                $1988 = HEAP8[$1987>>0]|0;
                HEAP8[$$0280396>>0] = $1988;
                $1989 = HEAP32[$1939>>2]|0;
                $1990 = (($1989) + ($$0275397)|0);
                $1991 = HEAP8[$1990>>0]|0;
                $1992 = ((($$0280396)) + 1|0);
                HEAP8[$1992>>0] = $1991;
                $1993 = HEAP32[$1940>>2]|0;
                $1994 = (($1993) + ($$0275397)|0);
                $1995 = HEAP8[$1994>>0]|0;
                $1996 = ((($$0280396)) + 2|0);
                HEAP8[$1996>>0] = $1995;
                $1997 = ((($$0280396)) + 3|0);
                HEAP8[$1997>>0] = -1;
                $1998 = (($$0280396) + ($1838)|0);
                $1999 = (($$0275397) + 1)|0;
                $2000 = HEAP32[$0>>2]|0;
                $2001 = HEAP32[$2000>>2]|0;
                $2002 = ($1999>>>0)<($2001>>>0);
                if ($2002) {
                 $$0275397 = $1999;$$0280396 = $1998;
                } else {
                 break;
                }
               }
               break;
              }
              case 4:  {
               $2007 = HEAP32[$1936>>2]|0;
               $2008 = ($2007|0)==(0);
               if ($2008) {
                $2009 = HEAP32[$1982>>2]|0;
                $2010 = ($2009|0)==(0);
                if ($2010) {
                 break L919;
                }
                $$1276393 = 0;$$1281392 = $1946;$2015 = $1981;
                while(1) {
                 $2011 = HEAP32[$1941>>2]|0;
                 $2012 = (($2011) + ($$1276393)|0);
                 $2013 = HEAP8[$2012>>0]|0;
                 $2014 = (($2015) + ($$1276393)|0);
                 $2016 = HEAP8[$2014>>0]|0;
                 $2017 = $2016&255;
                 $2018 = $2013&255;
                 $2019 = Math_imul($2017, $2018)|0;
                 $2020 = (($2019) + 128)|0;
                 $2021 = $2020 >>> 8;
                 $2022 = (($2021) + ($2020))|0;
                 $2023 = $2022 >>> 8;
                 $2024 = $2023&255;
                 HEAP8[$$1281392>>0] = $2024;
                 $2025 = HEAP32[$1939>>2]|0;
                 $2026 = (($2025) + ($$1276393)|0);
                 $2027 = HEAP8[$2026>>0]|0;
                 $2028 = $2027&255;
                 $2029 = Math_imul($2028, $2018)|0;
                 $2030 = (($2029) + 128)|0;
                 $2031 = $2030 >>> 8;
                 $2032 = (($2031) + ($2030))|0;
                 $2033 = $2032 >>> 8;
                 $2034 = $2033&255;
                 $2035 = ((($$1281392)) + 1|0);
                 HEAP8[$2035>>0] = $2034;
                 $2036 = HEAP32[$1940>>2]|0;
                 $2037 = (($2036) + ($$1276393)|0);
                 $2038 = HEAP8[$2037>>0]|0;
                 $2039 = $2038&255;
                 $2040 = Math_imul($2039, $2018)|0;
                 $2041 = (($2040) + 128)|0;
                 $2042 = $2041 >>> 8;
                 $2043 = (($2042) + ($2041))|0;
                 $2044 = $2043 >>> 8;
                 $2045 = $2044&255;
                 $2046 = ((($$1281392)) + 2|0);
                 HEAP8[$2046>>0] = $2045;
                 $2047 = ((($$1281392)) + 3|0);
                 HEAP8[$2047>>0] = -1;
                 $2048 = (($$1276393) + 1)|0;
                 $2049 = HEAP32[$0>>2]|0;
                 $2050 = HEAP32[$2049>>2]|0;
                 $2051 = ($2048>>>0)<($2050>>>0);
                 if (!($2051)) {
                  break L919;
                 }
                 $2052 = (($$1281392) + ($1838)|0);
                 $$pre476 = HEAP32[$5>>2]|0;
                 $$1276393 = $2048;$$1281392 = $2052;$2015 = $$pre476;
                }
               } else {
                $2053 = ($2007|0)==(2);
                $2054 = HEAP32[$1938>>2]|0;
                $2055 = HEAP32[$1939>>2]|0;
                $2056 = HEAP32[$1940>>2]|0;
                $2057 = HEAP32[$1982>>2]|0;
                ftCall_viiiiii($2054|0,$1946,$1981,$2055,$2056,$2057,$1838);
                if (!($2053)) {
                 break L919;
                }
                $2058 = HEAP32[$0>>2]|0;
                $2059 = HEAP32[$2058>>2]|0;
                $2060 = ($2059|0)==(0);
                if ($2060) {
                 break L919;
                }
                $$2277389 = 0;$$2282388 = $1946;
                while(1) {
                 $2061 = HEAP32[$1941>>2]|0;
                 $2062 = (($2061) + ($$2277389)|0);
                 $2063 = HEAP8[$2062>>0]|0;
                 $2064 = HEAP8[$$2282388>>0]|0;
                 $2065 = $2064 ^ -1;
                 $2066 = $2065&255;
                 $2067 = $2063&255;
                 $2068 = Math_imul($2066, $2067)|0;
                 $2069 = (($2068) + 128)|0;
                 $2070 = $2069 >>> 8;
                 $2071 = (($2070) + ($2069))|0;
                 $2072 = $2071 >>> 8;
                 $2073 = $2072&255;
                 HEAP8[$$2282388>>0] = $2073;
                 $2074 = ((($$2282388)) + 1|0);
                 $2075 = HEAP8[$2074>>0]|0;
                 $2076 = $2075 ^ -1;
                 $2077 = $2076&255;
                 $2078 = Math_imul($2077, $2067)|0;
                 $2079 = (($2078) + 128)|0;
                 $2080 = $2079 >>> 8;
                 $2081 = (($2080) + ($2079))|0;
                 $2082 = $2081 >>> 8;
                 $2083 = $2082&255;
                 HEAP8[$2074>>0] = $2083;
                 $2084 = ((($$2282388)) + 2|0);
                 $2085 = HEAP8[$2084>>0]|0;
                 $2086 = $2085 ^ -1;
                 $2087 = $2086&255;
                 $2088 = Math_imul($2087, $2067)|0;
                 $2089 = (($2088) + 128)|0;
                 $2090 = $2089 >>> 8;
                 $2091 = (($2090) + ($2089))|0;
                 $2092 = $2091 >>> 8;
                 $2093 = $2092&255;
                 HEAP8[$2084>>0] = $2093;
                 $2094 = (($$2282388) + ($1838)|0);
                 $2095 = (($$2277389) + 1)|0;
                 $2096 = HEAP32[$0>>2]|0;
                 $2097 = HEAP32[$2096>>2]|0;
                 $2098 = ($2095>>>0)<($2097>>>0);
                 if ($2098) {
                  $$2277389 = $2095;$$2282388 = $2094;
                 } else {
                  break;
                 }
                }
               }
               break;
              }
              default: {
               $2099 = HEAP32[$1982>>2]|0;
               $2100 = ($2099|0)==(0);
               if ($2100) {
                break L919;
               }
               $$3278401 = 0;$$3283400 = $1946;
               while(1) {
                $2101 = (($1981) + ($$3278401)|0);
                $2102 = HEAP8[$2101>>0]|0;
                $2103 = ((($$3283400)) + 2|0);
                HEAP8[$2103>>0] = $2102;
                $2104 = ((($$3283400)) + 1|0);
                HEAP8[$2104>>0] = $2102;
                HEAP8[$$3283400>>0] = $2102;
                $2105 = ((($$3283400)) + 3|0);
                HEAP8[$2105>>0] = -1;
                $2106 = (($$3283400) + ($1838)|0);
                $2107 = (($$3278401) + 1)|0;
                $2108 = HEAP32[$0>>2]|0;
                $2109 = HEAP32[$2108>>2]|0;
                $2110 = ($2107>>>0)<($2109>>>0);
                if ($2110) {
                 $$3278401 = $2107;$$3283400 = $2106;
                } else {
                 break;
                }
               }
              }
              }
             } else {
              $2111 = HEAP32[$0>>2]|0;
              if ($1851) {
               $2112 = HEAP32[$2111>>2]|0;
               $2113 = ($2112|0)!=(0);
               if ($1937) {
                if (!($2113)) {
                 break;
                }
                $$4284384 = $1946;$$4385 = 0;
                while(1) {
                 $2114 = HEAP32[$5>>2]|0;
                 $2115 = (($2114) + ($$4385)|0);
                 $2116 = HEAP8[$2115>>0]|0;
                 $2117 = $2116&255;
                 $2118 = HEAP32[$1939>>2]|0;
                 $2119 = (($2118) + ($$4385)|0);
                 $2120 = HEAP8[$2119>>0]|0;
                 $2121 = $2120&255;
                 $2122 = HEAP32[$1940>>2]|0;
                 $2123 = (($2122) + ($$4385)|0);
                 $2124 = HEAP8[$2123>>0]|0;
                 $2125 = $2124&255;
                 $2126 = ($2117*77)|0;
                 $2127 = ($2121*150)|0;
                 $2128 = (($2127) + ($2126))|0;
                 $2129 = ($2125*29)|0;
                 $2130 = (($2128) + ($2129))|0;
                 $2131 = $2130 >>> 8;
                 $2132 = $2131&255;
                 $2133 = ((($$4284384)) + 1|0);
                 HEAP8[$$4284384>>0] = $2132;
                 $2134 = (($$4385) + 1)|0;
                 $2135 = HEAP32[$0>>2]|0;
                 $2136 = HEAP32[$2135>>2]|0;
                 $2137 = ($2134>>>0)<($2136>>>0);
                 if ($2137) {
                  $$4284384 = $2133;$$4385 = $2134;
                 } else {
                  break L919;
                 }
                }
               } else {
                if (!($2113)) {
                 break;
                }
                $$5285380 = $1946;$$5381 = 0;
                while(1) {
                 $2138 = HEAP32[$5>>2]|0;
                 $2139 = (($2138) + ($$5381)|0);
                 $2140 = HEAP8[$2139>>0]|0;
                 $2141 = $2140&255;
                 $2142 = HEAP32[$1939>>2]|0;
                 $2143 = (($2142) + ($$5381)|0);
                 $2144 = HEAP8[$2143>>0]|0;
                 $2145 = $2144&255;
                 $2146 = HEAP32[$1940>>2]|0;
                 $2147 = (($2146) + ($$5381)|0);
                 $2148 = HEAP8[$2147>>0]|0;
                 $2149 = $2148&255;
                 $2150 = ($2141*77)|0;
                 $2151 = ($2145*150)|0;
                 $2152 = (($2151) + ($2150))|0;
                 $2153 = ($2149*29)|0;
                 $2154 = (($2152) + ($2153))|0;
                 $2155 = $2154 >>> 8;
                 $2156 = $2155&255;
                 HEAP8[$$5285380>>0] = $2156;
                 $2157 = ((($$5285380)) + 1|0);
                 HEAP8[$2157>>0] = -1;
                 $2158 = (($$5381) + 1)|0;
                 $2159 = ((($$5285380)) + 2|0);
                 $2160 = HEAP32[$0>>2]|0;
                 $2161 = HEAP32[$2160>>2]|0;
                 $2162 = ($2158>>>0)<($2161>>>0);
                 if ($2162) {
                  $$5285380 = $2159;$$5381 = $2158;
                 } else {
                  break L919;
                 }
                }
               }
              }
              $2163 = ((($2111)) + 8|0);
              $2164 = HEAP32[$2163>>2]|0;
              $2165 = ($2164|0)==(4);
              L958: do {
               if ($2165) {
                $2166 = HEAP32[$1936>>2]|0;
                switch ($2166|0) {
                case 0:  {
                 $2167 = HEAP32[$2111>>2]|0;
                 $2168 = ($2167|0)==(0);
                 if ($2168) {
                  break L919;
                 }
                 $$6286376 = $1946;$$6377 = 0;
                 while(1) {
                  $2169 = HEAP32[$1941>>2]|0;
                  $2170 = (($2169) + ($$6377)|0);
                  $2171 = HEAP8[$2170>>0]|0;
                  $2172 = HEAP32[$5>>2]|0;
                  $2173 = (($2172) + ($$6377)|0);
                  $2174 = HEAP8[$2173>>0]|0;
                  $2175 = $2174&255;
                  $2176 = $2171&255;
                  $2177 = Math_imul($2175, $2176)|0;
                  $2178 = (($2177) + 128)|0;
                  $2179 = $2178 >>> 8;
                  $2180 = (($2179) + ($2178))|0;
                  $2181 = $2180 >>> 8;
                  $2182 = HEAP32[$1939>>2]|0;
                  $2183 = (($2182) + ($$6377)|0);
                  $2184 = HEAP8[$2183>>0]|0;
                  $2185 = $2184&255;
                  $2186 = Math_imul($2185, $2176)|0;
                  $2187 = (($2186) + 128)|0;
                  $2188 = $2187 >>> 8;
                  $2189 = (($2188) + ($2187))|0;
                  $2190 = $2189 >>> 8;
                  $2191 = HEAP32[$1940>>2]|0;
                  $2192 = (($2191) + ($$6377)|0);
                  $2193 = HEAP8[$2192>>0]|0;
                  $2194 = $2193&255;
                  $2195 = Math_imul($2194, $2176)|0;
                  $2196 = (($2195) + 128)|0;
                  $2197 = $2196 >>> 8;
                  $2198 = (($2197) + ($2196))|0;
                  $2199 = $2198 >>> 8;
                  $2200 = $2181 & 255;
                  $2201 = $2190 & 255;
                  $2202 = $2199 & 255;
                  $2203 = ($2200*77)|0;
                  $2204 = ($2201*150)|0;
                  $2205 = (($2204) + ($2203))|0;
                  $2206 = ($2202*29)|0;
                  $2207 = (($2205) + ($2206))|0;
                  $2208 = $2207 >>> 8;
                  $2209 = $2208&255;
                  HEAP8[$$6286376>>0] = $2209;
                  $2210 = ((($$6286376)) + 1|0);
                  HEAP8[$2210>>0] = -1;
                  $2211 = (($$6286376) + ($1838)|0);
                  $2212 = (($$6377) + 1)|0;
                  $2213 = HEAP32[$0>>2]|0;
                  $2214 = HEAP32[$2213>>2]|0;
                  $2215 = ($2212>>>0)<($2214>>>0);
                  if ($2215) {
                   $$6286376 = $2211;$$6377 = $2212;
                  } else {
                   break L919;
                  }
                 }
                 break;
                }
                case 2:  {
                 $2216 = HEAP32[$2111>>2]|0;
                 $2217 = ($2216|0)==(0);
                 if ($2217) {
                  break L919;
                 }
                 $$7287372 = $1946;$$7373 = 0;
                 while(1) {
                  $2218 = HEAP32[$5>>2]|0;
                  $2219 = (($2218) + ($$7373)|0);
                  $2220 = HEAP8[$2219>>0]|0;
                  $2221 = $2220 ^ -1;
                  $2222 = HEAP32[$1941>>2]|0;
                  $2223 = (($2222) + ($$7373)|0);
                  $2224 = HEAP8[$2223>>0]|0;
                  $2225 = $2221&255;
                  $2226 = $2224&255;
                  $2227 = Math_imul($2226, $2225)|0;
                  $2228 = (($2227) + 128)|0;
                  $2229 = $2228 >>> 8;
                  $2230 = (($2229) + ($2228))|0;
                  $2231 = $2230 >>> 8;
                  $2232 = $2231&255;
                  HEAP8[$$7287372>>0] = $2232;
                  $2233 = ((($$7287372)) + 1|0);
                  HEAP8[$2233>>0] = -1;
                  $2234 = (($$7287372) + ($1838)|0);
                  $2235 = (($$7373) + 1)|0;
                  $2236 = HEAP32[$0>>2]|0;
                  $2237 = HEAP32[$2236>>2]|0;
                  $2238 = ($2235>>>0)<($2237>>>0);
                  if ($2238) {
                   $$7287372 = $2234;$$7373 = $2235;
                  } else {
                   break L919;
                  }
                 }
                 break;
                }
                default: {
                 break L958;
                }
                }
               }
              } while(0);
              $2239 = HEAP32[$5>>2]|0;
              $2240 = HEAP32[$2111>>2]|0;
              $2241 = ($2240|0)==(0);
              if ($1937) {
               if ($2241) {
                break;
               }
               $$8369 = 0;
               while(1) {
                $2242 = (($2239) + ($$8369)|0);
                $2243 = HEAP8[$2242>>0]|0;
                $2244 = (($1946) + ($$8369)|0);
                HEAP8[$2244>>0] = $2243;
                $2245 = (($$8369) + 1)|0;
                $2246 = HEAP32[$2111>>2]|0;
                $2247 = ($2245>>>0)<($2246>>>0);
                if ($2247) {
                 $$8369 = $2245;
                } else {
                 break;
                }
               }
              } else {
               if ($2241) {
                break;
               }
               $$8288365 = $1946;$$9366 = 0;
               while(1) {
                $2248 = (($2239) + ($$9366)|0);
                $2249 = HEAP8[$2248>>0]|0;
                $2250 = ((($$8288365)) + 1|0);
                HEAP8[$$8288365>>0] = $2249;
                $2251 = ((($$8288365)) + 2|0);
                HEAP8[$2250>>0] = -1;
                $2252 = (($$9366) + 1)|0;
                $2253 = HEAP32[$0>>2]|0;
                $2254 = HEAP32[$2253>>2]|0;
                $2255 = ($2252>>>0)<($2254>>>0);
                if ($2255) {
                 $$8288365 = $2251;$$9366 = $2252;
                } else {
                 break;
                }
               }
              }
             }
            } while(0);
            $2256 = (($$0279404) + 1)|0;
            $2257 = HEAP32[$0>>2]|0;
            $2258 = ((($2257)) + 4|0);
            $2259 = HEAP32[$2258>>2]|0;
            $2260 = ($2256>>>0)<($2259>>>0);
            if ($2260) {
             $$0279404 = $2256;$1943 = $2257;
            } else {
             break;
            }
           }
           $$pre479 = ((($2257)) + 8|0);
           $$lcssa = $2257;$$pre$phi480Z2D = $$pre479;
          }
          $2261 = HEAP32[$$pre$phi480Z2D>>2]|0;
          $2262 = ($2261|0)>(0);
          if ($2262) {
           $$01$i$i = 0;
           while(1) {
            $2263 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 48|0);
            $2264 = HEAP32[$2263>>2]|0;
            $2265 = ($2264|0)==(0|0);
            if (!($2265)) {
             $2266 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 44|0);
             _free($2264);
             HEAP32[$2263>>2] = 0;
             HEAP32[$2266>>2] = 0;
            }
            $2267 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 52|0);
            $2268 = HEAP32[$2267>>2]|0;
            $2269 = ($2268|0)==(0|0);
            if (!($2269)) {
             $2270 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 60|0);
             _free($2268);
             HEAP32[$2267>>2] = 0;
             HEAP32[$2270>>2] = 0;
            }
            $2271 = (((((($0)) + 18076|0) + (($$01$i$i*72)|0)|0)) + 56|0);
            $2272 = HEAP32[$2271>>2]|0;
            $2273 = ($2272|0)==(0|0);
            if (!($2273)) {
             _free($2272);
             HEAP32[$2271>>2] = 0;
            }
            $2274 = (($$01$i$i) + 1)|0;
            $exitcond$i$i = ($2274|0)==($2261|0);
            if ($exitcond$i$i) {
             break;
            } else {
             $$01$i$i = $2274;
            }
           }
           $$pre477 = HEAP32[$0>>2]|0;
           $2276 = $$pre477;
          } else {
           $2276 = $$lcssa;
          }
          $2275 = HEAP32[$2276>>2]|0;
          HEAP32[$1>>2] = $2275;
          $2277 = ((($2276)) + 4|0);
          $2278 = HEAP32[$2277>>2]|0;
          HEAP32[$2>>2] = $2278;
          $2279 = ($3|0)==(0|0);
          if ($2279) {
           $$2 = $1918;
           break L893;
          }
          $2280 = ((($2276)) + 8|0);
          $2281 = HEAP32[$2280>>2]|0;
          $2282 = ($2281|0)>(2);
          $2283 = $2282 ? 3 : 1;
          HEAP32[$3>>2] = $2283;
          $$2 = $1918;
          break L893;
         }
        }
       }
      }
     } while(0);
     $1920 = HEAP32[$1834>>2]|0;
     $1921 = ($1920|0)>(0);
     if ($1921) {
      $$01$i$i300 = 0;
      while(1) {
       $1922 = (((((($0)) + 18076|0) + (($$01$i$i300*72)|0)|0)) + 48|0);
       $1923 = HEAP32[$1922>>2]|0;
       $1924 = ($1923|0)==(0|0);
       if (!($1924)) {
        $1925 = (((((($0)) + 18076|0) + (($$01$i$i300*72)|0)|0)) + 44|0);
        _free($1923);
        HEAP32[$1922>>2] = 0;
        HEAP32[$1925>>2] = 0;
       }
       $1926 = (((((($0)) + 18076|0) + (($$01$i$i300*72)|0)|0)) + 52|0);
       $1927 = HEAP32[$1926>>2]|0;
       $1928 = ($1927|0)==(0|0);
       if (!($1928)) {
        $1929 = (((((($0)) + 18076|0) + (($$01$i$i300*72)|0)|0)) + 60|0);
        _free($1927);
        HEAP32[$1926>>2] = 0;
        HEAP32[$1929>>2] = 0;
       }
       $1930 = (((((($0)) + 18076|0) + (($$01$i$i300*72)|0)|0)) + 56|0);
       $1931 = HEAP32[$1930>>2]|0;
       $1932 = ($1931|0)==(0|0);
       if (!($1932)) {
        _free($1931);
        HEAP32[$1930>>2] = 0;
       }
       $1933 = (($$01$i$i300) + 1)|0;
       $exitcond$i$i301 = ($1933|0)==($1920|0);
       if ($exitcond$i$i301) {
        $$2 = 0;
        break;
       } else {
        $$01$i$i300 = $1933;
       }
      }
     } else {
      $$2 = 0;
     }
    }
   } while(0);
   $$3 = $$2;
   STACKTOP = sp;return ($$3|0);
  }
 } while(0);
 $1816 = HEAP32[$0>>2]|0;
 $1817 = ((($1816)) + 8|0);
 $1818 = HEAP32[$1817>>2]|0;
 $1819 = ($1818|0)>(0);
 if (!($1819)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $$01$i$i292 = 0;
 while(1) {
  $1820 = (((((($0)) + 18076|0) + (($$01$i$i292*72)|0)|0)) + 48|0);
  $1821 = HEAP32[$1820>>2]|0;
  $1822 = ($1821|0)==(0|0);
  if (!($1822)) {
   $1823 = (((((($0)) + 18076|0) + (($$01$i$i292*72)|0)|0)) + 44|0);
   _free($1821);
   HEAP32[$1820>>2] = 0;
   HEAP32[$1823>>2] = 0;
  }
  $1824 = (((((($0)) + 18076|0) + (($$01$i$i292*72)|0)|0)) + 52|0);
  $1825 = HEAP32[$1824>>2]|0;
  $1826 = ($1825|0)==(0|0);
  if (!($1826)) {
   $1827 = (((((($0)) + 18076|0) + (($$01$i$i292*72)|0)|0)) + 60|0);
   _free($1825);
   HEAP32[$1824>>2] = 0;
   HEAP32[$1827>>2] = 0;
  }
  $1828 = (((((($0)) + 18076|0) + (($$01$i$i292*72)|0)|0)) + 56|0);
  $1829 = HEAP32[$1828>>2]|0;
  $1830 = ($1829|0)==(0|0);
  if (!($1830)) {
   _free($1829);
   HEAP32[$1828>>2] = 0;
  }
  $1831 = (($$01$i$i292) + 1)|0;
  $exitcond$i$i293 = ($1831|0)==($1818|0);
  if ($exitcond$i$i293) {
   $$3 = 0;
   break;
  } else {
   $$01$i$i292 = $1831;
  }
 }
 STACKTOP = sp;return ($$3|0);
}
function _stbi__check_png_header($0) {
 $0 = $0|0;
 var $$0$i = 0, $$0$i$1 = 0, $$0$i$2 = 0, $$0$i$3 = 0, $$0$i$4 = 0, $$0$i$5 = 0, $$0$i$6 = 0, $$0$i$7 = 0, $$05 = 0, $$pre$i = 0, $$pre$i$1 = 0, $$pre$i$2 = 0, $$pre$i$3 = 0, $$pre$i$4 = 0, $$pre$i$5 = 0, $$pre$i$6 = 0, $$pre$i$7 = 0, $$sink$i$i = 0, $$sink$i$i$1 = 0, $$sink$i$i$2 = 0;
 var $$sink$i$i$3 = 0, $$sink$i$i$4 = 0, $$sink$i$i$5 = 0, $$sink$i$i$6 = 0, $$sink$i$i$7 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 168|0);
 $2 = ((($0)) + 172|0);
 $3 = ((($0)) + 32|0);
 $4 = ((($0)) + 16|0);
 $5 = ((($0)) + 28|0);
 $6 = ((($0)) + 40|0);
 $7 = ((($0)) + 36|0);
 $8 = ((($0)) + 41|0);
 $9 = HEAP32[$1>>2]|0;
 $10 = HEAP32[$2>>2]|0;
 $11 = ($9>>>0)<($10>>>0);
 if ($11) {
  $15 = ((($9)) + 1|0);
  HEAP32[$1>>2] = $15;
  $16 = HEAP8[$9>>0]|0;
  $$0$i = $16;$13 = $15;$14 = $10;
  label = 9;
 } else {
  $17 = HEAP32[$3>>2]|0;
  $18 = ($17|0)==(0);
  if (!($18)) {
   $19 = HEAP32[$4>>2]|0;
   $20 = HEAP32[$5>>2]|0;
   $21 = HEAP32[$7>>2]|0;
   $22 = (ftCall_iiii($19|0,$20,$6,$21)|0);
   $23 = ($22|0)==(0);
   if ($23) {
    HEAP32[$3>>2] = 0;
    HEAP8[$6>>0] = 0;
    $$sink$i$i = $8;$121 = 0;
   } else {
    $24 = (((($0)) + 40|0) + ($22)|0);
    $$pre$i = HEAP8[$6>>0]|0;
    $$sink$i$i = $24;$121 = $$pre$i;
   }
   HEAP32[$2>>2] = $$sink$i$i;
   HEAP32[$1>>2] = $8;
   $$0$i = $121;$13 = $8;$14 = $$sink$i$i;
   label = 9;
  }
 }
 do {
  if ((label|0) == 9) {
   $25 = ($$0$i<<24>>24)==(-119);
   if ($25) {
    $12 = ($13>>>0)<($14>>>0);
    if ($12) {
     $34 = ((($13)) + 1|0);
     HEAP32[$1>>2] = $34;
     $35 = HEAP8[$13>>0]|0;
     $$0$i$1 = $35;$38 = $34;$39 = $14;
    } else {
     $26 = HEAP32[$3>>2]|0;
     $27 = ($26|0)==(0);
     if ($27) {
      break;
     }
     $28 = HEAP32[$4>>2]|0;
     $29 = HEAP32[$5>>2]|0;
     $30 = HEAP32[$7>>2]|0;
     $31 = (ftCall_iiii($28|0,$29,$6,$30)|0);
     $32 = ($31|0)==(0);
     if ($32) {
      HEAP32[$3>>2] = 0;
      HEAP8[$6>>0] = 0;
      $$sink$i$i$1 = $8;$122 = 0;
     } else {
      $33 = (((($0)) + 40|0) + ($31)|0);
      $$pre$i$1 = HEAP8[$6>>0]|0;
      $$sink$i$i$1 = $33;$122 = $$pre$i$1;
     }
     HEAP32[$2>>2] = $$sink$i$i$1;
     HEAP32[$1>>2] = $8;
     $$0$i$1 = $122;$38 = $8;$39 = $$sink$i$i$1;
    }
    $36 = ($$0$i$1<<24>>24)==(80);
    if ($36) {
     $37 = ($38>>>0)<($39>>>0);
     if ($37) {
      $48 = ((($38)) + 1|0);
      HEAP32[$1>>2] = $48;
      $49 = HEAP8[$38>>0]|0;
      $$0$i$2 = $49;$52 = $48;$53 = $39;
     } else {
      $40 = HEAP32[$3>>2]|0;
      $41 = ($40|0)==(0);
      if ($41) {
       break;
      }
      $42 = HEAP32[$4>>2]|0;
      $43 = HEAP32[$5>>2]|0;
      $44 = HEAP32[$7>>2]|0;
      $45 = (ftCall_iiii($42|0,$43,$6,$44)|0);
      $46 = ($45|0)==(0);
      if ($46) {
       HEAP32[$3>>2] = 0;
       HEAP8[$6>>0] = 0;
       $$sink$i$i$2 = $8;$123 = 0;
      } else {
       $47 = (((($0)) + 40|0) + ($45)|0);
       $$pre$i$2 = HEAP8[$6>>0]|0;
       $$sink$i$i$2 = $47;$123 = $$pre$i$2;
      }
      HEAP32[$2>>2] = $$sink$i$i$2;
      HEAP32[$1>>2] = $8;
      $$0$i$2 = $123;$52 = $8;$53 = $$sink$i$i$2;
     }
     $50 = ($$0$i$2<<24>>24)==(78);
     if ($50) {
      $51 = ($52>>>0)<($53>>>0);
      if ($51) {
       $62 = ((($52)) + 1|0);
       HEAP32[$1>>2] = $62;
       $63 = HEAP8[$52>>0]|0;
       $$0$i$3 = $63;$66 = $62;$67 = $53;
      } else {
       $54 = HEAP32[$3>>2]|0;
       $55 = ($54|0)==(0);
       if ($55) {
        break;
       }
       $56 = HEAP32[$4>>2]|0;
       $57 = HEAP32[$5>>2]|0;
       $58 = HEAP32[$7>>2]|0;
       $59 = (ftCall_iiii($56|0,$57,$6,$58)|0);
       $60 = ($59|0)==(0);
       if ($60) {
        HEAP32[$3>>2] = 0;
        HEAP8[$6>>0] = 0;
        $$sink$i$i$3 = $8;$124 = 0;
       } else {
        $61 = (((($0)) + 40|0) + ($59)|0);
        $$pre$i$3 = HEAP8[$6>>0]|0;
        $$sink$i$i$3 = $61;$124 = $$pre$i$3;
       }
       HEAP32[$2>>2] = $$sink$i$i$3;
       HEAP32[$1>>2] = $8;
       $$0$i$3 = $124;$66 = $8;$67 = $$sink$i$i$3;
      }
      $64 = ($$0$i$3<<24>>24)==(71);
      if ($64) {
       $65 = ($66>>>0)<($67>>>0);
       if ($65) {
        $76 = ((($66)) + 1|0);
        HEAP32[$1>>2] = $76;
        $77 = HEAP8[$66>>0]|0;
        $$0$i$4 = $77;$80 = $76;$81 = $67;
       } else {
        $68 = HEAP32[$3>>2]|0;
        $69 = ($68|0)==(0);
        if ($69) {
         break;
        }
        $70 = HEAP32[$4>>2]|0;
        $71 = HEAP32[$5>>2]|0;
        $72 = HEAP32[$7>>2]|0;
        $73 = (ftCall_iiii($70|0,$71,$6,$72)|0);
        $74 = ($73|0)==(0);
        if ($74) {
         HEAP32[$3>>2] = 0;
         HEAP8[$6>>0] = 0;
         $$sink$i$i$4 = $8;$125 = 0;
        } else {
         $75 = (((($0)) + 40|0) + ($73)|0);
         $$pre$i$4 = HEAP8[$6>>0]|0;
         $$sink$i$i$4 = $75;$125 = $$pre$i$4;
        }
        HEAP32[$2>>2] = $$sink$i$i$4;
        HEAP32[$1>>2] = $8;
        $$0$i$4 = $125;$80 = $8;$81 = $$sink$i$i$4;
       }
       $78 = ($$0$i$4<<24>>24)==(13);
       if ($78) {
        $79 = ($80>>>0)<($81>>>0);
        if ($79) {
         $90 = ((($80)) + 1|0);
         HEAP32[$1>>2] = $90;
         $91 = HEAP8[$80>>0]|0;
         $$0$i$5 = $91;$94 = $90;$95 = $81;
        } else {
         $82 = HEAP32[$3>>2]|0;
         $83 = ($82|0)==(0);
         if ($83) {
          break;
         }
         $84 = HEAP32[$4>>2]|0;
         $85 = HEAP32[$5>>2]|0;
         $86 = HEAP32[$7>>2]|0;
         $87 = (ftCall_iiii($84|0,$85,$6,$86)|0);
         $88 = ($87|0)==(0);
         if ($88) {
          HEAP32[$3>>2] = 0;
          HEAP8[$6>>0] = 0;
          $$sink$i$i$5 = $8;$126 = 0;
         } else {
          $89 = (((($0)) + 40|0) + ($87)|0);
          $$pre$i$5 = HEAP8[$6>>0]|0;
          $$sink$i$i$5 = $89;$126 = $$pre$i$5;
         }
         HEAP32[$2>>2] = $$sink$i$i$5;
         HEAP32[$1>>2] = $8;
         $$0$i$5 = $126;$94 = $8;$95 = $$sink$i$i$5;
        }
        $92 = ($$0$i$5<<24>>24)==(10);
        if ($92) {
         $93 = ($94>>>0)<($95>>>0);
         if ($93) {
          $104 = ((($94)) + 1|0);
          HEAP32[$1>>2] = $104;
          $105 = HEAP8[$94>>0]|0;
          $$0$i$6 = $105;$108 = $104;$109 = $95;
         } else {
          $96 = HEAP32[$3>>2]|0;
          $97 = ($96|0)==(0);
          if ($97) {
           break;
          }
          $98 = HEAP32[$4>>2]|0;
          $99 = HEAP32[$5>>2]|0;
          $100 = HEAP32[$7>>2]|0;
          $101 = (ftCall_iiii($98|0,$99,$6,$100)|0);
          $102 = ($101|0)==(0);
          if ($102) {
           HEAP32[$3>>2] = 0;
           HEAP8[$6>>0] = 0;
           $$sink$i$i$6 = $8;$127 = 0;
          } else {
           $103 = (((($0)) + 40|0) + ($101)|0);
           $$pre$i$6 = HEAP8[$6>>0]|0;
           $$sink$i$i$6 = $103;$127 = $$pre$i$6;
          }
          HEAP32[$2>>2] = $$sink$i$i$6;
          HEAP32[$1>>2] = $8;
          $$0$i$6 = $127;$108 = $8;$109 = $$sink$i$i$6;
         }
         $106 = ($$0$i$6<<24>>24)==(26);
         if ($106) {
          $107 = ($108>>>0)<($109>>>0);
          if ($107) {
           $118 = ((($108)) + 1|0);
           HEAP32[$1>>2] = $118;
           $119 = HEAP8[$108>>0]|0;
           $$0$i$7 = $119;
          } else {
           $110 = HEAP32[$3>>2]|0;
           $111 = ($110|0)==(0);
           if ($111) {
            break;
           }
           $112 = HEAP32[$4>>2]|0;
           $113 = HEAP32[$5>>2]|0;
           $114 = HEAP32[$7>>2]|0;
           $115 = (ftCall_iiii($112|0,$113,$6,$114)|0);
           $116 = ($115|0)==(0);
           if ($116) {
            HEAP32[$3>>2] = 0;
            HEAP8[$6>>0] = 0;
            $$sink$i$i$7 = $8;$128 = 0;
           } else {
            $117 = (((($0)) + 40|0) + ($115)|0);
            $$pre$i$7 = HEAP8[$6>>0]|0;
            $$sink$i$i$7 = $117;$128 = $$pre$i$7;
           }
           HEAP32[$2>>2] = $$sink$i$i$7;
           HEAP32[$1>>2] = $8;
           $$0$i$7 = $128;
          }
          $120 = ($$0$i$7<<24>>24)==(10);
          if ($120) {
           $$05 = 1;
           return ($$05|0);
          }
         }
        }
       }
      }
     }
    }
   }
  }
 } while(0);
 $$05 = 0;
 return ($$05|0);
}
function _stbi__parse_png_file($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$ = 0, $$0$i$i = 0, $$0$i$i345 = 0, $$0$i264 = 0, $$0$i270 = 0, $$0$i295 = 0, $$0$i304 = 0, $$0$i311 = 0, $$0$i323 = 0, $$0$i330 = 0, $$0$i337 = 0, $$0$i359 = 0, $$0$i8$i = 0, $$0$i8$i352 = 0, $$0103118$i = 0, $$0106115$us$i = 0, $$0107114$us$i = 0, $$0206 = 0, $$0211 = 0, $$0214 = 0;
 var $$0217 = 0, $$0227670 = 0, $$0229 = 0, $$0232 = 0, $$0236 = 0, $$0240668 = 0, $$0242 = 0, $$0246 = 0, $$03$i = 0, $$03$i282 = 0, $$0322$i = 0, $$0322$i283 = 0, $$04$i = 0, $$0543$i = 0, $$0573$i = 0, $$0582$i = 0, $$095120$i = 0, $$099119$i = 0, $$1207 = 0, $$1212 = 0;
 var $$1215 = 0, $$1218 = 0, $$1228665 = 0, $$1230 = 0, $$1241666 = 0, $$1247 = 0, $$1334$i = 0, $$1334$i287 = 0, $$15$i = 0, $$15$i278 = 0, $$15$i286 = 0, $$1558$i = 0, $$1594$i = 0, $$19$i = 0, $$2219 = 0, $$2234 = 0, $$2238 = 0, $$2244 = 0, $$2565$i = 0, $$26$i = 0;
 var $$3102$ph$i = 0, $$3209 = 0, $$3220 = 0, $$398$ph$i = 0, $$4221 = 0, $$7 = 0, $$idx$val = 0, $$idx$val$idx$val = 0, $$idx$val$idx251 = 0, $$idx$val$idx251$val = 0, $$idx250$val = 0, $$idx252$val = 0, $$idx252$val$idx$val = 0, $$idx252$val$idx254 = 0, $$idx252$val$idx254$val = 0, $$idx252$val$idx255 = 0, $$idx252$val$idx255$val = 0, $$idx253$val = 0, $$lobit = 0, $$mux = 0;
 var $$ph = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i340 = 0, $$pre$i257 = 0, $$pre$i262 = 0, $$pre$i265 = 0, $$pre$i290 = 0, $$pre$i297 = 0, $$pre$i299 = 0, $$pre$i3$i = 0, $$pre$i3$i347 = 0, $$pre$i306 = 0, $$pre$i315 = 0, $$pre$i318 = 0, $$pre$i325 = 0, $$pre$i332 = 0, $$pre$i354 = 0, $$pre122$pre$i = 0, $$pre123$pre$i = 0;
 var $$pre36$i = 0, $$pre946 = 0, $$pre947 = 0, $$pre948 = 0, $$pre949 = 0, $$pre950 = 0, $$pre951 = 0, $$pre952 = 0, $$pre953 = 0, $$pre954 = 0, $$sink = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i343 = 0, $$sink$i$i268 = 0, $$sink$i$i293 = 0, $$sink$i$i302 = 0, $$sink$i$i309 = 0, $$sink$i$i321 = 0, $$sink$i$i328 = 0;
 var $$sink$i$i335 = 0, $$sink$i$i357 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i350 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0;
 var $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0;
 var $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0;
 var $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0;
 var $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0;
 var $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0;
 var $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0;
 var $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0;
 var $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0;
 var $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0;
 var $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0;
 var $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0;
 var $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0;
 var $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0;
 var $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0;
 var $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0;
 var $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0;
 var $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0;
 var $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0;
 var $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0;
 var $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0;
 var $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0;
 var $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0;
 var $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0;
 var $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0;
 var $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0;
 var $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0;
 var $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0;
 var $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0;
 var $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0;
 var $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0;
 var $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $68 = 0;
 var $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0;
 var $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $exitcond = 0, $exitcond$i = 0, $exitcond$i273 = 0, $exitcond$i276 = 0, $exitcond$i284 = 0;
 var $exitcond13$i = 0, $exitcond14$i = 0, $exitcond8$i = 0, $exitcond8$i279 = 0, $exitcond8$i288 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond1 = 0, $or$cond126$i = 0, $or$cond2 = 0, $or$cond249 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond5$not = 0, $or$cond7 = 0, $or$cond9 = 0, $spec$select = 0, $switch$split122D = 0, $switch$split152D = 0, $switch$split182D = 0;
 var $switch$split2D = 0, $switch$split92D = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 5120|0;
 $3 = sp + 1024|0;
 $4 = sp;
 $5 = sp + 5102|0;
 $6 = sp + 5096|0;
 $7 = HEAP32[$0>>2]|0;
 $8 = ((($0)) + 8|0);
 HEAP32[$8>>2] = 0;
 $9 = ((($0)) + 4|0);
 HEAP32[$9>>2] = 0;
 $10 = ((($0)) + 12|0);
 HEAP32[$10>>2] = 0;
 $11 = (_stbi__check_png_header($7)|0);
 $12 = ($11|0)==(0);
 if ($12) {
  $$7 = 0;
  STACKTOP = sp;return ($$7|0);
 }
 $13 = ($1|0)==(1);
 if ($13) {
  $$7 = 1;
  STACKTOP = sp;return ($$7|0);
 }
 $14 = ((($7)) + 172|0);
 $15 = ((($7)) + 168|0);
 $16 = ((($7)) + 16|0);
 $17 = ($1|0)==(2);
 $18 = ((($7)) + 20|0);
 $19 = ((($7)) + 28|0);
 $20 = ((($7)) + 4|0);
 $21 = ((($7)) + 8|0);
 $22 = ((($7)) + 32|0);
 $23 = ((($7)) + 40|0);
 $24 = ((($7)) + 36|0);
 $25 = ((($7)) + 41|0);
 $26 = ((($0)) + 16|0);
 $$0206 = 0;$$0211 = 0;$$0214 = 0;$$0217 = 0;$$0229 = 0;$$0232 = 0;$$0236 = 0;$$0242 = 1;$$0246 = 0;
 L7: while(1) {
  $27 = (_stbi__get32be($7)|0);
  $28 = (_stbi__get32be($7)|0);
  $switch$split2D = ($28|0)<(1229472850);
  L9: do {
   if ($switch$split2D) {
    $switch$split92D = ($28|0)<(1229209940);
    if ($switch$split92D) {
     switch ($28|0) {
     case 1130840649:  {
      break;
     }
     default: {
      label = 250;
      break L9;
     }
     }
     $29 = ($27|0)<(0);
     if ($29) {
      $30 = HEAP32[$14>>2]|0;
      HEAP32[$15>>2] = $30;
      $$1212 = $$0211;$$1215 = $$0214;$$1230 = 1;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = $$0242;$$3209 = $$0206;$$4221 = $$0217;
      break;
     }
     $31 = HEAP32[$16>>2]|0;
     $32 = ($31|0)==(0|0);
     if ($32) {
      $$pre$i = HEAP32[$15>>2]|0;
      $43 = $$pre$i;
     } else {
      $33 = HEAP32[$14>>2]|0;
      $34 = HEAP32[$15>>2]|0;
      $35 = $33;
      $36 = (($35) - ($34))|0;
      $37 = ($27|0)>($36|0);
      $38 = $34;
      if ($37) {
       HEAP32[$15>>2] = $33;
       $39 = HEAP32[$18>>2]|0;
       $40 = HEAP32[$19>>2]|0;
       $41 = (($27) - ($36))|0;
       ftCall_vii($39|0,$40,$41);
       $$1212 = $$0211;$$1215 = $$0214;$$1230 = 1;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = $$0242;$$3209 = $$0206;$$4221 = $$0217;
       break;
      } else {
       $43 = $38;
      }
     }
     $42 = (($43) + ($27)|0);
     HEAP32[$15>>2] = $42;
     $$1212 = $$0211;$$1215 = $$0214;$$1230 = 1;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = $$0242;$$3209 = $$0206;$$4221 = $$0217;
     break;
    }
    $switch$split152D = ($28|0)<(1229278788);
    if (!($switch$split152D)) {
     switch ($28|0) {
     case 1229278788:  {
      label = 160;
      break L7;
      break;
     }
     default: {
      label = 250;
      break L9;
     }
     }
    }
    switch ($28|0) {
    case 1229209940:  {
     break;
    }
    default: {
     label = 250;
     break L9;
    }
    }
    $301 = ($$0242|0)==(0);
    if (!($301)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $302 = ($$0206<<24>>24)==(0);
    $303 = ($$0246|0)!=(0);
    $or$cond = $303 | $302;
    if (!($or$cond)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    if ($17) {
     label = 146;
     break L7;
    }
    $305 = (($27) + ($$0214))|0;
    $306 = ($305|0)<($$0214|0);
    if ($306) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $307 = ($305>>>0)>($$0217>>>0);
    if ($307) {
     $308 = ($$0217|0)==(0);
     $309 = ($27>>>0)>(4096);
     $310 = $309 ? $27 : 4096;
     $$1218 = $308 ? $310 : $$0217;
     $$2219 = $$1218;
     while(1) {
      $311 = ($305>>>0)>($$2219>>>0);
      $312 = $$2219 << 1;
      if ($311) {
       $$2219 = $312;
      } else {
       break;
      }
     }
     $313 = HEAP32[$9>>2]|0;
     $314 = (_realloc($313,$$2219)|0);
     $315 = ($314|0)==(0|0);
     if ($315) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     HEAP32[$9>>2] = $314;
     $$3220 = $$2219;$317 = $314;
    } else {
     $$pre946 = HEAP32[$9>>2]|0;
     $$3220 = $$0217;$317 = $$pre946;
    }
    $316 = (($317) + ($$0214)|0);
    $318 = HEAP32[$16>>2]|0;
    $319 = ($318|0)==(0|0);
    if ($319) {
     $$pre$i315 = HEAP32[$15>>2]|0;
     $$pre36$i = HEAP32[$14>>2]|0;
     $327 = $$pre$i315;$329 = $$pre36$i;
    } else {
     $320 = HEAP32[$14>>2]|0;
     $321 = HEAP32[$15>>2]|0;
     $322 = $321;
     $323 = (($320) - ($322))|0;
     $324 = ($27|0)>($323|0);
     $325 = $320;
     if ($324) {
      _memcpy(($316|0),($321|0),($323|0))|0;
      $332 = HEAP32[$16>>2]|0;
      $333 = HEAP32[$19>>2]|0;
      $334 = (($316) + ($323)|0);
      $335 = (($27) - ($323))|0;
      $336 = (ftCall_iiii($332|0,$333,$334,$335)|0);
      $337 = ($336|0)==($335|0);
      $338 = HEAP32[$14>>2]|0;
      HEAP32[$15>>2] = $338;
      if ($337) {
       $$1212 = $$0211;$$1215 = $305;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$3220;
       break;
      } else {
       $$7 = 0;
       label = 261;
       break L7;
      }
     } else {
      $327 = $321;$329 = $325;
     }
    }
    $326 = (($327) + ($27)|0);
    $328 = ($326>>>0)>($329>>>0);
    if ($328) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    _memcpy(($316|0),($327|0),($27|0))|0;
    $330 = HEAP32[$15>>2]|0;
    $331 = (($330) + ($27)|0);
    HEAP32[$15>>2] = $331;
    $$1212 = $$0211;$$1215 = $305;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$3220;
   } else {
    $switch$split122D = ($28|0)<(1347179589);
    if ($switch$split122D) {
     switch ($28|0) {
     case 1229472850:  {
      break;
     }
     default: {
      label = 250;
      break L9;
     }
     }
     $44 = ($$0242|0)!=(0);
     $45 = ($27|0)==(13);
     $or$cond1 = $44 & $45;
     if (!($or$cond1)) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $46 = (_stbi__get32be($7)|0);
     HEAP32[$7>>2] = $46;
     $47 = ($46>>>0)>(16777216);
     if ($47) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $48 = (_stbi__get32be($7)|0);
     HEAP32[$20>>2] = $48;
     $49 = ($48>>>0)>(16777216);
     if ($49) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $50 = HEAP32[$15>>2]|0;
     $51 = HEAP32[$14>>2]|0;
     $52 = ($50>>>0)<($51>>>0);
     if ($52) {
      $53 = ((($50)) + 1|0);
      HEAP32[$15>>2] = $53;
      $54 = HEAP8[$50>>0]|0;
      $$0$i264 = $54;$65 = $53;$66 = $51;
     } else {
      $55 = HEAP32[$22>>2]|0;
      $56 = ($55|0)==(0);
      if ($56) {
       label = 18;
       break L7;
      }
      $57 = HEAP32[$16>>2]|0;
      $58 = HEAP32[$19>>2]|0;
      $59 = HEAP32[$24>>2]|0;
      $60 = (ftCall_iiii($57|0,$58,$23,$59)|0);
      $61 = ($60|0)==(0);
      if ($61) {
       HEAP32[$22>>2] = 0;
       HEAP8[$23>>0] = 0;
       $$sink$i$i = $25;$646 = 0;
      } else {
       $62 = (((($7)) + 40|0) + ($60)|0);
       $$pre$i262 = HEAP8[$23>>0]|0;
       $$sink$i$i = $62;$646 = $$pre$i262;
      }
      HEAP32[$14>>2] = $$sink$i$i;
      HEAP32[$15>>2] = $25;
      $$0$i264 = $646;$65 = $25;$66 = $$sink$i$i;
     }
     $63 = $$0$i264&255;
     HEAP32[$26>>2] = $63;
     switch ($$0$i264<<24>>24) {
     case 16: case 8: case 4: case 2: case 1:  {
      break;
     }
     default: {
      $$7 = 0;
      label = 261;
      break L7;
     }
     }
     $64 = ($65>>>0)<($66>>>0);
     if ($64) {
      $67 = ((($65)) + 1|0);
      HEAP32[$15>>2] = $67;
      $68 = HEAP8[$65>>0]|0;
      $$0$i270 = $68;$647 = $66;$648 = $67;
      label = 31;
     } else {
      $69 = HEAP32[$22>>2]|0;
      $70 = ($69|0)==(0);
      if ($70) {
       $$1207 = $$0206;$133 = 0;$85 = $65;$86 = $66;
      } else {
       $71 = HEAP32[$16>>2]|0;
       $72 = HEAP32[$19>>2]|0;
       $73 = HEAP32[$24>>2]|0;
       $74 = (ftCall_iiii($71|0,$72,$23,$73)|0);
       $75 = ($74|0)==(0);
       if ($75) {
        HEAP32[$22>>2] = 0;
        HEAP8[$23>>0] = 0;
        $$sink$i$i268 = $25;$649 = 0;
       } else {
        $76 = (((($7)) + 40|0) + ($74)|0);
        $$pre$i265 = HEAP8[$23>>0]|0;
        $$sink$i$i268 = $76;$649 = $$pre$i265;
       }
       HEAP32[$14>>2] = $$sink$i$i268;
       HEAP32[$15>>2] = $25;
       $$0$i270 = $649;$647 = $$sink$i$i268;$648 = $25;
       label = 31;
      }
     }
     do {
      if ((label|0) == 31) {
       label = 0;
       $77 = $$0$i270&255;
       $78 = ($$0$i270&255)>(6);
       if ($78) {
        $$7 = 0;
        label = 261;
        break L7;
       }
       $79 = ($$0$i270<<24>>24)==(3);
       if ($79) {
        $80 = HEAP32[$26>>2]|0;
        $81 = ($80|0)==(16);
        if ($81) {
         $$7 = 0;
         label = 261;
         break L7;
        } else {
         $$1207 = 3;$133 = 3;$85 = $648;$86 = $647;
         break;
        }
       } else {
        $82 = $77 & 1;
        $83 = ($82|0)==(0);
        if ($83) {
         $$1207 = $$0206;$133 = $77;$85 = $648;$86 = $647;
         break;
        } else {
         $$7 = 0;
         label = 261;
         break L7;
        }
       }
      }
     } while(0);
     $84 = ($85>>>0)<($86>>>0);
     if ($84) {
      $87 = ((($85)) + 1|0);
      HEAP32[$15>>2] = $87;
      $88 = HEAP8[$85>>0]|0;
      $$0$i295 = $88;$650 = $86;$651 = $87;
      label = 42;
     } else {
      $89 = HEAP32[$22>>2]|0;
      $90 = ($89|0)==(0);
      if ($90) {
       $100 = $86;$99 = $85;
      } else {
       $91 = HEAP32[$16>>2]|0;
       $92 = HEAP32[$19>>2]|0;
       $93 = HEAP32[$24>>2]|0;
       $94 = (ftCall_iiii($91|0,$92,$23,$93)|0);
       $95 = ($94|0)==(0);
       if ($95) {
        HEAP32[$22>>2] = 0;
        HEAP8[$23>>0] = 0;
        $$sink$i$i293 = $25;$652 = 0;
       } else {
        $96 = (((($7)) + 40|0) + ($94)|0);
        $$pre$i290 = HEAP8[$23>>0]|0;
        $$sink$i$i293 = $96;$652 = $$pre$i290;
       }
       HEAP32[$14>>2] = $$sink$i$i293;
       HEAP32[$15>>2] = $25;
       $$0$i295 = $652;$650 = $$sink$i$i293;$651 = $25;
       label = 42;
      }
     }
     if ((label|0) == 42) {
      label = 0;
      $97 = ($$0$i295<<24>>24)==(0);
      if ($97) {
       $100 = $650;$99 = $651;
      } else {
       $$7 = 0;
       label = 261;
       break L7;
      }
     }
     $98 = ($99>>>0)<($100>>>0);
     if ($98) {
      $101 = ((($99)) + 1|0);
      HEAP32[$15>>2] = $101;
      $102 = HEAP8[$99>>0]|0;
      $$0$i304 = $102;$653 = $100;$654 = $101;
      label = 50;
     } else {
      $103 = HEAP32[$22>>2]|0;
      $104 = ($103|0)==(0);
      if ($104) {
       $113 = $99;$114 = $100;
      } else {
       $105 = HEAP32[$16>>2]|0;
       $106 = HEAP32[$19>>2]|0;
       $107 = HEAP32[$24>>2]|0;
       $108 = (ftCall_iiii($105|0,$106,$23,$107)|0);
       $109 = ($108|0)==(0);
       if ($109) {
        HEAP32[$22>>2] = 0;
        HEAP8[$23>>0] = 0;
        $$sink$i$i302 = $25;$655 = 0;
       } else {
        $110 = (((($7)) + 40|0) + ($108)|0);
        $$pre$i299 = HEAP8[$23>>0]|0;
        $$sink$i$i302 = $110;$655 = $$pre$i299;
       }
       HEAP32[$14>>2] = $$sink$i$i302;
       HEAP32[$15>>2] = $25;
       $$0$i304 = $655;$653 = $$sink$i$i302;$654 = $25;
       label = 50;
      }
     }
     if ((label|0) == 50) {
      label = 0;
      $111 = ($$0$i304<<24>>24)==(0);
      if ($111) {
       $113 = $654;$114 = $653;
      } else {
       $$7 = 0;
       label = 261;
       break L7;
      }
     }
     $112 = ($113>>>0)<($114>>>0);
     if ($112) {
      $115 = ((($113)) + 1|0);
      HEAP32[$15>>2] = $115;
      $116 = HEAP8[$113>>0]|0;
      $$0$i311 = $116;
      label = 58;
     } else {
      $117 = HEAP32[$22>>2]|0;
      $118 = ($117|0)==(0);
      if ($118) {
       $656 = 0;
      } else {
       $119 = HEAP32[$16>>2]|0;
       $120 = HEAP32[$19>>2]|0;
       $121 = HEAP32[$24>>2]|0;
       $122 = (ftCall_iiii($119|0,$120,$23,$121)|0);
       $123 = ($122|0)==(0);
       if ($123) {
        HEAP32[$22>>2] = 0;
        HEAP8[$23>>0] = 0;
        $$sink$i$i309 = $25;$657 = 0;
       } else {
        $124 = (((($7)) + 40|0) + ($122)|0);
        $$pre$i306 = HEAP8[$23>>0]|0;
        $$sink$i$i309 = $124;$657 = $$pre$i306;
       }
       HEAP32[$14>>2] = $$sink$i$i309;
       HEAP32[$15>>2] = $25;
       $$0$i311 = $657;
       label = 58;
      }
     }
     if ((label|0) == 58) {
      label = 0;
      $125 = $$0$i311&255;
      $126 = ($$0$i311&255)>(1);
      if ($126) {
       $$7 = 0;
       label = 261;
       break L7;
      } else {
       $656 = $125;
      }
     }
     $127 = HEAP32[$7>>2]|0;
     $128 = ($127|0)==(0);
     if ($128) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $129 = HEAP32[$20>>2]|0;
     $130 = ($129|0)==(0);
     if ($130) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $131 = ($$1207<<24>>24)==(0);
     if ($131) {
      $132 = $133 & 2;
      $134 = $132 | 1;
      $135 = $133 >>> 2;
      $$lobit = $135 & 1;
      $136 = (($134) + ($$lobit))|0;
      HEAP32[$21>>2] = $136;
      $137 = (1073741824 / ($127>>>0))&-1;
      $138 = (($137>>>0) / ($136>>>0))&-1;
      $139 = ($138>>>0)<($129>>>0);
      $brmerge = $139 | $17;
      $$mux = $139 ? 0 : 1;
      if ($brmerge) {
       $$7 = $$mux;
       label = 261;
       break L7;
      } else {
       $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $133;$$2238 = $656;$$2244 = 0;$$3209 = 0;$$4221 = $$0217;
       break;
      }
     } else {
      HEAP32[$21>>2] = 1;
      $140 = (1073741824 / ($127>>>0))&-1;
      $141 = $140 >>> 2;
      $142 = ($141>>>0)<($129>>>0);
      if ($142) {
       $$7 = 0;
       label = 261;
       break L7;
      } else {
       $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $133;$$2238 = $656;$$2244 = 0;$$3209 = $$1207;$$4221 = $$0217;
       break;
      }
     }
    }
    $switch$split182D = ($28|0)<(1951551059);
    if ($switch$split182D) {
     switch ($28|0) {
     case 1347179589:  {
      break;
     }
     default: {
      label = 250;
      break L9;
     }
     }
     $143 = ($$0242|0)!=(0);
     $144 = ($27>>>0)>(768);
     $or$cond2 = $143 | $144;
     if ($or$cond2) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $145 = (($27>>>0) / 3)&-1;
     $146 = ($145*3)|0;
     $147 = ($146|0)==($27|0);
     if (!($147)) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $148 = ($27>>>0)>(2);
     if (!($148)) {
      $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $145;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$0217;
      break;
     }
     $$pre953 = HEAP32[$15>>2]|0;
     $$pre954 = HEAP32[$14>>2]|0;
     $$0227670 = 0;$150 = $$pre953;$151 = $$pre954;
     while(1) {
      $149 = ($150>>>0)<($151>>>0);
      if ($149) {
       $152 = ((($150)) + 1|0);
       HEAP32[$15>>2] = $152;
       $153 = HEAP8[$150>>0]|0;
       $$0$i323 = $153;$165 = $152;$166 = $151;
      } else {
       $154 = HEAP32[$22>>2]|0;
       $155 = ($154|0)==(0);
       if ($155) {
        $$0$i323 = 0;$165 = $150;$166 = $151;
       } else {
        $156 = HEAP32[$16>>2]|0;
        $157 = HEAP32[$19>>2]|0;
        $158 = HEAP32[$24>>2]|0;
        $159 = (ftCall_iiii($156|0,$157,$23,$158)|0);
        $160 = ($159|0)==(0);
        if ($160) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i321 = $25;$658 = 0;
        } else {
         $161 = (((($7)) + 40|0) + ($159)|0);
         $$pre$i318 = HEAP8[$23>>0]|0;
         $$sink$i$i321 = $161;$658 = $$pre$i318;
        }
        HEAP32[$14>>2] = $$sink$i$i321;
        HEAP32[$15>>2] = $25;
        $$0$i323 = $658;$165 = $25;$166 = $$sink$i$i321;
       }
      }
      $162 = $$0227670 << 2;
      $163 = (($4) + ($162)|0);
      HEAP8[$163>>0] = $$0$i323;
      $164 = ($165>>>0)<($166>>>0);
      if ($164) {
       $167 = ((($165)) + 1|0);
       HEAP32[$15>>2] = $167;
       $168 = HEAP8[$165>>0]|0;
       $$0$i330 = $168;$180 = $167;$181 = $166;
      } else {
       $169 = HEAP32[$22>>2]|0;
       $170 = ($169|0)==(0);
       if ($170) {
        $$0$i330 = 0;$180 = $165;$181 = $166;
       } else {
        $171 = HEAP32[$16>>2]|0;
        $172 = HEAP32[$19>>2]|0;
        $173 = HEAP32[$24>>2]|0;
        $174 = (ftCall_iiii($171|0,$172,$23,$173)|0);
        $175 = ($174|0)==(0);
        if ($175) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i328 = $25;$659 = 0;
        } else {
         $176 = (((($7)) + 40|0) + ($174)|0);
         $$pre$i325 = HEAP8[$23>>0]|0;
         $$sink$i$i328 = $176;$659 = $$pre$i325;
        }
        HEAP32[$14>>2] = $$sink$i$i328;
        HEAP32[$15>>2] = $25;
        $$0$i330 = $659;$180 = $25;$181 = $$sink$i$i328;
       }
      }
      $177 = $162 | 1;
      $178 = (($4) + ($177)|0);
      HEAP8[$178>>0] = $$0$i330;
      $179 = ($180>>>0)<($181>>>0);
      if ($179) {
       $182 = ((($180)) + 1|0);
       HEAP32[$15>>2] = $182;
       $183 = HEAP8[$180>>0]|0;
       $$0$i337 = $183;$660 = $181;$661 = $182;
      } else {
       $184 = HEAP32[$22>>2]|0;
       $185 = ($184|0)==(0);
       if ($185) {
        $$0$i337 = 0;$660 = $181;$661 = $180;
       } else {
        $186 = HEAP32[$16>>2]|0;
        $187 = HEAP32[$19>>2]|0;
        $188 = HEAP32[$24>>2]|0;
        $189 = (ftCall_iiii($186|0,$187,$23,$188)|0);
        $190 = ($189|0)==(0);
        if ($190) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i335 = $25;$662 = 0;
        } else {
         $191 = (((($7)) + 40|0) + ($189)|0);
         $$pre$i332 = HEAP8[$23>>0]|0;
         $$sink$i$i335 = $191;$662 = $$pre$i332;
        }
        HEAP32[$14>>2] = $$sink$i$i335;
        HEAP32[$15>>2] = $25;
        $$0$i337 = $662;$660 = $$sink$i$i335;$661 = $25;
       }
      }
      $192 = $162 | 2;
      $193 = (($4) + ($192)|0);
      HEAP8[$193>>0] = $$0$i337;
      $194 = $162 | 3;
      $195 = (($4) + ($194)|0);
      HEAP8[$195>>0] = -1;
      $196 = (($$0227670) + 1)|0;
      $197 = ($196>>>0)<($145>>>0);
      if ($197) {
       $$0227670 = $196;$150 = $661;$151 = $660;
      } else {
       $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $145;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$0217;
       break L9;
      }
     }
    }
    switch ($28|0) {
    case 1951551059:  {
     break;
    }
    default: {
     label = 250;
     break L9;
    }
    }
    $198 = ($$0242|0)==(0);
    if (!($198)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $199 = HEAP32[$9>>2]|0;
    $200 = ($199|0)==(0|0);
    if (!($200)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $201 = ($$0206<<24>>24)==(0);
    if (!($201)) {
     if ($17) {
      label = 94;
      break L7;
     }
     $202 = ($$0246|0)==(0);
     $203 = ($27>>>0)>($$0246>>>0);
     $or$cond3 = $202 | $203;
     if ($or$cond3) {
      $$7 = 0;
      label = 261;
      break L7;
     }
     $204 = ($27|0)==(0);
     if ($204) {
      $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 4;$$4221 = $$0217;
      break;
     }
     $$pre947 = HEAP32[$15>>2]|0;
     $$pre948 = HEAP32[$14>>2]|0;
     $$1228665 = 0;$206 = $$pre947;$207 = $$pre948;
     while(1) {
      $205 = ($206>>>0)<($207>>>0);
      if ($205) {
       $208 = ((($206)) + 1|0);
       HEAP32[$15>>2] = $208;
       $209 = HEAP8[$206>>0]|0;
       $$0$i359 = $209;$663 = $207;$664 = $208;
      } else {
       $210 = HEAP32[$22>>2]|0;
       $211 = ($210|0)==(0);
       if ($211) {
        $$0$i359 = 0;$663 = $207;$664 = $206;
       } else {
        $212 = HEAP32[$16>>2]|0;
        $213 = HEAP32[$19>>2]|0;
        $214 = HEAP32[$24>>2]|0;
        $215 = (ftCall_iiii($212|0,$213,$23,$214)|0);
        $216 = ($215|0)==(0);
        if ($216) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i357 = $25;$665 = 0;
        } else {
         $217 = (((($7)) + 40|0) + ($215)|0);
         $$pre$i354 = HEAP8[$23>>0]|0;
         $$sink$i$i357 = $217;$665 = $$pre$i354;
        }
        HEAP32[$14>>2] = $$sink$i$i357;
        HEAP32[$15>>2] = $25;
        $$0$i359 = $665;$663 = $$sink$i$i357;$664 = $25;
       }
      }
      $218 = $$1228665 << 2;
      $219 = $218 | 3;
      $220 = (($4) + ($219)|0);
      HEAP8[$220>>0] = $$0$i359;
      $221 = (($$1228665) + 1)|0;
      $exitcond = ($221|0)==($27|0);
      if ($exitcond) {
       $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 4;$$4221 = $$0217;
       break L9;
      } else {
       $$1228665 = $221;$206 = $664;$207 = $663;
      }
     }
    }
    $222 = HEAP32[$21>>2]|0;
    $223 = $222 & 1;
    $224 = ($223|0)!=(0);
    $225 = $222 << 1;
    $226 = ($27|0)==($225|0);
    $or$cond5 = $224 & $226;
    if (!($or$cond5)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $227 = HEAP32[$26>>2]|0;
    $228 = ($227|0)==(16);
    $229 = ($222|0)>(0);
    if ($228) {
     if (!($229)) {
      $$1212 = 1;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 0;$$4221 = $$0217;
      break;
     }
     $$pre951 = HEAP32[$15>>2]|0;
     $$pre952 = HEAP32[$14>>2]|0;
     $$0240668 = 0;$231 = $$pre951;$232 = $$pre952;
     while(1) {
      $230 = ($231>>>0)<($232>>>0);
      if ($230) {
       $233 = ((($231)) + 1|0);
       HEAP32[$15>>2] = $233;
       $234 = HEAP8[$231>>0]|0;
       $$0$i$i345 = $234;$246 = $233;$247 = $232;
      } else {
       $235 = HEAP32[$22>>2]|0;
       $236 = ($235|0)==(0);
       if ($236) {
        $$0$i$i345 = 0;$246 = $231;$247 = $232;
       } else {
        $237 = HEAP32[$16>>2]|0;
        $238 = HEAP32[$19>>2]|0;
        $239 = HEAP32[$24>>2]|0;
        $240 = (ftCall_iiii($237|0,$238,$23,$239)|0);
        $241 = ($240|0)==(0);
        if ($241) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i$i343 = $25;$666 = 0;
        } else {
         $242 = (((($7)) + 40|0) + ($240)|0);
         $$pre$i$i340 = HEAP8[$23>>0]|0;
         $$sink$i$i$i343 = $242;$666 = $$pre$i$i340;
        }
        HEAP32[$14>>2] = $$sink$i$i$i343;
        HEAP32[$15>>2] = $25;
        $$0$i$i345 = $666;$246 = $25;$247 = $$sink$i$i$i343;
       }
      }
      $243 = $$0$i$i345&255;
      $244 = $243 << 8;
      $245 = ($246>>>0)<($247>>>0);
      if ($245) {
       $248 = ((($246)) + 1|0);
       HEAP32[$15>>2] = $248;
       $249 = HEAP8[$246>>0]|0;
       $$0$i8$i352 = $249;$667 = $247;$668 = $248;
      } else {
       $250 = HEAP32[$22>>2]|0;
       $251 = ($250|0)==(0);
       if ($251) {
        $$0$i8$i352 = 0;$667 = $247;$668 = $246;
       } else {
        $252 = HEAP32[$16>>2]|0;
        $253 = HEAP32[$19>>2]|0;
        $254 = HEAP32[$24>>2]|0;
        $255 = (ftCall_iiii($252|0,$253,$23,$254)|0);
        $256 = ($255|0)==(0);
        if ($256) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i6$i350 = $25;$669 = 0;
        } else {
         $257 = (((($7)) + 40|0) + ($255)|0);
         $$pre$i3$i347 = HEAP8[$23>>0]|0;
         $$sink$i$i6$i350 = $257;$669 = $$pre$i3$i347;
        }
        HEAP32[$14>>2] = $$sink$i$i6$i350;
        HEAP32[$15>>2] = $25;
        $$0$i8$i352 = $669;$667 = $$sink$i$i6$i350;$668 = $25;
       }
      }
      $258 = $$0$i8$i352&255;
      $259 = $244 | $258;
      $260 = $259&65535;
      $261 = (($6) + ($$0240668<<1)|0);
      HEAP16[$261>>1] = $260;
      $262 = (($$0240668) + 1)|0;
      $263 = HEAP32[$21>>2]|0;
      $264 = ($262|0)<($263|0);
      if ($264) {
       $$0240668 = $262;$231 = $668;$232 = $667;
      } else {
       $$1212 = 1;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 0;$$4221 = $$0217;
       break L9;
      }
     }
    }
    if ($229) {
     $$pre949 = HEAP32[$15>>2]|0;
     $$pre950 = HEAP32[$14>>2]|0;
     $$1241666 = 0;$266 = $$pre949;$267 = $$pre950;
     while(1) {
      $265 = ($266>>>0)<($267>>>0);
      if ($265) {
       $268 = ((($266)) + 1|0);
       $$ph = $267;$$sink = $268;
       label = 134;
      } else {
       $269 = HEAP32[$22>>2]|0;
       $270 = ($269|0)==(0);
       if ($270) {
        $278 = $266;$279 = $267;
       } else {
        $271 = HEAP32[$16>>2]|0;
        $272 = HEAP32[$19>>2]|0;
        $273 = HEAP32[$24>>2]|0;
        $274 = (ftCall_iiii($271|0,$272,$23,$273)|0);
        $275 = ($274|0)==(0);
        if ($275) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i$i = $25;
        } else {
         $276 = (((($7)) + 40|0) + ($274)|0);
         $$sink$i$i$i = $276;
        }
        HEAP32[$14>>2] = $$sink$i$i$i;
        $$ph = $$sink$i$i$i;$$sink = $25;
        label = 134;
       }
      }
      if ((label|0) == 134) {
       label = 0;
       HEAP32[$15>>2] = $$sink;
       $278 = $$sink;$279 = $$ph;
      }
      $277 = ($278>>>0)<($279>>>0);
      if ($277) {
       $280 = ((($278)) + 1|0);
       HEAP32[$15>>2] = $280;
       $281 = HEAP8[$278>>0]|0;
       $$0$i8$i = $281;$670 = $279;$671 = $280;
      } else {
       $282 = HEAP32[$22>>2]|0;
       $283 = ($282|0)==(0);
       if ($283) {
        $$0$i8$i = 0;$670 = $279;$671 = $278;
       } else {
        $284 = HEAP32[$16>>2]|0;
        $285 = HEAP32[$19>>2]|0;
        $286 = HEAP32[$24>>2]|0;
        $287 = (ftCall_iiii($284|0,$285,$23,$286)|0);
        $288 = ($287|0)==(0);
        if ($288) {
         HEAP32[$22>>2] = 0;
         HEAP8[$23>>0] = 0;
         $$sink$i$i6$i = $25;$672 = 0;
        } else {
         $289 = (((($7)) + 40|0) + ($287)|0);
         $$pre$i3$i = HEAP8[$23>>0]|0;
         $$sink$i$i6$i = $289;$672 = $$pre$i3$i;
        }
        HEAP32[$14>>2] = $$sink$i$i6$i;
        HEAP32[$15>>2] = $25;
        $$0$i8$i = $672;$670 = $$sink$i$i6$i;$671 = $25;
       }
      }
      $290 = $$0$i8$i&255;
      $291 = HEAP32[$26>>2]|0;
      $292 = (139522 + ($291)|0);
      $293 = HEAP8[$292>>0]|0;
      $294 = $293&255;
      $295 = Math_imul($294, $290)|0;
      $296 = $295&255;
      $297 = (($5) + ($$1241666)|0);
      HEAP8[$297>>0] = $296;
      $298 = (($$1241666) + 1)|0;
      $299 = HEAP32[$21>>2]|0;
      $300 = ($298|0)<($299|0);
      if ($300) {
       $$1241666 = $298;$266 = $671;$267 = $670;
      } else {
       $$1212 = 1;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 0;$$4221 = $$0217;
       break;
      }
     }
    } else {
     $$1212 = 1;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = 0;$$4221 = $$0217;
    }
   }
  } while(0);
  do {
   if ((label|0) == 250) {
    label = 0;
    $628 = ($$0242|0)==(0);
    if (!($628)) {
     $$7 = 0;
     label = 261;
     break L7;
    }
    $629 = $28 & 536870912;
    $630 = ($629|0)==(0);
    if ($630) {
     label = 252;
     break L7;
    }
    $631 = ($27|0)<(0);
    if ($631) {
     $632 = HEAP32[$14>>2]|0;
     HEAP32[$15>>2] = $632;
     $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$0217;
     break;
    }
    $633 = HEAP32[$16>>2]|0;
    $634 = ($633|0)==(0|0);
    if ($634) {
     $$pre$i257 = HEAP32[$15>>2]|0;
     $645 = $$pre$i257;
    } else {
     $635 = HEAP32[$14>>2]|0;
     $636 = HEAP32[$15>>2]|0;
     $637 = $635;
     $638 = (($637) - ($636))|0;
     $639 = ($27|0)>($638|0);
     $640 = $636;
     if ($639) {
      HEAP32[$15>>2] = $635;
      $641 = HEAP32[$18>>2]|0;
      $642 = HEAP32[$19>>2]|0;
      $643 = (($27) - ($638))|0;
      ftCall_vii($641|0,$642,$643);
      $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$0217;
      break;
     } else {
      $645 = $640;
     }
    }
    $644 = (($645) + ($27)|0);
    HEAP32[$15>>2] = $644;
    $$1212 = $$0211;$$1215 = $$0214;$$1230 = $$0229;$$1247 = $$0246;$$2234 = $$0232;$$2238 = $$0236;$$2244 = 0;$$3209 = $$0206;$$4221 = $$0217;
   }
  } while(0);
  (_stbi__get32be($7)|0);
  $$0206 = $$3209;$$0211 = $$1212;$$0214 = $$1215;$$0217 = $$4221;$$0229 = $$1230;$$0232 = $$2234;$$0236 = $$2238;$$0242 = $$2244;$$0246 = $$1247;
 }
 if ((label|0) == 18) {
  HEAP32[$26>>2] = 0;
  $$7 = 0;
  STACKTOP = sp;return ($$7|0);
 }
 else if ((label|0) == 94) {
  HEAP32[$21>>2] = 4;
  $$7 = 1;
  STACKTOP = sp;return ($$7|0);
 }
 else if ((label|0) == 146) {
  $304 = $$0206&255;
  HEAP32[$21>>2] = $304;
  $$7 = 1;
  STACKTOP = sp;return ($$7|0);
 }
 else if ((label|0) == 160) {
  $339 = ($$0242|0)==(0);
  if (!($339)) {
   $$7 = 0;
   STACKTOP = sp;return ($$7|0);
  }
  $340 = ($1|0)==(0);
  if (!($340)) {
   $$7 = 1;
   STACKTOP = sp;return ($$7|0);
  }
  $341 = HEAP32[$9>>2]|0;
  $342 = ($341|0)==(0|0);
  if ($342) {
   $$7 = 0;
   STACKTOP = sp;return ($$7|0);
  }
  $343 = HEAP32[$7>>2]|0;
  $344 = HEAP32[$26>>2]|0;
  $345 = Math_imul($344, $343)|0;
  $346 = (($345) + 7)|0;
  $347 = $346 >>> 3;
  $348 = HEAP32[$20>>2]|0;
  $349 = HEAP32[$21>>2]|0;
  $350 = Math_imul($349, $348)|0;
  $351 = Math_imul($350, $347)|0;
  $352 = (($351) + ($348))|0;
  $353 = ($$0229|0)!=(0);
  $354 = (_malloc($352)|0);
  $355 = ($354|0)==(0|0);
  do {
   if (!($355)) {
    $356 = $353 ^ 1;
    $357 = $356&1;
    HEAP32[$3>>2] = $341;
    $358 = (($341) + ($$0214)|0);
    $359 = ((($3)) + 4|0);
    HEAP32[$359>>2] = $358;
    $360 = (_stbi__do_zlib($3,$354,$352,1,$357)|0);
    $361 = ($360|0)==(0);
    if ($361) {
     $362 = ((($3)) + 20|0);
     $363 = HEAP32[$362>>2]|0;
     _free($363);
     break;
    }
    $364 = ((($3)) + 16|0);
    $365 = HEAP32[$364>>2]|0;
    $366 = ((($3)) + 20|0);
    $367 = HEAP32[$366>>2]|0;
    $368 = (($365) - ($367))|0;
    $369 = $367;
    HEAP32[$8>>2] = $369;
    $370 = ($367|0)==(0);
    if ($370) {
     $$7 = 0;
     STACKTOP = sp;return ($$7|0);
    }
    $371 = HEAP32[$9>>2]|0;
    _free($371);
    HEAP32[$9>>2] = 0;
    $372 = HEAP32[$21>>2]|0;
    $373 = (($372) + 1)|0;
    $374 = ($373|0)!=($2|0);
    $375 = ($2|0)==(3);
    $or$cond5$not = $375 | $374;
    $376 = ($$0206<<24>>24)!=(0);
    $or$cond7 = $376 | $or$cond5$not;
    $377 = ($$0211<<24>>24)==(0);
    $or$cond249 = $377 & $or$cond7;
    $378 = ((($7)) + 12|0);
    $$ = $or$cond249 ? $372 : $373;
    HEAP32[$378>>2] = $$;
    $379 = HEAP32[$8>>2]|0;
    $380 = HEAP32[$26>>2]|0;
    $381 = ($380|0)==(16);
    $382 = $381 ? 2 : 1;
    $383 = Math_imul($$, $382)|0;
    $384 = ($$0236|0)==(0);
    $385 = HEAP32[$0>>2]|0;
    $386 = HEAP32[$385>>2]|0;
    $387 = ((($385)) + 4|0);
    $388 = HEAP32[$387>>2]|0;
    do {
     if ($384) {
      $459 = (_stbi__create_png_image_raw($0,$379,$368,$$,$386,$388,$380,$$0232)|0);
      $460 = ($459|0)==(0);
      if ($460) {
       $$7 = 0;
       STACKTOP = sp;return ($$7|0);
      }
     } else {
      $389 = $388 | $386;
      $390 = ($389|0)<(0);
      do {
       if ($390) {
        $$0$i$i = 0;
       } else {
        $391 = ($388|0)==(0);
        if (!($391)) {
         $392 = (2147483647 / ($388|0))&-1;
         $393 = ($392|0)<($386|0);
         if ($393) {
          $$0$i$i = 0;
          break;
         }
        }
        $394 = Math_imul($388, $386)|0;
        $395 = $394 | $383;
        $396 = ($395|0)<(0);
        if ($396) {
         $$0$i$i = 0;
        } else {
         $397 = ($383|0)==(0);
         if (!($397)) {
          $398 = (2147483647 / ($383|0))&-1;
          $399 = ($398|0)<($394|0);
          if ($399) {
           $$0$i$i = 0;
           break;
          }
         }
         $400 = Math_imul($394, $383)|0;
         $401 = (_malloc($400)|0);
         $$0$i$i = $401;
        }
       }
      } while(0);
      $$0103118$i = 0;$$095120$i = $379;$$099119$i = $368;$403 = $385;
      while(1) {
       $402 = HEAP32[$403>>2]|0;
       $404 = (113648 + ($$0103118$i<<2)|0);
       $405 = HEAP32[$404>>2]|0;
       $406 = (113680 + ($$0103118$i<<2)|0);
       $407 = HEAP32[$406>>2]|0;
       $408 = (($402) + -1)|0;
       $409 = (($408) - ($405))|0;
       $410 = (($409) + ($407))|0;
       $411 = (($410>>>0) / ($407>>>0))&-1;
       $412 = ((($403)) + 4|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = (113712 + ($$0103118$i<<2)|0);
       $415 = HEAP32[$414>>2]|0;
       $416 = (113744 + ($$0103118$i<<2)|0);
       $417 = HEAP32[$416>>2]|0;
       $418 = (($413) + -1)|0;
       $419 = (($418) - ($415))|0;
       $420 = (($419) + ($417))|0;
       $421 = (($420>>>0) / ($417>>>0))&-1;
       $422 = ($407>>>0)<=($410>>>0);
       $423 = ($417>>>0)<=($420>>>0);
       $or$cond$i = $422 & $423;
       if ($or$cond$i) {
        $424 = ((($403)) + 8|0);
        $425 = HEAP32[$424>>2]|0;
        $426 = Math_imul($411, $380)|0;
        $427 = Math_imul($426, $425)|0;
        $428 = (($427) + 7)|0;
        $429 = $428 >> 3;
        $430 = (($429) + 1)|0;
        $431 = Math_imul($430, $421)|0;
        $432 = (_stbi__create_png_image_raw($0,$$095120$i,$$099119$i,$$,$411,$421,$380,$$0232)|0);
        $433 = ($432|0)==(0);
        if ($433) {
         break;
        }
        $434 = ($421|0)>(0);
        $435 = ($411|0)>(0);
        $or$cond126$i = $435 & $434;
        if ($or$cond126$i) {
         $$pre122$pre$i = HEAP32[$0>>2]|0;
         $$pre123$pre$i = HEAP32[$10>>2]|0;
         $$0106115$us$i = 0;
         while(1) {
          $436 = Math_imul($$0106115$us$i, $417)|0;
          $437 = (($436) + ($415))|0;
          $438 = Math_imul($437, $383)|0;
          $439 = Math_imul($$0106115$us$i, $411)|0;
          $$0107114$us$i = 0;
          while(1) {
           $440 = Math_imul($$0107114$us$i, $407)|0;
           $441 = (($440) + ($405))|0;
           $442 = HEAP32[$$pre122$pre$i>>2]|0;
           $443 = Math_imul($438, $442)|0;
           $444 = (($$0$i$i) + ($443)|0);
           $445 = Math_imul($441, $383)|0;
           $446 = (($444) + ($445)|0);
           $447 = (($$0107114$us$i) + ($439))|0;
           $448 = Math_imul($447, $383)|0;
           $449 = (($$pre123$pre$i) + ($448)|0);
           _memcpy(($446|0),($449|0),($383|0))|0;
           $450 = (($$0107114$us$i) + 1)|0;
           $451 = ($450|0)<($411|0);
           if ($451) {
            $$0107114$us$i = $450;
           } else {
            break;
           }
          }
          $452 = (($$0106115$us$i) + 1)|0;
          $453 = ($452|0)<($421|0);
          if ($453) {
           $$0106115$us$i = $452;
          } else {
           $454 = $$pre123$pre$i;
           break;
          }
         }
        } else {
         $$pre = HEAP32[$10>>2]|0;
         $454 = $$pre;
        }
        _free($454);
        $455 = (($$095120$i) + ($431)|0);
        $456 = (($$099119$i) - ($431))|0;
        $$3102$ph$i = $456;$$398$ph$i = $455;
       } else {
        $$3102$ph$i = $$099119$i;$$398$ph$i = $$095120$i;
       }
       $457 = (($$0103118$i) + 1)|0;
       $458 = ($457>>>0)<(7);
       if (!($458)) {
        label = 189;
        break;
       }
       $$pre$i297 = HEAP32[$0>>2]|0;
       $$0103118$i = $457;$$095120$i = $$398$ph$i;$$099119$i = $$3102$ph$i;$403 = $$pre$i297;
      }
      if ((label|0) == 189) {
       HEAP32[$10>>2] = $$0$i$i;
       break;
      }
      _free($$0$i$i);
      $$7 = 0;
      STACKTOP = sp;return ($$7|0);
     }
    } while(0);
    $461 = ($$0211<<24>>24)!=(0);
    L305: do {
     if ($461) {
      $462 = HEAP32[$26>>2]|0;
      $463 = ($462|0)==(16);
      if ($463) {
       $464 = HEAP32[$378>>2]|0;
       $465 = HEAP32[$0>>2]|0;
       $466 = HEAP32[$465>>2]|0;
       $467 = ((($465)) + 4|0);
       $468 = HEAP32[$467>>2]|0;
       $469 = Math_imul($468, $466)|0;
       $470 = HEAP32[$10>>2]|0;
       switch ($464|0) {
       case 2:  {
        $471 = ($469|0)==(0);
        if ($471) {
         break L305;
        }
        $472 = HEAP16[$6>>1]|0;
        $$03$i282 = $470;$$0322$i283 = 0;
        while(1) {
         $473 = HEAP16[$$03$i282>>1]|0;
         $474 = ($473<<16>>16)!=($472<<16>>16);
         $475 = $474 << 31 >> 31;
         $476 = ((($$03$i282)) + 2|0);
         HEAP16[$476>>1] = $475;
         $477 = ((($$03$i282)) + 4|0);
         $478 = (($$0322$i283) + 1)|0;
         $exitcond$i284 = ($478|0)==($469|0);
         if ($exitcond$i284) {
          break;
         } else {
          $$03$i282 = $477;$$0322$i283 = $478;
         }
        }
        break;
       }
       case 4:  {
        $479 = ($469|0)==(0);
        if ($479) {
         break L305;
        }
        $480 = ((($6)) + 2|0);
        $481 = ((($6)) + 4|0);
        $482 = HEAP16[$6>>1]|0;
        $483 = HEAP16[$480>>1]|0;
        $484 = HEAP16[$481>>1]|0;
        $$1334$i287 = 0;$$15$i286 = $470;
        while(1) {
         $485 = HEAP16[$$15$i286>>1]|0;
         $486 = ($485<<16>>16)==($482<<16>>16);
         do {
          if ($486) {
           $487 = ((($$15$i286)) + 2|0);
           $488 = HEAP16[$487>>1]|0;
           $489 = ($488<<16>>16)==($483<<16>>16);
           if (!($489)) {
            break;
           }
           $490 = ((($$15$i286)) + 4|0);
           $491 = HEAP16[$490>>1]|0;
           $492 = ($491<<16>>16)==($484<<16>>16);
           if (!($492)) {
            break;
           }
           $493 = ((($$15$i286)) + 6|0);
           HEAP16[$493>>1] = 0;
          }
         } while(0);
         $494 = ((($$15$i286)) + 8|0);
         $495 = (($$1334$i287) + 1)|0;
         $exitcond8$i288 = ($495|0)==($469|0);
         if ($exitcond8$i288) {
          break;
         } else {
          $$1334$i287 = $495;$$15$i286 = $494;
         }
        }
        break;
       }
       default: {
        ___assert_fail((139531|0),(139212|0),4619,(139556|0));
        // unreachable;
       }
       }
      } else {
       $496 = HEAP32[$378>>2]|0;
       $$idx$val = HEAP32[$0>>2]|0;
       $$idx250$val = HEAP32[$10>>2]|0;
       $$idx$val$idx$val = HEAP32[$$idx$val>>2]|0;
       $$idx$val$idx251 = ((($$idx$val)) + 4|0);
       $$idx$val$idx251$val = HEAP32[$$idx$val$idx251>>2]|0;
       $497 = Math_imul($$idx$val$idx251$val, $$idx$val$idx$val)|0;
       switch ($496|0) {
       case 2:  {
        $498 = ($497|0)==(0);
        if ($498) {
         break L305;
        }
        $499 = HEAP8[$5>>0]|0;
        $$03$i = $$idx250$val;$$0322$i = 0;
        while(1) {
         $500 = HEAP8[$$03$i>>0]|0;
         $501 = ($500<<24>>24)!=($499<<24>>24);
         $502 = $501 << 31 >> 31;
         $503 = ((($$03$i)) + 1|0);
         HEAP8[$503>>0] = $502;
         $504 = ((($$03$i)) + 2|0);
         $505 = (($$0322$i) + 1)|0;
         $exitcond$i276 = ($505|0)==($497|0);
         if ($exitcond$i276) {
          break;
         } else {
          $$03$i = $504;$$0322$i = $505;
         }
        }
        break;
       }
       case 4:  {
        $506 = ($497|0)==(0);
        if ($506) {
         break L305;
        }
        $507 = ((($5)) + 1|0);
        $508 = ((($5)) + 2|0);
        $509 = HEAP8[$5>>0]|0;
        $510 = HEAP8[$507>>0]|0;
        $511 = HEAP8[$508>>0]|0;
        $$1334$i = 0;$$15$i278 = $$idx250$val;
        while(1) {
         $512 = HEAP8[$$15$i278>>0]|0;
         $513 = ($512<<24>>24)==($509<<24>>24);
         do {
          if ($513) {
           $514 = ((($$15$i278)) + 1|0);
           $515 = HEAP8[$514>>0]|0;
           $516 = ($515<<24>>24)==($510<<24>>24);
           if (!($516)) {
            break;
           }
           $517 = ((($$15$i278)) + 2|0);
           $518 = HEAP8[$517>>0]|0;
           $519 = ($518<<24>>24)==($511<<24>>24);
           if (!($519)) {
            break;
           }
           $520 = ((($$15$i278)) + 3|0);
           HEAP8[$520>>0] = 0;
          }
         } while(0);
         $521 = ((($$15$i278)) + 4|0);
         $522 = (($$1334$i) + 1)|0;
         $exitcond8$i279 = ($522|0)==($497|0);
         if ($exitcond8$i279) {
          break;
         } else {
          $$1334$i = $522;$$15$i278 = $521;
         }
        }
        break;
       }
       default: {
        ___assert_fail((139531|0),(139212|0),4594,(139585|0));
        // unreachable;
       }
       }
      }
     }
    } while(0);
    $523 = (0)!=(0);
    $or$cond9 = $353 & $523;
    L341: do {
     if ($or$cond9) {
      $524 = HEAP32[$378>>2]|0;
      $525 = ($524|0)>(2);
      if ($525) {
       $$idx252$val = HEAP32[$0>>2]|0;
       $$idx253$val = HEAP32[$10>>2]|0;
       $$idx252$val$idx$val = HEAP32[$$idx252$val>>2]|0;
       $$idx252$val$idx254 = ((($$idx252$val)) + 4|0);
       $$idx252$val$idx254$val = HEAP32[$$idx252$val$idx254>>2]|0;
       $$idx252$val$idx255 = ((($$idx252$val)) + 12|0);
       $$idx252$val$idx255$val = HEAP32[$$idx252$val$idx255>>2]|0;
       $526 = Math_imul($$idx252$val$idx254$val, $$idx252$val$idx$val)|0;
       switch ($$idx252$val$idx255$val|0) {
       case 3:  {
        $527 = ($526|0)==(0);
        if ($527) {
         break L341;
        }
        $$04$i = 0;$$0543$i = $$idx253$val;
        while(1) {
         $528 = HEAP8[$$0543$i>>0]|0;
         $529 = ((($$0543$i)) + 2|0);
         $530 = HEAP8[$529>>0]|0;
         HEAP8[$$0543$i>>0] = $530;
         HEAP8[$529>>0] = $528;
         $531 = ((($$0543$i)) + 3|0);
         $532 = (($$04$i) + 1)|0;
         $exitcond$i273 = ($532|0)==($526|0);
         if ($exitcond$i273) {
          break;
         } else {
          $$04$i = $532;$$0543$i = $531;
         }
        }
        break;
       }
       case 4:  {
        $533 = (0)==(0);
        $534 = ($526|0)!=(0);
        if ($533) {
         if (!($534)) {
          break L341;
         }
         $$2565$i = $$idx253$val;$$26$i = 0;
         while(1) {
          $565 = HEAP8[$$2565$i>>0]|0;
          $566 = ((($$2565$i)) + 2|0);
          $567 = HEAP8[$566>>0]|0;
          HEAP8[$$2565$i>>0] = $567;
          HEAP8[$566>>0] = $565;
          $568 = ((($$2565$i)) + 4|0);
          $569 = (($$26$i) + 1)|0;
          $exitcond13$i = ($569|0)==($526|0);
          if ($exitcond13$i) {
           break L341;
          } else {
           $$2565$i = $568;$$26$i = $569;
          }
         }
        }
        if (!($534)) {
         break L341;
        }
        $$1558$i = $$idx253$val;$$19$i = 0;
        while(1) {
         $535 = ((($$1558$i)) + 3|0);
         $536 = HEAP8[$535>>0]|0;
         $537 = HEAP8[$$1558$i>>0]|0;
         $538 = ($536<<24>>24)==(0);
         if ($538) {
          $561 = ((($$1558$i)) + 2|0);
          $562 = HEAP8[$561>>0]|0;
          HEAP8[$$1558$i>>0] = $562;
          HEAP8[$561>>0] = $537;
         } else {
          $539 = $536&255;
          $540 = ($536&255) >>> 1;
          $541 = ((($$1558$i)) + 2|0);
          $542 = HEAP8[$541>>0]|0;
          $543 = $542&255;
          $544 = ($543*255)|0;
          $545 = $540&255;
          $546 = (($544) + ($545))|0;
          $547 = (($546>>>0) / ($539>>>0))&-1;
          $548 = $547&255;
          HEAP8[$$1558$i>>0] = $548;
          $549 = ((($$1558$i)) + 1|0);
          $550 = HEAP8[$549>>0]|0;
          $551 = $550&255;
          $552 = ($551*255)|0;
          $553 = (($552) + ($545))|0;
          $554 = (($553>>>0) / ($539>>>0))&-1;
          $555 = $554&255;
          HEAP8[$549>>0] = $555;
          $556 = $537&255;
          $557 = ($556*255)|0;
          $558 = (($557) + ($545))|0;
          $559 = (($558>>>0) / ($539>>>0))&-1;
          $560 = $559&255;
          HEAP8[$541>>0] = $560;
         }
         $563 = ((($$1558$i)) + 4|0);
         $564 = (($$19$i) + 1)|0;
         $exitcond14$i = ($564|0)==($526|0);
         if ($exitcond14$i) {
          break;
         } else {
          $$1558$i = $563;$$19$i = $564;
         }
        }
        break;
       }
       default: {
        ___assert_fail((139612|0),(139212|0),4700,(139630|0));
        // unreachable;
       }
       }
      }
     }
    } while(0);
    if ($376) {
     $570 = $$0206&255;
     HEAP32[$21>>2] = $570;
     $571 = ($2|0)>(2);
     $spec$select = $571 ? $2 : $570;
     HEAP32[$378>>2] = $spec$select;
     $572 = HEAP32[$0>>2]|0;
     $573 = HEAP32[$572>>2]|0;
     $574 = ((($572)) + 4|0);
     $575 = HEAP32[$574>>2]|0;
     $576 = Math_imul($575, $573)|0;
     $577 = HEAP32[$10>>2]|0;
     $578 = $576 | $spec$select;
     $579 = ($578|0)<(0);
     if ($579) {
      $$7 = 0;
      STACKTOP = sp;return ($$7|0);
     }
     $580 = ($spec$select|0)==(0);
     if (!($580)) {
      $581 = (2147483647 / ($spec$select|0))&-1;
      $582 = ($581|0)<($576|0);
      if ($582) {
       $$7 = 0;
       STACKTOP = sp;return ($$7|0);
      }
     }
     $583 = Math_imul($576, $spec$select)|0;
     $584 = (_malloc($583)|0);
     $585 = ($584|0)==(0|0);
     if ($585) {
      $$7 = 0;
      STACKTOP = sp;return ($$7|0);
     }
     $586 = ($spec$select|0)==(3);
     $587 = ($576|0)!=(0);
     do {
      if ($586) {
       if (!($587)) {
        break;
       }
       $$0573$i = 0;$$0582$i = $584;
       while(1) {
        $588 = (($577) + ($$0573$i)|0);
        $589 = HEAP8[$588>>0]|0;
        $590 = $589&255;
        $591 = $590 << 2;
        $592 = (($4) + ($591)|0);
        $593 = HEAP8[$592>>0]|0;
        HEAP8[$$0582$i>>0] = $593;
        $594 = $591 | 1;
        $595 = (($4) + ($594)|0);
        $596 = HEAP8[$595>>0]|0;
        $597 = ((($$0582$i)) + 1|0);
        HEAP8[$597>>0] = $596;
        $598 = $591 | 2;
        $599 = (($4) + ($598)|0);
        $600 = HEAP8[$599>>0]|0;
        $601 = ((($$0582$i)) + 2|0);
        HEAP8[$601>>0] = $600;
        $602 = ((($$0582$i)) + 3|0);
        $603 = (($$0573$i) + 1)|0;
        $exitcond$i = ($603|0)==($576|0);
        if ($exitcond$i) {
         break;
        } else {
         $$0573$i = $603;$$0582$i = $602;
        }
       }
      } else {
       if (!($587)) {
        break;
       }
       $$15$i = 0;$$1594$i = $584;
       while(1) {
        $604 = (($577) + ($$15$i)|0);
        $605 = HEAP8[$604>>0]|0;
        $606 = $605&255;
        $607 = $606 << 2;
        $608 = (($4) + ($607)|0);
        $609 = HEAP8[$608>>0]|0;
        HEAP8[$$1594$i>>0] = $609;
        $610 = $607 | 1;
        $611 = (($4) + ($610)|0);
        $612 = HEAP8[$611>>0]|0;
        $613 = ((($$1594$i)) + 1|0);
        HEAP8[$613>>0] = $612;
        $614 = $607 | 2;
        $615 = (($4) + ($614)|0);
        $616 = HEAP8[$615>>0]|0;
        $617 = ((($$1594$i)) + 2|0);
        HEAP8[$617>>0] = $616;
        $618 = $607 | 3;
        $619 = (($4) + ($618)|0);
        $620 = HEAP8[$619>>0]|0;
        $621 = ((($$1594$i)) + 3|0);
        HEAP8[$621>>0] = $620;
        $622 = ((($$1594$i)) + 4|0);
        $623 = (($$15$i) + 1)|0;
        $exitcond8$i = ($623|0)==($576|0);
        if ($exitcond8$i) {
         break;
        } else {
         $$15$i = $623;$$1594$i = $622;
        }
       }
      }
     } while(0);
     $624 = HEAP32[$10>>2]|0;
     _free($624);
     HEAP32[$10>>2] = $584;
    } else {
     if ($461) {
      $625 = HEAP32[$21>>2]|0;
      $626 = (($625) + 1)|0;
      HEAP32[$21>>2] = $626;
     }
    }
    $627 = HEAP32[$8>>2]|0;
    _free($627);
    HEAP32[$8>>2] = 0;
    $$7 = 1;
    STACKTOP = sp;return ($$7|0);
   }
  } while(0);
  HEAP32[$8>>2] = 0;
  $$7 = 0;
  STACKTOP = sp;return ($$7|0);
 }
 else if ((label|0) == 252) {
  $$7 = 0;
  STACKTOP = sp;return ($$7|0);
 }
 else if ((label|0) == 261) {
  STACKTOP = sp;return ($$7|0);
 }
 return (0)|0;
}
function _stbi__convert_format($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0151243 = 0, $$0163 = 0, $$0164247 = 0, $$0165 = 0, $$0165242 = 0, $$0165245 = 0, $$0244 = 0, $$10161193 = 0, $$10175 = 0, $$10175195 = 0, $$10194 = 0, $$11162189 = 0, $$11176 = 0, $$11176191 = 0, $$11190 = 0, $$1152238 = 0, $$1166 = 0, $$1166240 = 0, $$1239 = 0, $$2153233 = 0;
 var $$2167 = 0, $$2167235 = 0, $$2234 = 0, $$3154228 = 0, $$3168 = 0, $$3168230 = 0, $$3229 = 0, $$4155223 = 0, $$4169 = 0, $$4169225 = 0, $$4224 = 0, $$5156218 = 0, $$5170 = 0, $$5170220 = 0, $$5219 = 0, $$6157213 = 0, $$6171 = 0, $$6171215 = 0, $$6214 = 0, $$7158208 = 0;
 var $$7172 = 0, $$7172210 = 0, $$7209 = 0, $$8159203 = 0, $$8173 = 0, $$8173205 = 0, $$8204 = 0, $$9160198 = 0, $$9174 = 0, $$9174200 = 0, $$9199 = 0, $$off = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0;
 var $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0;
 var $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0;
 var $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0;
 var $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==($1|0);
 if ($5) {
  $$0163 = $0;
  return ($$0163|0);
 }
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(4);
 if (!($6)) {
  ___assert_fail((139445|0),(139212|0),1525,(139501|0));
  // unreachable;
 }
 $7 = $3 | $2;
 $8 = ($7|0)<(0);
 do {
  if (!($8)) {
   $9 = ($3|0)==(0);
   if (!($9)) {
    $10 = (2147483647 / ($3|0))&-1;
    $11 = ($10|0)<($2|0);
    if ($11) {
     break;
    }
   }
   $12 = Math_imul($3, $2)|0;
   $13 = $12 | $4;
   $14 = ($13|0)<(0);
   if (!($14)) {
    $15 = ($4|0)==(0);
    if (!($15)) {
     $16 = (2147483647 / ($4|0))&-1;
     $17 = ($16|0)<($12|0);
     if ($17) {
      break;
     }
    }
    $18 = Math_imul($12, $4)|0;
    $19 = (_malloc($18)|0);
    $20 = ($19|0)==(0|0);
    if (!($20)) {
     $21 = ($4|0)>(0);
     L17: do {
      if ($21) {
       $22 = $1 << 3;
       $23 = (($22) + ($2))|0;
       $$0165242 = (($3) + -1)|0;
       $24 = ($$0165242|0)>(-1);
       $$0164247 = 0;
       L19: while(1) {
        $25 = Math_imul($$0164247, $3)|0;
        $26 = Math_imul($25, $1)|0;
        $27 = (($0) + ($26)|0);
        $28 = Math_imul($25, $2)|0;
        $29 = (($19) + ($28)|0);
        do {
         switch ($23|0) {
         case 10:  {
          if ($24) {
           $$0151243 = $27;$$0165245 = $$0165242;$$0244 = $29;
           while(1) {
            $30 = HEAP8[$$0151243>>0]|0;
            HEAP8[$$0244>>0] = $30;
            $31 = ((($$0244)) + 1|0);
            HEAP8[$31>>0] = -1;
            $32 = ((($$0151243)) + 1|0);
            $33 = ((($$0244)) + 2|0);
            $$0165 = (($$0165245) + -1)|0;
            $34 = ($$0165|0)>(-1);
            if ($34) {
             $$0151243 = $32;$$0165245 = $$0165;$$0244 = $33;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 11:  {
          if ($24) {
           $$1152238 = $27;$$1166240 = $$0165242;$$1239 = $29;
           while(1) {
            $35 = HEAP8[$$1152238>>0]|0;
            $36 = ((($$1239)) + 2|0);
            HEAP8[$36>>0] = $35;
            $37 = ((($$1239)) + 1|0);
            HEAP8[$37>>0] = $35;
            HEAP8[$$1239>>0] = $35;
            $38 = ((($$1152238)) + 1|0);
            $39 = ((($$1239)) + 3|0);
            $$1166 = (($$1166240) + -1)|0;
            $40 = ($$1166|0)>(-1);
            if ($40) {
             $$1152238 = $38;$$1166240 = $$1166;$$1239 = $39;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 12:  {
          if ($24) {
           $$2153233 = $27;$$2167235 = $$0165242;$$2234 = $29;
           while(1) {
            $41 = HEAP8[$$2153233>>0]|0;
            $42 = ((($$2234)) + 2|0);
            HEAP8[$42>>0] = $41;
            $43 = ((($$2234)) + 1|0);
            HEAP8[$43>>0] = $41;
            HEAP8[$$2234>>0] = $41;
            $44 = ((($$2234)) + 3|0);
            HEAP8[$44>>0] = -1;
            $45 = ((($$2153233)) + 1|0);
            $46 = ((($$2234)) + 4|0);
            $$2167 = (($$2167235) + -1)|0;
            $47 = ($$2167|0)>(-1);
            if ($47) {
             $$2153233 = $45;$$2167235 = $$2167;$$2234 = $46;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 17:  {
          if ($24) {
           $$3154228 = $27;$$3168230 = $$0165242;$$3229 = $29;
           while(1) {
            $48 = HEAP8[$$3154228>>0]|0;
            HEAP8[$$3229>>0] = $48;
            $49 = ((($$3154228)) + 2|0);
            $50 = ((($$3229)) + 1|0);
            $$3168 = (($$3168230) + -1)|0;
            $51 = ($$3168|0)>(-1);
            if ($51) {
             $$3154228 = $49;$$3168230 = $$3168;$$3229 = $50;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 19:  {
          if ($24) {
           $$4155223 = $27;$$4169225 = $$0165242;$$4224 = $29;
           while(1) {
            $52 = HEAP8[$$4155223>>0]|0;
            $53 = ((($$4224)) + 2|0);
            HEAP8[$53>>0] = $52;
            $54 = ((($$4224)) + 1|0);
            HEAP8[$54>>0] = $52;
            HEAP8[$$4224>>0] = $52;
            $55 = ((($$4155223)) + 2|0);
            $56 = ((($$4224)) + 3|0);
            $$4169 = (($$4169225) + -1)|0;
            $57 = ($$4169|0)>(-1);
            if ($57) {
             $$4155223 = $55;$$4169225 = $$4169;$$4224 = $56;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 20:  {
          if ($24) {
           $$5156218 = $27;$$5170220 = $$0165242;$$5219 = $29;
           while(1) {
            $58 = HEAP8[$$5156218>>0]|0;
            $59 = ((($$5219)) + 2|0);
            HEAP8[$59>>0] = $58;
            $60 = ((($$5219)) + 1|0);
            HEAP8[$60>>0] = $58;
            HEAP8[$$5219>>0] = $58;
            $61 = ((($$5156218)) + 1|0);
            $62 = HEAP8[$61>>0]|0;
            $63 = ((($$5219)) + 3|0);
            HEAP8[$63>>0] = $62;
            $64 = ((($$5156218)) + 2|0);
            $65 = ((($$5219)) + 4|0);
            $$5170 = (($$5170220) + -1)|0;
            $66 = ($$5170|0)>(-1);
            if ($66) {
             $$5156218 = $64;$$5170220 = $$5170;$$5219 = $65;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 28:  {
          if ($24) {
           $$6157213 = $27;$$6171215 = $$0165242;$$6214 = $29;
           while(1) {
            $67 = HEAP8[$$6157213>>0]|0;
            HEAP8[$$6214>>0] = $67;
            $68 = ((($$6157213)) + 1|0);
            $69 = HEAP8[$68>>0]|0;
            $70 = ((($$6214)) + 1|0);
            HEAP8[$70>>0] = $69;
            $71 = ((($$6157213)) + 2|0);
            $72 = HEAP8[$71>>0]|0;
            $73 = ((($$6214)) + 2|0);
            HEAP8[$73>>0] = $72;
            $74 = ((($$6214)) + 3|0);
            HEAP8[$74>>0] = -1;
            $75 = ((($$6157213)) + 3|0);
            $76 = ((($$6214)) + 4|0);
            $$6171 = (($$6171215) + -1)|0;
            $77 = ($$6171|0)>(-1);
            if ($77) {
             $$6157213 = $75;$$6171215 = $$6171;$$6214 = $76;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 25:  {
          if ($24) {
           $$7158208 = $27;$$7172210 = $$0165242;$$7209 = $29;
           while(1) {
            $78 = HEAP8[$$7158208>>0]|0;
            $79 = $78&255;
            $80 = ((($$7158208)) + 1|0);
            $81 = HEAP8[$80>>0]|0;
            $82 = $81&255;
            $83 = ((($$7158208)) + 2|0);
            $84 = HEAP8[$83>>0]|0;
            $85 = $84&255;
            $86 = ($79*77)|0;
            $87 = ($82*150)|0;
            $88 = (($87) + ($86))|0;
            $89 = ($85*29)|0;
            $90 = (($88) + ($89))|0;
            $91 = $90 >>> 8;
            $92 = $91&255;
            HEAP8[$$7209>>0] = $92;
            $93 = ((($$7158208)) + 3|0);
            $94 = ((($$7209)) + 1|0);
            $$7172 = (($$7172210) + -1)|0;
            $95 = ($$7172|0)>(-1);
            if ($95) {
             $$7158208 = $93;$$7172210 = $$7172;$$7209 = $94;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 26:  {
          if ($24) {
           $$8159203 = $27;$$8173205 = $$0165242;$$8204 = $29;
           while(1) {
            $96 = HEAP8[$$8159203>>0]|0;
            $97 = $96&255;
            $98 = ((($$8159203)) + 1|0);
            $99 = HEAP8[$98>>0]|0;
            $100 = $99&255;
            $101 = ((($$8159203)) + 2|0);
            $102 = HEAP8[$101>>0]|0;
            $103 = $102&255;
            $104 = ($97*77)|0;
            $105 = ($100*150)|0;
            $106 = (($105) + ($104))|0;
            $107 = ($103*29)|0;
            $108 = (($106) + ($107))|0;
            $109 = $108 >>> 8;
            $110 = $109&255;
            HEAP8[$$8204>>0] = $110;
            $111 = ((($$8204)) + 1|0);
            HEAP8[$111>>0] = -1;
            $112 = ((($$8159203)) + 3|0);
            $113 = ((($$8204)) + 2|0);
            $$8173 = (($$8173205) + -1)|0;
            $114 = ($$8173|0)>(-1);
            if ($114) {
             $$8159203 = $112;$$8173205 = $$8173;$$8204 = $113;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 33:  {
          if ($24) {
           $$9160198 = $27;$$9174200 = $$0165242;$$9199 = $29;
           while(1) {
            $115 = HEAP8[$$9160198>>0]|0;
            $116 = $115&255;
            $117 = ((($$9160198)) + 1|0);
            $118 = HEAP8[$117>>0]|0;
            $119 = $118&255;
            $120 = ((($$9160198)) + 2|0);
            $121 = HEAP8[$120>>0]|0;
            $122 = $121&255;
            $123 = ($116*77)|0;
            $124 = ($119*150)|0;
            $125 = (($124) + ($123))|0;
            $126 = ($122*29)|0;
            $127 = (($125) + ($126))|0;
            $128 = $127 >>> 8;
            $129 = $128&255;
            HEAP8[$$9199>>0] = $129;
            $130 = ((($$9160198)) + 4|0);
            $131 = ((($$9199)) + 1|0);
            $$9174 = (($$9174200) + -1)|0;
            $132 = ($$9174|0)>(-1);
            if ($132) {
             $$9160198 = $130;$$9174200 = $$9174;$$9199 = $131;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 34:  {
          if ($24) {
           $$10161193 = $27;$$10175195 = $$0165242;$$10194 = $29;
           while(1) {
            $133 = HEAP8[$$10161193>>0]|0;
            $134 = $133&255;
            $135 = ((($$10161193)) + 1|0);
            $136 = HEAP8[$135>>0]|0;
            $137 = $136&255;
            $138 = ((($$10161193)) + 2|0);
            $139 = HEAP8[$138>>0]|0;
            $140 = $139&255;
            $141 = ($134*77)|0;
            $142 = ($137*150)|0;
            $143 = (($142) + ($141))|0;
            $144 = ($140*29)|0;
            $145 = (($143) + ($144))|0;
            $146 = $145 >>> 8;
            $147 = $146&255;
            HEAP8[$$10194>>0] = $147;
            $148 = ((($$10161193)) + 3|0);
            $149 = HEAP8[$148>>0]|0;
            $150 = ((($$10194)) + 1|0);
            HEAP8[$150>>0] = $149;
            $151 = ((($$10161193)) + 4|0);
            $152 = ((($$10194)) + 2|0);
            $$10175 = (($$10175195) + -1)|0;
            $153 = ($$10175|0)>(-1);
            if ($153) {
             $$10161193 = $151;$$10175195 = $$10175;$$10194 = $152;
            } else {
             break;
            }
           }
          }
          break;
         }
         case 35:  {
          if ($24) {
           $$11162189 = $27;$$11176191 = $$0165242;$$11190 = $29;
           while(1) {
            $154 = HEAP8[$$11162189>>0]|0;
            HEAP8[$$11190>>0] = $154;
            $155 = ((($$11162189)) + 1|0);
            $156 = HEAP8[$155>>0]|0;
            $157 = ((($$11190)) + 1|0);
            HEAP8[$157>>0] = $156;
            $158 = ((($$11162189)) + 2|0);
            $159 = HEAP8[$158>>0]|0;
            $160 = ((($$11190)) + 2|0);
            HEAP8[$160>>0] = $159;
            $161 = ((($$11162189)) + 4|0);
            $162 = ((($$11190)) + 3|0);
            $$11176 = (($$11176191) + -1)|0;
            $163 = ($$11176|0)>(-1);
            if ($163) {
             $$11162189 = $161;$$11176191 = $$11176;$$11190 = $162;
            } else {
             break;
            }
           }
          }
          break;
         }
         default: {
          break L19;
         }
         }
        } while(0);
        $164 = (($$0164247) + 1)|0;
        $165 = ($164|0)<($4|0);
        if ($165) {
         $$0164247 = $164;
        } else {
         break L17;
        }
       }
       ___assert_fail((139499|0),(139212|0),1554,(139501|0));
       // unreachable;
      }
     } while(0);
     _free($0);
     $$0163 = $19;
     return ($$0163|0);
    }
   }
  }
 } while(0);
 _free($0);
 $$0163 = 0;
 return ($$0163|0);
}
function _stbi__convert_format16($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0151243 = 0, $$0163 = 0, $$0164247 = 0, $$0165 = 0, $$0165242 = 0, $$0165245 = 0, $$0244 = 0, $$10161193 = 0, $$10175 = 0, $$10175195 = 0, $$10194 = 0, $$11162189 = 0, $$11176 = 0, $$11176191 = 0, $$11190 = 0, $$1152238 = 0, $$1166 = 0, $$1166240 = 0, $$1239 = 0, $$2153233 = 0;
 var $$2167 = 0, $$2167235 = 0, $$2234 = 0, $$3154228 = 0, $$3168 = 0, $$3168230 = 0, $$3229 = 0, $$4155223 = 0, $$4169 = 0, $$4169225 = 0, $$4224 = 0, $$5156218 = 0, $$5170 = 0, $$5170220 = 0, $$5219 = 0, $$6157213 = 0, $$6171 = 0, $$6171215 = 0, $$6214 = 0, $$7158208 = 0;
 var $$7172 = 0, $$7172210 = 0, $$7209 = 0, $$8159203 = 0, $$8173 = 0, $$8173205 = 0, $$8204 = 0, $$9160198 = 0, $$9174 = 0, $$9174200 = 0, $$9199 = 0, $$off = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($2|0)==($1|0);
 if ($5) {
  $$0163 = $0;
  return ($$0163|0);
 }
 $$off = (($2) + -1)|0;
 $6 = ($$off>>>0)<(4);
 if (!($6)) {
  ___assert_fail((139445|0),(139212|0),1574,(139476|0));
  // unreachable;
 }
 $7 = $2 << 1;
 $8 = Math_imul($7, $3)|0;
 $9 = Math_imul($8, $4)|0;
 $10 = (_malloc($9)|0);
 $11 = ($10|0)==(0|0);
 if ($11) {
  _free($0);
  $$0163 = 0;
  return ($$0163|0);
 }
 $12 = ($4|0)>(0);
 L11: do {
  if ($12) {
   $13 = $1 << 3;
   $14 = (($13) + ($2))|0;
   $$0165242 = (($3) + -1)|0;
   $15 = ($$0165242|0)>(-1);
   $$0164247 = 0;
   L13: while(1) {
    $16 = Math_imul($$0164247, $3)|0;
    $17 = Math_imul($16, $1)|0;
    $18 = (($0) + ($17<<1)|0);
    $19 = Math_imul($16, $2)|0;
    $20 = (($10) + ($19<<1)|0);
    do {
     switch ($14|0) {
     case 10:  {
      if ($15) {
       $$0151243 = $18;$$0165245 = $$0165242;$$0244 = $20;
       while(1) {
        $21 = HEAP16[$$0151243>>1]|0;
        HEAP16[$$0244>>1] = $21;
        $22 = ((($$0244)) + 2|0);
        HEAP16[$22>>1] = -1;
        $23 = ((($$0151243)) + 2|0);
        $24 = ((($$0244)) + 4|0);
        $$0165 = (($$0165245) + -1)|0;
        $25 = ($$0165|0)>(-1);
        if ($25) {
         $$0151243 = $23;$$0165245 = $$0165;$$0244 = $24;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 11:  {
      if ($15) {
       $$1152238 = $18;$$1166240 = $$0165242;$$1239 = $20;
       while(1) {
        $26 = HEAP16[$$1152238>>1]|0;
        $27 = ((($$1239)) + 4|0);
        HEAP16[$27>>1] = $26;
        $28 = ((($$1239)) + 2|0);
        HEAP16[$28>>1] = $26;
        HEAP16[$$1239>>1] = $26;
        $29 = ((($$1152238)) + 2|0);
        $30 = ((($$1239)) + 6|0);
        $$1166 = (($$1166240) + -1)|0;
        $31 = ($$1166|0)>(-1);
        if ($31) {
         $$1152238 = $29;$$1166240 = $$1166;$$1239 = $30;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 12:  {
      if ($15) {
       $$2153233 = $18;$$2167235 = $$0165242;$$2234 = $20;
       while(1) {
        $32 = HEAP16[$$2153233>>1]|0;
        $33 = ((($$2234)) + 4|0);
        HEAP16[$33>>1] = $32;
        $34 = ((($$2234)) + 2|0);
        HEAP16[$34>>1] = $32;
        HEAP16[$$2234>>1] = $32;
        $35 = ((($$2234)) + 6|0);
        HEAP16[$35>>1] = -1;
        $36 = ((($$2153233)) + 2|0);
        $37 = ((($$2234)) + 8|0);
        $$2167 = (($$2167235) + -1)|0;
        $38 = ($$2167|0)>(-1);
        if ($38) {
         $$2153233 = $36;$$2167235 = $$2167;$$2234 = $37;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 17:  {
      if ($15) {
       $$3154228 = $18;$$3168230 = $$0165242;$$3229 = $20;
       while(1) {
        $39 = HEAP16[$$3154228>>1]|0;
        HEAP16[$$3229>>1] = $39;
        $40 = ((($$3154228)) + 4|0);
        $41 = ((($$3229)) + 2|0);
        $$3168 = (($$3168230) + -1)|0;
        $42 = ($$3168|0)>(-1);
        if ($42) {
         $$3154228 = $40;$$3168230 = $$3168;$$3229 = $41;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 19:  {
      if ($15) {
       $$4155223 = $18;$$4169225 = $$0165242;$$4224 = $20;
       while(1) {
        $43 = HEAP16[$$4155223>>1]|0;
        $44 = ((($$4224)) + 4|0);
        HEAP16[$44>>1] = $43;
        $45 = ((($$4224)) + 2|0);
        HEAP16[$45>>1] = $43;
        HEAP16[$$4224>>1] = $43;
        $46 = ((($$4155223)) + 4|0);
        $47 = ((($$4224)) + 6|0);
        $$4169 = (($$4169225) + -1)|0;
        $48 = ($$4169|0)>(-1);
        if ($48) {
         $$4155223 = $46;$$4169225 = $$4169;$$4224 = $47;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 20:  {
      if ($15) {
       $$5156218 = $18;$$5170220 = $$0165242;$$5219 = $20;
       while(1) {
        $49 = HEAP16[$$5156218>>1]|0;
        $50 = ((($$5219)) + 4|0);
        HEAP16[$50>>1] = $49;
        $51 = ((($$5219)) + 2|0);
        HEAP16[$51>>1] = $49;
        HEAP16[$$5219>>1] = $49;
        $52 = ((($$5156218)) + 2|0);
        $53 = HEAP16[$52>>1]|0;
        $54 = ((($$5219)) + 6|0);
        HEAP16[$54>>1] = $53;
        $55 = ((($$5156218)) + 4|0);
        $56 = ((($$5219)) + 8|0);
        $$5170 = (($$5170220) + -1)|0;
        $57 = ($$5170|0)>(-1);
        if ($57) {
         $$5156218 = $55;$$5170220 = $$5170;$$5219 = $56;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 28:  {
      if ($15) {
       $$6157213 = $18;$$6171215 = $$0165242;$$6214 = $20;
       while(1) {
        $58 = HEAP16[$$6157213>>1]|0;
        HEAP16[$$6214>>1] = $58;
        $59 = ((($$6157213)) + 2|0);
        $60 = HEAP16[$59>>1]|0;
        $61 = ((($$6214)) + 2|0);
        HEAP16[$61>>1] = $60;
        $62 = ((($$6157213)) + 4|0);
        $63 = HEAP16[$62>>1]|0;
        $64 = ((($$6214)) + 4|0);
        HEAP16[$64>>1] = $63;
        $65 = ((($$6214)) + 6|0);
        HEAP16[$65>>1] = -1;
        $66 = ((($$6157213)) + 6|0);
        $67 = ((($$6214)) + 8|0);
        $$6171 = (($$6171215) + -1)|0;
        $68 = ($$6171|0)>(-1);
        if ($68) {
         $$6157213 = $66;$$6171215 = $$6171;$$6214 = $67;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 25:  {
      if ($15) {
       $$7158208 = $18;$$7172210 = $$0165242;$$7209 = $20;
       while(1) {
        $69 = HEAP16[$$7158208>>1]|0;
        $70 = $69&65535;
        $71 = ((($$7158208)) + 2|0);
        $72 = HEAP16[$71>>1]|0;
        $73 = $72&65535;
        $74 = ((($$7158208)) + 4|0);
        $75 = HEAP16[$74>>1]|0;
        $76 = $75&65535;
        $77 = ($70*77)|0;
        $78 = ($73*150)|0;
        $79 = (($78) + ($77))|0;
        $80 = ($76*29)|0;
        $81 = (($79) + ($80))|0;
        $82 = $81 >>> 8;
        $83 = $82&65535;
        HEAP16[$$7209>>1] = $83;
        $84 = ((($$7158208)) + 6|0);
        $85 = ((($$7209)) + 2|0);
        $$7172 = (($$7172210) + -1)|0;
        $86 = ($$7172|0)>(-1);
        if ($86) {
         $$7158208 = $84;$$7172210 = $$7172;$$7209 = $85;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 26:  {
      if ($15) {
       $$8159203 = $18;$$8173205 = $$0165242;$$8204 = $20;
       while(1) {
        $87 = HEAP16[$$8159203>>1]|0;
        $88 = $87&65535;
        $89 = ((($$8159203)) + 2|0);
        $90 = HEAP16[$89>>1]|0;
        $91 = $90&65535;
        $92 = ((($$8159203)) + 4|0);
        $93 = HEAP16[$92>>1]|0;
        $94 = $93&65535;
        $95 = ($88*77)|0;
        $96 = ($91*150)|0;
        $97 = (($96) + ($95))|0;
        $98 = ($94*29)|0;
        $99 = (($97) + ($98))|0;
        $100 = $99 >>> 8;
        $101 = $100&65535;
        HEAP16[$$8204>>1] = $101;
        $102 = ((($$8204)) + 2|0);
        HEAP16[$102>>1] = -1;
        $103 = ((($$8159203)) + 6|0);
        $104 = ((($$8204)) + 4|0);
        $$8173 = (($$8173205) + -1)|0;
        $105 = ($$8173|0)>(-1);
        if ($105) {
         $$8159203 = $103;$$8173205 = $$8173;$$8204 = $104;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 33:  {
      if ($15) {
       $$9160198 = $18;$$9174200 = $$0165242;$$9199 = $20;
       while(1) {
        $106 = HEAP16[$$9160198>>1]|0;
        $107 = $106&65535;
        $108 = ((($$9160198)) + 2|0);
        $109 = HEAP16[$108>>1]|0;
        $110 = $109&65535;
        $111 = ((($$9160198)) + 4|0);
        $112 = HEAP16[$111>>1]|0;
        $113 = $112&65535;
        $114 = ($107*77)|0;
        $115 = ($110*150)|0;
        $116 = (($115) + ($114))|0;
        $117 = ($113*29)|0;
        $118 = (($116) + ($117))|0;
        $119 = $118 >>> 8;
        $120 = $119&65535;
        HEAP16[$$9199>>1] = $120;
        $121 = ((($$9160198)) + 8|0);
        $122 = ((($$9199)) + 2|0);
        $$9174 = (($$9174200) + -1)|0;
        $123 = ($$9174|0)>(-1);
        if ($123) {
         $$9160198 = $121;$$9174200 = $$9174;$$9199 = $122;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 34:  {
      if ($15) {
       $$10161193 = $18;$$10175195 = $$0165242;$$10194 = $20;
       while(1) {
        $124 = HEAP16[$$10161193>>1]|0;
        $125 = $124&65535;
        $126 = ((($$10161193)) + 2|0);
        $127 = HEAP16[$126>>1]|0;
        $128 = $127&65535;
        $129 = ((($$10161193)) + 4|0);
        $130 = HEAP16[$129>>1]|0;
        $131 = $130&65535;
        $132 = ($125*77)|0;
        $133 = ($128*150)|0;
        $134 = (($133) + ($132))|0;
        $135 = ($131*29)|0;
        $136 = (($134) + ($135))|0;
        $137 = $136 >>> 8;
        $138 = $137&65535;
        HEAP16[$$10194>>1] = $138;
        $139 = ((($$10161193)) + 6|0);
        $140 = HEAP16[$139>>1]|0;
        $141 = ((($$10194)) + 2|0);
        HEAP16[$141>>1] = $140;
        $142 = ((($$10161193)) + 8|0);
        $143 = ((($$10194)) + 4|0);
        $$10175 = (($$10175195) + -1)|0;
        $144 = ($$10175|0)>(-1);
        if ($144) {
         $$10161193 = $142;$$10175195 = $$10175;$$10194 = $143;
        } else {
         break;
        }
       }
      }
      break;
     }
     case 35:  {
      if ($15) {
       $$11162189 = $18;$$11176191 = $$0165242;$$11190 = $20;
       while(1) {
        $145 = HEAP16[$$11162189>>1]|0;
        HEAP16[$$11190>>1] = $145;
        $146 = ((($$11162189)) + 2|0);
        $147 = HEAP16[$146>>1]|0;
        $148 = ((($$11190)) + 2|0);
        HEAP16[$148>>1] = $147;
        $149 = ((($$11162189)) + 4|0);
        $150 = HEAP16[$149>>1]|0;
        $151 = ((($$11190)) + 4|0);
        HEAP16[$151>>1] = $150;
        $152 = ((($$11162189)) + 8|0);
        $153 = ((($$11190)) + 6|0);
        $$11176 = (($$11176191) + -1)|0;
        $154 = ($$11176|0)>(-1);
        if ($154) {
         $$11162189 = $152;$$11176191 = $$11176;$$11190 = $153;
        } else {
         break;
        }
       }
      }
      break;
     }
     default: {
      break L13;
     }
     }
    } while(0);
    $155 = (($$0164247) + 1)|0;
    $156 = ($155|0)<($4|0);
    if ($156) {
     $$0164247 = $155;
    } else {
     break L11;
    }
   }
   ___assert_fail((139499|0),(139212|0),1603,(139476|0));
   // unreachable;
  }
 } while(0);
 _free($0);
 $$0163 = $10;
 return ($$0163|0);
}
function _stbi__get32le($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $$0$i$i8 = 0, $$0$i8$i = 0, $$0$i8$i15 = 0, $$pre$i$i = 0, $$pre$i$i3 = 0, $$pre$i3$i = 0, $$pre$i3$i10 = 0, $$pre$phi$i$i5Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i5$i12Z2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre5$i$i = 0, $$pre5$i$i4 = 0, $$pre5$i4$i = 0, $$pre5$i4$i11 = 0, $$sink$i$i$i = 0, $$sink$i$i$i6 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i13 = 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 168|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 172|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)<($4>>>0);
 if ($5) {
  $6 = ((($2)) + 1|0);
  HEAP32[$1>>2] = $6;
  $7 = HEAP8[$2>>0]|0;
  $$0$i$i = $7;$24 = $6;$25 = $4;
 } else {
  $8 = ((($0)) + 32|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$0$i$i = 0;$24 = $2;$25 = $4;
  } else {
   $11 = ((($0)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($0)) + 28|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($0)) + 40|0);
   $16 = ((($0)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (ftCall_iiii($12|0,$14,$15,$17)|0);
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP32[$8>>2] = 0;
    $20 = ((($0)) + 41|0);
    HEAP8[$15>>0] = 0;
    $$pre$phi$i$iZ2D = $20;$$sink$i$i$i = $20;$89 = 0;
   } else {
    $21 = (((($0)) + 40|0) + ($18)|0);
    $$pre$i$i = HEAP8[$15>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $21;$89 = $$pre$i$i;
   }
   HEAP32[$3>>2] = $$sink$i$i$i;
   HEAP32[$1>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i = $89;$24 = $$pre$phi$i$iZ2D;$25 = $$sink$i$i$i;
  }
 }
 $22 = $$0$i$i&255;
 $23 = ($24>>>0)<($25>>>0);
 if ($23) {
  $26 = ((($24)) + 1|0);
  HEAP32[$1>>2] = $26;
  $27 = HEAP8[$24>>0]|0;
  $$0$i8$i = $27;$46 = $26;$47 = $25;
 } else {
  $28 = ((($0)) + 32|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ($29|0)==(0);
  if ($30) {
   $$0$i8$i = 0;$46 = $24;$47 = $25;
  } else {
   $31 = ((($0)) + 16|0);
   $32 = HEAP32[$31>>2]|0;
   $33 = ((($0)) + 28|0);
   $34 = HEAP32[$33>>2]|0;
   $35 = ((($0)) + 40|0);
   $36 = ((($0)) + 36|0);
   $37 = HEAP32[$36>>2]|0;
   $38 = (ftCall_iiii($32|0,$34,$35,$37)|0);
   $39 = ($38|0)==(0);
   if ($39) {
    HEAP32[$28>>2] = 0;
    $40 = ((($0)) + 41|0);
    HEAP8[$35>>0] = 0;
    $$pre$phi$i5$iZ2D = $40;$$sink$i$i6$i = $40;$90 = 0;
   } else {
    $41 = (((($0)) + 40|0) + ($38)|0);
    $$pre$i3$i = HEAP8[$35>>0]|0;
    $$pre5$i4$i = ((($0)) + 41|0);
    $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $41;$90 = $$pre$i3$i;
   }
   HEAP32[$3>>2] = $$sink$i$i6$i;
   HEAP32[$1>>2] = $$pre$phi$i5$iZ2D;
   $$0$i8$i = $90;$46 = $$pre$phi$i5$iZ2D;$47 = $$sink$i$i6$i;
  }
 }
 $42 = $$0$i8$i&255;
 $43 = $42 << 8;
 $44 = $43 | $22;
 $45 = ($46>>>0)<($47>>>0);
 if ($45) {
  $48 = ((($46)) + 1|0);
  HEAP32[$1>>2] = $48;
  $49 = HEAP8[$46>>0]|0;
  $$0$i$i8 = $49;$66 = $48;$67 = $47;
 } else {
  $50 = ((($0)) + 32|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ($51|0)==(0);
  if ($52) {
   $$0$i$i8 = 0;$66 = $46;$67 = $47;
  } else {
   $53 = ((($0)) + 16|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($0)) + 28|0);
   $56 = HEAP32[$55>>2]|0;
   $57 = ((($0)) + 40|0);
   $58 = ((($0)) + 36|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = (ftCall_iiii($54|0,$56,$57,$59)|0);
   $61 = ($60|0)==(0);
   if ($61) {
    HEAP32[$50>>2] = 0;
    $62 = ((($0)) + 41|0);
    HEAP8[$57>>0] = 0;
    $$pre$phi$i$i5Z2D = $62;$$sink$i$i$i6 = $62;$91 = 0;
   } else {
    $63 = (((($0)) + 40|0) + ($60)|0);
    $$pre$i$i3 = HEAP8[$57>>0]|0;
    $$pre5$i$i4 = ((($0)) + 41|0);
    $$pre$phi$i$i5Z2D = $$pre5$i$i4;$$sink$i$i$i6 = $63;$91 = $$pre$i$i3;
   }
   HEAP32[$3>>2] = $$sink$i$i$i6;
   HEAP32[$1>>2] = $$pre$phi$i$i5Z2D;
   $$0$i$i8 = $91;$66 = $$pre$phi$i$i5Z2D;$67 = $$sink$i$i$i6;
  }
 }
 $64 = $$0$i$i8&255;
 $65 = ($66>>>0)<($67>>>0);
 if ($65) {
  $68 = ((($66)) + 1|0);
  HEAP32[$1>>2] = $68;
  $69 = HEAP8[$66>>0]|0;
  $$0$i8$i15 = $69;
  $84 = $$0$i8$i15&255;
  $85 = $84 << 8;
  $86 = $85 | $64;
  $87 = $86 << 16;
  $88 = $44 | $87;
  return ($88|0);
 }
 $70 = ((($0)) + 32|0);
 $71 = HEAP32[$70>>2]|0;
 $72 = ($71|0)==(0);
 if ($72) {
  $$0$i8$i15 = 0;
  $84 = $$0$i8$i15&255;
  $85 = $84 << 8;
  $86 = $85 | $64;
  $87 = $86 << 16;
  $88 = $44 | $87;
  return ($88|0);
 }
 $73 = ((($0)) + 16|0);
 $74 = HEAP32[$73>>2]|0;
 $75 = ((($0)) + 28|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = ((($0)) + 40|0);
 $78 = ((($0)) + 36|0);
 $79 = HEAP32[$78>>2]|0;
 $80 = (ftCall_iiii($74|0,$76,$77,$79)|0);
 $81 = ($80|0)==(0);
 if ($81) {
  HEAP32[$70>>2] = 0;
  $82 = ((($0)) + 41|0);
  HEAP8[$77>>0] = 0;
  $$pre$phi$i5$i12Z2D = $82;$$sink$i$i6$i13 = $82;$92 = 0;
 } else {
  $83 = (((($0)) + 40|0) + ($80)|0);
  $$pre$i3$i10 = HEAP8[$77>>0]|0;
  $$pre5$i4$i11 = ((($0)) + 41|0);
  $$pre$phi$i5$i12Z2D = $$pre5$i4$i11;$$sink$i$i6$i13 = $83;$92 = $$pre$i3$i10;
 }
 HEAP32[$3>>2] = $$sink$i$i6$i13;
 HEAP32[$1>>2] = $$pre$phi$i5$i12Z2D;
 $$0$i8$i15 = $92;
 $84 = $$0$i8$i15&255;
 $85 = $84 << 8;
 $86 = $85 | $64;
 $87 = $86 << 16;
 $88 = $44 | $87;
 return ($88|0);
}
function _stbi__bmp_parse_header($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i136 = 0, $$0$i$i150 = 0, $$0$i$i164 = 0, $$0$i$i178 = 0, $$0$i115 = 0, $$0$i8$i143 = 0, $$0$i8$i157 = 0, $$0$i8$i171 = 0, $$0$i8$i185 = 0, $$3 = 0, $$ph = 0, $$ph194 = 0, $$ph196 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i131 = 0, $$pre$i$i145 = 0, $$pre$i$i159 = 0, $$pre$i$i173 = 0;
 var $$pre$i110 = 0, $$pre$i3$i138 = 0, $$pre$i3$i152 = 0, $$pre$i3$i166 = 0, $$pre$i3$i180 = 0, $$pre$phi$i$i$sinkZ2D = 0, $$pre$phi$i$i119$sinkZ2D = 0, $$pre$phi$i$i119Z2D = 0, $$pre$phi$i$i133Z2D = 0, $$pre$phi$i$i147Z2D = 0, $$pre$phi$i$i161Z2D = 0, $$pre$phi$i$i175Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i112Z2D = 0, $$pre$phi$i5$i126Z2D = 0, $$pre$phi$i5$i140Z2D = 0, $$pre$phi$i5$i154Z2D = 0, $$pre$phi$i5$i168Z2D = 0, $$pre$phi$i5$i182Z2D = 0, $$pre$phi$i5$iZ2D = 0;
 var $$pre$phi$iZ2D = 0, $$pre192 = 0, $$pre5$i = 0, $$pre5$i$i = 0, $$pre5$i$i118 = 0, $$pre5$i$i132 = 0, $$pre5$i$i146 = 0, $$pre5$i$i160 = 0, $$pre5$i$i174 = 0, $$pre5$i111 = 0, $$pre5$i4$i = 0, $$pre5$i4$i125 = 0, $$pre5$i4$i139 = 0, $$pre5$i4$i153 = 0, $$pre5$i4$i167 = 0, $$pre5$i4$i181 = 0, $$sink = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i120 = 0;
 var $$sink$i$i$i134 = 0, $$sink$i$i$i148 = 0, $$sink$i$i$i162 = 0, $$sink$i$i$i176 = 0, $$sink$i$i113 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i127 = 0, $$sink$i$i6$i141 = 0, $$sink$i$i6$i155 = 0, $$sink$i$i6$i169 = 0, $$sink$i$i6$i183 = 0, $$sink198 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 168|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 172|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  HEAP32[$2>>2] = $7;
  $8 = HEAP8[$3>>0]|0;
  $$0$i = $8;$25 = $7;$26 = $5;
 } else {
  $9 = ((($0)) + 32|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$3 = 0;
   return ($$3|0);
  }
  $12 = ((($0)) + 16|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ((($0)) + 28|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($0)) + 40|0);
  $17 = ((($0)) + 36|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = (ftCall_iiii($13|0,$15,$16,$18)|0);
  $20 = ($19|0)==(0);
  if ($20) {
   HEAP32[$9>>2] = 0;
   $21 = ((($0)) + 41|0);
   HEAP8[$16>>0] = 0;
   $$pre$phi$iZ2D = $21;$$sink$i$i = $21;$318 = 0;
  } else {
   $22 = (((($0)) + 40|0) + ($19)|0);
   $$pre$i = HEAP8[$16>>0]|0;
   $$pre5$i = ((($0)) + 41|0);
   $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $22;$318 = $$pre$i;
  }
  HEAP32[$4>>2] = $$sink$i$i;
  HEAP32[$2>>2] = $$pre$phi$iZ2D;
  $$0$i = $318;$25 = $$pre$phi$iZ2D;$26 = $$sink$i$i;
 }
 $23 = ($$0$i<<24>>24)==(66);
 if (!($23)) {
  $$3 = 0;
  return ($$3|0);
 }
 $24 = ($25>>>0)<($26>>>0);
 if ($24) {
  $27 = ((($25)) + 1|0);
  HEAP32[$2>>2] = $27;
  $28 = HEAP8[$25>>0]|0;
  $$0$i115 = $28;
 } else {
  $29 = ((($0)) + 32|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  if ($31) {
   $$3 = 0;
   return ($$3|0);
  }
  $32 = ((($0)) + 16|0);
  $33 = HEAP32[$32>>2]|0;
  $34 = ((($0)) + 28|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($0)) + 40|0);
  $37 = ((($0)) + 36|0);
  $38 = HEAP32[$37>>2]|0;
  $39 = (ftCall_iiii($33|0,$35,$36,$38)|0);
  $40 = ($39|0)==(0);
  if ($40) {
   HEAP32[$29>>2] = 0;
   $41 = ((($0)) + 41|0);
   HEAP8[$36>>0] = 0;
   $$pre$phi$i112Z2D = $41;$$sink$i$i113 = $41;$319 = 0;
  } else {
   $42 = (((($0)) + 40|0) + ($39)|0);
   $$pre$i110 = HEAP8[$36>>0]|0;
   $$pre5$i111 = ((($0)) + 41|0);
   $$pre$phi$i112Z2D = $$pre5$i111;$$sink$i$i113 = $42;$319 = $$pre$i110;
  }
  HEAP32[$4>>2] = $$sink$i$i113;
  HEAP32[$2>>2] = $$pre$phi$i112Z2D;
  $$0$i115 = $319;
 }
 $43 = ($$0$i115<<24>>24)==(77);
 if (!($43)) {
  $$3 = 0;
  return ($$3|0);
 }
 (_stbi__get32le($0)|0);
 $44 = HEAP32[$2>>2]|0;
 $45 = HEAP32[$4>>2]|0;
 $46 = ($44>>>0)<($45>>>0);
 if ($46) {
  $47 = ((($44)) + 1|0);
  $$ph = $45;$$pre$phi$i$i$sinkZ2D = $47;
  label = 24;
 } else {
  $48 = ((($0)) + 32|0);
  $49 = HEAP32[$48>>2]|0;
  $50 = ($49|0)==(0);
  if ($50) {
   $63 = $44;$64 = $45;
  } else {
   $51 = ((($0)) + 16|0);
   $52 = HEAP32[$51>>2]|0;
   $53 = ((($0)) + 28|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = ((($0)) + 40|0);
   $56 = ((($0)) + 36|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = (ftCall_iiii($52|0,$54,$55,$57)|0);
   $59 = ($58|0)==(0);
   if ($59) {
    HEAP32[$48>>2] = 0;
    $60 = ((($0)) + 41|0);
    HEAP8[$55>>0] = 0;
    $$pre$phi$i$iZ2D = $60;$$sink$i$i$i = $60;
   } else {
    $61 = (((($0)) + 40|0) + ($58)|0);
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $61;
   }
   HEAP32[$4>>2] = $$sink$i$i$i;
   $$ph = $$sink$i$i$i;$$pre$phi$i$i$sinkZ2D = $$pre$phi$i$iZ2D;
   label = 24;
  }
 }
 if ((label|0) == 24) {
  HEAP32[$2>>2] = $$pre$phi$i$i$sinkZ2D;
  $63 = $$pre$phi$i$i$sinkZ2D;$64 = $$ph;
 }
 $62 = ($63>>>0)<($64>>>0);
 if ($62) {
  $65 = ((($63)) + 1|0);
  $$ph194 = $64;$$sink = $65;
  label = 32;
 } else {
  $66 = ((($0)) + 32|0);
  $67 = HEAP32[$66>>2]|0;
  $68 = ($67|0)==(0);
  if ($68) {
   $81 = $63;$82 = $64;
  } else {
   $69 = ((($0)) + 16|0);
   $70 = HEAP32[$69>>2]|0;
   $71 = ((($0)) + 28|0);
   $72 = HEAP32[$71>>2]|0;
   $73 = ((($0)) + 40|0);
   $74 = ((($0)) + 36|0);
   $75 = HEAP32[$74>>2]|0;
   $76 = (ftCall_iiii($70|0,$72,$73,$75)|0);
   $77 = ($76|0)==(0);
   if ($77) {
    HEAP32[$66>>2] = 0;
    $78 = ((($0)) + 41|0);
    HEAP8[$73>>0] = 0;
    $$pre$phi$i5$iZ2D = $78;$$sink$i$i6$i = $78;
   } else {
    $79 = (((($0)) + 40|0) + ($76)|0);
    $$pre5$i4$i = ((($0)) + 41|0);
    $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $79;
   }
   HEAP32[$4>>2] = $$sink$i$i6$i;
   $$ph194 = $$sink$i$i6$i;$$sink = $$pre$phi$i5$iZ2D;
   label = 32;
  }
 }
 if ((label|0) == 32) {
  HEAP32[$2>>2] = $$sink;
  $81 = $$sink;$82 = $$ph194;
 }
 $80 = ($81>>>0)<($82>>>0);
 if ($80) {
  $83 = ((($81)) + 1|0);
  $$ph196 = $82;$$pre$phi$i$i119$sinkZ2D = $83;
  label = 40;
 } else {
  $84 = ((($0)) + 32|0);
  $85 = HEAP32[$84>>2]|0;
  $86 = ($85|0)==(0);
  if ($86) {
   $100 = $82;$99 = $81;
  } else {
   $87 = ((($0)) + 16|0);
   $88 = HEAP32[$87>>2]|0;
   $89 = ((($0)) + 28|0);
   $90 = HEAP32[$89>>2]|0;
   $91 = ((($0)) + 40|0);
   $92 = ((($0)) + 36|0);
   $93 = HEAP32[$92>>2]|0;
   $94 = (ftCall_iiii($88|0,$90,$91,$93)|0);
   $95 = ($94|0)==(0);
   if ($95) {
    HEAP32[$84>>2] = 0;
    $96 = ((($0)) + 41|0);
    HEAP8[$91>>0] = 0;
    $$pre$phi$i$i119Z2D = $96;$$sink$i$i$i120 = $96;
   } else {
    $97 = (((($0)) + 40|0) + ($94)|0);
    $$pre5$i$i118 = ((($0)) + 41|0);
    $$pre$phi$i$i119Z2D = $$pre5$i$i118;$$sink$i$i$i120 = $97;
   }
   HEAP32[$4>>2] = $$sink$i$i$i120;
   $$ph196 = $$sink$i$i$i120;$$pre$phi$i$i119$sinkZ2D = $$pre$phi$i$i119Z2D;
   label = 40;
  }
 }
 if ((label|0) == 40) {
  HEAP32[$2>>2] = $$pre$phi$i$i119$sinkZ2D;
  $100 = $$ph196;$99 = $$pre$phi$i$i119$sinkZ2D;
 }
 $98 = ($99>>>0)<($100>>>0);
 if ($98) {
  $101 = ((($99)) + 1|0);
  $$sink198 = $101;
  label = 48;
 } else {
  $102 = ((($0)) + 32|0);
  $103 = HEAP32[$102>>2]|0;
  $104 = ($103|0)==(0);
  if (!($104)) {
   $105 = ((($0)) + 16|0);
   $106 = HEAP32[$105>>2]|0;
   $107 = ((($0)) + 28|0);
   $108 = HEAP32[$107>>2]|0;
   $109 = ((($0)) + 40|0);
   $110 = ((($0)) + 36|0);
   $111 = HEAP32[$110>>2]|0;
   $112 = (ftCall_iiii($106|0,$108,$109,$111)|0);
   $113 = ($112|0)==(0);
   if ($113) {
    HEAP32[$102>>2] = 0;
    $114 = ((($0)) + 41|0);
    HEAP8[$109>>0] = 0;
    $$pre$phi$i5$i126Z2D = $114;$$sink$i$i6$i127 = $114;
   } else {
    $115 = (((($0)) + 40|0) + ($112)|0);
    $$pre5$i4$i125 = ((($0)) + 41|0);
    $$pre$phi$i5$i126Z2D = $$pre5$i4$i125;$$sink$i$i6$i127 = $115;
   }
   HEAP32[$4>>2] = $$sink$i$i6$i127;
   $$sink198 = $$pre$phi$i5$i126Z2D;
   label = 48;
  }
 }
 if ((label|0) == 48) {
  HEAP32[$2>>2] = $$sink198;
 }
 $116 = (_stbi__get32le($0)|0);
 $117 = ((($1)) + 4|0);
 HEAP32[$117>>2] = $116;
 $118 = (_stbi__get32le($0)|0);
 $119 = ((($1)) + 8|0);
 HEAP32[$119>>2] = $118;
 $120 = ((($1)) + 24|0);
 $121 = ((($1)) + 20|0);
 $122 = ((($1)) + 16|0);
 $123 = ((($1)) + 12|0);
 $124 = ($118|0)==(12);
 ;HEAP32[$123>>2]=0|0;HEAP32[$123+4>>2]=0|0;HEAP32[$123+8>>2]=0|0;HEAP32[$123+12>>2]=0|0;
 switch ($118|0) {
 case 12:  {
  $125 = HEAP32[$2>>2]|0;
  $126 = HEAP32[$4>>2]|0;
  $127 = ($125>>>0)<($126>>>0);
  if ($127) {
   $128 = ((($125)) + 1|0);
   HEAP32[$2>>2] = $128;
   $129 = HEAP8[$125>>0]|0;
   $$0$i$i136 = $129;$146 = $128;$147 = $126;
  } else {
   $130 = ((($0)) + 32|0);
   $131 = HEAP32[$130>>2]|0;
   $132 = ($131|0)==(0);
   if ($132) {
    $$0$i$i136 = 0;$146 = $125;$147 = $126;
   } else {
    $133 = ((($0)) + 16|0);
    $134 = HEAP32[$133>>2]|0;
    $135 = ((($0)) + 28|0);
    $136 = HEAP32[$135>>2]|0;
    $137 = ((($0)) + 40|0);
    $138 = ((($0)) + 36|0);
    $139 = HEAP32[$138>>2]|0;
    $140 = (ftCall_iiii($134|0,$136,$137,$139)|0);
    $141 = ($140|0)==(0);
    if ($141) {
     HEAP32[$130>>2] = 0;
     $142 = ((($0)) + 41|0);
     HEAP8[$137>>0] = 0;
     $$pre$phi$i$i133Z2D = $142;$$sink$i$i$i134 = $142;$320 = 0;
    } else {
     $143 = (((($0)) + 40|0) + ($140)|0);
     $$pre$i$i131 = HEAP8[$137>>0]|0;
     $$pre5$i$i132 = ((($0)) + 41|0);
     $$pre$phi$i$i133Z2D = $$pre5$i$i132;$$sink$i$i$i134 = $143;$320 = $$pre$i$i131;
    }
    HEAP32[$4>>2] = $$sink$i$i$i134;
    HEAP32[$2>>2] = $$pre$phi$i$i133Z2D;
    $$0$i$i136 = $320;$146 = $$pre$phi$i$i133Z2D;$147 = $$sink$i$i$i134;
   }
  }
  $144 = $$0$i$i136&255;
  $145 = ($146>>>0)<($147>>>0);
  if ($145) {
   $148 = ((($146)) + 1|0);
   HEAP32[$2>>2] = $148;
   $149 = HEAP8[$146>>0]|0;
   $$0$i8$i143 = $149;$168 = $148;$169 = $147;
  } else {
   $150 = ((($0)) + 32|0);
   $151 = HEAP32[$150>>2]|0;
   $152 = ($151|0)==(0);
   if ($152) {
    $$0$i8$i143 = 0;$168 = $146;$169 = $147;
   } else {
    $153 = ((($0)) + 16|0);
    $154 = HEAP32[$153>>2]|0;
    $155 = ((($0)) + 28|0);
    $156 = HEAP32[$155>>2]|0;
    $157 = ((($0)) + 40|0);
    $158 = ((($0)) + 36|0);
    $159 = HEAP32[$158>>2]|0;
    $160 = (ftCall_iiii($154|0,$156,$157,$159)|0);
    $161 = ($160|0)==(0);
    if ($161) {
     HEAP32[$150>>2] = 0;
     $162 = ((($0)) + 41|0);
     HEAP8[$157>>0] = 0;
     $$pre$phi$i5$i140Z2D = $162;$$sink$i$i6$i141 = $162;$321 = 0;
    } else {
     $163 = (((($0)) + 40|0) + ($160)|0);
     $$pre$i3$i138 = HEAP8[$157>>0]|0;
     $$pre5$i4$i139 = ((($0)) + 41|0);
     $$pre$phi$i5$i140Z2D = $$pre5$i4$i139;$$sink$i$i6$i141 = $163;$321 = $$pre$i3$i138;
    }
    HEAP32[$4>>2] = $$sink$i$i6$i141;
    HEAP32[$2>>2] = $$pre$phi$i5$i140Z2D;
    $$0$i8$i143 = $321;$168 = $$pre$phi$i5$i140Z2D;$169 = $$sink$i$i6$i141;
   }
  }
  $164 = $$0$i8$i143&255;
  $165 = $164 << 8;
  $166 = $165 | $144;
  HEAP32[$0>>2] = $166;
  $167 = ($168>>>0)<($169>>>0);
  if ($167) {
   $170 = ((($168)) + 1|0);
   HEAP32[$2>>2] = $170;
   $171 = HEAP8[$168>>0]|0;
   $$0$i$i150 = $171;$188 = $170;$189 = $169;
  } else {
   $172 = ((($0)) + 32|0);
   $173 = HEAP32[$172>>2]|0;
   $174 = ($173|0)==(0);
   if ($174) {
    $$0$i$i150 = 0;$188 = $168;$189 = $169;
   } else {
    $175 = ((($0)) + 16|0);
    $176 = HEAP32[$175>>2]|0;
    $177 = ((($0)) + 28|0);
    $178 = HEAP32[$177>>2]|0;
    $179 = ((($0)) + 40|0);
    $180 = ((($0)) + 36|0);
    $181 = HEAP32[$180>>2]|0;
    $182 = (ftCall_iiii($176|0,$178,$179,$181)|0);
    $183 = ($182|0)==(0);
    if ($183) {
     HEAP32[$172>>2] = 0;
     $184 = ((($0)) + 41|0);
     HEAP8[$179>>0] = 0;
     $$pre$phi$i$i147Z2D = $184;$$sink$i$i$i148 = $184;$322 = 0;
    } else {
     $185 = (((($0)) + 40|0) + ($182)|0);
     $$pre$i$i145 = HEAP8[$179>>0]|0;
     $$pre5$i$i146 = ((($0)) + 41|0);
     $$pre$phi$i$i147Z2D = $$pre5$i$i146;$$sink$i$i$i148 = $185;$322 = $$pre$i$i145;
    }
    HEAP32[$4>>2] = $$sink$i$i$i148;
    HEAP32[$2>>2] = $$pre$phi$i$i147Z2D;
    $$0$i$i150 = $322;$188 = $$pre$phi$i$i147Z2D;$189 = $$sink$i$i$i148;
   }
  }
  $186 = $$0$i$i150&255;
  $187 = ($188>>>0)<($189>>>0);
  if ($187) {
   $190 = ((($188)) + 1|0);
   HEAP32[$2>>2] = $190;
   $191 = HEAP8[$188>>0]|0;
   $$0$i8$i157 = $191;$323 = $189;$324 = $190;
  } else {
   $192 = ((($0)) + 32|0);
   $193 = HEAP32[$192>>2]|0;
   $194 = ($193|0)==(0);
   if ($194) {
    $$0$i8$i157 = 0;$323 = $189;$324 = $188;
   } else {
    $195 = ((($0)) + 16|0);
    $196 = HEAP32[$195>>2]|0;
    $197 = ((($0)) + 28|0);
    $198 = HEAP32[$197>>2]|0;
    $199 = ((($0)) + 40|0);
    $200 = ((($0)) + 36|0);
    $201 = HEAP32[$200>>2]|0;
    $202 = (ftCall_iiii($196|0,$198,$199,$201)|0);
    $203 = ($202|0)==(0);
    if ($203) {
     HEAP32[$192>>2] = 0;
     $204 = ((($0)) + 41|0);
     HEAP8[$199>>0] = 0;
     $$pre$phi$i5$i154Z2D = $204;$$sink$i$i6$i155 = $204;$325 = 0;
    } else {
     $205 = (((($0)) + 40|0) + ($202)|0);
     $$pre$i3$i152 = HEAP8[$199>>0]|0;
     $$pre5$i4$i153 = ((($0)) + 41|0);
     $$pre$phi$i5$i154Z2D = $$pre5$i4$i153;$$sink$i$i6$i155 = $205;$325 = $$pre$i3$i152;
    }
    HEAP32[$4>>2] = $$sink$i$i6$i155;
    HEAP32[$2>>2] = $$pre$phi$i5$i154Z2D;
    $$0$i8$i157 = $325;$323 = $$sink$i$i6$i155;$324 = $$pre$phi$i5$i154Z2D;
   }
  }
  $206 = $$0$i8$i157&255;
  $207 = $206 << 8;
  $208 = $207 | $186;
  $209 = ((($0)) + 4|0);
  HEAP32[$209>>2] = $208;
  $214 = $324;$215 = $323;
  break;
 }
 case 124: case 108: case 56: case 40:  {
  $210 = (_stbi__get32le($0)|0);
  HEAP32[$0>>2] = $210;
  $211 = (_stbi__get32le($0)|0);
  $212 = ((($0)) + 4|0);
  HEAP32[$212>>2] = $211;
  $$pre = HEAP32[$2>>2]|0;
  $$pre192 = HEAP32[$4>>2]|0;
  $214 = $$pre;$215 = $$pre192;
  break;
 }
 default: {
  $$3 = 0;
  return ($$3|0);
 }
 }
 $213 = ($214>>>0)<($215>>>0);
 if ($213) {
  $216 = ((($214)) + 1|0);
  HEAP32[$2>>2] = $216;
  $217 = HEAP8[$214>>0]|0;
  $$0$i$i164 = $217;$234 = $216;$235 = $215;
 } else {
  $218 = ((($0)) + 32|0);
  $219 = HEAP32[$218>>2]|0;
  $220 = ($219|0)==(0);
  if ($220) {
   $$0$i$i164 = 0;$234 = $214;$235 = $215;
  } else {
   $221 = ((($0)) + 16|0);
   $222 = HEAP32[$221>>2]|0;
   $223 = ((($0)) + 28|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = ((($0)) + 40|0);
   $226 = ((($0)) + 36|0);
   $227 = HEAP32[$226>>2]|0;
   $228 = (ftCall_iiii($222|0,$224,$225,$227)|0);
   $229 = ($228|0)==(0);
   if ($229) {
    HEAP32[$218>>2] = 0;
    $230 = ((($0)) + 41|0);
    HEAP8[$225>>0] = 0;
    $$pre$phi$i$i161Z2D = $230;$$sink$i$i$i162 = $230;$326 = 0;
   } else {
    $231 = (((($0)) + 40|0) + ($228)|0);
    $$pre$i$i159 = HEAP8[$225>>0]|0;
    $$pre5$i$i160 = ((($0)) + 41|0);
    $$pre$phi$i$i161Z2D = $$pre5$i$i160;$$sink$i$i$i162 = $231;$326 = $$pre$i$i159;
   }
   HEAP32[$4>>2] = $$sink$i$i$i162;
   HEAP32[$2>>2] = $$pre$phi$i$i161Z2D;
   $$0$i$i164 = $326;$234 = $$pre$phi$i$i161Z2D;$235 = $$sink$i$i$i162;
  }
 }
 $232 = $$0$i$i164&255;
 $233 = ($234>>>0)<($235>>>0);
 if ($233) {
  $236 = ((($234)) + 1|0);
  HEAP32[$2>>2] = $236;
  $237 = HEAP8[$234>>0]|0;
  $$0$i8$i171 = $237;$257 = $236;$258 = $235;
 } else {
  $238 = ((($0)) + 32|0);
  $239 = HEAP32[$238>>2]|0;
  $240 = ($239|0)==(0);
  if ($240) {
   $$0$i8$i171 = 0;$257 = $234;$258 = $235;
  } else {
   $241 = ((($0)) + 16|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = ((($0)) + 28|0);
   $244 = HEAP32[$243>>2]|0;
   $245 = ((($0)) + 40|0);
   $246 = ((($0)) + 36|0);
   $247 = HEAP32[$246>>2]|0;
   $248 = (ftCall_iiii($242|0,$244,$245,$247)|0);
   $249 = ($248|0)==(0);
   if ($249) {
    HEAP32[$238>>2] = 0;
    $250 = ((($0)) + 41|0);
    HEAP8[$245>>0] = 0;
    $$pre$phi$i5$i168Z2D = $250;$$sink$i$i6$i169 = $250;$327 = 0;
   } else {
    $251 = (((($0)) + 40|0) + ($248)|0);
    $$pre$i3$i166 = HEAP8[$245>>0]|0;
    $$pre5$i4$i167 = ((($0)) + 41|0);
    $$pre$phi$i5$i168Z2D = $$pre5$i4$i167;$$sink$i$i6$i169 = $251;$327 = $$pre$i3$i166;
   }
   HEAP32[$4>>2] = $$sink$i$i6$i169;
   HEAP32[$2>>2] = $$pre$phi$i5$i168Z2D;
   $$0$i8$i171 = $327;$257 = $$pre$phi$i5$i168Z2D;$258 = $$sink$i$i6$i169;
  }
 }
 $252 = $$0$i8$i171&255;
 $253 = $252 << 8;
 $254 = $253 | $232;
 $255 = ($254|0)==(1);
 if (!($255)) {
  $$3 = 0;
  return ($$3|0);
 }
 $256 = ($257>>>0)<($258>>>0);
 if ($256) {
  $259 = ((($257)) + 1|0);
  HEAP32[$2>>2] = $259;
  $260 = HEAP8[$257>>0]|0;
  $$0$i$i178 = $260;$277 = $259;$278 = $258;
 } else {
  $261 = ((($0)) + 32|0);
  $262 = HEAP32[$261>>2]|0;
  $263 = ($262|0)==(0);
  if ($263) {
   $$0$i$i178 = 0;$277 = $257;$278 = $258;
  } else {
   $264 = ((($0)) + 16|0);
   $265 = HEAP32[$264>>2]|0;
   $266 = ((($0)) + 28|0);
   $267 = HEAP32[$266>>2]|0;
   $268 = ((($0)) + 40|0);
   $269 = ((($0)) + 36|0);
   $270 = HEAP32[$269>>2]|0;
   $271 = (ftCall_iiii($265|0,$267,$268,$270)|0);
   $272 = ($271|0)==(0);
   if ($272) {
    HEAP32[$261>>2] = 0;
    $273 = ((($0)) + 41|0);
    HEAP8[$268>>0] = 0;
    $$pre$phi$i$i175Z2D = $273;$$sink$i$i$i176 = $273;$328 = 0;
   } else {
    $274 = (((($0)) + 40|0) + ($271)|0);
    $$pre$i$i173 = HEAP8[$268>>0]|0;
    $$pre5$i$i174 = ((($0)) + 41|0);
    $$pre$phi$i$i175Z2D = $$pre5$i$i174;$$sink$i$i$i176 = $274;$328 = $$pre$i$i173;
   }
   HEAP32[$4>>2] = $$sink$i$i$i176;
   HEAP32[$2>>2] = $$pre$phi$i$i175Z2D;
   $$0$i$i178 = $328;$277 = $$pre$phi$i$i175Z2D;$278 = $$sink$i$i$i176;
  }
 }
 $275 = $$0$i$i178&255;
 $276 = ($277>>>0)<($278>>>0);
 if ($276) {
  $279 = ((($277)) + 1|0);
  HEAP32[$2>>2] = $279;
  $280 = HEAP8[$277>>0]|0;
  $$0$i8$i185 = $280;
 } else {
  $281 = ((($0)) + 32|0);
  $282 = HEAP32[$281>>2]|0;
  $283 = ($282|0)==(0);
  if ($283) {
   $$0$i8$i185 = 0;
  } else {
   $284 = ((($0)) + 16|0);
   $285 = HEAP32[$284>>2]|0;
   $286 = ((($0)) + 28|0);
   $287 = HEAP32[$286>>2]|0;
   $288 = ((($0)) + 40|0);
   $289 = ((($0)) + 36|0);
   $290 = HEAP32[$289>>2]|0;
   $291 = (ftCall_iiii($285|0,$287,$288,$290)|0);
   $292 = ($291|0)==(0);
   if ($292) {
    HEAP32[$281>>2] = 0;
    $293 = ((($0)) + 41|0);
    HEAP8[$288>>0] = 0;
    $$pre$phi$i5$i182Z2D = $293;$$sink$i$i6$i183 = $293;$329 = 0;
   } else {
    $294 = (((($0)) + 40|0) + ($291)|0);
    $$pre$i3$i180 = HEAP8[$288>>0]|0;
    $$pre5$i4$i181 = ((($0)) + 41|0);
    $$pre$phi$i5$i182Z2D = $$pre5$i4$i181;$$sink$i$i6$i183 = $294;$329 = $$pre$i3$i180;
   }
   HEAP32[$4>>2] = $$sink$i$i6$i183;
   HEAP32[$2>>2] = $$pre$phi$i5$i182Z2D;
   $$0$i8$i185 = $329;
  }
 }
 $295 = $$0$i8$i185&255;
 $296 = $295 << 8;
 $297 = $296 | $275;
 HEAP32[$1>>2] = $297;
 if ($124) {
  $$3 = (1);
  return ($$3|0);
 }
 $298 = (_stbi__get32le($0)|0);
 $299 = (($298) + -1)|0;
 $300 = ($299>>>0)<(2);
 if ($300) {
  $$3 = 0;
  return ($$3|0);
 }
 (_stbi__get32le($0)|0);
 (_stbi__get32le($0)|0);
 (_stbi__get32le($0)|0);
 (_stbi__get32le($0)|0);
 (_stbi__get32le($0)|0);
 $301 = $118 | 16;
 switch ($301|0) {
 case 56:  {
  $302 = ($118|0)==(56);
  if ($302) {
   (_stbi__get32le($0)|0);
   (_stbi__get32le($0)|0);
   (_stbi__get32le($0)|0);
   (_stbi__get32le($0)|0);
  }
  $303 = HEAP32[$1>>2]|0;
  switch ($303|0) {
  case 32: case 16:  {
   break;
  }
  default: {
   $$3 = (1);
   return ($$3|0);
  }
  }
  switch ($298|0) {
  case 0:  {
   $304 = ($303|0)==(32);
   if ($304) {
    HEAP32[$123>>2] = 16711680;
    HEAP32[$122>>2] = 65280;
    HEAP32[$121>>2] = 255;
    HEAP32[$120>>2] = -16777216;
    $305 = ((($1)) + 28|0);
    HEAP32[$305>>2] = 0;
    $$3 = (1);
    return ($$3|0);
   } else {
    HEAP32[$123>>2] = 31744;
    HEAP32[$122>>2] = 992;
    HEAP32[$121>>2] = 31;
    $$3 = (1);
    return ($$3|0);
   }
   break;
  }
  case 3:  {
   $306 = (_stbi__get32le($0)|0);
   HEAP32[$123>>2] = $306;
   $307 = (_stbi__get32le($0)|0);
   HEAP32[$122>>2] = $307;
   $308 = (_stbi__get32le($0)|0);
   HEAP32[$121>>2] = $308;
   $309 = HEAP32[$123>>2]|0;
   $310 = HEAP32[$122>>2]|0;
   $311 = ($309|0)==($310|0);
   $312 = ($310|0)==($308|0);
   $or$cond = $311 & $312;
   $spec$select = $or$cond ? 0 : (1);
   return ($spec$select|0);
   break;
  }
  default: {
   $$3 = 0;
   return ($$3|0);
  }
  }
  break;
 }
 case 124:  {
  $313 = (_stbi__get32le($0)|0);
  HEAP32[$123>>2] = $313;
  $314 = (_stbi__get32le($0)|0);
  HEAP32[$122>>2] = $314;
  $315 = (_stbi__get32le($0)|0);
  HEAP32[$121>>2] = $315;
  $316 = (_stbi__get32le($0)|0);
  HEAP32[$120>>2] = $316;
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  $317 = ($118|0)==(124);
  if (!($317)) {
   $$3 = (1);
   return ($$3|0);
  }
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  (_stbi__get32le($0)|0);
  $$3 = (1);
  return ($$3|0);
  break;
 }
 default: {
  $$3 = 0;
  return ($$3|0);
 }
 }
 return (0)|0;
}
function _stbi__gif_test($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $$0$i15$i = 0, $$0$i22$i = 0, $$0$i29$i = 0, $$0$i36$i = 0, $$0$i43$i = 0, $$pre$i$i = 0, $$pre$i10$i = 0, $$pre$i17$i = 0, $$pre$i24$i = 0, $$pre$i31$i = 0, $$pre$i38$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i12$iZ2D = 0, $$pre$phi$i19$iZ2D = 0, $$pre$phi$i26$iZ2D = 0, $$pre$phi$i33$iZ2D = 0, $$pre$phi$i40$iZ2D = 0, $$pre5$i$i = 0, $$pre5$i11$i = 0;
 var $$pre5$i18$i = 0, $$pre5$i25$i = 0, $$pre5$i32$i = 0, $$pre5$i39$i = 0, $$sink$i$i$i = 0, $$sink$i$i13$i = 0, $$sink$i$i20$i = 0, $$sink$i$i27$i = 0, $$sink$i$i34$i = 0, $$sink$i$i41$i = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0;
 var $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0;
 var $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 168|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 172|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)<($4>>>0);
 if ($5) {
  $6 = ((($2)) + 1|0);
  HEAP32[$1>>2] = $6;
  $7 = HEAP8[$2>>0]|0;
  $$0$i$i = $7;$24 = $6;$25 = $4;
  label = 8;
 } else {
  $8 = ((($0)) + 32|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $126 = 0;
  } else {
   $11 = ((($0)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($0)) + 28|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($0)) + 40|0);
   $16 = ((($0)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (ftCall_iiii($12|0,$14,$15,$17)|0);
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP32[$8>>2] = 0;
    $20 = ((($0)) + 41|0);
    HEAP8[$15>>0] = 0;
    $$pre$phi$i$iZ2D = $20;$$sink$i$i$i = $20;$127 = 0;
   } else {
    $21 = (((($0)) + 40|0) + ($18)|0);
    $$pre$i$i = HEAP8[$15>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $21;$127 = $$pre$i$i;
   }
   HEAP32[$3>>2] = $$sink$i$i$i;
   HEAP32[$1>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i = $127;$24 = $$pre$phi$i$iZ2D;$25 = $$sink$i$i$i;
   label = 8;
  }
 }
 L9: do {
  if ((label|0) == 8) {
   $22 = ($$0$i$i<<24>>24)==(71);
   if ($22) {
    $23 = ($24>>>0)<($25>>>0);
    if ($23) {
     $26 = ((($24)) + 1|0);
     HEAP32[$1>>2] = $26;
     $27 = HEAP8[$24>>0]|0;
     $$0$i15$i = $27;$44 = $26;$45 = $25;
    } else {
     $28 = ((($0)) + 32|0);
     $29 = HEAP32[$28>>2]|0;
     $30 = ($29|0)==(0);
     if ($30) {
      $126 = 0;
      break;
     }
     $31 = ((($0)) + 16|0);
     $32 = HEAP32[$31>>2]|0;
     $33 = ((($0)) + 28|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($0)) + 40|0);
     $36 = ((($0)) + 36|0);
     $37 = HEAP32[$36>>2]|0;
     $38 = (ftCall_iiii($32|0,$34,$35,$37)|0);
     $39 = ($38|0)==(0);
     if ($39) {
      HEAP32[$28>>2] = 0;
      $40 = ((($0)) + 41|0);
      HEAP8[$35>>0] = 0;
      $$pre$phi$i12$iZ2D = $40;$$sink$i$i13$i = $40;$128 = 0;
     } else {
      $41 = (((($0)) + 40|0) + ($38)|0);
      $$pre$i10$i = HEAP8[$35>>0]|0;
      $$pre5$i11$i = ((($0)) + 41|0);
      $$pre$phi$i12$iZ2D = $$pre5$i11$i;$$sink$i$i13$i = $41;$128 = $$pre$i10$i;
     }
     HEAP32[$3>>2] = $$sink$i$i13$i;
     HEAP32[$1>>2] = $$pre$phi$i12$iZ2D;
     $$0$i15$i = $128;$44 = $$pre$phi$i12$iZ2D;$45 = $$sink$i$i13$i;
    }
    $42 = ($$0$i15$i<<24>>24)==(73);
    if ($42) {
     $43 = ($44>>>0)<($45>>>0);
     if ($43) {
      $46 = ((($44)) + 1|0);
      HEAP32[$1>>2] = $46;
      $47 = HEAP8[$44>>0]|0;
      $$0$i22$i = $47;$64 = $46;$65 = $45;
     } else {
      $48 = ((($0)) + 32|0);
      $49 = HEAP32[$48>>2]|0;
      $50 = ($49|0)==(0);
      if ($50) {
       $126 = 0;
       break;
      }
      $51 = ((($0)) + 16|0);
      $52 = HEAP32[$51>>2]|0;
      $53 = ((($0)) + 28|0);
      $54 = HEAP32[$53>>2]|0;
      $55 = ((($0)) + 40|0);
      $56 = ((($0)) + 36|0);
      $57 = HEAP32[$56>>2]|0;
      $58 = (ftCall_iiii($52|0,$54,$55,$57)|0);
      $59 = ($58|0)==(0);
      if ($59) {
       HEAP32[$48>>2] = 0;
       $60 = ((($0)) + 41|0);
       HEAP8[$55>>0] = 0;
       $$pre$phi$i19$iZ2D = $60;$$sink$i$i20$i = $60;$129 = 0;
      } else {
       $61 = (((($0)) + 40|0) + ($58)|0);
       $$pre$i17$i = HEAP8[$55>>0]|0;
       $$pre5$i18$i = ((($0)) + 41|0);
       $$pre$phi$i19$iZ2D = $$pre5$i18$i;$$sink$i$i20$i = $61;$129 = $$pre$i17$i;
      }
      HEAP32[$3>>2] = $$sink$i$i20$i;
      HEAP32[$1>>2] = $$pre$phi$i19$iZ2D;
      $$0$i22$i = $129;$64 = $$pre$phi$i19$iZ2D;$65 = $$sink$i$i20$i;
     }
     $62 = ($$0$i22$i<<24>>24)==(70);
     if ($62) {
      $63 = ($64>>>0)<($65>>>0);
      if ($63) {
       $66 = ((($64)) + 1|0);
       HEAP32[$1>>2] = $66;
       $67 = HEAP8[$64>>0]|0;
       $$0$i29$i = $67;$84 = $66;$85 = $65;
      } else {
       $68 = ((($0)) + 32|0);
       $69 = HEAP32[$68>>2]|0;
       $70 = ($69|0)==(0);
       if ($70) {
        $126 = 0;
        break;
       }
       $71 = ((($0)) + 16|0);
       $72 = HEAP32[$71>>2]|0;
       $73 = ((($0)) + 28|0);
       $74 = HEAP32[$73>>2]|0;
       $75 = ((($0)) + 40|0);
       $76 = ((($0)) + 36|0);
       $77 = HEAP32[$76>>2]|0;
       $78 = (ftCall_iiii($72|0,$74,$75,$77)|0);
       $79 = ($78|0)==(0);
       if ($79) {
        HEAP32[$68>>2] = 0;
        $80 = ((($0)) + 41|0);
        HEAP8[$75>>0] = 0;
        $$pre$phi$i26$iZ2D = $80;$$sink$i$i27$i = $80;$130 = 0;
       } else {
        $81 = (((($0)) + 40|0) + ($78)|0);
        $$pre$i24$i = HEAP8[$75>>0]|0;
        $$pre5$i25$i = ((($0)) + 41|0);
        $$pre$phi$i26$iZ2D = $$pre5$i25$i;$$sink$i$i27$i = $81;$130 = $$pre$i24$i;
       }
       HEAP32[$3>>2] = $$sink$i$i27$i;
       HEAP32[$1>>2] = $$pre$phi$i26$iZ2D;
       $$0$i29$i = $130;$84 = $$pre$phi$i26$iZ2D;$85 = $$sink$i$i27$i;
      }
      $82 = ($$0$i29$i<<24>>24)==(56);
      if ($82) {
       $83 = ($84>>>0)<($85>>>0);
       if ($83) {
        $86 = ((($84)) + 1|0);
        HEAP32[$1>>2] = $86;
        $87 = HEAP8[$84>>0]|0;
        $$0$i36$i = $87;$103 = $86;$104 = $85;
       } else {
        $88 = ((($0)) + 32|0);
        $89 = HEAP32[$88>>2]|0;
        $90 = ($89|0)==(0);
        if ($90) {
         $126 = 0;
         break;
        }
        $91 = ((($0)) + 16|0);
        $92 = HEAP32[$91>>2]|0;
        $93 = ((($0)) + 28|0);
        $94 = HEAP32[$93>>2]|0;
        $95 = ((($0)) + 40|0);
        $96 = ((($0)) + 36|0);
        $97 = HEAP32[$96>>2]|0;
        $98 = (ftCall_iiii($92|0,$94,$95,$97)|0);
        $99 = ($98|0)==(0);
        if ($99) {
         HEAP32[$88>>2] = 0;
         $100 = ((($0)) + 41|0);
         HEAP8[$95>>0] = 0;
         $$pre$phi$i33$iZ2D = $100;$$sink$i$i34$i = $100;$131 = 0;
        } else {
         $101 = (((($0)) + 40|0) + ($98)|0);
         $$pre$i31$i = HEAP8[$95>>0]|0;
         $$pre5$i32$i = ((($0)) + 41|0);
         $$pre$phi$i33$iZ2D = $$pre5$i32$i;$$sink$i$i34$i = $101;$131 = $$pre$i31$i;
        }
        HEAP32[$3>>2] = $$sink$i$i34$i;
        HEAP32[$1>>2] = $$pre$phi$i33$iZ2D;
        $$0$i36$i = $131;$103 = $$pre$phi$i33$iZ2D;$104 = $$sink$i$i34$i;
       }
       switch ($$0$i36$i<<24>>24) {
       case 55: case 57:  {
        break;
       }
       default: {
        $126 = 0;
        break L9;
       }
       }
       $102 = ($103>>>0)<($104>>>0);
       if ($102) {
        $105 = ((($103)) + 1|0);
        HEAP32[$1>>2] = $105;
        $106 = HEAP8[$103>>0]|0;
        $$0$i43$i = $106;
       } else {
        $107 = ((($0)) + 32|0);
        $108 = HEAP32[$107>>2]|0;
        $109 = ($108|0)==(0);
        if ($109) {
         $126 = 0;
         break;
        }
        $110 = ((($0)) + 16|0);
        $111 = HEAP32[$110>>2]|0;
        $112 = ((($0)) + 28|0);
        $113 = HEAP32[$112>>2]|0;
        $114 = ((($0)) + 40|0);
        $115 = ((($0)) + 36|0);
        $116 = HEAP32[$115>>2]|0;
        $117 = (ftCall_iiii($111|0,$113,$114,$116)|0);
        $118 = ($117|0)==(0);
        if ($118) {
         HEAP32[$107>>2] = 0;
         $119 = ((($0)) + 41|0);
         HEAP8[$114>>0] = 0;
         $$pre$phi$i40$iZ2D = $119;$$sink$i$i41$i = $119;$132 = 0;
        } else {
         $120 = (((($0)) + 40|0) + ($117)|0);
         $$pre$i38$i = HEAP8[$114>>0]|0;
         $$pre5$i39$i = ((($0)) + 41|0);
         $$pre$phi$i40$iZ2D = $$pre5$i39$i;$$sink$i$i41$i = $120;$132 = $$pre$i38$i;
        }
        HEAP32[$3>>2] = $$sink$i$i41$i;
        HEAP32[$1>>2] = $$pre$phi$i40$iZ2D;
        $$0$i43$i = $132;
       }
       $121 = ($$0$i43$i<<24>>24)==(97);
       $spec$select$i = $121&1;
       $126 = $spec$select$i;
      } else {
       $126 = 0;
      }
     } else {
      $126 = 0;
     }
    } else {
     $126 = 0;
    }
   } else {
    $126 = 0;
   }
  }
 } while(0);
 $122 = ((($0)) + 176|0);
 $123 = HEAP32[$122>>2]|0;
 HEAP32[$1>>2] = $123;
 $124 = ((($0)) + 180|0);
 $125 = HEAP32[$124>>2]|0;
 HEAP32[$3>>2] = $125;
 return ($126|0);
}
function _stbi__gif_load_next($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i107 = 0, $$0$i$i22 = 0, $$0$i$i36 = 0, $$0$i$i55 = 0, $$0$i$i77 = 0, $$0$i$i8 = 0, $$0$i100 = 0, $$0$i121 = 0, $$0$i137$i = 0, $$0$i140 = 0, $$0$i144$i = 0, $$0$i153$i = 0, $$0$i50 = 0, $$0$i63 = 0, $$0$i70 = 0, $$0$i8$i = 0, $$0$i8$i114 = 0, $$0$i8$i15 = 0;
 var $$0$i8$i29 = 0, $$0$i8$i43 = 0, $$0$i86 = 0, $$0$i93 = 0, $$0$i93142 = 0, $$0101$i = 0, $$0101$i$ph = 0, $$0105167$i = 0, $$0106$i = 0, $$0106$i$ph = 0, $$0108$i = 0, $$0108$i$ph = 0, $$0110$i$ph = 0, $$0110$i$ph$be = 0, $$0114$i$ph = 0, $$0114$i$ph$be = 0, $$0118$i$ph = 0, $$0118$i$ph$be = 0, $$0123$i$ph = 0, $$0123$i$ph$be = 0;
 var $$0128$i$ph = 0, $$016$i = 0, $$0172 = 0, $$0173156 = 0, $$1102$i = 0, $$1115$i = 0, $$1174158 = 0, $$2175155 = 0, $$3 = 0, $$3$i = 0, $$in = 0, $$phi$trans$insert = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i102 = 0, $$pre$i$i17 = 0, $$pre$i$i3 = 0, $$pre$i$i31 = 0, $$pre$i$i52 = 0;
 var $$pre$i$i72 = 0, $$pre$i1 = 0, $$pre$i116 = 0, $$pre$i124 = 0, $$pre$i130 = 0, $$pre$i132$i = 0, $$pre$i135 = 0, $$pre$i139$i = 0, $$pre$i146$i = 0, $$pre$i148$i = 0, $$pre$i156$i = 0, $$pre$i3$i = 0, $$pre$i3$i10 = 0, $$pre$i3$i109 = 0, $$pre$i3$i24 = 0, $$pre$i3$i38 = 0, $$pre$i45 = 0, $$pre$i58 = 0, $$pre$i65 = 0, $$pre$i81 = 0;
 var $$pre$i88 = 0, $$pre$i95 = 0, $$pre$phi179Z2D = 0, $$pre$phi180Z2D = 0, $$pre$phi182Z2D = 0, $$pre$phi184Z2D = 0, $$pre$phiZ2D = 0, $$pre172 = 0, $$pre174 = 0, $$pre178 = 0, $$pre181 = 0, $$pre183 = 0, $$sink = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i105 = 0, $$sink$i$i$i20 = 0, $$sink$i$i$i34 = 0, $$sink$i$i$i53 = 0, $$sink$i$i$i6 = 0;
 var $$sink$i$i$i75 = 0, $$sink$i$i119 = 0, $$sink$i$i135$i = 0, $$sink$i$i138 = 0, $$sink$i$i142$i = 0, $$sink$i$i151$i = 0, $$sink$i$i48 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i112 = 0, $$sink$i$i6$i13 = 0, $$sink$i$i6$i27 = 0, $$sink$i$i6$i41 = 0, $$sink$i$i61 = 0, $$sink$i$i68 = 0, $$sink$i$i84 = 0, $$sink$i$i91 = 0, $$sink$i$i98 = 0, $$sink210 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0;
 var $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0;
 var $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0;
 var $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0;
 var $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0;
 var $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0;
 var $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0;
 var $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0;
 var $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0;
 var $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0;
 var $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0;
 var $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0;
 var $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0;
 var $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond168 = 0, $exitcond169 = 0, $or$cond = 0, $or$cond$i = 0, $or$cond1 = 0, $or$cond160 = 0, $spec$select = 0;
 var $spec$select$i = 0, $spec$select161$i = 0, $spec$select198 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($1)) + 8|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0|0);
 do {
  if ($6) {
   $7 = (_stbi__gif_header($0,$1,$2,0)|0);
   $8 = ($7|0)==(0);
   if ($8) {
    $$3 = 0;
    return ($$3|0);
   }
   $9 = HEAP32[$1>>2]|0;
   $10 = $9 << 2;
   $11 = ((($1)) + 4|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = Math_imul($10, $12)|0;
   $14 = (_malloc($13)|0);
   HEAP32[$4>>2] = $14;
   $15 = (_malloc($13)|0);
   $16 = ((($1)) + 12|0);
   HEAP32[$16>>2] = $15;
   $17 = Math_imul($12, $9)|0;
   $18 = (_malloc($17)|0);
   $19 = ((($1)) + 16|0);
   HEAP32[$19>>2] = $18;
   $20 = ($14|0)==(0|0);
   if ($20) {
    $$3 = 0;
    return ($$3|0);
   } else {
    _memset(($14|0),0,($13|0))|0;
    _memset(($15|0),0,($13|0))|0;
    _memset(($18|0),0,($17|0))|0;
    $$pre183 = ((($1)) + 36|0);
    $$0172 = 1;$$pre$phi179Z2D = $1;$$pre$phi180Z2D = $11;$$pre$phi182Z2D = $17;$$pre$phi184Z2D = $$pre183;$$pre$phiZ2D = $19;$65 = $18;
    break;
   }
  } else {
   $21 = ((($1)) + 36|0);
   $22 = HEAP32[$21>>2]|0;
   $23 = $22 >>> 2;
   $24 = $22 & 28;
   $25 = HEAP32[$1>>2]|0;
   $26 = ((($1)) + 4|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = Math_imul($27, $25)|0;
   $29 = ($24|0)==(12);
   $30 = ($3|0)==(0|0);
   $or$cond = $30 & $29;
   $31 = $23&255;
   $trunc = $or$cond ? 2 : $31;
   $trunc$clear = $trunc & 7;
   switch ($trunc$clear<<24>>24) {
   case 3:  {
    $32 = ($28|0)>(0);
    if ($32) {
     $33 = ((($1)) + 16|0);
     $$0173156 = 0;
     while(1) {
      $34 = HEAP32[$33>>2]|0;
      $35 = (($34) + ($$0173156)|0);
      $36 = HEAP8[$35>>0]|0;
      $37 = ($36<<24>>24)==(0);
      if (!($37)) {
       $38 = HEAP32[$4>>2]|0;
       $39 = $$0173156 << 2;
       $40 = (($38) + ($39)|0);
       $41 = (($3) + ($39)|0);
       $42 = HEAPU8[$41>>0]|(HEAPU8[$41+1>>0]<<8)|(HEAPU8[$41+2>>0]<<16)|(HEAPU8[$41+3>>0]<<24);
       HEAP8[$40>>0]=$42&255;HEAP8[$40+1>>0]=($42>>8)&255;HEAP8[$40+2>>0]=($42>>16)&255;HEAP8[$40+3>>0]=$42>>24;
      }
      $43 = (($$0173156) + 1)|0;
      $exitcond168 = ($43|0)==($28|0);
      if ($exitcond168) {
       break;
      } else {
       $$0173156 = $43;
      }
     }
    }
    break;
   }
   case 2:  {
    $44 = ($28|0)>(0);
    if ($44) {
     $45 = ((($1)) + 16|0);
     $46 = ((($1)) + 12|0);
     $$1174158 = 0;
     while(1) {
      $47 = HEAP32[$45>>2]|0;
      $48 = (($47) + ($$1174158)|0);
      $49 = HEAP8[$48>>0]|0;
      $50 = ($49<<24>>24)==(0);
      if (!($50)) {
       $51 = HEAP32[$4>>2]|0;
       $52 = $$1174158 << 2;
       $53 = (($51) + ($52)|0);
       $54 = HEAP32[$46>>2]|0;
       $55 = (($54) + ($52)|0);
       $56 = HEAPU8[$55>>0]|(HEAPU8[$55+1>>0]<<8)|(HEAPU8[$55+2>>0]<<16)|(HEAPU8[$55+3>>0]<<24);
       HEAP8[$53>>0]=$56&255;HEAP8[$53+1>>0]=($56>>8)&255;HEAP8[$53+2>>0]=($56>>16)&255;HEAP8[$53+3>>0]=$56>>24;
      }
      $57 = (($$1174158) + 1)|0;
      $exitcond169 = ($57|0)==($28|0);
      if ($exitcond169) {
       break;
      } else {
       $$1174158 = $57;
      }
     }
    }
    break;
   }
   default: {
   }
   }
   $58 = ((($1)) + 12|0);
   $59 = HEAP32[$58>>2]|0;
   $60 = HEAP32[$4>>2]|0;
   $61 = HEAP32[$1>>2]|0;
   $62 = $61 << 2;
   $63 = HEAP32[$26>>2]|0;
   $64 = Math_imul($62, $63)|0;
   _memcpy(($59|0),($60|0),($64|0))|0;
   $$phi$trans$insert = ((($1)) + 16|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   $$pre172 = HEAP32[$1>>2]|0;
   $$pre174 = HEAP32[$26>>2]|0;
   $$pre181 = Math_imul($$pre174, $$pre172)|0;
   $$0172 = 0;$$pre$phi179Z2D = $1;$$pre$phi180Z2D = $26;$$pre$phi182Z2D = $$pre181;$$pre$phi184Z2D = $21;$$pre$phiZ2D = $$phi$trans$insert;$65 = $$pre;
  }
 } while(0);
 _memset(($65|0),0,($$pre$phi182Z2D|0))|0;
 $66 = ((($0)) + 168|0);
 $67 = ((($0)) + 172|0);
 $68 = ((($0)) + 32|0);
 $69 = ((($0)) + 16|0);
 $70 = ((($0)) + 28|0);
 $71 = ((($0)) + 40|0);
 $72 = ((($0)) + 36|0);
 $73 = ((($0)) + 41|0);
 $74 = ((($0)) + 20|0);
 $75 = ((($1)) + 34900|0);
 $76 = ((($1)) + 32|0);
 L27: while(1) {
  $77 = HEAP32[$66>>2]|0;
  $78 = HEAP32[$67>>2]|0;
  $79 = ($77>>>0)<($78>>>0);
  if ($79) {
   $80 = ((($77)) + 1|0);
   HEAP32[$66>>2] = $80;
   $81 = HEAP8[$77>>0]|0;
   $$0$i = $81;$91 = $80;$92 = $78;
  } else {
   $82 = HEAP32[$68>>2]|0;
   $83 = ($82|0)==(0);
   if ($83) {
    $$3 = 0;
    label = 265;
    break;
   }
   $84 = HEAP32[$69>>2]|0;
   $85 = HEAP32[$70>>2]|0;
   $86 = HEAP32[$72>>2]|0;
   $87 = (ftCall_iiii($84|0,$85,$71,$86)|0);
   $88 = ($87|0)==(0);
   if ($88) {
    HEAP32[$68>>2] = 0;
    HEAP8[$71>>0] = 0;
    $$sink$i$i = $73;$609 = 0;
   } else {
    $89 = (((($0)) + 40|0) + ($87)|0);
    $$pre$i1 = HEAP8[$71>>0]|0;
    $$sink$i$i = $89;$609 = $$pre$i1;
   }
   HEAP32[$67>>2] = $$sink$i$i;
   HEAP32[$66>>2] = $73;
   $$0$i = $609;$91 = $73;$92 = $$sink$i$i;
  }
  switch ($$0$i<<24>>24) {
  case 44:  {
   label = 26;
   break L27;
   break;
  }
  case 59:  {
   label = 264;
   break L27;
   break;
  }
  case 33:  {
   break;
  }
  default: {
   $$3 = 0;
   label = 265;
   break L27;
  }
  }
  $467 = ($91>>>0)<($92>>>0);
  if ($467) {
   $468 = ((($91)) + 1|0);
   HEAP32[$66>>2] = $468;
   $469 = HEAP8[$91>>0]|0;
   $$0$i86 = $469;$$in = $468;$480 = $92;
   label = 198;
  } else {
   $470 = HEAP32[$68>>2]|0;
   $471 = ($470|0)==(0);
   if ($471) {
    label = 199;
   } else {
    $472 = HEAP32[$69>>2]|0;
    $473 = HEAP32[$70>>2]|0;
    $474 = HEAP32[$72>>2]|0;
    $475 = (ftCall_iiii($472|0,$473,$71,$474)|0);
    $476 = ($475|0)==(0);
    if ($476) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i84 = $73;$630 = 0;
    } else {
     $477 = (((($0)) + 40|0) + ($475)|0);
     $$pre$i81 = HEAP8[$71>>0]|0;
     $$sink$i$i84 = $477;$630 = $$pre$i81;
    }
    HEAP32[$67>>2] = $$sink$i$i84;
    HEAP32[$66>>2] = $73;
    $$0$i86 = $630;$$in = $73;$480 = $$sink$i$i84;
    label = 198;
   }
  }
  do {
   if ((label|0) == 198) {
    label = 0;
    $478 = ($$0$i86<<24>>24)==(-7);
    if ($478) {
     $479 = ($$in>>>0)<($480>>>0);
     if ($479) {
      $481 = ((($$in)) + 1|0);
      HEAP32[$66>>2] = $481;
      $482 = HEAP8[$$in>>0]|0;
      $$0$i93 = $482;$493 = $481;$494 = $480;
      label = 207;
     } else {
      $483 = HEAP32[$68>>2]|0;
      $484 = ($483|0)==(0);
      if ($484) {
       $$0$i93142 = 0;$$pre$i130 = $$in;$576 = $480;
      } else {
       $485 = HEAP32[$69>>2]|0;
       $486 = HEAP32[$70>>2]|0;
       $487 = HEAP32[$72>>2]|0;
       $488 = (ftCall_iiii($485|0,$486,$71,$487)|0);
       $489 = ($488|0)==(0);
       if ($489) {
        HEAP32[$68>>2] = 0;
        HEAP8[$71>>0] = 0;
        $$sink$i$i91 = $73;$631 = 0;
       } else {
        $490 = (((($0)) + 40|0) + ($488)|0);
        $$pre$i88 = HEAP8[$71>>0]|0;
        $$sink$i$i91 = $490;$631 = $$pre$i88;
       }
       HEAP32[$67>>2] = $$sink$i$i91;
       HEAP32[$66>>2] = $73;
       $$0$i93 = $631;$493 = $73;$494 = $$sink$i$i91;
       label = 207;
      }
     }
     if ((label|0) == 207) {
      label = 0;
      $491 = ($$0$i93<<24>>24)==(4);
      if ($491) {
       $492 = ($493>>>0)<($494>>>0);
       if ($492) {
        $495 = ((($493)) + 1|0);
        HEAP32[$66>>2] = $495;
        $496 = HEAP8[$493>>0]|0;
        $$0$i100 = $496;$507 = $495;$508 = $494;
       } else {
        $497 = HEAP32[$68>>2]|0;
        $498 = ($497|0)==(0);
        if ($498) {
         $$0$i100 = 0;$507 = $493;$508 = $494;
        } else {
         $499 = HEAP32[$69>>2]|0;
         $500 = HEAP32[$70>>2]|0;
         $501 = HEAP32[$72>>2]|0;
         $502 = (ftCall_iiii($499|0,$500,$71,$501)|0);
         $503 = ($502|0)==(0);
         if ($503) {
          HEAP32[$68>>2] = 0;
          HEAP8[$71>>0] = 0;
          $$sink$i$i98 = $73;$632 = 0;
         } else {
          $504 = (((($0)) + 40|0) + ($502)|0);
          $$pre$i95 = HEAP8[$71>>0]|0;
          $$sink$i$i98 = $504;$632 = $$pre$i95;
         }
         HEAP32[$67>>2] = $$sink$i$i98;
         HEAP32[$66>>2] = $73;
         $$0$i100 = $632;$507 = $73;$508 = $$sink$i$i98;
        }
       }
       $505 = $$0$i100&255;
       HEAP32[$$pre$phi184Z2D>>2] = $505;
       $506 = ($507>>>0)<($508>>>0);
       if ($506) {
        $509 = ((($507)) + 1|0);
        HEAP32[$66>>2] = $509;
        $510 = HEAP8[$507>>0]|0;
        $$0$i$i107 = $510;$521 = $509;$522 = $508;
       } else {
        $511 = HEAP32[$68>>2]|0;
        $512 = ($511|0)==(0);
        if ($512) {
         $$0$i$i107 = 0;$521 = $507;$522 = $508;
        } else {
         $513 = HEAP32[$69>>2]|0;
         $514 = HEAP32[$70>>2]|0;
         $515 = HEAP32[$72>>2]|0;
         $516 = (ftCall_iiii($513|0,$514,$71,$515)|0);
         $517 = ($516|0)==(0);
         if ($517) {
          HEAP32[$68>>2] = 0;
          HEAP8[$71>>0] = 0;
          $$sink$i$i$i105 = $73;$633 = 0;
         } else {
          $518 = (((($0)) + 40|0) + ($516)|0);
          $$pre$i$i102 = HEAP8[$71>>0]|0;
          $$sink$i$i$i105 = $518;$633 = $$pre$i$i102;
         }
         HEAP32[$67>>2] = $$sink$i$i$i105;
         HEAP32[$66>>2] = $73;
         $$0$i$i107 = $633;$521 = $73;$522 = $$sink$i$i$i105;
        }
       }
       $519 = $$0$i$i107&255;
       $520 = ($521>>>0)<($522>>>0);
       if ($520) {
        $523 = ((($521)) + 1|0);
        HEAP32[$66>>2] = $523;
        $524 = HEAP8[$521>>0]|0;
        $$0$i8$i114 = $524;
       } else {
        $525 = HEAP32[$68>>2]|0;
        $526 = ($525|0)==(0);
        if ($526) {
         $$0$i8$i114 = 0;
        } else {
         $527 = HEAP32[$69>>2]|0;
         $528 = HEAP32[$70>>2]|0;
         $529 = HEAP32[$72>>2]|0;
         $530 = (ftCall_iiii($527|0,$528,$71,$529)|0);
         $531 = ($530|0)==(0);
         if ($531) {
          HEAP32[$68>>2] = 0;
          HEAP8[$71>>0] = 0;
          $$sink$i$i6$i112 = $73;$634 = 0;
         } else {
          $532 = (((($0)) + 40|0) + ($530)|0);
          $$pre$i3$i109 = HEAP8[$71>>0]|0;
          $$sink$i$i6$i112 = $532;$634 = $$pre$i3$i109;
         }
         HEAP32[$67>>2] = $$sink$i$i6$i112;
         HEAP32[$66>>2] = $73;
         $$0$i8$i114 = $634;
        }
       }
       $533 = $$0$i8$i114&255;
       $534 = $533 << 8;
       $535 = $534 | $519;
       $536 = ($535*10)|0;
       HEAP32[$75>>2] = $536;
       $537 = HEAP32[$76>>2]|0;
       $538 = ($537|0)>(-1);
       if ($538) {
        $539 = (((((($1)) + 40|0) + ($537<<2)|0)) + 3|0);
        HEAP8[$539>>0] = -1;
       }
       $540 = HEAP32[$$pre$phi184Z2D>>2]|0;
       $541 = $540 & 1;
       $542 = ($541|0)==(0);
       if ($542) {
        $558 = HEAP32[$69>>2]|0;
        $559 = ($558|0)==(0|0);
        if ($559) {
         $$pre$i124 = HEAP32[$66>>2]|0;
         $570 = $$pre$i124;
         label = 244;
        } else {
         $560 = HEAP32[$67>>2]|0;
         $561 = HEAP32[$66>>2]|0;
         $562 = $560;
         $563 = (($562) - ($561))|0;
         $564 = ($563|0)<(1);
         $565 = $561;
         if ($564) {
          HEAP32[$66>>2] = $560;
          $566 = HEAP32[$74>>2]|0;
          $567 = HEAP32[$70>>2]|0;
          $568 = (1 - ($563))|0;
          ftCall_vii($566|0,$567,$568);
         } else {
          $570 = $565;
          label = 244;
         }
        }
        if ((label|0) == 244) {
         label = 0;
         $569 = ((($570)) + 1|0);
         HEAP32[$66>>2] = $569;
        }
        HEAP32[$76>>2] = -1;
        label = 199;
        break;
       }
       $543 = HEAP32[$66>>2]|0;
       $544 = HEAP32[$67>>2]|0;
       $545 = ($543>>>0)<($544>>>0);
       if ($545) {
        $546 = ((($543)) + 1|0);
        HEAP32[$66>>2] = $546;
        $547 = HEAP8[$543>>0]|0;
        $$0$i121 = $547;
       } else {
        $548 = HEAP32[$68>>2]|0;
        $549 = ($548|0)==(0);
        if ($549) {
         $$0$i121 = 0;
        } else {
         $550 = HEAP32[$69>>2]|0;
         $551 = HEAP32[$70>>2]|0;
         $552 = HEAP32[$72>>2]|0;
         $553 = (ftCall_iiii($550|0,$551,$71,$552)|0);
         $554 = ($553|0)==(0);
         if ($554) {
          HEAP32[$68>>2] = 0;
          HEAP8[$71>>0] = 0;
          $$sink$i$i119 = $73;$635 = 0;
         } else {
          $555 = (((($0)) + 40|0) + ($553)|0);
          $$pre$i116 = HEAP8[$71>>0]|0;
          $$sink$i$i119 = $555;$635 = $$pre$i116;
         }
         HEAP32[$67>>2] = $$sink$i$i119;
         HEAP32[$66>>2] = $73;
         $$0$i121 = $635;
        }
       }
       $556 = $$0$i121&255;
       HEAP32[$76>>2] = $556;
       $557 = (((((($1)) + 40|0) + ($556<<2)|0)) + 3|0);
       HEAP8[$557>>0] = 0;
       label = 199;
       break;
      } else {
       $$0$i93142 = $$0$i93;$$pre$i130 = $493;$576 = $494;
      }
     }
     $571 = $$0$i93142&255;
     $572 = HEAP32[$69>>2]|0;
     $573 = ($572|0)==(0|0);
     if (!($573)) {
      $574 = $$pre$i130;
      $575 = $576;
      $577 = (($575) - ($574))|0;
      $578 = ($577|0)<($571|0);
      if ($578) {
       HEAP32[$66>>2] = $576;
       $579 = HEAP32[$74>>2]|0;
       $580 = HEAP32[$70>>2]|0;
       $581 = (($571) - ($577))|0;
       ftCall_vii($579|0,$580,$581);
       break;
      }
     }
     $582 = (($$pre$i130) + ($571)|0);
     HEAP32[$66>>2] = $582;
    } else {
     label = 199;
    }
   }
  } while(0);
  L115: do {
   if ((label|0) == 199) {
    label = 0;
    while(1) {
     $583 = HEAP32[$66>>2]|0;
     $584 = HEAP32[$67>>2]|0;
     $585 = ($583>>>0)<($584>>>0);
     if ($585) {
      $586 = ((($583)) + 1|0);
      HEAP32[$66>>2] = $586;
      $587 = HEAP8[$583>>0]|0;
      $$0$i140 = $587;$$pre$i = $586;$602 = $584;
     } else {
      $588 = HEAP32[$68>>2]|0;
      $589 = ($588|0)==(0);
      if ($589) {
       break L115;
      }
      $590 = HEAP32[$69>>2]|0;
      $591 = HEAP32[$70>>2]|0;
      $592 = HEAP32[$72>>2]|0;
      $593 = (ftCall_iiii($590|0,$591,$71,$592)|0);
      $594 = ($593|0)==(0);
      if ($594) {
       HEAP32[$68>>2] = 0;
       HEAP8[$71>>0] = 0;
       $$sink$i$i138 = $73;$636 = 0;
      } else {
       $595 = (((($0)) + 40|0) + ($593)|0);
       $$pre$i135 = HEAP8[$71>>0]|0;
       $$sink$i$i138 = $595;$636 = $$pre$i135;
      }
      HEAP32[$67>>2] = $$sink$i$i138;
      HEAP32[$66>>2] = $73;
      $$0$i140 = $636;$$pre$i = $73;$602 = $$sink$i$i138;
     }
     $596 = $$pre$i;
     $597 = ($$0$i140<<24>>24)==(0);
     if ($597) {
      break L115;
     }
     $598 = $$0$i140&255;
     $599 = HEAP32[$69>>2]|0;
     $600 = ($599|0)==(0|0);
     if ($600) {
      label = 263;
     } else {
      $601 = $602;
      $603 = (($601) - ($596))|0;
      $604 = ($603|0)<($598|0);
      if ($604) {
       HEAP32[$66>>2] = $602;
       $605 = HEAP32[$74>>2]|0;
       $606 = HEAP32[$70>>2]|0;
       $607 = (($598) - ($603))|0;
       ftCall_vii($605|0,$606,$607);
      } else {
       label = 263;
      }
     }
     if ((label|0) == 263) {
      label = 0;
      $608 = (($$pre$i) + ($598)|0);
      HEAP32[$66>>2] = $608;
     }
    }
   }
  } while(0);
 }
 if ((label|0) == 26) {
  $90 = ($91>>>0)<($92>>>0);
  if ($90) {
   $93 = ((($91)) + 1|0);
   HEAP32[$66>>2] = $93;
   $94 = HEAP8[$91>>0]|0;
   $$0$i$i = $94;$105 = $93;$106 = $92;
  } else {
   $95 = HEAP32[$68>>2]|0;
   $96 = ($95|0)==(0);
   if ($96) {
    $$0$i$i = 0;$105 = $91;$106 = $92;
   } else {
    $97 = HEAP32[$69>>2]|0;
    $98 = HEAP32[$70>>2]|0;
    $99 = HEAP32[$72>>2]|0;
    $100 = (ftCall_iiii($97|0,$98,$71,$99)|0);
    $101 = ($100|0)==(0);
    if ($101) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i$i = $73;$610 = 0;
    } else {
     $102 = (((($0)) + 40|0) + ($100)|0);
     $$pre$i$i = HEAP8[$71>>0]|0;
     $$sink$i$i$i = $102;$610 = $$pre$i$i;
    }
    HEAP32[$67>>2] = $$sink$i$i$i;
    HEAP32[$66>>2] = $73;
    $$0$i$i = $610;$105 = $73;$106 = $$sink$i$i$i;
   }
  }
  $103 = $$0$i$i&255;
  $104 = ($105>>>0)<($106>>>0);
  if ($104) {
   $107 = ((($105)) + 1|0);
   HEAP32[$66>>2] = $107;
   $108 = HEAP8[$105>>0]|0;
   $$0$i8$i = $108;$121 = $107;$122 = $106;
  } else {
   $109 = HEAP32[$68>>2]|0;
   $110 = ($109|0)==(0);
   if ($110) {
    $$0$i8$i = 0;$121 = $105;$122 = $106;
   } else {
    $111 = HEAP32[$69>>2]|0;
    $112 = HEAP32[$70>>2]|0;
    $113 = HEAP32[$72>>2]|0;
    $114 = (ftCall_iiii($111|0,$112,$71,$113)|0);
    $115 = ($114|0)==(0);
    if ($115) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i6$i = $73;$611 = 0;
    } else {
     $116 = (((($0)) + 40|0) + ($114)|0);
     $$pre$i3$i = HEAP8[$71>>0]|0;
     $$sink$i$i6$i = $116;$611 = $$pre$i3$i;
    }
    HEAP32[$67>>2] = $$sink$i$i6$i;
    HEAP32[$66>>2] = $73;
    $$0$i8$i = $611;$121 = $73;$122 = $$sink$i$i6$i;
   }
  }
  $117 = $$0$i8$i&255;
  $118 = $117 << 8;
  $119 = $118 | $103;
  $120 = ($121>>>0)<($122>>>0);
  if ($120) {
   $123 = ((($121)) + 1|0);
   HEAP32[$66>>2] = $123;
   $124 = HEAP8[$121>>0]|0;
   $$0$i$i8 = $124;$135 = $123;$136 = $122;
  } else {
   $125 = HEAP32[$68>>2]|0;
   $126 = ($125|0)==(0);
   if ($126) {
    $$0$i$i8 = 0;$135 = $121;$136 = $122;
   } else {
    $127 = HEAP32[$69>>2]|0;
    $128 = HEAP32[$70>>2]|0;
    $129 = HEAP32[$72>>2]|0;
    $130 = (ftCall_iiii($127|0,$128,$71,$129)|0);
    $131 = ($130|0)==(0);
    if ($131) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i$i6 = $73;$612 = 0;
    } else {
     $132 = (((($0)) + 40|0) + ($130)|0);
     $$pre$i$i3 = HEAP8[$71>>0]|0;
     $$sink$i$i$i6 = $132;$612 = $$pre$i$i3;
    }
    HEAP32[$67>>2] = $$sink$i$i$i6;
    HEAP32[$66>>2] = $73;
    $$0$i$i8 = $612;$135 = $73;$136 = $$sink$i$i$i6;
   }
  }
  $133 = $$0$i$i8&255;
  $134 = ($135>>>0)<($136>>>0);
  if ($134) {
   $137 = ((($135)) + 1|0);
   HEAP32[$66>>2] = $137;
   $138 = HEAP8[$135>>0]|0;
   $$0$i8$i15 = $138;$151 = $137;$152 = $136;
  } else {
   $139 = HEAP32[$68>>2]|0;
   $140 = ($139|0)==(0);
   if ($140) {
    $$0$i8$i15 = 0;$151 = $135;$152 = $136;
   } else {
    $141 = HEAP32[$69>>2]|0;
    $142 = HEAP32[$70>>2]|0;
    $143 = HEAP32[$72>>2]|0;
    $144 = (ftCall_iiii($141|0,$142,$71,$143)|0);
    $145 = ($144|0)==(0);
    if ($145) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i6$i13 = $73;$613 = 0;
    } else {
     $146 = (((($0)) + 40|0) + ($144)|0);
     $$pre$i3$i10 = HEAP8[$71>>0]|0;
     $$sink$i$i6$i13 = $146;$613 = $$pre$i3$i10;
    }
    HEAP32[$67>>2] = $$sink$i$i6$i13;
    HEAP32[$66>>2] = $73;
    $$0$i8$i15 = $613;$151 = $73;$152 = $$sink$i$i6$i13;
   }
  }
  $147 = $$0$i8$i15&255;
  $148 = $147 << 8;
  $149 = $148 | $133;
  $150 = ($151>>>0)<($152>>>0);
  if ($150) {
   $153 = ((($151)) + 1|0);
   HEAP32[$66>>2] = $153;
   $154 = HEAP8[$151>>0]|0;
   $$0$i$i22 = $154;$165 = $153;$166 = $152;
  } else {
   $155 = HEAP32[$68>>2]|0;
   $156 = ($155|0)==(0);
   if ($156) {
    $$0$i$i22 = 0;$165 = $151;$166 = $152;
   } else {
    $157 = HEAP32[$69>>2]|0;
    $158 = HEAP32[$70>>2]|0;
    $159 = HEAP32[$72>>2]|0;
    $160 = (ftCall_iiii($157|0,$158,$71,$159)|0);
    $161 = ($160|0)==(0);
    if ($161) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i$i20 = $73;$614 = 0;
    } else {
     $162 = (((($0)) + 40|0) + ($160)|0);
     $$pre$i$i17 = HEAP8[$71>>0]|0;
     $$sink$i$i$i20 = $162;$614 = $$pre$i$i17;
    }
    HEAP32[$67>>2] = $$sink$i$i$i20;
    HEAP32[$66>>2] = $73;
    $$0$i$i22 = $614;$165 = $73;$166 = $$sink$i$i$i20;
   }
  }
  $163 = $$0$i$i22&255;
  $164 = ($165>>>0)<($166>>>0);
  if ($164) {
   $167 = ((($165)) + 1|0);
   HEAP32[$66>>2] = $167;
   $168 = HEAP8[$165>>0]|0;
   $$0$i8$i29 = $168;$181 = $167;$182 = $166;
  } else {
   $169 = HEAP32[$68>>2]|0;
   $170 = ($169|0)==(0);
   if ($170) {
    $$0$i8$i29 = 0;$181 = $165;$182 = $166;
   } else {
    $171 = HEAP32[$69>>2]|0;
    $172 = HEAP32[$70>>2]|0;
    $173 = HEAP32[$72>>2]|0;
    $174 = (ftCall_iiii($171|0,$172,$71,$173)|0);
    $175 = ($174|0)==(0);
    if ($175) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i6$i27 = $73;$615 = 0;
    } else {
     $176 = (((($0)) + 40|0) + ($174)|0);
     $$pre$i3$i24 = HEAP8[$71>>0]|0;
     $$sink$i$i6$i27 = $176;$615 = $$pre$i3$i24;
    }
    HEAP32[$67>>2] = $$sink$i$i6$i27;
    HEAP32[$66>>2] = $73;
    $$0$i8$i29 = $615;$181 = $73;$182 = $$sink$i$i6$i27;
   }
  }
  $177 = $$0$i8$i29&255;
  $178 = $177 << 8;
  $179 = $178 | $163;
  $180 = ($181>>>0)<($182>>>0);
  if ($180) {
   $183 = ((($181)) + 1|0);
   HEAP32[$66>>2] = $183;
   $184 = HEAP8[$181>>0]|0;
   $$0$i$i36 = $184;$195 = $183;$196 = $182;
  } else {
   $185 = HEAP32[$68>>2]|0;
   $186 = ($185|0)==(0);
   if ($186) {
    $$0$i$i36 = 0;$195 = $181;$196 = $182;
   } else {
    $187 = HEAP32[$69>>2]|0;
    $188 = HEAP32[$70>>2]|0;
    $189 = HEAP32[$72>>2]|0;
    $190 = (ftCall_iiii($187|0,$188,$71,$189)|0);
    $191 = ($190|0)==(0);
    if ($191) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i$i34 = $73;$616 = 0;
    } else {
     $192 = (((($0)) + 40|0) + ($190)|0);
     $$pre$i$i31 = HEAP8[$71>>0]|0;
     $$sink$i$i$i34 = $192;$616 = $$pre$i$i31;
    }
    HEAP32[$67>>2] = $$sink$i$i$i34;
    HEAP32[$66>>2] = $73;
    $$0$i$i36 = $616;$195 = $73;$196 = $$sink$i$i$i34;
   }
  }
  $193 = $$0$i$i36&255;
  $194 = ($195>>>0)<($196>>>0);
  if ($194) {
   $197 = ((($195)) + 1|0);
   HEAP32[$66>>2] = $197;
   $198 = HEAP8[$195>>0]|0;
   $$0$i8$i43 = $198;$231 = $197;$232 = $196;
  } else {
   $199 = HEAP32[$68>>2]|0;
   $200 = ($199|0)==(0);
   if ($200) {
    $$0$i8$i43 = 0;$231 = $195;$232 = $196;
   } else {
    $201 = HEAP32[$69>>2]|0;
    $202 = HEAP32[$70>>2]|0;
    $203 = HEAP32[$72>>2]|0;
    $204 = (ftCall_iiii($201|0,$202,$71,$203)|0);
    $205 = ($204|0)==(0);
    if ($205) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i6$i41 = $73;$617 = 0;
    } else {
     $206 = (((($0)) + 40|0) + ($204)|0);
     $$pre$i3$i38 = HEAP8[$71>>0]|0;
     $$sink$i$i6$i41 = $206;$617 = $$pre$i3$i38;
    }
    HEAP32[$67>>2] = $$sink$i$i6$i41;
    HEAP32[$66>>2] = $73;
    $$0$i8$i43 = $617;$231 = $73;$232 = $$sink$i$i6$i41;
   }
  }
  $207 = $$0$i8$i43&255;
  $208 = $207 << 8;
  $209 = $208 | $193;
  $210 = (($179) + ($119))|0;
  $211 = HEAP32[$$pre$phi179Z2D>>2]|0;
  $212 = ($210|0)>($211|0);
  if ($212) {
   $$3 = 0;
   return ($$3|0);
  }
  $213 = (($209) + ($149))|0;
  $214 = HEAP32[$$pre$phi180Z2D>>2]|0;
  $215 = ($213|0)>($214|0);
  if ($215) {
   $$3 = 0;
   return ($$3|0);
  }
  $216 = $211 << 2;
  $217 = ((($1)) + 34896|0);
  HEAP32[$217>>2] = $216;
  $218 = $119 << 2;
  $219 = ((($1)) + 34872|0);
  HEAP32[$219>>2] = $218;
  $220 = Math_imul($216, $149)|0;
  $221 = ((($1)) + 34876|0);
  HEAP32[$221>>2] = $220;
  $222 = $179 << 2;
  $223 = (($222) + ($218))|0;
  $224 = ((($1)) + 34880|0);
  HEAP32[$224>>2] = $223;
  $225 = Math_imul($209, $216)|0;
  $226 = (($225) + ($220))|0;
  $227 = ((($1)) + 34884|0);
  HEAP32[$227>>2] = $226;
  $228 = ((($1)) + 34888|0);
  HEAP32[$228>>2] = $218;
  $229 = ((($1)) + 34892|0);
  HEAP32[$229>>2] = $220;
  $230 = ($231>>>0)<($232>>>0);
  if ($230) {
   $233 = ((($231)) + 1|0);
   HEAP32[$66>>2] = $233;
   $234 = HEAP8[$231>>0]|0;
   $$0$i50 = $234;$248 = $216;
  } else {
   $235 = HEAP32[$68>>2]|0;
   $236 = ($235|0)==(0);
   if ($236) {
    $$0$i50 = 0;$248 = $216;
   } else {
    $237 = HEAP32[$69>>2]|0;
    $238 = HEAP32[$70>>2]|0;
    $239 = HEAP32[$72>>2]|0;
    $240 = (ftCall_iiii($237|0,$238,$71,$239)|0);
    $241 = ($240|0)==(0);
    if ($241) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i48 = $73;$618 = 0;
    } else {
     $242 = (((($0)) + 40|0) + ($240)|0);
     $$pre$i45 = HEAP8[$71>>0]|0;
     $$sink$i$i48 = $242;$618 = $$pre$i45;
    }
    HEAP32[$67>>2] = $$sink$i$i48;
    HEAP32[$66>>2] = $73;
    $$pre178 = HEAP32[$217>>2]|0;
    $$0$i50 = $618;$248 = $$pre178;
   }
  }
  $243 = $$0$i50&255;
  $244 = ((($1)) + 34868|0);
  HEAP32[$244>>2] = $243;
  $245 = $243 & 64;
  $246 = ($245|0)==(0);
  $247 = $248 << 3;
  $spec$select = $246 ? $248 : $247;
  $spec$select198 = $246 ? 0 : 3;
  $249 = ((($1)) + 34864|0);
  HEAP32[$249>>2] = $spec$select;
  $250 = ((($1)) + 34860|0);
  HEAP32[$250>>2] = $spec$select198;
  $251 = $243 & 128;
  $252 = ($251|0)==(0);
  do {
   if ($252) {
    $308 = ((($1)) + 20|0);
    $309 = HEAP32[$308>>2]|0;
    $310 = $309 & 128;
    $311 = ($310|0)==(0);
    if ($311) {
     $$3 = 0;
     return ($$3|0);
    } else {
     $312 = ((($1)) + 40|0);
     $$sink = $312;
     break;
    }
   } else {
    $253 = $243 & 7;
    $254 = 2 << $253;
    $255 = HEAP32[$$pre$phi184Z2D>>2]|0;
    $256 = $255 & 1;
    $257 = ($256|0)==(0);
    if ($257) {
     $303 = -1;
    } else {
     $258 = HEAP32[$76>>2]|0;
     $303 = $258;
    }
    $259 = ($254|0)>(0);
    if ($259) {
     $$016$i = 0;
     while(1) {
      $260 = HEAP32[$66>>2]|0;
      $261 = HEAP32[$67>>2]|0;
      $262 = ($260>>>0)<($261>>>0);
      do {
       if ($262) {
        $263 = ((($260)) + 1|0);
        HEAP32[$66>>2] = $263;
        $264 = HEAP8[$260>>0]|0;
        $$0$i$i55 = $264;
       } else {
        $265 = HEAP32[$68>>2]|0;
        $266 = ($265|0)==(0);
        if ($266) {
         $$0$i$i55 = 0;
         break;
        }
        $267 = HEAP32[$69>>2]|0;
        $268 = HEAP32[$70>>2]|0;
        $269 = HEAP32[$72>>2]|0;
        $270 = (ftCall_iiii($267|0,$268,$71,$269)|0);
        $271 = ($270|0)==(0);
        if ($271) {
         HEAP32[$68>>2] = 0;
         HEAP8[$71>>0] = 0;
         $$sink$i$i$i53 = $73;$619 = 0;
        } else {
         $272 = (((($0)) + 40|0) + ($270)|0);
         $$pre$i$i52 = HEAP8[$71>>0]|0;
         $$sink$i$i$i53 = $272;$619 = $$pre$i$i52;
        }
        HEAP32[$67>>2] = $$sink$i$i$i53;
        HEAP32[$66>>2] = $73;
        $$0$i$i55 = $619;
       }
      } while(0);
      $273 = (((((($1)) + 1064|0) + ($$016$i<<2)|0)) + 2|0);
      HEAP8[$273>>0] = $$0$i$i55;
      $274 = HEAP32[$66>>2]|0;
      $275 = HEAP32[$67>>2]|0;
      $276 = ($274>>>0)<($275>>>0);
      do {
       if ($276) {
        $277 = ((($274)) + 1|0);
        HEAP32[$66>>2] = $277;
        $278 = HEAP8[$274>>0]|0;
        $$0$i70 = $278;
       } else {
        $279 = HEAP32[$68>>2]|0;
        $280 = ($279|0)==(0);
        if ($280) {
         $$0$i70 = 0;
         break;
        }
        $281 = HEAP32[$69>>2]|0;
        $282 = HEAP32[$70>>2]|0;
        $283 = HEAP32[$72>>2]|0;
        $284 = (ftCall_iiii($281|0,$282,$71,$283)|0);
        $285 = ($284|0)==(0);
        if ($285) {
         HEAP32[$68>>2] = 0;
         HEAP8[$71>>0] = 0;
         $$sink$i$i68 = $73;$620 = 0;
        } else {
         $286 = (((($0)) + 40|0) + ($284)|0);
         $$pre$i65 = HEAP8[$71>>0]|0;
         $$sink$i$i68 = $286;$620 = $$pre$i65;
        }
        HEAP32[$67>>2] = $$sink$i$i68;
        HEAP32[$66>>2] = $73;
        $$0$i70 = $620;
       }
      } while(0);
      $287 = (((((($1)) + 1064|0) + ($$016$i<<2)|0)) + 1|0);
      HEAP8[$287>>0] = $$0$i70;
      $288 = HEAP32[$66>>2]|0;
      $289 = HEAP32[$67>>2]|0;
      $290 = ($288>>>0)<($289>>>0);
      do {
       if ($290) {
        $291 = ((($288)) + 1|0);
        HEAP32[$66>>2] = $291;
        $292 = HEAP8[$288>>0]|0;
        $$0$i63 = $292;
       } else {
        $293 = HEAP32[$68>>2]|0;
        $294 = ($293|0)==(0);
        if ($294) {
         $$0$i63 = 0;
         break;
        }
        $295 = HEAP32[$69>>2]|0;
        $296 = HEAP32[$70>>2]|0;
        $297 = HEAP32[$72>>2]|0;
        $298 = (ftCall_iiii($295|0,$296,$71,$297)|0);
        $299 = ($298|0)==(0);
        if ($299) {
         HEAP32[$68>>2] = 0;
         HEAP8[$71>>0] = 0;
         $$sink$i$i61 = $73;$621 = 0;
        } else {
         $300 = (((($0)) + 40|0) + ($298)|0);
         $$pre$i58 = HEAP8[$71>>0]|0;
         $$sink$i$i61 = $300;$621 = $$pre$i58;
        }
        HEAP32[$67>>2] = $$sink$i$i61;
        HEAP32[$66>>2] = $73;
        $$0$i63 = $621;
       }
      } while(0);
      $301 = (((($1)) + 1064|0) + ($$016$i<<2)|0);
      HEAP8[$301>>0] = $$0$i63;
      $302 = ($$016$i|0)!=($303|0);
      $304 = $302 << 31 >> 31;
      $305 = (((((($1)) + 1064|0) + ($$016$i<<2)|0)) + 3|0);
      HEAP8[$305>>0] = $304;
      $306 = (($$016$i) + 1)|0;
      $exitcond$i = ($306|0)==($254|0);
      if ($exitcond$i) {
       break;
      } else {
       $$016$i = $306;
      }
     }
    }
    $307 = ((($1)) + 1064|0);
    $$sink = $307;
   }
  } while(0);
  $313 = ((($1)) + 34856|0);
  HEAP32[$313>>2] = $$sink;
  $314 = HEAP32[$66>>2]|0;
  $315 = HEAP32[$67>>2]|0;
  $316 = ($314>>>0)<($315>>>0);
  if ($316) {
   $317 = ((($314)) + 1|0);
   HEAP32[$66>>2] = $317;
   $318 = HEAP8[$314>>0]|0;
   $$0$i$i77 = $318;
   label = 128;
  } else {
   $319 = HEAP32[$68>>2]|0;
   $320 = ($319|0)==(0);
   if ($320) {
    $339 = 1;$622 = 1;$623 = 1;
   } else {
    $321 = HEAP32[$69>>2]|0;
    $322 = HEAP32[$70>>2]|0;
    $323 = HEAP32[$72>>2]|0;
    $324 = (ftCall_iiii($321|0,$322,$71,$323)|0);
    $325 = ($324|0)==(0);
    if ($325) {
     HEAP32[$68>>2] = 0;
     HEAP8[$71>>0] = 0;
     $$sink$i$i$i75 = $73;$624 = 0;
    } else {
     $326 = (((($0)) + 40|0) + ($324)|0);
     $$pre$i$i72 = HEAP8[$71>>0]|0;
     $$sink$i$i$i75 = $326;$624 = $$pre$i$i72;
    }
    HEAP32[$67>>2] = $$sink$i$i$i75;
    HEAP32[$66>>2] = $73;
    $$0$i$i77 = $624;
    label = 128;
   }
  }
  do {
   if ((label|0) == 128) {
    $327 = $$0$i$i77&255;
    $328 = ($$0$i$i77&255)>(12);
    if ($328) {
     $$3 = 0;
     return ($$3|0);
    } else {
     $329 = 1 << $327;
     $330 = (($327) + 1)|0;
     $331 = 2 << $327;
     $332 = (($331) + -1)|0;
     $339 = $329;$622 = $332;$623 = $330;
     break;
    }
   }
  } while(0);
  $$0105167$i = 0;
  while(1) {
   $333 = (((($1)) + 2088|0) + ($$0105167$i<<2)|0);
   HEAP16[$333>>1] = -1;
   $334 = $$0105167$i&255;
   $335 = (((((($1)) + 2088|0) + ($$0105167$i<<2)|0)) + 2|0);
   HEAP8[$335>>0] = $334;
   $336 = (((((($1)) + 2088|0) + ($$0105167$i<<2)|0)) + 3|0);
   HEAP8[$336>>0] = $334;
   $337 = (($$0105167$i) + 1)|0;
   $338 = ($337|0)<($339|0);
   if ($338) {
    $$0105167$i = $337;
   } else {
    break;
   }
  }
  $340 = (($339) + 2)|0;
  $341 = (($339) + 1)|0;
  $$0101$i$ph = 0;$$0106$i$ph = 0;$$0108$i$ph = 0;$$0110$i$ph = -1;$$0114$i$ph = $340;$$0118$i$ph = $622;$$0123$i$ph = $623;$$0128$i$ph = 1;
  L284: while(1) {
   $$0101$i = $$0101$i$ph;$$0106$i = $$0106$i$ph;$$0108$i = $$0108$i$ph;
   while(1) {
    $342 = ($$0106$i|0)<($$0123$i$ph|0);
    if (!($342)) {
     break;
    }
    $343 = ($$0101$i|0)==(0);
    $344 = HEAP32[$66>>2]|0;
    $345 = HEAP32[$67>>2]|0;
    if ($343) {
     $346 = ($344>>>0)<($345>>>0);
     if ($346) {
      $347 = ((($344)) + 1|0);
      HEAP32[$66>>2] = $347;
      $348 = HEAP8[$344>>0]|0;
      $$0$i137$i = $348;$625 = $345;$626 = $347;
     } else {
      $349 = HEAP32[$68>>2]|0;
      $350 = ($349|0)==(0);
      if ($350) {
       break L284;
      }
      $351 = HEAP32[$69>>2]|0;
      $352 = HEAP32[$70>>2]|0;
      $353 = HEAP32[$72>>2]|0;
      $354 = (ftCall_iiii($351|0,$352,$71,$353)|0);
      $355 = ($354|0)==(0);
      if ($355) {
       HEAP32[$68>>2] = 0;
       HEAP8[$71>>0] = 0;
       $$sink$i$i135$i = $73;$627 = 0;
      } else {
       $356 = (((($0)) + 40|0) + ($354)|0);
       $$pre$i132$i = HEAP8[$71>>0]|0;
       $$sink$i$i135$i = $356;$627 = $$pre$i132$i;
      }
      HEAP32[$67>>2] = $$sink$i$i135$i;
      HEAP32[$66>>2] = $73;
      $$0$i137$i = $627;$625 = $$sink$i$i135$i;$626 = $73;
     }
     $357 = $$0$i137$i&255;
     $358 = ($$0$i137$i<<24>>24)==(0);
     if ($358) {
      break L284;
     } else {
      $$1102$i = $357;$361 = $626;$362 = $625;
     }
    } else {
     $$1102$i = $$0101$i;$361 = $344;$362 = $345;
    }
    $359 = (($$1102$i) + -1)|0;
    $360 = ($361>>>0)<($362>>>0);
    do {
     if ($360) {
      $363 = ((($361)) + 1|0);
      HEAP32[$66>>2] = $363;
      $364 = HEAP8[$361>>0]|0;
      $$0$i144$i = $364;
     } else {
      $365 = HEAP32[$68>>2]|0;
      $366 = ($365|0)==(0);
      if ($366) {
       $$0$i144$i = 0;
       break;
      }
      $367 = HEAP32[$69>>2]|0;
      $368 = HEAP32[$70>>2]|0;
      $369 = HEAP32[$72>>2]|0;
      $370 = (ftCall_iiii($367|0,$368,$71,$369)|0);
      $371 = ($370|0)==(0);
      if ($371) {
       HEAP32[$68>>2] = 0;
       HEAP8[$71>>0] = 0;
       $$sink$i$i142$i = $73;$628 = 0;
      } else {
       $372 = (((($0)) + 40|0) + ($370)|0);
       $$pre$i139$i = HEAP8[$71>>0]|0;
       $$sink$i$i142$i = $372;$628 = $$pre$i139$i;
      }
      HEAP32[$67>>2] = $$sink$i$i142$i;
      HEAP32[$66>>2] = $73;
      $$0$i144$i = $628;
     }
    } while(0);
    $373 = $$0$i144$i&255;
    $374 = $373 << $$0106$i;
    $375 = $374 | $$0108$i;
    $376 = (($$0106$i) + 8)|0;
    $$0101$i = $359;$$0106$i = $376;$$0108$i = $375;
   }
   $377 = $$0108$i & $$0118$i$ph;
   $378 = $$0108$i >> $$0123$i$ph;
   $379 = (($$0106$i) - ($$0123$i$ph))|0;
   $380 = ($377|0)==($339|0);
   if ($380) {
    $$0110$i$ph$be = -1;$$0114$i$ph$be = $340;$$0118$i$ph$be = $622;$$0123$i$ph$be = $623;
   } else {
    $381 = ($377|0)==($341|0);
    if ($381) {
     label = 155;
     break;
    }
    $423 = ($377|0)<=($$0114$i$ph|0);
    $424 = ($$0128$i$ph|0)==(0);
    $or$cond1 = $423 & $424;
    if (!($or$cond1)) {
     $$3 = 0;
     label = 265;
     break;
    }
    $425 = ($$0110$i$ph|0)>(-1);
    if ($425) {
     $426 = (($$0114$i$ph) + 1)|0;
     $427 = ($$0114$i$ph|0)>(8191);
     if ($427) {
      $$3 = 0;
      label = 265;
      break;
     }
     $428 = $$0110$i$ph&65535;
     $429 = (((($1)) + 2088|0) + ($$0114$i$ph<<2)|0);
     HEAP16[$429>>1] = $428;
     $430 = (((((($1)) + 2088|0) + ($$0110$i$ph<<2)|0)) + 2|0);
     $431 = HEAP8[$430>>0]|0;
     $432 = (((((($1)) + 2088|0) + ($$0114$i$ph<<2)|0)) + 2|0);
     HEAP8[$432>>0] = $431;
     $433 = ($377|0)==($426|0);
     if ($433) {
      $$sink210 = $431;
     } else {
      $434 = (((((($1)) + 2088|0) + ($377<<2)|0)) + 2|0);
      $435 = HEAP8[$434>>0]|0;
      $$sink210 = $435;
     }
     $436 = (((((($1)) + 2088|0) + ($$0114$i$ph<<2)|0)) + 3|0);
     HEAP8[$436>>0] = $$sink210;
     $$1115$i = $426;
    } else {
     $437 = ($377|0)==($$0114$i$ph|0);
     if ($437) {
      $$3 = 0;
      label = 265;
      break;
     } else {
      $$1115$i = $$0114$i$ph;
     }
    }
    $438 = $377&65535;
    _stbi__out_gif_code($1,$438);
    $439 = $$1115$i & $$0118$i$ph;
    $440 = ($439|0)==(0);
    $441 = ($$1115$i|0)<(4096);
    $or$cond$i = $441 & $440;
    $442 = (($$0123$i$ph) + 1)|0;
    $443 = 1 << $442;
    $444 = (($443) + -1)|0;
    $spec$select$i = $or$cond$i ? $442 : $$0123$i$ph;
    $spec$select161$i = $or$cond$i ? $444 : $$0118$i$ph;
    $$0110$i$ph$be = $377;$$0114$i$ph$be = $$1115$i;$$0118$i$ph$be = $spec$select161$i;$$0123$i$ph$be = $spec$select$i;
   }
   $$0101$i$ph = $$0101$i;$$0106$i$ph = $379;$$0108$i$ph = $378;$$0110$i$ph = $$0110$i$ph$be;$$0114$i$ph = $$0114$i$ph$be;$$0118$i$ph = $$0118$i$ph$be;$$0123$i$ph = $$0123$i$ph$be;$$0128$i$ph = 0;
  }
  L324: do {
   if ((label|0) == 155) {
    $382 = ($$0101$i|0)<(0);
    L329: do {
     if ($382) {
      $383 = HEAP32[$67>>2]|0;
      HEAP32[$66>>2] = $383;
     } else {
      $384 = HEAP32[$69>>2]|0;
      $385 = ($384|0)==(0|0);
      do {
       if ($385) {
        $$pre$i146$i = HEAP32[$66>>2]|0;
        $396 = $$pre$i146$i;
       } else {
        $386 = HEAP32[$67>>2]|0;
        $387 = HEAP32[$66>>2]|0;
        $388 = $386;
        $389 = (($388) - ($387))|0;
        $390 = ($$0101$i|0)>($389|0);
        $391 = $387;
        if (!($390)) {
         $396 = $391;
         break;
        }
        HEAP32[$66>>2] = $386;
        $392 = HEAP32[$74>>2]|0;
        $393 = HEAP32[$70>>2]|0;
        $394 = (($$0101$i) - ($389))|0;
        ftCall_vii($392|0,$393,$394);
        break L329;
       }
      } while(0);
      $395 = (($396) + ($$0101$i)|0);
      HEAP32[$66>>2] = $395;
     }
    } while(0);
    while(1) {
     $397 = HEAP32[$66>>2]|0;
     $398 = HEAP32[$67>>2]|0;
     $399 = ($397>>>0)<($398>>>0);
     if ($399) {
      $400 = ((($397)) + 1|0);
      HEAP32[$66>>2] = $400;
      $401 = HEAP8[$397>>0]|0;
      $$0$i153$i = $401;$$pre$i156$i = $400;$416 = $398;
     } else {
      $402 = HEAP32[$68>>2]|0;
      $403 = ($402|0)==(0);
      if ($403) {
       break L324;
      }
      $404 = HEAP32[$69>>2]|0;
      $405 = HEAP32[$70>>2]|0;
      $406 = HEAP32[$72>>2]|0;
      $407 = (ftCall_iiii($404|0,$405,$71,$406)|0);
      $408 = ($407|0)==(0);
      if ($408) {
       HEAP32[$68>>2] = 0;
       HEAP8[$71>>0] = 0;
       $$sink$i$i151$i = $73;$629 = 0;
      } else {
       $409 = (((($0)) + 40|0) + ($407)|0);
       $$pre$i148$i = HEAP8[$71>>0]|0;
       $$sink$i$i151$i = $409;$629 = $$pre$i148$i;
      }
      HEAP32[$67>>2] = $$sink$i$i151$i;
      HEAP32[$66>>2] = $73;
      $$0$i153$i = $629;$$pre$i156$i = $73;$416 = $$sink$i$i151$i;
     }
     $410 = $$pre$i156$i;
     $411 = $$0$i153$i&255;
     $412 = ($$0$i153$i<<24>>24)==(0);
     if ($412) {
      break L324;
     }
     $413 = HEAP32[$69>>2]|0;
     $414 = ($413|0)==(0|0);
     do {
      if ($414) {
       label = 174;
      } else {
       $415 = $416;
       $417 = (($415) - ($410))|0;
       $418 = ($417|0)<($411|0);
       if (!($418)) {
        label = 174;
        break;
       }
       HEAP32[$66>>2] = $416;
       $419 = HEAP32[$74>>2]|0;
       $420 = HEAP32[$70>>2]|0;
       $421 = (($411) - ($417))|0;
       ftCall_vii($419|0,$420,$421);
      }
     } while(0);
     if ((label|0) == 174) {
      label = 0;
      $422 = (($$pre$i156$i) + ($411)|0);
      HEAP32[$66>>2] = $422;
     }
    }
   }
   else if ((label|0) == 265) {
    return ($$3|0);
   }
  } while(0);
  $$3$i = HEAP32[$4>>2]|0;
  $445 = ($$3$i|0)==(0|0);
  if ($445) {
   $$3 = 0;
   return ($$3|0);
  }
  $446 = HEAP32[$$pre$phi179Z2D>>2]|0;
  $447 = HEAP32[$$pre$phi180Z2D>>2]|0;
  $448 = Math_imul($447, $446)|0;
  $449 = ($$0172|0)==(0);
  if ($449) {
   $$3 = $$3$i;
   return ($$3|0);
  }
  $450 = ((($1)) + 24|0);
  $451 = HEAP32[$450>>2]|0;
  $452 = ($451|0)>(0);
  $453 = ($448|0)>(0);
  $or$cond160 = $452 & $453;
  if (!($or$cond160)) {
   $$3 = $$3$i;
   return ($$3|0);
  }
  $$2175155 = 0;
  while(1) {
   $454 = HEAP32[$$pre$phiZ2D>>2]|0;
   $455 = (($454) + ($$2175155)|0);
   $456 = HEAP8[$455>>0]|0;
   $457 = ($456<<24>>24)==(0);
   if ($457) {
    $458 = HEAP32[$450>>2]|0;
    $459 = (((((($1)) + 40|0) + ($458<<2)|0)) + 3|0);
    HEAP8[$459>>0] = -1;
    $460 = HEAP32[$4>>2]|0;
    $461 = $$2175155 << 2;
    $462 = (($460) + ($461)|0);
    $463 = HEAP32[$450>>2]|0;
    $464 = (((($1)) + 40|0) + ($463<<2)|0);
    $465 = HEAPU8[$464>>0]|(HEAPU8[$464+1>>0]<<8)|(HEAPU8[$464+2>>0]<<16)|(HEAPU8[$464+3>>0]<<24);
    HEAP8[$462>>0]=$465&255;HEAP8[$462+1>>0]=($465>>8)&255;HEAP8[$462+2>>0]=($465>>16)&255;HEAP8[$462+3>>0]=$465>>24;
   }
   $466 = (($$2175155) + 1)|0;
   $exitcond = ($466|0)==($448|0);
   if ($exitcond) {
    $$3 = $$3$i;
    break;
   } else {
    $$2175155 = $466;
   }
  }
  return ($$3|0);
 }
 else if ((label|0) == 264) {
  $$3 = $0;
  return ($$3|0);
 }
 else if ((label|0) == 265) {
  return ($$3|0);
 }
 return (0)|0;
}
function _stbi__get32be($0) {
 $0 = $0|0;
 var $$0$i$i = 0, $$0$i$i8 = 0, $$0$i8$i = 0, $$0$i8$i15 = 0, $$pre$i$i = 0, $$pre$i$i3 = 0, $$pre$i3$i = 0, $$pre$i3$i10 = 0, $$pre$phi$i$i5Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i5$i12Z2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre5$i$i = 0, $$pre5$i$i4 = 0, $$pre5$i4$i = 0, $$pre5$i4$i11 = 0, $$sink$i$i$i = 0, $$sink$i$i$i6 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i13 = 0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0;
 var $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 168|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 172|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)<($4>>>0);
 if ($5) {
  $6 = ((($2)) + 1|0);
  HEAP32[$1>>2] = $6;
  $7 = HEAP8[$2>>0]|0;
  $$0$i$i = $7;$25 = $6;$26 = $4;
 } else {
  $8 = ((($0)) + 32|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = ($9|0)==(0);
  if ($10) {
   $$0$i$i = 0;$25 = $2;$26 = $4;
  } else {
   $11 = ((($0)) + 16|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ((($0)) + 28|0);
   $14 = HEAP32[$13>>2]|0;
   $15 = ((($0)) + 40|0);
   $16 = ((($0)) + 36|0);
   $17 = HEAP32[$16>>2]|0;
   $18 = (ftCall_iiii($12|0,$14,$15,$17)|0);
   $19 = ($18|0)==(0);
   if ($19) {
    HEAP32[$8>>2] = 0;
    $20 = ((($0)) + 41|0);
    HEAP8[$15>>0] = 0;
    $$pre$phi$i$iZ2D = $20;$$sink$i$i$i = $20;$89 = 0;
   } else {
    $21 = (((($0)) + 40|0) + ($18)|0);
    $$pre$i$i = HEAP8[$15>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $21;$89 = $$pre$i$i;
   }
   HEAP32[$3>>2] = $$sink$i$i$i;
   HEAP32[$1>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i = $89;$25 = $$pre$phi$i$iZ2D;$26 = $$sink$i$i$i;
  }
 }
 $22 = $$0$i$i&255;
 $23 = $22 << 8;
 $24 = ($25>>>0)<($26>>>0);
 if ($24) {
  $27 = ((($25)) + 1|0);
  HEAP32[$1>>2] = $27;
  $28 = HEAP8[$25>>0]|0;
  $$0$i8$i = $28;$47 = $27;$48 = $26;
 } else {
  $29 = ((($0)) + 32|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  if ($31) {
   $$0$i8$i = 0;$47 = $25;$48 = $26;
  } else {
   $32 = ((($0)) + 16|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($0)) + 28|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($0)) + 40|0);
   $37 = ((($0)) + 36|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = (ftCall_iiii($33|0,$35,$36,$38)|0);
   $40 = ($39|0)==(0);
   if ($40) {
    HEAP32[$29>>2] = 0;
    $41 = ((($0)) + 41|0);
    HEAP8[$36>>0] = 0;
    $$pre$phi$i5$iZ2D = $41;$$sink$i$i6$i = $41;$90 = 0;
   } else {
    $42 = (((($0)) + 40|0) + ($39)|0);
    $$pre$i3$i = HEAP8[$36>>0]|0;
    $$pre5$i4$i = ((($0)) + 41|0);
    $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $42;$90 = $$pre$i3$i;
   }
   HEAP32[$3>>2] = $$sink$i$i6$i;
   HEAP32[$1>>2] = $$pre$phi$i5$iZ2D;
   $$0$i8$i = $90;$47 = $$pre$phi$i5$iZ2D;$48 = $$sink$i$i6$i;
  }
 }
 $43 = $$0$i8$i&255;
 $44 = $23 | $43;
 $45 = $44 << 16;
 $46 = ($47>>>0)<($48>>>0);
 if ($46) {
  $49 = ((($47)) + 1|0);
  HEAP32[$1>>2] = $49;
  $50 = HEAP8[$47>>0]|0;
  $$0$i$i8 = $50;$68 = $49;$69 = $48;
 } else {
  $51 = ((($0)) + 32|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ($52|0)==(0);
  if ($53) {
   $$0$i$i8 = 0;$68 = $47;$69 = $48;
  } else {
   $54 = ((($0)) + 16|0);
   $55 = HEAP32[$54>>2]|0;
   $56 = ((($0)) + 28|0);
   $57 = HEAP32[$56>>2]|0;
   $58 = ((($0)) + 40|0);
   $59 = ((($0)) + 36|0);
   $60 = HEAP32[$59>>2]|0;
   $61 = (ftCall_iiii($55|0,$57,$58,$60)|0);
   $62 = ($61|0)==(0);
   if ($62) {
    HEAP32[$51>>2] = 0;
    $63 = ((($0)) + 41|0);
    HEAP8[$58>>0] = 0;
    $$pre$phi$i$i5Z2D = $63;$$sink$i$i$i6 = $63;$91 = 0;
   } else {
    $64 = (((($0)) + 40|0) + ($61)|0);
    $$pre$i$i3 = HEAP8[$58>>0]|0;
    $$pre5$i$i4 = ((($0)) + 41|0);
    $$pre$phi$i$i5Z2D = $$pre5$i$i4;$$sink$i$i$i6 = $64;$91 = $$pre$i$i3;
   }
   HEAP32[$3>>2] = $$sink$i$i$i6;
   HEAP32[$1>>2] = $$pre$phi$i$i5Z2D;
   $$0$i$i8 = $91;$68 = $$pre$phi$i$i5Z2D;$69 = $$sink$i$i$i6;
  }
 }
 $65 = $$0$i$i8&255;
 $66 = $65 << 8;
 $67 = ($68>>>0)<($69>>>0);
 if ($67) {
  $70 = ((($68)) + 1|0);
  HEAP32[$1>>2] = $70;
  $71 = HEAP8[$68>>0]|0;
  $$0$i8$i15 = $71;
  $86 = $$0$i8$i15&255;
  $87 = $66 | $45;
  $88 = $87 | $86;
  return ($88|0);
 }
 $72 = ((($0)) + 32|0);
 $73 = HEAP32[$72>>2]|0;
 $74 = ($73|0)==(0);
 if ($74) {
  $$0$i8$i15 = 0;
  $86 = $$0$i8$i15&255;
  $87 = $66 | $45;
  $88 = $87 | $86;
  return ($88|0);
 }
 $75 = ((($0)) + 16|0);
 $76 = HEAP32[$75>>2]|0;
 $77 = ((($0)) + 28|0);
 $78 = HEAP32[$77>>2]|0;
 $79 = ((($0)) + 40|0);
 $80 = ((($0)) + 36|0);
 $81 = HEAP32[$80>>2]|0;
 $82 = (ftCall_iiii($76|0,$78,$79,$81)|0);
 $83 = ($82|0)==(0);
 if ($83) {
  HEAP32[$72>>2] = 0;
  $84 = ((($0)) + 41|0);
  HEAP8[$79>>0] = 0;
  $$pre$phi$i5$i12Z2D = $84;$$sink$i$i6$i13 = $84;$92 = 0;
 } else {
  $85 = (((($0)) + 40|0) + ($82)|0);
  $$pre$i3$i10 = HEAP8[$79>>0]|0;
  $$pre5$i4$i11 = ((($0)) + 41|0);
  $$pre$phi$i5$i12Z2D = $$pre5$i4$i11;$$sink$i$i6$i13 = $85;$92 = $$pre$i3$i10;
 }
 HEAP32[$3>>2] = $$sink$i$i6$i13;
 HEAP32[$1>>2] = $$pre$phi$i5$i12Z2D;
 $$0$i8$i15 = $92;
 $86 = $$0$i8$i15&255;
 $87 = $66 | $45;
 $88 = $87 | $86;
 return ($88|0);
}
function _stbi__pic_is4($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$1 = 0, $$0$i$2 = 0, $$0$i$3 = 0, $$pre$i = 0, $$pre$i$1 = 0, $$pre$i$2 = 0, $$pre$i$3 = 0, $$sink$i$i = 0, $$sink$i$i$1 = 0, $$sink$i$i$2 = 0, $$sink$i$i$3 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0;
 var $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 168|0);
 $3 = ((($0)) + 172|0);
 $4 = ((($0)) + 32|0);
 $5 = ((($0)) + 16|0);
 $6 = ((($0)) + 28|0);
 $7 = ((($0)) + 40|0);
 $8 = ((($0)) + 36|0);
 $9 = ((($0)) + 41|0);
 $10 = HEAP32[$2>>2]|0;
 $11 = HEAP32[$3>>2]|0;
 $12 = ($10>>>0)<($11>>>0);
 if ($12) {
  $16 = ((($10)) + 1|0);
  HEAP32[$2>>2] = $16;
  $17 = HEAP8[$10>>0]|0;
  $$0$i = $17;$14 = $16;$15 = $11;
 } else {
  $18 = HEAP32[$4>>2]|0;
  $19 = ($18|0)==(0);
  if ($19) {
   $$0$i = 0;$14 = $10;$15 = $11;
  } else {
   $20 = HEAP32[$5>>2]|0;
   $21 = HEAP32[$6>>2]|0;
   $22 = HEAP32[$8>>2]|0;
   $23 = (ftCall_iiii($20|0,$21,$7,$22)|0);
   $24 = ($23|0)==(0);
   if ($24) {
    HEAP32[$4>>2] = 0;
    HEAP8[$7>>0] = 0;
    $$sink$i$i = $9;$73 = 0;
   } else {
    $25 = (((($0)) + 40|0) + ($23)|0);
    $$pre$i = HEAP8[$7>>0]|0;
    $$sink$i$i = $25;$73 = $$pre$i;
   }
   HEAP32[$3>>2] = $$sink$i$i;
   HEAP32[$2>>2] = $9;
   $$0$i = $73;$14 = $9;$15 = $$sink$i$i;
  }
 }
 $26 = HEAP8[$1>>0]|0;
 $27 = ($$0$i<<24>>24)==($26<<24>>24);
 if (!($27)) {
  return 0;
 }
 $13 = ($14>>>0)<($15>>>0);
 if ($13) {
  $36 = ((($14)) + 1|0);
  HEAP32[$2>>2] = $36;
  $37 = HEAP8[$14>>0]|0;
  $$0$i$1 = $37;$42 = $36;$43 = $15;
 } else {
  $28 = HEAP32[$4>>2]|0;
  $29 = ($28|0)==(0);
  if ($29) {
   $$0$i$1 = 0;$42 = $14;$43 = $15;
  } else {
   $30 = HEAP32[$5>>2]|0;
   $31 = HEAP32[$6>>2]|0;
   $32 = HEAP32[$8>>2]|0;
   $33 = (ftCall_iiii($30|0,$31,$7,$32)|0);
   $34 = ($33|0)==(0);
   if ($34) {
    HEAP32[$4>>2] = 0;
    HEAP8[$7>>0] = 0;
    $$sink$i$i$1 = $9;$74 = 0;
   } else {
    $35 = (((($0)) + 40|0) + ($33)|0);
    $$pre$i$1 = HEAP8[$7>>0]|0;
    $$sink$i$i$1 = $35;$74 = $$pre$i$1;
   }
   HEAP32[$3>>2] = $$sink$i$i$1;
   HEAP32[$2>>2] = $9;
   $$0$i$1 = $74;$42 = $9;$43 = $$sink$i$i$1;
  }
 }
 $38 = ((($1)) + 1|0);
 $39 = HEAP8[$38>>0]|0;
 $40 = ($$0$i$1<<24>>24)==($39<<24>>24);
 if (!($40)) {
  return 0;
 }
 $41 = ($42>>>0)<($43>>>0);
 if ($41) {
  $52 = ((($42)) + 1|0);
  HEAP32[$2>>2] = $52;
  $53 = HEAP8[$42>>0]|0;
  $$0$i$2 = $53;$58 = $52;$59 = $43;
 } else {
  $44 = HEAP32[$4>>2]|0;
  $45 = ($44|0)==(0);
  if ($45) {
   $$0$i$2 = 0;$58 = $42;$59 = $43;
  } else {
   $46 = HEAP32[$5>>2]|0;
   $47 = HEAP32[$6>>2]|0;
   $48 = HEAP32[$8>>2]|0;
   $49 = (ftCall_iiii($46|0,$47,$7,$48)|0);
   $50 = ($49|0)==(0);
   if ($50) {
    HEAP32[$4>>2] = 0;
    HEAP8[$7>>0] = 0;
    $$sink$i$i$2 = $9;$75 = 0;
   } else {
    $51 = (((($0)) + 40|0) + ($49)|0);
    $$pre$i$2 = HEAP8[$7>>0]|0;
    $$sink$i$i$2 = $51;$75 = $$pre$i$2;
   }
   HEAP32[$3>>2] = $$sink$i$i$2;
   HEAP32[$2>>2] = $9;
   $$0$i$2 = $75;$58 = $9;$59 = $$sink$i$i$2;
  }
 }
 $54 = ((($1)) + 2|0);
 $55 = HEAP8[$54>>0]|0;
 $56 = ($$0$i$2<<24>>24)==($55<<24>>24);
 if (!($56)) {
  return 0;
 }
 $57 = ($58>>>0)<($59>>>0);
 if ($57) {
  $68 = ((($58)) + 1|0);
  HEAP32[$2>>2] = $68;
  $69 = HEAP8[$58>>0]|0;
  $$0$i$3 = $69;
  $70 = ((($1)) + 3|0);
  $71 = HEAP8[$70>>0]|0;
  $72 = ($$0$i$3<<24>>24)==($71<<24>>24);
  $spec$select = $72&1;
  return ($spec$select|0);
 }
 $60 = HEAP32[$4>>2]|0;
 $61 = ($60|0)==(0);
 if ($61) {
  $$0$i$3 = 0;
  $70 = ((($1)) + 3|0);
  $71 = HEAP8[$70>>0]|0;
  $72 = ($$0$i$3<<24>>24)==($71<<24>>24);
  $spec$select = $72&1;
  return ($spec$select|0);
 }
 $62 = HEAP32[$5>>2]|0;
 $63 = HEAP32[$6>>2]|0;
 $64 = HEAP32[$8>>2]|0;
 $65 = (ftCall_iiii($62|0,$63,$7,$64)|0);
 $66 = ($65|0)==(0);
 if ($66) {
  HEAP32[$4>>2] = 0;
  HEAP8[$7>>0] = 0;
  $$sink$i$i$3 = $9;$76 = 0;
 } else {
  $67 = (((($0)) + 40|0) + ($65)|0);
  $$pre$i$3 = HEAP8[$7>>0]|0;
  $$sink$i$i$3 = $67;$76 = $$pre$i$3;
 }
 HEAP32[$3>>2] = $$sink$i$i$3;
 HEAP32[$2>>2] = $9;
 $$0$i$3 = $76;
 $70 = ((($1)) + 3|0);
 $71 = HEAP8[$70>>0]|0;
 $72 = ($$0$i$3<<24>>24)==($71<<24>>24);
 $spec$select = $72&1;
 return ($spec$select|0);
}
function _stbi__readval($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$i15 = 0, $$0$i15$1 = 0, $$0$i15$2 = 0, $$0$i15$3 = 0, $$014 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$1 = 0, $$pre$i$2 = 0, $$pre$i$3 = 0, $$pre20 = 0, $$pre21 = 0, $$pre22 = 0, $$pre23 = 0, $$pre24 = 0, $$pre25 = 0, $$pre26 = 0, $$sink$i$i = 0, $$sink$i$i$1 = 0, $$sink$i$i$2 = 0;
 var $$sink$i$i$3 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0;
 var $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = ((($0)) + 168|0);
 $5 = ((($0)) + 172|0);
 $6 = ((($0)) + 24|0);
 $7 = ((($0)) + 28|0);
 $8 = ((($0)) + 32|0);
 $9 = ((($0)) + 40|0);
 $10 = ((($0)) + 36|0);
 $11 = ((($0)) + 41|0);
 $12 = $1 & 128;
 $13 = ($12|0)==(0);
 if (!($13)) {
  $14 = HEAP32[$3>>2]|0;
  $15 = ($14|0)==(0|0);
  do {
   if ($15) {
    label = 6;
   } else {
    $16 = HEAP32[$6>>2]|0;
    $17 = HEAP32[$7>>2]|0;
    $18 = (ftCall_ii($16|0,$17)|0);
    $19 = ($18|0)==(0);
    if ($19) {
     $$pre = HEAP32[$4>>2]|0;
     $$pre20 = HEAP32[$5>>2]|0;
     $26 = $$pre;$27 = $$pre20;
     break;
    }
    $20 = HEAP32[$8>>2]|0;
    $21 = ($20|0)==(0);
    if ($21) {
     $$014 = 0;
     return ($$014|0);
    } else {
     label = 6;
    }
   }
  } while(0);
  if ((label|0) == 6) {
   $22 = HEAP32[$4>>2]|0;
   $23 = HEAP32[$5>>2]|0;
   $24 = ($22>>>0)<($23>>>0);
   if ($24) {
    $26 = $22;$27 = $23;
   } else {
    $$014 = 0;
    return ($$014|0);
   }
  }
  $25 = ($26>>>0)<($27>>>0);
  if ($25) {
   $28 = ((($26)) + 1|0);
   HEAP32[$4>>2] = $28;
   $29 = HEAP8[$26>>0]|0;
   $$0$i15 = $29;
  } else {
   $30 = HEAP32[$8>>2]|0;
   $31 = ($30|0)==(0);
   if ($31) {
    $$0$i15 = 0;
   } else {
    $32 = HEAP32[$3>>2]|0;
    $33 = HEAP32[$7>>2]|0;
    $34 = HEAP32[$10>>2]|0;
    $35 = (ftCall_iiii($32|0,$33,$9,$34)|0);
    $36 = ($35|0)==(0);
    if ($36) {
     HEAP32[$8>>2] = 0;
     HEAP8[$9>>0] = 0;
     $$sink$i$i = $11;$119 = 0;
    } else {
     $37 = (((($0)) + 40|0) + ($35)|0);
     $$pre$i = HEAP8[$9>>0]|0;
     $$sink$i$i = $37;$119 = $$pre$i;
    }
    HEAP32[$5>>2] = $$sink$i$i;
    HEAP32[$4>>2] = $11;
    $$0$i15 = $119;
   }
  }
  HEAP8[$2>>0] = $$0$i15;
 }
 $38 = $1 & 64;
 $39 = ($38|0)==(0);
 if (!($39)) {
  $40 = HEAP32[$3>>2]|0;
  $41 = ($40|0)==(0|0);
  do {
   if ($41) {
    label = 21;
   } else {
    $42 = HEAP32[$6>>2]|0;
    $43 = HEAP32[$7>>2]|0;
    $44 = (ftCall_ii($42|0,$43)|0);
    $45 = ($44|0)==(0);
    if ($45) {
     $$pre21 = HEAP32[$4>>2]|0;
     $$pre22 = HEAP32[$5>>2]|0;
     $52 = $$pre21;$53 = $$pre22;
     break;
    }
    $46 = HEAP32[$8>>2]|0;
    $47 = ($46|0)==(0);
    if ($47) {
     $$014 = 0;
     return ($$014|0);
    } else {
     label = 21;
    }
   }
  } while(0);
  if ((label|0) == 21) {
   $48 = HEAP32[$4>>2]|0;
   $49 = HEAP32[$5>>2]|0;
   $50 = ($48>>>0)<($49>>>0);
   if ($50) {
    $52 = $48;$53 = $49;
   } else {
    $$014 = 0;
    return ($$014|0);
   }
  }
  $51 = ($52>>>0)<($53>>>0);
  if ($51) {
   $62 = ((($52)) + 1|0);
   HEAP32[$4>>2] = $62;
   $63 = HEAP8[$52>>0]|0;
   $$0$i15$1 = $63;
  } else {
   $54 = HEAP32[$8>>2]|0;
   $55 = ($54|0)==(0);
   if ($55) {
    $$0$i15$1 = 0;
   } else {
    $56 = HEAP32[$3>>2]|0;
    $57 = HEAP32[$7>>2]|0;
    $58 = HEAP32[$10>>2]|0;
    $59 = (ftCall_iiii($56|0,$57,$9,$58)|0);
    $60 = ($59|0)==(0);
    if ($60) {
     HEAP32[$8>>2] = 0;
     HEAP8[$9>>0] = 0;
     $$sink$i$i$1 = $11;$120 = 0;
    } else {
     $61 = (((($0)) + 40|0) + ($59)|0);
     $$pre$i$1 = HEAP8[$9>>0]|0;
     $$sink$i$i$1 = $61;$120 = $$pre$i$1;
    }
    HEAP32[$5>>2] = $$sink$i$i$1;
    HEAP32[$4>>2] = $11;
    $$0$i15$1 = $120;
   }
  }
  $64 = ((($2)) + 1|0);
  HEAP8[$64>>0] = $$0$i15$1;
 }
 $65 = $1 & 32;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $67 = HEAP32[$3>>2]|0;
  $68 = ($67|0)==(0|0);
  do {
   if ($68) {
    label = 35;
   } else {
    $69 = HEAP32[$6>>2]|0;
    $70 = HEAP32[$7>>2]|0;
    $71 = (ftCall_ii($69|0,$70)|0);
    $72 = ($71|0)==(0);
    if ($72) {
     $$pre23 = HEAP32[$4>>2]|0;
     $$pre24 = HEAP32[$5>>2]|0;
     $79 = $$pre23;$80 = $$pre24;
     break;
    }
    $73 = HEAP32[$8>>2]|0;
    $74 = ($73|0)==(0);
    if ($74) {
     $$014 = 0;
     return ($$014|0);
    } else {
     label = 35;
    }
   }
  } while(0);
  if ((label|0) == 35) {
   $75 = HEAP32[$4>>2]|0;
   $76 = HEAP32[$5>>2]|0;
   $77 = ($75>>>0)<($76>>>0);
   if ($77) {
    $79 = $75;$80 = $76;
   } else {
    $$014 = 0;
    return ($$014|0);
   }
  }
  $78 = ($79>>>0)<($80>>>0);
  if ($78) {
   $89 = ((($79)) + 1|0);
   HEAP32[$4>>2] = $89;
   $90 = HEAP8[$79>>0]|0;
   $$0$i15$2 = $90;
  } else {
   $81 = HEAP32[$8>>2]|0;
   $82 = ($81|0)==(0);
   if ($82) {
    $$0$i15$2 = 0;
   } else {
    $83 = HEAP32[$3>>2]|0;
    $84 = HEAP32[$7>>2]|0;
    $85 = HEAP32[$10>>2]|0;
    $86 = (ftCall_iiii($83|0,$84,$9,$85)|0);
    $87 = ($86|0)==(0);
    if ($87) {
     HEAP32[$8>>2] = 0;
     HEAP8[$9>>0] = 0;
     $$sink$i$i$2 = $11;$121 = 0;
    } else {
     $88 = (((($0)) + 40|0) + ($86)|0);
     $$pre$i$2 = HEAP8[$9>>0]|0;
     $$sink$i$i$2 = $88;$121 = $$pre$i$2;
    }
    HEAP32[$5>>2] = $$sink$i$i$2;
    HEAP32[$4>>2] = $11;
    $$0$i15$2 = $121;
   }
  }
  $91 = ((($2)) + 2|0);
  HEAP8[$91>>0] = $$0$i15$2;
 }
 $92 = $1 & 16;
 $93 = ($92|0)==(0);
 if ($93) {
  $$014 = $2;
  return ($$014|0);
 }
 $94 = HEAP32[$3>>2]|0;
 $95 = ($94|0)==(0|0);
 do {
  if ($95) {
   label = 49;
  } else {
   $96 = HEAP32[$6>>2]|0;
   $97 = HEAP32[$7>>2]|0;
   $98 = (ftCall_ii($96|0,$97)|0);
   $99 = ($98|0)==(0);
   if ($99) {
    $$pre25 = HEAP32[$4>>2]|0;
    $$pre26 = HEAP32[$5>>2]|0;
    $106 = $$pre25;$107 = $$pre26;
    break;
   }
   $100 = HEAP32[$8>>2]|0;
   $101 = ($100|0)==(0);
   if ($101) {
    $$014 = 0;
    return ($$014|0);
   } else {
    label = 49;
   }
  }
 } while(0);
 if ((label|0) == 49) {
  $102 = HEAP32[$4>>2]|0;
  $103 = HEAP32[$5>>2]|0;
  $104 = ($102>>>0)<($103>>>0);
  if ($104) {
   $106 = $102;$107 = $103;
  } else {
   $$014 = 0;
   return ($$014|0);
  }
 }
 $105 = ($106>>>0)<($107>>>0);
 if ($105) {
  $116 = ((($106)) + 1|0);
  HEAP32[$4>>2] = $116;
  $117 = HEAP8[$106>>0]|0;
  $$0$i15$3 = $117;
 } else {
  $108 = HEAP32[$8>>2]|0;
  $109 = ($108|0)==(0);
  if ($109) {
   $$0$i15$3 = 0;
  } else {
   $110 = HEAP32[$3>>2]|0;
   $111 = HEAP32[$7>>2]|0;
   $112 = HEAP32[$10>>2]|0;
   $113 = (ftCall_iiii($110|0,$111,$9,$112)|0);
   $114 = ($113|0)==(0);
   if ($114) {
    HEAP32[$8>>2] = 0;
    HEAP8[$9>>0] = 0;
    $$sink$i$i$3 = $11;$122 = 0;
   } else {
    $115 = (((($0)) + 40|0) + ($113)|0);
    $$pre$i$3 = HEAP8[$9>>0]|0;
    $$sink$i$i$3 = $115;$122 = $$pre$i$3;
   }
   HEAP32[$5>>2] = $$sink$i$i$3;
   HEAP32[$4>>2] = $11;
   $$0$i15$3 = $122;
  }
 }
 $118 = ((($2)) + 3|0);
 HEAP8[$118>>0] = $$0$i15$3;
 $$014 = $2;
 return ($$014|0);
}
function _stbi__pnm_info($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$0$i28 = 0, $$0$i34 = 0, $$0$i41 = 0, $$0$i43 = 0, $$0$i53 = 0, $$0$i6$i5074 = 0, $$0$i6$i5074$be = 0, $$0$i6$i6071 = 0, $$0$i6$i6071$be = 0, $$0$i6$i68 = 0, $$0$i6$i68$be = 0, $$024 = 0, $$cast = 0, $$off = 0, $$off$i$i = 0, $$off$i$i45 = 0, $$off$i$i55 = 0, $$old = 0;
 var $$old76 = 0, $$old78 = 0, $$old79 = 0, $$old81 = 0, $$old82 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i47 = 0, $$pre$i$i57 = 0, $$pre$i29 = 0, $$pre$i36 = 0, $$pre$phi$i31Z2D = 0, $$pre$phi$i38Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$pre5$i = 0, $$pre5$i30 = 0, $$pre5$i37 = 0, $$pre84 = 0;
 var $$pre85 = 0, $$pre86 = 0, $$pre87 = 0, $$pre88 = 0, $$pre89 = 0, $$promoted = 0, $$promoted70 = 0, $$promoted73 = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i48 = 0, $$sink$i$i$i58 = 0, $$sink$i$i32 = 0, $$sink$i$i39 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $18 = 0, $19 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0;
 var $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0;
 var $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0;
 var $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond77 = 0, $or$cond80 = 0, $or$cond83 = 0, $spec$select = 0, $spec$select1 = 0, $spec$select27 = 0, $switch = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $4 = sp;
 $5 = sp + 4|0;
 $6 = ($1|0)==(0|0);
 $spec$select = $6 ? $4 : $1;
 $7 = ($2|0)==(0|0);
 $$024 = $7 ? $4 : $2;
 $8 = ($3|0)==(0|0);
 $spec$select27 = $8 ? $4 : $3;
 $9 = ((($0)) + 176|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ((($0)) + 168|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($0)) + 180|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ((($0)) + 172|0);
 HEAP32[$14>>2] = $13;
 $15 = $10;
 $$cast = $13;
 $16 = ($15>>>0)<($$cast>>>0);
 if ($16) {
  $17 = ((($15)) + 1|0);
  HEAP32[$11>>2] = $17;
  $18 = HEAP8[$15>>0]|0;
  $$0$i28 = $18;$34 = $17;$35 = $$cast;
 } else {
  $19 = ((($0)) + 32|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $$0$i28 = 0;$34 = $15;$35 = $$cast;
  } else {
   $22 = ((($0)) + 16|0);
   $23 = HEAP32[$22>>2]|0;
   $24 = ((($0)) + 28|0);
   $25 = HEAP32[$24>>2]|0;
   $26 = ((($0)) + 40|0);
   $27 = ((($0)) + 36|0);
   $28 = HEAP32[$27>>2]|0;
   $29 = (ftCall_iiii($23|0,$25,$26,$28)|0);
   $30 = ($29|0)==(0);
   if ($30) {
    HEAP32[$19>>2] = 0;
    $31 = ((($0)) + 41|0);
    HEAP8[$26>>0] = 0;
    $$pre$phi$iZ2D = $31;$$sink$i$i = $31;$170 = 0;
   } else {
    $32 = (((($0)) + 40|0) + ($29)|0);
    $$pre$i = HEAP8[$26>>0]|0;
    $$pre5$i = ((($0)) + 41|0);
    $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $32;$170 = $$pre$i;
   }
   HEAP32[$14>>2] = $$sink$i$i;
   HEAP32[$11>>2] = $$pre$phi$iZ2D;
   $$0$i28 = $170;$34 = $$pre$phi$iZ2D;$35 = $$sink$i$i;
  }
 }
 $33 = ($34>>>0)<($35>>>0);
 if ($33) {
  $36 = ((($34)) + 1|0);
  HEAP32[$11>>2] = $36;
  $37 = HEAP8[$34>>0]|0;
  $$0$i34 = $37;$58 = $36;$59 = $35;
  label = 15;
 } else {
  $38 = ((($0)) + 32|0);
  $39 = HEAP32[$38>>2]|0;
  $40 = ($39|0)==(0);
  if (!($40)) {
   $41 = ((($0)) + 16|0);
   $42 = HEAP32[$41>>2]|0;
   $43 = ((($0)) + 28|0);
   $44 = HEAP32[$43>>2]|0;
   $45 = ((($0)) + 40|0);
   $46 = ((($0)) + 36|0);
   $47 = HEAP32[$46>>2]|0;
   $48 = (ftCall_iiii($42|0,$44,$45,$47)|0);
   $49 = ($48|0)==(0);
   if ($49) {
    HEAP32[$38>>2] = 0;
    $50 = ((($0)) + 41|0);
    HEAP8[$45>>0] = 0;
    $$pre$phi$i31Z2D = $50;$$sink$i$i32 = $50;$171 = 0;
   } else {
    $51 = (((($0)) + 40|0) + ($48)|0);
    $$pre$i29 = HEAP8[$45>>0]|0;
    $$pre5$i30 = ((($0)) + 41|0);
    $$pre$phi$i31Z2D = $$pre5$i30;$$sink$i$i32 = $51;$171 = $$pre$i29;
   }
   HEAP32[$14>>2] = $$sink$i$i32;
   HEAP32[$11>>2] = $$pre$phi$i31Z2D;
   $$0$i34 = $171;$58 = $$pre$phi$i31Z2D;$59 = $$sink$i$i32;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $52 = ($$0$i28<<24>>24)==(80);
  $$off = (($$0$i34) + -53)<<24>>24;
  $switch = ($$off&255)<(2);
  $or$cond = $52 & $switch;
  if ($or$cond) {
   $55 = ($$0$i34<<24>>24)==(54);
   $56 = $55 ? 3 : 1;
   HEAP32[$spec$select27>>2] = $56;
   $57 = ($58>>>0)<($59>>>0);
   if ($57) {
    $60 = ((($58)) + 1|0);
    HEAP32[$11>>2] = $60;
    $61 = HEAP8[$58>>0]|0;
    $$pre89 = ((($0)) + 32|0);
    $$0$i41 = $61;$$pre$phiZ2D = $$pre89;
   } else {
    $62 = ((($0)) + 32|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ($63|0)==(0);
    if ($64) {
     $$0$i41 = 0;$$pre$phiZ2D = $62;
    } else {
     $65 = ((($0)) + 16|0);
     $66 = HEAP32[$65>>2]|0;
     $67 = ((($0)) + 28|0);
     $68 = HEAP32[$67>>2]|0;
     $69 = ((($0)) + 40|0);
     $70 = ((($0)) + 36|0);
     $71 = HEAP32[$70>>2]|0;
     $72 = (ftCall_iiii($66|0,$68,$69,$71)|0);
     $73 = ($72|0)==(0);
     if ($73) {
      HEAP32[$62>>2] = 0;
      $74 = ((($0)) + 41|0);
      HEAP8[$69>>0] = 0;
      $$pre$phi$i38Z2D = $74;$$sink$i$i39 = $74;$172 = 0;
     } else {
      $75 = (((($0)) + 40|0) + ($72)|0);
      $$pre$i36 = HEAP8[$69>>0]|0;
      $$pre5$i37 = ((($0)) + 41|0);
      $$pre$phi$i38Z2D = $$pre5$i37;$$sink$i$i39 = $75;$172 = $$pre$i36;
     }
     HEAP32[$14>>2] = $$sink$i$i39;
     HEAP32[$11>>2] = $$pre$phi$i38Z2D;
     $$0$i41 = $172;$$pre$phiZ2D = $62;
    }
   }
   HEAP8[$5>>0] = $$0$i41;
   _stbi__pnm_skip_whitespace($0,$5);
   $76 = ((($0)) + 16|0);
   $77 = ((($0)) + 24|0);
   $78 = ((($0)) + 28|0);
   $79 = ((($0)) + 40|0);
   $80 = ((($0)) + 36|0);
   $81 = ((($0)) + 41|0);
   $$promoted73 = HEAP8[$5>>0]|0;
   $$0$i43 = 0;$$0$i6$i5074 = $$promoted73;
   L30: while(1) {
    $82 = HEAP32[$76>>2]|0;
    $83 = ($82|0)==(0|0);
    do {
     if ($83) {
      label = 28;
     } else {
      $84 = HEAP32[$77>>2]|0;
      $85 = HEAP32[$78>>2]|0;
      $86 = (ftCall_ii($84|0,$85)|0);
      $87 = ($86|0)==(0);
      if (!($87)) {
       $88 = HEAP32[$$pre$phiZ2D>>2]|0;
       $89 = ($88|0)==(0);
       if ($89) {
        break L30;
       } else {
        label = 28;
        break;
       }
      }
      $$old = (($$0$i6$i5074) + -48)<<24>>24;
      $$old76 = ($$old&255)<(10);
      if (!($$old76)) {
       break L30;
      }
      $$pre87 = HEAP32[$11>>2]|0;
      $$pre88 = HEAP32[$14>>2]|0;
      $100 = $$pre88;$99 = $$pre87;
     }
    } while(0);
    if ((label|0) == 28) {
     label = 0;
     $90 = HEAP32[$11>>2]|0;
     $91 = HEAP32[$14>>2]|0;
     $92 = ($90>>>0)<($91>>>0);
     $$off$i$i45 = (($$0$i6$i5074) + -48)<<24>>24;
     $93 = ($$off$i$i45&255)<(10);
     $or$cond77 = $92 & $93;
     if ($or$cond77) {
      $100 = $91;$99 = $90;
     } else {
      break;
     }
    }
    $94 = ($$0$i43*10)|0;
    $95 = $$0$i6$i5074 << 24 >> 24;
    $96 = (($94) + -48)|0;
    $97 = (($96) + ($95))|0;
    $98 = ($99>>>0)<($100>>>0);
    if ($98) {
     $101 = ((($99)) + 1|0);
     HEAP32[$11>>2] = $101;
     $102 = HEAP8[$99>>0]|0;
     $$0$i6$i5074$be = $102;
    } else {
     $103 = HEAP32[$$pre$phiZ2D>>2]|0;
     $104 = ($103|0)==(0);
     if ($104) {
      $$0$i6$i5074$be = 0;
     } else {
      $105 = HEAP32[$76>>2]|0;
      $106 = HEAP32[$78>>2]|0;
      $107 = HEAP32[$80>>2]|0;
      $108 = (ftCall_iiii($105|0,$106,$79,$107)|0);
      $109 = ($108|0)==(0);
      if ($109) {
       HEAP32[$$pre$phiZ2D>>2] = 0;
       HEAP8[$79>>0] = 0;
       $$sink$i$i$i48 = $81;$173 = 0;
      } else {
       $110 = (((($0)) + 40|0) + ($108)|0);
       $$pre$i$i47 = HEAP8[$79>>0]|0;
       $$sink$i$i$i48 = $110;$173 = $$pre$i$i47;
      }
      HEAP32[$14>>2] = $$sink$i$i$i48;
      HEAP32[$11>>2] = $81;
      $$0$i6$i5074$be = $173;
     }
    }
    $$0$i43 = $97;$$0$i6$i5074 = $$0$i6$i5074$be;
   }
   HEAP8[$5>>0] = $$0$i6$i5074;
   HEAP32[$spec$select>>2] = $$0$i43;
   _stbi__pnm_skip_whitespace($0,$5);
   $$promoted70 = HEAP8[$5>>0]|0;
   $$0$i53 = 0;$$0$i6$i6071 = $$promoted70;
   L51: while(1) {
    $111 = HEAP32[$76>>2]|0;
    $112 = ($111|0)==(0|0);
    do {
     if ($112) {
      label = 43;
     } else {
      $113 = HEAP32[$77>>2]|0;
      $114 = HEAP32[$78>>2]|0;
      $115 = (ftCall_ii($113|0,$114)|0);
      $116 = ($115|0)==(0);
      if (!($116)) {
       $117 = HEAP32[$$pre$phiZ2D>>2]|0;
       $118 = ($117|0)==(0);
       if ($118) {
        break L51;
       } else {
        label = 43;
        break;
       }
      }
      $$old78 = (($$0$i6$i6071) + -48)<<24>>24;
      $$old79 = ($$old78&255)<(10);
      if (!($$old79)) {
       break L51;
      }
      $$pre85 = HEAP32[$11>>2]|0;
      $$pre86 = HEAP32[$14>>2]|0;
      $128 = $$pre85;$129 = $$pre86;
     }
    } while(0);
    if ((label|0) == 43) {
     label = 0;
     $119 = HEAP32[$11>>2]|0;
     $120 = HEAP32[$14>>2]|0;
     $121 = ($119>>>0)<($120>>>0);
     $$off$i$i55 = (($$0$i6$i6071) + -48)<<24>>24;
     $122 = ($$off$i$i55&255)<(10);
     $or$cond80 = $121 & $122;
     if ($or$cond80) {
      $128 = $119;$129 = $120;
     } else {
      break;
     }
    }
    $123 = ($$0$i53*10)|0;
    $124 = $$0$i6$i6071 << 24 >> 24;
    $125 = (($123) + -48)|0;
    $126 = (($125) + ($124))|0;
    $127 = ($128>>>0)<($129>>>0);
    if ($127) {
     $130 = ((($128)) + 1|0);
     HEAP32[$11>>2] = $130;
     $131 = HEAP8[$128>>0]|0;
     $$0$i6$i6071$be = $131;
    } else {
     $132 = HEAP32[$$pre$phiZ2D>>2]|0;
     $133 = ($132|0)==(0);
     if ($133) {
      $$0$i6$i6071$be = 0;
     } else {
      $134 = HEAP32[$76>>2]|0;
      $135 = HEAP32[$78>>2]|0;
      $136 = HEAP32[$80>>2]|0;
      $137 = (ftCall_iiii($134|0,$135,$79,$136)|0);
      $138 = ($137|0)==(0);
      if ($138) {
       HEAP32[$$pre$phiZ2D>>2] = 0;
       HEAP8[$79>>0] = 0;
       $$sink$i$i$i58 = $81;$174 = 0;
      } else {
       $139 = (((($0)) + 40|0) + ($137)|0);
       $$pre$i$i57 = HEAP8[$79>>0]|0;
       $$sink$i$i$i58 = $139;$174 = $$pre$i$i57;
      }
      HEAP32[$14>>2] = $$sink$i$i$i58;
      HEAP32[$11>>2] = $81;
      $$0$i6$i6071$be = $174;
     }
    }
    $$0$i53 = $126;$$0$i6$i6071 = $$0$i6$i6071$be;
   }
   HEAP8[$5>>0] = $$0$i6$i6071;
   HEAP32[$$024>>2] = $$0$i53;
   _stbi__pnm_skip_whitespace($0,$5);
   $$promoted = HEAP8[$5>>0]|0;
   $$0$i = 0;$$0$i6$i68 = $$promoted;
   L72: while(1) {
    $140 = HEAP32[$76>>2]|0;
    $141 = ($140|0)==(0|0);
    do {
     if ($141) {
      label = 58;
     } else {
      $142 = HEAP32[$77>>2]|0;
      $143 = HEAP32[$78>>2]|0;
      $144 = (ftCall_ii($142|0,$143)|0);
      $145 = ($144|0)==(0);
      if (!($145)) {
       $146 = HEAP32[$$pre$phiZ2D>>2]|0;
       $147 = ($146|0)==(0);
       if ($147) {
        break L72;
       } else {
        label = 58;
        break;
       }
      }
      $$old81 = (($$0$i6$i68) + -48)<<24>>24;
      $$old82 = ($$old81&255)<(10);
      if (!($$old82)) {
       break L72;
      }
      $$pre = HEAP32[$11>>2]|0;
      $$pre84 = HEAP32[$14>>2]|0;
      $157 = $$pre;$158 = $$pre84;
     }
    } while(0);
    if ((label|0) == 58) {
     label = 0;
     $148 = HEAP32[$11>>2]|0;
     $149 = HEAP32[$14>>2]|0;
     $150 = ($148>>>0)<($149>>>0);
     $$off$i$i = (($$0$i6$i68) + -48)<<24>>24;
     $151 = ($$off$i$i&255)<(10);
     $or$cond83 = $150 & $151;
     if ($or$cond83) {
      $157 = $148;$158 = $149;
     } else {
      break;
     }
    }
    $152 = ($$0$i*10)|0;
    $153 = $$0$i6$i68 << 24 >> 24;
    $154 = (($152) + -48)|0;
    $155 = (($154) + ($153))|0;
    $156 = ($157>>>0)<($158>>>0);
    if ($156) {
     $159 = ((($157)) + 1|0);
     HEAP32[$11>>2] = $159;
     $160 = HEAP8[$157>>0]|0;
     $$0$i6$i68$be = $160;
    } else {
     $161 = HEAP32[$$pre$phiZ2D>>2]|0;
     $162 = ($161|0)==(0);
     if ($162) {
      $$0$i6$i68$be = 0;
     } else {
      $163 = HEAP32[$76>>2]|0;
      $164 = HEAP32[$78>>2]|0;
      $165 = HEAP32[$80>>2]|0;
      $166 = (ftCall_iiii($163|0,$164,$79,$165)|0);
      $167 = ($166|0)==(0);
      if ($167) {
       HEAP32[$$pre$phiZ2D>>2] = 0;
       HEAP8[$79>>0] = 0;
       $$sink$i$i$i = $81;$175 = 0;
      } else {
       $168 = (((($0)) + 40|0) + ($166)|0);
       $$pre$i$i = HEAP8[$79>>0]|0;
       $$sink$i$i$i = $168;$175 = $$pre$i$i;
      }
      HEAP32[$14>>2] = $$sink$i$i$i;
      HEAP32[$11>>2] = $81;
      $$0$i6$i68$be = $175;
     }
    }
    $$0$i = $155;$$0$i6$i68 = $$0$i6$i68$be;
   }
   HEAP8[$5>>0] = $$0$i6$i68;
   $169 = ($$0$i|0)>(255);
   $spec$select1 = $169 ? 0 : 1;
   $$0 = $spec$select1;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $53 = HEAP32[$9>>2]|0;
 HEAP32[$11>>2] = $53;
 $54 = HEAP32[$12>>2]|0;
 HEAP32[$14>>2] = $54;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _stbi__hdr_test($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i$i = 0, $$0$i$i$1 = 0, $$0$i$i$2 = 0, $$0$i$i$3 = 0, $$0$i$i$4 = 0, $$0$i$i$5 = 0, $$0$i$i$6 = 0, $$0$i$i14 = 0, $$07$i = 0, $$08$i10 = 0, $$phi$trans$insert = 0, $$phi$trans$insert21 = 0, $$pre = 0, $$pre$i$i = 0, $$pre$i$i$1 = 0, $$pre$i$i$2 = 0, $$pre$i$i$3 = 0, $$pre$i$i$4 = 0, $$pre$i$i$5 = 0;
 var $$pre$i$i$6 = 0, $$pre$i$i11 = 0, $$pre$i8 = 0, $$pre10$i6 = 0, $$pre11$i7 = 0, $$pre23 = 0, $$pre24 = 0, $$pre25 = 0, $$pre9$i9 = 0, $$sink$i$i$i = 0, $$sink$i$i$i$1 = 0, $$sink$i$i$i$2 = 0, $$sink$i$i$i$3 = 0, $$sink$i$i$i$4 = 0, $$sink$i$i$i$5 = 0, $$sink$i$i$i$6 = 0, $$sink$i$i$i12 = 0, $1 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0;
 var $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $$pre10$i6 = ((($0)) + 168|0);
 $$pre11$i7 = ((($0)) + 172|0);
 $1 = ((($0)) + 32|0);
 $2 = ((($0)) + 16|0);
 $3 = ((($0)) + 28|0);
 $4 = ((($0)) + 40|0);
 $5 = ((($0)) + 36|0);
 $6 = ((($0)) + 41|0);
 $$pre$i8 = HEAP32[$$pre10$i6>>2]|0;
 $$pre9$i9 = HEAP32[$$pre11$i7>>2]|0;
 $$08$i10 = 0;$11 = $$pre$i8;$12 = $$pre9$i9;$25 = 139433;
 while(1) {
  $10 = ($11>>>0)<($12>>>0);
  if ($10) {
   $13 = ((($11)) + 1|0);
   HEAP32[$$pre10$i6>>2] = $13;
   $14 = HEAP8[$11>>0]|0;
   $$0$i$i14 = $14;$134 = $12;$135 = $13;
  } else {
   $15 = HEAP32[$1>>2]|0;
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$i$i14 = 0;$134 = $12;$135 = $11;
   } else {
    $17 = HEAP32[$2>>2]|0;
    $18 = HEAP32[$3>>2]|0;
    $19 = HEAP32[$5>>2]|0;
    $20 = (ftCall_iiii($17|0,$18,$4,$19)|0);
    $21 = ($20|0)==(0);
    if ($21) {
     HEAP32[$1>>2] = 0;
     HEAP8[$4>>0] = 0;
     $$sink$i$i$i12 = $6;$136 = 0;
    } else {
     $22 = (((($0)) + 40|0) + ($20)|0);
     $$pre$i$i11 = HEAP8[$4>>0]|0;
     $$sink$i$i$i12 = $22;$136 = $$pre$i$i11;
    }
    HEAP32[$$pre11$i7>>2] = $$sink$i$i$i12;
    HEAP32[$$pre10$i6>>2] = $6;
    $$0$i$i14 = $136;$134 = $$sink$i$i$i12;$135 = $6;
   }
  }
  $23 = $$0$i$i14&255;
  $24 = HEAP8[$25>>0]|0;
  $26 = $24 << 24 >> 24;
  $27 = ($23|0)==($26|0);
  $8 = (($$08$i10) + 1)|0;
  if (!($27)) {
   break;
  }
  $7 = (139433 + ($8)|0);
  $9 = ($8|0)==(11);
  if ($9) {
   label = 11;
   break;
  } else {
   $$08$i10 = $8;$11 = $135;$12 = $134;$25 = $7;
  }
 }
 if ((label|0) == 11) {
  $28 = ((($0)) + 176|0);
  $29 = HEAP32[$28>>2]|0;
  $30 = ((($0)) + 180|0);
  $31 = HEAP32[$30>>2]|0;
  HEAP32[$$pre10$i6>>2] = $29;
  HEAP32[$$pre11$i7>>2] = $31;
  $$0 = 1;
  return ($$0|0);
 }
 $$phi$trans$insert = ((($0)) + 176|0);
 $$pre = HEAP32[$$phi$trans$insert>>2]|0;
 $$phi$trans$insert21 = ((($0)) + 180|0);
 $$pre23 = HEAP32[$$phi$trans$insert21>>2]|0;
 HEAP32[$$pre10$i6>>2] = $$pre;
 HEAP32[$$pre11$i7>>2] = $$pre23;
 $32 = $$pre;
 $33 = $$pre23;
 $34 = ($32>>>0)<($33>>>0);
 if ($34) {
  $38 = ((($32)) + 1|0);
  HEAP32[$$pre10$i6>>2] = $38;
  $39 = HEAP8[$32>>0]|0;
  $$0$i$i = $39;$36 = $38;$37 = $33;
  label = 20;
 } else {
  $40 = HEAP32[$1>>2]|0;
  $41 = ($40|0)==(0);
  if ($41) {
   label = 21;
  } else {
   $42 = HEAP32[$2>>2]|0;
   $43 = HEAP32[$3>>2]|0;
   $44 = HEAP32[$5>>2]|0;
   $45 = (ftCall_iiii($42|0,$43,$4,$44)|0);
   $46 = ($45|0)==(0);
   if ($46) {
    HEAP32[$1>>2] = 0;
    HEAP8[$4>>0] = 0;
    $$sink$i$i$i = $6;$137 = 0;
   } else {
    $47 = (((($0)) + 40|0) + ($45)|0);
    $$pre$i$i = HEAP8[$4>>0]|0;
    $$sink$i$i$i = $47;$137 = $$pre$i$i;
   }
   HEAP32[$$pre11$i7>>2] = $$sink$i$i$i;
   HEAP32[$$pre10$i6>>2] = $6;
   $$0$i$i = $137;$36 = $6;$37 = $$sink$i$i$i;
   label = 20;
  }
 }
 do {
  if ((label|0) == 20) {
   $48 = ($$0$i$i<<24>>24)==(35);
   if ($48) {
    $35 = ($36>>>0)<($37>>>0);
    if ($35) {
     $59 = ((($36)) + 1|0);
     HEAP32[$$pre10$i6>>2] = $59;
     $60 = HEAP8[$36>>0]|0;
     $$0$i$i$1 = $60;$63 = $59;$64 = $37;
    } else {
     $51 = HEAP32[$1>>2]|0;
     $52 = ($51|0)==(0);
     if ($52) {
      label = 21;
      break;
     }
     $53 = HEAP32[$2>>2]|0;
     $54 = HEAP32[$3>>2]|0;
     $55 = HEAP32[$5>>2]|0;
     $56 = (ftCall_iiii($53|0,$54,$4,$55)|0);
     $57 = ($56|0)==(0);
     if ($57) {
      HEAP32[$1>>2] = 0;
      HEAP8[$4>>0] = 0;
      $$sink$i$i$i$1 = $6;$138 = 0;
     } else {
      $58 = (((($0)) + 40|0) + ($56)|0);
      $$pre$i$i$1 = HEAP8[$4>>0]|0;
      $$sink$i$i$i$1 = $58;$138 = $$pre$i$i$1;
     }
     HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$1;
     HEAP32[$$pre10$i6>>2] = $6;
     $$0$i$i$1 = $138;$63 = $6;$64 = $$sink$i$i$i$1;
    }
    $61 = ($$0$i$i$1<<24>>24)==(63);
    if ($61) {
     $62 = ($63>>>0)<($64>>>0);
     if ($62) {
      $73 = ((($63)) + 1|0);
      HEAP32[$$pre10$i6>>2] = $73;
      $74 = HEAP8[$63>>0]|0;
      $$0$i$i$2 = $74;$77 = $73;$78 = $64;
     } else {
      $65 = HEAP32[$1>>2]|0;
      $66 = ($65|0)==(0);
      if ($66) {
       label = 21;
       break;
      }
      $67 = HEAP32[$2>>2]|0;
      $68 = HEAP32[$3>>2]|0;
      $69 = HEAP32[$5>>2]|0;
      $70 = (ftCall_iiii($67|0,$68,$4,$69)|0);
      $71 = ($70|0)==(0);
      if ($71) {
       HEAP32[$1>>2] = 0;
       HEAP8[$4>>0] = 0;
       $$sink$i$i$i$2 = $6;$139 = 0;
      } else {
       $72 = (((($0)) + 40|0) + ($70)|0);
       $$pre$i$i$2 = HEAP8[$4>>0]|0;
       $$sink$i$i$i$2 = $72;$139 = $$pre$i$i$2;
      }
      HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$2;
      HEAP32[$$pre10$i6>>2] = $6;
      $$0$i$i$2 = $139;$77 = $6;$78 = $$sink$i$i$i$2;
     }
     $75 = ($$0$i$i$2<<24>>24)==(82);
     if ($75) {
      $76 = ($77>>>0)<($78>>>0);
      if ($76) {
       $87 = ((($77)) + 1|0);
       HEAP32[$$pre10$i6>>2] = $87;
       $88 = HEAP8[$77>>0]|0;
       $$0$i$i$3 = $88;$91 = $87;$92 = $78;
      } else {
       $79 = HEAP32[$1>>2]|0;
       $80 = ($79|0)==(0);
       if ($80) {
        label = 21;
        break;
       }
       $81 = HEAP32[$2>>2]|0;
       $82 = HEAP32[$3>>2]|0;
       $83 = HEAP32[$5>>2]|0;
       $84 = (ftCall_iiii($81|0,$82,$4,$83)|0);
       $85 = ($84|0)==(0);
       if ($85) {
        HEAP32[$1>>2] = 0;
        HEAP8[$4>>0] = 0;
        $$sink$i$i$i$3 = $6;$140 = 0;
       } else {
        $86 = (((($0)) + 40|0) + ($84)|0);
        $$pre$i$i$3 = HEAP8[$4>>0]|0;
        $$sink$i$i$i$3 = $86;$140 = $$pre$i$i$3;
       }
       HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$3;
       HEAP32[$$pre10$i6>>2] = $6;
       $$0$i$i$3 = $140;$91 = $6;$92 = $$sink$i$i$i$3;
      }
      $89 = ($$0$i$i$3<<24>>24)==(71);
      if ($89) {
       $90 = ($91>>>0)<($92>>>0);
       if ($90) {
        $101 = ((($91)) + 1|0);
        HEAP32[$$pre10$i6>>2] = $101;
        $102 = HEAP8[$91>>0]|0;
        $$0$i$i$4 = $102;$105 = $101;$106 = $92;
       } else {
        $93 = HEAP32[$1>>2]|0;
        $94 = ($93|0)==(0);
        if ($94) {
         label = 21;
         break;
        }
        $95 = HEAP32[$2>>2]|0;
        $96 = HEAP32[$3>>2]|0;
        $97 = HEAP32[$5>>2]|0;
        $98 = (ftCall_iiii($95|0,$96,$4,$97)|0);
        $99 = ($98|0)==(0);
        if ($99) {
         HEAP32[$1>>2] = 0;
         HEAP8[$4>>0] = 0;
         $$sink$i$i$i$4 = $6;$141 = 0;
        } else {
         $100 = (((($0)) + 40|0) + ($98)|0);
         $$pre$i$i$4 = HEAP8[$4>>0]|0;
         $$sink$i$i$i$4 = $100;$141 = $$pre$i$i$4;
        }
        HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$4;
        HEAP32[$$pre10$i6>>2] = $6;
        $$0$i$i$4 = $141;$105 = $6;$106 = $$sink$i$i$i$4;
       }
       $103 = ($$0$i$i$4<<24>>24)==(66);
       if ($103) {
        $104 = ($105>>>0)<($106>>>0);
        if ($104) {
         $115 = ((($105)) + 1|0);
         HEAP32[$$pre10$i6>>2] = $115;
         $116 = HEAP8[$105>>0]|0;
         $$0$i$i$5 = $116;$119 = $115;$120 = $106;
        } else {
         $107 = HEAP32[$1>>2]|0;
         $108 = ($107|0)==(0);
         if ($108) {
          label = 21;
          break;
         }
         $109 = HEAP32[$2>>2]|0;
         $110 = HEAP32[$3>>2]|0;
         $111 = HEAP32[$5>>2]|0;
         $112 = (ftCall_iiii($109|0,$110,$4,$111)|0);
         $113 = ($112|0)==(0);
         if ($113) {
          HEAP32[$1>>2] = 0;
          HEAP8[$4>>0] = 0;
          $$sink$i$i$i$5 = $6;$142 = 0;
         } else {
          $114 = (((($0)) + 40|0) + ($112)|0);
          $$pre$i$i$5 = HEAP8[$4>>0]|0;
          $$sink$i$i$i$5 = $114;$142 = $$pre$i$i$5;
         }
         HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$5;
         HEAP32[$$pre10$i6>>2] = $6;
         $$0$i$i$5 = $142;$119 = $6;$120 = $$sink$i$i$i$5;
        }
        $117 = ($$0$i$i$5<<24>>24)==(69);
        if ($117) {
         $118 = ($119>>>0)<($120>>>0);
         if ($118) {
          $129 = ((($119)) + 1|0);
          HEAP32[$$pre10$i6>>2] = $129;
          $130 = HEAP8[$119>>0]|0;
          $$0$i$i$6 = $130;
         } else {
          $121 = HEAP32[$1>>2]|0;
          $122 = ($121|0)==(0);
          if ($122) {
           label = 21;
           break;
          }
          $123 = HEAP32[$2>>2]|0;
          $124 = HEAP32[$3>>2]|0;
          $125 = HEAP32[$5>>2]|0;
          $126 = (ftCall_iiii($123|0,$124,$4,$125)|0);
          $127 = ($126|0)==(0);
          if ($127) {
           HEAP32[$1>>2] = 0;
           HEAP8[$4>>0] = 0;
           $$sink$i$i$i$6 = $6;$143 = 0;
          } else {
           $128 = (((($0)) + 40|0) + ($126)|0);
           $$pre$i$i$6 = HEAP8[$4>>0]|0;
           $$sink$i$i$i$6 = $128;$143 = $$pre$i$i$6;
          }
          HEAP32[$$pre11$i7>>2] = $$sink$i$i$i$6;
          HEAP32[$$pre10$i6>>2] = $6;
          $$0$i$i$6 = $143;
         }
         $131 = ($$0$i$i$6<<24>>24)==(10);
         if ($131) {
          $132 = HEAP32[$$phi$trans$insert>>2]|0;
          HEAP32[$$pre10$i6>>2] = $132;
          $133 = HEAP32[$$phi$trans$insert21>>2]|0;
          HEAP32[$$pre11$i7>>2] = $133;
          $$07$i = 1;$49 = $132;$50 = $133;
         } else {
          label = 21;
         }
        } else {
         label = 21;
        }
       } else {
        label = 21;
       }
      } else {
       label = 21;
      }
     } else {
      label = 21;
     }
    } else {
     label = 21;
    }
   } else {
    label = 21;
   }
  }
 } while(0);
 if ((label|0) == 21) {
  $$pre24 = HEAP32[$$phi$trans$insert>>2]|0;
  $$pre25 = HEAP32[$$phi$trans$insert21>>2]|0;
  $$07$i = 0;$49 = $$pre24;$50 = $$pre25;
 }
 HEAP32[$$pre10$i6>>2] = $49;
 HEAP32[$$pre11$i7>>2] = $50;
 $$0 = $$07$i;
 return ($$0|0);
}
function _stbi__hdr_load($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$i = 0, $$0$i16 = 0, $$0$i24 = 0, $$0$i35 = 0, $$0$i42 = 0, $$0$i49 = 0, $$0$i56 = 0, $$0$i9 = 0, $$0140101 = 0, $$0142124 = 0, $$0144114 = 0, $$0146107 = 0, $$0147 = 0, $$0151 = 0, $$114199 = 0, $$1145 = 0, $$1148 = 0, $$1152 = 0, $$2149 = 0, $$2153104 = 0;
 var $$3 = 0, $$3150113 = 0, $$3154100 = 0, $$498 = 0, $$5 = 0, $$6109 = 0, $$6109$us = 0, $$lcssa97 = 0, $$off = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert35$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i11 = 0, $$pre$i19 = 0, $$pre$i27 = 0, $$pre$i30 = 0, $$pre$i37 = 0, $$pre$i4 = 0, $$pre$i44 = 0;
 var $$pre$i51 = 0, $$pre$phi$i28Z2D = 0, $$pre$phiZ2D = 0, $$pre166 = 0, $$pre168 = 0, $$pre36$i = 0, $$sink$i$i = 0, $$sink$i$i14 = 0, $$sink$i$i22 = 0, $$sink$i$i33 = 0, $$sink$i$i40 = 0, $$sink$i$i47 = 0, $$sink$i$i54 = 0, $$sink$i$i7 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0;
 var $105 = Math_fround(0), $106 = Math_fround(0), $107 = Math_fround(0), $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = 0, $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = 0, $115 = 0, $116 = 0, $117 = Math_fround(0), $118 = Math_fround(0), $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0;
 var $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0;
 var $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0;
 var $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0;
 var $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0;
 var $196 = 0, $197 = 0, $198 = 0, $199 = 0.0, $20 = 0, $200 = Math_fround(0), $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = Math_fround(0), $206 = Math_fround(0), $207 = Math_fround(0), $208 = Math_fround(0), $209 = Math_fround(0), $21 = 0, $210 = Math_fround(0), $211 = Math_fround(0), $212 = 0, $213 = Math_fround(0);
 var $214 = Math_fround(0), $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0;
 var $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0;
 var $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0;
 var $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0;
 var $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0.0, $317 = Math_fround(0), $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = Math_fround(0), $329 = Math_fround(0), $33 = 0, $330 = Math_fround(0), $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0.0, $349 = Math_fround(0), $35 = 0, $350 = 0, $351 = Math_fround(0), $352 = Math_fround(0), $353 = 0, $354 = 0, $355 = Math_fround(0), $356 = Math_fround(0), $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = Math_fround(0), $361 = Math_fround(0), $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0;
 var $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0;
 var $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0;
 var $9 = 0, $90 = 0, $91 = 0, $92 = 0.0, $93 = Math_fround(0), $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond163 = 0, $exitcond164 = 0, $exitcond165 = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond62 = 0, $spec$select = 0, $spec$select1 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1040|0;
 $5 = sp;
 $6 = sp + 1028|0;
 $7 = sp + 1024|0;
 $8 = (_stbi__hdr_gettoken($0,$5)|0);
 $9 = (_strcmp($8,139384)|0);
 $10 = ($9|0)==(0);
 if (!($10)) {
  $11 = (_strcmp($8,139395)|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $13 = (_stbi__hdr_gettoken($0,$5)|0);
 HEAP32[$6>>2] = $13;
 $14 = HEAP8[$13>>0]|0;
 $15 = ($14<<24>>24)==(0);
 if ($15) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $$0142124 = 0;$16 = $5;
 while(1) {
  $17 = (_strcmp($16,139402)|0);
  $18 = ($17|0)==(0);
  $spec$select = $18 ? 1 : $$0142124;
  $19 = (_stbi__hdr_gettoken($0,$5)|0);
  $20 = HEAP8[$19>>0]|0;
  $21 = ($20<<24>>24)==(0);
  if ($21) {
   break;
  } else {
   $$0142124 = $spec$select;$16 = $5;
  }
 }
 HEAP32[$6>>2] = $19;
 $22 = ($spec$select|0)==(0);
 if ($22) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $23 = (_stbi__hdr_gettoken($0,$5)|0);
 HEAP32[$6>>2] = $23;
 $24 = (_strncmp($23,139425,3)|0);
 $25 = ($24|0)==(0);
 if (!($25)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $26 = ((($5)) + 3|0);
 HEAP32[$6>>2] = $26;
 $27 = (_strtol($26,$6,10)|0);
 $28 = HEAP32[$6>>2]|0;
 $29 = HEAP8[$28>>0]|0;
 $30 = ($29<<24>>24)==(32);
 if ($30) {
  $32 = $28;
  while(1) {
   $31 = ((($32)) + 1|0);
   $33 = HEAP8[$31>>0]|0;
   $34 = ($33<<24>>24)==(32);
   if ($34) {
    $32 = $31;
   } else {
    break;
   }
  }
  HEAP32[$6>>2] = $31;
  $$lcssa97 = $31;
 } else {
  $$lcssa97 = $28;
 }
 $35 = (_strncmp($$lcssa97,139429,3)|0);
 $36 = ($35|0)==(0);
 if (!($36)) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $37 = ((($$lcssa97)) + 3|0);
 HEAP32[$6>>2] = $37;
 $38 = (_strtol($37,0,10)|0);
 HEAP32[$1>>2] = $38;
 HEAP32[$2>>2] = $27;
 $39 = ($3|0)==(0|0);
 if (!($39)) {
  HEAP32[$3>>2] = 3;
 }
 $40 = ($4|0)==(0);
 $spec$select1 = $40 ? 3 : $4;
 $41 = $38 | $27;
 $42 = ($41|0)<(0);
 if ($42) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $43 = ($27|0)==(0);
 if (!($43)) {
  $44 = (2147483647 / ($27|0))&-1;
  $45 = ($44|0)<($38|0);
  if ($45) {
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $46 = Math_imul($38, $27)|0;
 $47 = $46 | $spec$select1;
 $48 = ($47|0)<(0);
 if ($48) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $49 = (2147483647 / ($spec$select1|0))&-1;
 $50 = ($49|0)<($46|0);
 $51 = Math_imul($46, $spec$select1)|0;
 $52 = ($51>>>0)>(536870911);
 $or$cond62 = $52 | $50;
 if ($or$cond62) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 if (!($43)) {
  $53 = (2147483647 / ($27|0))&-1;
  $54 = ($53|0)<($38|0);
  if ($54) {
   $$3 = 0;
   STACKTOP = sp;return ($$3|0);
  }
 }
 $55 = $spec$select1 << 2;
 $56 = Math_imul($55, $46)|0;
 $57 = (_malloc($56)|0);
 $58 = ($57|0)==(0|0);
 if ($58) {
  $$3 = 0;
  STACKTOP = sp;return ($$3|0);
 }
 $$off = (($38) + -8)|0;
 $59 = ($$off>>>0)>(32759);
 do {
  if ($59) {
   $$0147 = 0;
   label = 24;
  } else {
   $128 = ($27|0)>(0);
   if (!($128)) {
    $$3 = $57;
    STACKTOP = sp;return ($$3|0);
   }
   $129 = ((($0)) + 168|0);
   $130 = ((($0)) + 172|0);
   $131 = ((($0)) + 32|0);
   $132 = ((($0)) + 16|0);
   $133 = ((($0)) + 28|0);
   $134 = ((($0)) + 40|0);
   $135 = ((($0)) + 36|0);
   $136 = ((($0)) + 41|0);
   $137 = $38 << 2;
   $138 = ($spec$select1|0)<(3);
   $$0144114 = 0;$$3150113 = 0;
   L54: while(1) {
    $139 = HEAP32[$129>>2]|0;
    $140 = HEAP32[$130>>2]|0;
    $141 = ($139>>>0)<($140>>>0);
    if ($141) {
     $142 = ((($139)) + 1|0);
     HEAP32[$129>>2] = $142;
     $143 = HEAP8[$139>>0]|0;
     $$0$i35 = $143;$153 = $142;$154 = $140;
    } else {
     $144 = HEAP32[$131>>2]|0;
     $145 = ($144|0)==(0);
     if ($145) {
      $$0$i35 = 0;$153 = $139;$154 = $140;
     } else {
      $146 = HEAP32[$132>>2]|0;
      $147 = HEAP32[$133>>2]|0;
      $148 = HEAP32[$135>>2]|0;
      $149 = (ftCall_iiii($146|0,$147,$134,$148)|0);
      $150 = ($149|0)==(0);
      if ($150) {
       HEAP32[$131>>2] = 0;
       HEAP8[$134>>0] = 0;
       $$sink$i$i33 = $136;$372 = 0;
      } else {
       $151 = (((($0)) + 40|0) + ($149)|0);
       $$pre$i30 = HEAP8[$134>>0]|0;
       $$sink$i$i33 = $151;$372 = $$pre$i30;
      }
      HEAP32[$130>>2] = $$sink$i$i33;
      HEAP32[$129>>2] = $136;
      $$0$i35 = $372;$153 = $136;$154 = $$sink$i$i33;
     }
    }
    $152 = ($153>>>0)<($154>>>0);
    do {
     if ($152) {
      $155 = ((($153)) + 1|0);
      HEAP32[$129>>2] = $155;
      $156 = HEAP8[$153>>0]|0;
      $$0$i42 = $156;$166 = $155;$167 = $154;
     } else {
      $157 = HEAP32[$131>>2]|0;
      $158 = ($157|0)==(0);
      if ($158) {
       $$0$i42 = 0;$166 = $153;$167 = $154;
       break;
      }
      $159 = HEAP32[$132>>2]|0;
      $160 = HEAP32[$133>>2]|0;
      $161 = HEAP32[$135>>2]|0;
      $162 = (ftCall_iiii($159|0,$160,$134,$161)|0);
      $163 = ($162|0)==(0);
      if ($163) {
       HEAP32[$131>>2] = 0;
       HEAP8[$134>>0] = 0;
       $$sink$i$i40 = $136;$373 = 0;
      } else {
       $164 = (((($0)) + 40|0) + ($162)|0);
       $$pre$i37 = HEAP8[$134>>0]|0;
       $$sink$i$i40 = $164;$373 = $$pre$i37;
      }
      HEAP32[$130>>2] = $$sink$i$i40;
      HEAP32[$129>>2] = $136;
      $$0$i42 = $373;$166 = $136;$167 = $$sink$i$i40;
     }
    } while(0);
    $165 = ($166>>>0)<($167>>>0);
    do {
     if ($165) {
      $168 = ((($166)) + 1|0);
      HEAP32[$129>>2] = $168;
      $169 = HEAP8[$166>>0]|0;
      $$0$i49 = $169;$184 = $168;$185 = $167;
     } else {
      $170 = HEAP32[$131>>2]|0;
      $171 = ($170|0)==(0);
      if ($171) {
       $$0$i49 = 0;$184 = $166;$185 = $167;
       break;
      }
      $172 = HEAP32[$132>>2]|0;
      $173 = HEAP32[$133>>2]|0;
      $174 = HEAP32[$135>>2]|0;
      $175 = (ftCall_iiii($172|0,$173,$134,$174)|0);
      $176 = ($175|0)==(0);
      if ($176) {
       HEAP32[$131>>2] = 0;
       HEAP8[$134>>0] = 0;
       $$sink$i$i47 = $136;$374 = 0;
      } else {
       $177 = (((($0)) + 40|0) + ($175)|0);
       $$pre$i44 = HEAP8[$134>>0]|0;
       $$sink$i$i47 = $177;$374 = $$pre$i44;
      }
      HEAP32[$130>>2] = $$sink$i$i47;
      HEAP32[$129>>2] = $136;
      $$0$i49 = $374;$184 = $136;$185 = $$sink$i$i47;
     }
    } while(0);
    $178 = $$0$i49&255;
    $179 = ($$0$i35<<24>>24)==(2);
    $180 = ($$0$i42<<24>>24)==(2);
    $or$cond3$not = $179 & $180;
    $181 = $178 & 128;
    $182 = ($181|0)==(0);
    $or$cond = $or$cond3$not & $182;
    if (!($or$cond)) {
     label = 71;
     break;
    }
    $222 = $178 << 8;
    $223 = ($184>>>0)<($185>>>0);
    do {
     if ($223) {
      $224 = ((($184)) + 1|0);
      HEAP32[$129>>2] = $224;
      $225 = HEAP8[$184>>0]|0;
      $$0$i24 = $225;
     } else {
      $226 = HEAP32[$131>>2]|0;
      $227 = ($226|0)==(0);
      if ($227) {
       $$0$i24 = 0;
       break;
      }
      $228 = HEAP32[$132>>2]|0;
      $229 = HEAP32[$133>>2]|0;
      $230 = HEAP32[$135>>2]|0;
      $231 = (ftCall_iiii($228|0,$229,$134,$230)|0);
      $232 = ($231|0)==(0);
      if ($232) {
       HEAP32[$131>>2] = 0;
       HEAP8[$134>>0] = 0;
       $$sink$i$i22 = $136;$376 = 0;
      } else {
       $233 = (((($0)) + 40|0) + ($231)|0);
       $$pre$i19 = HEAP8[$134>>0]|0;
       $$sink$i$i22 = $233;$376 = $$pre$i19;
      }
      HEAP32[$130>>2] = $$sink$i$i22;
      HEAP32[$129>>2] = $136;
      $$0$i24 = $376;
     }
    } while(0);
    $234 = $$0$i24&255;
    $235 = $222 | $234;
    $236 = ($235|0)==($38|0);
    if (!($236)) {
     label = 99;
     break;
    }
    $237 = ($$0144114|0)==(0|0);
    if ($237) {
     $238 = (_malloc($137)|0);
     $239 = ($238|0)==(0|0);
     if ($239) {
      label = 102;
      break;
     } else {
      $$1145 = $238;
     }
    } else {
     $$1145 = $$0144114;
    }
    $$0146107 = 0;
    while(1) {
     $$2153104 = 0;$271 = $38;
     while(1) {
      $240 = HEAP32[$129>>2]|0;
      $241 = HEAP32[$130>>2]|0;
      $242 = ($240>>>0)<($241>>>0);
      do {
       if ($242) {
        $243 = ((($240)) + 1|0);
        HEAP32[$129>>2] = $243;
        $244 = HEAP8[$240>>0]|0;
        $$0$i16 = $244;$256 = $243;$257 = $241;
        label = 112;
       } else {
        $245 = HEAP32[$131>>2]|0;
        $246 = ($245|0)==(0);
        if ($246) {
         $279 = 0;$377 = $241;$378 = $240;
         label = 125;
         break;
        }
        $247 = HEAP32[$132>>2]|0;
        $248 = HEAP32[$133>>2]|0;
        $249 = HEAP32[$135>>2]|0;
        $250 = (ftCall_iiii($247|0,$248,$134,$249)|0);
        $251 = ($250|0)==(0);
        if ($251) {
         HEAP32[$131>>2] = 0;
         HEAP8[$134>>0] = 0;
         $$sink$i$i14 = $136;$379 = 0;
        } else {
         $252 = (((($0)) + 40|0) + ($250)|0);
         $$pre$i11 = HEAP8[$134>>0]|0;
         $$sink$i$i14 = $252;$379 = $$pre$i11;
        }
        HEAP32[$130>>2] = $$sink$i$i14;
        HEAP32[$129>>2] = $136;
        $$0$i16 = $379;$256 = $136;$257 = $$sink$i$i14;
        label = 112;
       }
      } while(0);
      do {
       if ((label|0) == 112) {
        label = 0;
        $253 = $$0$i16&255;
        $254 = ($$0$i16&255)>(128);
        if (!($254)) {
         $279 = $253;$377 = $257;$378 = $256;
         label = 125;
         break;
        }
        $255 = ($256>>>0)<($257>>>0);
        do {
         if ($255) {
          $258 = ((($256)) + 1|0);
          HEAP32[$129>>2] = $258;
          $259 = HEAP8[$256>>0]|0;
          $$0$i9 = $259;
         } else {
          $260 = HEAP32[$131>>2]|0;
          $261 = ($260|0)==(0);
          if ($261) {
           $$0$i9 = 0;
           break;
          }
          $262 = HEAP32[$132>>2]|0;
          $263 = HEAP32[$133>>2]|0;
          $264 = HEAP32[$135>>2]|0;
          $265 = (ftCall_iiii($262|0,$263,$134,$264)|0);
          $266 = ($265|0)==(0);
          if ($266) {
           HEAP32[$131>>2] = 0;
           HEAP8[$134>>0] = 0;
           $$sink$i$i7 = $136;$380 = 0;
          } else {
           $267 = (((($0)) + 40|0) + ($265)|0);
           $$pre$i4 = HEAP8[$134>>0]|0;
           $$sink$i$i7 = $267;$380 = $$pre$i4;
          }
          HEAP32[$130>>2] = $$sink$i$i7;
          HEAP32[$129>>2] = $136;
          $$0$i9 = $380;
         }
        } while(0);
        $268 = $$0$i16 ^ -128;
        $269 = $268&255;
        $270 = ($271|0)<($269|0);
        if ($270) {
         label = 121;
         break L54;
        }
        $272 = ($268<<24>>24)==(0);
        if ($272) {
         $$5 = $$2153104;
         break;
        }
        $$0140101 = 0;$$3154100 = $$2153104;
        while(1) {
         $273 = (($$3154100) + 1)|0;
         $274 = $$3154100 << 2;
         $275 = (($274) + ($$0146107))|0;
         $276 = (($$1145) + ($275)|0);
         HEAP8[$276>>0] = $$0$i9;
         $277 = (($$0140101) + 1)|0;
         $exitcond163 = ($277|0)==($269|0);
         if ($exitcond163) {
          break;
         } else {
          $$0140101 = $277;$$3154100 = $273;
         }
        }
        $299 = (($$2153104) + ($269))|0;
        $$5 = $299;
       }
      } while(0);
      do {
       if ((label|0) == 125) {
        label = 0;
        $278 = ($271|0)<($279|0);
        if ($278) {
         label = 126;
         break L54;
        }
        $280 = ($279|0)==(0);
        if ($280) {
         $$5 = $$2153104;
         break;
        }
        $$114199 = 0;$$498 = $$2153104;$282 = $378;$283 = $377;
        while(1) {
         $281 = ($282>>>0)<($283>>>0);
         do {
          if ($281) {
           $284 = ((($282)) + 1|0);
           HEAP32[$129>>2] = $284;
           $285 = HEAP8[$282>>0]|0;
           $$0$i = $285;
          } else {
           $286 = HEAP32[$131>>2]|0;
           $287 = ($286|0)==(0);
           if ($287) {
            $$0$i = 0;
            break;
           }
           $288 = HEAP32[$132>>2]|0;
           $289 = HEAP32[$133>>2]|0;
           $290 = HEAP32[$135>>2]|0;
           $291 = (ftCall_iiii($288|0,$289,$134,$290)|0);
           $292 = ($291|0)==(0);
           if ($292) {
            HEAP32[$131>>2] = 0;
            HEAP8[$134>>0] = 0;
            $$sink$i$i = $136;$381 = 0;
           } else {
            $293 = (((($0)) + 40|0) + ($291)|0);
            $$pre$i = HEAP8[$134>>0]|0;
            $$sink$i$i = $293;$381 = $$pre$i;
           }
           HEAP32[$130>>2] = $$sink$i$i;
           HEAP32[$129>>2] = $136;
           $$0$i = $381;
          }
         } while(0);
         $294 = $$498 << 2;
         $295 = (($294) + ($$0146107))|0;
         $296 = (($$1145) + ($295)|0);
         HEAP8[$296>>0] = $$0$i;
         $297 = (($$114199) + 1)|0;
         $exitcond = ($297|0)==($279|0);
         if ($exitcond) {
          break;
         }
         $298 = (($$498) + 1)|0;
         $$pre = HEAP32[$129>>2]|0;
         $$pre166 = HEAP32[$130>>2]|0;
         $$114199 = $297;$$498 = $298;$282 = $$pre;$283 = $$pre166;
        }
        $300 = (($279) + ($$2153104))|0;
        $$5 = $300;
       }
      } while(0);
      $301 = (($38) - ($$5))|0;
      $302 = ($301|0)>(0);
      if ($302) {
       $$2153104 = $$5;$271 = $301;
      } else {
       break;
      }
     }
     $303 = (($$0146107) + 1)|0;
     $304 = ($303>>>0)<(4);
     if ($304) {
      $$0146107 = $303;
     } else {
      break;
     }
    }
    $305 = Math_imul($$3150113, $38)|0;
    if ($138) {
     $$6109$us = 0;
     while(1) {
      $306 = (($$6109$us) + ($305))|0;
      $307 = Math_imul($306, $spec$select1)|0;
      $308 = (($57) + ($307<<2)|0);
      $309 = $$6109$us << 2;
      $310 = (($$1145) + ($309)|0);
      $311 = ((($310)) + 3|0);
      $312 = HEAP8[$311>>0]|0;
      $313 = ($312<<24>>24)==(0);
      L150: do {
       if ($313) {
        switch ($spec$select1|0) {
        case 4:  {
         $334 = ((($308)) + 12|0);
         HEAPF32[$334>>2] = Math_fround(1.0);
         label = 153;
         break;
        }
        case 3:  {
         label = 153;
         break;
        }
        case 2:  {
         $333 = ((($308)) + 4|0);
         HEAPF32[$333>>2] = Math_fround(1.0);
         label = 151;
         break;
        }
        case 1:  {
         label = 151;
         break;
        }
        default: {
         break L150;
        }
        }
        if ((label|0) == 151) {
         label = 0;
         HEAPF32[$308>>2] = Math_fround(0.0);
         break;
        }
        else if ((label|0) == 153) {
         label = 0;
         $335 = ((($308)) + 8|0);
         HEAPF32[$335>>2] = Math_fround(0.0);
         $336 = ((($308)) + 4|0);
         HEAPF32[$336>>2] = Math_fround(0.0);
         HEAPF32[$308>>2] = Math_fround(0.0);
         break;
        }
       } else {
        $314 = $312&255;
        $315 = (($314) + -136)|0;
        $316 = (+_ldexp(1.0,$315));
        $317 = Math_fround($316);
        $318 = HEAP8[$310>>0]|0;
        $319 = $318&255;
        $320 = ((($310)) + 1|0);
        $321 = HEAP8[$320>>0]|0;
        $322 = $321&255;
        $323 = (($322) + ($319))|0;
        $324 = ((($310)) + 2|0);
        $325 = HEAP8[$324>>0]|0;
        $326 = $325&255;
        $327 = (($323) + ($326))|0;
        $328 = (Math_fround(($327|0)));
        $329 = Math_fround($317 * $328);
        $330 = Math_fround($329 / Math_fround(3.0));
        HEAPF32[$308>>2] = $330;
        switch ($spec$select1|0) {
        case 2:  {
         $332 = ((($308)) + 4|0);
         HEAPF32[$332>>2] = Math_fround(1.0);
         break L150;
         break;
        }
        case 4:  {
         $331 = ((($308)) + 12|0);
         HEAPF32[$331>>2] = Math_fround(1.0);
         break L150;
         break;
        }
        default: {
         break L150;
        }
        }
       }
      } while(0);
      $337 = (($$6109$us) + 1)|0;
      $exitcond165 = ($337|0)==($38|0);
      if ($exitcond165) {
       break;
      } else {
       $$6109$us = $337;
      }
     }
    } else {
     $$6109 = 0;
     while(1) {
      $338 = (($$6109) + ($305))|0;
      $339 = Math_imul($338, $spec$select1)|0;
      $340 = (($57) + ($339<<2)|0);
      $341 = $$6109 << 2;
      $342 = (($$1145) + ($341)|0);
      $343 = ((($342)) + 3|0);
      $344 = HEAP8[$343>>0]|0;
      $345 = ($344<<24>>24)==(0);
      L166: do {
       if ($345) {
        switch ($spec$select1|0) {
        case 4:  {
         $364 = ((($340)) + 12|0);
         HEAPF32[$364>>2] = Math_fround(1.0);
         label = 161;
         break;
        }
        case 3:  {
         label = 161;
         break;
        }
        case 2:  {
         $367 = ((($340)) + 4|0);
         HEAPF32[$367>>2] = Math_fround(1.0);
         label = 163;
         break;
        }
        case 1:  {
         label = 163;
         break;
        }
        default: {
         break L166;
        }
        }
        if ((label|0) == 161) {
         label = 0;
         $365 = ((($340)) + 8|0);
         HEAPF32[$365>>2] = Math_fround(0.0);
         $366 = ((($340)) + 4|0);
         HEAPF32[$366>>2] = Math_fround(0.0);
         HEAPF32[$340>>2] = Math_fround(0.0);
         break;
        }
        else if ((label|0) == 163) {
         label = 0;
         HEAPF32[$340>>2] = Math_fround(0.0);
         break;
        }
       } else {
        $346 = $344&255;
        $347 = (($346) + -136)|0;
        $348 = (+_ldexp(1.0,$347));
        $349 = Math_fround($348);
        $350 = HEAP8[$342>>0]|0;
        $351 = (Math_fround(($350&255)));
        $352 = Math_fround($349 * $351);
        HEAPF32[$340>>2] = $352;
        $353 = ((($342)) + 1|0);
        $354 = HEAP8[$353>>0]|0;
        $355 = (Math_fround(($354&255)));
        $356 = Math_fround($349 * $355);
        $357 = ((($340)) + 4|0);
        HEAPF32[$357>>2] = $356;
        $358 = ((($342)) + 2|0);
        $359 = HEAP8[$358>>0]|0;
        $360 = (Math_fround(($359&255)));
        $361 = Math_fround($349 * $360);
        $362 = ((($340)) + 8|0);
        HEAPF32[$362>>2] = $361;
        switch ($spec$select1|0) {
        case 2:  {
         HEAPF32[$357>>2] = Math_fround(1.0);
         break L166;
         break;
        }
        case 4:  {
         $363 = ((($340)) + 12|0);
         HEAPF32[$363>>2] = Math_fround(1.0);
         break L166;
         break;
        }
        default: {
         break L166;
        }
        }
       }
      } while(0);
      $368 = (($$6109) + 1)|0;
      $exitcond164 = ($368|0)==($38|0);
      if ($exitcond164) {
       break;
      } else {
       $$6109 = $368;
      }
     }
    }
    $369 = (($$3150113) + 1)|0;
    $370 = ($369|0)<($27|0);
    if ($370) {
     $$0144114 = $$1145;$$3150113 = $369;
    } else {
     label = 166;
     break;
    }
   }
   if ((label|0) == 71) {
    $183 = ($184>>>0)<($185>>>0);
    if ($183) {
     $186 = ((($184)) + 1|0);
     HEAP32[$129>>2] = $186;
     $187 = HEAP8[$184>>0]|0;
     $$0$i56 = $187;
     label = 78;
    } else {
     $188 = HEAP32[$131>>2]|0;
     $189 = ($188|0)==(0);
     if ($189) {
      label = 85;
     } else {
      $190 = HEAP32[$132>>2]|0;
      $191 = HEAP32[$133>>2]|0;
      $192 = HEAP32[$135>>2]|0;
      $193 = (ftCall_iiii($190|0,$191,$134,$192)|0);
      $194 = ($193|0)==(0);
      if ($194) {
       HEAP32[$131>>2] = 0;
       HEAP8[$134>>0] = 0;
       $$sink$i$i54 = $136;$375 = 0;
      } else {
       $195 = (((($0)) + 40|0) + ($193)|0);
       $$pre$i51 = HEAP8[$134>>0]|0;
       $$sink$i$i54 = $195;$375 = $$pre$i51;
      }
      HEAP32[$130>>2] = $$sink$i$i54;
      HEAP32[$129>>2] = $136;
      $$0$i56 = $375;
      label = 78;
     }
    }
    L203: do {
     if ((label|0) == 78) {
      $196 = ($$0$i56<<24>>24)==(0);
      if ($196) {
       label = 85;
      } else {
       $197 = $$0$i56&255;
       $198 = (($197) + -136)|0;
       $199 = (+_ldexp(1.0,$198));
       $200 = Math_fround($199);
       if ($138) {
        $201 = $$0$i35&255;
        $202 = $$0$i42&255;
        $203 = (($202) + ($201))|0;
        $204 = (($203) + ($178))|0;
        $205 = (Math_fround(($204|0)));
        $206 = Math_fround($205 * $200);
        $207 = Math_fround($206 / Math_fround(3.0));
        HEAPF32[$57>>2] = $207;
       } else {
        $208 = (Math_fround(($$0$i35&255)));
        $209 = Math_fround($208 * $200);
        HEAPF32[$57>>2] = $209;
        $210 = (Math_fround(($$0$i42&255)));
        $211 = Math_fround($210 * $200);
        $212 = ((($57)) + 4|0);
        HEAPF32[$212>>2] = $211;
        $213 = (Math_fround(($$0$i49&255)));
        $214 = Math_fround($213 * $200);
        $215 = ((($57)) + 8|0);
        HEAPF32[$215>>2] = $214;
       }
       switch ($spec$select1|0) {
       case 2:  {
        $216 = ((($57)) + 4|0);
        HEAPF32[$216>>2] = Math_fround(1.0);
        break L203;
        break;
       }
       case 4:  {
        $217 = ((($57)) + 12|0);
        HEAPF32[$217>>2] = Math_fround(1.0);
        break L203;
        break;
       }
       default: {
        break L203;
       }
       }
      }
     }
    } while(0);
    L213: do {
     if ((label|0) == 85) {
      switch ($spec$select1|0) {
      case 4:  {
       $218 = ((($57)) + 12|0);
       HEAPF32[$218>>2] = Math_fround(1.0);
       label = 87;
       break;
      }
      case 3:  {
       label = 87;
       break;
      }
      case 2:  {
       $221 = ((($57)) + 4|0);
       HEAPF32[$221>>2] = Math_fround(1.0);
       label = 89;
       break;
      }
      case 1:  {
       label = 89;
       break;
      }
      default: {
       break L213;
      }
      }
      if ((label|0) == 87) {
       $219 = ((($57)) + 8|0);
       HEAPF32[$219>>2] = Math_fround(0.0);
       $220 = ((($57)) + 4|0);
       HEAPF32[$220>>2] = Math_fround(0.0);
       HEAPF32[$57>>2] = Math_fround(0.0);
       break;
      }
      else if ((label|0) == 89) {
       HEAPF32[$57>>2] = Math_fround(0.0);
       break;
      }
     }
    } while(0);
    _free($$0144114);
    $$1152 = 1;$$2149 = 0;$$pre$phiZ2D = $132;
    label = 27;
    break;
   }
   else if ((label|0) == 99) {
    _free($57);
    _free($$0144114);
    $$3 = 0;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 102) {
    _free($57);
    $$3 = 0;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 121) {
    _free($57);
    _free($$1145);
    $$3 = 0;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 126) {
    _free($57);
    _free($$1145);
    $$3 = 0;
    STACKTOP = sp;return ($$3|0);
   }
   else if ((label|0) == 166) {
    $371 = ($$1145|0)==(0|0);
    if ($371) {
     $$3 = $57;
     STACKTOP = sp;return ($$3|0);
    }
    _free($$1145);
    $$3 = $57;
    STACKTOP = sp;return ($$3|0);
   }
  }
 } while(0);
 while(1) {
  if ((label|0) == 24) {
   label = 0;
   $60 = ($$0147|0)<($27|0);
   if ($60) {
    $$0151 = 0;$$1148 = $$0147;
   } else {
    $$3 = $57;
    break;
   }
  }
  else if ((label|0) == 27) {
   label = 0;
   $62 = HEAP32[$$pre$phiZ2D>>2]|0;
   $63 = ($62|0)==(0|0);
   if ($63) {
    $$phi$trans$insert$i = ((($0)) + 168|0);
    $$pre$i27 = HEAP32[$$phi$trans$insert$i>>2]|0;
    $$phi$trans$insert35$i = ((($0)) + 172|0);
    $$pre36$i = HEAP32[$$phi$trans$insert35$i>>2]|0;
    $$pre$phi$i28Z2D = $$phi$trans$insert$i;$78 = $$pre$i27;$80 = $$pre36$i;
    label = 31;
   } else {
    $64 = ((($0)) + 172|0);
    $65 = HEAP32[$64>>2]|0;
    $66 = ((($0)) + 168|0);
    $67 = HEAP32[$66>>2]|0;
    $68 = $67;
    $69 = (($65) - ($68))|0;
    $70 = ($69|0)<(4);
    $71 = $65;
    if ($70) {
     _memcpy(($7|0),($67|0),($69|0))|0;
     $72 = ((($0)) + 28|0);
     $73 = HEAP32[$72>>2]|0;
     $74 = (($7) + ($69)|0);
     $75 = (4 - ($69))|0;
     (ftCall_iiii($62|0,$73,$74,$75)|0);
     $76 = HEAP32[$64>>2]|0;
     HEAP32[$66>>2] = $76;
    } else {
     $$pre$phi$i28Z2D = $66;$78 = $67;$80 = $71;
     label = 31;
    }
   }
   if ((label|0) == 31) {
    label = 0;
    $77 = ((($78)) + 4|0);
    $79 = ($77>>>0)>($80>>>0);
    if (!($79)) {
     $81 = HEAPU8[$78>>0]|(HEAPU8[$78+1>>0]<<8)|(HEAPU8[$78+2>>0]<<16)|(HEAPU8[$78+3>>0]<<24);
     HEAP32[$7>>2] = $81;
     HEAP32[$$pre$phi$i28Z2D>>2] = $77;
    }
   }
   $82 = Math_imul($38, $spec$select1)|0;
   $83 = Math_imul($82, $$2149)|0;
   $84 = (($57) + ($83<<2)|0);
   $85 = Math_imul($$1152, $spec$select1)|0;
   $86 = (($84) + ($85<<2)|0);
   $87 = ((($7)) + 3|0);
   $88 = HEAP8[$87>>0]|0;
   $89 = ($88<<24>>24)==(0);
   L233: do {
    if ($89) {
     switch ($spec$select1|0) {
     case 4:  {
      $122 = ((($86)) + 12|0);
      HEAPF32[$122>>2] = Math_fround(1.0);
      label = 42;
      break;
     }
     case 3:  {
      label = 42;
      break;
     }
     case 2:  {
      $125 = ((($86)) + 4|0);
      HEAPF32[$125>>2] = Math_fround(1.0);
      label = 44;
      break;
     }
     case 1:  {
      label = 44;
      break;
     }
     default: {
      break L233;
     }
     }
     if ((label|0) == 42) {
      label = 0;
      $123 = ((($86)) + 8|0);
      HEAPF32[$123>>2] = Math_fround(0.0);
      $124 = ((($86)) + 4|0);
      HEAPF32[$124>>2] = Math_fround(0.0);
      HEAPF32[$86>>2] = Math_fround(0.0);
      break;
     }
     else if ((label|0) == 44) {
      label = 0;
      HEAPF32[$86>>2] = Math_fround(0.0);
      break;
     }
    } else {
     $90 = $88&255;
     $91 = (($90) + -136)|0;
     $92 = (+_ldexp(1.0,$91));
     $93 = Math_fround($92);
     $94 = ($spec$select1|0)<(3);
     $95 = HEAP8[$7>>0]|0;
     if ($94) {
      $96 = $95&255;
      $97 = ((($7)) + 1|0);
      $98 = HEAP8[$97>>0]|0;
      $99 = $98&255;
      $100 = (($99) + ($96))|0;
      $101 = ((($7)) + 2|0);
      $102 = HEAP8[$101>>0]|0;
      $103 = $102&255;
      $104 = (($100) + ($103))|0;
      $105 = (Math_fround(($104|0)));
      $106 = Math_fround($93 * $105);
      $107 = Math_fround($106 / Math_fround(3.0));
      HEAPF32[$86>>2] = $107;
     } else {
      $108 = (Math_fround(($95&255)));
      $109 = Math_fround($93 * $108);
      HEAPF32[$86>>2] = $109;
      $110 = ((($7)) + 1|0);
      $111 = HEAP8[$110>>0]|0;
      $112 = (Math_fround(($111&255)));
      $113 = Math_fround($93 * $112);
      $114 = ((($86)) + 4|0);
      HEAPF32[$114>>2] = $113;
      $115 = ((($7)) + 2|0);
      $116 = HEAP8[$115>>0]|0;
      $117 = (Math_fround(($116&255)));
      $118 = Math_fround($93 * $117);
      $119 = ((($86)) + 8|0);
      HEAPF32[$119>>2] = $118;
     }
     switch ($spec$select1|0) {
     case 2:  {
      $120 = ((($86)) + 4|0);
      HEAPF32[$120>>2] = Math_fround(1.0);
      break L233;
      break;
     }
     case 4:  {
      $121 = ((($86)) + 12|0);
      HEAPF32[$121>>2] = Math_fround(1.0);
      break L233;
      break;
     }
     default: {
      break L233;
     }
     }
    }
   } while(0);
   $126 = (($$1152) + 1)|0;
   $$0151 = $126;$$1148 = $$2149;
  }
  $61 = ($$0151|0)<($38|0);
  if ($61) {
   $$pre168 = ((($0)) + 16|0);
   $$1152 = $$0151;$$2149 = $$1148;$$pre$phiZ2D = $$pre168;
   label = 27;
   continue;
  } else {
   $127 = (($$1148) + 1)|0;
   $$0147 = $127;
   label = 24;
   continue;
  }
 }
 STACKTOP = sp;return ($$3|0);
}
function _stbi__tga_read_rgb16($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$i = 0, $$0$i8$i = 0, $$pre$i$i = 0, $$pre$i3$i = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre5$i$i = 0, $$pre5$i4$i = 0, $$sink$i$i$i = 0, $$sink$i$i6$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0;
 var $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0;
 var $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0;
 var $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 168|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ((($0)) + 172|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($3>>>0)<($5>>>0);
 if ($6) {
  $7 = ((($3)) + 1|0);
  HEAP32[$2>>2] = $7;
  $8 = HEAP8[$3>>0]|0;
  $$0$i$i = $8;$25 = $7;$26 = $5;
 } else {
  $9 = ((($0)) + 32|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0);
  if ($11) {
   $$0$i$i = 0;$25 = $3;$26 = $5;
  } else {
   $12 = ((($0)) + 16|0);
   $13 = HEAP32[$12>>2]|0;
   $14 = ((($0)) + 28|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = ((($0)) + 40|0);
   $17 = ((($0)) + 36|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = (ftCall_iiii($13|0,$15,$16,$18)|0);
   $20 = ($19|0)==(0);
   if ($20) {
    HEAP32[$9>>2] = 0;
    $21 = ((($0)) + 41|0);
    HEAP8[$16>>0] = 0;
    $$pre$phi$i$iZ2D = $21;$$sink$i$i$i = $21;$62 = 0;
   } else {
    $22 = (((($0)) + 40|0) + ($19)|0);
    $$pre$i$i = HEAP8[$16>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $22;$62 = $$pre$i$i;
   }
   HEAP32[$4>>2] = $$sink$i$i$i;
   HEAP32[$2>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i = $62;$25 = $$pre$phi$i$iZ2D;$26 = $$sink$i$i$i;
  }
 }
 $23 = $$0$i$i&255;
 $24 = ($25>>>0)<($26>>>0);
 if ($24) {
  $27 = ((($25)) + 1|0);
  HEAP32[$2>>2] = $27;
  $28 = HEAP8[$25>>0]|0;
  $$0$i8$i = $28;
 } else {
  $29 = ((($0)) + 32|0);
  $30 = HEAP32[$29>>2]|0;
  $31 = ($30|0)==(0);
  if ($31) {
   $$0$i8$i = 0;
  } else {
   $32 = ((($0)) + 16|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($0)) + 28|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ((($0)) + 40|0);
   $37 = ((($0)) + 36|0);
   $38 = HEAP32[$37>>2]|0;
   $39 = (ftCall_iiii($33|0,$35,$36,$38)|0);
   $40 = ($39|0)==(0);
   if ($40) {
    HEAP32[$29>>2] = 0;
    $41 = ((($0)) + 41|0);
    HEAP8[$36>>0] = 0;
    $$pre$phi$i5$iZ2D = $41;$$sink$i$i6$i = $41;$63 = 0;
   } else {
    $42 = (((($0)) + 40|0) + ($39)|0);
    $$pre$i3$i = HEAP8[$36>>0]|0;
    $$pre5$i4$i = ((($0)) + 41|0);
    $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $42;$63 = $$pre$i3$i;
   }
   HEAP32[$4>>2] = $$sink$i$i6$i;
   HEAP32[$2>>2] = $$pre$phi$i5$iZ2D;
   $$0$i8$i = $63;
  }
 }
 $43 = $$0$i8$i&255;
 $44 = $43 << 8;
 $45 = $44 | $23;
 $46 = $43 >>> 2;
 $47 = $46 & 31;
 $48 = $45 >>> 5;
 $49 = $48 & 31;
 $50 = $23 & 31;
 $51 = ($47*255)|0;
 $52 = (($51>>>0) / 31)&-1;
 $53 = $52&255;
 HEAP8[$1>>0] = $53;
 $54 = ($49*255)|0;
 $55 = (($54>>>0) / 31)&-1;
 $56 = $55&255;
 $57 = ((($1)) + 1|0);
 HEAP8[$57>>0] = $56;
 $58 = ($50*255)|0;
 $59 = (($58>>>0) / 31)&-1;
 $60 = $59&255;
 $61 = ((($1)) + 2|0);
 HEAP8[$61>>0] = $60;
 return;
}
function _stbi__hdr_gettoken($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i = 0, $$013 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_stbi__get8($0)|0);
 $3 = ((($0)) + 16|0);
 $4 = ((($0)) + 168|0);
 $5 = ((($0)) + 172|0);
 $6 = ((($0)) + 24|0);
 $7 = ((($0)) + 28|0);
 $8 = ((($0)) + 32|0);
 $$0 = $2;$$013 = 0;
 while(1) {
  $9 = HEAP32[$3>>2]|0;
  $10 = ($9|0)==(0|0);
  if ($10) {
   label = 5;
  } else {
   $11 = HEAP32[$6>>2]|0;
   $12 = HEAP32[$7>>2]|0;
   $13 = (ftCall_ii($11|0,$12)|0);
   $14 = ($13|0)==(0);
   if ($14) {
    $$0$i = 0;
   } else {
    $15 = HEAP32[$8>>2]|0;
    $16 = ($15|0)==(0);
    if ($16) {
     $$1 = $$013;
     break;
    } else {
     label = 5;
    }
   }
  }
  if ((label|0) == 5) {
   label = 0;
   $17 = HEAP32[$4>>2]|0;
   $18 = HEAP32[$5>>2]|0;
   $19 = ($17>>>0)>=($18>>>0);
   $20 = $19&1;
   $$0$i = $20;
  }
  $21 = ($$0$i|0)==(0);
  $22 = ($$0<<24>>24)!=(10);
  $23 = $22 & $21;
  if (!($23)) {
   $$1 = $$013;
   break;
  }
  $24 = (($$013) + 1)|0;
  $25 = (($1) + ($$013)|0);
  HEAP8[$25>>0] = $$0;
  $26 = ($24|0)==(1023);
  if ($26) {
   label = 8;
   break;
  }
  $33 = (_stbi__get8($0)|0);
  $$0 = $33;$$013 = $24;
 }
 L11: do {
  if ((label|0) == 8) {
   $27 = (_stbi__at_eof($0)|0);
   $28 = ($27|0)==(0);
   if ($28) {
    while(1) {
     $31 = (_stbi__get8($0)|0);
     $32 = ($31<<24>>24)==(10);
     if ($32) {
      $$1 = 1023;
      break L11;
     }
     $29 = (_stbi__at_eof($0)|0);
     $30 = ($29|0)==(0);
     if (!($30)) {
      $$1 = 1023;
      break;
     }
    }
   } else {
    $$1 = 1023;
   }
  }
 } while(0);
 $34 = (($1) + ($$1)|0);
 HEAP8[$34>>0] = 0;
 return ($1|0);
}
function _stbi__get8($0) {
 $0 = $0|0;
 var $$0 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre5 = 0, $$sink$i = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 168|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 172|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)<($4>>>0);
 if ($5) {
  $6 = ((($2)) + 1|0);
  HEAP32[$1>>2] = $6;
  $7 = HEAP8[$2>>0]|0;
  $$0 = $7;
  return ($$0|0);
 }
 $8 = ((($0)) + 32|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($9|0)==(0);
 if ($10) {
  $$0 = 0;
  return ($$0|0);
 }
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = ((($0)) + 28|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 40|0);
 $16 = ((($0)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = (ftCall_iiii($12|0,$14,$15,$17)|0);
 $19 = ($18|0)==(0);
 if ($19) {
  HEAP32[$8>>2] = 0;
  $20 = ((($0)) + 41|0);
  HEAP8[$15>>0] = 0;
  $$pre$phiZ2D = $20;$$sink$i = $20;$22 = 0;
 } else {
  $21 = (((($0)) + 40|0) + ($18)|0);
  $$pre = HEAP8[$15>>0]|0;
  $$pre5 = ((($0)) + 41|0);
  $$pre$phiZ2D = $$pre5;$$sink$i = $21;$22 = $$pre;
 }
 HEAP32[$3>>2] = $$sink$i;
 HEAP32[$1>>2] = $$pre$phiZ2D;
 $$0 = $22;
 return ($$0|0);
}
function _stbi__at_eof($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0|0);
 if (!($3)) {
  $4 = ((($0)) + 24|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 28|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (ftCall_ii($5|0,$7)|0);
  $9 = ($8|0)==(0);
  if ($9) {
   $$0 = 0;
   return ($$0|0);
  }
  $10 = ((($0)) + 32|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ($11|0)==(0);
  if ($12) {
   $$0 = 1;
   return ($$0|0);
  }
 }
 $13 = ((($0)) + 168|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = ((($0)) + 172|0);
 $16 = HEAP32[$15>>2]|0;
 $17 = ($14>>>0)>=($16>>>0);
 $18 = $17&1;
 $$0 = $18;
 return ($$0|0);
}
function _stbi__pnm_skip_whitespace($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 while(1) {
  $2 = (_stbi__at_eof($0)|0);
  $3 = ($2|0)==(0);
  L3: do {
   if ($3) {
    while(1) {
     $4 = HEAP8[$1>>0]|0;
     switch ($4<<24>>24) {
     case 13: case 12: case 11: case 10: case 9: case 32:  {
      break;
     }
     default: {
      break L3;
     }
     }
     $5 = (_stbi__get8($0)|0);
     HEAP8[$1>>0] = $5;
     $6 = (_stbi__at_eof($0)|0);
     $7 = ($6|0)==(0);
     if (!($7)) {
      break L3;
     }
    }
   }
  } while(0);
  $8 = (_stbi__at_eof($0)|0);
  $9 = ($8|0)==(0);
  if (!($9)) {
   label = 13;
   break;
  }
  $10 = HEAP8[$1>>0]|0;
  $11 = ($10<<24>>24)==(35);
  if (!($11)) {
   label = 13;
   break;
  }
  $12 = (_stbi__at_eof($0)|0);
  $13 = ($12|0)==(0);
  L11: do {
   if ($13) {
    while(1) {
     $14 = HEAP8[$1>>0]|0;
     switch ($14<<24>>24) {
     case 13: case 10:  {
      break L11;
      break;
     }
     default: {
     }
     }
     $15 = (_stbi__get8($0)|0);
     HEAP8[$1>>0] = $15;
     $16 = (_stbi__at_eof($0)|0);
     $17 = ($16|0)==(0);
     if (!($17)) {
      break L11;
     }
    }
   }
  } while(0);
 }
 if ((label|0) == 13) {
  return;
 }
}
function _stbi__gif_header($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i78 = 0, $$0$i$i85 = 0, $$0$i106 = 0, $$0$i113 = 0, $$0$i31 = 0, $$0$i38 = 0, $$0$i45 = 0, $$0$i52 = 0, $$0$i59 = 0, $$0$i66 = 0, $$0$i73 = 0, $$0$i8$i = 0, $$0$i8$i92 = 0, $$0$i99 = 0, $$016$i = 0, $$pre = 0, $$pre$i = 0;
 var $$pre$i$i = 0, $$pre$i$i75 = 0, $$pre$i$i80 = 0, $$pre$i101 = 0, $$pre$i108 = 0, $$pre$i26 = 0, $$pre$i3$i = 0, $$pre$i3$i87 = 0, $$pre$i33 = 0, $$pre$i40 = 0, $$pre$i47 = 0, $$pre$i54 = 0, $$pre$i61 = 0, $$pre$i68 = 0, $$pre$i94 = 0, $$pre$phi$i$i82Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i103Z2D = 0, $$pre$phi$i110Z2D = 0, $$pre$phi$i28Z2D = 0;
 var $$pre$phi$i35Z2D = 0, $$pre$phi$i42Z2D = 0, $$pre$phi$i5$i89Z2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre$phi$i56Z2D = 0, $$pre$phi$i70Z2D = 0, $$pre$phi$i96Z2D = 0, $$pre$phi$iZ2D = 0, $$pre115 = 0, $$pre5$i = 0, $$pre5$i$i = 0, $$pre5$i$i81 = 0, $$pre5$i102 = 0, $$pre5$i109 = 0, $$pre5$i27 = 0, $$pre5$i34 = 0, $$pre5$i4$i = 0, $$pre5$i4$i88 = 0, $$pre5$i41 = 0, $$pre5$i55 = 0;
 var $$pre5$i69 = 0, $$pre5$i95 = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i76 = 0, $$sink$i$i$i83 = 0, $$sink$i$i104 = 0, $$sink$i$i111 = 0, $$sink$i$i29 = 0, $$sink$i$i36 = 0, $$sink$i$i43 = 0, $$sink$i$i50 = 0, $$sink$i$i57 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i90 = 0, $$sink$i$i64 = 0, $$sink$i$i71 = 0, $$sink$i$i97 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0;
 var $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0;
 var $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0;
 var $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 168|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ((($0)) + 172|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($5>>>0)<($7>>>0);
 if ($8) {
  $9 = ((($5)) + 1|0);
  HEAP32[$4>>2] = $9;
  $10 = HEAP8[$5>>0]|0;
  $$0$i = $10;$27 = $9;$28 = $7;
 } else {
  $11 = ((($0)) + 32|0);
  $12 = HEAP32[$11>>2]|0;
  $13 = ($12|0)==(0);
  if ($13) {
   $$0 = 0;
   return ($$0|0);
  }
  $14 = ((($0)) + 16|0);
  $15 = HEAP32[$14>>2]|0;
  $16 = ((($0)) + 28|0);
  $17 = HEAP32[$16>>2]|0;
  $18 = ((($0)) + 40|0);
  $19 = ((($0)) + 36|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = (ftCall_iiii($15|0,$17,$18,$20)|0);
  $22 = ($21|0)==(0);
  if ($22) {
   HEAP32[$11>>2] = 0;
   $23 = ((($0)) + 41|0);
   HEAP8[$18>>0] = 0;
   $$pre$phi$iZ2D = $23;$$sink$i$i = $23;$332 = 0;
  } else {
   $24 = (((($0)) + 40|0) + ($21)|0);
   $$pre$i = HEAP8[$18>>0]|0;
   $$pre5$i = ((($0)) + 41|0);
   $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $24;$332 = $$pre$i;
  }
  HEAP32[$6>>2] = $$sink$i$i;
  HEAP32[$4>>2] = $$pre$phi$iZ2D;
  $$0$i = $332;$27 = $$pre$phi$iZ2D;$28 = $$sink$i$i;
 }
 $25 = ($$0$i<<24>>24)==(71);
 if (!($25)) {
  $$0 = 0;
  return ($$0|0);
 }
 $26 = ($27>>>0)<($28>>>0);
 if ($26) {
  $29 = ((($27)) + 1|0);
  HEAP32[$4>>2] = $29;
  $30 = HEAP8[$27>>0]|0;
  $$0$i31 = $30;$47 = $29;$48 = $28;
 } else {
  $31 = ((($0)) + 32|0);
  $32 = HEAP32[$31>>2]|0;
  $33 = ($32|0)==(0);
  if ($33) {
   $$0 = 0;
   return ($$0|0);
  }
  $34 = ((($0)) + 16|0);
  $35 = HEAP32[$34>>2]|0;
  $36 = ((($0)) + 28|0);
  $37 = HEAP32[$36>>2]|0;
  $38 = ((($0)) + 40|0);
  $39 = ((($0)) + 36|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = (ftCall_iiii($35|0,$37,$38,$40)|0);
  $42 = ($41|0)==(0);
  if ($42) {
   HEAP32[$31>>2] = 0;
   $43 = ((($0)) + 41|0);
   HEAP8[$38>>0] = 0;
   $$pre$phi$i28Z2D = $43;$$sink$i$i29 = $43;$333 = 0;
  } else {
   $44 = (((($0)) + 40|0) + ($41)|0);
   $$pre$i26 = HEAP8[$38>>0]|0;
   $$pre5$i27 = ((($0)) + 41|0);
   $$pre$phi$i28Z2D = $$pre5$i27;$$sink$i$i29 = $44;$333 = $$pre$i26;
  }
  HEAP32[$6>>2] = $$sink$i$i29;
  HEAP32[$4>>2] = $$pre$phi$i28Z2D;
  $$0$i31 = $333;$47 = $$pre$phi$i28Z2D;$48 = $$sink$i$i29;
 }
 $45 = ($$0$i31<<24>>24)==(73);
 if (!($45)) {
  $$0 = 0;
  return ($$0|0);
 }
 $46 = ($47>>>0)<($48>>>0);
 if ($46) {
  $49 = ((($47)) + 1|0);
  HEAP32[$4>>2] = $49;
  $50 = HEAP8[$47>>0]|0;
  $$0$i38 = $50;$67 = $49;$68 = $48;
 } else {
  $51 = ((($0)) + 32|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ($52|0)==(0);
  if ($53) {
   $$0 = 0;
   return ($$0|0);
  }
  $54 = ((($0)) + 16|0);
  $55 = HEAP32[$54>>2]|0;
  $56 = ((($0)) + 28|0);
  $57 = HEAP32[$56>>2]|0;
  $58 = ((($0)) + 40|0);
  $59 = ((($0)) + 36|0);
  $60 = HEAP32[$59>>2]|0;
  $61 = (ftCall_iiii($55|0,$57,$58,$60)|0);
  $62 = ($61|0)==(0);
  if ($62) {
   HEAP32[$51>>2] = 0;
   $63 = ((($0)) + 41|0);
   HEAP8[$58>>0] = 0;
   $$pre$phi$i35Z2D = $63;$$sink$i$i36 = $63;$334 = 0;
  } else {
   $64 = (((($0)) + 40|0) + ($61)|0);
   $$pre$i33 = HEAP8[$58>>0]|0;
   $$pre5$i34 = ((($0)) + 41|0);
   $$pre$phi$i35Z2D = $$pre5$i34;$$sink$i$i36 = $64;$334 = $$pre$i33;
  }
  HEAP32[$6>>2] = $$sink$i$i36;
  HEAP32[$4>>2] = $$pre$phi$i35Z2D;
  $$0$i38 = $334;$67 = $$pre$phi$i35Z2D;$68 = $$sink$i$i36;
 }
 $65 = ($$0$i38<<24>>24)==(70);
 if (!($65)) {
  $$0 = 0;
  return ($$0|0);
 }
 $66 = ($67>>>0)<($68>>>0);
 if ($66) {
  $69 = ((($67)) + 1|0);
  HEAP32[$4>>2] = $69;
  $70 = HEAP8[$67>>0]|0;
  $$0$i45 = $70;$87 = $69;$88 = $68;
 } else {
  $71 = ((($0)) + 32|0);
  $72 = HEAP32[$71>>2]|0;
  $73 = ($72|0)==(0);
  if ($73) {
   $$0 = 0;
   return ($$0|0);
  }
  $74 = ((($0)) + 16|0);
  $75 = HEAP32[$74>>2]|0;
  $76 = ((($0)) + 28|0);
  $77 = HEAP32[$76>>2]|0;
  $78 = ((($0)) + 40|0);
  $79 = ((($0)) + 36|0);
  $80 = HEAP32[$79>>2]|0;
  $81 = (ftCall_iiii($75|0,$77,$78,$80)|0);
  $82 = ($81|0)==(0);
  if ($82) {
   HEAP32[$71>>2] = 0;
   $83 = ((($0)) + 41|0);
   HEAP8[$78>>0] = 0;
   $$pre$phi$i42Z2D = $83;$$sink$i$i43 = $83;$335 = 0;
  } else {
   $84 = (((($0)) + 40|0) + ($81)|0);
   $$pre$i40 = HEAP8[$78>>0]|0;
   $$pre5$i41 = ((($0)) + 41|0);
   $$pre$phi$i42Z2D = $$pre5$i41;$$sink$i$i43 = $84;$335 = $$pre$i40;
  }
  HEAP32[$6>>2] = $$sink$i$i43;
  HEAP32[$4>>2] = $$pre$phi$i42Z2D;
  $$0$i45 = $335;$87 = $$pre$phi$i42Z2D;$88 = $$sink$i$i43;
 }
 $85 = ($$0$i45<<24>>24)==(56);
 if (!($85)) {
  $$0 = 0;
  return ($$0|0);
 }
 $86 = ($87>>>0)<($88>>>0);
 if ($86) {
  $89 = ((($87)) + 1|0);
  HEAP32[$4>>2] = $89;
  $90 = HEAP8[$87>>0]|0;
  $$0$i59 = $90;$106 = $89;$107 = $88;
 } else {
  $91 = ((($0)) + 32|0);
  $92 = HEAP32[$91>>2]|0;
  $93 = ($92|0)==(0);
  if ($93) {
   $$0 = 0;
   return ($$0|0);
  }
  $94 = ((($0)) + 16|0);
  $95 = HEAP32[$94>>2]|0;
  $96 = ((($0)) + 28|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ((($0)) + 40|0);
  $99 = ((($0)) + 36|0);
  $100 = HEAP32[$99>>2]|0;
  $101 = (ftCall_iiii($95|0,$97,$98,$100)|0);
  $102 = ($101|0)==(0);
  if ($102) {
   HEAP32[$91>>2] = 0;
   $103 = ((($0)) + 41|0);
   HEAP8[$98>>0] = 0;
   $$pre$phi$i56Z2D = $103;$$sink$i$i57 = $103;$336 = 0;
  } else {
   $104 = (((($0)) + 40|0) + ($101)|0);
   $$pre$i54 = HEAP8[$98>>0]|0;
   $$pre5$i55 = ((($0)) + 41|0);
   $$pre$phi$i56Z2D = $$pre5$i55;$$sink$i$i57 = $104;$336 = $$pre$i54;
  }
  HEAP32[$6>>2] = $$sink$i$i57;
  HEAP32[$4>>2] = $$pre$phi$i56Z2D;
  $$0$i59 = $336;$106 = $$pre$phi$i56Z2D;$107 = $$sink$i$i57;
 }
 switch ($$0$i59<<24>>24) {
 case 57: case 55:  {
  break;
 }
 default: {
  $$0 = 0;
  return ($$0|0);
 }
 }
 $105 = ($106>>>0)<($107>>>0);
 if ($105) {
  $108 = ((($106)) + 1|0);
  HEAP32[$4>>2] = $108;
  $109 = HEAP8[$106>>0]|0;
  $$0$i73 = $109;$126 = $108;$127 = $107;
 } else {
  $110 = ((($0)) + 32|0);
  $111 = HEAP32[$110>>2]|0;
  $112 = ($111|0)==(0);
  if ($112) {
   $$0 = 0;
   return ($$0|0);
  }
  $113 = ((($0)) + 16|0);
  $114 = HEAP32[$113>>2]|0;
  $115 = ((($0)) + 28|0);
  $116 = HEAP32[$115>>2]|0;
  $117 = ((($0)) + 40|0);
  $118 = ((($0)) + 36|0);
  $119 = HEAP32[$118>>2]|0;
  $120 = (ftCall_iiii($114|0,$116,$117,$119)|0);
  $121 = ($120|0)==(0);
  if ($121) {
   HEAP32[$110>>2] = 0;
   $122 = ((($0)) + 41|0);
   HEAP8[$117>>0] = 0;
   $$pre$phi$i70Z2D = $122;$$sink$i$i71 = $122;$337 = 0;
  } else {
   $123 = (((($0)) + 40|0) + ($120)|0);
   $$pre$i68 = HEAP8[$117>>0]|0;
   $$pre5$i69 = ((($0)) + 41|0);
   $$pre$phi$i70Z2D = $$pre5$i69;$$sink$i$i71 = $123;$337 = $$pre$i68;
  }
  HEAP32[$6>>2] = $$sink$i$i71;
  HEAP32[$4>>2] = $$pre$phi$i70Z2D;
  $$0$i73 = $337;$126 = $$pre$phi$i70Z2D;$127 = $$sink$i$i71;
 }
 $124 = ($$0$i73<<24>>24)==(97);
 if (!($124)) {
  $$0 = 0;
  return ($$0|0);
 }
 $125 = ($126>>>0)<($127>>>0);
 if ($125) {
  $128 = ((($126)) + 1|0);
  HEAP32[$4>>2] = $128;
  $129 = HEAP8[$126>>0]|0;
  $$0$i$i78 = $129;$146 = $128;$147 = $127;
 } else {
  $130 = ((($0)) + 32|0);
  $131 = HEAP32[$130>>2]|0;
  $132 = ($131|0)==(0);
  if ($132) {
   $$0$i$i78 = 0;$146 = $126;$147 = $127;
  } else {
   $133 = ((($0)) + 16|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ((($0)) + 28|0);
   $136 = HEAP32[$135>>2]|0;
   $137 = ((($0)) + 40|0);
   $138 = ((($0)) + 36|0);
   $139 = HEAP32[$138>>2]|0;
   $140 = (ftCall_iiii($134|0,$136,$137,$139)|0);
   $141 = ($140|0)==(0);
   if ($141) {
    HEAP32[$130>>2] = 0;
    $142 = ((($0)) + 41|0);
    HEAP8[$137>>0] = 0;
    $$pre$phi$i$iZ2D = $142;$$sink$i$i$i76 = $142;$338 = 0;
   } else {
    $143 = (((($0)) + 40|0) + ($140)|0);
    $$pre$i$i75 = HEAP8[$137>>0]|0;
    $$pre5$i$i = ((($0)) + 41|0);
    $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i76 = $143;$338 = $$pre$i$i75;
   }
   HEAP32[$6>>2] = $$sink$i$i$i76;
   HEAP32[$4>>2] = $$pre$phi$i$iZ2D;
   $$0$i$i78 = $338;$146 = $$pre$phi$i$iZ2D;$147 = $$sink$i$i$i76;
  }
 }
 $144 = $$0$i$i78&255;
 $145 = ($146>>>0)<($147>>>0);
 if ($145) {
  $148 = ((($146)) + 1|0);
  HEAP32[$4>>2] = $148;
  $149 = HEAP8[$146>>0]|0;
  $$0$i8$i = $149;$168 = $148;$169 = $147;
 } else {
  $150 = ((($0)) + 32|0);
  $151 = HEAP32[$150>>2]|0;
  $152 = ($151|0)==(0);
  if ($152) {
   $$0$i8$i = 0;$168 = $146;$169 = $147;
  } else {
   $153 = ((($0)) + 16|0);
   $154 = HEAP32[$153>>2]|0;
   $155 = ((($0)) + 28|0);
   $156 = HEAP32[$155>>2]|0;
   $157 = ((($0)) + 40|0);
   $158 = ((($0)) + 36|0);
   $159 = HEAP32[$158>>2]|0;
   $160 = (ftCall_iiii($154|0,$156,$157,$159)|0);
   $161 = ($160|0)==(0);
   if ($161) {
    HEAP32[$150>>2] = 0;
    $162 = ((($0)) + 41|0);
    HEAP8[$157>>0] = 0;
    $$pre$phi$i5$iZ2D = $162;$$sink$i$i6$i = $162;$339 = 0;
   } else {
    $163 = (((($0)) + 40|0) + ($160)|0);
    $$pre$i3$i = HEAP8[$157>>0]|0;
    $$pre5$i4$i = ((($0)) + 41|0);
    $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $163;$339 = $$pre$i3$i;
   }
   HEAP32[$6>>2] = $$sink$i$i6$i;
   HEAP32[$4>>2] = $$pre$phi$i5$iZ2D;
   $$0$i8$i = $339;$168 = $$pre$phi$i5$iZ2D;$169 = $$sink$i$i6$i;
  }
 }
 $164 = $$0$i8$i&255;
 $165 = $164 << 8;
 $166 = $165 | $144;
 HEAP32[$1>>2] = $166;
 $167 = ($168>>>0)<($169>>>0);
 if ($167) {
  $170 = ((($168)) + 1|0);
  HEAP32[$4>>2] = $170;
  $171 = HEAP8[$168>>0]|0;
  $$0$i$i85 = $171;$188 = $170;$189 = $169;
 } else {
  $172 = ((($0)) + 32|0);
  $173 = HEAP32[$172>>2]|0;
  $174 = ($173|0)==(0);
  if ($174) {
   $$0$i$i85 = 0;$188 = $168;$189 = $169;
  } else {
   $175 = ((($0)) + 16|0);
   $176 = HEAP32[$175>>2]|0;
   $177 = ((($0)) + 28|0);
   $178 = HEAP32[$177>>2]|0;
   $179 = ((($0)) + 40|0);
   $180 = ((($0)) + 36|0);
   $181 = HEAP32[$180>>2]|0;
   $182 = (ftCall_iiii($176|0,$178,$179,$181)|0);
   $183 = ($182|0)==(0);
   if ($183) {
    HEAP32[$172>>2] = 0;
    $184 = ((($0)) + 41|0);
    HEAP8[$179>>0] = 0;
    $$pre$phi$i$i82Z2D = $184;$$sink$i$i$i83 = $184;$340 = 0;
   } else {
    $185 = (((($0)) + 40|0) + ($182)|0);
    $$pre$i$i80 = HEAP8[$179>>0]|0;
    $$pre5$i$i81 = ((($0)) + 41|0);
    $$pre$phi$i$i82Z2D = $$pre5$i$i81;$$sink$i$i$i83 = $185;$340 = $$pre$i$i80;
   }
   HEAP32[$6>>2] = $$sink$i$i$i83;
   HEAP32[$4>>2] = $$pre$phi$i$i82Z2D;
   $$0$i$i85 = $340;$188 = $$pre$phi$i$i82Z2D;$189 = $$sink$i$i$i83;
  }
 }
 $186 = $$0$i$i85&255;
 $187 = ($188>>>0)<($189>>>0);
 if ($187) {
  $190 = ((($188)) + 1|0);
  HEAP32[$4>>2] = $190;
  $191 = HEAP8[$188>>0]|0;
  $$0$i8$i92 = $191;$211 = $190;$212 = $189;
 } else {
  $192 = ((($0)) + 32|0);
  $193 = HEAP32[$192>>2]|0;
  $194 = ($193|0)==(0);
  if ($194) {
   $$0$i8$i92 = 0;$211 = $188;$212 = $189;
  } else {
   $195 = ((($0)) + 16|0);
   $196 = HEAP32[$195>>2]|0;
   $197 = ((($0)) + 28|0);
   $198 = HEAP32[$197>>2]|0;
   $199 = ((($0)) + 40|0);
   $200 = ((($0)) + 36|0);
   $201 = HEAP32[$200>>2]|0;
   $202 = (ftCall_iiii($196|0,$198,$199,$201)|0);
   $203 = ($202|0)==(0);
   if ($203) {
    HEAP32[$192>>2] = 0;
    $204 = ((($0)) + 41|0);
    HEAP8[$199>>0] = 0;
    $$pre$phi$i5$i89Z2D = $204;$$sink$i$i6$i90 = $204;$341 = 0;
   } else {
    $205 = (((($0)) + 40|0) + ($202)|0);
    $$pre$i3$i87 = HEAP8[$199>>0]|0;
    $$pre5$i4$i88 = ((($0)) + 41|0);
    $$pre$phi$i5$i89Z2D = $$pre5$i4$i88;$$sink$i$i6$i90 = $205;$341 = $$pre$i3$i87;
   }
   HEAP32[$6>>2] = $$sink$i$i6$i90;
   HEAP32[$4>>2] = $$pre$phi$i5$i89Z2D;
   $$0$i8$i92 = $341;$211 = $$pre$phi$i5$i89Z2D;$212 = $$sink$i$i6$i90;
  }
 }
 $206 = $$0$i8$i92&255;
 $207 = $206 << 8;
 $208 = $207 | $186;
 $209 = ((($1)) + 4|0);
 HEAP32[$209>>2] = $208;
 $210 = ($211>>>0)<($212>>>0);
 if ($210) {
  $213 = ((($211)) + 1|0);
  HEAP32[$4>>2] = $213;
  $214 = HEAP8[$211>>0]|0;
  $$0$i99 = $214;$232 = $213;$233 = $212;
 } else {
  $215 = ((($0)) + 32|0);
  $216 = HEAP32[$215>>2]|0;
  $217 = ($216|0)==(0);
  if ($217) {
   $$0$i99 = 0;$232 = $211;$233 = $212;
  } else {
   $218 = ((($0)) + 16|0);
   $219 = HEAP32[$218>>2]|0;
   $220 = ((($0)) + 28|0);
   $221 = HEAP32[$220>>2]|0;
   $222 = ((($0)) + 40|0);
   $223 = ((($0)) + 36|0);
   $224 = HEAP32[$223>>2]|0;
   $225 = (ftCall_iiii($219|0,$221,$222,$224)|0);
   $226 = ($225|0)==(0);
   if ($226) {
    HEAP32[$215>>2] = 0;
    $227 = ((($0)) + 41|0);
    HEAP8[$222>>0] = 0;
    $$pre$phi$i96Z2D = $227;$$sink$i$i97 = $227;$342 = 0;
   } else {
    $228 = (((($0)) + 40|0) + ($225)|0);
    $$pre$i94 = HEAP8[$222>>0]|0;
    $$pre5$i95 = ((($0)) + 41|0);
    $$pre$phi$i96Z2D = $$pre5$i95;$$sink$i$i97 = $228;$342 = $$pre$i94;
   }
   HEAP32[$6>>2] = $$sink$i$i97;
   HEAP32[$4>>2] = $$pre$phi$i96Z2D;
   $$0$i99 = $342;$232 = $$pre$phi$i96Z2D;$233 = $$sink$i$i97;
  }
 }
 $229 = $$0$i99&255;
 $230 = ((($1)) + 20|0);
 HEAP32[$230>>2] = $229;
 $231 = ($232>>>0)<($233>>>0);
 if ($231) {
  $234 = ((($232)) + 1|0);
  HEAP32[$4>>2] = $234;
  $235 = HEAP8[$232>>0]|0;
  $$0$i106 = $235;$253 = $234;$254 = $233;
 } else {
  $236 = ((($0)) + 32|0);
  $237 = HEAP32[$236>>2]|0;
  $238 = ($237|0)==(0);
  if ($238) {
   $$0$i106 = 0;$253 = $232;$254 = $233;
  } else {
   $239 = ((($0)) + 16|0);
   $240 = HEAP32[$239>>2]|0;
   $241 = ((($0)) + 28|0);
   $242 = HEAP32[$241>>2]|0;
   $243 = ((($0)) + 40|0);
   $244 = ((($0)) + 36|0);
   $245 = HEAP32[$244>>2]|0;
   $246 = (ftCall_iiii($240|0,$242,$243,$245)|0);
   $247 = ($246|0)==(0);
   if ($247) {
    HEAP32[$236>>2] = 0;
    $248 = ((($0)) + 41|0);
    HEAP8[$243>>0] = 0;
    $$pre$phi$i103Z2D = $248;$$sink$i$i104 = $248;$343 = 0;
   } else {
    $249 = (((($0)) + 40|0) + ($246)|0);
    $$pre$i101 = HEAP8[$243>>0]|0;
    $$pre5$i102 = ((($0)) + 41|0);
    $$pre$phi$i103Z2D = $$pre5$i102;$$sink$i$i104 = $249;$343 = $$pre$i101;
   }
   HEAP32[$6>>2] = $$sink$i$i104;
   HEAP32[$4>>2] = $$pre$phi$i103Z2D;
   $$0$i106 = $343;$253 = $$pre$phi$i103Z2D;$254 = $$sink$i$i104;
  }
 }
 $250 = $$0$i106&255;
 $251 = ((($1)) + 24|0);
 HEAP32[$251>>2] = $250;
 $252 = ($253>>>0)<($254>>>0);
 if ($252) {
  $255 = ((($253)) + 1|0);
  HEAP32[$4>>2] = $255;
  $256 = HEAP8[$253>>0]|0;
  $$0$i113 = $256;$344 = $254;$345 = $255;
 } else {
  $257 = ((($0)) + 32|0);
  $258 = HEAP32[$257>>2]|0;
  $259 = ($258|0)==(0);
  if ($259) {
   $$0$i113 = 0;$344 = $254;$345 = $253;
  } else {
   $260 = ((($0)) + 16|0);
   $261 = HEAP32[$260>>2]|0;
   $262 = ((($0)) + 28|0);
   $263 = HEAP32[$262>>2]|0;
   $264 = ((($0)) + 40|0);
   $265 = ((($0)) + 36|0);
   $266 = HEAP32[$265>>2]|0;
   $267 = (ftCall_iiii($261|0,$263,$264,$266)|0);
   $268 = ($267|0)==(0);
   if ($268) {
    HEAP32[$257>>2] = 0;
    $269 = ((($0)) + 41|0);
    HEAP8[$264>>0] = 0;
    $$pre$phi$i110Z2D = $269;$$sink$i$i111 = $269;$346 = 0;
   } else {
    $270 = (((($0)) + 40|0) + ($267)|0);
    $$pre$i108 = HEAP8[$264>>0]|0;
    $$pre5$i109 = ((($0)) + 41|0);
    $$pre$phi$i110Z2D = $$pre5$i109;$$sink$i$i111 = $270;$346 = $$pre$i108;
   }
   HEAP32[$6>>2] = $$sink$i$i111;
   HEAP32[$4>>2] = $$pre$phi$i110Z2D;
   $$0$i113 = $346;$344 = $$sink$i$i111;$345 = $$pre$phi$i110Z2D;
  }
 }
 $271 = $$0$i113&255;
 $272 = ((($1)) + 28|0);
 HEAP32[$272>>2] = $271;
 $273 = ((($1)) + 32|0);
 HEAP32[$273>>2] = -1;
 $274 = ($2|0)==(0|0);
 if (!($274)) {
  HEAP32[$2>>2] = 4;
 }
 $275 = ($3|0)==(0);
 if (!($275)) {
  $$0 = 1;
  return ($$0|0);
 }
 $276 = HEAP32[$230>>2]|0;
 $277 = $276 & 128;
 $278 = ($277|0)==(0);
 if ($278) {
  $$0 = 1;
  return ($$0|0);
 }
 $279 = $276 & 7;
 $280 = 2 << $279;
 $281 = ($280|0)>(0);
 if (!($281)) {
  $$0 = 1;
  return ($$0|0);
 }
 $282 = ((($0)) + 32|0);
 $283 = ((($0)) + 16|0);
 $284 = ((($0)) + 28|0);
 $285 = ((($0)) + 40|0);
 $286 = ((($0)) + 36|0);
 $287 = ((($0)) + 41|0);
 $$016$i = 0;$289 = $345;$290 = $344;
 while(1) {
  $288 = ($289>>>0)<($290>>>0);
  do {
   if ($288) {
    $291 = ((($289)) + 1|0);
    HEAP32[$4>>2] = $291;
    $292 = HEAP8[$289>>0]|0;
    $$0$i$i = $292;
   } else {
    $293 = HEAP32[$282>>2]|0;
    $294 = ($293|0)==(0);
    if ($294) {
     $$0$i$i = 0;
     break;
    }
    $295 = HEAP32[$283>>2]|0;
    $296 = HEAP32[$284>>2]|0;
    $297 = HEAP32[$286>>2]|0;
    $298 = (ftCall_iiii($295|0,$296,$285,$297)|0);
    $299 = ($298|0)==(0);
    if ($299) {
     HEAP32[$282>>2] = 0;
     HEAP8[$285>>0] = 0;
     $$sink$i$i$i = $287;$347 = 0;
    } else {
     $300 = (((($0)) + 40|0) + ($298)|0);
     $$pre$i$i = HEAP8[$285>>0]|0;
     $$sink$i$i$i = $300;$347 = $$pre$i$i;
    }
    HEAP32[$6>>2] = $$sink$i$i$i;
    HEAP32[$4>>2] = $287;
    $$0$i$i = $347;
   }
  } while(0);
  $301 = (((((($1)) + 40|0) + ($$016$i<<2)|0)) + 2|0);
  HEAP8[$301>>0] = $$0$i$i;
  $302 = HEAP32[$4>>2]|0;
  $303 = HEAP32[$6>>2]|0;
  $304 = ($302>>>0)<($303>>>0);
  do {
   if ($304) {
    $305 = ((($302)) + 1|0);
    HEAP32[$4>>2] = $305;
    $306 = HEAP8[$302>>0]|0;
    $$0$i66 = $306;
   } else {
    $307 = HEAP32[$282>>2]|0;
    $308 = ($307|0)==(0);
    if ($308) {
     $$0$i66 = 0;
     break;
    }
    $309 = HEAP32[$283>>2]|0;
    $310 = HEAP32[$284>>2]|0;
    $311 = HEAP32[$286>>2]|0;
    $312 = (ftCall_iiii($309|0,$310,$285,$311)|0);
    $313 = ($312|0)==(0);
    if ($313) {
     HEAP32[$282>>2] = 0;
     HEAP8[$285>>0] = 0;
     $$sink$i$i64 = $287;$348 = 0;
    } else {
     $314 = (((($0)) + 40|0) + ($312)|0);
     $$pre$i61 = HEAP8[$285>>0]|0;
     $$sink$i$i64 = $314;$348 = $$pre$i61;
    }
    HEAP32[$6>>2] = $$sink$i$i64;
    HEAP32[$4>>2] = $287;
    $$0$i66 = $348;
   }
  } while(0);
  $315 = (((((($1)) + 40|0) + ($$016$i<<2)|0)) + 1|0);
  HEAP8[$315>>0] = $$0$i66;
  $316 = HEAP32[$4>>2]|0;
  $317 = HEAP32[$6>>2]|0;
  $318 = ($316>>>0)<($317>>>0);
  do {
   if ($318) {
    $319 = ((($316)) + 1|0);
    HEAP32[$4>>2] = $319;
    $320 = HEAP8[$316>>0]|0;
    $$0$i52 = $320;
   } else {
    $321 = HEAP32[$282>>2]|0;
    $322 = ($321|0)==(0);
    if ($322) {
     $$0$i52 = 0;
     break;
    }
    $323 = HEAP32[$283>>2]|0;
    $324 = HEAP32[$284>>2]|0;
    $325 = HEAP32[$286>>2]|0;
    $326 = (ftCall_iiii($323|0,$324,$285,$325)|0);
    $327 = ($326|0)==(0);
    if ($327) {
     HEAP32[$282>>2] = 0;
     HEAP8[$285>>0] = 0;
     $$sink$i$i50 = $287;$349 = 0;
    } else {
     $328 = (((($0)) + 40|0) + ($326)|0);
     $$pre$i47 = HEAP8[$285>>0]|0;
     $$sink$i$i50 = $328;$349 = $$pre$i47;
    }
    HEAP32[$6>>2] = $$sink$i$i50;
    HEAP32[$4>>2] = $287;
    $$0$i52 = $349;
   }
  } while(0);
  $329 = (((($1)) + 40|0) + ($$016$i<<2)|0);
  HEAP8[$329>>0] = $$0$i52;
  $330 = (((((($1)) + 40|0) + ($$016$i<<2)|0)) + 3|0);
  HEAP8[$330>>0] = -1;
  $331 = (($$016$i) + 1)|0;
  $exitcond$i = ($331|0)==($280|0);
  if ($exitcond$i) {
   $$0 = 1;
   break;
  }
  $$pre = HEAP32[$4>>2]|0;
  $$pre115 = HEAP32[$6>>2]|0;
  $$016$i = $331;$289 = $$pre;$290 = $$pre115;
 }
 return ($$0|0);
}
function _stbi__out_gif_code($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0;
 var $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0;
 var $64 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1&65535;
 $3 = (((($0)) + 2088|0) + ($2<<2)|0);
 $4 = HEAP16[$3>>1]|0;
 $5 = ($4<<16>>16)>(-1);
 if ($5) {
  _stbi__out_gif_code($0,$4);
 }
 $6 = ((($0)) + 34892|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ((($0)) + 34884|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = ($7|0)<($9|0);
 if (!($10)) {
  return;
 }
 $11 = ((($0)) + 34888|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (($12) + ($7))|0;
 $14 = ((($0)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (($15) + ($13)|0);
 $17 = ((($0)) + 16|0);
 $18 = HEAP32[$17>>2]|0;
 $19 = (($13|0) / 4)&-1;
 $20 = (($18) + ($19)|0);
 HEAP8[$20>>0] = 1;
 $21 = ((($0)) + 34856|0);
 $22 = HEAP32[$21>>2]|0;
 $23 = (((((($0)) + 2088|0) + ($2<<2)|0)) + 3|0);
 $24 = HEAP8[$23>>0]|0;
 $25 = $24&255;
 $26 = $25 << 2;
 $27 = (($22) + ($26)|0);
 $28 = ((($27)) + 3|0);
 $29 = HEAP8[$28>>0]|0;
 $30 = ($29&255)>(128);
 if ($30) {
  $31 = ((($27)) + 2|0);
  $32 = HEAP8[$31>>0]|0;
  HEAP8[$16>>0] = $32;
  $33 = ((($27)) + 1|0);
  $34 = HEAP8[$33>>0]|0;
  $35 = ((($16)) + 1|0);
  HEAP8[$35>>0] = $34;
  $36 = HEAP8[$27>>0]|0;
  $37 = ((($16)) + 2|0);
  HEAP8[$37>>0] = $36;
  $38 = HEAP8[$28>>0]|0;
  $39 = ((($16)) + 3|0);
  HEAP8[$39>>0] = $38;
 }
 $40 = HEAP32[$11>>2]|0;
 $41 = (($40) + 4)|0;
 HEAP32[$11>>2] = $41;
 $42 = ((($0)) + 34880|0);
 $43 = HEAP32[$42>>2]|0;
 $44 = ($41|0)<($43|0);
 if ($44) {
  return;
 }
 $45 = ((($0)) + 34872|0);
 $46 = HEAP32[$45>>2]|0;
 HEAP32[$11>>2] = $46;
 $47 = ((($0)) + 34864|0);
 $48 = HEAP32[$47>>2]|0;
 $49 = HEAP32[$6>>2]|0;
 $50 = (($49) + ($48))|0;
 HEAP32[$6>>2] = $50;
 $51 = ((($0)) + 34860|0);
 $52 = HEAP32[$8>>2]|0;
 $53 = ($50|0)<($52|0);
 if ($53) {
  return;
 }
 $54 = ((($0)) + 34896|0);
 $55 = ((($0)) + 34876|0);
 $$pre = HEAP32[$51>>2]|0;
 $57 = $$pre;
 while(1) {
  $56 = ($57|0)>(0);
  if (!($56)) {
   label = 11;
   break;
  }
  $58 = HEAP32[$54>>2]|0;
  $59 = $58 << $57;
  HEAP32[$47>>2] = $59;
  $60 = HEAP32[$55>>2]|0;
  $61 = $59 >> 1;
  $62 = (($60) + ($61))|0;
  HEAP32[$6>>2] = $62;
  $63 = (($57) + -1)|0;
  HEAP32[$51>>2] = $63;
  $64 = ($62|0)<($52|0);
  if ($64) {
   label = 11;
   break;
  } else {
   $57 = $63;
  }
 }
 if ((label|0) == 11) {
  return;
 }
}
function _stbi__do_zlib($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$$i$i = 0, $$0$i = 0, $$0$i$i$i = 0, $$0$i$i$i$i = 0, $$0$i$i$i$i$i = 0, $$0$i$i$i$i25$i = 0, $$0$i$i$i$i35$i = 0, $$0$i$i$i103$i$i = 0, $$0$i$i$i20$i = 0, $$0$i$i$i73$i$i = 0, $$0$i$i$i79$i$i = 0, $$0$i$i$i80$i$i = 0, $$0$i$i$i85$i$i = 0, $$0$i$i$i91$i$i = 0, $$0$i$i$i97$i$i = 0, $$0$i$i29$i = 0, $$0$i12$i$i = 0, $$0$i38$i = 0, $$0$lcssa$i$i = 0, $$029$i$i$i = 0;
 var $$029$i$i31$i = 0, $$029$i74$i$i = 0, $$039$i$i = 0, $$061$i$i = 0, $$061$pn$i$i = 0, $$063$i$i = 0, $$064$i$i = 0, $$065132$i$i = 0, $$066131$i$i = 0, $$067$i$i = 0, $$070$i$i = 0, $$070$i$i$be = 0, $$138$i$i = 0, $$171$i$i = 0, $$266$i$i = 0, $$272$i$i = 0, $$369$ph$i$i = 0, $$4$i$i = 0, $$5$i$i = 0, $$lcssa$i$i = 0;
 var $$pr$i = 0, $$pr$i$i = 0, $$pre$i$i$i = 0, $$pre$i$i$i$i = 0, $$pre$i$i$pre$i = 0, $$pre$i$i102$i$i = 0, $$pre$i$i79$i$i = 0, $$pre$i$i84$i$i = 0, $$pre$i$i90$i$i = 0, $$pre$i$i96$i$i = 0, $$pre$i28$i = 0, $$pre$phi115$iZ2D = 0, $$pre114$i = 0, $$pre54$i$i = 0, $$pre55$i$i = 0, $$promoted$i$i = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0;
 var $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0;
 var $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0;
 var $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0;
 var $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0;
 var $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0;
 var $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0;
 var $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0;
 var $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0;
 var $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $99 = 0, $exitcond$i$i = 0, $exitcond52$i$i = 0, $or$cond = 0, $or$cond2 = 0, $scevgep$i$i = 0, $scevgep118$i$i = 0, $smax$i$i = 0, $trunc$i = 0, $trunc$i$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 2512|0;
 $5 = sp + 488|0;
 $6 = sp + 32|0;
 $7 = sp;
 $8 = ((($0)) + 20|0);
 HEAP32[$8>>2] = $1;
 $9 = ((($0)) + 16|0);
 HEAP32[$9>>2] = $1;
 $10 = (($1) + ($2)|0);
 $11 = ((($0)) + 24|0);
 HEAP32[$11>>2] = $10;
 $12 = ((($0)) + 28|0);
 HEAP32[$12>>2] = $3;
 $13 = ($4|0)==(0);
 if ($13) {
  $$pre114$i = ((($0)) + 4|0);
  $$pre$phi115$iZ2D = $$pre114$i;
 } else {
  $14 = HEAP32[$0>>2]|0;
  $15 = ((($0)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = ($14>>>0)<($16>>>0);
  if ($17) {
   $18 = ((($14)) + 1|0);
   HEAP32[$0>>2] = $18;
   $19 = HEAP8[$14>>0]|0;
   $$0$i$i$i = $19;$23 = $18;
  } else {
   $$0$i$i$i = 0;$23 = $14;
  }
  $20 = $$0$i$i$i&255;
  $21 = $20 & 15;
  $22 = ($23>>>0)<($16>>>0);
  if ($22) {
   $24 = ((($23)) + 1|0);
   HEAP32[$0>>2] = $24;
   $25 = HEAP8[$23>>0]|0;
   $$0$i12$i$i = $25;
  } else {
   $$0$i12$i$i = 0;
  }
  $26 = $$0$i12$i$i&255;
  $27 = $20 << 8;
  $28 = $27 | $26;
  $29 = (($28>>>0) % 31)&-1;
  $30 = ($29|0)==(0);
  $31 = $26 & 32;
  $32 = ($31|0)==(0);
  $or$cond = $30 & $32;
  $33 = ($21|0)==(8);
  $or$cond2 = $or$cond & $33;
  if ($or$cond2) {
   $$pre$phi115$iZ2D = $15;
  } else {
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
  }
 }
 $34 = ((($0)) + 8|0);
 HEAP32[$34>>2] = 0;
 $35 = ((($0)) + 12|0);
 HEAP32[$35>>2] = 0;
 $36 = ((($0)) + 32|0);
 $37 = ((($0)) + 2052|0);
 $38 = ((($5)) + 1|0);
 $39 = ((($5)) + 3|0);
 $40 = ((($5)) + 2|0);
 $$pre$i$i$i = 0;$144 = $1;$42 = 0;
 L12: while(1) {
  $41 = ($42|0)<(1);
  if ($41) {
   $44 = $42;$46 = $$pre$i$i$i;
   while(1) {
    $43 = 1 << $44;
    $45 = ($46>>>0)<($43>>>0);
    if (!($45)) {
     label = 13;
     break L12;
    }
    $47 = HEAP32[$0>>2]|0;
    $48 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
    $49 = ($47>>>0)<($48>>>0);
    if ($49) {
     $50 = ((($47)) + 1|0);
     HEAP32[$0>>2] = $50;
     $51 = HEAP8[$47>>0]|0;
     $$0$i$i$i$i = $51;
    } else {
     $$0$i$i$i$i = 0;
    }
    $52 = $$0$i$i$i$i&255;
    $53 = $52 << $44;
    $54 = $53 | $46;
    HEAP32[$35>>2] = $54;
    $55 = (($44) + 8)|0;
    HEAP32[$34>>2] = $55;
    $56 = ($44|0)<(17);
    if ($56) {
     $44 = $55;$46 = $54;
    } else {
     $58 = $54;$61 = $55;
     break;
    }
   }
  } else {
   $58 = $$pre$i$i$i;$61 = $42;
  }
  $57 = $58 & 1;
  $59 = $58 >>> 1;
  HEAP32[$35>>2] = $59;
  $60 = (($61) + -1)|0;
  HEAP32[$34>>2] = $60;
  $62 = ($61|0)<(3);
  if ($62) {
   $64 = $60;$66 = $59;
   while(1) {
    $63 = 1 << $64;
    $65 = ($66>>>0)<($63>>>0);
    if (!($65)) {
     label = 20;
     break L12;
    }
    $67 = HEAP32[$0>>2]|0;
    $68 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
    $69 = ($67>>>0)<($68>>>0);
    if ($69) {
     $70 = ((($67)) + 1|0);
     HEAP32[$0>>2] = $70;
     $71 = HEAP8[$67>>0]|0;
     $$0$i$i$i20$i = $71;
    } else {
     $$0$i$i$i20$i = 0;
    }
    $72 = $$0$i$i$i20$i&255;
    $73 = $72 << $64;
    $74 = $73 | $66;
    HEAP32[$35>>2] = $74;
    $75 = (($64) + 8)|0;
    HEAP32[$34>>2] = $75;
    $76 = ($64|0)<(17);
    if ($76) {
     $64 = $75;$66 = $74;
    } else {
     $78 = $74;$80 = $75;
     break;
    }
   }
  } else {
   $78 = $59;$80 = $60;
  }
  $77 = $78 >>> 2;
  HEAP32[$35>>2] = $77;
  $79 = (($80) + -2)|0;
  HEAP32[$34>>2] = $79;
  $trunc$i = $78&255;
  $trunc$i$clear = $trunc$i & 3;
  switch ($trunc$i$clear<<24>>24) {
  case 3:  {
   $$0$i = 0;
   label = 173;
   break L12;
   break;
  }
  case 0:  {
   $81 = $79 & 7;
   $82 = ($81|0)==(0);
   if ($82) {
    $$pr$i$i = $79;$$promoted$i$i = $77;
   } else {
    $83 = ($79|0)<($81|0);
    if ($83) {
     $85 = $79;$87 = $77;
     while(1) {
      $84 = 1 << $85;
      $86 = ($87>>>0)<($84>>>0);
      if (!($86)) {
       label = 29;
       break L12;
      }
      $88 = HEAP32[$0>>2]|0;
      $89 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
      $90 = ($88>>>0)<($89>>>0);
      if ($90) {
       $91 = ((($88)) + 1|0);
       HEAP32[$0>>2] = $91;
       $92 = HEAP8[$88>>0]|0;
       $$0$i$i$i$i25$i = $92;
      } else {
       $$0$i$i$i$i25$i = 0;
      }
      $93 = $$0$i$i$i$i25$i&255;
      $94 = $93 << $85;
      $95 = $94 | $87;
      HEAP32[$35>>2] = $95;
      $96 = (($85) + 8)|0;
      HEAP32[$34>>2] = $96;
      $97 = ($85|0)<(17);
      if ($97) {
       $85 = $96;$87 = $95;
      } else {
       $101 = $96;$99 = $95;
       break;
      }
     }
    } else {
     $101 = $79;$99 = $77;
    }
    $98 = $99 >>> $81;
    HEAP32[$35>>2] = $98;
    $100 = (($101) - ($81))|0;
    HEAP32[$34>>2] = $100;
    $$pr$i$i = $100;$$promoted$i$i = $98;
   }
   $102 = ($$pr$i$i|0)>(0);
   if ($102) {
    $103 = $$pr$i$i ^ -1;
    $104 = ($103|0)>(-9);
    $smax$i$i = $104 ? $103 : -9;
    $105 = (($$pr$i$i) + 8)|0;
    $106 = (($105) + ($smax$i$i))|0;
    $107 = $106 >>> 3;
    $108 = (($107) + 1)|0;
    $$039$i$i = 0;$110 = $$promoted$i$i;
    while(1) {
     $109 = $110&255;
     $111 = (($$039$i$i) + 1)|0;
     $112 = (($5) + ($$039$i$i)|0);
     HEAP8[$112>>0] = $109;
     $113 = $110 >>> 8;
     $exitcond52$i$i = ($111|0)==($108|0);
     if ($exitcond52$i$i) {
      break;
     } else {
      $$039$i$i = $111;$110 = $113;
     }
    }
    $114 = $106 & -8;
    $115 = (($$pr$i$i) + -8)|0;
    $116 = (($115) - ($114))|0;
    HEAP32[$35>>2] = $113;
    HEAP32[$34>>2] = $116;
    $$0$lcssa$i$i = $108;$$lcssa$i$i = $116;
   } else {
    $$0$lcssa$i$i = 0;$$lcssa$i$i = $$pr$i$i;
   }
   $117 = ($$lcssa$i$i|0)==(0);
   if (!($117)) {
    label = 39;
    break L12;
   }
   $118 = ($$0$lcssa$i$i>>>0)<(4);
   if ($118) {
    $$pre$i28$i = HEAP32[$0>>2]|0;
    $$pre54$i$i = HEAP32[$$pre$phi115$iZ2D>>2]|0;
    $$138$i$i = $$0$lcssa$i$i;$120 = $$pre$i28$i;
    while(1) {
     $119 = ($120>>>0)<($$pre54$i$i>>>0);
     if ($119) {
      $121 = ((($120)) + 1|0);
      HEAP32[$0>>2] = $121;
      $122 = HEAP8[$120>>0]|0;
      $$0$i$i29$i = $122;$469 = $121;
     } else {
      $$0$i$i29$i = 0;$469 = $120;
     }
     $123 = (($$138$i$i) + 1)|0;
     $124 = (($5) + ($$138$i$i)|0);
     HEAP8[$124>>0] = $$0$i$i29$i;
     $exitcond$i$i = ($123|0)==(4);
     if ($exitcond$i$i) {
      break;
     } else {
      $$138$i$i = $123;$120 = $469;
     }
    }
   }
   $125 = HEAP8[$38>>0]|0;
   $126 = $125&255;
   $127 = $126 << 8;
   $128 = HEAP8[$5>>0]|0;
   $129 = $128&255;
   $130 = $127 | $129;
   $131 = HEAP8[$39>>0]|0;
   $132 = $131&255;
   $133 = $132 << 8;
   $134 = HEAP8[$40>>0]|0;
   $135 = $134&255;
   $136 = $133 | $135;
   $137 = $130 ^ 65535;
   $138 = ($136|0)==($137|0);
   if (!($138)) {
    $$sink = 139869;
    label = 53;
    break L12;
   }
   $139 = HEAP32[$0>>2]|0;
   $140 = (($139) + ($130)|0);
   $141 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
   $142 = ($140>>>0)>($141>>>0);
   if ($142) {
    $$sink = 139882;
    label = 53;
    break L12;
   }
   $143 = (($144) + ($130)|0);
   $145 = HEAP32[$11>>2]|0;
   $146 = ($143>>>0)>($145>>>0);
   $147 = $145;
   if ($146) {
    $148 = HEAP32[$12>>2]|0;
    $149 = ($148|0)==(0);
    if ($149) {
     $$sink = 139899;
     label = 53;
     break L12;
    }
    $150 = HEAP32[$8>>2]|0;
    $151 = $144;
    $152 = (($151) - ($150))|0;
    $153 = (($147) - ($150))|0;
    $154 = (($152) + ($130))|0;
    $$029$i$i31$i = $153;
    while(1) {
     $155 = ($154|0)>($$029$i$i31$i|0);
     $156 = $$029$i$i31$i << 1;
     if ($155) {
      $$029$i$i31$i = $156;
     } else {
      break;
     }
    }
    $157 = $150;
    $158 = (_realloc($157,$$029$i$i31$i)|0);
    $159 = ($158|0)==(0|0);
    if ($159) {
     $$sink = 139270;
     label = 53;
     break L12;
    }
    HEAP32[$8>>2] = $158;
    $160 = (($158) + ($152)|0);
    HEAP32[$9>>2] = $160;
    $161 = (($158) + ($$029$i$i31$i)|0);
    HEAP32[$11>>2] = $161;
    $$pre55$i$i = HEAP32[$0>>2]|0;
    $162 = $160;$163 = $$pre55$i$i;
   } else {
    $162 = $144;$163 = $139;
   }
   _memcpy(($162|0),($163|0),($130|0))|0;
   $164 = HEAP32[$0>>2]|0;
   $165 = (($164) + ($130)|0);
   HEAP32[$0>>2] = $165;
   $166 = HEAP32[$9>>2]|0;
   $167 = (($166) + ($130)|0);
   HEAP32[$9>>2] = $167;
   $468 = $167;
   break;
  }
  case 1:  {
   $168 = (_stbi__zbuild_huffman($36,113776,288)|0);
   $169 = ($168|0)==(0);
   if ($169) {
    $$0$i = 0;
    label = 173;
    break L12;
   }
   $170 = (_stbi__zbuild_huffman($37,114064,32)|0);
   $171 = ($170|0)==(0);
   if ($171) {
    $$0$i = 0;
    label = 173;
    break L12;
   } else {
    label = 126;
   }
   break;
  }
  default: {
   $172 = ($80|0)<(7);
   if ($172) {
    $174 = $79;$176 = $77;
    while(1) {
     $173 = 1 << $174;
     $175 = ($176>>>0)<($173>>>0);
     if (!($175)) {
      label = 60;
      break L12;
     }
     $177 = HEAP32[$0>>2]|0;
     $178 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
     $179 = ($177>>>0)<($178>>>0);
     if ($179) {
      $180 = ((($177)) + 1|0);
      HEAP32[$0>>2] = $180;
      $181 = HEAP8[$177>>0]|0;
      $$0$i$i$i$i35$i = $181;
     } else {
      $$0$i$i$i$i35$i = 0;
     }
     $182 = $$0$i$i$i$i35$i&255;
     $183 = $182 << $174;
     $184 = $183 | $176;
     HEAP32[$35>>2] = $184;
     $185 = (($174) + 8)|0;
     HEAP32[$34>>2] = $185;
     $186 = ($174|0)<(17);
     if ($186) {
      $174 = $185;$176 = $184;
     } else {
      $188 = $184;$191 = $185;
      break;
     }
    }
   } else {
    $188 = $77;$191 = $79;
   }
   $187 = $188 & 31;
   $189 = $188 >>> 5;
   HEAP32[$35>>2] = $189;
   $190 = (($191) + -5)|0;
   HEAP32[$34>>2] = $190;
   $192 = (($187) + 257)|0;
   $193 = ($191|0)<(10);
   if ($193) {
    $195 = $190;$197 = $189;
    while(1) {
     $194 = 1 << $195;
     $196 = ($197>>>0)<($194>>>0);
     if (!($196)) {
      label = 67;
      break L12;
     }
     $198 = HEAP32[$0>>2]|0;
     $199 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
     $200 = ($198>>>0)<($199>>>0);
     if ($200) {
      $201 = ((($198)) + 1|0);
      HEAP32[$0>>2] = $201;
      $202 = HEAP8[$198>>0]|0;
      $$0$i$i$i73$i$i = $202;
     } else {
      $$0$i$i$i73$i$i = 0;
     }
     $203 = $$0$i$i$i73$i$i&255;
     $204 = $203 << $195;
     $205 = $204 | $197;
     HEAP32[$35>>2] = $205;
     $206 = (($195) + 8)|0;
     HEAP32[$34>>2] = $206;
     $207 = ($195|0)<(17);
     if ($207) {
      $195 = $206;$197 = $205;
     } else {
      $209 = $205;$212 = $206;
      break;
     }
    }
   } else {
    $209 = $189;$212 = $190;
   }
   $208 = $209 & 31;
   $210 = $209 >>> 5;
   HEAP32[$35>>2] = $210;
   $211 = (($212) + -5)|0;
   HEAP32[$34>>2] = $211;
   $213 = (($208) + 1)|0;
   $214 = ($212|0)<(9);
   if ($214) {
    $216 = $211;$218 = $210;
    while(1) {
     $215 = 1 << $216;
     $217 = ($218>>>0)<($215>>>0);
     if (!($217)) {
      label = 74;
      break L12;
     }
     $219 = HEAP32[$0>>2]|0;
     $220 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
     $221 = ($219>>>0)<($220>>>0);
     if ($221) {
      $222 = ((($219)) + 1|0);
      HEAP32[$0>>2] = $222;
      $223 = HEAP8[$219>>0]|0;
      $$0$i$i$i79$i$i = $223;
     } else {
      $$0$i$i$i79$i$i = 0;
     }
     $224 = $$0$i$i$i79$i$i&255;
     $225 = $224 << $216;
     $226 = $225 | $218;
     HEAP32[$35>>2] = $226;
     $227 = (($216) + 8)|0;
     HEAP32[$34>>2] = $227;
     $228 = ($216|0)<(17);
     if ($228) {
      $216 = $227;$218 = $226;
     } else {
      $230 = $226;$233 = $227;
      break;
     }
    }
   } else {
    $230 = $210;$233 = $211;
   }
   $229 = $230 & 15;
   $231 = $230 >>> 4;
   HEAP32[$35>>2] = $231;
   $232 = (($233) + -4)|0;
   HEAP32[$34>>2] = $232;
   $234 = (($229) + 4)|0;
   $235 = (($213) + ($192))|0;
   ;HEAP32[$7>>2]=0|0;HEAP32[$7+4>>2]=0|0;HEAP32[$7+8>>2]=0|0;HEAP32[$7+12>>2]=0|0;HEAP16[$7+16>>1]=0|0;HEAP8[$7+18>>0]=0|0;
   $$065132$i$i = 0;$$pre$i$i84$i$i = $231;$237 = $232;
   while(1) {
    $236 = ($237|0)<(3);
    if ($236) {
     $239 = $237;$241 = $$pre$i$i84$i$i;
     while(1) {
      $238 = 1 << $239;
      $240 = ($241>>>0)<($238>>>0);
      if (!($240)) {
       label = 82;
       break L12;
      }
      $242 = HEAP32[$0>>2]|0;
      $243 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
      $244 = ($242>>>0)<($243>>>0);
      if ($244) {
       $245 = ((($242)) + 1|0);
       HEAP32[$0>>2] = $245;
       $246 = HEAP8[$242>>0]|0;
       $$0$i$i$i85$i$i = $246;
      } else {
       $$0$i$i$i85$i$i = 0;
      }
      $247 = $$0$i$i$i85$i$i&255;
      $248 = $247 << $239;
      $249 = $248 | $241;
      HEAP32[$35>>2] = $249;
      $250 = (($239) + 8)|0;
      HEAP32[$34>>2] = $250;
      $251 = ($239|0)<(17);
      if ($251) {
       $239 = $250;$241 = $249;
      } else {
       $253 = $249;$256 = $250;
       break;
      }
     }
    } else {
     $253 = $$pre$i$i84$i$i;$256 = $237;
    }
    $252 = $253 & 7;
    $254 = $253 >>> 3;
    HEAP32[$35>>2] = $254;
    $255 = (($256) + -3)|0;
    HEAP32[$34>>2] = $255;
    $257 = $252&255;
    $258 = (114096 + ($$065132$i$i)|0);
    $259 = HEAP8[$258>>0]|0;
    $260 = $259&255;
    $261 = (($7) + ($260)|0);
    HEAP8[$261>>0] = $257;
    $262 = (($$065132$i$i) + 1)|0;
    $263 = ($262>>>0)<($234>>>0);
    if ($263) {
     $$065132$i$i = $262;$$pre$i$i84$i$i = $254;$237 = $255;
    } else {
     break;
    }
   }
   $264 = (_stbi__zbuild_huffman($5,$7,19)|0);
   $265 = ($264|0)==(0);
   L73: do {
    if ($265) {
     $$4$i$i = 0;
    } else {
     $$066131$i$i = 0;
     while(1) {
      $266 = (_stbi__zhuffman_decode($0,$5)|0);
      $267 = ($266>>>0)>(18);
      if ($267) {
       $$4$i$i = 0;
       break L73;
      }
      $268 = ($266|0)<(16);
      if ($268) {
       $269 = $266&255;
       $270 = (($6) + ($$066131$i$i)|0);
       HEAP8[$270>>0] = $269;
       $$061$pn$i$i = 1;
      } else {
       switch ($266|0) {
       case 16:  {
        $271 = HEAP32[$34>>2]|0;
        $272 = ($271|0)<(2);
        $$pre$i$i90$i$i = HEAP32[$35>>2]|0;
        if ($272) {
         $274 = $271;$276 = $$pre$i$i90$i$i;
         while(1) {
          $273 = 1 << $274;
          $275 = ($276>>>0)<($273>>>0);
          if (!($275)) {
           label = 96;
           break L12;
          }
          $277 = HEAP32[$0>>2]|0;
          $278 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
          $279 = ($277>>>0)<($278>>>0);
          if ($279) {
           $280 = ((($277)) + 1|0);
           HEAP32[$0>>2] = $280;
           $281 = HEAP8[$277>>0]|0;
           $$0$i$i$i91$i$i = $281;
          } else {
           $$0$i$i$i91$i$i = 0;
          }
          $282 = $$0$i$i$i91$i$i&255;
          $283 = $282 << $274;
          $284 = $283 | $276;
          HEAP32[$35>>2] = $284;
          $285 = (($274) + 8)|0;
          HEAP32[$34>>2] = $285;
          $286 = ($274|0)<(17);
          if ($286) {
           $274 = $285;$276 = $284;
          } else {
           $288 = $284;$290 = $285;
           break;
          }
         }
        } else {
         $288 = $$pre$i$i90$i$i;$290 = $271;
        }
        $287 = $288 >>> 2;
        HEAP32[$35>>2] = $287;
        $289 = (($290) + -2)|0;
        HEAP32[$34>>2] = $289;
        $291 = ($$066131$i$i|0)==(0);
        if ($291) {
         $$4$i$i = 0;
         break L73;
        }
        $292 = $288 & 3;
        $293 = (($292) + 3)|0;
        $294 = (($$066131$i$i) + -1)|0;
        $295 = (($6) + ($294)|0);
        $296 = HEAP8[$295>>0]|0;
        $$0$i38$i = $296;$$061$i$i = $293;
        break;
       }
       case 17:  {
        $297 = HEAP32[$34>>2]|0;
        $298 = ($297|0)<(3);
        $$pre$i$i96$i$i = HEAP32[$35>>2]|0;
        if ($298) {
         $300 = $297;$302 = $$pre$i$i96$i$i;
         while(1) {
          $299 = 1 << $300;
          $301 = ($302>>>0)<($299>>>0);
          if (!($301)) {
           label = 105;
           break L12;
          }
          $303 = HEAP32[$0>>2]|0;
          $304 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
          $305 = ($303>>>0)<($304>>>0);
          if ($305) {
           $306 = ((($303)) + 1|0);
           HEAP32[$0>>2] = $306;
           $307 = HEAP8[$303>>0]|0;
           $$0$i$i$i97$i$i = $307;
          } else {
           $$0$i$i$i97$i$i = 0;
          }
          $308 = $$0$i$i$i97$i$i&255;
          $309 = $308 << $300;
          $310 = $309 | $302;
          HEAP32[$35>>2] = $310;
          $311 = (($300) + 8)|0;
          HEAP32[$34>>2] = $311;
          $312 = ($300|0)<(17);
          if ($312) {
           $300 = $311;$302 = $310;
          } else {
           $314 = $310;$317 = $311;
           break;
          }
         }
        } else {
         $314 = $$pre$i$i96$i$i;$317 = $297;
        }
        $313 = $314 & 7;
        $315 = $314 >>> 3;
        HEAP32[$35>>2] = $315;
        $316 = (($317) + -3)|0;
        HEAP32[$34>>2] = $316;
        $318 = (($313) + 3)|0;
        $$0$i38$i = 0;$$061$i$i = $318;
        break;
       }
       case 18:  {
        $319 = HEAP32[$34>>2]|0;
        $320 = ($319|0)<(7);
        $$pre$i$i102$i$i = HEAP32[$35>>2]|0;
        if ($320) {
         $322 = $319;$324 = $$pre$i$i102$i$i;
         while(1) {
          $321 = 1 << $322;
          $323 = ($324>>>0)<($321>>>0);
          if (!($323)) {
           label = 114;
           break L12;
          }
          $325 = HEAP32[$0>>2]|0;
          $326 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
          $327 = ($325>>>0)<($326>>>0);
          if ($327) {
           $328 = ((($325)) + 1|0);
           HEAP32[$0>>2] = $328;
           $329 = HEAP8[$325>>0]|0;
           $$0$i$i$i103$i$i = $329;
          } else {
           $$0$i$i$i103$i$i = 0;
          }
          $330 = $$0$i$i$i103$i$i&255;
          $331 = $330 << $322;
          $332 = $331 | $324;
          HEAP32[$35>>2] = $332;
          $333 = (($322) + 8)|0;
          HEAP32[$34>>2] = $333;
          $334 = ($322|0)<(17);
          if ($334) {
           $322 = $333;$324 = $332;
          } else {
           $336 = $332;$339 = $333;
           break;
          }
         }
        } else {
         $336 = $$pre$i$i102$i$i;$339 = $319;
        }
        $335 = $336 & 127;
        $337 = $336 >>> 7;
        HEAP32[$35>>2] = $337;
        $338 = (($339) + -7)|0;
        HEAP32[$34>>2] = $338;
        $340 = (($335) + 11)|0;
        $$0$i38$i = 0;$$061$i$i = $340;
        break;
       }
       default: {
        label = 110;
        break L12;
       }
       }
       $341 = (($235) - ($$066131$i$i))|0;
       $342 = ($341|0)<($$061$i$i|0);
       if ($342) {
        $$4$i$i = 0;
        break L73;
       }
       $343 = (($6) + ($$066131$i$i)|0);
       _memset(($343|0),($$0$i38$i|0),($$061$i$i|0))|0;
       $$061$pn$i$i = $$061$i$i;
      }
      $$369$ph$i$i = (($$061$pn$i$i) + ($$066131$i$i))|0;
      $344 = ($235|0)>($$369$ph$i$i|0);
      if ($344) {
       $$066131$i$i = $$369$ph$i$i;
      } else {
       break;
      }
     }
     $345 = ($235|0)==($$369$ph$i$i|0);
     if ($345) {
      $346 = (_stbi__zbuild_huffman($36,$6,$192)|0);
      $347 = ($346|0)==(0);
      if ($347) {
       $$4$i$i = 0;
      } else {
       $348 = (($6) + ($192)|0);
       $349 = (_stbi__zbuild_huffman($37,$348,$213)|0);
       $350 = ($349|0)!=(0);
       $$$i$i = $350&1;
       $$4$i$i = $$$i$i;
      }
     } else {
      $$4$i$i = 0;
     }
    }
   } while(0);
   $351 = ($$4$i$i|0)==(0);
   if ($351) {
    $$0$i = 0;
    label = 173;
    break L12;
   } else {
    label = 126;
   }
  }
  }
  if ((label|0) == 126) {
   label = 0;
   $352 = HEAP32[$9>>2]|0;
   $$070$i$i = $352;
   L162: while(1) {
    $353 = (_stbi__zhuffman_decode($0,$36)|0);
    $354 = ($353|0)<(256);
    do {
     if ($354) {
      $355 = ($353|0)<(0);
      if ($355) {
       $$0$i = 0;
       label = 173;
       break L12;
      }
      $356 = HEAP32[$11>>2]|0;
      $357 = ($$070$i$i>>>0)<($356>>>0);
      $358 = $356;
      if ($357) {
       $$171$i$i = $$070$i$i;
      } else {
       HEAP32[$9>>2] = $$070$i$i;
       $359 = HEAP32[$12>>2]|0;
       $360 = ($359|0)==(0);
       if ($360) {
        $$0$i = 0;
        label = 173;
        break L12;
       }
       $361 = HEAP32[$8>>2]|0;
       $362 = $$070$i$i;
       $363 = (($362) - ($361))|0;
       $364 = (($358) - ($361))|0;
       $$029$i74$i$i = $364;
       while(1) {
        $365 = ($363|0)<($$029$i74$i$i|0);
        $366 = $$029$i74$i$i << 1;
        if ($365) {
         break;
        } else {
         $$029$i74$i$i = $366;
        }
       }
       $367 = $361;
       $368 = (_realloc($367,$$029$i74$i$i)|0);
       $369 = ($368|0)==(0|0);
       if ($369) {
        $$0$i = 0;
        label = 173;
        break L12;
       }
       HEAP32[$8>>2] = $368;
       $370 = (($368) + ($363)|0);
       HEAP32[$9>>2] = $370;
       $371 = (($368) + ($$029$i74$i$i)|0);
       HEAP32[$11>>2] = $371;
       $$171$i$i = $370;
      }
      $372 = $353&255;
      $373 = ((($$171$i$i)) + 1|0);
      HEAP8[$$171$i$i>>0] = $372;
      $$070$i$i$be = $373;
     } else {
      $374 = ($353|0)==(256);
      if ($374) {
       break L162;
      }
      $375 = (($353) + -257)|0;
      $376 = (114128 + ($375<<2)|0);
      $377 = HEAP32[$376>>2]|0;
      $378 = (($353) + -265)|0;
      $379 = ($378>>>0)<(20);
      if ($379) {
       $380 = (114256 + ($375<<2)|0);
       $381 = HEAP32[$380>>2]|0;
       $382 = HEAP32[$34>>2]|0;
       $383 = ($382|0)<($381|0);
       $$pre$i$i$i$i = HEAP32[$35>>2]|0;
       if ($383) {
        $385 = $382;$387 = $$pre$i$i$i$i;
        while(1) {
         $384 = 1 << $385;
         $386 = ($387>>>0)<($384>>>0);
         if (!($386)) {
          label = 141;
          break L12;
         }
         $388 = HEAP32[$0>>2]|0;
         $389 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
         $390 = ($388>>>0)<($389>>>0);
         if ($390) {
          $391 = ((($388)) + 1|0);
          HEAP32[$0>>2] = $391;
          $392 = HEAP8[$388>>0]|0;
          $$0$i$i$i$i$i = $392;
         } else {
          $$0$i$i$i$i$i = 0;
         }
         $393 = $$0$i$i$i$i$i&255;
         $394 = $393 << $385;
         $395 = $394 | $387;
         HEAP32[$35>>2] = $395;
         $396 = (($385) + 8)|0;
         HEAP32[$34>>2] = $396;
         $397 = ($385|0)<(17);
         if ($397) {
          $385 = $396;$387 = $395;
         } else {
          $401 = $395;$404 = $396;
          break;
         }
        }
       } else {
        $401 = $$pre$i$i$i$i;$404 = $382;
       }
       $398 = 1 << $381;
       $399 = (($398) + -1)|0;
       $400 = $401 & $399;
       $402 = $401 >>> $381;
       HEAP32[$35>>2] = $402;
       $403 = (($404) - ($381))|0;
       HEAP32[$34>>2] = $403;
       $405 = (($400) + ($377))|0;
       $$064$i$i = $405;
      } else {
       $$064$i$i = $377;
      }
      $406 = (_stbi__zhuffman_decode($0,$37)|0);
      $407 = ($406|0)<(0);
      if ($407) {
       $$0$i = 0;
       label = 173;
       break L12;
      }
      $408 = (114384 + ($406<<2)|0);
      $409 = HEAP32[$408>>2]|0;
      $410 = (($406) + -4)|0;
      $411 = ($410>>>0)<(26);
      if ($411) {
       $412 = (114512 + ($406<<2)|0);
       $413 = HEAP32[$412>>2]|0;
       $414 = HEAP32[$34>>2]|0;
       $415 = ($414|0)<($413|0);
       $$pre$i$i79$i$i = HEAP32[$35>>2]|0;
       if ($415) {
        $417 = $414;$419 = $$pre$i$i79$i$i;
        while(1) {
         $416 = 1 << $417;
         $418 = ($419>>>0)<($416>>>0);
         if (!($418)) {
          label = 151;
          break L12;
         }
         $420 = HEAP32[$0>>2]|0;
         $421 = HEAP32[$$pre$phi115$iZ2D>>2]|0;
         $422 = ($420>>>0)<($421>>>0);
         if ($422) {
          $423 = ((($420)) + 1|0);
          HEAP32[$0>>2] = $423;
          $424 = HEAP8[$420>>0]|0;
          $$0$i$i$i80$i$i = $424;
         } else {
          $$0$i$i$i80$i$i = 0;
         }
         $425 = $$0$i$i$i80$i$i&255;
         $426 = $425 << $417;
         $427 = $426 | $419;
         HEAP32[$35>>2] = $427;
         $428 = (($417) + 8)|0;
         HEAP32[$34>>2] = $428;
         $429 = ($417|0)<(17);
         if ($429) {
          $417 = $428;$419 = $427;
         } else {
          $433 = $427;$436 = $428;
          break;
         }
        }
       } else {
        $433 = $$pre$i$i79$i$i;$436 = $414;
       }
       $430 = 1 << $413;
       $431 = (($430) + -1)|0;
       $432 = $433 & $431;
       $434 = $433 >>> $413;
       HEAP32[$35>>2] = $434;
       $435 = (($436) - ($413))|0;
       HEAP32[$34>>2] = $435;
       $437 = (($432) + ($409))|0;
       $$063$i$i = $437;
      } else {
       $$063$i$i = $409;
      }
      $438 = HEAP32[$8>>2]|0;
      $439 = $$070$i$i;
      $440 = (($439) - ($438))|0;
      $441 = ($440|0)<($$063$i$i|0);
      if ($441) {
       $$0$i = 0;
       label = 173;
       break L12;
      }
      $442 = (($$070$i$i) + ($$064$i$i)|0);
      $443 = HEAP32[$11>>2]|0;
      $444 = ($442>>>0)>($443>>>0);
      $445 = $443;
      if ($444) {
       HEAP32[$9>>2] = $$070$i$i;
       $446 = HEAP32[$12>>2]|0;
       $447 = ($446|0)==(0);
       if ($447) {
        $$0$i = 0;
        label = 173;
        break L12;
       }
       $448 = (($445) - ($438))|0;
       $449 = (($440) + ($$064$i$i))|0;
       $$029$i$i$i = $448;
       while(1) {
        $450 = ($449|0)>($$029$i$i$i|0);
        $451 = $$029$i$i$i << 1;
        if ($450) {
         $$029$i$i$i = $451;
        } else {
         break;
        }
       }
       $452 = $438;
       $453 = (_realloc($452,$$029$i$i$i)|0);
       $454 = ($453|0)==(0|0);
       if ($454) {
        $$0$i = 0;
        label = 173;
        break L12;
       }
       HEAP32[$8>>2] = $453;
       $455 = (($453) + ($440)|0);
       HEAP32[$9>>2] = $455;
       $456 = (($453) + ($$029$i$i$i)|0);
       HEAP32[$11>>2] = $456;
       $$272$i$i = $455;
      } else {
       $$272$i$i = $$070$i$i;
      }
      $457 = (0 - ($$063$i$i))|0;
      $458 = (($$272$i$i) + ($457)|0);
      $459 = ($$063$i$i|0)==(1);
      $460 = ($$064$i$i|0)==(0);
      if ($459) {
       if ($460) {
        $$070$i$i$be = $$272$i$i;
        break;
       }
       $461 = HEAP8[$458>>0]|0;
       _memset(($$272$i$i|0),($461|0),($$064$i$i|0))|0;
       $scevgep118$i$i = (($$272$i$i) + ($$064$i$i)|0);
       $$070$i$i$be = $scevgep118$i$i;
       break;
      }
      if ($460) {
       $$070$i$i$be = $$272$i$i;
      } else {
       $$067$i$i = $458;$$266$i$i = $$064$i$i;$$5$i$i = $$272$i$i;
       while(1) {
        $462 = ((($$067$i$i)) + 1|0);
        $463 = HEAP8[$$067$i$i>>0]|0;
        $464 = ((($$5$i$i)) + 1|0);
        HEAP8[$$5$i$i>>0] = $463;
        $465 = (($$266$i$i) + -1)|0;
        $466 = ($465|0)==(0);
        if ($466) {
         break;
        } else {
         $$067$i$i = $462;$$266$i$i = $465;$$5$i$i = $464;
        }
       }
       $scevgep$i$i = (($$272$i$i) + ($$064$i$i)|0);
       $$070$i$i$be = $scevgep$i$i;
      }
     }
    } while(0);
    $$070$i$i = $$070$i$i$be;
   }
   HEAP32[$9>>2] = $$070$i$i;
   $468 = $$070$i$i;
  }
  $467 = ($57|0)==(0);
  if (!($467)) {
   $$0$i = 1;
   label = 173;
   break;
  }
  $$pr$i = HEAP32[$34>>2]|0;
  $$pre$i$i$pre$i = HEAP32[$35>>2]|0;
  $$pre$i$i$i = $$pre$i$i$pre$i;$144 = $468;$42 = $$pr$i;
 }
 switch (label|0) {
  case 13: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 20: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 29: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 39: {
   ___assert_fail((139821|0),(139212|0),4082,(139838|0));
   // unreachable;
   break;
  }
  case 53: {
   HEAP32[36032] = $$sink;
   $$0$i = 0;
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
  case 60: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 67: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 74: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 82: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 96: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 105: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 110: {
   ___assert_fail((139919|0),(139212|0),4055,(139927|0));
   // unreachable;
   break;
  }
  case 114: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 141: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 151: {
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
   break;
  }
  case 173: {
   STACKTOP = sp;return ($$0$i|0);
   break;
  }
 }
 return (0)|0;
}
function _stbi__create_png_image_raw($0,$1,$2,$3,$4,$5,$6,$7) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 $7 = $7|0;
 var $$$i$us = 0, $$$i648 = 0, $$0$i10$i = 0, $$0$i638$us = 0, $$0$i649 = 0, $$0564 = 0, $$0564713 = 0, $$0564714 = 0, $$0567$lcssa = 0, $$0567702 = 0, $$0570$lcssa = 0, $$0570701 = 0, $$0584 = 0, $$0593 = 0, $$0604836957 = 0, $$0607835958 = 0, $$0610 = 0, $$0610$us = 0, $$0610805 = 0, $$0610808 = 0;
 var $$0610808$us = 0, $$0619834959 = 0, $$0621725 = 0, $$0621725$us = 0, $$0621725$us729 = 0, $$0722 = 0, $$1 = 0, $$10631766$us = 0, $$11$ph = 0, $$11632754$us = 0, $$12743$us = 0, $$13732$us = 0, $$14$lcssa = 0, $$14700 = 0, $$15$lcssa = 0, $$1568$lcssa = 0, $$1568693 = 0, $$15691 = 0, $$1571$lcssa = 0, $$1571692 = 0;
 var $$1574 = 0, $$16$lcssa = 0, $$1605 = 0, $$1608 = 0, $$1611 = 0, $$1611$us = 0, $$1611797 = 0, $$1611797$us = 0, $$1620717 = 0, $$1622831 = 0, $$16686 = 0, $$1710 = 0, $$2 = 0, $$2569$lcssa = 0, $$2569688 = 0, $$2575807$us = 0, $$2595806 = 0, $$2595806$us = 0, $$2612 = 0, $$2612$us = 0;
 var $$2612786 = 0, $$2612786$us = 0, $$2623828 = 0, $$3576796$us = 0, $$3588784$us = 0, $$3596795 = 0, $$3596795$us = 0, $$3613 = 0, $$3613$us = 0, $$3613774 = 0, $$3613774$us = 0, $$3624825 = 0, $$4$lcssa = 0, $$4577785$us = 0, $$4589772$us = 0, $$4597783 = 0, $$4597783$us = 0, $$4614 = 0, $$4614$us = 0, $$4614762 = 0;
 var $$4614762$us = 0, $$4625822 = 0, $$4687 = 0, $$5578773$us = 0, $$5590760$us = 0, $$5598771 = 0, $$5598771$us = 0, $$5615 = 0, $$5615$us = 0, $$5615750 = 0, $$5615750$us = 0, $$5626819 = 0, $$6579761$us = 0, $$6599759 = 0, $$6599759$us = 0, $$6616 = 0, $$6616$us = 0, $$6616739 = 0, $$6616739$us = 0, $$6627816 = 0;
 var $$7580749$us = 0, $$7600748 = 0, $$7600748$us = 0, $$7617812 = 0, $$7628801$us = 0, $$8581738$us = 0, $$8601737 = 0, $$8601737$us = 0, $$8618720 = 0, $$8629790$us = 0, $$9582 = 0, $$9602813 = 0, $$9630778$us = 0, $$not = 0, $$pn = 0, $$pre = 0, $$sink = 0, $$sink964 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0;
 var $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0;
 var $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0;
 var $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0;
 var $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $50 = 0, $500 = 0;
 var $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0;
 var $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0;
 var $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0;
 var $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0;
 var $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0;
 var $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0;
 var $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0;
 var $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0;
 var $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0;
 var $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $68 = 0, $69 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $brmerge = 0, $brmerge946 = 0, $exitcond = 0, $exitcond903 = 0, $exitcond904 = 0, $exitcond905 = 0, $exitcond907 = 0, $exitcond910 = 0, $exitcond913 = 0, $exitcond916 = 0, $exitcond919 = 0, $exitcond922 = 0, $exitcond925 = 0, $exitcond928 = 0, $exitcond929 = 0, $exitcond930 = 0, $exitcond931 = 0;
 var $exitcond932 = 0, $exitcond933 = 0, $exitcond934 = 0, $indvars$iv = 0, $indvars$iv$next = 0, $indvars$iv$next886 = 0, $indvars$iv$next890 = 0, $indvars$iv$next893 = 0, $indvars$iv$next897 = 0, $indvars$iv$next900 = 0, $indvars$iv885 = 0, $indvars$iv889 = 0, $indvars$iv892 = 0, $indvars$iv896 = 0, $indvars$iv899 = 0, $ispos$i$us = 0, $ispos$i641 = 0, $ispos26$i$us = 0, $ispos26$i643 = 0, $ispos28$i$us = 0;
 var $ispos28$i645 = 0, $narrow$i = 0, $neg$i$us = 0, $neg$i642 = 0, $neg27$i636$us = 0, $neg27$i644 = 0, $neg29$i637$us = 0, $neg29$i646 = 0, $or$cond = 0, $or$cond$i$us = 0, $or$cond$i647 = 0, $or$cond2 = 0, $scevgep = 0, $scevgep887 = 0, $scevgep891 = 0, $scevgep894 = 0, $scevgep898 = 0, $scevgep901 = 0, $scevgep906 = 0, $scevgep908 = 0;
 var $scevgep909 = 0, $scevgep911 = 0, $scevgep912 = 0, $scevgep914 = 0, $scevgep915 = 0, $scevgep917 = 0, $scevgep918 = 0, $scevgep920 = 0, $scevgep921 = 0, $scevgep923 = 0, $scevgep924 = 0, $scevgep927 = 0, $smax = 0, $smax888 = 0, $smax895 = 0, $trunc = 0, $trunc633 = 0, $trunc634 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $8 = ($6|0)==(16);
 $9 = $8 ? 2 : 1;
 $10 = HEAP32[$0>>2]|0;
 $11 = Math_imul($4, $3)|0;
 $12 = Math_imul($9, $11)|0;
 $13 = ((($10)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = Math_imul($9, $3)|0;
 $16 = Math_imul($14, $9)|0;
 $17 = ($14|0)==($3|0);
 $18 = (($14) + 1)|0;
 $19 = ($18|0)==($3|0);
 $or$cond = $17 | $19;
 if (!($or$cond)) {
  ___assert_fail((139646|0),(139212|0),4343,(139687|0));
  // unreachable;
 }
 $20 = $5 | $4;
 $21 = ($20|0)<(0);
 do {
  if (!($21)) {
   $22 = ($5|0)==(0);
   if (!($22)) {
    $23 = (2147483647 / ($5|0))&-1;
    $24 = ($23|0)<($4|0);
    if ($24) {
     break;
    }
   }
   $25 = Math_imul($5, $4)|0;
   $26 = $15 | $25;
   $27 = ($26|0)<(0);
   if (!($27)) {
    $28 = ($15|0)==(0);
    if (!($28)) {
     $29 = (2147483647 / ($15|0))&-1;
     $30 = ($29|0)<($25|0);
     if ($30) {
      break;
     }
    }
    $32 = Math_imul($15, $25)|0;
    $33 = (_malloc($32)|0);
    $34 = ((($0)) + 12|0);
    HEAP32[$34>>2] = $33;
    $35 = ($33|0)==(0|0);
    $36 = $14 | $4;
    $37 = ($36|0)<(0);
    $or$cond2 = $35 | $37;
    if ($or$cond2) {
     $$2 = 0;
     return ($$2|0);
    }
    $38 = ($4|0)==(0);
    if (!($38)) {
     $39 = (2147483647 / ($4|0))&-1;
     $40 = ($39|0)<($14|0);
     if ($40) {
      $$2 = 0;
      return ($$2|0);
     }
    }
    $41 = Math_imul($14, $4)|0;
    $42 = $41 | $6;
    $43 = ($42|0)<(0);
    if ($43) {
     $$2 = 0;
     return ($$2|0);
    }
    $44 = ($6|0)==(0);
    if ($44) {
     $$0$i10$i = 1;
    } else {
     $45 = (2147483647 / ($6|0))&-1;
     $46 = ($45|0)>=($41|0);
     $$0$i10$i = $46;
    }
    $47 = Math_imul($41, $6)|0;
    $48 = ($47|0)<(2147483641);
    $narrow$i = $48 & $$0$i10$i;
    if (!($narrow$i)) {
     $$2 = 0;
     return ($$2|0);
    }
    $49 = (($47) + 7)|0;
    $50 = $49 >>> 3;
    $51 = (($50) + 1)|0;
    $52 = Math_imul($51, $5)|0;
    $53 = ($52>>>0)>($2>>>0);
    if ($53) {
     $$2 = 0;
     return ($$2|0);
    }
    L32: do {
     if (!($22)) {
      $54 = ($6|0)<(8);
      $55 = ($50>>>0)>($4>>>0);
      $56 = (0 - ($12))|0;
      $57 = (($11) - ($50))|0;
      $58 = ($6|0)==(8);
      $brmerge = $54 | $17;
      $$0610805 = (($4) + -1)|0;
      $59 = ($$0610805|0)==(0);
      $60 = HEAP8[$1>>0]|0;
      $61 = ($60&255)>(4);
      if ($61) {
       $$2 = 0;
       return ($$2|0);
      }
      $62 = $60&255;
      $$not = $8 ^ 1;
      $brmerge946 = $38 | $$not;
      $$0604836957 = $4;$$0607835958 = $16;$$0619834959 = 0;$$pn = $1;$371 = 0;$65 = $33;$69 = $62;
      L37: while(1) {
       $63 = ((($$pn)) + 1|0);
       if ($54) {
        if ($55) {
         label = 23;
         break;
        }
        $64 = (($65) + ($57)|0);
        $$0593 = $64;$$1605 = $50;$$1608 = 1;
       } else {
        $$0593 = $65;$$1605 = $$0604836957;$$1608 = $$0607835958;
       }
       $66 = (($$0593) + ($56)|0);
       $67 = ($$0619834959|0)==(0);
       if ($67) {
        $68 = (139735 + ($69)|0);
        $70 = HEAP8[$68>>0]|0;
        $71 = $70&255;
        $$0584 = $71;
       } else {
        $$0584 = $69;
       }
       $72 = ($$1608|0)>(0);
       L46: do {
        if ($72) {
         $trunc634 = $$0584&255;
         switch ($trunc634<<24>>24) {
         case 0:  {
          $$0621725$us = 0;
          while(1) {
           $73 = (($63) + ($$0621725$us)|0);
           $74 = HEAP8[$73>>0]|0;
           $75 = (($$0593) + ($$0621725$us)|0);
           HEAP8[$75>>0] = $74;
           $76 = (($$0621725$us) + 1)|0;
           $exitcond904 = ($76|0)==($$1608|0);
           if ($exitcond904) {
            break;
           } else {
            $$0621725$us = $76;
           }
          }
          break;
         }
         case 1:  {
          $$0621725$us729 = 0;
          while(1) {
           $77 = (($63) + ($$0621725$us729)|0);
           $78 = HEAP8[$77>>0]|0;
           $79 = (($$0593) + ($$0621725$us729)|0);
           HEAP8[$79>>0] = $78;
           $80 = (($$0621725$us729) + 1)|0;
           $exitcond903 = ($80|0)==($$1608|0);
           if ($exitcond903) {
            break;
           } else {
            $$0621725$us729 = $80;
           }
          }
          break;
         }
         default: {
          $$0621725 = 0;
          while(1) {
           switch ($trunc634<<24>>24) {
           case 6:  {
            $108 = (($63) + ($$0621725)|0);
            $109 = HEAP8[$108>>0]|0;
            $$sink = $109;
            label = 40;
            break;
           }
           case 5:  {
            $106 = (($63) + ($$0621725)|0);
            $107 = HEAP8[$106>>0]|0;
            $$sink = $107;
            label = 40;
            break;
           }
           case 2:  {
            $81 = (($63) + ($$0621725)|0);
            $82 = HEAP8[$81>>0]|0;
            $83 = $82&255;
            $84 = (($66) + ($$0621725)|0);
            $85 = HEAP8[$84>>0]|0;
            $86 = $85&255;
            $87 = (($86) + ($83))|0;
            $88 = $87&255;
            $$sink = $88;
            label = 40;
            break;
           }
           case 3:  {
            $89 = (($63) + ($$0621725)|0);
            $90 = HEAP8[$89>>0]|0;
            $91 = $90&255;
            $92 = (($66) + ($$0621725)|0);
            $93 = HEAP8[$92>>0]|0;
            $94 = $93&255;
            $95 = $94 >>> 1;
            $96 = (($95) + ($91))|0;
            $97 = $96&255;
            $$sink = $97;
            label = 40;
            break;
           }
           case 4:  {
            $98 = (($63) + ($$0621725)|0);
            $99 = HEAP8[$98>>0]|0;
            $100 = $99&255;
            $101 = (($66) + ($$0621725)|0);
            $102 = HEAP8[$101>>0]|0;
            $103 = $102&255;
            $104 = (($103) + ($100))|0;
            $105 = $104&255;
            $$sink = $105;
            label = 40;
            break;
           }
           default: {
           }
           }
           if ((label|0) == 40) {
            label = 0;
            $110 = (($$0593) + ($$0621725)|0);
            HEAP8[$110>>0] = $$sink;
           }
           $111 = (($$0621725) + 1)|0;
           $exitcond905 = ($111|0)==($$1608|0);
           if ($exitcond905) {
            break L46;
           } else {
            $$0621725 = $111;
           }
          }
         }
         }
        }
       } while(0);
       do {
        if ($58) {
         if (!($17)) {
          $112 = (($$0593) + ($14)|0);
          HEAP8[$112>>0] = -1;
         }
         $113 = (($63) + ($14)|0);
         $$1574 = $113;$$sink964 = $3;
        } else {
         if (!($8)) {
          $118 = ((($$pn)) + 2|0);
          $$1574 = $118;$$sink964 = 1;
          break;
         }
         if (!($17)) {
          $114 = (($$1608) + 1)|0;
          $115 = (($$0593) + ($114)|0);
          $116 = (($$0593) + ($$1608)|0);
          HEAP8[$116>>0] = -1;
          HEAP8[$115>>0] = -1;
         }
         $117 = (($63) + ($$1608)|0);
         $$1574 = $117;$$sink964 = $15;
        }
       } while(0);
       $119 = (($$0593) + ($$sink964)|0);
       $120 = (($66) + ($$sink964)|0);
       do {
        if ($brmerge) {
         $121 = (($$1605) + -1)|0;
         $122 = Math_imul($121, $$1608)|0;
         $trunc633 = $$0584&255;
         L83: do {
          switch ($trunc633<<24>>24) {
          case 0:  {
           _memcpy(($119|0),($$1574|0),($122|0))|0;
           break;
          }
          case 1:  {
           $123 = ($122|0)>(0);
           if (!($123)) {
            break L83;
           }
           $$1622831 = 0;
           while(1) {
            $124 = (($$1574) + ($$1622831)|0);
            $125 = HEAP8[$124>>0]|0;
            $126 = $125&255;
            $127 = (($$1622831) - ($$1608))|0;
            $128 = (($119) + ($127)|0);
            $129 = HEAP8[$128>>0]|0;
            $130 = $129&255;
            $131 = (($130) + ($126))|0;
            $132 = $131&255;
            $133 = (($119) + ($$1622831)|0);
            HEAP8[$133>>0] = $132;
            $134 = (($$1622831) + 1)|0;
            $exitcond934 = ($134|0)==($122|0);
            if ($exitcond934) {
             break;
            } else {
             $$1622831 = $134;
            }
           }
           break;
          }
          case 2:  {
           $135 = ($122|0)>(0);
           if (!($135)) {
            break L83;
           }
           $$2623828 = 0;
           while(1) {
            $136 = (($$1574) + ($$2623828)|0);
            $137 = HEAP8[$136>>0]|0;
            $138 = $137&255;
            $139 = (($120) + ($$2623828)|0);
            $140 = HEAP8[$139>>0]|0;
            $141 = $140&255;
            $142 = (($141) + ($138))|0;
            $143 = $142&255;
            $144 = (($119) + ($$2623828)|0);
            HEAP8[$144>>0] = $143;
            $145 = (($$2623828) + 1)|0;
            $exitcond933 = ($145|0)==($122|0);
            if ($exitcond933) {
             break;
            } else {
             $$2623828 = $145;
            }
           }
           break;
          }
          case 3:  {
           $146 = ($122|0)>(0);
           if (!($146)) {
            break L83;
           }
           $$3624825 = 0;
           while(1) {
            $147 = (($$1574) + ($$3624825)|0);
            $148 = HEAP8[$147>>0]|0;
            $149 = $148&255;
            $150 = (($120) + ($$3624825)|0);
            $151 = HEAP8[$150>>0]|0;
            $152 = $151&255;
            $153 = (($$3624825) - ($$1608))|0;
            $154 = (($119) + ($153)|0);
            $155 = HEAP8[$154>>0]|0;
            $156 = $155&255;
            $157 = (($156) + ($152))|0;
            $158 = $157 >>> 1;
            $159 = (($158) + ($149))|0;
            $160 = $159&255;
            $161 = (($119) + ($$3624825)|0);
            HEAP8[$161>>0] = $160;
            $162 = (($$3624825) + 1)|0;
            $exitcond932 = ($162|0)==($122|0);
            if ($exitcond932) {
             break;
            } else {
             $$3624825 = $162;
            }
           }
           break;
          }
          case 4:  {
           $163 = ($122|0)>(0);
           if (!($163)) {
            break L83;
           }
           $$4625822 = 0;
           while(1) {
            $164 = (($$1574) + ($$4625822)|0);
            $165 = HEAP8[$164>>0]|0;
            $166 = $165&255;
            $167 = (($$4625822) - ($$1608))|0;
            $168 = (($119) + ($167)|0);
            $169 = HEAP8[$168>>0]|0;
            $170 = $169&255;
            $171 = (($120) + ($$4625822)|0);
            $172 = HEAP8[$171>>0]|0;
            $173 = $172&255;
            $174 = (($120) + ($167)|0);
            $175 = HEAP8[$174>>0]|0;
            $176 = $175&255;
            $177 = (($173) + ($170))|0;
            $178 = (($177) - ($176))|0;
            $179 = (($178) - ($170))|0;
            $ispos$i641 = ($179|0)>(-1);
            $neg$i642 = (0 - ($179))|0;
            $180 = $ispos$i641 ? $179 : $neg$i642;
            $181 = (($178) - ($173))|0;
            $ispos26$i643 = ($181|0)>(-1);
            $neg27$i644 = (0 - ($181))|0;
            $182 = $ispos26$i643 ? $181 : $neg27$i644;
            $183 = (($178) - ($176))|0;
            $ispos28$i645 = ($183|0)>(-1);
            $neg29$i646 = (0 - ($183))|0;
            $184 = $ispos28$i645 ? $183 : $neg29$i646;
            $185 = ($180|0)>($182|0);
            $186 = ($180|0)>($184|0);
            $or$cond$i647 = $185 | $186;
            $187 = ($182|0)>($184|0);
            $$$i648 = $187 ? $176 : $173;
            $$0$i649 = $or$cond$i647 ? $$$i648 : $170;
            $188 = (($$0$i649) + ($166))|0;
            $189 = $188&255;
            $190 = (($119) + ($$4625822)|0);
            HEAP8[$190>>0] = $189;
            $191 = (($$4625822) + 1)|0;
            $exitcond931 = ($191|0)==($122|0);
            if ($exitcond931) {
             break;
            } else {
             $$4625822 = $191;
            }
           }
           break;
          }
          case 5:  {
           $192 = ($122|0)>(0);
           if (!($192)) {
            break L83;
           }
           $$5626819 = 0;
           while(1) {
            $193 = (($$1574) + ($$5626819)|0);
            $194 = HEAP8[$193>>0]|0;
            $195 = $194&255;
            $196 = (($$5626819) - ($$1608))|0;
            $197 = (($119) + ($196)|0);
            $198 = HEAP8[$197>>0]|0;
            $199 = $198&255;
            $200 = $199 >>> 1;
            $201 = (($200) + ($195))|0;
            $202 = $201&255;
            $203 = (($119) + ($$5626819)|0);
            HEAP8[$203>>0] = $202;
            $204 = (($$5626819) + 1)|0;
            $exitcond930 = ($204|0)==($122|0);
            if ($exitcond930) {
             break;
            } else {
             $$5626819 = $204;
            }
           }
           break;
          }
          case 6:  {
           $205 = ($122|0)>(0);
           if (!($205)) {
            break L83;
           }
           $$6627816 = 0;
           while(1) {
            $206 = (($$1574) + ($$6627816)|0);
            $207 = HEAP8[$206>>0]|0;
            $208 = $207&255;
            $209 = (($$6627816) - ($$1608))|0;
            $210 = (($119) + ($209)|0);
            $211 = HEAP8[$210>>0]|0;
            $212 = $211&255;
            $213 = (($212) + ($208))|0;
            $214 = $213&255;
            $215 = (($119) + ($$6627816)|0);
            HEAP8[$215>>0] = $214;
            $216 = (($$6627816) + 1)|0;
            $exitcond929 = ($216|0)==($122|0);
            if ($exitcond929) {
             break;
            } else {
             $$6627816 = $216;
            }
           }
           break;
          }
          default: {
          }
          }
         } while(0);
         $217 = (($$1574) + ($122)|0);
         $$11$ph = $217;
        } else {
         if (!($19)) {
          label = 74;
          break L37;
         }
         $trunc = $$0584&255;
         L112: do {
          switch ($trunc<<24>>24) {
          case 0:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $218 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$0610808 = $$0610805;$$2595806 = $119;
            while(1) {
             $227 = (($$2595806) + ($$1608)|0);
             HEAP8[$227>>0] = -1;
             $228 = (($$2595806) + ($15)|0);
             $$0610 = (($$0610808) + -1)|0;
             $229 = ($$0610|0)==(0);
             if ($229) {
              break;
             } else {
              $$0610808 = $$0610;$$2595806 = $228;
             }
            }
            $scevgep924 = (($$1574) + ($218)|0);
            $$9582 = $scevgep924;
            break L112;
           }
           $$0610808$us = $$0610805;$$2575807$us = $$1574;$$2595806$us = $119;
           while(1) {
            $$7628801$us = 0;
            while(1) {
             $219 = (($$2575807$us) + ($$7628801$us)|0);
             $220 = HEAP8[$219>>0]|0;
             $221 = (($$2595806$us) + ($$7628801$us)|0);
             HEAP8[$221>>0] = $220;
             $222 = (($$7628801$us) + 1)|0;
             $exitcond925 = ($222|0)==($$1608|0);
             if ($exitcond925) {
              break;
             } else {
              $$7628801$us = $222;
             }
            }
            $223 = (($$2595806$us) + ($$1608)|0);
            HEAP8[$223>>0] = -1;
            $224 = (($$2575807$us) + ($$1608)|0);
            $225 = (($$2595806$us) + ($15)|0);
            $$0610$us = (($$0610808$us) + -1)|0;
            $226 = ($$0610$us|0)==(0);
            if ($226) {
             break;
            } else {
             $$0610808$us = $$0610$us;$$2575807$us = $224;$$2595806$us = $225;
            }
           }
           $scevgep927 = (($$1574) + ($218)|0);
           $$9582 = $scevgep927;
           break;
          }
          case 1:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $230 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$1611797 = $$0610805;$$3596795 = $119;
            while(1) {
             $246 = (($$3596795) + ($$1608)|0);
             HEAP8[$246>>0] = -1;
             $247 = (($$3596795) + ($15)|0);
             $$1611 = (($$1611797) + -1)|0;
             $248 = ($$1611|0)==(0);
             if ($248) {
              break;
             } else {
              $$1611797 = $$1611;$$3596795 = $247;
             }
            }
            $scevgep921 = (($$1574) + ($230)|0);
            $$9582 = $scevgep921;
            break L112;
           }
           $$1611797$us = $$0610805;$$3576796$us = $$1574;$$3596795$us = $119;
           while(1) {
            $$8629790$us = 0;
            while(1) {
             $231 = (($$3576796$us) + ($$8629790$us)|0);
             $232 = HEAP8[$231>>0]|0;
             $233 = $232&255;
             $234 = (($$8629790$us) - ($15))|0;
             $235 = (($$3596795$us) + ($234)|0);
             $236 = HEAP8[$235>>0]|0;
             $237 = $236&255;
             $238 = (($237) + ($233))|0;
             $239 = $238&255;
             $240 = (($$3596795$us) + ($$8629790$us)|0);
             HEAP8[$240>>0] = $239;
             $241 = (($$8629790$us) + 1)|0;
             $exitcond922 = ($241|0)==($$1608|0);
             if ($exitcond922) {
              break;
             } else {
              $$8629790$us = $241;
             }
            }
            $242 = (($$3596795$us) + ($$1608)|0);
            HEAP8[$242>>0] = -1;
            $243 = (($$3576796$us) + ($$1608)|0);
            $244 = (($$3596795$us) + ($15)|0);
            $$1611$us = (($$1611797$us) + -1)|0;
            $245 = ($$1611$us|0)==(0);
            if ($245) {
             break;
            } else {
             $$1611797$us = $$1611$us;$$3576796$us = $243;$$3596795$us = $244;
            }
           }
           $scevgep923 = (($$1574) + ($230)|0);
           $$9582 = $scevgep923;
           break;
          }
          case 2:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $249 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$2612786 = $$0610805;$$4597783 = $119;
            while(1) {
             $265 = (($$4597783) + ($$1608)|0);
             HEAP8[$265>>0] = -1;
             $266 = (($$4597783) + ($15)|0);
             $$2612 = (($$2612786) + -1)|0;
             $267 = ($$2612|0)==(0);
             if ($267) {
              break;
             } else {
              $$2612786 = $$2612;$$4597783 = $266;
             }
            }
            $scevgep918 = (($$1574) + ($249)|0);
            $$9582 = $scevgep918;
            break L112;
           }
           $$2612786$us = $$0610805;$$3588784$us = $120;$$4577785$us = $$1574;$$4597783$us = $119;
           while(1) {
            $$9630778$us = 0;
            while(1) {
             $250 = (($$4577785$us) + ($$9630778$us)|0);
             $251 = HEAP8[$250>>0]|0;
             $252 = $251&255;
             $253 = (($$3588784$us) + ($$9630778$us)|0);
             $254 = HEAP8[$253>>0]|0;
             $255 = $254&255;
             $256 = (($255) + ($252))|0;
             $257 = $256&255;
             $258 = (($$4597783$us) + ($$9630778$us)|0);
             HEAP8[$258>>0] = $257;
             $259 = (($$9630778$us) + 1)|0;
             $exitcond919 = ($259|0)==($$1608|0);
             if ($exitcond919) {
              break;
             } else {
              $$9630778$us = $259;
             }
            }
            $260 = (($$4597783$us) + ($$1608)|0);
            HEAP8[$260>>0] = -1;
            $261 = (($$4577785$us) + ($$1608)|0);
            $262 = (($$4597783$us) + ($15)|0);
            $263 = (($$3588784$us) + ($15)|0);
            $$2612$us = (($$2612786$us) + -1)|0;
            $264 = ($$2612$us|0)==(0);
            if ($264) {
             break;
            } else {
             $$2612786$us = $$2612$us;$$3588784$us = $263;$$4577785$us = $261;$$4597783$us = $262;
            }
           }
           $scevgep920 = (($$1574) + ($249)|0);
           $$9582 = $scevgep920;
           break;
          }
          case 3:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $268 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$3613774 = $$0610805;$$5598771 = $119;
            while(1) {
             $290 = (($$5598771) + ($$1608)|0);
             HEAP8[$290>>0] = -1;
             $291 = (($$5598771) + ($15)|0);
             $$3613 = (($$3613774) + -1)|0;
             $292 = ($$3613|0)==(0);
             if ($292) {
              break;
             } else {
              $$3613774 = $$3613;$$5598771 = $291;
             }
            }
            $scevgep915 = (($$1574) + ($268)|0);
            $$9582 = $scevgep915;
            break L112;
           }
           $$3613774$us = $$0610805;$$4589772$us = $120;$$5578773$us = $$1574;$$5598771$us = $119;
           while(1) {
            $$10631766$us = 0;
            while(1) {
             $269 = (($$5578773$us) + ($$10631766$us)|0);
             $270 = HEAP8[$269>>0]|0;
             $271 = $270&255;
             $272 = (($$4589772$us) + ($$10631766$us)|0);
             $273 = HEAP8[$272>>0]|0;
             $274 = $273&255;
             $275 = (($$10631766$us) - ($15))|0;
             $276 = (($$5598771$us) + ($275)|0);
             $277 = HEAP8[$276>>0]|0;
             $278 = $277&255;
             $279 = (($278) + ($274))|0;
             $280 = $279 >>> 1;
             $281 = (($280) + ($271))|0;
             $282 = $281&255;
             $283 = (($$5598771$us) + ($$10631766$us)|0);
             HEAP8[$283>>0] = $282;
             $284 = (($$10631766$us) + 1)|0;
             $exitcond916 = ($284|0)==($$1608|0);
             if ($exitcond916) {
              break;
             } else {
              $$10631766$us = $284;
             }
            }
            $285 = (($$5598771$us) + ($$1608)|0);
            HEAP8[$285>>0] = -1;
            $286 = (($$5578773$us) + ($$1608)|0);
            $287 = (($$5598771$us) + ($15)|0);
            $288 = (($$4589772$us) + ($15)|0);
            $$3613$us = (($$3613774$us) + -1)|0;
            $289 = ($$3613$us|0)==(0);
            if ($289) {
             break;
            } else {
             $$3613774$us = $$3613$us;$$4589772$us = $288;$$5578773$us = $286;$$5598771$us = $287;
            }
           }
           $scevgep917 = (($$1574) + ($268)|0);
           $$9582 = $scevgep917;
           break;
          }
          case 4:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $293 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$4614762 = $$0610805;$$6599759 = $119;
            while(1) {
             $327 = (($$6599759) + ($$1608)|0);
             HEAP8[$327>>0] = -1;
             $328 = (($$6599759) + ($15)|0);
             $$4614 = (($$4614762) + -1)|0;
             $329 = ($$4614|0)==(0);
             if ($329) {
              break;
             } else {
              $$4614762 = $$4614;$$6599759 = $328;
             }
            }
            $scevgep912 = (($$1574) + ($293)|0);
            $$9582 = $scevgep912;
            break L112;
           }
           $$4614762$us = $$0610805;$$5590760$us = $120;$$6579761$us = $$1574;$$6599759$us = $119;
           while(1) {
            $$11632754$us = 0;
            while(1) {
             $294 = (($$6579761$us) + ($$11632754$us)|0);
             $295 = HEAP8[$294>>0]|0;
             $296 = $295&255;
             $297 = (($$11632754$us) - ($15))|0;
             $298 = (($$6599759$us) + ($297)|0);
             $299 = HEAP8[$298>>0]|0;
             $300 = $299&255;
             $301 = (($$5590760$us) + ($$11632754$us)|0);
             $302 = HEAP8[$301>>0]|0;
             $303 = $302&255;
             $304 = (($$5590760$us) + ($297)|0);
             $305 = HEAP8[$304>>0]|0;
             $306 = $305&255;
             $307 = (($303) + ($300))|0;
             $308 = (($307) - ($306))|0;
             $309 = (($308) - ($300))|0;
             $ispos$i$us = ($309|0)>(-1);
             $neg$i$us = (0 - ($309))|0;
             $310 = $ispos$i$us ? $309 : $neg$i$us;
             $311 = (($308) - ($303))|0;
             $ispos26$i$us = ($311|0)>(-1);
             $neg27$i636$us = (0 - ($311))|0;
             $312 = $ispos26$i$us ? $311 : $neg27$i636$us;
             $313 = (($308) - ($306))|0;
             $ispos28$i$us = ($313|0)>(-1);
             $neg29$i637$us = (0 - ($313))|0;
             $314 = $ispos28$i$us ? $313 : $neg29$i637$us;
             $315 = ($310|0)>($312|0);
             $316 = ($310|0)>($314|0);
             $or$cond$i$us = $315 | $316;
             $317 = ($312|0)>($314|0);
             $$$i$us = $317 ? $306 : $303;
             $$0$i638$us = $or$cond$i$us ? $$$i$us : $300;
             $318 = (($$0$i638$us) + ($296))|0;
             $319 = $318&255;
             $320 = (($$6599759$us) + ($$11632754$us)|0);
             HEAP8[$320>>0] = $319;
             $321 = (($$11632754$us) + 1)|0;
             $exitcond913 = ($321|0)==($$1608|0);
             if ($exitcond913) {
              break;
             } else {
              $$11632754$us = $321;
             }
            }
            $322 = (($$6599759$us) + ($$1608)|0);
            HEAP8[$322>>0] = -1;
            $323 = (($$6579761$us) + ($$1608)|0);
            $324 = (($$6599759$us) + ($15)|0);
            $325 = (($$5590760$us) + ($15)|0);
            $$4614$us = (($$4614762$us) + -1)|0;
            $326 = ($$4614$us|0)==(0);
            if ($326) {
             break;
            } else {
             $$4614762$us = $$4614$us;$$5590760$us = $325;$$6579761$us = $323;$$6599759$us = $324;
            }
           }
           $scevgep914 = (($$1574) + ($293)|0);
           $$9582 = $scevgep914;
           break;
          }
          case 5:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $330 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$5615750 = $$0610805;$$7600748 = $119;
            while(1) {
             $347 = (($$7600748) + ($$1608)|0);
             HEAP8[$347>>0] = -1;
             $348 = (($$7600748) + ($15)|0);
             $$5615 = (($$5615750) + -1)|0;
             $349 = ($$5615|0)==(0);
             if ($349) {
              break;
             } else {
              $$5615750 = $$5615;$$7600748 = $348;
             }
            }
            $scevgep909 = (($$1574) + ($330)|0);
            $$9582 = $scevgep909;
            break L112;
           }
           $$5615750$us = $$0610805;$$7580749$us = $$1574;$$7600748$us = $119;
           while(1) {
            $$12743$us = 0;
            while(1) {
             $331 = (($$7580749$us) + ($$12743$us)|0);
             $332 = HEAP8[$331>>0]|0;
             $333 = $332&255;
             $334 = (($$12743$us) - ($15))|0;
             $335 = (($$7600748$us) + ($334)|0);
             $336 = HEAP8[$335>>0]|0;
             $337 = $336&255;
             $338 = $337 >>> 1;
             $339 = (($338) + ($333))|0;
             $340 = $339&255;
             $341 = (($$7600748$us) + ($$12743$us)|0);
             HEAP8[$341>>0] = $340;
             $342 = (($$12743$us) + 1)|0;
             $exitcond910 = ($342|0)==($$1608|0);
             if ($exitcond910) {
              break;
             } else {
              $$12743$us = $342;
             }
            }
            $343 = (($$7600748$us) + ($$1608)|0);
            HEAP8[$343>>0] = -1;
            $344 = (($$7580749$us) + ($$1608)|0);
            $345 = (($$7600748$us) + ($15)|0);
            $$5615$us = (($$5615750$us) + -1)|0;
            $346 = ($$5615$us|0)==(0);
            if ($346) {
             break;
            } else {
             $$5615750$us = $$5615$us;$$7580749$us = $344;$$7600748$us = $345;
            }
           }
           $scevgep911 = (($$1574) + ($330)|0);
           $$9582 = $scevgep911;
           break;
          }
          case 6:  {
           if ($59) {
            $$9582 = $$1574;
            break L112;
           }
           $350 = Math_imul($$0610805, $$1608)|0;
           if (!($72)) {
            $$6616739 = $$0610805;$$8601737 = $119;
            while(1) {
             $366 = (($$8601737) + ($$1608)|0);
             HEAP8[$366>>0] = -1;
             $367 = (($$8601737) + ($15)|0);
             $$6616 = (($$6616739) + -1)|0;
             $368 = ($$6616|0)==(0);
             if ($368) {
              break;
             } else {
              $$6616739 = $$6616;$$8601737 = $367;
             }
            }
            $scevgep906 = (($$1574) + ($350)|0);
            $$9582 = $scevgep906;
            break L112;
           }
           $$6616739$us = $$0610805;$$8581738$us = $$1574;$$8601737$us = $119;
           while(1) {
            $$13732$us = 0;
            while(1) {
             $351 = (($$8581738$us) + ($$13732$us)|0);
             $352 = HEAP8[$351>>0]|0;
             $353 = $352&255;
             $354 = (($$13732$us) - ($15))|0;
             $355 = (($$8601737$us) + ($354)|0);
             $356 = HEAP8[$355>>0]|0;
             $357 = $356&255;
             $358 = (($357) + ($353))|0;
             $359 = $358&255;
             $360 = (($$8601737$us) + ($$13732$us)|0);
             HEAP8[$360>>0] = $359;
             $361 = (($$13732$us) + 1)|0;
             $exitcond907 = ($361|0)==($$1608|0);
             if ($exitcond907) {
              break;
             } else {
              $$13732$us = $361;
             }
            }
            $362 = (($$8601737$us) + ($$1608)|0);
            HEAP8[$362>>0] = -1;
            $363 = (($$8581738$us) + ($$1608)|0);
            $364 = (($$8601737$us) + ($15)|0);
            $$6616$us = (($$6616739$us) + -1)|0;
            $365 = ($$6616$us|0)==(0);
            if ($365) {
             break;
            } else {
             $$6616739$us = $$6616$us;$$8581738$us = $363;$$8601737$us = $364;
            }
           }
           $scevgep908 = (($$1574) + ($350)|0);
           $$9582 = $scevgep908;
           break;
          }
          default: {
           $$9582 = $$1574;
          }
          }
         } while(0);
         if ($brmerge946) {
          $$11$ph = $$9582;
          break;
         }
         $369 = HEAP32[$34>>2]|0;
         $370 = (($369) + ($371)|0);
         $372 = (($$1608) + 1)|0;
         $$7617812 = 0;$$9602813 = $370;
         while(1) {
          $373 = (($$9602813) + ($372)|0);
          HEAP8[$373>>0] = -1;
          $374 = (($$7617812) + 1)|0;
          $375 = (($$9602813) + ($15)|0);
          $exitcond928 = ($374|0)==($4|0);
          if ($exitcond928) {
           $$11$ph = $$9582;
           break;
          } else {
           $$7617812 = $374;$$9602813 = $375;
          }
         }
        }
       } while(0);
       $376 = (($$0619834959) + 1)|0;
       $377 = ($376>>>0)<($5>>>0);
       if (!($377)) {
        break L32;
       }
       $$pre = HEAP32[$34>>2]|0;
       $378 = Math_imul($376, $12)|0;
       $379 = (($$pre) + ($378)|0);
       $380 = HEAP8[$$11$ph>>0]|0;
       $381 = $380&255;
       $382 = ($380&255)>(4);
       if ($382) {
        $$2 = 0;
        label = 197;
        break;
       } else {
        $$0604836957 = $$1605;$$0607835958 = $$1608;$$0619834959 = $376;$$pn = $$11$ph;$371 = $378;$65 = $379;$69 = $381;
       }
      }
      if ((label|0) == 23) {
       ___assert_fail((139714|0),(139212|0),4365,(139687|0));
       // unreachable;
      }
      else if ((label|0) == 74) {
       ___assert_fail((139740|0),(139212|0),4427,(139687|0));
       // unreachable;
      }
      else if ((label|0) == 197) {
       return ($$2|0);
      }
     }
    } while(0);
    $383 = ($6|0)<(8);
    if (!($383)) {
     if (!($8)) {
      $$2 = 1;
      return ($$2|0);
     }
     $660 = Math_imul($11, $5)|0;
     $661 = ($660|0)==(0);
     if ($661) {
      $$2 = 1;
      return ($$2|0);
     }
     $662 = HEAP32[$34>>2]|0;
     $$0722 = $662;$$8618720 = 0;
     while(1) {
      $663 = HEAP8[$$0722>>0]|0;
      $664 = $663&255;
      $665 = $664 << 8;
      $666 = ((($$0722)) + 1|0);
      $667 = HEAP8[$666>>0]|0;
      $668 = $667&255;
      $669 = $665 | $668;
      $670 = $669&65535;
      HEAP16[$$0722>>1] = $670;
      $671 = (($$8618720) + 1)|0;
      $672 = ((($$0722)) + 2|0);
      $exitcond = ($671|0)==($660|0);
      if ($exitcond) {
       $$2 = 1;
       break;
      } else {
       $$0722 = $672;$$8618720 = $671;
      }
     }
     return ($$2|0);
    }
    if ($22) {
     $$2 = 1;
     return ($$2|0);
    }
    $384 = (0 - ($50))|0;
    $385 = ($7|0)==(0);
    $386 = (139522 + ($6)|0);
    $387 = ($41|0)>(1);
    $388 = ($41|0)>(3);
    $389 = ($41|0)>(7);
    $$0564713 = (($4) + -1)|0;
    $390 = ($$0564713|0)>(-1);
    $391 = $41 ^ -1;
    $392 = ($391|0)>(-16);
    $smax = $392 ? $391 : -16;
    $393 = (($smax) + ($41))|0;
    $394 = (($393) + 8)|0;
    $395 = $394 >>> 3;
    $396 = $394 & -8;
    $397 = (($396) + 8)|0;
    $398 = (($41) + -8)|0;
    $399 = (($398) - ($396))|0;
    $400 = (($395) + ($11))|0;
    $401 = (($400) + 1)|0;
    $402 = (($401) - ($50))|0;
    $403 = ($391|0)>(-8);
    $smax888 = $403 ? $391 : -8;
    $404 = (($smax888) + ($41))|0;
    $405 = (($404) + 4)|0;
    $406 = $405 >>> 2;
    $407 = $405 & -4;
    $408 = (($407) + 4)|0;
    $409 = (($41) + -4)|0;
    $410 = (($409) - ($407))|0;
    $411 = (($406) + ($11))|0;
    $412 = (($411) + 1)|0;
    $413 = (($412) - ($50))|0;
    $414 = ($391|0)>(-4);
    $smax895 = $414 ? $391 : -4;
    $415 = (($smax895) + ($41))|0;
    $416 = (($415) + 2)|0;
    $417 = $416 >>> 1;
    $418 = $416 & -2;
    $419 = (($418) + 2)|0;
    $420 = (($41) + -2)|0;
    $421 = (($420) - ($418))|0;
    $422 = (($417) + ($11))|0;
    $423 = (($422) + 1)|0;
    $424 = (($423) - ($50))|0;
    $$1620717 = 0;$indvars$iv = $397;$indvars$iv885 = $402;$indvars$iv889 = $408;$indvars$iv892 = $413;$indvars$iv896 = $419;$indvars$iv899 = $424;
    L237: while(1) {
     $425 = HEAP32[$34>>2]|0;
     $426 = Math_imul($$1620717, $12)|0;
     $427 = (($425) + ($426)|0);
     $428 = (($427) + ($11)|0);
     $429 = (($428) + ($384)|0);
     if ($385) {
      $430 = HEAP8[$386>>0]|0;
      $431 = $430&255;
      $436 = $431;
     } else {
      $436 = 1;
     }
     L242: do {
      switch ($6|0) {
      case 4:  {
       if ($387) {
        $scevgep898 = (($425) + ($indvars$iv896)|0);
        $$0567702 = $429;$$0570701 = $427;$$14700 = $41;
        while(1) {
         $432 = HEAP8[$$0567702>>0]|0;
         $433 = $432&255;
         $434 = $433 >>> 4;
         $435 = Math_imul($434, $436)|0;
         $437 = $435&255;
         $438 = ((($$0570701)) + 1|0);
         HEAP8[$$0570701>>0] = $437;
         $439 = HEAP8[$$0567702>>0]|0;
         $440 = $439 & 15;
         $441 = $440&255;
         $442 = Math_imul($436, $441)|0;
         $443 = $442&255;
         $444 = ((($$0570701)) + 2|0);
         HEAP8[$438>>0] = $443;
         $445 = (($$14700) + -2)|0;
         $446 = ((($$0567702)) + 1|0);
         $447 = ($$14700|0)>(3);
         if ($447) {
          $$0567702 = $446;$$0570701 = $444;$$14700 = $445;
         } else {
          break;
         }
        }
        $scevgep901 = (($425) + ($indvars$iv899)|0);
        $$0567$lcssa = $scevgep901;$$0570$lcssa = $scevgep898;$$14$lcssa = $421;
       } else {
        $$0567$lcssa = $429;$$0570$lcssa = $427;$$14$lcssa = $41;
       }
       $448 = ($$14$lcssa|0)==(1);
       if ($448) {
        $449 = HEAP8[$$0567$lcssa>>0]|0;
        $450 = $449&255;
        $451 = $450 >>> 4;
        $452 = Math_imul($451, $436)|0;
        $453 = $452&255;
        HEAP8[$$0570$lcssa>>0] = $453;
       }
       break;
      }
      case 2:  {
       if ($388) {
        $scevgep891 = (($425) + ($indvars$iv889)|0);
        $$1568693 = $429;$$15691 = $41;$$1571692 = $427;
        while(1) {
         $454 = HEAP8[$$1568693>>0]|0;
         $455 = $454&255;
         $456 = $455 >>> 6;
         $457 = Math_imul($456, $436)|0;
         $458 = $457&255;
         $459 = ((($$1571692)) + 1|0);
         HEAP8[$$1571692>>0] = $458;
         $460 = HEAP8[$$1568693>>0]|0;
         $461 = $460&255;
         $462 = $461 >>> 4;
         $463 = $462 & 3;
         $464 = Math_imul($463, $436)|0;
         $465 = $464&255;
         $466 = ((($$1571692)) + 2|0);
         HEAP8[$459>>0] = $465;
         $467 = HEAP8[$$1568693>>0]|0;
         $468 = $467&255;
         $469 = $468 >>> 2;
         $470 = $469 & 3;
         $471 = Math_imul($470, $436)|0;
         $472 = $471&255;
         $473 = ((($$1571692)) + 3|0);
         HEAP8[$466>>0] = $472;
         $474 = HEAP8[$$1568693>>0]|0;
         $475 = $474 & 3;
         $476 = $475&255;
         $477 = Math_imul($436, $476)|0;
         $478 = $477&255;
         $479 = ((($$1571692)) + 4|0);
         HEAP8[$473>>0] = $478;
         $480 = (($$15691) + -4)|0;
         $481 = ((($$1568693)) + 1|0);
         $482 = ($$15691|0)>(7);
         if ($482) {
          $$1568693 = $481;$$15691 = $480;$$1571692 = $479;
         } else {
          break;
         }
        }
        $scevgep894 = (($425) + ($indvars$iv892)|0);
        $$15$lcssa = $410;$$1568$lcssa = $scevgep894;$$1571$lcssa = $scevgep891;
       } else {
        $$15$lcssa = $41;$$1568$lcssa = $429;$$1571$lcssa = $427;
       }
       $483 = ($$15$lcssa|0)>(0);
       if ($483) {
        $484 = HEAP8[$$1568$lcssa>>0]|0;
        $485 = $484&255;
        $486 = $485 >>> 6;
        $487 = Math_imul($486, $436)|0;
        $488 = $487&255;
        HEAP8[$$1571$lcssa>>0] = $488;
        $489 = ($$15$lcssa|0)==(1);
        if ($489) {
         break L242;
        }
        $490 = ((($$1571$lcssa)) + 1|0);
        $491 = HEAP8[$$1568$lcssa>>0]|0;
        $492 = $491&255;
        $493 = $492 >>> 4;
        $494 = $493 & 3;
        $495 = Math_imul($494, $436)|0;
        $496 = $495&255;
        HEAP8[$490>>0] = $496;
        $497 = ($$15$lcssa|0)>(2);
        if (!($497)) {
         break L242;
        }
        $498 = ((($$1571$lcssa)) + 2|0);
        $499 = HEAP8[$$1568$lcssa>>0]|0;
        $500 = $499&255;
        $501 = $500 >>> 2;
        $502 = $501 & 3;
        $503 = Math_imul($502, $436)|0;
        $504 = $503&255;
        HEAP8[$498>>0] = $504;
       }
       break;
      }
      case 1:  {
       if ($389) {
        $scevgep = (($425) + ($indvars$iv)|0);
        $$16686 = $41;$$2569688 = $429;$$4687 = $427;
        while(1) {
         $505 = HEAP8[$$2569688>>0]|0;
         $506 = $505&255;
         $507 = $506 >>> 7;
         $508 = (0 - ($507))|0;
         $509 = $436 & $508;
         $510 = $509&255;
         $511 = ((($$4687)) + 1|0);
         HEAP8[$$4687>>0] = $510;
         $512 = HEAP8[$$2569688>>0]|0;
         $513 = $512&255;
         $514 = $513 >>> 6;
         $515 = $514 & 1;
         $516 = (0 - ($515))|0;
         $517 = $436 & $516;
         $518 = $517&255;
         $519 = ((($$4687)) + 2|0);
         HEAP8[$511>>0] = $518;
         $520 = HEAP8[$$2569688>>0]|0;
         $521 = $520&255;
         $522 = $521 >>> 5;
         $523 = $522 & 1;
         $524 = (0 - ($523))|0;
         $525 = $436 & $524;
         $526 = $525&255;
         $527 = ((($$4687)) + 3|0);
         HEAP8[$519>>0] = $526;
         $528 = HEAP8[$$2569688>>0]|0;
         $529 = $528&255;
         $530 = $529 >>> 4;
         $531 = $530 & 1;
         $532 = (0 - ($531))|0;
         $533 = $436 & $532;
         $534 = $533&255;
         $535 = ((($$4687)) + 4|0);
         HEAP8[$527>>0] = $534;
         $536 = HEAP8[$$2569688>>0]|0;
         $537 = $536&255;
         $538 = $537 >>> 3;
         $539 = $538 & 1;
         $540 = (0 - ($539))|0;
         $541 = $436 & $540;
         $542 = $541&255;
         $543 = ((($$4687)) + 5|0);
         HEAP8[$535>>0] = $542;
         $544 = HEAP8[$$2569688>>0]|0;
         $545 = $544&255;
         $546 = $545 >>> 2;
         $547 = $546 & 1;
         $548 = (0 - ($547))|0;
         $549 = $436 & $548;
         $550 = $549&255;
         $551 = ((($$4687)) + 6|0);
         HEAP8[$543>>0] = $550;
         $552 = HEAP8[$$2569688>>0]|0;
         $553 = $552&255;
         $554 = $553 >>> 1;
         $555 = $554 & 1;
         $556 = (0 - ($555))|0;
         $557 = $436 & $556;
         $558 = $557&255;
         $559 = ((($$4687)) + 7|0);
         HEAP8[$551>>0] = $558;
         $560 = HEAP8[$$2569688>>0]|0;
         $561 = $560 & 1;
         $562 = $561&255;
         $563 = (0 - ($562))|0;
         $564 = $436 & $563;
         $565 = $564&255;
         $566 = ((($$4687)) + 8|0);
         HEAP8[$559>>0] = $565;
         $567 = (($$16686) + -8)|0;
         $568 = ((($$2569688)) + 1|0);
         $569 = ($$16686|0)>(15);
         if ($569) {
          $$16686 = $567;$$2569688 = $568;$$4687 = $566;
         } else {
          break;
         }
        }
        $scevgep887 = (($425) + ($indvars$iv885)|0);
        $$16$lcssa = $399;$$2569$lcssa = $scevgep887;$$4$lcssa = $scevgep;
       } else {
        $$16$lcssa = $41;$$2569$lcssa = $429;$$4$lcssa = $427;
       }
       $570 = ($$16$lcssa|0)>(0);
       if ($570) {
        $571 = HEAP8[$$2569$lcssa>>0]|0;
        $572 = $571&255;
        $573 = $572 >>> 7;
        $574 = (0 - ($573))|0;
        $575 = $436 & $574;
        $576 = $575&255;
        HEAP8[$$4$lcssa>>0] = $576;
        $577 = ($$16$lcssa|0)==(1);
        if ($577) {
         break L242;
        }
        $578 = ((($$4$lcssa)) + 1|0);
        $579 = HEAP8[$$2569$lcssa>>0]|0;
        $580 = $579&255;
        $581 = $580 >>> 6;
        $582 = $581 & 1;
        $583 = (0 - ($582))|0;
        $584 = $436 & $583;
        $585 = $584&255;
        HEAP8[$578>>0] = $585;
        $586 = ($$16$lcssa|0)>(2);
        if (!($586)) {
         break L242;
        }
        $587 = ((($$4$lcssa)) + 2|0);
        $588 = HEAP8[$$2569$lcssa>>0]|0;
        $589 = $588&255;
        $590 = $589 >>> 5;
        $591 = $590 & 1;
        $592 = (0 - ($591))|0;
        $593 = $436 & $592;
        $594 = $593&255;
        HEAP8[$587>>0] = $594;
        $595 = ($$16$lcssa|0)==(3);
        if ($595) {
         break L242;
        }
        $596 = ((($$4$lcssa)) + 3|0);
        $597 = HEAP8[$$2569$lcssa>>0]|0;
        $598 = $597&255;
        $599 = $598 >>> 4;
        $600 = $599 & 1;
        $601 = (0 - ($600))|0;
        $602 = $436 & $601;
        $603 = $602&255;
        HEAP8[$596>>0] = $603;
        $604 = ($$16$lcssa|0)>(4);
        if (!($604)) {
         break L242;
        }
        $605 = ((($$4$lcssa)) + 4|0);
        $606 = HEAP8[$$2569$lcssa>>0]|0;
        $607 = $606&255;
        $608 = $607 >>> 3;
        $609 = $608 & 1;
        $610 = (0 - ($609))|0;
        $611 = $436 & $610;
        $612 = $611&255;
        HEAP8[$605>>0] = $612;
        $613 = ($$16$lcssa|0)==(5);
        if ($613) {
         break L242;
        }
        $614 = ((($$4$lcssa)) + 5|0);
        $615 = HEAP8[$$2569$lcssa>>0]|0;
        $616 = $615&255;
        $617 = $616 >>> 2;
        $618 = $617 & 1;
        $619 = (0 - ($618))|0;
        $620 = $436 & $619;
        $621 = $620&255;
        HEAP8[$614>>0] = $621;
        $622 = ($$16$lcssa|0)>(6);
        if (!($622)) {
         break L242;
        }
        $623 = ((($$4$lcssa)) + 6|0);
        $624 = HEAP8[$$2569$lcssa>>0]|0;
        $625 = $624&255;
        $626 = $625 >>> 1;
        $627 = $626 & 1;
        $628 = (0 - ($627))|0;
        $629 = $436 & $628;
        $630 = $629&255;
        HEAP8[$623>>0] = $630;
       }
       break;
      }
      default: {
      }
      }
     } while(0);
     L276: do {
      if (!($17)) {
       $631 = HEAP32[$34>>2]|0;
       $632 = (($631) + ($426)|0);
       switch ($14|0) {
       case 1:  {
        if (!($390)) {
         break L276;
        }
        $$0564714 = $$0564713;
        while(1) {
         $633 = $$0564714 << 1;
         $634 = $633 | 1;
         $635 = (($632) + ($634)|0);
         HEAP8[$635>>0] = -1;
         $636 = (($632) + ($$0564714)|0);
         $637 = HEAP8[$636>>0]|0;
         $638 = (($632) + ($633)|0);
         HEAP8[$638>>0] = $637;
         $$0564 = (($$0564714) + -1)|0;
         $639 = ($$0564|0)>(-1);
         if ($639) {
          $$0564714 = $$0564;
         } else {
          break;
         }
        }
        break;
       }
       case 3:  {
        if (!($390)) {
         break L276;
        }
        $$1710 = $$0564713;
        while(1) {
         $640 = $$1710 << 2;
         $641 = $640 | 3;
         $642 = (($632) + ($641)|0);
         HEAP8[$642>>0] = -1;
         $643 = ($$1710*3)|0;
         $644 = (($643) + 2)|0;
         $645 = (($632) + ($644)|0);
         $646 = HEAP8[$645>>0]|0;
         $647 = $640 | 2;
         $648 = (($632) + ($647)|0);
         HEAP8[$648>>0] = $646;
         $649 = (($643) + 1)|0;
         $650 = (($632) + ($649)|0);
         $651 = HEAP8[$650>>0]|0;
         $652 = $640 | 1;
         $653 = (($632) + ($652)|0);
         HEAP8[$653>>0] = $651;
         $654 = (($632) + ($643)|0);
         $655 = HEAP8[$654>>0]|0;
         $656 = (($632) + ($640)|0);
         HEAP8[$656>>0] = $655;
         $$1 = (($$1710) + -1)|0;
         $657 = ($$1|0)>(-1);
         if ($657) {
          $$1710 = $$1;
         } else {
          break;
         }
        }
        break;
       }
       default: {
        label = 188;
        break L237;
       }
       }
      }
     } while(0);
     $658 = (($$1620717) + 1)|0;
     $659 = ($658>>>0)<($5>>>0);
     $indvars$iv$next = (($indvars$iv) + ($12))|0;
     $indvars$iv$next886 = (($indvars$iv885) + ($12))|0;
     $indvars$iv$next890 = (($indvars$iv889) + ($12))|0;
     $indvars$iv$next893 = (($indvars$iv892) + ($12))|0;
     $indvars$iv$next897 = (($indvars$iv896) + ($12))|0;
     $indvars$iv$next900 = (($indvars$iv899) + ($12))|0;
     if ($659) {
      $$1620717 = $658;$indvars$iv = $indvars$iv$next;$indvars$iv885 = $indvars$iv$next886;$indvars$iv889 = $indvars$iv$next890;$indvars$iv892 = $indvars$iv$next893;$indvars$iv896 = $indvars$iv$next897;$indvars$iv899 = $indvars$iv$next900;
     } else {
      $$2 = 1;
      label = 197;
      break;
     }
    }
    if ((label|0) == 188) {
     ___assert_fail((139757|0),(139212|0),4516,(139687|0));
     // unreachable;
    }
    else if ((label|0) == 197) {
     return ($$2|0);
    }
   }
  }
 } while(0);
 $31 = ((($0)) + 12|0);
 HEAP32[$31>>2] = 0;
 $$2 = 0;
 return ($$2|0);
}
function _stbi__zbuild_huffman($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$075 = 0, $$07688 = 0, $$0778596 = 0, $$081 = 0, $$28695 = 0, $$382 = 0, $$phi$trans$insert = 0, $$phi$trans$insert92 = 0, $$pre = 0, $$pre93 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0;
 var $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0;
 var $127 = 0, $128 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond90 = 0, $or$cond = 0, dest = 0;
 var label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 144|0;
 $3 = sp + 80|0;
 $4 = sp;
 dest=$4; stop=dest+68|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 _memset(($0|0),0,1024)|0;
 $5 = ($2|0)>(0);
 if ($5) {
  $$07688 = 0;
  while(1) {
   $6 = (($1) + ($$07688)|0);
   $7 = HEAP8[$6>>0]|0;
   $8 = $7&255;
   $9 = (($4) + ($8<<2)|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($10) + 1)|0;
   HEAP32[$9>>2] = $11;
   $12 = (($$07688) + 1)|0;
   $exitcond90 = ($12|0)==($2|0);
   if ($exitcond90) {
    break;
   } else {
    $$07688 = $12;
   }
  }
  $$phi$trans$insert = ((($4)) + 4|0);
  $$pre = HEAP32[$$phi$trans$insert>>2]|0;
  HEAP32[$4>>2] = 0;
  $13 = ($$pre|0)>(2);
  if ($13) {
   $$075 = 0;
   STACKTOP = sp;return ($$075|0);
  } else {
   $128 = $$pre;
  }
 } else {
  HEAP32[$4>>2] = 0;
  $128 = 0;
 }
 $14 = ((($4)) + 8|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = ($15|0)>(4);
 if ($16) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $85 = ((($4)) + 12|0);
 $86 = HEAP32[$85>>2]|0;
 $87 = ($86|0)>(8);
 if ($87) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $88 = ((($4)) + 16|0);
 $89 = HEAP32[$88>>2]|0;
 $90 = ($89|0)>(16);
 if ($90) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $91 = ((($4)) + 20|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ($92|0)>(32);
 if ($93) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $94 = ((($4)) + 24|0);
 $95 = HEAP32[$94>>2]|0;
 $96 = ($95|0)>(64);
 if ($96) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $97 = ((($4)) + 28|0);
 $98 = HEAP32[$97>>2]|0;
 $99 = ($98|0)>(128);
 if ($99) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $100 = ((($4)) + 32|0);
 $101 = HEAP32[$100>>2]|0;
 $102 = ($101|0)>(256);
 if ($102) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $103 = ((($4)) + 36|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ($104|0)>(512);
 if ($105) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $106 = ((($4)) + 40|0);
 $107 = HEAP32[$106>>2]|0;
 $108 = ($107|0)>(1024);
 if ($108) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $109 = ((($4)) + 44|0);
 $110 = HEAP32[$109>>2]|0;
 $111 = ($110|0)>(2048);
 if ($111) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $112 = ((($4)) + 48|0);
 $113 = HEAP32[$112>>2]|0;
 $114 = ($113|0)>(4096);
 if ($114) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $115 = ((($4)) + 52|0);
 $116 = HEAP32[$115>>2]|0;
 $117 = ($116|0)>(8192);
 if ($117) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $118 = ((($4)) + 56|0);
 $119 = HEAP32[$118>>2]|0;
 $120 = ($119|0)>(16384);
 if ($120) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $121 = ((($4)) + 60|0);
 $122 = HEAP32[$121>>2]|0;
 $123 = ($122|0)>(32768);
 if ($123) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $124 = ((($3)) + 4|0);
 HEAP32[$124>>2] = 0;
 $125 = ((($0)) + 1026|0);
 HEAP16[$125>>1] = 0;
 $126 = ((($0)) + 1126|0);
 HEAP16[$126>>1] = 0;
 $127 = ($128|0)>(2);
 if ($127) {
  $$075 = 0;
  STACKTOP = sp;return ($$075|0);
 }
 $$0778596 = 0;$$28695 = 1;$19 = $128;$24 = $128;
 while(1) {
  $17 = (16 - ($$28695))|0;
  $18 = $19 << $17;
  $20 = (((($0)) + 1056|0) + ($$28695<<2)|0);
  HEAP32[$20>>2] = $18;
  $21 = (($$28695) + 1)|0;
  $22 = ($21>>>0)<(16);
  if (!($22)) {
   break;
  }
  $23 = (($24) + ($$0778596))|0;
  $25 = $19 << 1;
  $$phi$trans$insert92 = (($4) + ($21<<2)|0);
  $$pre93 = HEAP32[$$phi$trans$insert92>>2]|0;
  $26 = (($3) + ($21<<2)|0);
  HEAP32[$26>>2] = $25;
  $27 = $25&65535;
  $28 = (((($0)) + 1024|0) + ($21<<1)|0);
  HEAP16[$28>>1] = $27;
  $29 = $23&65535;
  $30 = (((($0)) + 1124|0) + ($21<<1)|0);
  HEAP16[$30>>1] = $29;
  $31 = (($$pre93) + ($25))|0;
  $32 = ($$pre93|0)!=(0);
  $33 = 2 << $$28695;
  $34 = ($31|0)>($33|0);
  $or$cond = $32 & $34;
  if ($or$cond) {
   $$075 = 0;
   label = 18;
   break;
  } else {
   $$0778596 = $23;$$28695 = $21;$19 = $31;$24 = $$pre93;
  }
 }
 if ((label|0) == 18) {
  STACKTOP = sp;return ($$075|0);
 }
 $35 = ((($0)) + 1120|0);
 HEAP32[$35>>2] = 65536;
 if (!($5)) {
  $$075 = 1;
  STACKTOP = sp;return ($$075|0);
 }
 $$382 = 0;
 while(1) {
  $36 = (($1) + ($$382)|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = $37&255;
  $39 = ($37<<24>>24)==(0);
  if (!($39)) {
   $40 = (($3) + ($38<<2)|0);
   $41 = HEAP32[$40>>2]|0;
   $42 = (((($0)) + 1024|0) + ($38<<1)|0);
   $43 = HEAP16[$42>>1]|0;
   $44 = $43&65535;
   $45 = (($41) - ($44))|0;
   $46 = (((($0)) + 1124|0) + ($38<<1)|0);
   $47 = HEAP16[$46>>1]|0;
   $48 = $47&65535;
   $49 = (($45) + ($48))|0;
   $50 = $38 << 9;
   $51 = $50 | $$382;
   $52 = $51&65535;
   $53 = (((($0)) + 1156|0) + ($49)|0);
   HEAP8[$53>>0] = $37;
   $54 = $$382&65535;
   $55 = (((($0)) + 1444|0) + ($49<<1)|0);
   HEAP16[$55>>1] = $54;
   $56 = ($37&255)<(10);
   do {
    if ($56) {
     $57 = $41 >>> 1;
     $58 = $57 & 21845;
     $59 = $41 << 1;
     $60 = $59 & 43690;
     $61 = $58 | $60;
     $62 = $61 >>> 2;
     $63 = $62 & 13107;
     $64 = $61 << 2;
     $65 = $64 & 52428;
     $66 = $63 | $65;
     $67 = $66 >>> 4;
     $68 = $67 & 3855;
     $69 = $66 << 4;
     $70 = $69 & 61680;
     $71 = $68 | $70;
     $72 = $71 >>> 8;
     $73 = $71 << 8;
     $74 = $73 & 65280;
     $75 = $74 | $72;
     $76 = (16 - ($38))|0;
     $77 = $75 >>> $76;
     $78 = ($77|0)<(512);
     if (!($78)) {
      break;
     }
     $79 = 1 << $38;
     $$081 = $77;
     while(1) {
      $80 = (($0) + ($$081<<1)|0);
      HEAP16[$80>>1] = $52;
      $81 = (($$081) + ($79))|0;
      $82 = ($81|0)<(512);
      if ($82) {
       $$081 = $81;
      } else {
       break;
      }
     }
    }
   } while(0);
   $83 = (($41) + 1)|0;
   HEAP32[$40>>2] = $83;
  }
  $84 = (($$382) + 1)|0;
  $exitcond = ($84|0)==($2|0);
  if ($exitcond) {
   $$075 = 1;
   break;
  } else {
   $$382 = $84;
  }
 }
 STACKTOP = sp;return ($$075|0);
}
function _stbi__zhuffman_decode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$0$i$i = 0, $$025$i = 0, $$pre = 0, $$pre$i = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 8|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(16);
 $5 = ((($0)) + 12|0);
 L1: do {
  if ($4) {
   $6 = ((($0)) + 4|0);
   $$pre$i = HEAP32[$5>>2]|0;
   $10 = $$pre$i;$8 = $3;
   while(1) {
    $7 = 1 << $8;
    $9 = ($10>>>0)<($7>>>0);
    if (!($9)) {
     break;
    }
    $11 = HEAP32[$0>>2]|0;
    $12 = HEAP32[$6>>2]|0;
    $13 = ($11>>>0)<($12>>>0);
    if ($13) {
     $14 = ((($11)) + 1|0);
     HEAP32[$0>>2] = $14;
     $15 = HEAP8[$11>>0]|0;
     $$0$i$i = $15;
    } else {
     $$0$i$i = 0;
    }
    $16 = $$0$i$i&255;
    $17 = $16 << $8;
    $18 = $17 | $10;
    HEAP32[$5>>2] = $18;
    $19 = (($8) + 8)|0;
    HEAP32[$2>>2] = $19;
    $20 = ($8|0)<(17);
    if ($20) {
     $10 = $18;$8 = $19;
    } else {
     $22 = $18;$30 = $19;
     break L1;
    }
   }
   ___assert_fail((139768|0),(139212|0),3897,(139805|0));
   // unreachable;
  } else {
   $$pre = HEAP32[$5>>2]|0;
   $22 = $$pre;$30 = $3;
  }
 } while(0);
 $21 = $22 & 511;
 $23 = (($1) + ($21<<1)|0);
 $24 = HEAP16[$23>>1]|0;
 $25 = $24&65535;
 $26 = ($24<<16>>16)==(0);
 if (!($26)) {
  $27 = $25 >>> 9;
  $28 = $22 >>> $27;
  HEAP32[$5>>2] = $28;
  $29 = (($30) - ($27))|0;
  HEAP32[$2>>2] = $29;
  $31 = $25 & 511;
  $$0 = $31;
  return ($$0|0);
 }
 $32 = $22 >>> 1;
 $33 = $32 & 21845;
 $34 = $22 << 1;
 $35 = $34 & 43690;
 $36 = $33 | $35;
 $37 = $36 >>> 2;
 $38 = $37 & 13107;
 $39 = $36 << 2;
 $40 = $39 & 52428;
 $41 = $38 | $40;
 $42 = $41 >>> 4;
 $43 = $42 & 3855;
 $44 = $41 << 4;
 $45 = $44 & 61680;
 $46 = $43 | $45;
 $47 = $46 >>> 8;
 $48 = $46 << 8;
 $49 = $48 & 65280;
 $50 = $49 | $47;
 $$025$i = 10;
 while(1) {
  $51 = (((($1)) + 1056|0) + ($$025$i<<2)|0);
  $52 = HEAP32[$51>>2]|0;
  $53 = ($50|0)<($52|0);
  $54 = (($$025$i) + 1)|0;
  if ($53) {
   break;
  } else {
   $$025$i = $54;
  }
 }
 $55 = ($$025$i|0)==(16);
 if ($55) {
  $$0 = -1;
  return ($$0|0);
 }
 $56 = (16 - ($$025$i))|0;
 $57 = $50 >>> $56;
 $58 = (((($1)) + 1024|0) + ($$025$i<<1)|0);
 $59 = HEAP16[$58>>1]|0;
 $60 = $59&65535;
 $61 = (($57) - ($60))|0;
 $62 = (((($1)) + 1124|0) + ($$025$i<<1)|0);
 $63 = HEAP16[$62>>1]|0;
 $64 = $63&65535;
 $65 = (($61) + ($64))|0;
 $66 = (((($1)) + 1156|0) + ($65)|0);
 $67 = HEAP8[$66>>0]|0;
 $68 = $67&255;
 $69 = ($$025$i|0)==($68|0);
 if (!($69)) {
  ___assert_fail((139955|0),(139212|0),3925,(139971|0));
  // unreachable;
 }
 $70 = $22 >>> $$025$i;
 HEAP32[$5>>2] = $70;
 $71 = (($30) - ($$025$i))|0;
 HEAP32[$2>>2] = $71;
 $72 = (((($1)) + 1444|0) + ($65<<1)|0);
 $73 = HEAP16[$72>>1]|0;
 $74 = $73&65535;
 $$0 = $74;
 return ($$0|0);
}
function _stbi__jpeg_decode_block($0,$1,$2,$3,$4,$5,$6) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 $6 = $6|0;
 var $$0$i$sink = 0, $$0$i$sink$be = 0, $$0$i$sink$ph = 0, $$0$i117$sink = 0, $$0$i117$sink$be = 0, $$0$i117$sink$ph = 0, $$0$i124 = 0, $$0$i135$sink = 0, $$0$i135$sink$be = 0, $$0$i135$sink$ph = 0, $$0$i142 = 0, $$0$i149 = 0, $$0$i163 = 0, $$0$i98$sink = 0, $$0$i98$sink$be = 0, $$0$i98$sink$ph = 0, $$074 = 0, $$4 = 0, $$478$ph = 0, $$478$ph$ph = 0;
 var $$478$ph$ph$in = 0, $$pre = 0, $$pre$i = 0, $$pre$i100 = 0, $$pre$i112 = 0, $$pre$i119 = 0, $$pre$i130 = 0, $$pre$i137 = 0, $$pre$i144 = 0, $$pre$i151 = 0, $$pre$i158 = 0, $$pre$i165 = 0, $$pre$i82 = 0, $$pre$i93 = 0, $$pre$phi$i102Z2D = 0, $$pre$phi$i114Z2D = 0, $$pre$phi$i121Z2D = 0, $$pre$phi$i132Z2D = 0, $$pre$phi$i139Z2D = 0, $$pre$phi$i146Z2D = 0;
 var $$pre$phi$i153Z2D = 0, $$pre$phi$i160Z2D = 0, $$pre$phi$i167Z2D = 0, $$pre$phi$i84Z2D = 0, $$pre$phi$i95Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi187Z2D = 0, $$pre$phiZ2D = 0, $$pre185 = 0, $$pre186 = 0, $$pre5$i = 0, $$pre5$i101 = 0, $$pre5$i113 = 0, $$pre5$i120 = 0, $$pre5$i131 = 0, $$pre5$i138 = 0, $$pre5$i145 = 0, $$pre5$i152 = 0, $$pre5$i159 = 0, $$pre5$i166 = 0;
 var $$pre5$i83 = 0, $$pre5$i94 = 0, $$sink = 0, $$sink$i$i = 0, $$sink$i$i103 = 0, $$sink$i$i115 = 0, $$sink$i$i122 = 0, $$sink$i$i133 = 0, $$sink$i$i140 = 0, $$sink$i$i147 = 0, $$sink$i$i154 = 0, $$sink$i$i161 = 0, $$sink$i$i168 = 0, $$sink$i$i85 = 0, $$sink$i$i96 = 0, $$sink202 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0;
 var $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0;
 var $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0;
 var $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0;
 var $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0;
 var $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0;
 var $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0;
 var $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0;
 var $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0;
 var $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0;
 var $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0;
 var $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0;
 var $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0;
 var $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0;
 var $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0;
 var $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0;
 var $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0;
 var $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0;
 var $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0;
 var $430 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $60 = 0, $61 = 0, $62 = 0;
 var $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0;
 var $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0;
 var dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $7 = ((($0)) + 18368|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)<(16);
 L1: do {
  if ($9) {
   $10 = ((($0)) + 18376|0);
   $11 = ((($0)) + 18364|0);
   L3: while(1) {
    $12 = HEAP32[$10>>2]|0;
    $13 = ($12|0)==(0);
    L5: do {
     if ($13) {
      $14 = HEAP32[$0>>2]|0;
      $15 = ((($14)) + 168|0);
      $16 = HEAP32[$15>>2]|0;
      $17 = ((($14)) + 172|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = ($16>>>0)<($18>>>0);
      if ($19) {
       $20 = ((($16)) + 1|0);
       HEAP32[$15>>2] = $20;
       $21 = HEAP8[$16>>0]|0;
       $$0$i124 = $21;
      } else {
       $22 = ((($14)) + 32|0);
       $23 = HEAP32[$22>>2]|0;
       $24 = ($23|0)==(0);
       if ($24) {
        $86 = 0;
        break;
       }
       $25 = ((($14)) + 16|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ((($14)) + 28|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($14)) + 40|0);
       $30 = ((($14)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (ftCall_iiii($26|0,$28,$29,$31)|0);
       $33 = ($32|0)==(0);
       if ($33) {
        HEAP32[$22>>2] = 0;
        $34 = ((($14)) + 41|0);
        HEAP8[$29>>0] = 0;
        $$pre$phi$i121Z2D = $34;$$sink$i$i122 = $34;$419 = 0;
       } else {
        $35 = (((($14)) + 40|0) + ($32)|0);
        $$pre$i119 = HEAP8[$29>>0]|0;
        $$pre5$i120 = ((($14)) + 41|0);
        $$pre$phi$i121Z2D = $$pre5$i120;$$sink$i$i122 = $35;$419 = $$pre$i119;
       }
       HEAP32[$17>>2] = $$sink$i$i122;
       HEAP32[$15>>2] = $$pre$phi$i121Z2D;
       $$0$i124 = $419;
      }
      $36 = $$0$i124&255;
      $37 = ($$0$i124<<24>>24)==(-1);
      if ($37) {
       $38 = HEAP32[$0>>2]|0;
       $39 = ((($38)) + 168|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = ((($38)) + 172|0);
       $42 = HEAP32[$41>>2]|0;
       $43 = ($40>>>0)<($42>>>0);
       if ($43) {
        $44 = ((($40)) + 1|0);
        HEAP32[$39>>2] = $44;
        $45 = HEAP8[$40>>0]|0;
        $$0$i$sink$ph = $45;
       } else {
        $46 = ((($38)) + 32|0);
        $47 = HEAP32[$46>>2]|0;
        $48 = ($47|0)==(0);
        if ($48) {
         $$0$i$sink$ph = 0;
        } else {
         $49 = ((($38)) + 16|0);
         $50 = HEAP32[$49>>2]|0;
         $51 = ((($38)) + 28|0);
         $52 = HEAP32[$51>>2]|0;
         $53 = ((($38)) + 40|0);
         $54 = ((($38)) + 36|0);
         $55 = HEAP32[$54>>2]|0;
         $56 = (ftCall_iiii($50|0,$52,$53,$55)|0);
         $57 = ($56|0)==(0);
         if ($57) {
          HEAP32[$46>>2] = 0;
          $58 = ((($38)) + 41|0);
          HEAP8[$53>>0] = 0;
          $$pre$phi$i84Z2D = $58;$$sink$i$i85 = $58;$420 = 0;
         } else {
          $59 = (((($38)) + 40|0) + ($56)|0);
          $$pre$i82 = HEAP8[$53>>0]|0;
          $$pre5$i83 = ((($38)) + 41|0);
          $$pre$phi$i84Z2D = $$pre5$i83;$$sink$i$i85 = $59;$420 = $$pre$i82;
         }
         HEAP32[$41>>2] = $$sink$i$i85;
         HEAP32[$39>>2] = $$pre$phi$i84Z2D;
         $$0$i$sink$ph = $420;
        }
       }
       $$0$i$sink = $$0$i$sink$ph;
       while(1) {
        switch ($$0$i$sink<<24>>24) {
        case 0:  {
         $86 = $36;
         break L5;
         break;
        }
        case -1:  {
         break;
        }
        default: {
         break L3;
        }
        }
        $60 = HEAP32[$0>>2]|0;
        $61 = ((($60)) + 168|0);
        $62 = HEAP32[$61>>2]|0;
        $63 = ((($60)) + 172|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = ($62>>>0)<($64>>>0);
        if ($65) {
         $66 = ((($62)) + 1|0);
         HEAP32[$61>>2] = $66;
         $67 = HEAP8[$62>>0]|0;
         $$0$i$sink$be = $67;
        } else {
         $68 = ((($60)) + 32|0);
         $69 = HEAP32[$68>>2]|0;
         $70 = ($69|0)==(0);
         if ($70) {
          $$0$i$sink$be = 0;
         } else {
          $71 = ((($60)) + 16|0);
          $72 = HEAP32[$71>>2]|0;
          $73 = ((($60)) + 28|0);
          $74 = HEAP32[$73>>2]|0;
          $75 = ((($60)) + 40|0);
          $76 = ((($60)) + 36|0);
          $77 = HEAP32[$76>>2]|0;
          $78 = (ftCall_iiii($72|0,$74,$75,$77)|0);
          $79 = ($78|0)==(0);
          if ($79) {
           HEAP32[$68>>2] = 0;
           $80 = ((($60)) + 41|0);
           HEAP8[$75>>0] = 0;
           $$pre$phi$iZ2D = $80;$$sink$i$i = $80;$421 = 0;
          } else {
           $81 = (((($60)) + 40|0) + ($78)|0);
           $$pre$i = HEAP8[$75>>0]|0;
           $$pre5$i = ((($60)) + 41|0);
           $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $81;$421 = $$pre$i;
          }
          HEAP32[$63>>2] = $$sink$i$i;
          HEAP32[$61>>2] = $$pre$phi$iZ2D;
          $$0$i$sink$be = $421;
         }
        }
        $$0$i$sink = $$0$i$sink$be;
       }
      } else {
       $86 = $36;
      }
     } else {
      $86 = 0;
     }
    } while(0);
    $83 = HEAP32[$7>>2]|0;
    $84 = (24 - ($83))|0;
    $85 = $86 << $84;
    $87 = HEAP32[$11>>2]|0;
    $88 = $85 | $87;
    HEAP32[$11>>2] = $88;
    $89 = (($83) + 8)|0;
    HEAP32[$7>>2] = $89;
    $90 = ($83|0)<(17);
    if (!($90)) {
     break L1;
    }
   }
   $82 = ((($0)) + 18372|0);
   HEAP8[$82>>0] = $$0$i$sink;
   HEAP32[$10>>2] = 1;
  }
 } while(0);
 $91 = (_stbi__jpeg_huff_decode($0,$2)|0);
 $92 = ($91|0)<(0);
 if ($92) {
  $$4 = 0;
  return ($$4|0);
 }
 dest=$1; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $93 = ($91|0)==(0);
 do {
  if ($93) {
   $$pre185 = ((($0)) + 18364|0);
   $$pre$phiZ2D = $$pre185;$199 = 0;
  } else {
   $94 = HEAP32[$7>>2]|0;
   $95 = ($94|0)<($91|0);
   L47: do {
    if ($95) {
     $96 = ((($0)) + 18376|0);
     $97 = ((($0)) + 18364|0);
     L49: while(1) {
      $98 = HEAP32[$96>>2]|0;
      $99 = ($98|0)==(0);
      L51: do {
       if ($99) {
        $100 = HEAP32[$0>>2]|0;
        $101 = ((($100)) + 168|0);
        $102 = HEAP32[$101>>2]|0;
        $103 = ((($100)) + 172|0);
        $104 = HEAP32[$103>>2]|0;
        $105 = ($102>>>0)<($104>>>0);
        if ($105) {
         $106 = ((($102)) + 1|0);
         HEAP32[$101>>2] = $106;
         $107 = HEAP8[$102>>0]|0;
         $$0$i163 = $107;
        } else {
         $108 = ((($100)) + 32|0);
         $109 = HEAP32[$108>>2]|0;
         $110 = ($109|0)==(0);
         if ($110) {
          $172 = 0;
          break;
         }
         $111 = ((($100)) + 16|0);
         $112 = HEAP32[$111>>2]|0;
         $113 = ((($100)) + 28|0);
         $114 = HEAP32[$113>>2]|0;
         $115 = ((($100)) + 40|0);
         $116 = ((($100)) + 36|0);
         $117 = HEAP32[$116>>2]|0;
         $118 = (ftCall_iiii($112|0,$114,$115,$117)|0);
         $119 = ($118|0)==(0);
         if ($119) {
          HEAP32[$108>>2] = 0;
          $120 = ((($100)) + 41|0);
          HEAP8[$115>>0] = 0;
          $$pre$phi$i160Z2D = $120;$$sink$i$i161 = $120;$422 = 0;
         } else {
          $121 = (((($100)) + 40|0) + ($118)|0);
          $$pre$i158 = HEAP8[$115>>0]|0;
          $$pre5$i159 = ((($100)) + 41|0);
          $$pre$phi$i160Z2D = $$pre5$i159;$$sink$i$i161 = $121;$422 = $$pre$i158;
         }
         HEAP32[$103>>2] = $$sink$i$i161;
         HEAP32[$101>>2] = $$pre$phi$i160Z2D;
         $$0$i163 = $422;
        }
        $122 = $$0$i163&255;
        $123 = ($$0$i163<<24>>24)==(-1);
        if ($123) {
         $124 = HEAP32[$0>>2]|0;
         $125 = ((($124)) + 168|0);
         $126 = HEAP32[$125>>2]|0;
         $127 = ((($124)) + 172|0);
         $128 = HEAP32[$127>>2]|0;
         $129 = ($126>>>0)<($128>>>0);
         if ($129) {
          $130 = ((($126)) + 1|0);
          HEAP32[$125>>2] = $130;
          $131 = HEAP8[$126>>0]|0;
          $$0$i135$sink$ph = $131;
         } else {
          $132 = ((($124)) + 32|0);
          $133 = HEAP32[$132>>2]|0;
          $134 = ($133|0)==(0);
          if ($134) {
           $$0$i135$sink$ph = 0;
          } else {
           $135 = ((($124)) + 16|0);
           $136 = HEAP32[$135>>2]|0;
           $137 = ((($124)) + 28|0);
           $138 = HEAP32[$137>>2]|0;
           $139 = ((($124)) + 40|0);
           $140 = ((($124)) + 36|0);
           $141 = HEAP32[$140>>2]|0;
           $142 = (ftCall_iiii($136|0,$138,$139,$141)|0);
           $143 = ($142|0)==(0);
           if ($143) {
            HEAP32[$132>>2] = 0;
            $144 = ((($124)) + 41|0);
            HEAP8[$139>>0] = 0;
            $$pre$phi$i167Z2D = $144;$$sink$i$i168 = $144;$423 = 0;
           } else {
            $145 = (((($124)) + 40|0) + ($142)|0);
            $$pre$i165 = HEAP8[$139>>0]|0;
            $$pre5$i166 = ((($124)) + 41|0);
            $$pre$phi$i167Z2D = $$pre5$i166;$$sink$i$i168 = $145;$423 = $$pre$i165;
           }
           HEAP32[$127>>2] = $$sink$i$i168;
           HEAP32[$125>>2] = $$pre$phi$i167Z2D;
           $$0$i135$sink$ph = $423;
          }
         }
         $$0$i135$sink = $$0$i135$sink$ph;
         while(1) {
          switch ($$0$i135$sink<<24>>24) {
          case 0:  {
           $172 = $122;
           break L51;
           break;
          }
          case -1:  {
           break;
          }
          default: {
           break L49;
          }
          }
          $146 = HEAP32[$0>>2]|0;
          $147 = ((($146)) + 168|0);
          $148 = HEAP32[$147>>2]|0;
          $149 = ((($146)) + 172|0);
          $150 = HEAP32[$149>>2]|0;
          $151 = ($148>>>0)<($150>>>0);
          if ($151) {
           $152 = ((($148)) + 1|0);
           HEAP32[$147>>2] = $152;
           $153 = HEAP8[$148>>0]|0;
           $$0$i135$sink$be = $153;
          } else {
           $154 = ((($146)) + 32|0);
           $155 = HEAP32[$154>>2]|0;
           $156 = ($155|0)==(0);
           if ($156) {
            $$0$i135$sink$be = 0;
           } else {
            $157 = ((($146)) + 16|0);
            $158 = HEAP32[$157>>2]|0;
            $159 = ((($146)) + 28|0);
            $160 = HEAP32[$159>>2]|0;
            $161 = ((($146)) + 40|0);
            $162 = ((($146)) + 36|0);
            $163 = HEAP32[$162>>2]|0;
            $164 = (ftCall_iiii($158|0,$160,$161,$163)|0);
            $165 = ($164|0)==(0);
            if ($165) {
             HEAP32[$154>>2] = 0;
             $166 = ((($146)) + 41|0);
             HEAP8[$161>>0] = 0;
             $$pre$phi$i132Z2D = $166;$$sink$i$i133 = $166;$424 = 0;
            } else {
             $167 = (((($146)) + 40|0) + ($164)|0);
             $$pre$i130 = HEAP8[$161>>0]|0;
             $$pre5$i131 = ((($146)) + 41|0);
             $$pre$phi$i132Z2D = $$pre5$i131;$$sink$i$i133 = $167;$424 = $$pre$i130;
            }
            HEAP32[$149>>2] = $$sink$i$i133;
            HEAP32[$147>>2] = $$pre$phi$i132Z2D;
            $$0$i135$sink$be = $424;
           }
          }
          $$0$i135$sink = $$0$i135$sink$be;
         }
        } else {
         $172 = $122;
        }
       } else {
        $172 = 0;
       }
      } while(0);
      $169 = HEAP32[$7>>2]|0;
      $170 = (24 - ($169))|0;
      $171 = $172 << $170;
      $173 = HEAP32[$97>>2]|0;
      $174 = $171 | $173;
      HEAP32[$97>>2] = $174;
      $175 = (($169) + 8)|0;
      HEAP32[$7>>2] = $175;
      $176 = ($169|0)<(17);
      if (!($176)) {
       $$pre$phi187Z2D = $97;
       break L47;
      }
     }
     $168 = ((($0)) + 18372|0);
     HEAP8[$168>>0] = $$0$i135$sink;
     HEAP32[$96>>2] = 1;
     $$pre$phi187Z2D = $97;
    } else {
     $$pre186 = ((($0)) + 18364|0);
     $$pre$phi187Z2D = $$pre186;
    }
   } while(0);
   $177 = HEAP32[$$pre$phi187Z2D>>2]|0;
   $178 = $177 << $91;
   $179 = (32 - ($91))|0;
   $180 = $177 >>> $179;
   $181 = $178 | $180;
   $182 = ($91>>>0)<(17);
   if ($182) {
    $183 = $177 >> 31;
    $184 = (114720 + ($91<<2)|0);
    $185 = HEAP32[$184>>2]|0;
    $186 = $185 ^ -1;
    $187 = $181 & $186;
    HEAP32[$$pre$phi187Z2D>>2] = $187;
    $188 = $185 & $181;
    $189 = HEAP32[$7>>2]|0;
    $190 = (($189) - ($91))|0;
    HEAP32[$7>>2] = $190;
    $191 = (114800 + ($91<<2)|0);
    $192 = HEAP32[$191>>2]|0;
    $193 = $183 ^ -1;
    $194 = $192 & $193;
    $195 = (($194) + ($188))|0;
    $$pre$phiZ2D = $$pre$phi187Z2D;$199 = $195;
    break;
   } else {
    ___assert_fail((140107|0),(139212|0),1907,(140170|0));
    // unreachable;
   }
  }
 } while(0);
 $196 = (((((($0)) + 18076|0) + (($5*72)|0)|0)) + 24|0);
 $197 = HEAP32[$196>>2]|0;
 $198 = (($197) + ($199))|0;
 HEAP32[$196>>2] = $198;
 $200 = HEAP16[$6>>1]|0;
 $201 = $200&65535;
 $202 = Math_imul($198, $201)|0;
 $203 = $202&65535;
 HEAP16[$1>>1] = $203;
 $204 = ((($0)) + 18376|0);
 $205 = ((($0)) + 18372|0);
 $$074 = 1;
 L92: while(1) {
  $206 = HEAP32[$7>>2]|0;
  $207 = ($206|0)<(16);
  L94: do {
   if ($207) {
    L96: while(1) {
     $208 = HEAP32[$204>>2]|0;
     $209 = ($208|0)==(0);
     L98: do {
      if ($209) {
       $210 = HEAP32[$0>>2]|0;
       $211 = ((($210)) + 168|0);
       $212 = HEAP32[$211>>2]|0;
       $213 = ((($210)) + 172|0);
       $214 = HEAP32[$213>>2]|0;
       $215 = ($212>>>0)<($214>>>0);
       if ($215) {
        $216 = ((($212)) + 1|0);
        HEAP32[$211>>2] = $216;
        $217 = HEAP8[$212>>0]|0;
        $$0$i142 = $217;
       } else {
        $218 = ((($210)) + 32|0);
        $219 = HEAP32[$218>>2]|0;
        $220 = ($219|0)==(0);
        if ($220) {
         $281 = 0;
         break;
        }
        $221 = ((($210)) + 16|0);
        $222 = HEAP32[$221>>2]|0;
        $223 = ((($210)) + 28|0);
        $224 = HEAP32[$223>>2]|0;
        $225 = ((($210)) + 40|0);
        $226 = ((($210)) + 36|0);
        $227 = HEAP32[$226>>2]|0;
        $228 = (ftCall_iiii($222|0,$224,$225,$227)|0);
        $229 = ($228|0)==(0);
        if ($229) {
         HEAP32[$218>>2] = 0;
         $230 = ((($210)) + 41|0);
         HEAP8[$225>>0] = 0;
         $$pre$phi$i139Z2D = $230;$$sink$i$i140 = $230;$425 = 0;
        } else {
         $231 = (((($210)) + 40|0) + ($228)|0);
         $$pre$i137 = HEAP8[$225>>0]|0;
         $$pre5$i138 = ((($210)) + 41|0);
         $$pre$phi$i139Z2D = $$pre5$i138;$$sink$i$i140 = $231;$425 = $$pre$i137;
        }
        HEAP32[$213>>2] = $$sink$i$i140;
        HEAP32[$211>>2] = $$pre$phi$i139Z2D;
        $$0$i142 = $425;
       }
       $232 = $$0$i142&255;
       $233 = ($$0$i142<<24>>24)==(-1);
       if ($233) {
        $234 = HEAP32[$0>>2]|0;
        $235 = ((($234)) + 168|0);
        $236 = HEAP32[$235>>2]|0;
        $237 = ((($234)) + 172|0);
        $238 = HEAP32[$237>>2]|0;
        $239 = ($236>>>0)<($238>>>0);
        if ($239) {
         $240 = ((($236)) + 1|0);
         HEAP32[$235>>2] = $240;
         $241 = HEAP8[$236>>0]|0;
         $$0$i98$sink$ph = $241;
        } else {
         $242 = ((($234)) + 32|0);
         $243 = HEAP32[$242>>2]|0;
         $244 = ($243|0)==(0);
         if ($244) {
          $$0$i98$sink$ph = 0;
         } else {
          $245 = ((($234)) + 16|0);
          $246 = HEAP32[$245>>2]|0;
          $247 = ((($234)) + 28|0);
          $248 = HEAP32[$247>>2]|0;
          $249 = ((($234)) + 40|0);
          $250 = ((($234)) + 36|0);
          $251 = HEAP32[$250>>2]|0;
          $252 = (ftCall_iiii($246|0,$248,$249,$251)|0);
          $253 = ($252|0)==(0);
          if ($253) {
           HEAP32[$242>>2] = 0;
           $254 = ((($234)) + 41|0);
           HEAP8[$249>>0] = 0;
           $$pre$phi$i102Z2D = $254;$$sink$i$i103 = $254;$426 = 0;
          } else {
           $255 = (((($234)) + 40|0) + ($252)|0);
           $$pre$i100 = HEAP8[$249>>0]|0;
           $$pre5$i101 = ((($234)) + 41|0);
           $$pre$phi$i102Z2D = $$pre5$i101;$$sink$i$i103 = $255;$426 = $$pre$i100;
          }
          HEAP32[$237>>2] = $$sink$i$i103;
          HEAP32[$235>>2] = $$pre$phi$i102Z2D;
          $$0$i98$sink$ph = $426;
         }
        }
        $$0$i98$sink = $$0$i98$sink$ph;
        while(1) {
         switch ($$0$i98$sink<<24>>24) {
         case 0:  {
          $281 = $232;
          break L98;
          break;
         }
         case -1:  {
          break;
         }
         default: {
          break L96;
         }
         }
         $256 = HEAP32[$0>>2]|0;
         $257 = ((($256)) + 168|0);
         $258 = HEAP32[$257>>2]|0;
         $259 = ((($256)) + 172|0);
         $260 = HEAP32[$259>>2]|0;
         $261 = ($258>>>0)<($260>>>0);
         if ($261) {
          $262 = ((($258)) + 1|0);
          HEAP32[$257>>2] = $262;
          $263 = HEAP8[$258>>0]|0;
          $$0$i98$sink$be = $263;
         } else {
          $264 = ((($256)) + 32|0);
          $265 = HEAP32[$264>>2]|0;
          $266 = ($265|0)==(0);
          if ($266) {
           $$0$i98$sink$be = 0;
          } else {
           $267 = ((($256)) + 16|0);
           $268 = HEAP32[$267>>2]|0;
           $269 = ((($256)) + 28|0);
           $270 = HEAP32[$269>>2]|0;
           $271 = ((($256)) + 40|0);
           $272 = ((($256)) + 36|0);
           $273 = HEAP32[$272>>2]|0;
           $274 = (ftCall_iiii($268|0,$270,$271,$273)|0);
           $275 = ($274|0)==(0);
           if ($275) {
            HEAP32[$264>>2] = 0;
            $276 = ((($256)) + 41|0);
            HEAP8[$271>>0] = 0;
            $$pre$phi$i95Z2D = $276;$$sink$i$i96 = $276;$427 = 0;
           } else {
            $277 = (((($256)) + 40|0) + ($274)|0);
            $$pre$i93 = HEAP8[$271>>0]|0;
            $$pre5$i94 = ((($256)) + 41|0);
            $$pre$phi$i95Z2D = $$pre5$i94;$$sink$i$i96 = $277;$427 = $$pre$i93;
           }
           HEAP32[$259>>2] = $$sink$i$i96;
           HEAP32[$257>>2] = $$pre$phi$i95Z2D;
           $$0$i98$sink$be = $427;
          }
         }
         $$0$i98$sink = $$0$i98$sink$be;
        }
       } else {
        $281 = $232;
       }
      } else {
       $281 = 0;
      }
     } while(0);
     $278 = HEAP32[$7>>2]|0;
     $279 = (24 - ($278))|0;
     $280 = $281 << $279;
     $282 = HEAP32[$$pre$phiZ2D>>2]|0;
     $283 = $280 | $282;
     HEAP32[$$pre$phiZ2D>>2] = $283;
     $284 = (($278) + 8)|0;
     HEAP32[$7>>2] = $284;
     $285 = ($278|0)<(17);
     if (!($285)) {
      break L94;
     }
    }
    HEAP8[$205>>0] = $$0$i98$sink;
    HEAP32[$204>>2] = 1;
   }
  } while(0);
  $286 = HEAP32[$$pre$phiZ2D>>2]|0;
  $287 = $286 >>> 23;
  $288 = (($4) + ($287<<1)|0);
  $289 = HEAP16[$288>>1]|0;
  $290 = $289 << 16 >> 16;
  $291 = ($289<<16>>16)==(0);
  do {
   if ($291) {
    $303 = (_stbi__jpeg_huff_decode($0,$3)|0);
    $304 = ($303|0)<(0);
    if ($304) {
     $$4 = 0;
     label = 137;
     break L92;
    }
    $305 = $303 & 15;
    $306 = ($305|0)==(0);
    if ($306) {
     $307 = ($303|0)==(240);
     $308 = (($$074) + 16)|0;
     if ($307) {
      $$478$ph = $308;
      break;
     } else {
      $$4 = 1;
      label = 137;
      break L92;
     }
    }
    $309 = $303 >>> 4;
    $310 = (($309) + ($$074))|0;
    $311 = (114640 + ($310)|0);
    $312 = HEAP8[$311>>0]|0;
    $313 = $312&255;
    $314 = HEAP32[$7>>2]|0;
    $315 = ($314|0)<($305|0);
    L140: do {
     if ($315) {
      L142: while(1) {
       $316 = HEAP32[$204>>2]|0;
       $317 = ($316|0)==(0);
       L144: do {
        if ($317) {
         $318 = HEAP32[$0>>2]|0;
         $319 = ((($318)) + 168|0);
         $320 = HEAP32[$319>>2]|0;
         $321 = ((($318)) + 172|0);
         $322 = HEAP32[$321>>2]|0;
         $323 = ($320>>>0)<($322>>>0);
         if ($323) {
          $324 = ((($320)) + 1|0);
          HEAP32[$319>>2] = $324;
          $325 = HEAP8[$320>>0]|0;
          $$0$i149 = $325;
         } else {
          $326 = ((($318)) + 32|0);
          $327 = HEAP32[$326>>2]|0;
          $328 = ($327|0)==(0);
          if ($328) {
           $389 = 0;
           break;
          }
          $329 = ((($318)) + 16|0);
          $330 = HEAP32[$329>>2]|0;
          $331 = ((($318)) + 28|0);
          $332 = HEAP32[$331>>2]|0;
          $333 = ((($318)) + 40|0);
          $334 = ((($318)) + 36|0);
          $335 = HEAP32[$334>>2]|0;
          $336 = (ftCall_iiii($330|0,$332,$333,$335)|0);
          $337 = ($336|0)==(0);
          if ($337) {
           HEAP32[$326>>2] = 0;
           $338 = ((($318)) + 41|0);
           HEAP8[$333>>0] = 0;
           $$pre$phi$i146Z2D = $338;$$sink$i$i147 = $338;$428 = 0;
          } else {
           $339 = (((($318)) + 40|0) + ($336)|0);
           $$pre$i144 = HEAP8[$333>>0]|0;
           $$pre5$i145 = ((($318)) + 41|0);
           $$pre$phi$i146Z2D = $$pre5$i145;$$sink$i$i147 = $339;$428 = $$pre$i144;
          }
          HEAP32[$321>>2] = $$sink$i$i147;
          HEAP32[$319>>2] = $$pre$phi$i146Z2D;
          $$0$i149 = $428;
         }
         $340 = $$0$i149&255;
         $341 = ($$0$i149<<24>>24)==(-1);
         if ($341) {
          $342 = HEAP32[$0>>2]|0;
          $343 = ((($342)) + 168|0);
          $344 = HEAP32[$343>>2]|0;
          $345 = ((($342)) + 172|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($344>>>0)<($346>>>0);
          if ($347) {
           $348 = ((($344)) + 1|0);
           HEAP32[$343>>2] = $348;
           $349 = HEAP8[$344>>0]|0;
           $$0$i117$sink$ph = $349;
          } else {
           $350 = ((($342)) + 32|0);
           $351 = HEAP32[$350>>2]|0;
           $352 = ($351|0)==(0);
           if ($352) {
            $$0$i117$sink$ph = 0;
           } else {
            $353 = ((($342)) + 16|0);
            $354 = HEAP32[$353>>2]|0;
            $355 = ((($342)) + 28|0);
            $356 = HEAP32[$355>>2]|0;
            $357 = ((($342)) + 40|0);
            $358 = ((($342)) + 36|0);
            $359 = HEAP32[$358>>2]|0;
            $360 = (ftCall_iiii($354|0,$356,$357,$359)|0);
            $361 = ($360|0)==(0);
            if ($361) {
             HEAP32[$350>>2] = 0;
             $362 = ((($342)) + 41|0);
             HEAP8[$357>>0] = 0;
             $$pre$phi$i153Z2D = $362;$$sink$i$i154 = $362;$429 = 0;
            } else {
             $363 = (((($342)) + 40|0) + ($360)|0);
             $$pre$i151 = HEAP8[$357>>0]|0;
             $$pre5$i152 = ((($342)) + 41|0);
             $$pre$phi$i153Z2D = $$pre5$i152;$$sink$i$i154 = $363;$429 = $$pre$i151;
            }
            HEAP32[$345>>2] = $$sink$i$i154;
            HEAP32[$343>>2] = $$pre$phi$i153Z2D;
            $$0$i117$sink$ph = $429;
           }
          }
          $$0$i117$sink = $$0$i117$sink$ph;
          while(1) {
           switch ($$0$i117$sink<<24>>24) {
           case 0:  {
            $389 = $340;
            break L144;
            break;
           }
           case -1:  {
            break;
           }
           default: {
            break L142;
           }
           }
           $364 = HEAP32[$0>>2]|0;
           $365 = ((($364)) + 168|0);
           $366 = HEAP32[$365>>2]|0;
           $367 = ((($364)) + 172|0);
           $368 = HEAP32[$367>>2]|0;
           $369 = ($366>>>0)<($368>>>0);
           do {
            if ($369) {
             $370 = ((($366)) + 1|0);
             HEAP32[$365>>2] = $370;
             $371 = HEAP8[$366>>0]|0;
             $$0$i117$sink$be = $371;
            } else {
             $372 = ((($364)) + 32|0);
             $373 = HEAP32[$372>>2]|0;
             $374 = ($373|0)==(0);
             if ($374) {
              $$0$i117$sink$be = 0;
              break;
             }
             $375 = ((($364)) + 16|0);
             $376 = HEAP32[$375>>2]|0;
             $377 = ((($364)) + 28|0);
             $378 = HEAP32[$377>>2]|0;
             $379 = ((($364)) + 40|0);
             $380 = ((($364)) + 36|0);
             $381 = HEAP32[$380>>2]|0;
             $382 = (ftCall_iiii($376|0,$378,$379,$381)|0);
             $383 = ($382|0)==(0);
             if ($383) {
              HEAP32[$372>>2] = 0;
              $384 = ((($364)) + 41|0);
              HEAP8[$379>>0] = 0;
              $$pre$phi$i114Z2D = $384;$$sink$i$i115 = $384;$430 = 0;
             } else {
              $385 = (((($364)) + 40|0) + ($382)|0);
              $$pre$i112 = HEAP8[$379>>0]|0;
              $$pre5$i113 = ((($364)) + 41|0);
              $$pre$phi$i114Z2D = $$pre5$i113;$$sink$i$i115 = $385;$430 = $$pre$i112;
             }
             HEAP32[$367>>2] = $$sink$i$i115;
             HEAP32[$365>>2] = $$pre$phi$i114Z2D;
             $$0$i117$sink$be = $430;
            }
           } while(0);
           $$0$i117$sink = $$0$i117$sink$be;
          }
         } else {
          $389 = $340;
         }
        } else {
         $389 = 0;
        }
       } while(0);
       $386 = HEAP32[$7>>2]|0;
       $387 = (24 - ($386))|0;
       $388 = $389 << $387;
       $390 = HEAP32[$$pre$phiZ2D>>2]|0;
       $391 = $388 | $390;
       HEAP32[$$pre$phiZ2D>>2] = $391;
       $392 = (($386) + 8)|0;
       HEAP32[$7>>2] = $392;
       $393 = ($386|0)<(17);
       if (!($393)) {
        $406 = $392;
        break L140;
       }
      }
      HEAP8[$205>>0] = $$0$i117$sink;
      HEAP32[$204>>2] = 1;
      $$pre = HEAP32[$7>>2]|0;
      $406 = $$pre;
     } else {
      $406 = $314;
     }
    } while(0);
    $394 = HEAP32[$$pre$phiZ2D>>2]|0;
    $395 = $394 << $305;
    $396 = (32 - ($305))|0;
    $397 = $394 >>> $396;
    $398 = $395 | $397;
    $399 = $394 >> 31;
    $400 = (114720 + ($305<<2)|0);
    $401 = HEAP32[$400>>2]|0;
    $402 = $401 ^ -1;
    $403 = $398 & $402;
    HEAP32[$$pre$phiZ2D>>2] = $403;
    $404 = $398 & $401;
    $405 = (($406) - ($305))|0;
    HEAP32[$7>>2] = $405;
    $407 = (114800 + ($305<<2)|0);
    $408 = HEAP32[$407>>2]|0;
    $409 = $399 ^ -1;
    $410 = $408 & $409;
    $411 = (($410) + ($404))|0;
    $$478$ph$ph$in = $310;$$sink = $411;$$sink202 = $313;
    label = 135;
   } else {
    $292 = $290 >>> 4;
    $293 = $292 & 15;
    $294 = (($293) + ($$074))|0;
    $295 = $290 & 15;
    $296 = $286 << $295;
    HEAP32[$$pre$phiZ2D>>2] = $296;
    $297 = HEAP32[$7>>2]|0;
    $298 = (($297) - ($295))|0;
    HEAP32[$7>>2] = $298;
    $299 = (114640 + ($294)|0);
    $300 = HEAP8[$299>>0]|0;
    $301 = $300&255;
    $302 = $290 >> 8;
    $$478$ph$ph$in = $294;$$sink = $302;$$sink202 = $301;
    label = 135;
   }
  } while(0);
  if ((label|0) == 135) {
   label = 0;
   $$478$ph$ph = (($$478$ph$ph$in) + 1)|0;
   $412 = (($6) + ($$sink202<<1)|0);
   $413 = HEAP16[$412>>1]|0;
   $414 = $413&65535;
   $415 = Math_imul($$sink, $414)|0;
   $416 = $415&65535;
   $417 = (($1) + ($$sink202<<1)|0);
   HEAP16[$417>>1] = $416;
   $$478$ph = $$478$ph$ph;
  }
  $418 = ($$478$ph|0)<(64);
  if ($418) {
   $$074 = $$478$ph;
  } else {
   $$4 = 1;
   label = 137;
   break;
  }
 }
 if ((label|0) == 137) {
  return ($$4|0);
 }
 return (0)|0;
}
function _stbi__jpeg_decode_block_prog_dc($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$0$i$sink = 0, $$0$i$sink$be = 0, $$0$i$sink$ph = 0, $$0$i37$sink = 0, $$0$i37$sink$be = 0, $$0$i37$sink$ph = 0, $$0$i44 = 0, $$0$i58 = 0, $$0$i76$sink = 0, $$0$i76$sink$be = 0, $$0$i76$sink$ph = 0, $$0$i83 = 0, $$ph = 0, $$pr = 0, $$pre = 0, $$pre$i$pre = 0, $$pre$i27 = 0, $$pre$i32 = 0, $$pre$i39 = 0;
 var $$pre$i46 = 0, $$pre$i53 = 0, $$pre$i60 = 0, $$pre$i71 = 0, $$pre$i78 = 0, $$pre$i85 = 0, $$pre$phi$i34Z2D = 0, $$pre$phi$i41Z2D = 0, $$pre$phi$i48Z2D = 0, $$pre$phi$i55Z2D = 0, $$pre$phi$i62Z2D = 0, $$pre$phi$i73Z2D = 0, $$pre$phi$i80Z2D = 0, $$pre$phi$i87Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi100$phZ2D = 0, $$pre$phi100Z2D = 0, $$pre$phiZ2D = 0, $$pre5$i = 0, $$pre5$i33 = 0;
 var $$pre5$i40 = 0, $$pre5$i47 = 0, $$pre5$i54 = 0, $$pre5$i61 = 0, $$pre5$i72 = 0, $$pre5$i79 = 0, $$pre5$i86 = 0, $$pre99 = 0, $$sink$i$i = 0, $$sink$i$i35 = 0, $$sink$i$i42 = 0, $$sink$i$i49 = 0, $$sink$i$i56 = 0, $$sink$i$i63 = 0, $$sink$i$i74 = 0, $$sink$i$i81 = 0, $$sink$i$i88 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0;
 var $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0;
 var $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0;
 var $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0;
 var $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0;
 var $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0;
 var $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $sext = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 $4 = ((($0)) + 18388|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = ($5|0)==(0);
 if (!($6)) {
  $$0 = 0;
  return ($$0|0);
 }
 $7 = ((($0)) + 18368|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ($8|0)<(16);
 L4: do {
  if ($9) {
   $10 = ((($0)) + 18376|0);
   $11 = ((($0)) + 18364|0);
   L6: while(1) {
    $12 = HEAP32[$10>>2]|0;
    $13 = ($12|0)==(0);
    L8: do {
     if ($13) {
      $14 = HEAP32[$0>>2]|0;
      $15 = ((($14)) + 168|0);
      $16 = HEAP32[$15>>2]|0;
      $17 = ((($14)) + 172|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = ($16>>>0)<($18>>>0);
      if ($19) {
       $20 = ((($16)) + 1|0);
       HEAP32[$15>>2] = $20;
       $21 = HEAP8[$16>>0]|0;
       $$0$i58 = $21;
      } else {
       $22 = ((($14)) + 32|0);
       $23 = HEAP32[$22>>2]|0;
       $24 = ($23|0)==(0);
       if ($24) {
        $86 = 0;
        break;
       }
       $25 = ((($14)) + 16|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = ((($14)) + 28|0);
       $28 = HEAP32[$27>>2]|0;
       $29 = ((($14)) + 40|0);
       $30 = ((($14)) + 36|0);
       $31 = HEAP32[$30>>2]|0;
       $32 = (ftCall_iiii($26|0,$28,$29,$31)|0);
       $33 = ($32|0)==(0);
       if ($33) {
        HEAP32[$22>>2] = 0;
        $34 = ((($14)) + 41|0);
        HEAP8[$29>>0] = 0;
        $$pre$phi$i55Z2D = $34;$$sink$i$i56 = $34;$301 = 0;
       } else {
        $35 = (((($14)) + 40|0) + ($32)|0);
        $$pre$i53 = HEAP8[$29>>0]|0;
        $$pre5$i54 = ((($14)) + 41|0);
        $$pre$phi$i55Z2D = $$pre5$i54;$$sink$i$i56 = $35;$301 = $$pre$i53;
       }
       HEAP32[$17>>2] = $$sink$i$i56;
       HEAP32[$15>>2] = $$pre$phi$i55Z2D;
       $$0$i58 = $301;
      }
      $36 = $$0$i58&255;
      $37 = ($$0$i58<<24>>24)==(-1);
      if ($37) {
       $38 = HEAP32[$0>>2]|0;
       $39 = ((($38)) + 168|0);
       $40 = HEAP32[$39>>2]|0;
       $41 = ((($38)) + 172|0);
       $42 = HEAP32[$41>>2]|0;
       $43 = ($40>>>0)<($42>>>0);
       if ($43) {
        $44 = ((($40)) + 1|0);
        HEAP32[$39>>2] = $44;
        $45 = HEAP8[$40>>0]|0;
        $$0$i37$sink$ph = $45;
       } else {
        $46 = ((($38)) + 32|0);
        $47 = HEAP32[$46>>2]|0;
        $48 = ($47|0)==(0);
        if ($48) {
         $$0$i37$sink$ph = 0;
        } else {
         $49 = ((($38)) + 16|0);
         $50 = HEAP32[$49>>2]|0;
         $51 = ((($38)) + 28|0);
         $52 = HEAP32[$51>>2]|0;
         $53 = ((($38)) + 40|0);
         $54 = ((($38)) + 36|0);
         $55 = HEAP32[$54>>2]|0;
         $56 = (ftCall_iiii($50|0,$52,$53,$55)|0);
         $57 = ($56|0)==(0);
         if ($57) {
          HEAP32[$46>>2] = 0;
          $58 = ((($38)) + 41|0);
          HEAP8[$53>>0] = 0;
          $$pre$phi$i62Z2D = $58;$$sink$i$i63 = $58;$302 = 0;
         } else {
          $59 = (((($38)) + 40|0) + ($56)|0);
          $$pre$i60 = HEAP8[$53>>0]|0;
          $$pre5$i61 = ((($38)) + 41|0);
          $$pre$phi$i62Z2D = $$pre5$i61;$$sink$i$i63 = $59;$302 = $$pre$i60;
         }
         HEAP32[$41>>2] = $$sink$i$i63;
         HEAP32[$39>>2] = $$pre$phi$i62Z2D;
         $$0$i37$sink$ph = $302;
        }
       }
       $$0$i37$sink = $$0$i37$sink$ph;
       while(1) {
        switch ($$0$i37$sink<<24>>24) {
        case 0:  {
         $86 = $36;
         break L8;
         break;
        }
        case -1:  {
         break;
        }
        default: {
         break L6;
        }
        }
        $60 = HEAP32[$0>>2]|0;
        $61 = ((($60)) + 168|0);
        $62 = HEAP32[$61>>2]|0;
        $63 = ((($60)) + 172|0);
        $64 = HEAP32[$63>>2]|0;
        $65 = ($62>>>0)<($64>>>0);
        if ($65) {
         $66 = ((($62)) + 1|0);
         HEAP32[$61>>2] = $66;
         $67 = HEAP8[$62>>0]|0;
         $$0$i37$sink$be = $67;
        } else {
         $68 = ((($60)) + 32|0);
         $69 = HEAP32[$68>>2]|0;
         $70 = ($69|0)==(0);
         if ($70) {
          $$0$i37$sink$be = 0;
         } else {
          $71 = ((($60)) + 16|0);
          $72 = HEAP32[$71>>2]|0;
          $73 = ((($60)) + 28|0);
          $74 = HEAP32[$73>>2]|0;
          $75 = ((($60)) + 40|0);
          $76 = ((($60)) + 36|0);
          $77 = HEAP32[$76>>2]|0;
          $78 = (ftCall_iiii($72|0,$74,$75,$77)|0);
          $79 = ($78|0)==(0);
          if ($79) {
           HEAP32[$68>>2] = 0;
           $80 = ((($60)) + 41|0);
           HEAP8[$75>>0] = 0;
           $$pre$phi$i34Z2D = $80;$$sink$i$i35 = $80;$303 = 0;
          } else {
           $81 = (((($60)) + 40|0) + ($78)|0);
           $$pre$i32 = HEAP8[$75>>0]|0;
           $$pre5$i33 = ((($60)) + 41|0);
           $$pre$phi$i34Z2D = $$pre5$i33;$$sink$i$i35 = $81;$303 = $$pre$i32;
          }
          HEAP32[$63>>2] = $$sink$i$i35;
          HEAP32[$61>>2] = $$pre$phi$i34Z2D;
          $$0$i37$sink$be = $303;
         }
        }
        $$0$i37$sink = $$0$i37$sink$be;
       }
      } else {
       $86 = $36;
      }
     } else {
      $86 = 0;
     }
    } while(0);
    $83 = HEAP32[$7>>2]|0;
    $84 = (24 - ($83))|0;
    $85 = $86 << $84;
    $87 = HEAP32[$11>>2]|0;
    $88 = $85 | $87;
    HEAP32[$11>>2] = $88;
    $89 = (($83) + 8)|0;
    HEAP32[$7>>2] = $89;
    $90 = ($83|0)<(17);
    if (!($90)) {
     break L4;
    }
   }
   $82 = ((($0)) + 18372|0);
   HEAP8[$82>>0] = $$0$i37$sink;
   HEAP32[$10>>2] = 1;
  }
 } while(0);
 $91 = ((($0)) + 18392|0);
 $92 = HEAP32[$91>>2]|0;
 $93 = ($92|0)==(0);
 if (!($93)) {
  $206 = HEAP32[$7>>2]|0;
  $207 = ($206|0)<(1);
  L46: do {
   if ($207) {
    $208 = ((($0)) + 18376|0);
    $209 = ((($0)) + 18364|0);
    L48: while(1) {
     $210 = HEAP32[$208>>2]|0;
     $211 = ($210|0)==(0);
     L50: do {
      if ($211) {
       $212 = HEAP32[$0>>2]|0;
       $213 = ((($212)) + 168|0);
       $214 = HEAP32[$213>>2]|0;
       $215 = ((($212)) + 172|0);
       $216 = HEAP32[$215>>2]|0;
       $217 = ($214>>>0)<($216>>>0);
       if ($217) {
        $218 = ((($214)) + 1|0);
        HEAP32[$213>>2] = $218;
        $219 = HEAP8[$214>>0]|0;
        $$0$i44 = $219;
       } else {
        $220 = ((($212)) + 32|0);
        $221 = HEAP32[$220>>2]|0;
        $222 = ($221|0)==(0);
        if ($222) {
         $284 = 0;
         break;
        }
        $223 = ((($212)) + 16|0);
        $224 = HEAP32[$223>>2]|0;
        $225 = ((($212)) + 28|0);
        $226 = HEAP32[$225>>2]|0;
        $227 = ((($212)) + 40|0);
        $228 = ((($212)) + 36|0);
        $229 = HEAP32[$228>>2]|0;
        $230 = (ftCall_iiii($224|0,$226,$227,$229)|0);
        $231 = ($230|0)==(0);
        if ($231) {
         HEAP32[$220>>2] = 0;
         $232 = ((($212)) + 41|0);
         HEAP8[$227>>0] = 0;
         $$pre$phi$i41Z2D = $232;$$sink$i$i42 = $232;$307 = 0;
        } else {
         $233 = (((($212)) + 40|0) + ($230)|0);
         $$pre$i39 = HEAP8[$227>>0]|0;
         $$pre5$i40 = ((($212)) + 41|0);
         $$pre$phi$i41Z2D = $$pre5$i40;$$sink$i$i42 = $233;$307 = $$pre$i39;
        }
        HEAP32[$215>>2] = $$sink$i$i42;
        HEAP32[$213>>2] = $$pre$phi$i41Z2D;
        $$0$i44 = $307;
       }
       $234 = $$0$i44&255;
       $235 = ($$0$i44<<24>>24)==(-1);
       if ($235) {
        $236 = HEAP32[$0>>2]|0;
        $237 = ((($236)) + 168|0);
        $238 = HEAP32[$237>>2]|0;
        $239 = ((($236)) + 172|0);
        $240 = HEAP32[$239>>2]|0;
        $241 = ($238>>>0)<($240>>>0);
        if ($241) {
         $242 = ((($238)) + 1|0);
         HEAP32[$237>>2] = $242;
         $243 = HEAP8[$238>>0]|0;
         $$0$i$sink$ph = $243;
        } else {
         $244 = ((($236)) + 32|0);
         $245 = HEAP32[$244>>2]|0;
         $246 = ($245|0)==(0);
         if ($246) {
          $$0$i$sink$ph = 0;
         } else {
          $247 = ((($236)) + 16|0);
          $248 = HEAP32[$247>>2]|0;
          $249 = ((($236)) + 28|0);
          $250 = HEAP32[$249>>2]|0;
          $251 = ((($236)) + 40|0);
          $252 = ((($236)) + 36|0);
          $253 = HEAP32[$252>>2]|0;
          $254 = (ftCall_iiii($248|0,$250,$251,$253)|0);
          $255 = ($254|0)==(0);
          if ($255) {
           HEAP32[$244>>2] = 0;
           $256 = ((($236)) + 41|0);
           HEAP8[$251>>0] = 0;
           $$pre$phi$i48Z2D = $256;$$sink$i$i49 = $256;$308 = 0;
          } else {
           $257 = (((($236)) + 40|0) + ($254)|0);
           $$pre$i46 = HEAP8[$251>>0]|0;
           $$pre5$i47 = ((($236)) + 41|0);
           $$pre$phi$i48Z2D = $$pre5$i47;$$sink$i$i49 = $257;$308 = $$pre$i46;
          }
          HEAP32[$239>>2] = $$sink$i$i49;
          HEAP32[$237>>2] = $$pre$phi$i48Z2D;
          $$0$i$sink$ph = $308;
         }
        }
        $$0$i$sink = $$0$i$sink$ph;
        while(1) {
         switch ($$0$i$sink<<24>>24) {
         case 0:  {
          $284 = $234;
          break L50;
          break;
         }
         case -1:  {
          break;
         }
         default: {
          break L48;
         }
         }
         $258 = HEAP32[$0>>2]|0;
         $259 = ((($258)) + 168|0);
         $260 = HEAP32[$259>>2]|0;
         $261 = ((($258)) + 172|0);
         $262 = HEAP32[$261>>2]|0;
         $263 = ($260>>>0)<($262>>>0);
         if ($263) {
          $264 = ((($260)) + 1|0);
          HEAP32[$259>>2] = $264;
          $265 = HEAP8[$260>>0]|0;
          $$0$i$sink$be = $265;
         } else {
          $266 = ((($258)) + 32|0);
          $267 = HEAP32[$266>>2]|0;
          $268 = ($267|0)==(0);
          if ($268) {
           $$0$i$sink$be = 0;
          } else {
           $269 = ((($258)) + 16|0);
           $270 = HEAP32[$269>>2]|0;
           $271 = ((($258)) + 28|0);
           $272 = HEAP32[$271>>2]|0;
           $273 = ((($258)) + 40|0);
           $274 = ((($258)) + 36|0);
           $275 = HEAP32[$274>>2]|0;
           $276 = (ftCall_iiii($270|0,$272,$273,$275)|0);
           $277 = ($276|0)==(0);
           if ($277) {
            HEAP32[$266>>2] = 0;
            $278 = ((($258)) + 41|0);
            HEAP8[$273>>0] = 0;
            $$pre$phi$iZ2D = $278;$$sink$i$i = $278;$309 = 0;
           } else {
            $279 = (((($258)) + 40|0) + ($276)|0);
            $$pre$i27 = HEAP8[$273>>0]|0;
            $$pre5$i = ((($258)) + 41|0);
            $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $279;$309 = $$pre$i27;
           }
           HEAP32[$261>>2] = $$sink$i$i;
           HEAP32[$259>>2] = $$pre$phi$iZ2D;
           $$0$i$sink$be = $309;
          }
         }
         $$0$i$sink = $$0$i$sink$be;
        }
       } else {
        $284 = $234;
       }
      } else {
       $284 = 0;
      }
     } while(0);
     $281 = HEAP32[$7>>2]|0;
     $282 = (24 - ($281))|0;
     $283 = $284 << $282;
     $285 = HEAP32[$209>>2]|0;
     $286 = $283 | $285;
     HEAP32[$209>>2] = $286;
     $287 = (($281) + 8)|0;
     HEAP32[$7>>2] = $287;
     $288 = ($281|0)<(17);
     if (!($288)) {
      $$pre$phi100Z2D = $209;$290 = $286;$292 = $287;
      break L46;
     }
    }
    $280 = ((($0)) + 18372|0);
    HEAP8[$280>>0] = $$0$i$sink;
    HEAP32[$208>>2] = 1;
    $$pre$i$pre = HEAP32[$7>>2]|0;
    $$ph = $$pre$i$pre;$$pre$phi100$phZ2D = $209;
    label = 100;
   } else {
    $$pre99 = ((($0)) + 18364|0);
    $$ph = $206;$$pre$phi100$phZ2D = $$pre99;
    label = 100;
   }
  } while(0);
  if ((label|0) == 100) {
   $$pr = HEAP32[$$pre$phi100$phZ2D>>2]|0;
   $$pre$phi100Z2D = $$pre$phi100$phZ2D;$290 = $$pr;$292 = $$ph;
  }
  $289 = $290 << 1;
  HEAP32[$$pre$phi100Z2D>>2] = $289;
  $291 = (($292) + -1)|0;
  HEAP32[$7>>2] = $291;
  $293 = ($290|0)>(-1);
  if ($293) {
   $$0 = 1;
   return ($$0|0);
  }
  $294 = ((($0)) + 18396|0);
  $295 = HEAP32[$294>>2]|0;
  $sext = 65536 << $295;
  $296 = $sext >>> 16;
  $297 = HEAP16[$1>>1]|0;
  $298 = $297&65535;
  $299 = (($296) + ($298))|0;
  $300 = $299&65535;
  HEAP16[$1>>1] = $300;
  $$0 = 1;
  return ($$0|0);
 }
 dest=$1; stop=dest+128|0; do { HEAP16[dest>>1]=0|0; dest=dest+2|0; } while ((dest|0) < (stop|0));
 $94 = (_stbi__jpeg_huff_decode($0,$2)|0);
 $95 = ($94|0)==(0);
 do {
  if ($95) {
   $201 = 0;
  } else {
   $96 = HEAP32[$7>>2]|0;
   $97 = ($96|0)<($94|0);
   L96: do {
    if ($97) {
     $98 = ((($0)) + 18376|0);
     $99 = ((($0)) + 18364|0);
     L98: while(1) {
      $100 = HEAP32[$98>>2]|0;
      $101 = ($100|0)==(0);
      L100: do {
       if ($101) {
        $102 = HEAP32[$0>>2]|0;
        $103 = ((($102)) + 168|0);
        $104 = HEAP32[$103>>2]|0;
        $105 = ((($102)) + 172|0);
        $106 = HEAP32[$105>>2]|0;
        $107 = ($104>>>0)<($106>>>0);
        if ($107) {
         $108 = ((($104)) + 1|0);
         HEAP32[$103>>2] = $108;
         $109 = HEAP8[$104>>0]|0;
         $$0$i83 = $109;
        } else {
         $110 = ((($102)) + 32|0);
         $111 = HEAP32[$110>>2]|0;
         $112 = ($111|0)==(0);
         if ($112) {
          $174 = 0;
          break;
         }
         $113 = ((($102)) + 16|0);
         $114 = HEAP32[$113>>2]|0;
         $115 = ((($102)) + 28|0);
         $116 = HEAP32[$115>>2]|0;
         $117 = ((($102)) + 40|0);
         $118 = ((($102)) + 36|0);
         $119 = HEAP32[$118>>2]|0;
         $120 = (ftCall_iiii($114|0,$116,$117,$119)|0);
         $121 = ($120|0)==(0);
         if ($121) {
          HEAP32[$110>>2] = 0;
          $122 = ((($102)) + 41|0);
          HEAP8[$117>>0] = 0;
          $$pre$phi$i80Z2D = $122;$$sink$i$i81 = $122;$304 = 0;
         } else {
          $123 = (((($102)) + 40|0) + ($120)|0);
          $$pre$i78 = HEAP8[$117>>0]|0;
          $$pre5$i79 = ((($102)) + 41|0);
          $$pre$phi$i80Z2D = $$pre5$i79;$$sink$i$i81 = $123;$304 = $$pre$i78;
         }
         HEAP32[$105>>2] = $$sink$i$i81;
         HEAP32[$103>>2] = $$pre$phi$i80Z2D;
         $$0$i83 = $304;
        }
        $124 = $$0$i83&255;
        $125 = ($$0$i83<<24>>24)==(-1);
        if ($125) {
         $126 = HEAP32[$0>>2]|0;
         $127 = ((($126)) + 168|0);
         $128 = HEAP32[$127>>2]|0;
         $129 = ((($126)) + 172|0);
         $130 = HEAP32[$129>>2]|0;
         $131 = ($128>>>0)<($130>>>0);
         if ($131) {
          $132 = ((($128)) + 1|0);
          HEAP32[$127>>2] = $132;
          $133 = HEAP8[$128>>0]|0;
          $$0$i76$sink$ph = $133;
         } else {
          $134 = ((($126)) + 32|0);
          $135 = HEAP32[$134>>2]|0;
          $136 = ($135|0)==(0);
          if ($136) {
           $$0$i76$sink$ph = 0;
          } else {
           $137 = ((($126)) + 16|0);
           $138 = HEAP32[$137>>2]|0;
           $139 = ((($126)) + 28|0);
           $140 = HEAP32[$139>>2]|0;
           $141 = ((($126)) + 40|0);
           $142 = ((($126)) + 36|0);
           $143 = HEAP32[$142>>2]|0;
           $144 = (ftCall_iiii($138|0,$140,$141,$143)|0);
           $145 = ($144|0)==(0);
           if ($145) {
            HEAP32[$134>>2] = 0;
            $146 = ((($126)) + 41|0);
            HEAP8[$141>>0] = 0;
            $$pre$phi$i87Z2D = $146;$$sink$i$i88 = $146;$305 = 0;
           } else {
            $147 = (((($126)) + 40|0) + ($144)|0);
            $$pre$i85 = HEAP8[$141>>0]|0;
            $$pre5$i86 = ((($126)) + 41|0);
            $$pre$phi$i87Z2D = $$pre5$i86;$$sink$i$i88 = $147;$305 = $$pre$i85;
           }
           HEAP32[$129>>2] = $$sink$i$i88;
           HEAP32[$127>>2] = $$pre$phi$i87Z2D;
           $$0$i76$sink$ph = $305;
          }
         }
         $$0$i76$sink = $$0$i76$sink$ph;
         while(1) {
          switch ($$0$i76$sink<<24>>24) {
          case 0:  {
           $174 = $124;
           break L100;
           break;
          }
          case -1:  {
           break;
          }
          default: {
           break L98;
          }
          }
          $148 = HEAP32[$0>>2]|0;
          $149 = ((($148)) + 168|0);
          $150 = HEAP32[$149>>2]|0;
          $151 = ((($148)) + 172|0);
          $152 = HEAP32[$151>>2]|0;
          $153 = ($150>>>0)<($152>>>0);
          if ($153) {
           $154 = ((($150)) + 1|0);
           HEAP32[$149>>2] = $154;
           $155 = HEAP8[$150>>0]|0;
           $$0$i76$sink$be = $155;
          } else {
           $156 = ((($148)) + 32|0);
           $157 = HEAP32[$156>>2]|0;
           $158 = ($157|0)==(0);
           if ($158) {
            $$0$i76$sink$be = 0;
           } else {
            $159 = ((($148)) + 16|0);
            $160 = HEAP32[$159>>2]|0;
            $161 = ((($148)) + 28|0);
            $162 = HEAP32[$161>>2]|0;
            $163 = ((($148)) + 40|0);
            $164 = ((($148)) + 36|0);
            $165 = HEAP32[$164>>2]|0;
            $166 = (ftCall_iiii($160|0,$162,$163,$165)|0);
            $167 = ($166|0)==(0);
            if ($167) {
             HEAP32[$156>>2] = 0;
             $168 = ((($148)) + 41|0);
             HEAP8[$163>>0] = 0;
             $$pre$phi$i73Z2D = $168;$$sink$i$i74 = $168;$306 = 0;
            } else {
             $169 = (((($148)) + 40|0) + ($166)|0);
             $$pre$i71 = HEAP8[$163>>0]|0;
             $$pre5$i72 = ((($148)) + 41|0);
             $$pre$phi$i73Z2D = $$pre5$i72;$$sink$i$i74 = $169;$306 = $$pre$i71;
            }
            HEAP32[$151>>2] = $$sink$i$i74;
            HEAP32[$149>>2] = $$pre$phi$i73Z2D;
            $$0$i76$sink$be = $306;
           }
          }
          $$0$i76$sink = $$0$i76$sink$be;
         }
        } else {
         $174 = $124;
        }
       } else {
        $174 = 0;
       }
      } while(0);
      $171 = HEAP32[$7>>2]|0;
      $172 = (24 - ($171))|0;
      $173 = $174 << $172;
      $175 = HEAP32[$99>>2]|0;
      $176 = $173 | $175;
      HEAP32[$99>>2] = $176;
      $177 = (($171) + 8)|0;
      HEAP32[$7>>2] = $177;
      $178 = ($171|0)<(17);
      if (!($178)) {
       $$pre$phiZ2D = $99;
       break L96;
      }
     }
     $170 = ((($0)) + 18372|0);
     HEAP8[$170>>0] = $$0$i76$sink;
     HEAP32[$98>>2] = 1;
     $$pre$phiZ2D = $99;
    } else {
     $$pre = ((($0)) + 18364|0);
     $$pre$phiZ2D = $$pre;
    }
   } while(0);
   $179 = HEAP32[$$pre$phiZ2D>>2]|0;
   $180 = $179 << $94;
   $181 = (32 - ($94))|0;
   $182 = $179 >>> $181;
   $183 = $180 | $182;
   $184 = ($94>>>0)<(17);
   if ($184) {
    $185 = $179 >> 31;
    $186 = (114720 + ($94<<2)|0);
    $187 = HEAP32[$186>>2]|0;
    $188 = $187 ^ -1;
    $189 = $183 & $188;
    HEAP32[$$pre$phiZ2D>>2] = $189;
    $190 = $187 & $183;
    $191 = HEAP32[$7>>2]|0;
    $192 = (($191) - ($94))|0;
    HEAP32[$7>>2] = $192;
    $193 = (114800 + ($94<<2)|0);
    $194 = HEAP32[$193>>2]|0;
    $195 = $185 ^ -1;
    $196 = $194 & $195;
    $197 = (($196) + ($190))|0;
    $201 = $197;
    break;
   } else {
    ___assert_fail((140107|0),(139212|0),1907,(140170|0));
    // unreachable;
   }
  }
 } while(0);
 $198 = (((((($0)) + 18076|0) + (($3*72)|0)|0)) + 24|0);
 $199 = HEAP32[$198>>2]|0;
 $200 = (($199) + ($201))|0;
 HEAP32[$198>>2] = $200;
 $202 = ((($0)) + 18396|0);
 $203 = HEAP32[$202>>2]|0;
 $204 = $200 << $203;
 $205 = $204&65535;
 HEAP16[$1>>1] = $205;
 $$0 = 1;
 return ($$0|0);
}
function _stbi__jpeg_huff_decode($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i$sink = 0, $$0$i$sink$be = 0, $$0$i$sink$ph = 0, $$0$i55 = 0, $$049 = 0, $$1 = 0, $$pre = 0, $$pre$i = 0, $$pre$i50 = 0, $$pre$i57 = 0, $$pre$phi$i52Z2D = 0, $$pre$phi$i59Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$pre5$i = 0, $$pre5$i51 = 0, $$pre5$i58 = 0, $$sink$i$i = 0, $$sink$i$i53 = 0, $$sink$i$i60 = 0;
 var $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0;
 var $136 = 0, $137 = 0, $138 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 18368|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = ($3|0)<(16);
 L1: do {
  if ($4) {
   $5 = ((($0)) + 18376|0);
   $6 = ((($0)) + 18364|0);
   L3: while(1) {
    $7 = HEAP32[$5>>2]|0;
    $8 = ($7|0)==(0);
    L5: do {
     if ($8) {
      $9 = HEAP32[$0>>2]|0;
      $10 = ((($9)) + 168|0);
      $11 = HEAP32[$10>>2]|0;
      $12 = ((($9)) + 172|0);
      $13 = HEAP32[$12>>2]|0;
      $14 = ($11>>>0)<($13>>>0);
      if ($14) {
       $15 = ((($11)) + 1|0);
       HEAP32[$10>>2] = $15;
       $16 = HEAP8[$11>>0]|0;
       $$0$i55 = $16;
      } else {
       $17 = ((($9)) + 32|0);
       $18 = HEAP32[$17>>2]|0;
       $19 = ($18|0)==(0);
       if ($19) {
        $81 = 0;
        break;
       }
       $20 = ((($9)) + 16|0);
       $21 = HEAP32[$20>>2]|0;
       $22 = ((($9)) + 28|0);
       $23 = HEAP32[$22>>2]|0;
       $24 = ((($9)) + 40|0);
       $25 = ((($9)) + 36|0);
       $26 = HEAP32[$25>>2]|0;
       $27 = (ftCall_iiii($21|0,$23,$24,$26)|0);
       $28 = ($27|0)==(0);
       if ($28) {
        HEAP32[$17>>2] = 0;
        $29 = ((($9)) + 41|0);
        HEAP8[$24>>0] = 0;
        $$pre$phi$i52Z2D = $29;$$sink$i$i53 = $29;$136 = 0;
       } else {
        $30 = (((($9)) + 40|0) + ($27)|0);
        $$pre$i50 = HEAP8[$24>>0]|0;
        $$pre5$i51 = ((($9)) + 41|0);
        $$pre$phi$i52Z2D = $$pre5$i51;$$sink$i$i53 = $30;$136 = $$pre$i50;
       }
       HEAP32[$12>>2] = $$sink$i$i53;
       HEAP32[$10>>2] = $$pre$phi$i52Z2D;
       $$0$i55 = $136;
      }
      $31 = $$0$i55&255;
      $32 = ($$0$i55<<24>>24)==(-1);
      if ($32) {
       $33 = HEAP32[$0>>2]|0;
       $34 = ((($33)) + 168|0);
       $35 = HEAP32[$34>>2]|0;
       $36 = ((($33)) + 172|0);
       $37 = HEAP32[$36>>2]|0;
       $38 = ($35>>>0)<($37>>>0);
       if ($38) {
        $39 = ((($35)) + 1|0);
        HEAP32[$34>>2] = $39;
        $40 = HEAP8[$35>>0]|0;
        $$0$i$sink$ph = $40;
       } else {
        $41 = ((($33)) + 32|0);
        $42 = HEAP32[$41>>2]|0;
        $43 = ($42|0)==(0);
        if ($43) {
         $$0$i$sink$ph = 0;
        } else {
         $44 = ((($33)) + 16|0);
         $45 = HEAP32[$44>>2]|0;
         $46 = ((($33)) + 28|0);
         $47 = HEAP32[$46>>2]|0;
         $48 = ((($33)) + 40|0);
         $49 = ((($33)) + 36|0);
         $50 = HEAP32[$49>>2]|0;
         $51 = (ftCall_iiii($45|0,$47,$48,$50)|0);
         $52 = ($51|0)==(0);
         if ($52) {
          HEAP32[$41>>2] = 0;
          $53 = ((($33)) + 41|0);
          HEAP8[$48>>0] = 0;
          $$pre$phi$i59Z2D = $53;$$sink$i$i60 = $53;$137 = 0;
         } else {
          $54 = (((($33)) + 40|0) + ($51)|0);
          $$pre$i57 = HEAP8[$48>>0]|0;
          $$pre5$i58 = ((($33)) + 41|0);
          $$pre$phi$i59Z2D = $$pre5$i58;$$sink$i$i60 = $54;$137 = $$pre$i57;
         }
         HEAP32[$36>>2] = $$sink$i$i60;
         HEAP32[$34>>2] = $$pre$phi$i59Z2D;
         $$0$i$sink$ph = $137;
        }
       }
       $$0$i$sink = $$0$i$sink$ph;
       while(1) {
        switch ($$0$i$sink<<24>>24) {
        case 0:  {
         $81 = $31;
         break L5;
         break;
        }
        case -1:  {
         break;
        }
        default: {
         break L3;
        }
        }
        $55 = HEAP32[$0>>2]|0;
        $56 = ((($55)) + 168|0);
        $57 = HEAP32[$56>>2]|0;
        $58 = ((($55)) + 172|0);
        $59 = HEAP32[$58>>2]|0;
        $60 = ($57>>>0)<($59>>>0);
        if ($60) {
         $61 = ((($57)) + 1|0);
         HEAP32[$56>>2] = $61;
         $62 = HEAP8[$57>>0]|0;
         $$0$i$sink$be = $62;
        } else {
         $63 = ((($55)) + 32|0);
         $64 = HEAP32[$63>>2]|0;
         $65 = ($64|0)==(0);
         if ($65) {
          $$0$i$sink$be = 0;
         } else {
          $66 = ((($55)) + 16|0);
          $67 = HEAP32[$66>>2]|0;
          $68 = ((($55)) + 28|0);
          $69 = HEAP32[$68>>2]|0;
          $70 = ((($55)) + 40|0);
          $71 = ((($55)) + 36|0);
          $72 = HEAP32[$71>>2]|0;
          $73 = (ftCall_iiii($67|0,$69,$70,$72)|0);
          $74 = ($73|0)==(0);
          if ($74) {
           HEAP32[$63>>2] = 0;
           $75 = ((($55)) + 41|0);
           HEAP8[$70>>0] = 0;
           $$pre$phi$iZ2D = $75;$$sink$i$i = $75;$138 = 0;
          } else {
           $76 = (((($55)) + 40|0) + ($73)|0);
           $$pre$i = HEAP8[$70>>0]|0;
           $$pre5$i = ((($55)) + 41|0);
           $$pre$phi$iZ2D = $$pre5$i;$$sink$i$i = $76;$138 = $$pre$i;
          }
          HEAP32[$58>>2] = $$sink$i$i;
          HEAP32[$56>>2] = $$pre$phi$iZ2D;
          $$0$i$sink$be = $138;
         }
        }
        $$0$i$sink = $$0$i$sink$be;
       }
      } else {
       $81 = $31;
      }
     } else {
      $81 = 0;
     }
    } while(0);
    $78 = HEAP32[$2>>2]|0;
    $79 = (24 - ($78))|0;
    $80 = $81 << $79;
    $82 = HEAP32[$6>>2]|0;
    $83 = $80 | $82;
    HEAP32[$6>>2] = $83;
    $84 = (($78) + 8)|0;
    HEAP32[$2>>2] = $84;
    $85 = ($78|0)<(17);
    if (!($85)) {
     $$pre$phiZ2D = $6;
     break L1;
    }
   }
   $77 = ((($0)) + 18372|0);
   HEAP8[$77>>0] = $$0$i$sink;
   HEAP32[$5>>2] = 1;
   $$pre$phiZ2D = $6;
  } else {
   $$pre = ((($0)) + 18364|0);
   $$pre$phiZ2D = $$pre;
  }
 } while(0);
 $86 = HEAP32[$$pre$phiZ2D>>2]|0;
 $87 = $86 >>> 23;
 $88 = (($1) + ($87)|0);
 $89 = HEAP8[$88>>0]|0;
 $90 = $89&255;
 $91 = ($89<<24>>24)==(-1);
 if (!($91)) {
  $92 = (((($1)) + 1280|0) + ($90)|0);
  $93 = HEAP8[$92>>0]|0;
  $94 = $93&255;
  $95 = HEAP32[$2>>2]|0;
  $96 = ($95|0)<($94|0);
  if ($96) {
   $$1 = -1;
   return ($$1|0);
  }
  $97 = (((($1)) + 1024|0) + ($90)|0);
  $98 = (($95) - ($94))|0;
  $99 = $86 << $94;
  HEAP32[$$pre$phiZ2D>>2] = $99;
  HEAP32[$2>>2] = $98;
  $100 = HEAP8[$97>>0]|0;
  $101 = $100&255;
  $$1 = $101;
  return ($$1|0);
 }
 $102 = $86 >>> 16;
 $$049 = 10;
 while(1) {
  $103 = (((($1)) + 1540|0) + ($$049<<2)|0);
  $104 = HEAP32[$103>>2]|0;
  $105 = ($102>>>0)<($104>>>0);
  $106 = (($$049) + 1)|0;
  if ($105) {
   break;
  } else {
   $$049 = $106;
  }
 }
 $107 = ($$049|0)==(17);
 $108 = HEAP32[$2>>2]|0;
 if ($107) {
  $109 = (($108) + -16)|0;
  HEAP32[$2>>2] = $109;
  $$1 = -1;
  return ($$1|0);
 }
 $110 = ($108|0)<($$049|0);
 if ($110) {
  $$1 = -1;
  return ($$1|0);
 }
 $111 = (32 - ($$049))|0;
 $112 = $86 >>> $111;
 $113 = (114720 + ($$049<<2)|0);
 $114 = HEAP32[$113>>2]|0;
 $115 = $114 & $112;
 $116 = (((($1)) + 1612|0) + ($$049<<2)|0);
 $117 = HEAP32[$116>>2]|0;
 $118 = (($115) + ($117))|0;
 $119 = (((($1)) + 1280|0) + ($118)|0);
 $120 = HEAP8[$119>>0]|0;
 $121 = $120&255;
 $122 = (32 - ($121))|0;
 $123 = $86 >>> $122;
 $124 = (114720 + ($121<<2)|0);
 $125 = HEAP32[$124>>2]|0;
 $126 = $123 & $125;
 $127 = (((($1)) + 512|0) + ($118<<1)|0);
 $128 = HEAP16[$127>>1]|0;
 $129 = $128&65535;
 $130 = ($126|0)==($129|0);
 if (!($130)) {
  ___assert_fail((140002|0),(139212|0),1886,(140084|0));
  // unreachable;
 }
 $131 = (($108) - ($$049))|0;
 HEAP32[$2>>2] = $131;
 $132 = $86 << $$049;
 HEAP32[$$pre$phiZ2D>>2] = $132;
 $133 = (((($1)) + 1024|0) + ($118)|0);
 $134 = HEAP8[$133>>0]|0;
 $135 = $134&255;
 $$1 = $135;
 return ($$1|0);
}
function _stbi__process_marker($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$i = 0, $$0$i$i = 0, $$0$i$i159 = 0, $$0$i$i173 = 0, $$0$i$i189$us = 0, $$0$i$i210 = 0, $$0$i$i245 = 0, $$0$i203 = 0, $$0$i224 = 0, $$0$i231 = 0, $$0$i238 = 0, $$0$i259 = 0, $$0$i266 = 0, $$0$i266$1 = 0, $$0$i266$2 = 0, $$0$i266$3 = 0, $$0$i266$4 = 0, $$0$i273 = 0, $$0$i273$1 = 0, $$0$i273$2 = 0;
 var $$0$i273$3 = 0, $$0$i273$4 = 0, $$0$i273$5 = 0, $$0$i8$i = 0, $$0$i8$i166 = 0, $$0$i8$i180 = 0, $$0$i8$i196$us = 0, $$0$i8$i217 = 0, $$0$i8$i252 = 0, $$0141$lcssa = 0, $$0141327 = 0, $$0148329 = 0, $$0149328 = 0, $$0151 = 0, $$0152326 = 0, $$0152326$us = 0, $$045$off$i = 0, $$046$i = 0, $$1150330 = 0, $$2143$lcssa = 0;
 var $$2143334 = 0, $$4 = 0, $$4$shrunk = 0, $$5 = 0, $$5315 = 0, $$mask = 0, $$mask316 = 0, $$ph = 0, $$ph428 = 0, $$phi$trans$insert = 0, $$phi$trans$insert$i = 0, $$phi$trans$insert347 = 0, $$phi$trans$insert350 = 0, $$phi$trans$insert352 = 0, $$phi$trans$insert355 = 0, $$phi$trans$insert357 = 0, $$phi$trans$insert360 = 0, $$phi$trans$insert362 = 0, $$phi$trans$insert365 = 0, $$phi$trans$insert367 = 0;
 var $$phi$trans$insert370 = 0, $$phi$trans$insert372 = 0, $$phi$trans$insert375 = 0, $$phi$trans$insert377 = 0, $$phi$trans$insert380 = 0, $$phi$trans$insert382 = 0, $$phi$trans$insert385 = 0, $$phi$trans$insert387 = 0, $$phi$trans$insert390 = 0, $$phi$trans$insert392 = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0, $$pre$i$i154 = 0, $$pre$i$i168 = 0, $$pre$i$i184$us = 0, $$pre$i$i205 = 0, $$pre$i$i240 = 0, $$pre$i182 = 0, $$pre$i198 = 0;
 var $$pre$i219 = 0, $$pre$i226 = 0, $$pre$i233 = 0, $$pre$i254 = 0, $$pre$i261 = 0, $$pre$i261$1 = 0, $$pre$i261$2 = 0, $$pre$i261$3 = 0, $$pre$i261$4 = 0, $$pre$i268 = 0, $$pre$i268$1 = 0, $$pre$i268$2 = 0, $$pre$i268$3 = 0, $$pre$i268$4 = 0, $$pre$i268$5 = 0, $$pre$i3$i = 0, $$pre$i3$i161 = 0, $$pre$i3$i175 = 0, $$pre$i3$i191$us = 0, $$pre$i3$i212 = 0;
 var $$pre$i3$i247 = 0, $$pre$phi$i$i156Z2D = 0, $$pre$phi$i$i170Z2D = 0, $$pre$phi$i$i186$usZ2D = 0, $$pre$phi$i$i207Z2D = 0, $$pre$phi$i$i242Z2D = 0, $$pre$phi$i$i284$sinkZ2D = 0, $$pre$phi$i$i284Z2D = 0, $$pre$phi$i$i298$sinkZ2D = 0, $$pre$phi$i$i298Z2D = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i183Z2D = 0, $$pre$phi$i200Z2D = 0, $$pre$phi$i221Z2D = 0, $$pre$phi$i228Z2D = 0, $$pre$phi$i235Z2D = 0, $$pre$phi$i256Z2D = 0, $$pre$phi$i263$1Z2D = 0, $$pre$phi$i263$2Z2D = 0, $$pre$phi$i263$3Z2D = 0;
 var $$pre$phi$i263$4Z2D = 0, $$pre$phi$i263Z2D = 0, $$pre$phi$i270$1Z2D = 0, $$pre$phi$i270$2Z2D = 0, $$pre$phi$i270$3Z2D = 0, $$pre$phi$i270$4Z2D = 0, $$pre$phi$i270$5Z2D = 0, $$pre$phi$i270Z2D = 0, $$pre$phi$i277Z2D = 0, $$pre$phi$i5$i163Z2D = 0, $$pre$phi$i5$i177Z2D = 0, $$pre$phi$i5$i193$usZ2D = 0, $$pre$phi$i5$i214Z2D = 0, $$pre$phi$i5$i249Z2D = 0, $$pre$phi$i5$i291Z2D = 0, $$pre$phi$i5$i305Z2D = 0, $$pre$phi$i5$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi394Z2D = 0, $$pre$phi395Z2D = 0;
 var $$pre$phi396Z2D = 0, $$pre$phi397Z2D = 0, $$pre$phi398Z2D = 0, $$pre$phi399Z2D = 0, $$pre$phi400Z2D = 0, $$pre$phi401Z2D = 0, $$pre$phi402Z2D = 0, $$pre$phi403Z2D = 0, $$pre$phi404Z2D = 0, $$pre$phi405Z2D = 0, $$pre$phi406Z2D = 0, $$pre$phi407Z2D = 0, $$pre$phi408Z2D = 0, $$pre$phi409Z2D = 0, $$pre$phi410Z2D = 0, $$pre$phi411Z2D = 0, $$pre$phi412Z2D = 0, $$pre$phiZ2D = 0, $$pre346 = 0, $$pre348 = 0;
 var $$pre349 = 0, $$pre351 = 0, $$pre353 = 0, $$pre354 = 0, $$pre356 = 0, $$pre358 = 0, $$pre359 = 0, $$pre361 = 0, $$pre363 = 0, $$pre364 = 0, $$pre366 = 0, $$pre368 = 0, $$pre369 = 0, $$pre371 = 0, $$pre373 = 0, $$pre374 = 0, $$pre376 = 0, $$pre378 = 0, $$pre379 = 0, $$pre381 = 0;
 var $$pre383 = 0, $$pre384 = 0, $$pre386 = 0, $$pre388 = 0, $$pre389 = 0, $$pre391 = 0, $$pre393 = 0, $$pre5$i = 0, $$pre5$i$i = 0, $$pre5$i$i155 = 0, $$pre5$i$i169 = 0, $$pre5$i$i185$us = 0, $$pre5$i$i206 = 0, $$pre5$i$i241 = 0, $$pre5$i$i283 = 0, $$pre5$i$i297 = 0, $$pre5$i199 = 0, $$pre5$i220 = 0, $$pre5$i227 = 0, $$pre5$i234 = 0;
 var $$pre5$i255 = 0, $$pre5$i262 = 0, $$pre5$i262$1 = 0, $$pre5$i262$2 = 0, $$pre5$i262$3 = 0, $$pre5$i262$4 = 0, $$pre5$i269 = 0, $$pre5$i269$1 = 0, $$pre5$i269$2 = 0, $$pre5$i269$3 = 0, $$pre5$i269$4 = 0, $$pre5$i269$5 = 0, $$pre5$i276 = 0, $$pre5$i4$i = 0, $$pre5$i4$i162 = 0, $$pre5$i4$i176 = 0, $$pre5$i4$i192$us = 0, $$pre5$i4$i213 = 0, $$pre5$i4$i248 = 0, $$pre5$i4$i290 = 0;
 var $$pre5$i4$i304 = 0, $$sink = 0, $$sink$i$i = 0, $$sink$i$i$i = 0, $$sink$i$i$i157 = 0, $$sink$i$i$i171 = 0, $$sink$i$i$i187$us = 0, $$sink$i$i$i208 = 0, $$sink$i$i$i243 = 0, $$sink$i$i$i285 = 0, $$sink$i$i$i299 = 0, $$sink$i$i201 = 0, $$sink$i$i222 = 0, $$sink$i$i229 = 0, $$sink$i$i236 = 0, $$sink$i$i257 = 0, $$sink$i$i264 = 0, $$sink$i$i264$1 = 0, $$sink$i$i264$2 = 0, $$sink$i$i264$3 = 0;
 var $$sink$i$i264$4 = 0, $$sink$i$i271 = 0, $$sink$i$i271$1 = 0, $$sink$i$i271$2 = 0, $$sink$i$i271$3 = 0, $$sink$i$i271$4 = 0, $$sink$i$i271$5 = 0, $$sink$i$i278 = 0, $$sink$i$i6$i = 0, $$sink$i$i6$i164 = 0, $$sink$i$i6$i178 = 0, $$sink$i$i6$i194$us = 0, $$sink$i$i6$i215 = 0, $$sink$i$i6$i250 = 0, $$sink$i$i6$i292 = 0, $$sink$i$i6$i306 = 0, $$sink430 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0;
 var $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0;
 var $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0;
 var $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0;
 var $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0;
 var $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0;
 var $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0;
 var $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0;
 var $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0;
 var $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0, $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0;
 var $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0, $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0;
 var $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0, $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0;
 var $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0, $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0;
 var $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0, $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0;
 var $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0, $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0;
 var $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0, $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0;
 var $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0, $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0;
 var $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0, $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0;
 var $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0, $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0;
 var $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0, $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0;
 var $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0, $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0;
 var $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0, $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0;
 var $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0, $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0;
 var $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0, $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0;
 var $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0, $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0;
 var $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0, $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0;
 var $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0, $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0;
 var $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0;
 var $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0, $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0;
 var $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0, $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0;
 var $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0, $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0;
 var $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0, $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0;
 var $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0, $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0;
 var $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0, $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0;
 var $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0, $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0;
 var $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0, $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0;
 var $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $exitcond$i = 0, $exitcond341 = 0, $exitcond342 = 0, $exitcond343 = 0, $narrow = 0, $narrow413 = 0, $narrow414 = 0, $narrow415 = 0, $narrow416 = 0, $narrow417 = 0, $narrow418 = 0, $narrow419 = 0, $narrow420 = 0;
 var $or$cond10 = 0, $or$cond12 = 0, $or$cond4 = 0, $or$cond8 = 0, $spec$select$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $2 = sp;
 switch ($1|0) {
 case 221:  {
  $3 = HEAP32[$0>>2]|0;
  $4 = ((($3)) + 168|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($3)) + 172|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = ($5>>>0)<($7>>>0);
  if ($8) {
   $9 = ((($5)) + 1|0);
   HEAP32[$4>>2] = $9;
   $10 = HEAP8[$5>>0]|0;
   $$0$i$i = $10;$28 = $9;$29 = $7;
  } else {
   $11 = ((($3)) + 32|0);
   $12 = HEAP32[$11>>2]|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$0$i$i = 0;$28 = $5;$29 = $7;
   } else {
    $14 = ((($3)) + 16|0);
    $15 = HEAP32[$14>>2]|0;
    $16 = ((($3)) + 28|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ((($3)) + 40|0);
    $19 = ((($3)) + 36|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = (ftCall_iiii($15|0,$17,$18,$20)|0);
    $22 = ($21|0)==(0);
    if ($22) {
     HEAP32[$11>>2] = 0;
     $23 = ((($3)) + 41|0);
     HEAP8[$18>>0] = 0;
     $$pre$phi$i$iZ2D = $23;$$sink$i$i$i = $23;$862 = 0;
    } else {
     $24 = (((($3)) + 40|0) + ($21)|0);
     $$pre$i$i = HEAP8[$18>>0]|0;
     $$pre5$i$i = ((($3)) + 41|0);
     $$pre$phi$i$iZ2D = $$pre5$i$i;$$sink$i$i$i = $24;$862 = $$pre$i$i;
    }
    HEAP32[$6>>2] = $$sink$i$i$i;
    HEAP32[$4>>2] = $$pre$phi$i$iZ2D;
    $$0$i$i = $862;$28 = $$pre$phi$i$iZ2D;$29 = $$sink$i$i$i;
   }
  }
  $25 = $$0$i$i&255;
  $26 = $25 << 8;
  $27 = ($28>>>0)<($29>>>0);
  if ($27) {
   $30 = ((($28)) + 1|0);
   HEAP32[$4>>2] = $30;
   $31 = HEAP8[$28>>0]|0;
   $$0$i8$i = $31;
  } else {
   $32 = ((($3)) + 32|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ($33|0)==(0);
   if ($34) {
    $$0$i8$i = 0;
   } else {
    $35 = ((($3)) + 16|0);
    $36 = HEAP32[$35>>2]|0;
    $37 = ((($3)) + 28|0);
    $38 = HEAP32[$37>>2]|0;
    $39 = ((($3)) + 40|0);
    $40 = ((($3)) + 36|0);
    $41 = HEAP32[$40>>2]|0;
    $42 = (ftCall_iiii($36|0,$38,$39,$41)|0);
    $43 = ($42|0)==(0);
    if ($43) {
     HEAP32[$32>>2] = 0;
     $44 = ((($3)) + 41|0);
     HEAP8[$39>>0] = 0;
     $$pre$phi$i5$iZ2D = $44;$$sink$i$i6$i = $44;$863 = 0;
    } else {
     $45 = (((($3)) + 40|0) + ($42)|0);
     $$pre$i3$i = HEAP8[$39>>0]|0;
     $$pre5$i4$i = ((($3)) + 41|0);
     $$pre$phi$i5$iZ2D = $$pre5$i4$i;$$sink$i$i6$i = $45;$863 = $$pre$i3$i;
    }
    HEAP32[$6>>2] = $$sink$i$i6$i;
    HEAP32[$4>>2] = $$pre$phi$i5$iZ2D;
    $$0$i8$i = $863;
   }
  }
  $46 = $$0$i8$i&255;
  $47 = $26 | $46;
  $48 = ($47|0)==(4);
  if (!($48)) {
   $$4$shrunk = 0;
   $$4 = $$4$shrunk&1;
   STACKTOP = sp;return ($$4|0);
  }
  $49 = HEAP32[$0>>2]|0;
  $50 = ((($49)) + 168|0);
  $51 = HEAP32[$50>>2]|0;
  $52 = ((($49)) + 172|0);
  $53 = HEAP32[$52>>2]|0;
  $54 = ($51>>>0)<($53>>>0);
  if ($54) {
   $55 = ((($51)) + 1|0);
   HEAP32[$50>>2] = $55;
   $56 = HEAP8[$51>>0]|0;
   $$0$i$i159 = $56;$74 = $55;$75 = $53;
  } else {
   $57 = ((($49)) + 32|0);
   $58 = HEAP32[$57>>2]|0;
   $59 = ($58|0)==(0);
   if ($59) {
    $$0$i$i159 = 0;$74 = $51;$75 = $53;
   } else {
    $60 = ((($49)) + 16|0);
    $61 = HEAP32[$60>>2]|0;
    $62 = ((($49)) + 28|0);
    $63 = HEAP32[$62>>2]|0;
    $64 = ((($49)) + 40|0);
    $65 = ((($49)) + 36|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = (ftCall_iiii($61|0,$63,$64,$66)|0);
    $68 = ($67|0)==(0);
    if ($68) {
     HEAP32[$57>>2] = 0;
     $69 = ((($49)) + 41|0);
     HEAP8[$64>>0] = 0;
     $$pre$phi$i$i156Z2D = $69;$$sink$i$i$i157 = $69;$864 = 0;
    } else {
     $70 = (((($49)) + 40|0) + ($67)|0);
     $$pre$i$i154 = HEAP8[$64>>0]|0;
     $$pre5$i$i155 = ((($49)) + 41|0);
     $$pre$phi$i$i156Z2D = $$pre5$i$i155;$$sink$i$i$i157 = $70;$864 = $$pre$i$i154;
    }
    HEAP32[$52>>2] = $$sink$i$i$i157;
    HEAP32[$50>>2] = $$pre$phi$i$i156Z2D;
    $$0$i$i159 = $864;$74 = $$pre$phi$i$i156Z2D;$75 = $$sink$i$i$i157;
   }
  }
  $71 = $$0$i$i159&255;
  $72 = $71 << 8;
  $73 = ($74>>>0)<($75>>>0);
  if ($73) {
   $76 = ((($74)) + 1|0);
   HEAP32[$50>>2] = $76;
   $77 = HEAP8[$74>>0]|0;
   $$0$i8$i166 = $77;
  } else {
   $78 = ((($49)) + 32|0);
   $79 = HEAP32[$78>>2]|0;
   $80 = ($79|0)==(0);
   if ($80) {
    $$0$i8$i166 = 0;
   } else {
    $81 = ((($49)) + 16|0);
    $82 = HEAP32[$81>>2]|0;
    $83 = ((($49)) + 28|0);
    $84 = HEAP32[$83>>2]|0;
    $85 = ((($49)) + 40|0);
    $86 = ((($49)) + 36|0);
    $87 = HEAP32[$86>>2]|0;
    $88 = (ftCall_iiii($82|0,$84,$85,$87)|0);
    $89 = ($88|0)==(0);
    if ($89) {
     HEAP32[$78>>2] = 0;
     $90 = ((($49)) + 41|0);
     HEAP8[$85>>0] = 0;
     $$pre$phi$i5$i163Z2D = $90;$$sink$i$i6$i164 = $90;$865 = 0;
    } else {
     $91 = (((($49)) + 40|0) + ($88)|0);
     $$pre$i3$i161 = HEAP8[$85>>0]|0;
     $$pre5$i4$i162 = ((($49)) + 41|0);
     $$pre$phi$i5$i163Z2D = $$pre5$i4$i162;$$sink$i$i6$i164 = $91;$865 = $$pre$i3$i161;
    }
    HEAP32[$52>>2] = $$sink$i$i6$i164;
    HEAP32[$50>>2] = $$pre$phi$i5$i163Z2D;
    $$0$i8$i166 = $865;
   }
  }
  $92 = $$0$i8$i166&255;
  $93 = $72 | $92;
  $94 = ((($0)) + 18436|0);
  HEAP32[$94>>2] = $93;
  $$4$shrunk = 1;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 219:  {
  $95 = HEAP32[$0>>2]|0;
  $96 = ((($95)) + 168|0);
  $97 = HEAP32[$96>>2]|0;
  $98 = ((($95)) + 172|0);
  $99 = HEAP32[$98>>2]|0;
  $100 = ($97>>>0)<($99>>>0);
  if ($100) {
   $101 = ((($97)) + 1|0);
   HEAP32[$96>>2] = $101;
   $102 = HEAP8[$97>>0]|0;
   $$0$i$i173 = $102;$120 = $101;$121 = $99;
  } else {
   $103 = ((($95)) + 32|0);
   $104 = HEAP32[$103>>2]|0;
   $105 = ($104|0)==(0);
   if ($105) {
    $$0$i$i173 = 0;$120 = $97;$121 = $99;
   } else {
    $106 = ((($95)) + 16|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = ((($95)) + 28|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ((($95)) + 40|0);
    $111 = ((($95)) + 36|0);
    $112 = HEAP32[$111>>2]|0;
    $113 = (ftCall_iiii($107|0,$109,$110,$112)|0);
    $114 = ($113|0)==(0);
    if ($114) {
     HEAP32[$103>>2] = 0;
     $115 = ((($95)) + 41|0);
     HEAP8[$110>>0] = 0;
     $$pre$phi$i$i170Z2D = $115;$$sink$i$i$i171 = $115;$866 = 0;
    } else {
     $116 = (((($95)) + 40|0) + ($113)|0);
     $$pre$i$i168 = HEAP8[$110>>0]|0;
     $$pre5$i$i169 = ((($95)) + 41|0);
     $$pre$phi$i$i170Z2D = $$pre5$i$i169;$$sink$i$i$i171 = $116;$866 = $$pre$i$i168;
    }
    HEAP32[$98>>2] = $$sink$i$i$i171;
    HEAP32[$96>>2] = $$pre$phi$i$i170Z2D;
    $$0$i$i173 = $866;$120 = $$pre$phi$i$i170Z2D;$121 = $$sink$i$i$i171;
   }
  }
  $117 = $$0$i$i173&255;
  $118 = $117 << 8;
  $119 = ($120>>>0)<($121>>>0);
  if ($119) {
   $122 = ((($120)) + 1|0);
   HEAP32[$96>>2] = $122;
   $123 = HEAP8[$120>>0]|0;
   $$0$i8$i180 = $123;
  } else {
   $124 = ((($95)) + 32|0);
   $125 = HEAP32[$124>>2]|0;
   $126 = ($125|0)==(0);
   if ($126) {
    $$0$i8$i180 = 0;
   } else {
    $127 = ((($95)) + 16|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ((($95)) + 28|0);
    $130 = HEAP32[$129>>2]|0;
    $131 = ((($95)) + 40|0);
    $132 = ((($95)) + 36|0);
    $133 = HEAP32[$132>>2]|0;
    $134 = (ftCall_iiii($128|0,$130,$131,$133)|0);
    $135 = ($134|0)==(0);
    if ($135) {
     HEAP32[$124>>2] = 0;
     $136 = ((($95)) + 41|0);
     HEAP8[$131>>0] = 0;
     $$pre$phi$i5$i177Z2D = $136;$$sink$i$i6$i178 = $136;$867 = 0;
    } else {
     $137 = (((($95)) + 40|0) + ($134)|0);
     $$pre$i3$i175 = HEAP8[$131>>0]|0;
     $$pre5$i4$i176 = ((($95)) + 41|0);
     $$pre$phi$i5$i177Z2D = $$pre5$i4$i176;$$sink$i$i6$i178 = $137;$867 = $$pre$i3$i175;
    }
    HEAP32[$98>>2] = $$sink$i$i6$i178;
    HEAP32[$96>>2] = $$pre$phi$i5$i177Z2D;
    $$0$i8$i180 = $867;
   }
  }
  $138 = $$0$i8$i180&255;
  $139 = $118 | $138;
  $140 = (($139) + -2)|0;
  $141 = ($139>>>0)>(2);
  L268: do {
   if ($141) {
    $$0141327 = $140;
    while(1) {
     $142 = HEAP32[$0>>2]|0;
     $143 = ((($142)) + 168|0);
     $144 = HEAP32[$143>>2]|0;
     $145 = ((($142)) + 172|0);
     $146 = HEAP32[$145>>2]|0;
     $147 = ($144>>>0)<($146>>>0);
     if ($147) {
      $148 = ((($144)) + 1|0);
      HEAP32[$143>>2] = $148;
      $149 = HEAP8[$144>>0]|0;
      $$0$i = $149;
      label = 55;
     } else {
      $150 = ((($142)) + 32|0);
      $151 = HEAP32[$150>>2]|0;
      $152 = ($151|0)==(0);
      if ($152) {
       $247 = 0;
       label = 74;
      } else {
       $153 = ((($142)) + 16|0);
       $154 = HEAP32[$153>>2]|0;
       $155 = ((($142)) + 28|0);
       $156 = HEAP32[$155>>2]|0;
       $157 = ((($142)) + 40|0);
       $158 = ((($142)) + 36|0);
       $159 = HEAP32[$158>>2]|0;
       $160 = (ftCall_iiii($154|0,$156,$157,$159)|0);
       $161 = ($160|0)==(0);
       if ($161) {
        HEAP32[$150>>2] = 0;
        $162 = ((($142)) + 41|0);
        HEAP8[$157>>0] = 0;
        $$pre$phi$i183Z2D = $162;$$sink$i$i = $162;$868 = 0;
       } else {
        $163 = (((($142)) + 40|0) + ($160)|0);
        $$pre$i182 = HEAP8[$157>>0]|0;
        $$pre5$i = ((($142)) + 41|0);
        $$pre$phi$i183Z2D = $$pre5$i;$$sink$i$i = $163;$868 = $$pre$i182;
       }
       HEAP32[$145>>2] = $$sink$i$i;
       HEAP32[$143>>2] = $$pre$phi$i183Z2D;
       $$0$i = $868;
       label = 55;
      }
     }
     if ((label|0) == 55) {
      label = 0;
      $164 = $$0$i&255;
      $165 = $164 & 15;
      $166 = ($$0$i&255)>(31);
      if ($166) {
       $$4$shrunk = 0;
       label = 234;
       break;
      }
      $$mask = $164 & 240;
      $167 = ($$mask|0)!=(0);
      $168 = ($165>>>0)>(3);
      if ($168) {
       $$4$shrunk = 0;
       label = 234;
       break;
      }
      if ($167) {
       $$0152326$us = 0;
       while(1) {
        $169 = HEAP32[$0>>2]|0;
        $170 = ((($169)) + 168|0);
        $171 = HEAP32[$170>>2]|0;
        $172 = ((($169)) + 172|0);
        $173 = HEAP32[$172>>2]|0;
        $174 = ($171>>>0)<($173>>>0);
        if ($174) {
         $189 = ((($171)) + 1|0);
         HEAP32[$170>>2] = $189;
         $190 = HEAP8[$171>>0]|0;
         $$0$i$i189$us = $190;$194 = $189;$195 = $173;
        } else {
         $175 = ((($169)) + 32|0);
         $176 = HEAP32[$175>>2]|0;
         $177 = ($176|0)==(0);
         if ($177) {
          $$0$i$i189$us = 0;$194 = $171;$195 = $173;
         } else {
          $178 = ((($169)) + 16|0);
          $179 = HEAP32[$178>>2]|0;
          $180 = ((($169)) + 28|0);
          $181 = HEAP32[$180>>2]|0;
          $182 = ((($169)) + 40|0);
          $183 = ((($169)) + 36|0);
          $184 = HEAP32[$183>>2]|0;
          $185 = (ftCall_iiii($179|0,$181,$182,$184)|0);
          $186 = ($185|0)==(0);
          if ($186) {
           HEAP32[$175>>2] = 0;
           $188 = ((($169)) + 41|0);
           HEAP8[$182>>0] = 0;
           $$pre$phi$i$i186$usZ2D = $188;$$sink$i$i$i187$us = $188;$869 = 0;
          } else {
           $187 = (((($169)) + 40|0) + ($185)|0);
           $$pre$i$i184$us = HEAP8[$182>>0]|0;
           $$pre5$i$i185$us = ((($169)) + 41|0);
           $$pre$phi$i$i186$usZ2D = $$pre5$i$i185$us;$$sink$i$i$i187$us = $187;$869 = $$pre$i$i184$us;
          }
          HEAP32[$172>>2] = $$sink$i$i$i187$us;
          HEAP32[$170>>2] = $$pre$phi$i$i186$usZ2D;
          $$0$i$i189$us = $869;$194 = $$pre$phi$i$i186$usZ2D;$195 = $$sink$i$i$i187$us;
         }
        }
        $191 = $$0$i$i189$us&255;
        $192 = $191 << 8;
        $193 = ($194>>>0)<($195>>>0);
        if ($193) {
         $210 = ((($194)) + 1|0);
         HEAP32[$170>>2] = $210;
         $211 = HEAP8[$194>>0]|0;
         $$0$i8$i196$us = $211;
        } else {
         $196 = ((($169)) + 32|0);
         $197 = HEAP32[$196>>2]|0;
         $198 = ($197|0)==(0);
         if ($198) {
          $$0$i8$i196$us = 0;
         } else {
          $199 = ((($169)) + 16|0);
          $200 = HEAP32[$199>>2]|0;
          $201 = ((($169)) + 28|0);
          $202 = HEAP32[$201>>2]|0;
          $203 = ((($169)) + 40|0);
          $204 = ((($169)) + 36|0);
          $205 = HEAP32[$204>>2]|0;
          $206 = (ftCall_iiii($200|0,$202,$203,$205)|0);
          $207 = ($206|0)==(0);
          if ($207) {
           HEAP32[$196>>2] = 0;
           $209 = ((($169)) + 41|0);
           HEAP8[$203>>0] = 0;
           $$pre$phi$i5$i193$usZ2D = $209;$$sink$i$i6$i194$us = $209;$870 = 0;
          } else {
           $208 = (((($169)) + 40|0) + ($206)|0);
           $$pre$i3$i191$us = HEAP8[$203>>0]|0;
           $$pre5$i4$i192$us = ((($169)) + 41|0);
           $$pre$phi$i5$i193$usZ2D = $$pre5$i4$i192$us;$$sink$i$i6$i194$us = $208;$870 = $$pre$i3$i191$us;
          }
          HEAP32[$172>>2] = $$sink$i$i6$i194$us;
          HEAP32[$170>>2] = $$pre$phi$i5$i193$usZ2D;
          $$0$i8$i196$us = $870;
         }
        }
        $212 = $$0$i8$i196$us&255;
        $213 = $192 | $212;
        $214 = $213&65535;
        $215 = (114640 + ($$0152326$us)|0);
        $216 = HEAP8[$215>>0]|0;
        $217 = $216&255;
        $218 = ((((($0)) + 13444|0) + ($165<<7)|0) + ($217<<1)|0);
        HEAP16[$218>>1] = $214;
        $219 = (($$0152326$us) + 1)|0;
        $exitcond341 = ($219|0)==(64);
        if ($exitcond341) {
         $249 = $167;
         break;
        } else {
         $$0152326$us = $219;
        }
       }
      } else {
       $247 = $165;
       label = 74;
      }
     }
     if ((label|0) == 74) {
      label = 0;
      $$0152326 = 0;
      while(1) {
       $220 = HEAP32[$0>>2]|0;
       $221 = ((($220)) + 168|0);
       $222 = HEAP32[$221>>2]|0;
       $223 = ((($220)) + 172|0);
       $224 = HEAP32[$223>>2]|0;
       $225 = ($222>>>0)<($224>>>0);
       if ($225) {
        $226 = ((($222)) + 1|0);
        HEAP32[$221>>2] = $226;
        $227 = HEAP8[$222>>0]|0;
        $$0$i203 = $227;
       } else {
        $228 = ((($220)) + 32|0);
        $229 = HEAP32[$228>>2]|0;
        $230 = ($229|0)==(0);
        if ($230) {
         $$0$i203 = 0;
        } else {
         $231 = ((($220)) + 16|0);
         $232 = HEAP32[$231>>2]|0;
         $233 = ((($220)) + 28|0);
         $234 = HEAP32[$233>>2]|0;
         $235 = ((($220)) + 40|0);
         $236 = ((($220)) + 36|0);
         $237 = HEAP32[$236>>2]|0;
         $238 = (ftCall_iiii($232|0,$234,$235,$237)|0);
         $239 = ($238|0)==(0);
         if ($239) {
          HEAP32[$228>>2] = 0;
          $240 = ((($220)) + 41|0);
          HEAP8[$235>>0] = 0;
          $$pre$phi$i200Z2D = $240;$$sink$i$i201 = $240;$871 = 0;
         } else {
          $241 = (((($220)) + 40|0) + ($238)|0);
          $$pre$i198 = HEAP8[$235>>0]|0;
          $$pre5$i199 = ((($220)) + 41|0);
          $$pre$phi$i200Z2D = $$pre5$i199;$$sink$i$i201 = $241;$871 = $$pre$i198;
         }
         HEAP32[$223>>2] = $$sink$i$i201;
         HEAP32[$221>>2] = $$pre$phi$i200Z2D;
         $$0$i203 = $871;
        }
       }
       $242 = $$0$i203&255;
       $243 = (114640 + ($$0152326)|0);
       $244 = HEAP8[$243>>0]|0;
       $245 = $244&255;
       $246 = ((((($0)) + 13444|0) + ($247<<7)|0) + ($245<<1)|0);
       HEAP16[$246>>1] = $242;
       $248 = (($$0152326) + 1)|0;
       $exitcond = ($248|0)==(64);
       if ($exitcond) {
        $249 = 0;
        break;
       } else {
        $$0152326 = $248;
       }
      }
     }
     $250 = $249 ? 129 : 65;
     $251 = (($$0141327) - ($250))|0;
     $252 = ($251|0)>(0);
     if ($252) {
      $$0141327 = $251;
     } else {
      $$0141$lcssa = $251;
      break L268;
     }
    }
    if ((label|0) == 234) {
     $$4 = $$4$shrunk&1;
     STACKTOP = sp;return ($$4|0);
    }
   } else {
    $$0141$lcssa = $140;
   }
  } while(0);
  $253 = ($$0141$lcssa|0)==(0);
  $$4$shrunk = $253;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 196:  {
  $254 = HEAP32[$0>>2]|0;
  $255 = ((($254)) + 168|0);
  $256 = HEAP32[$255>>2]|0;
  $257 = ((($254)) + 172|0);
  $258 = HEAP32[$257>>2]|0;
  $259 = ($256>>>0)<($258>>>0);
  if ($259) {
   $260 = ((($256)) + 1|0);
   HEAP32[$255>>2] = $260;
   $261 = HEAP8[$256>>0]|0;
   $$0$i$i210 = $261;$279 = $260;$280 = $258;
  } else {
   $262 = ((($254)) + 32|0);
   $263 = HEAP32[$262>>2]|0;
   $264 = ($263|0)==(0);
   if ($264) {
    $$0$i$i210 = 0;$279 = $256;$280 = $258;
   } else {
    $265 = ((($254)) + 16|0);
    $266 = HEAP32[$265>>2]|0;
    $267 = ((($254)) + 28|0);
    $268 = HEAP32[$267>>2]|0;
    $269 = ((($254)) + 40|0);
    $270 = ((($254)) + 36|0);
    $271 = HEAP32[$270>>2]|0;
    $272 = (ftCall_iiii($266|0,$268,$269,$271)|0);
    $273 = ($272|0)==(0);
    if ($273) {
     HEAP32[$262>>2] = 0;
     $274 = ((($254)) + 41|0);
     HEAP8[$269>>0] = 0;
     $$pre$phi$i$i207Z2D = $274;$$sink$i$i$i208 = $274;$872 = 0;
    } else {
     $275 = (((($254)) + 40|0) + ($272)|0);
     $$pre$i$i205 = HEAP8[$269>>0]|0;
     $$pre5$i$i206 = ((($254)) + 41|0);
     $$pre$phi$i$i207Z2D = $$pre5$i$i206;$$sink$i$i$i208 = $275;$872 = $$pre$i$i205;
    }
    HEAP32[$257>>2] = $$sink$i$i$i208;
    HEAP32[$255>>2] = $$pre$phi$i$i207Z2D;
    $$0$i$i210 = $872;$279 = $$pre$phi$i$i207Z2D;$280 = $$sink$i$i$i208;
   }
  }
  $276 = $$0$i$i210&255;
  $277 = $276 << 8;
  $278 = ($279>>>0)<($280>>>0);
  if ($278) {
   $281 = ((($279)) + 1|0);
   HEAP32[$255>>2] = $281;
   $282 = HEAP8[$279>>0]|0;
   $$0$i8$i217 = $282;
  } else {
   $283 = ((($254)) + 32|0);
   $284 = HEAP32[$283>>2]|0;
   $285 = ($284|0)==(0);
   if ($285) {
    $$0$i8$i217 = 0;
   } else {
    $286 = ((($254)) + 16|0);
    $287 = HEAP32[$286>>2]|0;
    $288 = ((($254)) + 28|0);
    $289 = HEAP32[$288>>2]|0;
    $290 = ((($254)) + 40|0);
    $291 = ((($254)) + 36|0);
    $292 = HEAP32[$291>>2]|0;
    $293 = (ftCall_iiii($287|0,$289,$290,$292)|0);
    $294 = ($293|0)==(0);
    if ($294) {
     HEAP32[$283>>2] = 0;
     $295 = ((($254)) + 41|0);
     HEAP8[$290>>0] = 0;
     $$pre$phi$i5$i214Z2D = $295;$$sink$i$i6$i215 = $295;$873 = 0;
    } else {
     $296 = (((($254)) + 40|0) + ($293)|0);
     $$pre$i3$i212 = HEAP8[$290>>0]|0;
     $$pre5$i4$i213 = ((($254)) + 41|0);
     $$pre$phi$i5$i214Z2D = $$pre5$i4$i213;$$sink$i$i6$i215 = $296;$873 = $$pre$i3$i212;
    }
    HEAP32[$257>>2] = $$sink$i$i6$i215;
    HEAP32[$255>>2] = $$pre$phi$i5$i214Z2D;
    $$0$i8$i217 = $873;
   }
  }
  $297 = $$0$i8$i217&255;
  $298 = $277 | $297;
  $299 = (($298) + -2)|0;
  $300 = ($298>>>0)>(2);
  L343: do {
   if ($300) {
    $$2143334 = $299;
    while(1) {
     $301 = HEAP32[$0>>2]|0;
     $302 = ((($301)) + 168|0);
     $303 = HEAP32[$302>>2]|0;
     $304 = ((($301)) + 172|0);
     $305 = HEAP32[$304>>2]|0;
     $306 = ($303>>>0)<($305>>>0);
     if ($306) {
      $307 = ((($303)) + 1|0);
      HEAP32[$302>>2] = $307;
      $308 = HEAP8[$303>>0]|0;
      $$0$i224 = $308;
     } else {
      $309 = ((($301)) + 32|0);
      $310 = HEAP32[$309>>2]|0;
      $311 = ($310|0)==(0);
      if ($311) {
       $$0$i224 = 0;
      } else {
       $312 = ((($301)) + 16|0);
       $313 = HEAP32[$312>>2]|0;
       $314 = ((($301)) + 28|0);
       $315 = HEAP32[$314>>2]|0;
       $316 = ((($301)) + 40|0);
       $317 = ((($301)) + 36|0);
       $318 = HEAP32[$317>>2]|0;
       $319 = (ftCall_iiii($313|0,$315,$316,$318)|0);
       $320 = ($319|0)==(0);
       if ($320) {
        HEAP32[$309>>2] = 0;
        $321 = ((($301)) + 41|0);
        HEAP8[$316>>0] = 0;
        $$pre$phi$i221Z2D = $321;$$sink$i$i222 = $321;$874 = 0;
       } else {
        $322 = (((($301)) + 40|0) + ($319)|0);
        $$pre$i219 = HEAP8[$316>>0]|0;
        $$pre5$i220 = ((($301)) + 41|0);
        $$pre$phi$i221Z2D = $$pre5$i220;$$sink$i$i222 = $322;$874 = $$pre$i219;
       }
       HEAP32[$304>>2] = $$sink$i$i222;
       HEAP32[$302>>2] = $$pre$phi$i221Z2D;
       $$0$i224 = $874;
      }
     }
     $323 = $$0$i224&255;
     $324 = $323 & 15;
     $325 = ($$0$i224&255)>(31);
     $326 = ($324>>>0)>(3);
     $or$cond4 = $325 | $326;
     if ($or$cond4) {
      break;
     }
     $$0148329 = 0;$$0149328 = 0;
     while(1) {
      $327 = HEAP32[$0>>2]|0;
      $328 = ((($327)) + 168|0);
      $329 = HEAP32[$328>>2]|0;
      $330 = ((($327)) + 172|0);
      $331 = HEAP32[$330>>2]|0;
      $332 = ($329>>>0)<($331>>>0);
      if ($332) {
       $333 = ((($329)) + 1|0);
       HEAP32[$328>>2] = $333;
       $334 = HEAP8[$329>>0]|0;
       $$0$i231 = $334;
      } else {
       $335 = ((($327)) + 32|0);
       $336 = HEAP32[$335>>2]|0;
       $337 = ($336|0)==(0);
       if ($337) {
        $$0$i231 = 0;
       } else {
        $338 = ((($327)) + 16|0);
        $339 = HEAP32[$338>>2]|0;
        $340 = ((($327)) + 28|0);
        $341 = HEAP32[$340>>2]|0;
        $342 = ((($327)) + 40|0);
        $343 = ((($327)) + 36|0);
        $344 = HEAP32[$343>>2]|0;
        $345 = (ftCall_iiii($339|0,$341,$342,$344)|0);
        $346 = ($345|0)==(0);
        if ($346) {
         HEAP32[$335>>2] = 0;
         $347 = ((($327)) + 41|0);
         HEAP8[$342>>0] = 0;
         $$pre$phi$i228Z2D = $347;$$sink$i$i229 = $347;$875 = 0;
        } else {
         $348 = (((($327)) + 40|0) + ($345)|0);
         $$pre$i226 = HEAP8[$342>>0]|0;
         $$pre5$i227 = ((($327)) + 41|0);
         $$pre$phi$i228Z2D = $$pre5$i227;$$sink$i$i229 = $348;$875 = $$pre$i226;
        }
        HEAP32[$330>>2] = $$sink$i$i229;
        HEAP32[$328>>2] = $$pre$phi$i228Z2D;
        $$0$i231 = $875;
       }
      }
      $349 = $$0$i231&255;
      $350 = (($2) + ($$0149328<<2)|0);
      HEAP32[$350>>2] = $349;
      $351 = (($$0148329) + ($349))|0;
      $352 = (($$0149328) + 1)|0;
      $exitcond342 = ($352|0)==(16);
      if ($exitcond342) {
       break;
      } else {
       $$0148329 = $351;$$0149328 = $352;
      }
     }
     $353 = (($$2143334) + -17)|0;
     $$mask316 = $323 & 240;
     $354 = ($$mask316|0)==(0);
     if ($354) {
      $355 = (((($0)) + 4|0) + (($324*1680)|0)|0);
      $356 = (_stbi__build_huffman($355,$2)|0);
      $357 = ($356|0)==(0);
      if ($357) {
       break;
      }
      $358 = (((((($0)) + 4|0) + (($324*1680)|0)|0)) + 1024|0);
      $$0151 = $358;
     } else {
      $359 = (((($0)) + 6724|0) + (($324*1680)|0)|0);
      $360 = (_stbi__build_huffman($359,$2)|0);
      $361 = ($360|0)==(0);
      if ($361) {
       break;
      }
      $362 = (((((($0)) + 6724|0) + (($324*1680)|0)|0)) + 1024|0);
      $$0151 = $362;
     }
     $363 = ($351|0)==(0);
     if (!($363)) {
      $$1150330 = 0;
      while(1) {
       $364 = HEAP32[$0>>2]|0;
       $365 = ((($364)) + 168|0);
       $366 = HEAP32[$365>>2]|0;
       $367 = ((($364)) + 172|0);
       $368 = HEAP32[$367>>2]|0;
       $369 = ($366>>>0)<($368>>>0);
       if ($369) {
        $370 = ((($366)) + 1|0);
        HEAP32[$365>>2] = $370;
        $371 = HEAP8[$366>>0]|0;
        $$0$i238 = $371;
       } else {
        $372 = ((($364)) + 32|0);
        $373 = HEAP32[$372>>2]|0;
        $374 = ($373|0)==(0);
        if ($374) {
         $$0$i238 = 0;
        } else {
         $375 = ((($364)) + 16|0);
         $376 = HEAP32[$375>>2]|0;
         $377 = ((($364)) + 28|0);
         $378 = HEAP32[$377>>2]|0;
         $379 = ((($364)) + 40|0);
         $380 = ((($364)) + 36|0);
         $381 = HEAP32[$380>>2]|0;
         $382 = (ftCall_iiii($376|0,$378,$379,$381)|0);
         $383 = ($382|0)==(0);
         if ($383) {
          HEAP32[$372>>2] = 0;
          $384 = ((($364)) + 41|0);
          HEAP8[$379>>0] = 0;
          $$pre$phi$i235Z2D = $384;$$sink$i$i236 = $384;$876 = 0;
         } else {
          $385 = (((($364)) + 40|0) + ($382)|0);
          $$pre$i233 = HEAP8[$379>>0]|0;
          $$pre5$i234 = ((($364)) + 41|0);
          $$pre$phi$i235Z2D = $$pre5$i234;$$sink$i$i236 = $385;$876 = $$pre$i233;
         }
         HEAP32[$367>>2] = $$sink$i$i236;
         HEAP32[$365>>2] = $$pre$phi$i235Z2D;
         $$0$i238 = $876;
        }
       }
       $386 = (($$0151) + ($$1150330)|0);
       HEAP8[$386>>0] = $$0$i238;
       $387 = (($$1150330) + 1)|0;
       $exitcond343 = ($387|0)==($351|0);
       if ($exitcond343) {
        break;
       } else {
        $$1150330 = $387;
       }
      }
     }
     if (!($354)) {
      $$046$i = 0;
      while(1) {
       $388 = ((((($0)) + 6724|0) + (($324*1680)|0)|0) + ($$046$i)|0);
       $389 = HEAP8[$388>>0]|0;
       $390 = ((((($0)) + 13956|0) + ($324<<10)|0) + ($$046$i<<1)|0);
       HEAP16[$390>>1] = 0;
       $391 = $389&255;
       $392 = ($389<<24>>24)==(-1);
       if (!($392)) {
        $393 = ((((((($0)) + 6724|0) + (($324*1680)|0)|0)) + 1024|0) + ($391)|0);
        $394 = HEAP8[$393>>0]|0;
        $395 = $394&255;
        $396 = $395 & 240;
        $397 = $395 & 15;
        $398 = ((((((($0)) + 6724|0) + (($324*1680)|0)|0)) + 1280|0) + ($391)|0);
        $399 = HEAP8[$398>>0]|0;
        $400 = $399&255;
        $401 = ($397|0)==(0);
        if (!($401)) {
         $402 = (($397) + ($400))|0;
         $403 = ($402>>>0)<(10);
         if ($403) {
          $404 = $$046$i << $400;
          $405 = $404 & 511;
          $406 = (9 - ($397))|0;
          $407 = $405 >>> $406;
          $408 = (($397) + -1)|0;
          $409 = 1 << $408;
          $410 = ($407|0)<($409|0);
          $411 = -1 << $397;
          $412 = (($411) + 1)|0;
          $413 = $410 ? $412 : 0;
          $spec$select$i = (($413) + ($407))|0;
          $$045$off$i = (($spec$select$i) + 128)|0;
          $414 = ($$045$off$i>>>0)<(256);
          if ($414) {
           $415 = $spec$select$i << 8;
           $416 = $415 | $396;
           $417 = (($416) + ($402))|0;
           $418 = $417&65535;
           HEAP16[$390>>1] = $418;
          }
         }
        }
       }
       $419 = (($$046$i) + 1)|0;
       $exitcond$i = ($419|0)==(512);
       if ($exitcond$i) {
        break;
       } else {
        $$046$i = $419;
       }
      }
     }
     $420 = (($353) - ($351))|0;
     $421 = ($420|0)>(0);
     if ($421) {
      $$2143334 = $420;
     } else {
      $$2143$lcssa = $420;
      break L343;
     }
    }
    $$4$shrunk = 0;
    $$4 = $$4$shrunk&1;
    STACKTOP = sp;return ($$4|0);
   } else {
    $$2143$lcssa = $299;
   }
  } while(0);
  $422 = ($$2143$lcssa|0)==(0);
  $$4$shrunk = $422;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 case 255:  {
  $$4$shrunk = 0;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
  break;
 }
 default: {
  $423 = $1 & -16;
  $424 = ($423|0)==(224);
  $425 = ($1|0)==(254);
  $or$cond8 = $425 | $424;
  if (!($or$cond8)) {
   $$4$shrunk = 0;
   $$4 = $$4$shrunk&1;
   STACKTOP = sp;return ($$4|0);
  }
  $426 = HEAP32[$0>>2]|0;
  $427 = ((($426)) + 168|0);
  $428 = HEAP32[$427>>2]|0;
  $429 = ((($426)) + 172|0);
  $430 = HEAP32[$429>>2]|0;
  $431 = ($428>>>0)<($430>>>0);
  if ($431) {
   $432 = ((($428)) + 1|0);
   HEAP32[$427>>2] = $432;
   $433 = HEAP8[$428>>0]|0;
   $$0$i$i245 = $433;$451 = $432;$452 = $430;
  } else {
   $434 = ((($426)) + 32|0);
   $435 = HEAP32[$434>>2]|0;
   $436 = ($435|0)==(0);
   if ($436) {
    $$0$i$i245 = 0;$451 = $428;$452 = $430;
   } else {
    $437 = ((($426)) + 16|0);
    $438 = HEAP32[$437>>2]|0;
    $439 = ((($426)) + 28|0);
    $440 = HEAP32[$439>>2]|0;
    $441 = ((($426)) + 40|0);
    $442 = ((($426)) + 36|0);
    $443 = HEAP32[$442>>2]|0;
    $444 = (ftCall_iiii($438|0,$440,$441,$443)|0);
    $445 = ($444|0)==(0);
    if ($445) {
     HEAP32[$434>>2] = 0;
     $446 = ((($426)) + 41|0);
     HEAP8[$441>>0] = 0;
     $$pre$phi$i$i242Z2D = $446;$$sink$i$i$i243 = $446;$877 = 0;
    } else {
     $447 = (((($426)) + 40|0) + ($444)|0);
     $$pre$i$i240 = HEAP8[$441>>0]|0;
     $$pre5$i$i241 = ((($426)) + 41|0);
     $$pre$phi$i$i242Z2D = $$pre5$i$i241;$$sink$i$i$i243 = $447;$877 = $$pre$i$i240;
    }
    HEAP32[$429>>2] = $$sink$i$i$i243;
    HEAP32[$427>>2] = $$pre$phi$i$i242Z2D;
    $$0$i$i245 = $877;$451 = $$pre$phi$i$i242Z2D;$452 = $$sink$i$i$i243;
   }
  }
  $448 = $$0$i$i245&255;
  $449 = $448 << 8;
  $450 = ($451>>>0)<($452>>>0);
  if ($450) {
   $453 = ((($451)) + 1|0);
   HEAP32[$427>>2] = $453;
   $454 = HEAP8[$451>>0]|0;
   $$0$i8$i252 = $454;
  } else {
   $455 = ((($426)) + 32|0);
   $456 = HEAP32[$455>>2]|0;
   $457 = ($456|0)==(0);
   if ($457) {
    $$0$i8$i252 = 0;
   } else {
    $458 = ((($426)) + 16|0);
    $459 = HEAP32[$458>>2]|0;
    $460 = ((($426)) + 28|0);
    $461 = HEAP32[$460>>2]|0;
    $462 = ((($426)) + 40|0);
    $463 = ((($426)) + 36|0);
    $464 = HEAP32[$463>>2]|0;
    $465 = (ftCall_iiii($459|0,$461,$462,$464)|0);
    $466 = ($465|0)==(0);
    if ($466) {
     HEAP32[$455>>2] = 0;
     $467 = ((($426)) + 41|0);
     HEAP8[$462>>0] = 0;
     $$pre$phi$i5$i249Z2D = $467;$$sink$i$i6$i250 = $467;$878 = 0;
    } else {
     $468 = (((($426)) + 40|0) + ($465)|0);
     $$pre$i3$i247 = HEAP8[$462>>0]|0;
     $$pre5$i4$i248 = ((($426)) + 41|0);
     $$pre$phi$i5$i249Z2D = $$pre5$i4$i248;$$sink$i$i6$i250 = $468;$878 = $$pre$i3$i247;
    }
    HEAP32[$429>>2] = $$sink$i$i6$i250;
    HEAP32[$427>>2] = $$pre$phi$i5$i249Z2D;
    $$0$i8$i252 = $878;
   }
  }
  $469 = $$0$i8$i252&255;
  $470 = $449 | $469;
  $471 = ($470>>>0)<(2);
  if ($471) {
   $$4$shrunk = 0;
   $$4 = $$4$shrunk&1;
   STACKTOP = sp;return ($$4|0);
  }
  $472 = ($1|0)==(224);
  $473 = ($470>>>0)>(6);
  $or$cond10 = $472 & $473;
  do {
   if ($or$cond10) {
    $474 = HEAP32[$0>>2]|0;
    $475 = ((($474)) + 168|0);
    $476 = HEAP32[$475>>2]|0;
    $477 = ((($474)) + 172|0);
    $478 = HEAP32[$477>>2]|0;
    $479 = ($476>>>0)<($478>>>0);
    if ($479) {
     $480 = ((($476)) + 1|0);
     HEAP32[$475>>2] = $480;
     $481 = HEAP8[$476>>0]|0;
     $$0$i266 = $481;$$pre$phi394Z2D = $477;$$pre$phiZ2D = $475;$498 = $480;$499 = $478;$678 = $474;
    } else {
     $482 = ((($474)) + 32|0);
     $483 = HEAP32[$482>>2]|0;
     $484 = ($483|0)==(0);
     if ($484) {
      $$0$i266 = 0;$$pre$phi394Z2D = $477;$$pre$phiZ2D = $475;$498 = $476;$499 = $478;$678 = $474;
     } else {
      $485 = ((($474)) + 16|0);
      $486 = HEAP32[$485>>2]|0;
      $487 = ((($474)) + 28|0);
      $488 = HEAP32[$487>>2]|0;
      $489 = ((($474)) + 40|0);
      $490 = ((($474)) + 36|0);
      $491 = HEAP32[$490>>2]|0;
      $492 = (ftCall_iiii($486|0,$488,$489,$491)|0);
      $493 = ($492|0)==(0);
      if ($493) {
       HEAP32[$482>>2] = 0;
       $494 = ((($474)) + 41|0);
       HEAP8[$489>>0] = 0;
       $$pre$phi$i263Z2D = $494;$$sink$i$i264 = $494;$879 = 0;
      } else {
       $495 = (((($474)) + 40|0) + ($492)|0);
       $$pre$i261 = HEAP8[$489>>0]|0;
       $$pre5$i262 = ((($474)) + 41|0);
       $$pre$phi$i263Z2D = $$pre5$i262;$$sink$i$i264 = $495;$879 = $$pre$i261;
      }
      HEAP32[$477>>2] = $$sink$i$i264;
      HEAP32[$475>>2] = $$pre$phi$i263Z2D;
      $$pre374 = HEAP32[$0>>2]|0;
      $$phi$trans$insert375 = ((($$pre374)) + 168|0);
      $$pre376 = HEAP32[$$phi$trans$insert375>>2]|0;
      $$phi$trans$insert377 = ((($$pre374)) + 172|0);
      $$pre378 = HEAP32[$$phi$trans$insert377>>2]|0;
      $$0$i266 = $879;$$pre$phi394Z2D = $$phi$trans$insert377;$$pre$phiZ2D = $$phi$trans$insert375;$498 = $$pre376;$499 = $$pre378;$678 = $$pre374;
     }
    }
    $496 = ($$0$i266<<24>>24)==(74);
    $497 = ($498>>>0)<($499>>>0);
    if ($497) {
     $692 = ((($498)) + 1|0);
     HEAP32[$$pre$phiZ2D>>2] = $692;
     $693 = HEAP8[$498>>0]|0;
     $$0$i266$1 = $693;$$pre$phi395Z2D = $$pre$phiZ2D;$$pre$phi396Z2D = $$pre$phi394Z2D;$696 = $692;$697 = $499;$699 = $678;
    } else {
     $677 = ((($678)) + 32|0);
     $679 = HEAP32[$677>>2]|0;
     $680 = ($679|0)==(0);
     if ($680) {
      $$0$i266$1 = 0;$$pre$phi395Z2D = $$pre$phiZ2D;$$pre$phi396Z2D = $$pre$phi394Z2D;$696 = $498;$697 = $499;$699 = $678;
     } else {
      $681 = ((($678)) + 16|0);
      $682 = HEAP32[$681>>2]|0;
      $683 = ((($678)) + 28|0);
      $684 = HEAP32[$683>>2]|0;
      $685 = ((($678)) + 40|0);
      $686 = ((($678)) + 36|0);
      $687 = HEAP32[$686>>2]|0;
      $688 = (ftCall_iiii($682|0,$684,$685,$687)|0);
      $689 = ($688|0)==(0);
      if ($689) {
       HEAP32[$677>>2] = 0;
       $691 = ((($678)) + 41|0);
       HEAP8[$685>>0] = 0;
       $$pre$phi$i263$1Z2D = $691;$$sink$i$i264$1 = $691;$882 = 0;
      } else {
       $690 = (((($678)) + 40|0) + ($688)|0);
       $$pre$i261$1 = HEAP8[$685>>0]|0;
       $$pre5$i262$1 = ((($678)) + 41|0);
       $$pre$phi$i263$1Z2D = $$pre5$i262$1;$$sink$i$i264$1 = $690;$882 = $$pre$i261$1;
      }
      HEAP32[$$pre$phi394Z2D>>2] = $$sink$i$i264$1;
      HEAP32[$$pre$phiZ2D>>2] = $$pre$phi$i263$1Z2D;
      $$pre379 = HEAP32[$0>>2]|0;
      $$phi$trans$insert380 = ((($$pre379)) + 168|0);
      $$pre381 = HEAP32[$$phi$trans$insert380>>2]|0;
      $$phi$trans$insert382 = ((($$pre379)) + 172|0);
      $$pre383 = HEAP32[$$phi$trans$insert382>>2]|0;
      $$0$i266$1 = $882;$$pre$phi395Z2D = $$phi$trans$insert380;$$pre$phi396Z2D = $$phi$trans$insert382;$696 = $$pre381;$697 = $$pre383;$699 = $$pre379;
     }
    }
    $694 = ($$0$i266$1<<24>>24)==(70);
    $narrow417 = $694 & $496;
    $695 = ($696>>>0)<($697>>>0);
    if ($695) {
     $713 = ((($696)) + 1|0);
     HEAP32[$$pre$phi395Z2D>>2] = $713;
     $714 = HEAP8[$696>>0]|0;
     $$0$i266$2 = $714;$$pre$phi397Z2D = $$pre$phi395Z2D;$$pre$phi398Z2D = $$pre$phi396Z2D;$717 = $713;$718 = $697;$720 = $699;
    } else {
     $698 = ((($699)) + 32|0);
     $700 = HEAP32[$698>>2]|0;
     $701 = ($700|0)==(0);
     if ($701) {
      $$0$i266$2 = 0;$$pre$phi397Z2D = $$pre$phi395Z2D;$$pre$phi398Z2D = $$pre$phi396Z2D;$717 = $696;$718 = $697;$720 = $699;
     } else {
      $702 = ((($699)) + 16|0);
      $703 = HEAP32[$702>>2]|0;
      $704 = ((($699)) + 28|0);
      $705 = HEAP32[$704>>2]|0;
      $706 = ((($699)) + 40|0);
      $707 = ((($699)) + 36|0);
      $708 = HEAP32[$707>>2]|0;
      $709 = (ftCall_iiii($703|0,$705,$706,$708)|0);
      $710 = ($709|0)==(0);
      if ($710) {
       HEAP32[$698>>2] = 0;
       $712 = ((($699)) + 41|0);
       HEAP8[$706>>0] = 0;
       $$pre$phi$i263$2Z2D = $712;$$sink$i$i264$2 = $712;$883 = 0;
      } else {
       $711 = (((($699)) + 40|0) + ($709)|0);
       $$pre$i261$2 = HEAP8[$706>>0]|0;
       $$pre5$i262$2 = ((($699)) + 41|0);
       $$pre$phi$i263$2Z2D = $$pre5$i262$2;$$sink$i$i264$2 = $711;$883 = $$pre$i261$2;
      }
      HEAP32[$$pre$phi396Z2D>>2] = $$sink$i$i264$2;
      HEAP32[$$pre$phi395Z2D>>2] = $$pre$phi$i263$2Z2D;
      $$pre384 = HEAP32[$0>>2]|0;
      $$phi$trans$insert385 = ((($$pre384)) + 168|0);
      $$pre386 = HEAP32[$$phi$trans$insert385>>2]|0;
      $$phi$trans$insert387 = ((($$pre384)) + 172|0);
      $$pre388 = HEAP32[$$phi$trans$insert387>>2]|0;
      $$0$i266$2 = $883;$$pre$phi397Z2D = $$phi$trans$insert385;$$pre$phi398Z2D = $$phi$trans$insert387;$717 = $$pre386;$718 = $$pre388;$720 = $$pre384;
     }
    }
    $715 = ($$0$i266$2<<24>>24)==(73);
    $narrow418 = $715 & $narrow417;
    $716 = ($717>>>0)<($718>>>0);
    if ($716) {
     $734 = ((($717)) + 1|0);
     HEAP32[$$pre$phi397Z2D>>2] = $734;
     $735 = HEAP8[$717>>0]|0;
     $$0$i266$3 = $735;$$pre$phi399Z2D = $$pre$phi397Z2D;$$pre$phi400Z2D = $$pre$phi398Z2D;$738 = $734;$739 = $718;$741 = $720;
    } else {
     $719 = ((($720)) + 32|0);
     $721 = HEAP32[$719>>2]|0;
     $722 = ($721|0)==(0);
     if ($722) {
      $$0$i266$3 = 0;$$pre$phi399Z2D = $$pre$phi397Z2D;$$pre$phi400Z2D = $$pre$phi398Z2D;$738 = $717;$739 = $718;$741 = $720;
     } else {
      $723 = ((($720)) + 16|0);
      $724 = HEAP32[$723>>2]|0;
      $725 = ((($720)) + 28|0);
      $726 = HEAP32[$725>>2]|0;
      $727 = ((($720)) + 40|0);
      $728 = ((($720)) + 36|0);
      $729 = HEAP32[$728>>2]|0;
      $730 = (ftCall_iiii($724|0,$726,$727,$729)|0);
      $731 = ($730|0)==(0);
      if ($731) {
       HEAP32[$719>>2] = 0;
       $733 = ((($720)) + 41|0);
       HEAP8[$727>>0] = 0;
       $$pre$phi$i263$3Z2D = $733;$$sink$i$i264$3 = $733;$884 = 0;
      } else {
       $732 = (((($720)) + 40|0) + ($730)|0);
       $$pre$i261$3 = HEAP8[$727>>0]|0;
       $$pre5$i262$3 = ((($720)) + 41|0);
       $$pre$phi$i263$3Z2D = $$pre5$i262$3;$$sink$i$i264$3 = $732;$884 = $$pre$i261$3;
      }
      HEAP32[$$pre$phi398Z2D>>2] = $$sink$i$i264$3;
      HEAP32[$$pre$phi397Z2D>>2] = $$pre$phi$i263$3Z2D;
      $$pre389 = HEAP32[$0>>2]|0;
      $$phi$trans$insert390 = ((($$pre389)) + 168|0);
      $$pre391 = HEAP32[$$phi$trans$insert390>>2]|0;
      $$phi$trans$insert392 = ((($$pre389)) + 172|0);
      $$pre393 = HEAP32[$$phi$trans$insert392>>2]|0;
      $$0$i266$3 = $884;$$pre$phi399Z2D = $$phi$trans$insert390;$$pre$phi400Z2D = $$phi$trans$insert392;$738 = $$pre391;$739 = $$pre393;$741 = $$pre389;
     }
    }
    $736 = ($$0$i266$3<<24>>24)==(70);
    $narrow419 = $736 & $narrow418;
    $737 = ($738>>>0)<($739>>>0);
    if ($737) {
     $755 = ((($738)) + 1|0);
     HEAP32[$$pre$phi399Z2D>>2] = $755;
     $756 = HEAP8[$738>>0]|0;
     $$0$i266$4 = $756;
    } else {
     $740 = ((($741)) + 32|0);
     $742 = HEAP32[$740>>2]|0;
     $743 = ($742|0)==(0);
     if ($743) {
      $$0$i266$4 = 0;
     } else {
      $744 = ((($741)) + 16|0);
      $745 = HEAP32[$744>>2]|0;
      $746 = ((($741)) + 28|0);
      $747 = HEAP32[$746>>2]|0;
      $748 = ((($741)) + 40|0);
      $749 = ((($741)) + 36|0);
      $750 = HEAP32[$749>>2]|0;
      $751 = (ftCall_iiii($745|0,$747,$748,$750)|0);
      $752 = ($751|0)==(0);
      if ($752) {
       HEAP32[$740>>2] = 0;
       $754 = ((($741)) + 41|0);
       HEAP8[$748>>0] = 0;
       $$pre$phi$i263$4Z2D = $754;$$sink$i$i264$4 = $754;$885 = 0;
      } else {
       $753 = (((($741)) + 40|0) + ($751)|0);
       $$pre$i261$4 = HEAP8[$748>>0]|0;
       $$pre5$i262$4 = ((($741)) + 41|0);
       $$pre$phi$i263$4Z2D = $$pre5$i262$4;$$sink$i$i264$4 = $753;$885 = $$pre$i261$4;
      }
      HEAP32[$$pre$phi400Z2D>>2] = $$sink$i$i264$4;
      HEAP32[$$pre$phi399Z2D>>2] = $$pre$phi$i263$4Z2D;
      $$0$i266$4 = $885;
     }
    }
    $757 = ($$0$i266$4<<24>>24)==(0);
    $narrow420 = $757 & $narrow419;
    $758 = (($470) + -7)|0;
    if ($narrow420) {
     $500 = ((($0)) + 18404|0);
     HEAP32[$500>>2] = 1;
     $$5 = $758;
     label = 227;
    } else {
     $$5 = $758;
     label = 227;
    }
   } else {
    $501 = ($1|0)==(238);
    $502 = ($470>>>0)>(13);
    $or$cond12 = $501 & $502;
    if (!($or$cond12)) {
     $503 = (($470) + -2)|0;
     $504 = HEAP32[$0>>2]|0;
     $$5315 = $503;$659 = $504;
     break;
    }
    $505 = HEAP32[$0>>2]|0;
    $506 = ((($505)) + 168|0);
    $507 = HEAP32[$506>>2]|0;
    $508 = ((($505)) + 172|0);
    $509 = HEAP32[$508>>2]|0;
    $510 = ($507>>>0)<($509>>>0);
    if ($510) {
     $511 = ((($507)) + 1|0);
     HEAP32[$506>>2] = $511;
     $512 = HEAP8[$507>>0]|0;
     $$0$i273 = $512;$$pre$phi401Z2D = $506;$$pre$phi402Z2D = $508;$529 = $511;$530 = $509;$760 = $505;
    } else {
     $513 = ((($505)) + 32|0);
     $514 = HEAP32[$513>>2]|0;
     $515 = ($514|0)==(0);
     if ($515) {
      $$0$i273 = 0;$$pre$phi401Z2D = $506;$$pre$phi402Z2D = $508;$529 = $507;$530 = $509;$760 = $505;
     } else {
      $516 = ((($505)) + 16|0);
      $517 = HEAP32[$516>>2]|0;
      $518 = ((($505)) + 28|0);
      $519 = HEAP32[$518>>2]|0;
      $520 = ((($505)) + 40|0);
      $521 = ((($505)) + 36|0);
      $522 = HEAP32[$521>>2]|0;
      $523 = (ftCall_iiii($517|0,$519,$520,$522)|0);
      $524 = ($523|0)==(0);
      if ($524) {
       HEAP32[$513>>2] = 0;
       $525 = ((($505)) + 41|0);
       HEAP8[$520>>0] = 0;
       $$pre$phi$i270Z2D = $525;$$sink$i$i271 = $525;$880 = 0;
      } else {
       $526 = (((($505)) + 40|0) + ($523)|0);
       $$pre$i268 = HEAP8[$520>>0]|0;
       $$pre5$i269 = ((($505)) + 41|0);
       $$pre$phi$i270Z2D = $$pre5$i269;$$sink$i$i271 = $526;$880 = $$pre$i268;
      }
      HEAP32[$508>>2] = $$sink$i$i271;
      HEAP32[$506>>2] = $$pre$phi$i270Z2D;
      $$pre = HEAP32[$0>>2]|0;
      $$phi$trans$insert = ((($$pre)) + 168|0);
      $$pre346 = HEAP32[$$phi$trans$insert>>2]|0;
      $$phi$trans$insert347 = ((($$pre)) + 172|0);
      $$pre348 = HEAP32[$$phi$trans$insert347>>2]|0;
      $$0$i273 = $880;$$pre$phi401Z2D = $$phi$trans$insert;$$pre$phi402Z2D = $$phi$trans$insert347;$529 = $$pre346;$530 = $$pre348;$760 = $$pre;
     }
    }
    $527 = ($$0$i273<<24>>24)==(65);
    $528 = ($529>>>0)<($530>>>0);
    if ($528) {
     $774 = ((($529)) + 1|0);
     HEAP32[$$pre$phi401Z2D>>2] = $774;
     $775 = HEAP8[$529>>0]|0;
     $$0$i273$1 = $775;$$pre$phi403Z2D = $$pre$phi401Z2D;$$pre$phi404Z2D = $$pre$phi402Z2D;$778 = $774;$779 = $530;$781 = $760;
    } else {
     $759 = ((($760)) + 32|0);
     $761 = HEAP32[$759>>2]|0;
     $762 = ($761|0)==(0);
     if ($762) {
      $$0$i273$1 = 0;$$pre$phi403Z2D = $$pre$phi401Z2D;$$pre$phi404Z2D = $$pre$phi402Z2D;$778 = $529;$779 = $530;$781 = $760;
     } else {
      $763 = ((($760)) + 16|0);
      $764 = HEAP32[$763>>2]|0;
      $765 = ((($760)) + 28|0);
      $766 = HEAP32[$765>>2]|0;
      $767 = ((($760)) + 40|0);
      $768 = ((($760)) + 36|0);
      $769 = HEAP32[$768>>2]|0;
      $770 = (ftCall_iiii($764|0,$766,$767,$769)|0);
      $771 = ($770|0)==(0);
      if ($771) {
       HEAP32[$759>>2] = 0;
       $773 = ((($760)) + 41|0);
       HEAP8[$767>>0] = 0;
       $$pre$phi$i270$1Z2D = $773;$$sink$i$i271$1 = $773;$886 = 0;
      } else {
       $772 = (((($760)) + 40|0) + ($770)|0);
       $$pre$i268$1 = HEAP8[$767>>0]|0;
       $$pre5$i269$1 = ((($760)) + 41|0);
       $$pre$phi$i270$1Z2D = $$pre5$i269$1;$$sink$i$i271$1 = $772;$886 = $$pre$i268$1;
      }
      HEAP32[$$pre$phi402Z2D>>2] = $$sink$i$i271$1;
      HEAP32[$$pre$phi401Z2D>>2] = $$pre$phi$i270$1Z2D;
      $$pre349 = HEAP32[$0>>2]|0;
      $$phi$trans$insert350 = ((($$pre349)) + 168|0);
      $$pre351 = HEAP32[$$phi$trans$insert350>>2]|0;
      $$phi$trans$insert352 = ((($$pre349)) + 172|0);
      $$pre353 = HEAP32[$$phi$trans$insert352>>2]|0;
      $$0$i273$1 = $886;$$pre$phi403Z2D = $$phi$trans$insert350;$$pre$phi404Z2D = $$phi$trans$insert352;$778 = $$pre351;$779 = $$pre353;$781 = $$pre349;
     }
    }
    $776 = ($$0$i273$1<<24>>24)==(100);
    $narrow = $776 & $527;
    $777 = ($778>>>0)<($779>>>0);
    if ($777) {
     $795 = ((($778)) + 1|0);
     HEAP32[$$pre$phi403Z2D>>2] = $795;
     $796 = HEAP8[$778>>0]|0;
     $$0$i273$2 = $796;$$pre$phi405Z2D = $$pre$phi403Z2D;$$pre$phi406Z2D = $$pre$phi404Z2D;$799 = $795;$800 = $779;$802 = $781;
    } else {
     $780 = ((($781)) + 32|0);
     $782 = HEAP32[$780>>2]|0;
     $783 = ($782|0)==(0);
     if ($783) {
      $$0$i273$2 = 0;$$pre$phi405Z2D = $$pre$phi403Z2D;$$pre$phi406Z2D = $$pre$phi404Z2D;$799 = $778;$800 = $779;$802 = $781;
     } else {
      $784 = ((($781)) + 16|0);
      $785 = HEAP32[$784>>2]|0;
      $786 = ((($781)) + 28|0);
      $787 = HEAP32[$786>>2]|0;
      $788 = ((($781)) + 40|0);
      $789 = ((($781)) + 36|0);
      $790 = HEAP32[$789>>2]|0;
      $791 = (ftCall_iiii($785|0,$787,$788,$790)|0);
      $792 = ($791|0)==(0);
      if ($792) {
       HEAP32[$780>>2] = 0;
       $794 = ((($781)) + 41|0);
       HEAP8[$788>>0] = 0;
       $$pre$phi$i270$2Z2D = $794;$$sink$i$i271$2 = $794;$887 = 0;
      } else {
       $793 = (((($781)) + 40|0) + ($791)|0);
       $$pre$i268$2 = HEAP8[$788>>0]|0;
       $$pre5$i269$2 = ((($781)) + 41|0);
       $$pre$phi$i270$2Z2D = $$pre5$i269$2;$$sink$i$i271$2 = $793;$887 = $$pre$i268$2;
      }
      HEAP32[$$pre$phi404Z2D>>2] = $$sink$i$i271$2;
      HEAP32[$$pre$phi403Z2D>>2] = $$pre$phi$i270$2Z2D;
      $$pre354 = HEAP32[$0>>2]|0;
      $$phi$trans$insert355 = ((($$pre354)) + 168|0);
      $$pre356 = HEAP32[$$phi$trans$insert355>>2]|0;
      $$phi$trans$insert357 = ((($$pre354)) + 172|0);
      $$pre358 = HEAP32[$$phi$trans$insert357>>2]|0;
      $$0$i273$2 = $887;$$pre$phi405Z2D = $$phi$trans$insert355;$$pre$phi406Z2D = $$phi$trans$insert357;$799 = $$pre356;$800 = $$pre358;$802 = $$pre354;
     }
    }
    $797 = ($$0$i273$2<<24>>24)==(111);
    $narrow413 = $797 & $narrow;
    $798 = ($799>>>0)<($800>>>0);
    if ($798) {
     $816 = ((($799)) + 1|0);
     HEAP32[$$pre$phi405Z2D>>2] = $816;
     $817 = HEAP8[$799>>0]|0;
     $$0$i273$3 = $817;$$pre$phi407Z2D = $$pre$phi405Z2D;$$pre$phi408Z2D = $$pre$phi406Z2D;$820 = $816;$821 = $800;$823 = $802;
    } else {
     $801 = ((($802)) + 32|0);
     $803 = HEAP32[$801>>2]|0;
     $804 = ($803|0)==(0);
     if ($804) {
      $$0$i273$3 = 0;$$pre$phi407Z2D = $$pre$phi405Z2D;$$pre$phi408Z2D = $$pre$phi406Z2D;$820 = $799;$821 = $800;$823 = $802;
     } else {
      $805 = ((($802)) + 16|0);
      $806 = HEAP32[$805>>2]|0;
      $807 = ((($802)) + 28|0);
      $808 = HEAP32[$807>>2]|0;
      $809 = ((($802)) + 40|0);
      $810 = ((($802)) + 36|0);
      $811 = HEAP32[$810>>2]|0;
      $812 = (ftCall_iiii($806|0,$808,$809,$811)|0);
      $813 = ($812|0)==(0);
      if ($813) {
       HEAP32[$801>>2] = 0;
       $815 = ((($802)) + 41|0);
       HEAP8[$809>>0] = 0;
       $$pre$phi$i270$3Z2D = $815;$$sink$i$i271$3 = $815;$888 = 0;
      } else {
       $814 = (((($802)) + 40|0) + ($812)|0);
       $$pre$i268$3 = HEAP8[$809>>0]|0;
       $$pre5$i269$3 = ((($802)) + 41|0);
       $$pre$phi$i270$3Z2D = $$pre5$i269$3;$$sink$i$i271$3 = $814;$888 = $$pre$i268$3;
      }
      HEAP32[$$pre$phi406Z2D>>2] = $$sink$i$i271$3;
      HEAP32[$$pre$phi405Z2D>>2] = $$pre$phi$i270$3Z2D;
      $$pre359 = HEAP32[$0>>2]|0;
      $$phi$trans$insert360 = ((($$pre359)) + 168|0);
      $$pre361 = HEAP32[$$phi$trans$insert360>>2]|0;
      $$phi$trans$insert362 = ((($$pre359)) + 172|0);
      $$pre363 = HEAP32[$$phi$trans$insert362>>2]|0;
      $$0$i273$3 = $888;$$pre$phi407Z2D = $$phi$trans$insert360;$$pre$phi408Z2D = $$phi$trans$insert362;$820 = $$pre361;$821 = $$pre363;$823 = $$pre359;
     }
    }
    $818 = ($$0$i273$3<<24>>24)==(98);
    $narrow414 = $818 & $narrow413;
    $819 = ($820>>>0)<($821>>>0);
    if ($819) {
     $837 = ((($820)) + 1|0);
     HEAP32[$$pre$phi407Z2D>>2] = $837;
     $838 = HEAP8[$820>>0]|0;
     $$0$i273$4 = $838;$$pre$phi409Z2D = $$pre$phi407Z2D;$$pre$phi410Z2D = $$pre$phi408Z2D;$841 = $837;$842 = $821;$844 = $823;
    } else {
     $822 = ((($823)) + 32|0);
     $824 = HEAP32[$822>>2]|0;
     $825 = ($824|0)==(0);
     if ($825) {
      $$0$i273$4 = 0;$$pre$phi409Z2D = $$pre$phi407Z2D;$$pre$phi410Z2D = $$pre$phi408Z2D;$841 = $820;$842 = $821;$844 = $823;
     } else {
      $826 = ((($823)) + 16|0);
      $827 = HEAP32[$826>>2]|0;
      $828 = ((($823)) + 28|0);
      $829 = HEAP32[$828>>2]|0;
      $830 = ((($823)) + 40|0);
      $831 = ((($823)) + 36|0);
      $832 = HEAP32[$831>>2]|0;
      $833 = (ftCall_iiii($827|0,$829,$830,$832)|0);
      $834 = ($833|0)==(0);
      if ($834) {
       HEAP32[$822>>2] = 0;
       $836 = ((($823)) + 41|0);
       HEAP8[$830>>0] = 0;
       $$pre$phi$i270$4Z2D = $836;$$sink$i$i271$4 = $836;$889 = 0;
      } else {
       $835 = (((($823)) + 40|0) + ($833)|0);
       $$pre$i268$4 = HEAP8[$830>>0]|0;
       $$pre5$i269$4 = ((($823)) + 41|0);
       $$pre$phi$i270$4Z2D = $$pre5$i269$4;$$sink$i$i271$4 = $835;$889 = $$pre$i268$4;
      }
      HEAP32[$$pre$phi408Z2D>>2] = $$sink$i$i271$4;
      HEAP32[$$pre$phi407Z2D>>2] = $$pre$phi$i270$4Z2D;
      $$pre364 = HEAP32[$0>>2]|0;
      $$phi$trans$insert365 = ((($$pre364)) + 168|0);
      $$pre366 = HEAP32[$$phi$trans$insert365>>2]|0;
      $$phi$trans$insert367 = ((($$pre364)) + 172|0);
      $$pre368 = HEAP32[$$phi$trans$insert367>>2]|0;
      $$0$i273$4 = $889;$$pre$phi409Z2D = $$phi$trans$insert365;$$pre$phi410Z2D = $$phi$trans$insert367;$841 = $$pre366;$842 = $$pre368;$844 = $$pre364;
     }
    }
    $839 = ($$0$i273$4<<24>>24)==(101);
    $narrow415 = $839 & $narrow414;
    $840 = ($841>>>0)<($842>>>0);
    if ($840) {
     $858 = ((($841)) + 1|0);
     HEAP32[$$pre$phi409Z2D>>2] = $858;
     $859 = HEAP8[$841>>0]|0;
     $$0$i273$5 = $859;
    } else {
     $843 = ((($844)) + 32|0);
     $845 = HEAP32[$843>>2]|0;
     $846 = ($845|0)==(0);
     if ($846) {
      $$0$i273$5 = 0;
     } else {
      $847 = ((($844)) + 16|0);
      $848 = HEAP32[$847>>2]|0;
      $849 = ((($844)) + 28|0);
      $850 = HEAP32[$849>>2]|0;
      $851 = ((($844)) + 40|0);
      $852 = ((($844)) + 36|0);
      $853 = HEAP32[$852>>2]|0;
      $854 = (ftCall_iiii($848|0,$850,$851,$853)|0);
      $855 = ($854|0)==(0);
      if ($855) {
       HEAP32[$843>>2] = 0;
       $857 = ((($844)) + 41|0);
       HEAP8[$851>>0] = 0;
       $$pre$phi$i270$5Z2D = $857;$$sink$i$i271$5 = $857;$890 = 0;
      } else {
       $856 = (((($844)) + 40|0) + ($854)|0);
       $$pre$i268$5 = HEAP8[$851>>0]|0;
       $$pre5$i269$5 = ((($844)) + 41|0);
       $$pre$phi$i270$5Z2D = $$pre5$i269$5;$$sink$i$i271$5 = $856;$890 = $$pre$i268$5;
      }
      HEAP32[$$pre$phi410Z2D>>2] = $$sink$i$i271$5;
      HEAP32[$$pre$phi409Z2D>>2] = $$pre$phi$i270$5Z2D;
      $$0$i273$5 = $890;
     }
    }
    $860 = ($$0$i273$5<<24>>24)==(0);
    $narrow416 = $860 & $narrow415;
    $861 = (($470) + -8)|0;
    if ($narrow416) {
     $531 = HEAP32[$0>>2]|0;
     $532 = ((($531)) + 168|0);
     $533 = HEAP32[$532>>2]|0;
     $534 = ((($531)) + 172|0);
     $535 = HEAP32[$534>>2]|0;
     $536 = ($533>>>0)<($535>>>0);
     if ($536) {
      $537 = ((($533)) + 1|0);
      HEAP32[$532>>2] = $537;
      $$pre$phi411Z2D = $532;$$pre$phi412Z2D = $534;$553 = $537;$554 = $535;$557 = $531;
     } else {
      $538 = ((($531)) + 32|0);
      $539 = HEAP32[$538>>2]|0;
      $540 = ($539|0)==(0);
      if ($540) {
       $$pre$phi411Z2D = $532;$$pre$phi412Z2D = $534;$553 = $533;$554 = $535;$557 = $531;
      } else {
       $541 = ((($531)) + 16|0);
       $542 = HEAP32[$541>>2]|0;
       $543 = ((($531)) + 28|0);
       $544 = HEAP32[$543>>2]|0;
       $545 = ((($531)) + 40|0);
       $546 = ((($531)) + 36|0);
       $547 = HEAP32[$546>>2]|0;
       $548 = (ftCall_iiii($542|0,$544,$545,$547)|0);
       $549 = ($548|0)==(0);
       if ($549) {
        HEAP32[$538>>2] = 0;
        $550 = ((($531)) + 41|0);
        HEAP8[$545>>0] = 0;
        $$pre$phi$i277Z2D = $550;$$sink$i$i278 = $550;
       } else {
        $551 = (((($531)) + 40|0) + ($548)|0);
        $$pre5$i276 = ((($531)) + 41|0);
        $$pre$phi$i277Z2D = $$pre5$i276;$$sink$i$i278 = $551;
       }
       HEAP32[$534>>2] = $$sink$i$i278;
       HEAP32[$532>>2] = $$pre$phi$i277Z2D;
       $$pre369 = HEAP32[$0>>2]|0;
       $$phi$trans$insert370 = ((($$pre369)) + 168|0);
       $$pre371 = HEAP32[$$phi$trans$insert370>>2]|0;
       $$phi$trans$insert372 = ((($$pre369)) + 172|0);
       $$pre373 = HEAP32[$$phi$trans$insert372>>2]|0;
       $$pre$phi411Z2D = $$phi$trans$insert370;$$pre$phi412Z2D = $$phi$trans$insert372;$553 = $$pre371;$554 = $$pre373;$557 = $$pre369;
      }
     }
     $552 = ($553>>>0)<($554>>>0);
     if ($552) {
      $555 = ((($553)) + 1|0);
      $$ph = $554;$$pre$phi$i$i284$sinkZ2D = $555;
      label = 194;
     } else {
      $556 = ((($557)) + 32|0);
      $558 = HEAP32[$556>>2]|0;
      $559 = ($558|0)==(0);
      if ($559) {
       $572 = $553;$573 = $554;
      } else {
       $560 = ((($557)) + 16|0);
       $561 = HEAP32[$560>>2]|0;
       $562 = ((($557)) + 28|0);
       $563 = HEAP32[$562>>2]|0;
       $564 = ((($557)) + 40|0);
       $565 = ((($557)) + 36|0);
       $566 = HEAP32[$565>>2]|0;
       $567 = (ftCall_iiii($561|0,$563,$564,$566)|0);
       $568 = ($567|0)==(0);
       if ($568) {
        HEAP32[$556>>2] = 0;
        $569 = ((($557)) + 41|0);
        HEAP8[$564>>0] = 0;
        $$pre$phi$i$i284Z2D = $569;$$sink$i$i$i285 = $569;
       } else {
        $570 = (((($557)) + 40|0) + ($567)|0);
        $$pre5$i$i283 = ((($557)) + 41|0);
        $$pre$phi$i$i284Z2D = $$pre5$i$i283;$$sink$i$i$i285 = $570;
       }
       HEAP32[$$pre$phi412Z2D>>2] = $$sink$i$i$i285;
       $$ph = $$sink$i$i$i285;$$pre$phi$i$i284$sinkZ2D = $$pre$phi$i$i284Z2D;
       label = 194;
      }
     }
     if ((label|0) == 194) {
      HEAP32[$$pre$phi411Z2D>>2] = $$pre$phi$i$i284$sinkZ2D;
      $572 = $$pre$phi$i$i284$sinkZ2D;$573 = $$ph;
     }
     $571 = ($572>>>0)<($573>>>0);
     if ($571) {
      $574 = ((($572)) + 1|0);
      $$sink = $574;
      label = 202;
     } else {
      $575 = ((($557)) + 32|0);
      $576 = HEAP32[$575>>2]|0;
      $577 = ($576|0)==(0);
      if (!($577)) {
       $578 = ((($557)) + 16|0);
       $579 = HEAP32[$578>>2]|0;
       $580 = ((($557)) + 28|0);
       $581 = HEAP32[$580>>2]|0;
       $582 = ((($557)) + 40|0);
       $583 = ((($557)) + 36|0);
       $584 = HEAP32[$583>>2]|0;
       $585 = (ftCall_iiii($579|0,$581,$582,$584)|0);
       $586 = ($585|0)==(0);
       if ($586) {
        HEAP32[$575>>2] = 0;
        $587 = ((($557)) + 41|0);
        HEAP8[$582>>0] = 0;
        $$pre$phi$i5$i291Z2D = $587;$$sink$i$i6$i292 = $587;
       } else {
        $588 = (((($557)) + 40|0) + ($585)|0);
        $$pre5$i4$i290 = ((($557)) + 41|0);
        $$pre$phi$i5$i291Z2D = $$pre5$i4$i290;$$sink$i$i6$i292 = $588;
       }
       HEAP32[$$pre$phi412Z2D>>2] = $$sink$i$i6$i292;
       $$sink = $$pre$phi$i5$i291Z2D;
       label = 202;
      }
     }
     if ((label|0) == 202) {
      HEAP32[$$pre$phi411Z2D>>2] = $$sink;
     }
     $589 = HEAP32[$0>>2]|0;
     $590 = ((($589)) + 168|0);
     $591 = HEAP32[$590>>2]|0;
     $592 = ((($589)) + 172|0);
     $593 = HEAP32[$592>>2]|0;
     $594 = ($591>>>0)<($593>>>0);
     do {
      if ($594) {
       $595 = ((($591)) + 1|0);
       $$ph428 = $593;$$pre$phi$i$i298$sinkZ2D = $595;
       label = 210;
      } else {
       $596 = ((($589)) + 32|0);
       $597 = HEAP32[$596>>2]|0;
       $598 = ($597|0)==(0);
       if ($598) {
        $611 = $591;$612 = $593;
        break;
       }
       $599 = ((($589)) + 16|0);
       $600 = HEAP32[$599>>2]|0;
       $601 = ((($589)) + 28|0);
       $602 = HEAP32[$601>>2]|0;
       $603 = ((($589)) + 40|0);
       $604 = ((($589)) + 36|0);
       $605 = HEAP32[$604>>2]|0;
       $606 = (ftCall_iiii($600|0,$602,$603,$605)|0);
       $607 = ($606|0)==(0);
       if ($607) {
        HEAP32[$596>>2] = 0;
        $608 = ((($589)) + 41|0);
        HEAP8[$603>>0] = 0;
        $$pre$phi$i$i298Z2D = $608;$$sink$i$i$i299 = $608;
       } else {
        $609 = (((($589)) + 40|0) + ($606)|0);
        $$pre5$i$i297 = ((($589)) + 41|0);
        $$pre$phi$i$i298Z2D = $$pre5$i$i297;$$sink$i$i$i299 = $609;
       }
       HEAP32[$592>>2] = $$sink$i$i$i299;
       $$ph428 = $$sink$i$i$i299;$$pre$phi$i$i298$sinkZ2D = $$pre$phi$i$i298Z2D;
       label = 210;
      }
     } while(0);
     if ((label|0) == 210) {
      HEAP32[$590>>2] = $$pre$phi$i$i298$sinkZ2D;
      $611 = $$pre$phi$i$i298$sinkZ2D;$612 = $$ph428;
     }
     $610 = ($611>>>0)<($612>>>0);
     do {
      if ($610) {
       $613 = ((($611)) + 1|0);
       $$sink430 = $613;
       label = 218;
      } else {
       $614 = ((($589)) + 32|0);
       $615 = HEAP32[$614>>2]|0;
       $616 = ($615|0)==(0);
       if ($616) {
        break;
       }
       $617 = ((($589)) + 16|0);
       $618 = HEAP32[$617>>2]|0;
       $619 = ((($589)) + 28|0);
       $620 = HEAP32[$619>>2]|0;
       $621 = ((($589)) + 40|0);
       $622 = ((($589)) + 36|0);
       $623 = HEAP32[$622>>2]|0;
       $624 = (ftCall_iiii($618|0,$620,$621,$623)|0);
       $625 = ($624|0)==(0);
       if ($625) {
        HEAP32[$614>>2] = 0;
        $626 = ((($589)) + 41|0);
        HEAP8[$621>>0] = 0;
        $$pre$phi$i5$i305Z2D = $626;$$sink$i$i6$i306 = $626;
       } else {
        $627 = (((($589)) + 40|0) + ($624)|0);
        $$pre5$i4$i304 = ((($589)) + 41|0);
        $$pre$phi$i5$i305Z2D = $$pre5$i4$i304;$$sink$i$i6$i306 = $627;
       }
       HEAP32[$592>>2] = $$sink$i$i6$i306;
       $$sink430 = $$pre$phi$i5$i305Z2D;
       label = 218;
      }
     } while(0);
     if ((label|0) == 218) {
      HEAP32[$590>>2] = $$sink430;
     }
     $628 = HEAP32[$0>>2]|0;
     $629 = ((($628)) + 168|0);
     $630 = HEAP32[$629>>2]|0;
     $631 = ((($628)) + 172|0);
     $632 = HEAP32[$631>>2]|0;
     $633 = ($630>>>0)<($632>>>0);
     do {
      if ($633) {
       $634 = ((($630)) + 1|0);
       HEAP32[$629>>2] = $634;
       $635 = HEAP8[$630>>0]|0;
       $$0$i259 = $635;
      } else {
       $636 = ((($628)) + 32|0);
       $637 = HEAP32[$636>>2]|0;
       $638 = ($637|0)==(0);
       if ($638) {
        $$0$i259 = 0;
        break;
       }
       $639 = ((($628)) + 16|0);
       $640 = HEAP32[$639>>2]|0;
       $641 = ((($628)) + 28|0);
       $642 = HEAP32[$641>>2]|0;
       $643 = ((($628)) + 40|0);
       $644 = ((($628)) + 36|0);
       $645 = HEAP32[$644>>2]|0;
       $646 = (ftCall_iiii($640|0,$642,$643,$645)|0);
       $647 = ($646|0)==(0);
       if ($647) {
        HEAP32[$636>>2] = 0;
        $648 = ((($628)) + 41|0);
        HEAP8[$643>>0] = 0;
        $$pre$phi$i256Z2D = $648;$$sink$i$i257 = $648;$881 = 0;
       } else {
        $649 = (((($628)) + 40|0) + ($646)|0);
        $$pre$i254 = HEAP8[$643>>0]|0;
        $$pre5$i255 = ((($628)) + 41|0);
        $$pre$phi$i256Z2D = $$pre5$i255;$$sink$i$i257 = $649;$881 = $$pre$i254;
       }
       HEAP32[$631>>2] = $$sink$i$i257;
       HEAP32[$629>>2] = $$pre$phi$i256Z2D;
       $$0$i259 = $881;
      }
     } while(0);
     $650 = $$0$i259&255;
     $651 = ((($0)) + 18408|0);
     HEAP32[$651>>2] = $650;
     $652 = (($470) + -14)|0;
     $$5 = $652;
     label = 227;
    } else {
     $$5 = $861;
     label = 227;
    }
   }
  } while(0);
  if ((label|0) == 227) {
   $653 = HEAP32[$0>>2]|0;
   $654 = ($$5|0)<(0);
   if ($654) {
    $655 = ((($653)) + 172|0);
    $656 = HEAP32[$655>>2]|0;
    $657 = ((($653)) + 168|0);
    HEAP32[$657>>2] = $656;
    $$4$shrunk = 1;
    $$4 = $$4$shrunk&1;
    STACKTOP = sp;return ($$4|0);
   } else {
    $$5315 = $$5;$659 = $653;
   }
  }
  $658 = ((($659)) + 16|0);
  $660 = HEAP32[$658>>2]|0;
  $661 = ($660|0)==(0|0);
  if ($661) {
   $$phi$trans$insert$i = ((($659)) + 168|0);
   $$pre$i = HEAP32[$$phi$trans$insert$i>>2]|0;
   $$pre$phi$iZ2D = $$phi$trans$insert$i;$676 = $$pre$i;
  } else {
   $662 = ((($659)) + 172|0);
   $663 = HEAP32[$662>>2]|0;
   $664 = ((($659)) + 168|0);
   $665 = HEAP32[$664>>2]|0;
   $666 = $663;
   $667 = (($666) - ($665))|0;
   $668 = ($$5315|0)>($667|0);
   $669 = $665;
   if ($668) {
    HEAP32[$664>>2] = $663;
    $670 = ((($659)) + 20|0);
    $671 = HEAP32[$670>>2]|0;
    $672 = ((($659)) + 28|0);
    $673 = HEAP32[$672>>2]|0;
    $674 = (($$5315) - ($667))|0;
    ftCall_vii($671|0,$673,$674);
    $$4$shrunk = 1;
    $$4 = $$4$shrunk&1;
    STACKTOP = sp;return ($$4|0);
   } else {
    $$pre$phi$iZ2D = $664;$676 = $669;
   }
  }
  $675 = (($676) + ($$5315)|0);
  HEAP32[$$pre$phi$iZ2D>>2] = $675;
  $$4$shrunk = 1;
  $$4 = $$4$shrunk&1;
  STACKTOP = sp;return ($$4|0);
 }
 }
 return (0)|0;
}
function _resample_row_1($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($1|0);
}
function _stbi__resample_row_v_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$010 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 if (!($5)) {
  return ($0|0);
 }
 $$010 = 0;
 while(1) {
  $6 = (($1) + ($$010)|0);
  $7 = HEAP8[$6>>0]|0;
  $8 = $7&255;
  $9 = ($8*3)|0;
  $10 = (($2) + ($$010)|0);
  $11 = HEAP8[$10>>0]|0;
  $12 = $11&255;
  $13 = (($12) + 2)|0;
  $14 = (($13) + ($9))|0;
  $15 = $14 >>> 2;
  $16 = $15&255;
  $17 = (($0) + ($$010)|0);
  HEAP8[$17>>0] = $16;
  $18 = (($$010) + 1)|0;
  $exitcond = ($18|0)==($3|0);
  if ($exitcond) {
   break;
  } else {
   $$010 = $18;
  }
 }
 return ($0|0);
}
function _stbi__resample_row_h_2($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$040$lcssa = 0, $$04041 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $phitmp = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)==(1);
 $6 = HEAP8[$1>>0]|0;
 if ($5) {
  $7 = ((($0)) + 1|0);
  HEAP8[$7>>0] = $6;
  HEAP8[$0>>0] = $6;
  return ($0|0);
 }
 HEAP8[$0>>0] = $6;
 $8 = HEAP8[$1>>0]|0;
 $9 = $8&255;
 $10 = ($9*3)|0;
 $11 = ((($1)) + 1|0);
 $12 = HEAP8[$11>>0]|0;
 $13 = $12&255;
 $14 = (($13) + 2)|0;
 $15 = (($14) + ($10))|0;
 $16 = $15 >>> 2;
 $17 = $16&255;
 $18 = ((($0)) + 1|0);
 HEAP8[$18>>0] = $17;
 $19 = (($3) + -1)|0;
 $20 = ($3|0)>(2);
 if ($20) {
  $$04041 = 1;
  while(1) {
   $21 = (($1) + ($$04041)|0);
   $22 = HEAP8[$21>>0]|0;
   $23 = $22&255;
   $24 = ($23*3)|0;
   $25 = (($24) + 2)|0;
   $26 = (($$04041) + -1)|0;
   $27 = (($1) + ($26)|0);
   $28 = HEAP8[$27>>0]|0;
   $29 = $28&255;
   $30 = (($25) + ($29))|0;
   $31 = $30 >>> 2;
   $32 = $31&255;
   $33 = $$04041 << 1;
   $34 = (($0) + ($33)|0);
   HEAP8[$34>>0] = $32;
   $35 = (($$04041) + 1)|0;
   $36 = (($1) + ($35)|0);
   $37 = HEAP8[$36>>0]|0;
   $38 = $37&255;
   $39 = (($25) + ($38))|0;
   $40 = $39 >>> 2;
   $41 = $40&255;
   $42 = $33 | 1;
   $43 = (($0) + ($42)|0);
   HEAP8[$43>>0] = $41;
   $exitcond = ($35|0)==($19|0);
   if ($exitcond) {
    break;
   } else {
    $$04041 = $35;
   }
  }
  $phitmp = $19 << 1;
  $$040$lcssa = $phitmp;
 } else {
  $$040$lcssa = 2;
 }
 $44 = (($3) + -2)|0;
 $45 = (($1) + ($44)|0);
 $46 = HEAP8[$45>>0]|0;
 $47 = $46&255;
 $48 = ($47*3)|0;
 $49 = (($1) + ($19)|0);
 $50 = HEAP8[$49>>0]|0;
 $51 = $50&255;
 $52 = (($51) + 2)|0;
 $53 = (($52) + ($48))|0;
 $54 = $53 >>> 2;
 $55 = $54&255;
 $56 = (($0) + ($$040$lcssa)|0);
 HEAP8[$56>>0] = $55;
 $57 = HEAP8[$49>>0]|0;
 $58 = $$040$lcssa | 1;
 $59 = (($0) + ($58)|0);
 HEAP8[$59>>0] = $57;
 return ($0|0);
}
function _stbi__resample_row_generic($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$01517$us = 0, $$016$us = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond22 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $5 = ($3|0)>(0);
 $6 = ($4|0)>(0);
 $or$cond = $5 & $6;
 if (!($or$cond)) {
  return ($0|0);
 }
 $$01517$us = 0;
 while(1) {
  $7 = (($1) + ($$01517$us)|0);
  $8 = Math_imul($$01517$us, $4)|0;
  $$016$us = 0;
  while(1) {
   $9 = HEAP8[$7>>0]|0;
   $10 = (($$016$us) + ($8))|0;
   $11 = (($0) + ($10)|0);
   HEAP8[$11>>0] = $9;
   $12 = (($$016$us) + 1)|0;
   $exitcond = ($12|0)==($4|0);
   if ($exitcond) {
    break;
   } else {
    $$016$us = $12;
   }
  }
  $13 = (($$01517$us) + 1)|0;
  $exitcond22 = ($13|0)==($3|0);
  if ($exitcond22) {
   break;
  } else {
   $$01517$us = $13;
  }
 }
 return ($0|0);
}
function _stbi__build_huffman($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$06589 = 0, $$06589$1 = 0, $$06589$10 = 0, $$06589$11 = 0, $$06589$12 = 0, $$06589$13 = 0, $$06589$14 = 0, $$06589$15 = 0, $$06589$2 = 0, $$06589$3 = 0, $$06589$4 = 0, $$06589$5 = 0, $$06589$6 = 0, $$06589$7 = 0, $$06589$8 = 0, $$06589$9 = 0, $$06784 = 0, $$16685 = 0, $$16880 = 0;
 var $$171$lcssa = 0, $$171$lcssa$1 = 0, $$171$lcssa$10 = 0, $$171$lcssa$11 = 0, $$171$lcssa$12 = 0, $$171$lcssa$13 = 0, $$171$lcssa$14 = 0, $$171$lcssa$15 = 0, $$171$lcssa$2 = 0, $$171$lcssa$3 = 0, $$171$lcssa$4 = 0, $$171$lcssa$5 = 0, $$171$lcssa$6 = 0, $$171$lcssa$7 = 0, $$171$lcssa$8 = 0, $$171$lcssa$9 = 0, $$17188 = 0, $$17188$1 = 0, $$17188$10 = 0, $$17188$11 = 0;
 var $$17188$12 = 0, $$17188$13 = 0, $$17188$14 = 0, $$17188$15 = 0, $$17188$2 = 0, $$17188$3 = 0, $$17188$4 = 0, $$17188$5 = 0, $$17188$6 = 0, $$17188$7 = 0, $$17188$8 = 0, $$17188$9 = 0, $$177 = 0, $$269 = 0, $$27283 = 0, $$379 = 0, $$4 = 0, $10 = 0, $100 = 0, $101 = 0;
 var $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0;
 var $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0;
 var $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0;
 var $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0;
 var $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0;
 var $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0;
 var $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0;
 var $97 = 0, $98 = 0, $99 = 0, $exitcond = 0, $scevgep = 0, $smax = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(0);
 if ($3) {
  $$06589 = 0;$$17188 = 0;
  while(1) {
   $4 = (($$17188) + 1)|0;
   $5 = (((($0)) + 1280|0) + ($$17188)|0);
   HEAP8[$5>>0] = 1;
   $6 = (($$06589) + 1)|0;
   $7 = HEAP32[$1>>2]|0;
   $8 = ($6|0)<($7|0);
   if ($8) {
    $$06589 = $6;$$17188 = $4;
   } else {
    $$171$lcssa = $4;
    break;
   }
  }
 } else {
  $$171$lcssa = 0;
 }
 $9 = ((($1)) + 4|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)>(0);
 if ($11) {
  $$06589$1 = 0;$$17188$1 = $$171$lcssa;
  while(1) {
   $50 = (($$17188$1) + 1)|0;
   $51 = (((($0)) + 1280|0) + ($$17188$1)|0);
   HEAP8[$51>>0] = 2;
   $52 = (($$06589$1) + 1)|0;
   $53 = HEAP32[$9>>2]|0;
   $54 = ($52|0)<($53|0);
   if ($54) {
    $$06589$1 = $52;$$17188$1 = $50;
   } else {
    $$171$lcssa$1 = $50;
    break;
   }
  }
 } else {
  $$171$lcssa$1 = $$171$lcssa;
 }
 $55 = ((($1)) + 8|0);
 $56 = HEAP32[$55>>2]|0;
 $57 = ($56|0)>(0);
 if ($57) {
  $$06589$2 = 0;$$17188$2 = $$171$lcssa$1;
  while(1) {
   $58 = (($$17188$2) + 1)|0;
   $59 = (((($0)) + 1280|0) + ($$17188$2)|0);
   HEAP8[$59>>0] = 3;
   $60 = (($$06589$2) + 1)|0;
   $61 = HEAP32[$55>>2]|0;
   $62 = ($60|0)<($61|0);
   if ($62) {
    $$06589$2 = $60;$$17188$2 = $58;
   } else {
    $$171$lcssa$2 = $58;
    break;
   }
  }
 } else {
  $$171$lcssa$2 = $$171$lcssa$1;
 }
 $63 = ((($1)) + 12|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = ($64|0)>(0);
 if ($65) {
  $$06589$3 = 0;$$17188$3 = $$171$lcssa$2;
  while(1) {
   $66 = (($$17188$3) + 1)|0;
   $67 = (((($0)) + 1280|0) + ($$17188$3)|0);
   HEAP8[$67>>0] = 4;
   $68 = (($$06589$3) + 1)|0;
   $69 = HEAP32[$63>>2]|0;
   $70 = ($68|0)<($69|0);
   if ($70) {
    $$06589$3 = $68;$$17188$3 = $66;
   } else {
    $$171$lcssa$3 = $66;
    break;
   }
  }
 } else {
  $$171$lcssa$3 = $$171$lcssa$2;
 }
 $71 = ((($1)) + 16|0);
 $72 = HEAP32[$71>>2]|0;
 $73 = ($72|0)>(0);
 if ($73) {
  $$06589$4 = 0;$$17188$4 = $$171$lcssa$3;
  while(1) {
   $74 = (($$17188$4) + 1)|0;
   $75 = (((($0)) + 1280|0) + ($$17188$4)|0);
   HEAP8[$75>>0] = 5;
   $76 = (($$06589$4) + 1)|0;
   $77 = HEAP32[$71>>2]|0;
   $78 = ($76|0)<($77|0);
   if ($78) {
    $$06589$4 = $76;$$17188$4 = $74;
   } else {
    $$171$lcssa$4 = $74;
    break;
   }
  }
 } else {
  $$171$lcssa$4 = $$171$lcssa$3;
 }
 $79 = ((($1)) + 20|0);
 $80 = HEAP32[$79>>2]|0;
 $81 = ($80|0)>(0);
 if ($81) {
  $$06589$5 = 0;$$17188$5 = $$171$lcssa$4;
  while(1) {
   $82 = (($$17188$5) + 1)|0;
   $83 = (((($0)) + 1280|0) + ($$17188$5)|0);
   HEAP8[$83>>0] = 6;
   $84 = (($$06589$5) + 1)|0;
   $85 = HEAP32[$79>>2]|0;
   $86 = ($84|0)<($85|0);
   if ($86) {
    $$06589$5 = $84;$$17188$5 = $82;
   } else {
    $$171$lcssa$5 = $82;
    break;
   }
  }
 } else {
  $$171$lcssa$5 = $$171$lcssa$4;
 }
 $87 = ((($1)) + 24|0);
 $88 = HEAP32[$87>>2]|0;
 $89 = ($88|0)>(0);
 if ($89) {
  $$06589$6 = 0;$$17188$6 = $$171$lcssa$5;
  while(1) {
   $90 = (($$17188$6) + 1)|0;
   $91 = (((($0)) + 1280|0) + ($$17188$6)|0);
   HEAP8[$91>>0] = 7;
   $92 = (($$06589$6) + 1)|0;
   $93 = HEAP32[$87>>2]|0;
   $94 = ($92|0)<($93|0);
   if ($94) {
    $$06589$6 = $92;$$17188$6 = $90;
   } else {
    $$171$lcssa$6 = $90;
    break;
   }
  }
 } else {
  $$171$lcssa$6 = $$171$lcssa$5;
 }
 $95 = ((($1)) + 28|0);
 $96 = HEAP32[$95>>2]|0;
 $97 = ($96|0)>(0);
 if ($97) {
  $$06589$7 = 0;$$17188$7 = $$171$lcssa$6;
  while(1) {
   $98 = (($$17188$7) + 1)|0;
   $99 = (((($0)) + 1280|0) + ($$17188$7)|0);
   HEAP8[$99>>0] = 8;
   $100 = (($$06589$7) + 1)|0;
   $101 = HEAP32[$95>>2]|0;
   $102 = ($100|0)<($101|0);
   if ($102) {
    $$06589$7 = $100;$$17188$7 = $98;
   } else {
    $$171$lcssa$7 = $98;
    break;
   }
  }
 } else {
  $$171$lcssa$7 = $$171$lcssa$6;
 }
 $103 = ((($1)) + 32|0);
 $104 = HEAP32[$103>>2]|0;
 $105 = ($104|0)>(0);
 if ($105) {
  $$06589$8 = 0;$$17188$8 = $$171$lcssa$7;
  while(1) {
   $106 = (($$17188$8) + 1)|0;
   $107 = (((($0)) + 1280|0) + ($$17188$8)|0);
   HEAP8[$107>>0] = 9;
   $108 = (($$06589$8) + 1)|0;
   $109 = HEAP32[$103>>2]|0;
   $110 = ($108|0)<($109|0);
   if ($110) {
    $$06589$8 = $108;$$17188$8 = $106;
   } else {
    $$171$lcssa$8 = $106;
    break;
   }
  }
 } else {
  $$171$lcssa$8 = $$171$lcssa$7;
 }
 $111 = ((($1)) + 36|0);
 $112 = HEAP32[$111>>2]|0;
 $113 = ($112|0)>(0);
 if ($113) {
  $$06589$9 = 0;$$17188$9 = $$171$lcssa$8;
  while(1) {
   $114 = (($$17188$9) + 1)|0;
   $115 = (((($0)) + 1280|0) + ($$17188$9)|0);
   HEAP8[$115>>0] = 10;
   $116 = (($$06589$9) + 1)|0;
   $117 = HEAP32[$111>>2]|0;
   $118 = ($116|0)<($117|0);
   if ($118) {
    $$06589$9 = $116;$$17188$9 = $114;
   } else {
    $$171$lcssa$9 = $114;
    break;
   }
  }
 } else {
  $$171$lcssa$9 = $$171$lcssa$8;
 }
 $119 = ((($1)) + 40|0);
 $120 = HEAP32[$119>>2]|0;
 $121 = ($120|0)>(0);
 if ($121) {
  $$06589$10 = 0;$$17188$10 = $$171$lcssa$9;
  while(1) {
   $122 = (($$17188$10) + 1)|0;
   $123 = (((($0)) + 1280|0) + ($$17188$10)|0);
   HEAP8[$123>>0] = 11;
   $124 = (($$06589$10) + 1)|0;
   $125 = HEAP32[$119>>2]|0;
   $126 = ($124|0)<($125|0);
   if ($126) {
    $$06589$10 = $124;$$17188$10 = $122;
   } else {
    $$171$lcssa$10 = $122;
    break;
   }
  }
 } else {
  $$171$lcssa$10 = $$171$lcssa$9;
 }
 $127 = ((($1)) + 44|0);
 $128 = HEAP32[$127>>2]|0;
 $129 = ($128|0)>(0);
 if ($129) {
  $$06589$11 = 0;$$17188$11 = $$171$lcssa$10;
  while(1) {
   $130 = (($$17188$11) + 1)|0;
   $131 = (((($0)) + 1280|0) + ($$17188$11)|0);
   HEAP8[$131>>0] = 12;
   $132 = (($$06589$11) + 1)|0;
   $133 = HEAP32[$127>>2]|0;
   $134 = ($132|0)<($133|0);
   if ($134) {
    $$06589$11 = $132;$$17188$11 = $130;
   } else {
    $$171$lcssa$11 = $130;
    break;
   }
  }
 } else {
  $$171$lcssa$11 = $$171$lcssa$10;
 }
 $135 = ((($1)) + 48|0);
 $136 = HEAP32[$135>>2]|0;
 $137 = ($136|0)>(0);
 if ($137) {
  $$06589$12 = 0;$$17188$12 = $$171$lcssa$11;
  while(1) {
   $138 = (($$17188$12) + 1)|0;
   $139 = (((($0)) + 1280|0) + ($$17188$12)|0);
   HEAP8[$139>>0] = 13;
   $140 = (($$06589$12) + 1)|0;
   $141 = HEAP32[$135>>2]|0;
   $142 = ($140|0)<($141|0);
   if ($142) {
    $$06589$12 = $140;$$17188$12 = $138;
   } else {
    $$171$lcssa$12 = $138;
    break;
   }
  }
 } else {
  $$171$lcssa$12 = $$171$lcssa$11;
 }
 $143 = ((($1)) + 52|0);
 $144 = HEAP32[$143>>2]|0;
 $145 = ($144|0)>(0);
 if ($145) {
  $$06589$13 = 0;$$17188$13 = $$171$lcssa$12;
  while(1) {
   $146 = (($$17188$13) + 1)|0;
   $147 = (((($0)) + 1280|0) + ($$17188$13)|0);
   HEAP8[$147>>0] = 14;
   $148 = (($$06589$13) + 1)|0;
   $149 = HEAP32[$143>>2]|0;
   $150 = ($148|0)<($149|0);
   if ($150) {
    $$06589$13 = $148;$$17188$13 = $146;
   } else {
    $$171$lcssa$13 = $146;
    break;
   }
  }
 } else {
  $$171$lcssa$13 = $$171$lcssa$12;
 }
 $151 = ((($1)) + 56|0);
 $152 = HEAP32[$151>>2]|0;
 $153 = ($152|0)>(0);
 if ($153) {
  $$06589$14 = 0;$$17188$14 = $$171$lcssa$13;
  while(1) {
   $154 = (($$17188$14) + 1)|0;
   $155 = (((($0)) + 1280|0) + ($$17188$14)|0);
   HEAP8[$155>>0] = 15;
   $156 = (($$06589$14) + 1)|0;
   $157 = HEAP32[$151>>2]|0;
   $158 = ($156|0)<($157|0);
   if ($158) {
    $$06589$14 = $156;$$17188$14 = $154;
   } else {
    $$171$lcssa$14 = $154;
    break;
   }
  }
 } else {
  $$171$lcssa$14 = $$171$lcssa$13;
 }
 $159 = ((($1)) + 60|0);
 $160 = HEAP32[$159>>2]|0;
 $161 = ($160|0)>(0);
 if ($161) {
  $$06589$15 = 0;$$17188$15 = $$171$lcssa$14;
  while(1) {
   $162 = (($$17188$15) + 1)|0;
   $163 = (((($0)) + 1280|0) + ($$17188$15)|0);
   HEAP8[$163>>0] = 16;
   $164 = (($$06589$15) + 1)|0;
   $165 = HEAP32[$159>>2]|0;
   $166 = ($164|0)<($165|0);
   if ($166) {
    $$06589$15 = $164;$$17188$15 = $162;
   } else {
    $$171$lcssa$15 = $162;
    break;
   }
  }
 } else {
  $$171$lcssa$15 = $$171$lcssa$14;
 }
 $167 = (((($0)) + 1280|0) + ($$171$lcssa$15)|0);
 HEAP8[$167>>0] = 0;
 $$06784 = 0;$$16685 = 1;$$27283 = 0;
 while(1) {
  $12 = (($$27283) - ($$06784))|0;
  $13 = (((($0)) + 1612|0) + ($$16685<<2)|0);
  HEAP32[$13>>2] = $12;
  $14 = (((($0)) + 1280|0) + ($$27283)|0);
  $15 = HEAP8[$14>>0]|0;
  $16 = $15&255;
  $17 = ($$16685|0)==($16|0);
  if ($17) {
   $$16880 = $$06784;$$379 = $$27283;
   while(1) {
    $18 = (($$16880) + 1)|0;
    $19 = $$16880&65535;
    $20 = (($$379) + 1)|0;
    $21 = (((($0)) + 512|0) + ($$379<<1)|0);
    HEAP16[$21>>1] = $19;
    $22 = (((($0)) + 1280|0) + ($20)|0);
    $23 = HEAP8[$22>>0]|0;
    $24 = $23&255;
    $25 = ($$16685|0)==($24|0);
    if ($25) {
     $$16880 = $18;$$379 = $20;
    } else {
     break;
    }
   }
   $26 = 1 << $$16685;
   $27 = ($$16880>>>0)<($26>>>0);
   if ($27) {
    $$269 = $18;$$4 = $20;
   } else {
    $$0 = 0;
    label = 17;
    break;
   }
  } else {
   $$269 = $$06784;$$4 = $$27283;
  }
  $28 = (16 - ($$16685))|0;
  $29 = $$269 << $28;
  $30 = (((($0)) + 1540|0) + ($$16685<<2)|0);
  HEAP32[$30>>2] = $29;
  $31 = $$269 << 1;
  $32 = (($$16685) + 1)|0;
  $33 = ($32>>>0)<(17);
  if ($33) {
   $$06784 = $31;$$16685 = $32;$$27283 = $$4;
  } else {
   break;
  }
 }
 if ((label|0) == 17) {
  return ($$0|0);
 }
 $34 = (((($0)) + 1540|0) + ($32<<2)|0);
 HEAP32[$34>>2] = -1;
 _memset(($0|0),-1,512)|0;
 $35 = ($$4|0)>(0);
 if (!($35)) {
  $$0 = 1;
  return ($$0|0);
 }
 $$177 = 0;
 while(1) {
  $36 = (((($0)) + 1280|0) + ($$177)|0);
  $37 = HEAP8[$36>>0]|0;
  $38 = ($37&255)<(10);
  do {
   if ($38) {
    $39 = $37&255;
    $40 = (9 - ($39))|0;
    $41 = 1 << $40;
    $42 = ($40|0)==(31);
    if ($42) {
     break;
    }
    $43 = (((($0)) + 512|0) + ($$177<<1)|0);
    $44 = HEAP16[$43>>1]|0;
    $45 = $44&65535;
    $46 = $45 << $40;
    $47 = $$177&255;
    $scevgep = (($0) + ($46)|0);
    $48 = ($41|0)>(1);
    $smax = $48 ? $41 : 1;
    _memset(($scevgep|0),($47|0),($smax|0))|0;
   }
  } while(0);
  $49 = (($$177) + 1)|0;
  $exitcond = ($49|0)==($$4|0);
  if ($exitcond) {
   $$0 = 1;
   break;
  } else {
   $$177 = $49;
  }
 }
 return ($$0|0);
}
function _stbi__stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_fread($1,1,$2,$0)|0);
 return ($3|0);
}
function _stbi__stdio_skip($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (_fseek($0,$1,1)|0);
 return;
}
function _stbi__stdio_eof($0) {
 $0 = $0|0;
 var $1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_feof($0)|0);
 return ($1|0);
}
function _game_new() {
 var $0 = 0, $1 = 0, $10 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_g_once_init_enter(144140)|0);
 $1 = ($0|0)==(0);
 if (!($1)) {
  $2 = (_object_get_type()|0);
  $3 = (_g_type_register_static($2,140444,120352,0)|0);
  _g_once_init_leave(144140,$3);
 }
 $4 = HEAP32[36035]|0;
 $5 = (_object_construct($4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $10 = 0;
 } else {
  $7 = (_g_object_ref($5)|0);
  $10 = $5;
 }
 $8 = HEAP32[36034]|0;
 $9 = ($8|0)==(0|0);
 if ($9) {
  HEAP32[36034] = $10;
  return ($5|0);
 }
 _g_object_unref($8);
 HEAP32[36034] = 0;
 HEAP32[36034] = $10;
 return ($5|0);
}
function _game_Run($0) {
 $0 = $0|0;
 var $$0 = 0, $$pre$phi533Z2D = 0, $$pre$phi534Z2D = 0, $$pre$phiZ2D = 0, $$sroa$10$0$$sroa_idx115 = 0, $$sroa$100$0$$sroa_idx295 = 0, $$sroa$101$0$$sroa_idx297 = 0, $$sroa$102$0$$sroa_idx299 = 0, $$sroa$103$0$$sroa_idx301 = 0, $$sroa$104$0$$sroa_idx303 = 0, $$sroa$105$0$$sroa_idx305 = 0, $$sroa$106$0$$sroa_idx307 = 0, $$sroa$107$0$$sroa_idx309 = 0, $$sroa$108$0$$sroa_idx311 = 0, $$sroa$109$0$$sroa_idx313 = 0, $$sroa$11$0$$sroa_idx117 = 0, $$sroa$110$0$$sroa_idx315 = 0, $$sroa$111$0$$sroa_idx317 = 0, $$sroa$112$0$$sroa_idx319 = 0, $$sroa$113$0$$sroa_idx321 = 0;
 var $$sroa$114$0$$sroa_idx323 = 0, $$sroa$115$0$$sroa_idx325 = 0, $$sroa$116$0$$sroa_idx327 = 0, $$sroa$117$0$$sroa_idx329 = 0, $$sroa$118$0$$sroa_idx331 = 0, $$sroa$119$0$$sroa_idx333 = 0, $$sroa$12$0$$sroa_idx119 = 0, $$sroa$120$0$$sroa_idx335 = 0, $$sroa$121$0$$sroa_idx337 = 0, $$sroa$122$0$$sroa_idx339 = 0, $$sroa$123$0$$sroa_idx341 = 0, $$sroa$124$0$$sroa_idx343 = 0, $$sroa$125$0$$sroa_idx345 = 0, $$sroa$126$0$$sroa_idx347 = 0, $$sroa$127$0$$sroa_idx349 = 0, $$sroa$128$0$$sroa_idx351 = 0, $$sroa$129$0$$sroa_idx353 = 0, $$sroa$13$0$$sroa_idx121 = 0, $$sroa$130$0$$sroa_idx355 = 0, $$sroa$131$0$$sroa_idx357 = 0;
 var $$sroa$132$0$$sroa_idx359 = 0, $$sroa$133$0$$sroa_idx361 = 0, $$sroa$134$0$$sroa_idx363 = 0, $$sroa$135$0$$sroa_idx365 = 0, $$sroa$136$0$$sroa_idx367 = 0, $$sroa$137$0$$sroa_idx369 = 0, $$sroa$138$0$$sroa_idx371 = 0, $$sroa$139$0$$sroa_idx373 = 0, $$sroa$14$0$$sroa_idx123 = 0, $$sroa$140$0$$sroa_idx375 = 0, $$sroa$141$0$$sroa_idx377 = 0, $$sroa$142$0$$sroa_idx379 = 0, $$sroa$143$0$$sroa_idx381 = 0, $$sroa$144$0$$sroa_idx383 = 0, $$sroa$145$0$$sroa_idx385 = 0, $$sroa$146$0$$sroa_idx387 = 0, $$sroa$147$0$$sroa_idx389 = 0, $$sroa$148$0$$sroa_idx391 = 0, $$sroa$149$0$$sroa_idx393 = 0, $$sroa$15$0$$sroa_idx125 = 0;
 var $$sroa$150$0$$sroa_idx395 = 0, $$sroa$151$0$$sroa_idx397 = 0, $$sroa$152$0$$sroa_idx399 = 0, $$sroa$153$0$$sroa_idx401 = 0, $$sroa$154$0$$sroa_idx403 = 0, $$sroa$155$0$$sroa_idx405 = 0, $$sroa$156$0$$sroa_idx407 = 0, $$sroa$157$0$$sroa_idx409 = 0, $$sroa$158$0$$sroa_idx411 = 0, $$sroa$159$0$$sroa_idx413 = 0, $$sroa$16$0$$sroa_idx127 = 0, $$sroa$160$0$$sroa_idx415 = 0, $$sroa$161$0$$sroa_idx417 = 0, $$sroa$162$0$$sroa_idx419 = 0, $$sroa$163$0$$sroa_idx421 = 0, $$sroa$164$0$$sroa_idx423 = 0, $$sroa$165$0$$sroa_idx425 = 0, $$sroa$166$0$$sroa_idx427 = 0, $$sroa$167$0$$sroa_idx429 = 0, $$sroa$168$0$$sroa_idx431 = 0;
 var $$sroa$169$0$$sroa_idx433 = 0, $$sroa$17$0$$sroa_idx129 = 0, $$sroa$170$0$$sroa_idx435 = 0, $$sroa$171$0$$sroa_idx437 = 0, $$sroa$172$0$$sroa_idx439 = 0, $$sroa$173$0$$sroa_idx441 = 0, $$sroa$174$0$$sroa_idx443 = 0, $$sroa$175$0$$sroa_idx445 = 0, $$sroa$176$0$$sroa_idx447 = 0, $$sroa$177$0$$sroa_idx449 = 0, $$sroa$178$0$$sroa_idx451 = 0, $$sroa$179$0$$sroa_idx453 = 0, $$sroa$18$0$$sroa_idx131 = 0, $$sroa$180$0$$sroa_idx455 = 0, $$sroa$181$0$$sroa_idx457 = 0, $$sroa$182$0$$sroa_idx459 = 0, $$sroa$183$0$$sroa_idx461 = 0, $$sroa$19$0$$sroa_idx133 = 0, $$sroa$20$0$$sroa_idx135 = 0, $$sroa$21$0$$sroa_idx137 = 0;
 var $$sroa$22$0$$sroa_idx139 = 0, $$sroa$23$0$$sroa_idx141 = 0, $$sroa$24$0$$sroa_idx143 = 0, $$sroa$25$0$$sroa_idx145 = 0, $$sroa$26$0$$sroa_idx147 = 0, $$sroa$27$0$$sroa_idx149 = 0, $$sroa$28$0$$sroa_idx151 = 0, $$sroa$29$0$$sroa_idx153 = 0, $$sroa$30$0$$sroa_idx155 = 0, $$sroa$31$0$$sroa_idx157 = 0, $$sroa$32$0$$sroa_idx159 = 0, $$sroa$33$0$$sroa_idx161 = 0, $$sroa$34$0$$sroa_idx163 = 0, $$sroa$35$0$$sroa_idx165 = 0, $$sroa$36$0$$sroa_idx167 = 0, $$sroa$37$0$$sroa_idx169 = 0, $$sroa$38$0$$sroa_idx171 = 0, $$sroa$39$0$$sroa_idx173 = 0, $$sroa$40$0$$sroa_idx175 = 0, $$sroa$41$0$$sroa_idx177 = 0;
 var $$sroa$42$0$$sroa_idx179 = 0, $$sroa$43$0$$sroa_idx181 = 0, $$sroa$44$0$$sroa_idx183 = 0, $$sroa$45$0$$sroa_idx185 = 0, $$sroa$46$0$$sroa_idx187 = 0, $$sroa$47$0$$sroa_idx189 = 0, $$sroa$48$0$$sroa_idx191 = 0, $$sroa$49$0$$sroa_idx193 = 0, $$sroa$5$0$$sroa_idx105 = 0, $$sroa$50$0$$sroa_idx195 = 0, $$sroa$51$0$$sroa_idx197 = 0, $$sroa$52$0$$sroa_idx199 = 0, $$sroa$53$0$$sroa_idx201 = 0, $$sroa$54$0$$sroa_idx203 = 0, $$sroa$55$0$$sroa_idx205 = 0, $$sroa$56$0$$sroa_idx207 = 0, $$sroa$57$0$$sroa_idx209 = 0, $$sroa$58$0$$sroa_idx211 = 0, $$sroa$59$0$$sroa_idx213 = 0, $$sroa$6$0$$sroa_idx107 = 0;
 var $$sroa$60$0$$sroa_idx215 = 0, $$sroa$61$0$$sroa_idx217 = 0, $$sroa$62$0$$sroa_idx219 = 0, $$sroa$63$0$$sroa_idx221 = 0, $$sroa$64$0$$sroa_idx223 = 0, $$sroa$65$0$$sroa_idx225 = 0, $$sroa$66$0$$sroa_idx227 = 0, $$sroa$67$0$$sroa_idx229 = 0, $$sroa$68$0$$sroa_idx231 = 0, $$sroa$69$0$$sroa_idx233 = 0, $$sroa$7$0$$sroa_idx109 = 0, $$sroa$70$0$$sroa_idx235 = 0, $$sroa$71$0$$sroa_idx237 = 0, $$sroa$72$0$$sroa_idx239 = 0, $$sroa$73$0$$sroa_idx241 = 0, $$sroa$74$0$$sroa_idx243 = 0, $$sroa$75$0$$sroa_idx245 = 0, $$sroa$76$0$$sroa_idx247 = 0, $$sroa$77$0$$sroa_idx249 = 0, $$sroa$78$0$$sroa_idx251 = 0;
 var $$sroa$79$0$$sroa_idx253 = 0, $$sroa$8$0$$sroa_idx111 = 0, $$sroa$80$0$$sroa_idx255 = 0, $$sroa$81$0$$sroa_idx257 = 0, $$sroa$82$0$$sroa_idx259 = 0, $$sroa$83$0$$sroa_idx261 = 0, $$sroa$84$0$$sroa_idx263 = 0, $$sroa$85$0$$sroa_idx265 = 0, $$sroa$86$0$$sroa_idx267 = 0, $$sroa$87$0$$sroa_idx269 = 0, $$sroa$88$0$$sroa_idx271 = 0, $$sroa$89$0$$sroa_idx273 = 0, $$sroa$9$0$$sroa_idx113 = 0, $$sroa$90$0$$sroa_idx275 = 0, $$sroa$91$0$$sroa_idx277 = 0, $$sroa$92$0$$sroa_idx279 = 0, $$sroa$93$0$$sroa_idx281 = 0, $$sroa$94$0$$sroa_idx283 = 0, $$sroa$95$0$$sroa_idx285 = 0, $$sroa$96$0$$sroa_idx287 = 0;
 var $$sroa$97$0$$sroa_idx289 = 0, $$sroa$98$0$$sroa_idx291 = 0, $$sroa$99$0$$sroa_idx293 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0;
 var $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0;
 var $98 = 0, $vararg_buffer = 0, $vararg_buffer1 = 0, $vararg_buffer3 = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 752|0;
 $vararg_buffer3 = sp + 736|0;
 $vararg_buffer1 = sp + 728|0;
 $vararg_buffer = sp + 720|0;
 $1 = sp;
 _memset(($1|0),0,720)|0;
 HEAP32[$vararg_buffer>>2] = 140217;
 _g_print(140194,$vararg_buffer);
 _g_print(140230,$vararg_buffer1);
 (_glfwInit()|0);
 _glfwWindowHint(3,3);
 _glfwWindowHint(2,0);
 $2 = (_glfwCreateWindow(800,600,(140265|0),(0|0),(0|0))|0);
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($4)) + 16|0);
 HEAP32[$5>>2] = $2;
 $6 = ($2|0)==(0|0);
 if ($6) {
  _g_print(140287,$vararg_buffer3);
  _glfwTerminate();
  $$0 = -1;
  STACKTOP = sp;return ($$0|0);
 }
 _glfwMakeContextCurrent(($2|0));
 $7 = HEAP32[$3>>2]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 (_glfwSetFramebufferSizeCallback(($9|0),(453|0))|0);
 _glEnable(2929);
 $10 = (_shader_new(140316,140331)|0);
 $11 = HEAP32[$3>>2]|0;
 $12 = ((($11)) + 20|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($13|0)==(0|0);
 if ($14) {
  $$pre$phiZ2D = $12;$17 = $11;
 } else {
  _g_object_unref($13);
  $15 = HEAP32[$3>>2]|0;
  $16 = ((($15)) + 20|0);
  HEAP32[$16>>2] = 0;
  $$pre$phiZ2D = $16;$17 = $15;
 }
 HEAP32[$$pre$phiZ2D>>2] = $10;
 HEAPF32[$1>>2] = Math_fround(-0.5);
 $$sroa$5$0$$sroa_idx105 = ((($1)) + 4|0);
 HEAPF32[$$sroa$5$0$$sroa_idx105>>2] = Math_fround(-0.5);
 $$sroa$6$0$$sroa_idx107 = ((($1)) + 8|0);
 HEAPF32[$$sroa$6$0$$sroa_idx107>>2] = Math_fround(-0.5);
 $$sroa$7$0$$sroa_idx109 = ((($1)) + 12|0);
 HEAPF32[$$sroa$7$0$$sroa_idx109>>2] = Math_fround(0.0);
 $$sroa$8$0$$sroa_idx111 = ((($1)) + 16|0);
 HEAPF32[$$sroa$8$0$$sroa_idx111>>2] = Math_fround(0.0);
 $$sroa$9$0$$sroa_idx113 = ((($1)) + 20|0);
 HEAPF32[$$sroa$9$0$$sroa_idx113>>2] = Math_fround(0.5);
 $$sroa$10$0$$sroa_idx115 = ((($1)) + 24|0);
 HEAPF32[$$sroa$10$0$$sroa_idx115>>2] = Math_fround(-0.5);
 $$sroa$11$0$$sroa_idx117 = ((($1)) + 28|0);
 HEAPF32[$$sroa$11$0$$sroa_idx117>>2] = Math_fround(-0.5);
 $$sroa$12$0$$sroa_idx119 = ((($1)) + 32|0);
 HEAPF32[$$sroa$12$0$$sroa_idx119>>2] = Math_fround(1.0);
 $$sroa$13$0$$sroa_idx121 = ((($1)) + 36|0);
 HEAPF32[$$sroa$13$0$$sroa_idx121>>2] = Math_fround(0.0);
 $$sroa$14$0$$sroa_idx123 = ((($1)) + 40|0);
 HEAPF32[$$sroa$14$0$$sroa_idx123>>2] = Math_fround(0.5);
 $$sroa$15$0$$sroa_idx125 = ((($1)) + 44|0);
 HEAPF32[$$sroa$15$0$$sroa_idx125>>2] = Math_fround(0.5);
 $$sroa$16$0$$sroa_idx127 = ((($1)) + 48|0);
 HEAPF32[$$sroa$16$0$$sroa_idx127>>2] = Math_fround(-0.5);
 $$sroa$17$0$$sroa_idx129 = ((($1)) + 52|0);
 HEAPF32[$$sroa$17$0$$sroa_idx129>>2] = Math_fround(1.0);
 $$sroa$18$0$$sroa_idx131 = ((($1)) + 56|0);
 HEAPF32[$$sroa$18$0$$sroa_idx131>>2] = Math_fround(1.0);
 $$sroa$19$0$$sroa_idx133 = ((($1)) + 60|0);
 HEAPF32[$$sroa$19$0$$sroa_idx133>>2] = Math_fround(0.5);
 $$sroa$20$0$$sroa_idx135 = ((($1)) + 64|0);
 HEAPF32[$$sroa$20$0$$sroa_idx135>>2] = Math_fround(0.5);
 $$sroa$21$0$$sroa_idx137 = ((($1)) + 68|0);
 HEAPF32[$$sroa$21$0$$sroa_idx137>>2] = Math_fround(-0.5);
 $$sroa$22$0$$sroa_idx139 = ((($1)) + 72|0);
 HEAPF32[$$sroa$22$0$$sroa_idx139>>2] = Math_fround(1.0);
 $$sroa$23$0$$sroa_idx141 = ((($1)) + 76|0);
 HEAPF32[$$sroa$23$0$$sroa_idx141>>2] = Math_fround(1.0);
 $$sroa$24$0$$sroa_idx143 = ((($1)) + 80|0);
 HEAPF32[$$sroa$24$0$$sroa_idx143>>2] = Math_fround(-0.5);
 $$sroa$25$0$$sroa_idx145 = ((($1)) + 84|0);
 HEAPF32[$$sroa$25$0$$sroa_idx145>>2] = Math_fround(0.5);
 $$sroa$26$0$$sroa_idx147 = ((($1)) + 88|0);
 HEAPF32[$$sroa$26$0$$sroa_idx147>>2] = Math_fround(-0.5);
 $$sroa$27$0$$sroa_idx149 = ((($1)) + 92|0);
 HEAPF32[$$sroa$27$0$$sroa_idx149>>2] = Math_fround(0.0);
 $$sroa$28$0$$sroa_idx151 = ((($1)) + 96|0);
 HEAPF32[$$sroa$28$0$$sroa_idx151>>2] = Math_fround(1.0);
 $$sroa$29$0$$sroa_idx153 = ((($1)) + 100|0);
 HEAPF32[$$sroa$29$0$$sroa_idx153>>2] = Math_fround(-0.5);
 $$sroa$30$0$$sroa_idx155 = ((($1)) + 104|0);
 HEAPF32[$$sroa$30$0$$sroa_idx155>>2] = Math_fround(-0.5);
 $$sroa$31$0$$sroa_idx157 = ((($1)) + 108|0);
 HEAPF32[$$sroa$31$0$$sroa_idx157>>2] = Math_fround(-0.5);
 $$sroa$32$0$$sroa_idx159 = ((($1)) + 112|0);
 HEAPF32[$$sroa$32$0$$sroa_idx159>>2] = Math_fround(0.0);
 $$sroa$33$0$$sroa_idx161 = ((($1)) + 116|0);
 HEAPF32[$$sroa$33$0$$sroa_idx161>>2] = Math_fround(0.0);
 $$sroa$34$0$$sroa_idx163 = ((($1)) + 120|0);
 HEAPF32[$$sroa$34$0$$sroa_idx163>>2] = Math_fround(-0.5);
 $$sroa$35$0$$sroa_idx165 = ((($1)) + 124|0);
 HEAPF32[$$sroa$35$0$$sroa_idx165>>2] = Math_fround(-0.5);
 $$sroa$36$0$$sroa_idx167 = ((($1)) + 128|0);
 HEAPF32[$$sroa$36$0$$sroa_idx167>>2] = Math_fround(0.5);
 $$sroa$37$0$$sroa_idx169 = ((($1)) + 132|0);
 HEAPF32[$$sroa$37$0$$sroa_idx169>>2] = Math_fround(0.0);
 $$sroa$38$0$$sroa_idx171 = ((($1)) + 136|0);
 HEAPF32[$$sroa$38$0$$sroa_idx171>>2] = Math_fround(0.0);
 $$sroa$39$0$$sroa_idx173 = ((($1)) + 140|0);
 HEAPF32[$$sroa$39$0$$sroa_idx173>>2] = Math_fround(0.5);
 $$sroa$40$0$$sroa_idx175 = ((($1)) + 144|0);
 HEAPF32[$$sroa$40$0$$sroa_idx175>>2] = Math_fround(-0.5);
 $$sroa$41$0$$sroa_idx177 = ((($1)) + 148|0);
 HEAPF32[$$sroa$41$0$$sroa_idx177>>2] = Math_fround(0.5);
 $$sroa$42$0$$sroa_idx179 = ((($1)) + 152|0);
 HEAPF32[$$sroa$42$0$$sroa_idx179>>2] = Math_fround(1.0);
 $$sroa$43$0$$sroa_idx181 = ((($1)) + 156|0);
 HEAPF32[$$sroa$43$0$$sroa_idx181>>2] = Math_fround(0.0);
 $$sroa$44$0$$sroa_idx183 = ((($1)) + 160|0);
 HEAPF32[$$sroa$44$0$$sroa_idx183>>2] = Math_fround(0.5);
 $$sroa$45$0$$sroa_idx185 = ((($1)) + 164|0);
 HEAPF32[$$sroa$45$0$$sroa_idx185>>2] = Math_fround(0.5);
 $$sroa$46$0$$sroa_idx187 = ((($1)) + 168|0);
 HEAPF32[$$sroa$46$0$$sroa_idx187>>2] = Math_fround(0.5);
 $$sroa$47$0$$sroa_idx189 = ((($1)) + 172|0);
 HEAPF32[$$sroa$47$0$$sroa_idx189>>2] = Math_fround(1.0);
 $$sroa$48$0$$sroa_idx191 = ((($1)) + 176|0);
 HEAPF32[$$sroa$48$0$$sroa_idx191>>2] = Math_fround(1.0);
 $$sroa$49$0$$sroa_idx193 = ((($1)) + 180|0);
 HEAPF32[$$sroa$49$0$$sroa_idx193>>2] = Math_fround(0.5);
 $$sroa$50$0$$sroa_idx195 = ((($1)) + 184|0);
 HEAPF32[$$sroa$50$0$$sroa_idx195>>2] = Math_fround(0.5);
 $$sroa$51$0$$sroa_idx197 = ((($1)) + 188|0);
 HEAPF32[$$sroa$51$0$$sroa_idx197>>2] = Math_fround(0.5);
 $$sroa$52$0$$sroa_idx199 = ((($1)) + 192|0);
 HEAPF32[$$sroa$52$0$$sroa_idx199>>2] = Math_fround(1.0);
 $$sroa$53$0$$sroa_idx201 = ((($1)) + 196|0);
 HEAPF32[$$sroa$53$0$$sroa_idx201>>2] = Math_fround(1.0);
 $$sroa$54$0$$sroa_idx203 = ((($1)) + 200|0);
 HEAPF32[$$sroa$54$0$$sroa_idx203>>2] = Math_fround(-0.5);
 $$sroa$55$0$$sroa_idx205 = ((($1)) + 204|0);
 HEAPF32[$$sroa$55$0$$sroa_idx205>>2] = Math_fround(0.5);
 $$sroa$56$0$$sroa_idx207 = ((($1)) + 208|0);
 HEAPF32[$$sroa$56$0$$sroa_idx207>>2] = Math_fround(0.5);
 $$sroa$57$0$$sroa_idx209 = ((($1)) + 212|0);
 HEAPF32[$$sroa$57$0$$sroa_idx209>>2] = Math_fround(0.0);
 $$sroa$58$0$$sroa_idx211 = ((($1)) + 216|0);
 HEAPF32[$$sroa$58$0$$sroa_idx211>>2] = Math_fround(1.0);
 $$sroa$59$0$$sroa_idx213 = ((($1)) + 220|0);
 HEAPF32[$$sroa$59$0$$sroa_idx213>>2] = Math_fround(-0.5);
 $$sroa$60$0$$sroa_idx215 = ((($1)) + 224|0);
 HEAPF32[$$sroa$60$0$$sroa_idx215>>2] = Math_fround(-0.5);
 $$sroa$61$0$$sroa_idx217 = ((($1)) + 228|0);
 HEAPF32[$$sroa$61$0$$sroa_idx217>>2] = Math_fround(0.5);
 $$sroa$62$0$$sroa_idx219 = ((($1)) + 232|0);
 HEAPF32[$$sroa$62$0$$sroa_idx219>>2] = Math_fround(0.0);
 $$sroa$63$0$$sroa_idx221 = ((($1)) + 236|0);
 HEAPF32[$$sroa$63$0$$sroa_idx221>>2] = Math_fround(0.0);
 $$sroa$64$0$$sroa_idx223 = ((($1)) + 240|0);
 HEAPF32[$$sroa$64$0$$sroa_idx223>>2] = Math_fround(-0.5);
 $$sroa$65$0$$sroa_idx225 = ((($1)) + 244|0);
 HEAPF32[$$sroa$65$0$$sroa_idx225>>2] = Math_fround(0.5);
 $$sroa$66$0$$sroa_idx227 = ((($1)) + 248|0);
 HEAPF32[$$sroa$66$0$$sroa_idx227>>2] = Math_fround(0.5);
 $$sroa$67$0$$sroa_idx229 = ((($1)) + 252|0);
 HEAPF32[$$sroa$67$0$$sroa_idx229>>2] = Math_fround(1.0);
 $$sroa$68$0$$sroa_idx231 = ((($1)) + 256|0);
 HEAPF32[$$sroa$68$0$$sroa_idx231>>2] = Math_fround(0.0);
 $$sroa$69$0$$sroa_idx233 = ((($1)) + 260|0);
 HEAPF32[$$sroa$69$0$$sroa_idx233>>2] = Math_fround(-0.5);
 $$sroa$70$0$$sroa_idx235 = ((($1)) + 264|0);
 HEAPF32[$$sroa$70$0$$sroa_idx235>>2] = Math_fround(0.5);
 $$sroa$71$0$$sroa_idx237 = ((($1)) + 268|0);
 HEAPF32[$$sroa$71$0$$sroa_idx237>>2] = Math_fround(-0.5);
 $$sroa$72$0$$sroa_idx239 = ((($1)) + 272|0);
 HEAPF32[$$sroa$72$0$$sroa_idx239>>2] = Math_fround(1.0);
 $$sroa$73$0$$sroa_idx241 = ((($1)) + 276|0);
 HEAPF32[$$sroa$73$0$$sroa_idx241>>2] = Math_fround(1.0);
 $$sroa$74$0$$sroa_idx243 = ((($1)) + 280|0);
 HEAPF32[$$sroa$74$0$$sroa_idx243>>2] = Math_fround(-0.5);
 $$sroa$75$0$$sroa_idx245 = ((($1)) + 284|0);
 HEAPF32[$$sroa$75$0$$sroa_idx245>>2] = Math_fround(-0.5);
 $$sroa$76$0$$sroa_idx247 = ((($1)) + 288|0);
 HEAPF32[$$sroa$76$0$$sroa_idx247>>2] = Math_fround(-0.5);
 $$sroa$77$0$$sroa_idx249 = ((($1)) + 292|0);
 HEAPF32[$$sroa$77$0$$sroa_idx249>>2] = Math_fround(0.0);
 $$sroa$78$0$$sroa_idx251 = ((($1)) + 296|0);
 HEAPF32[$$sroa$78$0$$sroa_idx251>>2] = Math_fround(1.0);
 $$sroa$79$0$$sroa_idx253 = ((($1)) + 300|0);
 HEAPF32[$$sroa$79$0$$sroa_idx253>>2] = Math_fround(-0.5);
 $$sroa$80$0$$sroa_idx255 = ((($1)) + 304|0);
 HEAPF32[$$sroa$80$0$$sroa_idx255>>2] = Math_fround(-0.5);
 $$sroa$81$0$$sroa_idx257 = ((($1)) + 308|0);
 HEAPF32[$$sroa$81$0$$sroa_idx257>>2] = Math_fround(-0.5);
 $$sroa$82$0$$sroa_idx259 = ((($1)) + 312|0);
 HEAPF32[$$sroa$82$0$$sroa_idx259>>2] = Math_fround(0.0);
 $$sroa$83$0$$sroa_idx261 = ((($1)) + 316|0);
 HEAPF32[$$sroa$83$0$$sroa_idx261>>2] = Math_fround(1.0);
 $$sroa$84$0$$sroa_idx263 = ((($1)) + 320|0);
 HEAPF32[$$sroa$84$0$$sroa_idx263>>2] = Math_fround(-0.5);
 $$sroa$85$0$$sroa_idx265 = ((($1)) + 324|0);
 HEAPF32[$$sroa$85$0$$sroa_idx265>>2] = Math_fround(-0.5);
 $$sroa$86$0$$sroa_idx267 = ((($1)) + 328|0);
 HEAPF32[$$sroa$86$0$$sroa_idx267>>2] = Math_fround(0.5);
 $$sroa$87$0$$sroa_idx269 = ((($1)) + 332|0);
 HEAPF32[$$sroa$87$0$$sroa_idx269>>2] = Math_fround(0.0);
 $$sroa$88$0$$sroa_idx271 = ((($1)) + 336|0);
 HEAPF32[$$sroa$88$0$$sroa_idx271>>2] = Math_fround(0.0);
 $$sroa$89$0$$sroa_idx273 = ((($1)) + 340|0);
 HEAPF32[$$sroa$89$0$$sroa_idx273>>2] = Math_fround(-0.5);
 $$sroa$90$0$$sroa_idx275 = ((($1)) + 344|0);
 HEAPF32[$$sroa$90$0$$sroa_idx275>>2] = Math_fround(0.5);
 $$sroa$91$0$$sroa_idx277 = ((($1)) + 348|0);
 HEAPF32[$$sroa$91$0$$sroa_idx277>>2] = Math_fround(0.5);
 $$sroa$92$0$$sroa_idx279 = ((($1)) + 352|0);
 HEAPF32[$$sroa$92$0$$sroa_idx279>>2] = Math_fround(1.0);
 $$sroa$93$0$$sroa_idx281 = ((($1)) + 356|0);
 HEAPF32[$$sroa$93$0$$sroa_idx281>>2] = Math_fround(0.0);
 $$sroa$94$0$$sroa_idx283 = ((($1)) + 360|0);
 HEAPF32[$$sroa$94$0$$sroa_idx283>>2] = Math_fround(0.5);
 $$sroa$95$0$$sroa_idx285 = ((($1)) + 364|0);
 HEAPF32[$$sroa$95$0$$sroa_idx285>>2] = Math_fround(0.5);
 $$sroa$96$0$$sroa_idx287 = ((($1)) + 368|0);
 HEAPF32[$$sroa$96$0$$sroa_idx287>>2] = Math_fround(0.5);
 $$sroa$97$0$$sroa_idx289 = ((($1)) + 372|0);
 HEAPF32[$$sroa$97$0$$sroa_idx289>>2] = Math_fround(1.0);
 $$sroa$98$0$$sroa_idx291 = ((($1)) + 376|0);
 HEAPF32[$$sroa$98$0$$sroa_idx291>>2] = Math_fround(0.0);
 $$sroa$99$0$$sroa_idx293 = ((($1)) + 380|0);
 HEAPF32[$$sroa$99$0$$sroa_idx293>>2] = Math_fround(0.5);
 $$sroa$100$0$$sroa_idx295 = ((($1)) + 384|0);
 HEAPF32[$$sroa$100$0$$sroa_idx295>>2] = Math_fround(0.5);
 $$sroa$101$0$$sroa_idx297 = ((($1)) + 388|0);
 HEAPF32[$$sroa$101$0$$sroa_idx297>>2] = Math_fround(-0.5);
 $$sroa$102$0$$sroa_idx299 = ((($1)) + 392|0);
 HEAPF32[$$sroa$102$0$$sroa_idx299>>2] = Math_fround(1.0);
 $$sroa$103$0$$sroa_idx301 = ((($1)) + 396|0);
 HEAPF32[$$sroa$103$0$$sroa_idx301>>2] = Math_fround(1.0);
 $$sroa$104$0$$sroa_idx303 = ((($1)) + 400|0);
 HEAPF32[$$sroa$104$0$$sroa_idx303>>2] = Math_fround(0.5);
 $$sroa$105$0$$sroa_idx305 = ((($1)) + 404|0);
 HEAPF32[$$sroa$105$0$$sroa_idx305>>2] = Math_fround(-0.5);
 $$sroa$106$0$$sroa_idx307 = ((($1)) + 408|0);
 HEAPF32[$$sroa$106$0$$sroa_idx307>>2] = Math_fround(-0.5);
 $$sroa$107$0$$sroa_idx309 = ((($1)) + 412|0);
 HEAPF32[$$sroa$107$0$$sroa_idx309>>2] = Math_fround(0.0);
 $$sroa$108$0$$sroa_idx311 = ((($1)) + 416|0);
 HEAPF32[$$sroa$108$0$$sroa_idx311>>2] = Math_fround(1.0);
 $$sroa$109$0$$sroa_idx313 = ((($1)) + 420|0);
 HEAPF32[$$sroa$109$0$$sroa_idx313>>2] = Math_fround(0.5);
 $$sroa$110$0$$sroa_idx315 = ((($1)) + 424|0);
 HEAPF32[$$sroa$110$0$$sroa_idx315>>2] = Math_fround(-0.5);
 $$sroa$111$0$$sroa_idx317 = ((($1)) + 428|0);
 HEAPF32[$$sroa$111$0$$sroa_idx317>>2] = Math_fround(-0.5);
 $$sroa$112$0$$sroa_idx319 = ((($1)) + 432|0);
 HEAPF32[$$sroa$112$0$$sroa_idx319>>2] = Math_fround(0.0);
 $$sroa$113$0$$sroa_idx321 = ((($1)) + 436|0);
 HEAPF32[$$sroa$113$0$$sroa_idx321>>2] = Math_fround(1.0);
 $$sroa$114$0$$sroa_idx323 = ((($1)) + 440|0);
 HEAPF32[$$sroa$114$0$$sroa_idx323>>2] = Math_fround(0.5);
 $$sroa$115$0$$sroa_idx325 = ((($1)) + 444|0);
 HEAPF32[$$sroa$115$0$$sroa_idx325>>2] = Math_fround(-0.5);
 $$sroa$116$0$$sroa_idx327 = ((($1)) + 448|0);
 HEAPF32[$$sroa$116$0$$sroa_idx327>>2] = Math_fround(0.5);
 $$sroa$117$0$$sroa_idx329 = ((($1)) + 452|0);
 HEAPF32[$$sroa$117$0$$sroa_idx329>>2] = Math_fround(0.0);
 $$sroa$118$0$$sroa_idx331 = ((($1)) + 456|0);
 HEAPF32[$$sroa$118$0$$sroa_idx331>>2] = Math_fround(0.0);
 $$sroa$119$0$$sroa_idx333 = ((($1)) + 460|0);
 HEAPF32[$$sroa$119$0$$sroa_idx333>>2] = Math_fround(0.5);
 $$sroa$120$0$$sroa_idx335 = ((($1)) + 464|0);
 HEAPF32[$$sroa$120$0$$sroa_idx335>>2] = Math_fround(0.5);
 $$sroa$121$0$$sroa_idx337 = ((($1)) + 468|0);
 HEAPF32[$$sroa$121$0$$sroa_idx337>>2] = Math_fround(0.5);
 $$sroa$122$0$$sroa_idx339 = ((($1)) + 472|0);
 HEAPF32[$$sroa$122$0$$sroa_idx339>>2] = Math_fround(1.0);
 $$sroa$123$0$$sroa_idx341 = ((($1)) + 476|0);
 HEAPF32[$$sroa$123$0$$sroa_idx341>>2] = Math_fround(0.0);
 $$sroa$124$0$$sroa_idx343 = ((($1)) + 480|0);
 HEAPF32[$$sroa$124$0$$sroa_idx343>>2] = Math_fround(-0.5);
 $$sroa$125$0$$sroa_idx345 = ((($1)) + 484|0);
 HEAPF32[$$sroa$125$0$$sroa_idx345>>2] = Math_fround(-0.5);
 $$sroa$126$0$$sroa_idx347 = ((($1)) + 488|0);
 HEAPF32[$$sroa$126$0$$sroa_idx347>>2] = Math_fround(-0.5);
 $$sroa$127$0$$sroa_idx349 = ((($1)) + 492|0);
 HEAPF32[$$sroa$127$0$$sroa_idx349>>2] = Math_fround(0.0);
 $$sroa$128$0$$sroa_idx351 = ((($1)) + 496|0);
 HEAPF32[$$sroa$128$0$$sroa_idx351>>2] = Math_fround(1.0);
 $$sroa$129$0$$sroa_idx353 = ((($1)) + 500|0);
 HEAPF32[$$sroa$129$0$$sroa_idx353>>2] = Math_fround(0.5);
 $$sroa$130$0$$sroa_idx355 = ((($1)) + 504|0);
 HEAPF32[$$sroa$130$0$$sroa_idx355>>2] = Math_fround(-0.5);
 $$sroa$131$0$$sroa_idx357 = ((($1)) + 508|0);
 HEAPF32[$$sroa$131$0$$sroa_idx357>>2] = Math_fround(-0.5);
 $$sroa$132$0$$sroa_idx359 = ((($1)) + 512|0);
 HEAPF32[$$sroa$132$0$$sroa_idx359>>2] = Math_fround(1.0);
 $$sroa$133$0$$sroa_idx361 = ((($1)) + 516|0);
 HEAPF32[$$sroa$133$0$$sroa_idx361>>2] = Math_fround(1.0);
 $$sroa$134$0$$sroa_idx363 = ((($1)) + 520|0);
 HEAPF32[$$sroa$134$0$$sroa_idx363>>2] = Math_fround(0.5);
 $$sroa$135$0$$sroa_idx365 = ((($1)) + 524|0);
 HEAPF32[$$sroa$135$0$$sroa_idx365>>2] = Math_fround(-0.5);
 $$sroa$136$0$$sroa_idx367 = ((($1)) + 528|0);
 HEAPF32[$$sroa$136$0$$sroa_idx367>>2] = Math_fround(0.5);
 $$sroa$137$0$$sroa_idx369 = ((($1)) + 532|0);
 HEAPF32[$$sroa$137$0$$sroa_idx369>>2] = Math_fround(1.0);
 $$sroa$138$0$$sroa_idx371 = ((($1)) + 536|0);
 HEAPF32[$$sroa$138$0$$sroa_idx371>>2] = Math_fround(0.0);
 $$sroa$139$0$$sroa_idx373 = ((($1)) + 540|0);
 HEAPF32[$$sroa$139$0$$sroa_idx373>>2] = Math_fround(0.5);
 $$sroa$140$0$$sroa_idx375 = ((($1)) + 544|0);
 HEAPF32[$$sroa$140$0$$sroa_idx375>>2] = Math_fround(-0.5);
 $$sroa$141$0$$sroa_idx377 = ((($1)) + 548|0);
 HEAPF32[$$sroa$141$0$$sroa_idx377>>2] = Math_fround(0.5);
 $$sroa$142$0$$sroa_idx379 = ((($1)) + 552|0);
 HEAPF32[$$sroa$142$0$$sroa_idx379>>2] = Math_fround(1.0);
 $$sroa$143$0$$sroa_idx381 = ((($1)) + 556|0);
 HEAPF32[$$sroa$143$0$$sroa_idx381>>2] = Math_fround(0.0);
 $$sroa$144$0$$sroa_idx383 = ((($1)) + 560|0);
 HEAPF32[$$sroa$144$0$$sroa_idx383>>2] = Math_fround(-0.5);
 $$sroa$145$0$$sroa_idx385 = ((($1)) + 564|0);
 HEAPF32[$$sroa$145$0$$sroa_idx385>>2] = Math_fround(-0.5);
 $$sroa$146$0$$sroa_idx387 = ((($1)) + 568|0);
 HEAPF32[$$sroa$146$0$$sroa_idx387>>2] = Math_fround(0.5);
 $$sroa$147$0$$sroa_idx389 = ((($1)) + 572|0);
 HEAPF32[$$sroa$147$0$$sroa_idx389>>2] = Math_fround(0.0);
 $$sroa$148$0$$sroa_idx391 = ((($1)) + 576|0);
 HEAPF32[$$sroa$148$0$$sroa_idx391>>2] = Math_fround(0.0);
 $$sroa$149$0$$sroa_idx393 = ((($1)) + 580|0);
 HEAPF32[$$sroa$149$0$$sroa_idx393>>2] = Math_fround(-0.5);
 $$sroa$150$0$$sroa_idx395 = ((($1)) + 584|0);
 HEAPF32[$$sroa$150$0$$sroa_idx395>>2] = Math_fround(-0.5);
 $$sroa$151$0$$sroa_idx397 = ((($1)) + 588|0);
 HEAPF32[$$sroa$151$0$$sroa_idx397>>2] = Math_fround(-0.5);
 $$sroa$152$0$$sroa_idx399 = ((($1)) + 592|0);
 HEAPF32[$$sroa$152$0$$sroa_idx399>>2] = Math_fround(0.0);
 $$sroa$153$0$$sroa_idx401 = ((($1)) + 596|0);
 HEAPF32[$$sroa$153$0$$sroa_idx401>>2] = Math_fround(1.0);
 $$sroa$154$0$$sroa_idx403 = ((($1)) + 600|0);
 HEAPF32[$$sroa$154$0$$sroa_idx403>>2] = Math_fround(-0.5);
 $$sroa$155$0$$sroa_idx405 = ((($1)) + 604|0);
 HEAPF32[$$sroa$155$0$$sroa_idx405>>2] = Math_fround(0.5);
 $$sroa$156$0$$sroa_idx407 = ((($1)) + 608|0);
 HEAPF32[$$sroa$156$0$$sroa_idx407>>2] = Math_fround(-0.5);
 $$sroa$157$0$$sroa_idx409 = ((($1)) + 612|0);
 HEAPF32[$$sroa$157$0$$sroa_idx409>>2] = Math_fround(0.0);
 $$sroa$158$0$$sroa_idx411 = ((($1)) + 616|0);
 HEAPF32[$$sroa$158$0$$sroa_idx411>>2] = Math_fround(1.0);
 $$sroa$159$0$$sroa_idx413 = ((($1)) + 620|0);
 HEAPF32[$$sroa$159$0$$sroa_idx413>>2] = Math_fround(0.5);
 $$sroa$160$0$$sroa_idx415 = ((($1)) + 624|0);
 HEAPF32[$$sroa$160$0$$sroa_idx415>>2] = Math_fround(0.5);
 $$sroa$161$0$$sroa_idx417 = ((($1)) + 628|0);
 HEAPF32[$$sroa$161$0$$sroa_idx417>>2] = Math_fround(-0.5);
 $$sroa$162$0$$sroa_idx419 = ((($1)) + 632|0);
 HEAPF32[$$sroa$162$0$$sroa_idx419>>2] = Math_fround(1.0);
 $$sroa$163$0$$sroa_idx421 = ((($1)) + 636|0);
 HEAPF32[$$sroa$163$0$$sroa_idx421>>2] = Math_fround(1.0);
 $$sroa$164$0$$sroa_idx423 = ((($1)) + 640|0);
 HEAPF32[$$sroa$164$0$$sroa_idx423>>2] = Math_fround(0.5);
 $$sroa$165$0$$sroa_idx425 = ((($1)) + 644|0);
 HEAPF32[$$sroa$165$0$$sroa_idx425>>2] = Math_fround(0.5);
 $$sroa$166$0$$sroa_idx427 = ((($1)) + 648|0);
 HEAPF32[$$sroa$166$0$$sroa_idx427>>2] = Math_fround(0.5);
 $$sroa$167$0$$sroa_idx429 = ((($1)) + 652|0);
 HEAPF32[$$sroa$167$0$$sroa_idx429>>2] = Math_fround(1.0);
 $$sroa$168$0$$sroa_idx431 = ((($1)) + 656|0);
 HEAPF32[$$sroa$168$0$$sroa_idx431>>2] = Math_fround(0.0);
 $$sroa$169$0$$sroa_idx433 = ((($1)) + 660|0);
 HEAPF32[$$sroa$169$0$$sroa_idx433>>2] = Math_fround(0.5);
 $$sroa$170$0$$sroa_idx435 = ((($1)) + 664|0);
 HEAPF32[$$sroa$170$0$$sroa_idx435>>2] = Math_fround(0.5);
 $$sroa$171$0$$sroa_idx437 = ((($1)) + 668|0);
 HEAPF32[$$sroa$171$0$$sroa_idx437>>2] = Math_fround(0.5);
 $$sroa$172$0$$sroa_idx439 = ((($1)) + 672|0);
 HEAPF32[$$sroa$172$0$$sroa_idx439>>2] = Math_fround(1.0);
 $$sroa$173$0$$sroa_idx441 = ((($1)) + 676|0);
 HEAPF32[$$sroa$173$0$$sroa_idx441>>2] = Math_fround(0.0);
 $$sroa$174$0$$sroa_idx443 = ((($1)) + 680|0);
 HEAPF32[$$sroa$174$0$$sroa_idx443>>2] = Math_fround(-0.5);
 $$sroa$175$0$$sroa_idx445 = ((($1)) + 684|0);
 HEAPF32[$$sroa$175$0$$sroa_idx445>>2] = Math_fround(0.5);
 $$sroa$176$0$$sroa_idx447 = ((($1)) + 688|0);
 HEAPF32[$$sroa$176$0$$sroa_idx447>>2] = Math_fround(0.5);
 $$sroa$177$0$$sroa_idx449 = ((($1)) + 692|0);
 HEAPF32[$$sroa$177$0$$sroa_idx449>>2] = Math_fround(0.0);
 $$sroa$178$0$$sroa_idx451 = ((($1)) + 696|0);
 HEAPF32[$$sroa$178$0$$sroa_idx451>>2] = Math_fround(0.0);
 $$sroa$179$0$$sroa_idx453 = ((($1)) + 700|0);
 HEAPF32[$$sroa$179$0$$sroa_idx453>>2] = Math_fround(-0.5);
 $$sroa$180$0$$sroa_idx455 = ((($1)) + 704|0);
 HEAPF32[$$sroa$180$0$$sroa_idx455>>2] = Math_fround(0.5);
 $$sroa$181$0$$sroa_idx457 = ((($1)) + 708|0);
 HEAPF32[$$sroa$181$0$$sroa_idx457>>2] = Math_fround(-0.5);
 $$sroa$182$0$$sroa_idx459 = ((($1)) + 712|0);
 HEAPF32[$$sroa$182$0$$sroa_idx459>>2] = Math_fround(0.0);
 $$sroa$183$0$$sroa_idx461 = ((($1)) + 716|0);
 HEAPF32[$$sroa$183$0$$sroa_idx461>>2] = Math_fround(1.0);
 HEAP32[$17>>2] = 0;
 $18 = ((($17)) + 4|0);
 HEAP32[$18>>2] = 0;
 _glGenVertexArrays(1,($18|0));
 $19 = HEAP32[$3>>2]|0;
 _glGenBuffers(1,($19|0));
 $20 = HEAP32[$3>>2]|0;
 $21 = ((($20)) + 4|0);
 $22 = HEAP32[$21>>2]|0;
 _glBindVertexArray(($22|0));
 $23 = HEAP32[$3>>2]|0;
 $24 = HEAP32[$23>>2]|0;
 _glBindBuffer(34962,($24|0));
 _glBufferData(34962,720,($1|0),35044);
 _glVertexAttribPointer(0,3,5126,0,20,(0|0));
 _glEnableVertexAttribArray(0);
 _glVertexAttribPointer(1,2,5126,0,20,((12)|0));
 _glEnableVertexAttribArray(1);
 $25 = HEAP32[$3>>2]|0;
 $26 = ((($25)) + 8|0);
 _glGenTextures(1,($26|0));
 $27 = HEAP32[$3>>2]|0;
 $28 = ((($27)) + 8|0);
 $29 = HEAP32[$28>>2]|0;
 _glBindTexture(3553,($29|0));
 _glTexParameteri(3553,10242,10497);
 _glTexParameteri(3553,10243,10497);
 _glTexParameteri(3553,10241,9729);
 _glTexParameteri(3553,10240,9729);
 $30 = (_image_new(140346)|0);
 $31 = HEAP32[$3>>2]|0;
 $32 = ((($31)) + 24|0);
 $33 = HEAP32[$32>>2]|0;
 $34 = ($33|0)==(0|0);
 if ($34) {
  $$pre$phi533Z2D = $32;
 } else {
  _g_object_unref($33);
  $35 = HEAP32[$3>>2]|0;
  $36 = ((($35)) + 24|0);
  HEAP32[$36>>2] = 0;
  $$pre$phi533Z2D = $36;
 }
 HEAP32[$$pre$phi533Z2D>>2] = $30;
 $37 = (_image_get_Width($30)|0);
 $38 = HEAP32[$3>>2]|0;
 $39 = ((($38)) + 24|0);
 $40 = HEAP32[$39>>2]|0;
 $41 = (_image_get_Height($40)|0);
 $42 = HEAP32[$3>>2]|0;
 $43 = ((($42)) + 24|0);
 $44 = HEAP32[$43>>2]|0;
 $45 = (_image_get_Pixels($44)|0);
 _glTexImage2D(3553,0,6407,($37|0),($41|0),0,6407,5121,($45|0));
 _glGenerateMipmap(3553);
 $46 = HEAP32[$3>>2]|0;
 $47 = ((($46)) + 12|0);
 _glGenTextures(1,($47|0));
 $48 = HEAP32[$3>>2]|0;
 $49 = ((($48)) + 12|0);
 $50 = HEAP32[$49>>2]|0;
 _glBindTexture(3553,($50|0));
 _glTexParameteri(3553,10242,10497);
 _glTexParameteri(3553,10243,10497);
 _glTexParameteri(3553,10241,9729);
 _glTexParameteri(3553,10240,9729);
 $51 = (_image_new(140374)|0);
 $52 = HEAP32[$3>>2]|0;
 $53 = ((($52)) + 24|0);
 $54 = HEAP32[$53>>2]|0;
 $55 = ($54|0)==(0|0);
 if ($55) {
  $$pre$phi534Z2D = $53;
 } else {
  _g_object_unref($54);
  $56 = HEAP32[$3>>2]|0;
  $57 = ((($56)) + 24|0);
  HEAP32[$57>>2] = 0;
  $$pre$phi534Z2D = $57;
 }
 HEAP32[$$pre$phi534Z2D>>2] = $51;
 $58 = (_image_get_Width($51)|0);
 $59 = HEAP32[$3>>2]|0;
 $60 = ((($59)) + 24|0);
 $61 = HEAP32[$60>>2]|0;
 $62 = (_image_get_Height($61)|0);
 $63 = HEAP32[$3>>2]|0;
 $64 = ((($63)) + 24|0);
 $65 = HEAP32[$64>>2]|0;
 $66 = (_image_get_Pixels($65)|0);
 _glTexImage2D(3553,0,6408,($58|0),($62|0),0,6408,5121,($66|0));
 _glGenerateMipmap(3553);
 $67 = HEAP32[$3>>2]|0;
 $68 = ((($67)) + 20|0);
 $69 = HEAP32[$68>>2]|0;
 _shader_Use($69);
 $70 = HEAP32[$3>>2]|0;
 $71 = ((($70)) + 20|0);
 $72 = HEAP32[$71>>2]|0;
 _shader_SetInt($72,140404,0);
 $73 = HEAP32[$3>>2]|0;
 $74 = ((($73)) + 20|0);
 $75 = HEAP32[$74>>2]|0;
 _shader_SetInt($75,140413,1);
 $76 = (_g_malloc0_n(16,4)|0);
 $77 = ((($76)) + 4|0);
 $78 = ((($76)) + 20|0);
 $79 = ((($76)) + 24|0);
 ;HEAP32[$77>>2]=0|0;HEAP32[$77+4>>2]=0|0;HEAP32[$77+8>>2]=0|0;HEAP32[$77+12>>2]=0|0;
 $80 = ((($76)) + 40|0);
 $81 = ((($76)) + 44|0);
 ;HEAP32[$79>>2]=0|0;HEAP32[$79+4>>2]=0|0;HEAP32[$79+8>>2]=0|0;HEAP32[$79+12>>2]=0|0;
 $82 = ((($76)) + 60|0);
 $83 = ((($76)) + 48|0);
 $84 = $83;
 $85 = $84;
 HEAP32[$85>>2] = 0;
 $86 = (($84) + 4)|0;
 $87 = $86;
 HEAP32[$87>>2] = 0;
 HEAP32[$82>>2] = 1065353216;
 $88 = HEAP32[$3>>2]|0;
 $89 = ((($88)) + 28|0);
 $90 = HEAP32[$89>>2]|0;
 _g_free($90);
 $91 = HEAP32[$3>>2]|0;
 $92 = ((($91)) + 28|0);
 HEAP32[$92>>2] = $76;
 $93 = ((($91)) + 32|0);
 HEAP32[$93>>2] = 4;
 $94 = ((($91)) + 36|0);
 HEAP32[$94>>2] = 4;
 dest=$77; stop=dest+60|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 HEAPF32[$76>>2] = Math_fround(1.81066);
 HEAPF32[$78>>2] = Math_fround(2.41421342);
 HEAPF32[$80>>2] = Math_fround(-1.002002);
 HEAPF32[$81>>2] = Math_fround(-1.0);
 $95 = ((($76)) + 56|0);
 HEAPF32[$95>>2] = Math_fround(-0.2002002);
 $96 = ((($91)) + 20|0);
 $97 = HEAP32[$96>>2]|0;
 $98 = HEAP32[$92>>2]|0;
 _shader_SetMat4($97,140422,$98);
 _emscripten_set_main_loop((454|0),-1,0);
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function ____lambda49__glf_wframebuffersizefun($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 _glViewport(0,0,($1|0),($2|0));
 return;
}
function ____lambda50__em_callback_func() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = HEAP32[36034]|0;
 _game_Update($0);
 return;
}
function _game_Update($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $100 = Math_fround(0), $101 = Math_fround(0), $102 = Math_fround(0), $103 = Math_fround(0), $104 = 0, $105 = 0, $106 = 0, $107 = Math_fround(0), $108 = Math_fround(0), $109 = Math_fround(0), $11 = 0, $110 = Math_fround(0), $111 = 0, $112 = Math_fround(0), $113 = Math_fround(0), $114 = 0, $115 = Math_fround(0), $116 = Math_fround(0);
 var $117 = 0, $118 = Math_fround(0), $119 = Math_fround(0), $12 = 0, $120 = Math_fround(0), $121 = Math_fround(0), $122 = Math_fround(0), $123 = Math_fround(0), $124 = 0, $125 = Math_fround(0), $126 = Math_fround(0), $127 = 0, $128 = Math_fround(0), $129 = Math_fround(0), $13 = 0, $130 = 0, $131 = Math_fround(0), $132 = Math_fround(0), $133 = Math_fround(0), $134 = Math_fround(0);
 var $135 = Math_fround(0), $136 = Math_fround(0), $137 = 0, $138 = Math_fround(0), $139 = Math_fround(0), $14 = 0, $140 = 0, $141 = Math_fround(0), $142 = Math_fround(0), $143 = 0, $144 = Math_fround(0), $145 = Math_fround(0), $146 = Math_fround(0), $147 = Math_fround(0), $148 = Math_fround(0), $149 = Math_fround(0), $15 = 0, $150 = Math_fround(0), $151 = Math_fround(0), $152 = Math_fround(0);
 var $153 = Math_fround(0), $154 = Math_fround(0), $155 = Math_fround(0), $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0;
 var $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0;
 var $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = Math_fround(0), $41 = Math_fround(0), $42 = Math_fround(0), $43 = Math_fround(0), $44 = Math_fround(0), $45 = Math_fround(0), $46 = Math_fround(0), $47 = Math_fround(0), $48 = Math_fround(0), $49 = Math_fround(0), $5 = 0, $50 = Math_fround(0), $51 = Math_fround(0), $52 = Math_fround(0), $53 = Math_fround(0);
 var $54 = Math_fround(0), $55 = Math_fround(0), $56 = Math_fround(0), $57 = Math_fround(0), $58 = Math_fround(0), $59 = Math_fround(0), $6 = 0, $60 = Math_fround(0), $61 = Math_fround(0), $62 = Math_fround(0), $63 = Math_fround(0), $64 = Math_fround(0), $65 = Math_fround(0), $66 = Math_fround(0), $67 = Math_fround(0), $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0;
 var $72 = 0, $73 = 0, $74 = Math_fround(0), $75 = Math_fround(0), $76 = Math_fround(0), $77 = Math_fround(0), $78 = Math_fround(0), $79 = Math_fround(0), $8 = 0, $80 = Math_fround(0), $81 = Math_fround(0), $82 = Math_fround(0), $83 = Math_fround(0), $84 = Math_fround(0), $85 = Math_fround(0), $86 = Math_fround(0), $87 = Math_fround(0), $88 = Math_fround(0), $89 = Math_fround(0), $9 = 0;
 var $90 = Math_fround(0), $91 = Math_fround(0), $92 = Math_fround(0), $93 = Math_fround(0), $94 = Math_fround(0), $95 = Math_fround(0), $96 = Math_fround(0), $97 = Math_fround(0), $98 = Math_fround(0), $99 = Math_fround(0), label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = (_glfwGetKey(($4|0),256)|0);
 $6 = ($5|0)==(1);
 if ($6) {
  _glfwSetWindowShouldClose(($4|0),1);
 }
 $7 = HEAP32[$1>>2]|0;
 $8 = ((($7)) + 16|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_glfwWindowShouldClose(($9|0))|0);
 $11 = ($10|0)==(1);
 if ($11) {
  return;
 }
 _glClearColor(0.200000003,0.300000012,0.300000012,1.0);
 _glClear(16640);
 _glActiveTexture(33984);
 $12 = HEAP32[$1>>2]|0;
 $13 = ((($12)) + 8|0);
 $14 = HEAP32[$13>>2]|0;
 _glBindTexture(3553,($14|0));
 _glActiveTexture(33985);
 $15 = HEAP32[$1>>2]|0;
 $16 = ((($15)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 _glBindTexture(3553,($17|0));
 $18 = HEAP32[$1>>2]|0;
 $19 = ((($18)) + 20|0);
 $20 = HEAP32[$19>>2]|0;
 _shader_Use($20);
 $21 = (_g_malloc0_n(16,4)|0);
 $22 = ((($21)) + 4|0);
 $23 = ((($21)) + 20|0);
 $24 = ((($21)) + 24|0);
 $25 = ((($21)) + 16|0);
 HEAP32[$25>>2] = 0;
 HEAP32[$23>>2] = 1065353216;
 $26 = ((($21)) + 40|0);
 $27 = ((($21)) + 44|0);
 ;HEAP32[$24>>2]=0|0;HEAP32[$24+4>>2]=0|0;HEAP32[$24+8>>2]=0|0;HEAP32[$24+12>>2]=0|0;
 HEAP32[$26>>2] = 1065353216;
 $28 = ((($21)) + 60|0);
 ;HEAP32[$27>>2]=0|0;HEAP32[$27+4>>2]=0|0;HEAP32[$27+8>>2]=0|0;HEAP32[$27+12>>2]=0|0;
 HEAP32[$28>>2] = 1065353216;
 $29 = (_g_malloc0_n(16,4)|0);
 $30 = ((($29)) + 4|0);
 HEAP32[$29>>2] = 1065353216;
 $31 = ((($29)) + 20|0);
 $32 = ((($29)) + 24|0);
 ;HEAP32[$30>>2]=0|0;HEAP32[$30+4>>2]=0|0;HEAP32[$30+8>>2]=0|0;HEAP32[$30+12>>2]=0|0;
 HEAP32[$31>>2] = 1065353216;
 $33 = ((($29)) + 40|0);
 $34 = ((($29)) + 44|0);
 ;HEAP32[$32>>2]=0|0;HEAP32[$32+4>>2]=0|0;HEAP32[$32+8>>2]=0|0;HEAP32[$32+12>>2]=0|0;
 HEAP32[$33>>2] = 1065353216;
 $35 = ((($29)) + 60|0);
 ;HEAP32[$34>>2]=0|0;HEAP32[$34+4>>2]=0|0;HEAP32[$34+8>>2]=0|0;HEAP32[$34+12>>2]=0|0;
 HEAP32[$35>>2] = 1065353216;
 $36 = (+_glfwGetTime());
 $37 = (_g_malloc0_n(3,4)|0);
 HEAPF32[$37>>2] = Math_fround(0.5);
 $38 = ((($37)) + 4|0);
 HEAPF32[$38>>2] = Math_fround(1.0);
 $39 = ((($37)) + 8|0);
 HEAPF32[$39>>2] = Math_fround(0.0);
 $40 = Math_fround($36);
 $41 = (Math_fround(_cosf($40)));
 $42 = Math_fround(Math_fround(1.0) - $41);
 $43 = Math_fround($42 * Math_fround(0.44721359));
 $44 = Math_fround($42 * Math_fround(0.89442718));
 $45 = Math_fround($42 * Math_fround(0.0));
 $46 = (Math_fround(_sinf($40)));
 $47 = Math_fround($46 * Math_fround(0.44721359));
 $48 = Math_fround($46 * Math_fround(0.89442718));
 $49 = Math_fround($46 * Math_fround(0.0));
 $50 = Math_fround($43 * Math_fround(0.44721359));
 $51 = Math_fround($43 * Math_fround(0.89442718));
 $52 = Math_fround($43 * Math_fround(0.0));
 $53 = Math_fround($44 * Math_fround(0.44721359));
 $54 = Math_fround($44 * Math_fround(0.89442718));
 $55 = Math_fround($44 * Math_fround(0.0));
 $56 = Math_fround($45 * Math_fround(0.44721359));
 $57 = Math_fround($45 * Math_fround(0.89442718));
 $58 = Math_fround($45 * Math_fround(0.0));
 $59 = Math_fround($41 + $50);
 $60 = Math_fround($53 - $49);
 $61 = Math_fround($48 + $56);
 $62 = Math_fround($49 + $51);
 $63 = Math_fround($41 + $54);
 $64 = Math_fround($57 - $47);
 $65 = Math_fround($52 - $48);
 $66 = Math_fround($47 + $55);
 $67 = Math_fround($41 + $58);
 $68 = ((($21)) + 8|0);
 $69 = ((($21)) + 12|0);
 $70 = ((($21)) + 16|0);
 $71 = ((($21)) + 28|0);
 $72 = ((($21)) + 32|0);
 $73 = ((($21)) + 36|0);
 $74 = Math_fround($62 * Math_fround(0.0));
 $75 = Math_fround($59 + $74);
 $76 = Math_fround($65 * Math_fround(0.0));
 $77 = Math_fround($76 + $75);
 HEAPF32[$21>>2] = $77;
 $78 = Math_fround($59 * Math_fround(0.0));
 $79 = Math_fround($78 + $62);
 $80 = Math_fround($79 + $76);
 HEAPF32[$22>>2] = $80;
 $81 = Math_fround($78 + $74);
 $82 = Math_fround($81 + $65);
 HEAPF32[$68>>2] = $82;
 $83 = Math_fround($81 + $76);
 HEAPF32[$69>>2] = $83;
 $84 = Math_fround($63 * Math_fround(0.0));
 $85 = Math_fround($60 + $84);
 $86 = Math_fround($66 * Math_fround(0.0));
 $87 = Math_fround($86 + $85);
 HEAPF32[$70>>2] = $87;
 $88 = Math_fround($60 * Math_fround(0.0));
 $89 = Math_fround($88 + $63);
 $90 = Math_fround($89 + $86);
 HEAPF32[$23>>2] = $90;
 $91 = Math_fround($88 + $84);
 $92 = Math_fround($91 + $66);
 HEAPF32[$24>>2] = $92;
 $93 = Math_fround($91 + $86);
 HEAPF32[$71>>2] = $93;
 $94 = Math_fround($64 * Math_fround(0.0));
 $95 = Math_fround($61 + $94);
 $96 = Math_fround($67 * Math_fround(0.0));
 $97 = Math_fround($96 + $95);
 HEAPF32[$72>>2] = $97;
 $98 = Math_fround($61 * Math_fround(0.0));
 $99 = Math_fround($98 + $64);
 $100 = Math_fround($99 + $96);
 HEAPF32[$73>>2] = $100;
 $101 = Math_fround($98 + $94);
 $102 = Math_fround($101 + $67);
 HEAPF32[$26>>2] = $102;
 $103 = Math_fround($101 + $96);
 HEAPF32[$27>>2] = $103;
 _g_free($37);
 $104 = (_g_malloc0_n(3,4)|0);
 HEAPF32[$104>>2] = Math_fround(0.0);
 $105 = ((($104)) + 4|0);
 HEAPF32[$105>>2] = Math_fround(0.0);
 $106 = ((($104)) + 8|0);
 HEAPF32[$106>>2] = Math_fround(-3.0);
 $107 = Math_fround(HEAPF32[$29>>2]);
 $108 = Math_fround($107 * Math_fround(0.0));
 $109 = Math_fround(HEAPF32[$30>>2]);
 $110 = Math_fround($109 * Math_fround(0.0));
 $111 = ((($29)) + 8|0);
 $112 = Math_fround(HEAPF32[$111>>2]);
 $113 = Math_fround($112 * Math_fround(0.0));
 $114 = ((($29)) + 12|0);
 $115 = Math_fround(HEAPF32[$114>>2]);
 $116 = Math_fround($115 * Math_fround(0.0));
 $117 = ((($29)) + 16|0);
 $118 = Math_fround(HEAPF32[$117>>2]);
 $119 = Math_fround($118 * Math_fround(0.0));
 $120 = Math_fround(HEAPF32[$31>>2]);
 $121 = Math_fround($120 * Math_fround(0.0));
 $122 = Math_fround(HEAPF32[$32>>2]);
 $123 = Math_fround($122 * Math_fround(0.0));
 $124 = ((($29)) + 28|0);
 $125 = Math_fround(HEAPF32[$124>>2]);
 $126 = Math_fround($125 * Math_fround(0.0));
 $127 = ((($29)) + 32|0);
 $128 = Math_fround(HEAPF32[$127>>2]);
 $129 = Math_fround($128 * Math_fround(3.0));
 $130 = ((($29)) + 36|0);
 $131 = Math_fround(HEAPF32[$130>>2]);
 $132 = Math_fround($131 * Math_fround(3.0));
 $133 = Math_fround(HEAPF32[$33>>2]);
 $134 = Math_fround($133 * Math_fround(3.0));
 $135 = Math_fround(HEAPF32[$34>>2]);
 $136 = Math_fround($135 * Math_fround(3.0));
 $137 = ((($29)) + 48|0);
 $138 = Math_fround(HEAPF32[$137>>2]);
 $139 = Math_fround($108 + $138);
 $140 = ((($29)) + 52|0);
 $141 = Math_fround(HEAPF32[$140>>2]);
 $142 = Math_fround($110 + $141);
 $143 = ((($29)) + 56|0);
 $144 = Math_fround(HEAPF32[$143>>2]);
 $145 = Math_fround($113 + $144);
 $146 = Math_fround(HEAPF32[$35>>2]);
 $147 = Math_fround($116 + $146);
 $148 = Math_fround($119 + $139);
 $149 = Math_fround($121 + $142);
 $150 = Math_fround($123 + $145);
 $151 = Math_fround($126 + $147);
 $152 = Math_fround($148 - $129);
 HEAPF32[$137>>2] = $152;
 $153 = Math_fround($149 - $132);
 HEAPF32[$140>>2] = $153;
 $154 = Math_fround($150 - $134);
 HEAPF32[$143>>2] = $154;
 $155 = Math_fround($151 - $136);
 HEAPF32[$35>>2] = $155;
 _g_free($104);
 $156 = HEAP32[$1>>2]|0;
 $157 = ((($156)) + 20|0);
 $158 = HEAP32[$157>>2]|0;
 _shader_SetMat4($158,140433,$21);
 $159 = HEAP32[$1>>2]|0;
 $160 = ((($159)) + 20|0);
 $161 = HEAP32[$160>>2]|0;
 _shader_SetMat4($161,140439,$29);
 $162 = HEAP32[$1>>2]|0;
 $163 = ((($162)) + 4|0);
 $164 = HEAP32[$163>>2]|0;
 _glBindVertexArray(($164|0));
 $165 = HEAP32[$1>>2]|0;
 $166 = ((($165)) + 4|0);
 $167 = HEAP32[$166>>2]|0;
 _glBindVertexArray(($167|0));
 _glDrawArrays(4,0,36);
 $168 = HEAP32[$1>>2]|0;
 $169 = ((($168)) + 16|0);
 $170 = HEAP32[$169>>2]|0;
 _glfwSwapBuffers(($170|0));
 _glfwPollEvents();
 _g_free($29);
 _g_free($21);
 return;
}
function _game_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36036] = $1;
 _g_type_class_add_private($0,40);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 36|0);
 HEAP32[$3>>2] = 455;
 return;
}
function _game_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144140)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140444,120352,0)|0);
  _g_once_init_leave(144140,$4);
 }
 $5 = HEAP32[36035]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 ;HEAP32[$6>>2]=0|0;HEAP32[$6+4>>2]=0|0;HEAP32[$6+8>>2]=0|0;HEAP32[$6+12>>2]=0|0;
 return;
}
function _game_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144140)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140444,120352,0)|0);
  _g_once_init_leave(144140,$4);
 }
 $5 = HEAP32[36035]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 20|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if ($11) {
  $15 = $8;
 } else {
  _g_object_unref($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 20|0);
  HEAP32[$13>>2] = 0;
  $15 = $12;
 }
 $14 = ((($15)) + 24|0);
 $16 = HEAP32[$14>>2]|0;
 $17 = ($16|0)==(0|0);
 if ($17) {
  $21 = $15;
 } else {
  _g_object_unref($16);
  $18 = HEAP32[$7>>2]|0;
  $19 = ((($18)) + 24|0);
  HEAP32[$19>>2] = 0;
  $21 = $18;
 }
 $20 = ((($21)) + 28|0);
 $22 = HEAP32[$20>>2]|0;
 _g_free($22);
 $23 = HEAP32[$7>>2]|0;
 $24 = ((($23)) + 28|0);
 HEAP32[$24>>2] = 0;
 $25 = HEAP32[36036]|0;
 $26 = (_g_type_check_class_cast($25,80)|0);
 $27 = ((($25)) + 36|0);
 $28 = HEAP32[$27>>2]|0;
 ftCall_vi($28|0,$0);
 return;
}
function _main($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_game_new()|0);
 $3 = (_game_Run($2)|0);
 $4 = ($2|0)==(0|0);
 if ($4) {
  return ($3|0);
 }
 _g_object_unref($2);
 return ($3|0);
}
function _image_construct($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$pre$phiZ2D = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 12|0;
 $3 = sp + 8|0;
 $4 = sp + 4|0;
 HEAP32[$2>>2] = 0;
 HEAP32[$3>>2] = 0;
 HEAP32[$4>>2] = 0;
 $5 = (_object_construct($0)|0);
 $6 = HEAP32[30097]|0;
 $7 = ($6|0)==(0);
 if (!($7)) {
  _stbi_set_flip_vertically_on_load(1);
  HEAP32[30097] = 0;
 }
 $8 = (_stbi_load($1,$2,$3,$4,0)|0);
 $9 = HEAP32[$2>>2]|0;
 $10 = ((($5)) + 16|0);
 $11 = HEAP32[$10>>2]|0;
 HEAP32[$11>>2] = $9;
 $12 = HEAP32[$3>>2]|0;
 $13 = ((($11)) + 4|0);
 HEAP32[$13>>2] = $12;
 $14 = HEAP32[$4>>2]|0;
 $15 = ((($11)) + 8|0);
 HEAP32[$15>>2] = $14;
 $16 = ((($11)) + 12|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ($17|0)==(0|0);
 if ($18) {
  $$pre$phiZ2D = $16;
 } else {
  _stbi_image_free($17);
  $19 = HEAP32[$10>>2]|0;
  $20 = ((($19)) + 12|0);
  HEAP32[$20>>2] = 0;
  $$pre$phiZ2D = $20;
 }
 HEAP32[$$pre$phiZ2D>>2] = $8;
 $21 = ($8|0)==(0|0);
 if (!($21)) {
  STACKTOP = sp;return ($5|0);
 }
 HEAP32[$vararg_buffer>>2] = $1;
 _g_print(140449,$vararg_buffer);
 STACKTOP = sp;return ($5|0);
}
function _image_new($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144148)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140468,120392,0)|0);
  _g_once_init_leave(144148,$4);
 }
 $5 = HEAP32[36037]|0;
 $6 = (_image_construct($5,$0)|0);
 return ($6|0);
}
function _image_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36038] = $1;
 _g_type_class_add_private($0,16);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 456;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 457;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_int(140474,140474,140474,-2147483648,2147483647,0,225)|0);
 HEAP32[(142484)>>2] = $7;
 _g_object_class_install_property($0,1,$7);
 $8 = (_g_type_check_class_cast($0,80)|0);
 $9 = (_g_param_spec_int(140480,140480,140480,-2147483648,2147483647,0,225)|0);
 HEAP32[(142488)>>2] = $9;
 _g_object_class_install_property($0,2,$9);
 $10 = (_g_type_check_class_cast($0,80)|0);
 $11 = (_g_param_spec_int(140487,140487,140487,-2147483648,2147483647,0,225)|0);
 HEAP32[(142492)>>2] = $11;
 _g_object_class_install_property($0,3,$11);
 $12 = (_g_type_check_class_cast($0,80)|0);
 $13 = (_g_param_spec_pointer(140496,140496,140496,225)|0);
 HEAP32[(142496)>>2] = $13;
 _g_object_class_install_property($0,4,$13);
 return;
}
function _image_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144148)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140468,120392,0)|0);
  _g_once_init_leave(144148,$4);
 }
 $5 = HEAP32[36037]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_image_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144148)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,140468,120392,0)|0);
  _g_once_init_leave(144148,$7);
 }
 $8 = HEAP32[36037]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 switch ($1|0) {
 case 1:  {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$11>>2]|0;
  _g_value_set_int($2,$12);
  STACKTOP = sp;return;
  break;
 }
 case 2:  {
  $13 = ((($0)) + 16|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($14)) + 4|0);
  $16 = HEAP32[$15>>2]|0;
  _g_value_set_int($2,$16);
  STACKTOP = sp;return;
  break;
 }
 case 3:  {
  $17 = ((($0)) + 16|0);
  $18 = HEAP32[$17>>2]|0;
  $19 = ((($18)) + 8|0);
  $20 = HEAP32[$19>>2]|0;
  _g_value_set_int($2,$20);
  STACKTOP = sp;return;
  break;
 }
 case 4:  {
  $21 = ((($0)) + 16|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = ((($22)) + 12|0);
  $24 = HEAP32[$23>>2]|0;
  _g_value_set_pointer($2,$24);
  STACKTOP = sp;return;
  break;
 }
 default: {
  $25 = ((($3)) + 4|0);
  $26 = HEAP32[$25>>2]|0;
  $27 = HEAP32[$3>>2]|0;
  $28 = HEAP32[$27>>2]|0;
  $29 = (_g_type_name($28)|0);
  $30 = HEAP32[$0>>2]|0;
  $31 = HEAP32[$30>>2]|0;
  $32 = (_g_type_name($31)|0);
  HEAP32[$vararg_buffer>>2] = 140503;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 259;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $26;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $29;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $32;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
 }
}
function _image_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144148)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140468,120392,0)|0);
  _g_once_init_leave(144148,$4);
 }
 $5 = HEAP32[36037]|0;
 $6 = (_g_type_check_instance_cast($0,$5)|0);
 $7 = ((($0)) + 16|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($8)) + 12|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($10|0)==(0|0);
 if (!($11)) {
  _stbi_image_free($10);
  $12 = HEAP32[$7>>2]|0;
  $13 = ((($12)) + 12|0);
  HEAP32[$13>>2] = 0;
 }
 $14 = HEAP32[36038]|0;
 $15 = (_g_type_check_class_cast($14,80)|0);
 $16 = ((($14)) + 36|0);
 $17 = HEAP32[$16>>2]|0;
 ftCall_vi($17|0,$0);
 return;
}
function _image_get_Width($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 return ($3|0);
}
function _image_get_Height($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _image_get_Pixels($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($2)) + 12|0);
 $4 = HEAP32[$3>>2]|0;
 return ($4|0);
}
function _shader_construct($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0;
 var $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_object_construct($0)|0);
 $4 = (_shader_readTextFile($1)|0);
 $5 = (_shader_readTextFile($2)|0);
 $6 = (_g_strdup(140616)|0);
 $7 = (_g_strdup(140632)|0);
 $8 = (_g_strdup($4)|0);
 $9 = (_g_malloc0_n(4,4)|0);
 HEAP32[$9>>2] = $6;
 $10 = ((($9)) + 4|0);
 HEAP32[$10>>2] = $7;
 $11 = ((($9)) + 8|0);
 HEAP32[$11>>2] = $8;
 $12 = (_strlen($4)|0);
 $13 = (_g_malloc0_n(3,4)|0);
 HEAP32[$13>>2] = 15;
 $14 = ((($13)) + 4|0);
 HEAP32[$14>>2] = 53;
 $15 = ((($13)) + 8|0);
 HEAP32[$15>>2] = $12;
 $16 = (_g_strdup(140616)|0);
 $17 = (_g_strdup(140632)|0);
 $18 = (_g_strdup($5)|0);
 $19 = (_g_malloc0_n(4,4)|0);
 HEAP32[$19>>2] = $16;
 $20 = ((($19)) + 4|0);
 HEAP32[$20>>2] = $17;
 $21 = ((($19)) + 8|0);
 HEAP32[$21>>2] = $18;
 $22 = (_strlen($5)|0);
 $23 = (_g_malloc0_n(3,4)|0);
 HEAP32[$23>>2] = 15;
 $24 = ((($23)) + 4|0);
 HEAP32[$24>>2] = 53;
 $25 = ((($23)) + 8|0);
 HEAP32[$25>>2] = $22;
 $26 = (_glCreateShader(35633)|0);
 _glShaderSource(($26|0),3,($9|0),($13|0));
 _glCompileShader(($26|0));
 _shader_checkCompileErrors($26,0);
 $27 = (_glCreateShader(35632)|0);
 _glShaderSource(($27|0),3,($19|0),($23|0));
 _glCompileShader(($27|0));
 _shader_checkCompileErrors($27,1);
 $28 = (_glCreateProgram()|0);
 $29 = ((($3)) + 16|0);
 $30 = HEAP32[$29>>2]|0;
 HEAP32[$30>>2] = $28;
 _glAttachShader(($28|0),($26|0));
 $31 = HEAP32[$29>>2]|0;
 $32 = HEAP32[$31>>2]|0;
 _glAttachShader(($32|0),($27|0));
 $33 = HEAP32[$29>>2]|0;
 $34 = HEAP32[$33>>2]|0;
 _glLinkProgram(($34|0));
 $35 = HEAP32[$29>>2]|0;
 $36 = HEAP32[$35>>2]|0;
 _shader_checkCompileErrors($36,2);
 _glDeleteShader(($26|0));
 _glDeleteShader(($27|0));
 _g_free($23);
 $37 = ($19|0)==(0|0);
 if (!($37)) {
  $38 = HEAP32[$19>>2]|0;
  $39 = ($38|0)==(0|0);
  if (!($39)) {
   _g_free($38);
  }
  $40 = HEAP32[$20>>2]|0;
  $41 = ($40|0)==(0|0);
  if (!($41)) {
   _g_free($40);
  }
  $42 = HEAP32[$21>>2]|0;
  $43 = ($42|0)==(0|0);
  if (!($43)) {
   _g_free($42);
  }
 }
 _g_free($19);
 _g_free($13);
 $44 = ($9|0)==(0|0);
 if ($44) {
  _g_free($9);
  _g_free($5);
  _g_free($4);
  return ($3|0);
 }
 $45 = HEAP32[$9>>2]|0;
 $46 = ($45|0)==(0|0);
 if (!($46)) {
  _g_free($45);
 }
 $47 = HEAP32[$10>>2]|0;
 $48 = ($47|0)==(0|0);
 if (!($48)) {
  _g_free($47);
 }
 $49 = HEAP32[$11>>2]|0;
 $50 = ($49|0)==(0|0);
 if ($50) {
  _g_free($9);
  _g_free($5);
  _g_free($4);
  return ($3|0);
 }
 _g_free($49);
 _g_free($9);
 _g_free($5);
 _g_free($4);
 return ($3|0);
}
function _shader_readTextFile($0) {
 $0 = $0|0;
 var $$014122 = 0, $$014321 = 0, $$2 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer16 = 0, $vararg_buffer2 = 0, $vararg_buffer23 = 0, $vararg_buffer27 = 0, $vararg_buffer9 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr12 = 0, $vararg_ptr13 = 0, $vararg_ptr14 = 0, $vararg_ptr15 = 0, $vararg_ptr19 = 0, $vararg_ptr20 = 0, $vararg_ptr21 = 0, $vararg_ptr22 = 0, $vararg_ptr26 = 0, $vararg_ptr30 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, $vararg_ptr8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 112|0;
 $vararg_buffer27 = sp + 88|0;
 $vararg_buffer23 = sp + 80|0;
 $vararg_buffer16 = sp + 56|0;
 $vararg_buffer9 = sp + 32|0;
 $vararg_buffer2 = sp + 8|0;
 $vararg_buffer = sp;
 $1 = sp + 96|0;
 HEAP32[$1>>2] = 0;
 $2 = (_g_strdup(144793)|0);
 HEAP32[$vararg_buffer>>2] = $0;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $3 = (_g_strconcat(140846,$vararg_buffer)|0);
 $4 = (_system_io_file_handle_new($3,4)|0);
 _g_free($3);
 $5 = ((($4)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_system_io_file_input_stream_new_FromFile($6,$1)|0);
 $8 = HEAP32[$1>>2]|0;
 $9 = ($8|0)==(0|0);
 if (!($9)) {
  $10 = ($4|0)==(0|0);
  if (!($10)) {
   _g_object_unref($4);
  }
  _g_free($2);
  _g_free(0);
  $11 = HEAP32[$1>>2]|0;
  $12 = ((($11)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = HEAP32[$11>>2]|0;
  $15 = (_g_quark_to_string($14)|0);
  $16 = ((($11)) + 4|0);
  $17 = HEAP32[$16>>2]|0;
  HEAP32[$vararg_buffer2>>2] = 140908;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = 692;
  $vararg_ptr6 = ((($vararg_buffer2)) + 8|0);
  HEAP32[$vararg_ptr6>>2] = $13;
  $vararg_ptr7 = ((($vararg_buffer2)) + 12|0);
  HEAP32[$vararg_ptr7>>2] = $15;
  $vararg_ptr8 = ((($vararg_buffer2)) + 16|0);
  HEAP32[$vararg_ptr8>>2] = $17;
  _g_log(0,8,140862,$vararg_buffer2);
  _g_clear_error($1);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $18 = (_system_io_input_stream_reader_new($7)|0);
 $19 = (_system_io_buffered_reader_new($18,8192,$1)|0);
 $20 = ($18|0)==(0|0);
 if (!($20)) {
  _g_object_unref($18);
 }
 $21 = HEAP32[$1>>2]|0;
 $22 = ($21|0)==(0|0);
 if (!($22)) {
  $23 = ($7|0)==(0|0);
  if (!($23)) {
   _g_object_unref($7);
  }
  $24 = ($4|0)==(0|0);
  if (!($24)) {
   _g_object_unref($4);
  }
  _g_free($2);
  _g_free(0);
  $25 = HEAP32[$1>>2]|0;
  $26 = ((($25)) + 8|0);
  $27 = HEAP32[$26>>2]|0;
  $28 = HEAP32[$25>>2]|0;
  $29 = (_g_quark_to_string($28)|0);
  $30 = ((($25)) + 4|0);
  $31 = HEAP32[$30>>2]|0;
  HEAP32[$vararg_buffer9>>2] = 140908;
  $vararg_ptr12 = ((($vararg_buffer9)) + 4|0);
  HEAP32[$vararg_ptr12>>2] = 707;
  $vararg_ptr13 = ((($vararg_buffer9)) + 8|0);
  HEAP32[$vararg_ptr13>>2] = $27;
  $vararg_ptr14 = ((($vararg_buffer9)) + 12|0);
  HEAP32[$vararg_ptr14>>2] = $29;
  $vararg_ptr15 = ((($vararg_buffer9)) + 16|0);
  HEAP32[$vararg_ptr15>>2] = $31;
  _g_log(0,8,140862,$vararg_buffer9);
  _g_clear_error($1);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 $$014122 = 0;$$014321 = $2;
 while(1) {
  $32 = (_system_io_buffered_reader_ReadLine($19,0,$1)|0);
  $33 = HEAP32[$1>>2]|0;
  $34 = ($33|0)==(0|0);
  if (!($34)) {
   label = 15;
   break;
  }
  _g_free($$014122);
  HEAP32[$vararg_buffer23>>2] = $32;
  $vararg_ptr26 = ((($vararg_buffer23)) + 4|0);
  HEAP32[$vararg_ptr26>>2] = 0;
  $45 = (_g_strconcat($$014321,$vararg_buffer23)|0);
  HEAP32[$vararg_buffer27>>2] = 140927;
  $vararg_ptr30 = ((($vararg_buffer27)) + 4|0);
  HEAP32[$vararg_ptr30>>2] = 0;
  $46 = (_g_strconcat($45,$vararg_buffer27)|0);
  _g_free($$014321);
  _g_free($45);
  _g_free(0);
  $47 = ($32|0)==(0|0);
  if ($47) {
   label = 23;
   break;
  } else {
   $$014122 = $32;$$014321 = $46;
  }
 }
 if ((label|0) == 15) {
  $35 = ($19|0)==(0|0);
  if (!($35)) {
   _g_object_unref($19);
  }
  $36 = ($7|0)==(0|0);
  if (!($36)) {
   _g_object_unref($7);
  }
  $37 = ($4|0)==(0|0);
  if (!($37)) {
   _g_object_unref($4);
  }
  _g_free($$014321);
  _g_free($$014122);
  $38 = HEAP32[$1>>2]|0;
  $39 = ((($38)) + 8|0);
  $40 = HEAP32[$39>>2]|0;
  $41 = HEAP32[$38>>2]|0;
  $42 = (_g_quark_to_string($41)|0);
  $43 = ((($38)) + 4|0);
  $44 = HEAP32[$43>>2]|0;
  HEAP32[$vararg_buffer16>>2] = 140908;
  $vararg_ptr19 = ((($vararg_buffer16)) + 4|0);
  HEAP32[$vararg_ptr19>>2] = 741;
  $vararg_ptr20 = ((($vararg_buffer16)) + 8|0);
  HEAP32[$vararg_ptr20>>2] = $40;
  $vararg_ptr21 = ((($vararg_buffer16)) + 12|0);
  HEAP32[$vararg_ptr21>>2] = $42;
  $vararg_ptr22 = ((($vararg_buffer16)) + 16|0);
  HEAP32[$vararg_ptr22>>2] = $44;
  _g_log(0,8,140862,$vararg_buffer16);
  _g_clear_error($1);
  $$2 = 0;
  STACKTOP = sp;return ($$2|0);
 }
 else if ((label|0) == 23) {
  $48 = ($19|0)==(0|0);
  if (!($48)) {
   _g_object_unref($19);
  }
  $49 = ($7|0)==(0|0);
  if (!($49)) {
   _g_object_unref($7);
  }
  $50 = ($4|0)==(0|0);
  if (!($50)) {
   _g_object_unref($4);
  }
  _g_free(0);
  $$2 = $46;
  STACKTOP = sp;return ($$2|0);
 }
 return (0)|0;
}
function _shader_checkCompileErrors($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer2 = 0, $vararg_ptr1 = 0, $vararg_ptr5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 1056|0;
 $vararg_buffer2 = sp + 1032|0;
 $vararg_buffer = sp + 1024|0;
 $2 = sp + 1040|0;
 $3 = sp;
 _memset(($3|0),0,1024)|0;
 HEAP32[$2>>2] = 0;
 $4 = ($1|0)==(2);
 if ($4) {
  _glGetProgramiv(($0|0),35714,($2|0));
  $17 = HEAP32[$2>>2]|0;
  $18 = ($17|0)==(1);
  if ($18) {
   STACKTOP = sp;return;
  }
  _glGetProgramInfoLog(($0|0),1024,(0|0),($3|0));
  $19 = (_g_once_init_enter(144156)|0);
  $20 = ($19|0)==(0);
  if (!($20)) {
   $21 = (_g_enum_register_static(140521,114864)|0);
   _g_once_init_leave(144156,$21);
  }
  $22 = HEAP32[36039]|0;
  $23 = (_g_type_class_ref($22)|0);
  $24 = (_g_enum_get_value($23,2)|0);
  $25 = ($24|0)==(0|0);
  if ($25) {
   $28 = 0;
  } else {
   $26 = ((($24)) + 4|0);
   $27 = HEAP32[$26>>2]|0;
   $28 = $27;
  }
  HEAP32[$vararg_buffer2>>2] = $3;
  $vararg_ptr5 = ((($vararg_buffer2)) + 4|0);
  HEAP32[$vararg_ptr5>>2] = $28;
  _g_print(140767,$vararg_buffer2);
  STACKTOP = sp;return;
 } else {
  _glGetShaderiv(($0|0),35713,($2|0));
  $5 = HEAP32[$2>>2]|0;
  $6 = ($5|0)==(1);
  if ($6) {
   STACKTOP = sp;return;
  }
  _glGetShaderInfoLog(($0|0),1024,(0|0),($3|0));
  $7 = (_g_once_init_enter(144156)|0);
  $8 = ($7|0)==(0);
  if (!($8)) {
   $9 = (_g_enum_register_static(140521,114864)|0);
   _g_once_init_leave(144156,$9);
  }
  $10 = HEAP32[36039]|0;
  $11 = (_g_type_class_ref($10)|0);
  $12 = (_g_enum_get_value($11,$1)|0);
  $13 = ($12|0)==(0|0);
  if ($13) {
   $16 = 0;
  } else {
   $14 = ((($12)) + 4|0);
   $15 = HEAP32[$14>>2]|0;
   $16 = $15;
  }
  HEAP32[$vararg_buffer>>2] = $3;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $16;
  _g_print(140686,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function _shader_new($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_g_once_init_enter(144160)|0);
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = (_object_get_type()|0);
  $5 = (_g_type_register_static($4,140929,120428,0)|0);
  _g_once_init_leave(144160,$5);
 }
 $6 = HEAP32[36040]|0;
 $7 = (_shader_construct($6,$0,$1)|0);
 return ($7|0);
}
function _shader_class_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_type_class_peek_parent($0)|0);
 HEAP32[36041] = $1;
 _g_type_class_add_private($0,4);
 $2 = (_g_type_check_class_cast($0,80)|0);
 $3 = ((($0)) + 28|0);
 HEAP32[$3>>2] = 458;
 $4 = (_g_type_check_class_cast($0,80)|0);
 $5 = ((($0)) + 36|0);
 HEAP32[$5>>2] = 459;
 $6 = (_g_type_check_class_cast($0,80)|0);
 $7 = (_g_param_spec_uint(140936,140936,140936,0,-1,0,225)|0);
 HEAP32[(144172)>>2] = $7;
 _g_object_class_install_property($0,1,$7);
 return;
}
function _shader_instance_init($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144160)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140929,120428,0)|0);
  _g_once_init_leave(144160,$4);
 }
 $5 = HEAP32[36040]|0;
 $6 = (_g_type_instance_get_private($0,$5)|0);
 $7 = ((($0)) + 16|0);
 HEAP32[$7>>2] = $6;
 return;
}
function __vala_shader_get_property($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $cond = 0, $vararg_buffer = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, $vararg_ptr5 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $4 = (_g_once_init_enter(144160)|0);
 $5 = ($4|0)==(0);
 if (!($5)) {
  $6 = (_object_get_type()|0);
  $7 = (_g_type_register_static($6,140929,120428,0)|0);
  _g_once_init_leave(144160,$7);
 }
 $8 = HEAP32[36040]|0;
 $9 = (_g_type_check_instance_cast($0,$8)|0);
 $cond = ($1|0)==(1);
 if ($cond) {
  $10 = ((($0)) + 16|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = HEAP32[$11>>2]|0;
  _g_value_set_uint($2,$12);
  STACKTOP = sp;return;
 } else {
  $13 = ((($3)) + 4|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = HEAP32[$3>>2]|0;
  $16 = HEAP32[$15>>2]|0;
  $17 = (_g_type_name($16)|0);
  $18 = HEAP32[$0>>2]|0;
  $19 = HEAP32[$18>>2]|0;
  $20 = (_g_type_name($19)|0);
  HEAP32[$vararg_buffer>>2] = 140908;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 825;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 140993;
  $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
  HEAP32[$vararg_ptr3>>2] = $1;
  $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
  HEAP32[$vararg_ptr4>>2] = $14;
  $vararg_ptr5 = ((($vararg_buffer)) + 20|0);
  HEAP32[$vararg_ptr5>>2] = $17;
  $vararg_ptr6 = ((($vararg_buffer)) + 24|0);
  HEAP32[$vararg_ptr6>>2] = $20;
  _g_log(0,16,140939,$vararg_buffer);
  STACKTOP = sp;return;
 }
}
function _shader_finalize($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_g_once_init_enter(144160)|0);
 $2 = ($1|0)==(0);
 if (!($2)) {
  $3 = (_object_get_type()|0);
  $4 = (_g_type_register_static($3,140929,120428,0)|0);
  _g_once_init_leave(144160,$4);
 }
 $5 = HEAP32[36040]|0;
 (_g_type_check_instance_cast($0,$5)|0);
 $6 = HEAP32[36041]|0;
 $7 = (_g_type_check_class_cast($6,80)|0);
 $8 = ((($6)) + 36|0);
 $9 = HEAP32[$8>>2]|0;
 ftCall_vi($9|0,$0);
 return;
}
function _shader_Use($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 16|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = HEAP32[$2>>2]|0;
 _glUseProgram(($3|0));
 return;
}
function _shader_SetInt($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_glGetUniformLocation(($5|0),($1|0))|0);
 _glUniform1i(($6|0),($2|0));
 return;
}
function _shader_SetMat4($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = HEAP32[$4>>2]|0;
 $6 = (_glGetUniformLocation(($5|0),($1|0))|0);
 _glUniformMatrix4fv(($6|0),1,0,($2|0));
 return;
}
function _malloc($0) {
 $0 = $0|0;
 var $$0 = 0, $$0$i = 0, $$0$i$i = 0, $$0$i$i$i = 0, $$0$i20$i = 0, $$0169$i = 0, $$0170$i = 0, $$0171$i = 0, $$0192 = 0, $$0194 = 0, $$02014$i$i = 0, $$0202$lcssa$i$i = 0, $$02023$i$i = 0, $$0206$i$i = 0, $$0207$i$i = 0, $$024372$i = 0, $$0259$i$i = 0, $$02604$i$i = 0, $$0261$lcssa$i$i = 0, $$02613$i$i = 0;
 var $$0267$i$i = 0, $$0268$i$i = 0, $$0318$i = 0, $$032012$i = 0, $$0321$lcssa$i = 0, $$032111$i = 0, $$0323$i = 0, $$0329$i = 0, $$0335$i = 0, $$0336$i = 0, $$0338$i = 0, $$0339$i = 0, $$0344$i = 0, $$1174$i = 0, $$1174$i$be = 0, $$1174$i$ph = 0, $$1176$i = 0, $$1176$i$be = 0, $$1176$i$ph = 0, $$124471$i = 0;
 var $$1263$i$i = 0, $$1263$i$i$be = 0, $$1263$i$i$ph = 0, $$1265$i$i = 0, $$1265$i$i$be = 0, $$1265$i$i$ph = 0, $$1319$i = 0, $$1324$i = 0, $$1340$i = 0, $$1346$i = 0, $$1346$i$be = 0, $$1346$i$ph = 0, $$1350$i = 0, $$1350$i$be = 0, $$1350$i$ph = 0, $$2234243136$i = 0, $$2247$ph$i = 0, $$2253$ph$i = 0, $$2331$i = 0, $$3$i = 0;
 var $$3$i$i = 0, $$3$i198 = 0, $$3$i198211 = 0, $$3326$i = 0, $$3348$i = 0, $$4$lcssa$i = 0, $$415$i = 0, $$415$i$ph = 0, $$4236$i = 0, $$4327$lcssa$i = 0, $$432714$i = 0, $$432714$i$ph = 0, $$4333$i = 0, $$533413$i = 0, $$533413$i$ph = 0, $$723947$i = 0, $$748$i = 0, $$pre = 0, $$pre$i = 0, $$pre$i$i = 0;
 var $$pre$i16$i = 0, $$pre$i195 = 0, $$pre$i204 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$i205Z2D = 0, $$pre$phi$iZ2D = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink320 = 0, $$sink321 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0;
 var $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0;
 var $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0;
 var $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0;
 var $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0;
 var $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0;
 var $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0;
 var $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0;
 var $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0;
 var $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0;
 var $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0;
 var $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $3 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0;
 var $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0;
 var $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0;
 var $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0;
 var $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0, $370 = 0, $371 = 0, $372 = 0, $373 = 0, $374 = 0, $375 = 0, $376 = 0, $377 = 0;
 var $378 = 0, $379 = 0, $38 = 0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0, $392 = 0, $393 = 0, $394 = 0, $395 = 0;
 var $396 = 0, $397 = 0, $398 = 0, $399 = 0, $4 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0, $410 = 0, $411 = 0, $412 = 0;
 var $413 = 0, $414 = 0, $415 = 0, $416 = 0, $417 = 0, $418 = 0, $419 = 0, $42 = 0, $420 = 0, $421 = 0, $422 = 0, $423 = 0, $424 = 0, $425 = 0, $426 = 0, $427 = 0, $428 = 0, $429 = 0, $43 = 0, $430 = 0;
 var $431 = 0, $432 = 0, $433 = 0, $434 = 0, $435 = 0, $436 = 0, $437 = 0, $438 = 0, $439 = 0, $44 = 0, $440 = 0, $441 = 0, $442 = 0, $443 = 0, $444 = 0, $445 = 0, $446 = 0, $447 = 0, $448 = 0, $449 = 0;
 var $45 = 0, $450 = 0, $451 = 0, $452 = 0, $453 = 0, $454 = 0, $455 = 0, $456 = 0, $457 = 0, $458 = 0, $459 = 0, $46 = 0, $460 = 0, $461 = 0, $462 = 0, $463 = 0, $464 = 0, $465 = 0, $466 = 0, $467 = 0;
 var $468 = 0, $469 = 0, $47 = 0, $470 = 0, $471 = 0, $472 = 0, $473 = 0, $474 = 0, $475 = 0, $476 = 0, $477 = 0, $478 = 0, $479 = 0, $48 = 0, $480 = 0, $481 = 0, $482 = 0, $483 = 0, $484 = 0, $485 = 0;
 var $486 = 0, $487 = 0, $488 = 0, $489 = 0, $49 = 0, $490 = 0, $491 = 0, $492 = 0, $493 = 0, $494 = 0, $495 = 0, $496 = 0, $497 = 0, $498 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $502 = 0;
 var $503 = 0, $504 = 0, $505 = 0, $506 = 0, $507 = 0, $508 = 0, $509 = 0, $51 = 0, $510 = 0, $511 = 0, $512 = 0, $513 = 0, $514 = 0, $515 = 0, $516 = 0, $517 = 0, $518 = 0, $519 = 0, $52 = 0, $520 = 0;
 var $521 = 0, $522 = 0, $523 = 0, $524 = 0, $525 = 0, $526 = 0, $527 = 0, $528 = 0, $529 = 0, $53 = 0, $530 = 0, $531 = 0, $532 = 0, $533 = 0, $534 = 0, $535 = 0, $536 = 0, $537 = 0, $538 = 0, $539 = 0;
 var $54 = 0, $540 = 0, $541 = 0, $542 = 0, $543 = 0, $544 = 0, $545 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $55 = 0, $550 = 0, $551 = 0, $552 = 0, $553 = 0, $554 = 0, $555 = 0, $556 = 0, $557 = 0;
 var $558 = 0, $559 = 0, $56 = 0, $560 = 0, $561 = 0, $562 = 0, $563 = 0, $564 = 0, $565 = 0, $566 = 0, $567 = 0, $568 = 0, $569 = 0, $57 = 0, $570 = 0, $571 = 0, $572 = 0, $573 = 0, $574 = 0, $575 = 0;
 var $576 = 0, $577 = 0, $578 = 0, $579 = 0, $58 = 0, $580 = 0, $581 = 0, $582 = 0, $583 = 0, $584 = 0, $585 = 0, $586 = 0, $587 = 0, $588 = 0, $589 = 0, $59 = 0, $590 = 0, $591 = 0, $592 = 0, $593 = 0;
 var $594 = 0, $595 = 0, $596 = 0, $597 = 0, $598 = 0, $599 = 0, $6 = 0, $60 = 0, $600 = 0, $601 = 0, $602 = 0, $603 = 0, $604 = 0, $605 = 0, $606 = 0, $607 = 0, $608 = 0, $609 = 0, $61 = 0, $610 = 0;
 var $611 = 0, $612 = 0, $613 = 0, $614 = 0, $615 = 0, $616 = 0, $617 = 0, $618 = 0, $619 = 0, $62 = 0, $620 = 0, $621 = 0, $622 = 0, $623 = 0, $624 = 0, $625 = 0, $626 = 0, $627 = 0, $628 = 0, $629 = 0;
 var $63 = 0, $630 = 0, $631 = 0, $632 = 0, $633 = 0, $634 = 0, $635 = 0, $636 = 0, $637 = 0, $638 = 0, $639 = 0, $64 = 0, $640 = 0, $641 = 0, $642 = 0, $643 = 0, $644 = 0, $645 = 0, $646 = 0, $647 = 0;
 var $648 = 0, $649 = 0, $65 = 0, $650 = 0, $651 = 0, $652 = 0, $653 = 0, $654 = 0, $655 = 0, $656 = 0, $657 = 0, $658 = 0, $659 = 0, $66 = 0, $660 = 0, $661 = 0, $662 = 0, $663 = 0, $664 = 0, $665 = 0;
 var $666 = 0, $667 = 0, $668 = 0, $669 = 0, $67 = 0, $670 = 0, $671 = 0, $672 = 0, $673 = 0, $674 = 0, $675 = 0, $676 = 0, $677 = 0, $678 = 0, $679 = 0, $68 = 0, $680 = 0, $681 = 0, $682 = 0, $683 = 0;
 var $684 = 0, $685 = 0, $686 = 0, $687 = 0, $688 = 0, $689 = 0, $69 = 0, $690 = 0, $691 = 0, $692 = 0, $693 = 0, $694 = 0, $695 = 0, $696 = 0, $697 = 0, $698 = 0, $699 = 0, $7 = 0, $70 = 0, $700 = 0;
 var $701 = 0, $702 = 0, $703 = 0, $704 = 0, $705 = 0, $706 = 0, $707 = 0, $708 = 0, $709 = 0, $71 = 0, $710 = 0, $711 = 0, $712 = 0, $713 = 0, $714 = 0, $715 = 0, $716 = 0, $717 = 0, $718 = 0, $719 = 0;
 var $72 = 0, $720 = 0, $721 = 0, $722 = 0, $723 = 0, $724 = 0, $725 = 0, $726 = 0, $727 = 0, $728 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0;
 var $738 = 0, $739 = 0, $74 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $747 = 0, $748 = 0, $749 = 0, $75 = 0, $750 = 0, $751 = 0, $752 = 0, $753 = 0, $754 = 0, $755 = 0;
 var $756 = 0, $757 = 0, $758 = 0, $759 = 0, $76 = 0, $760 = 0, $761 = 0, $762 = 0, $763 = 0, $764 = 0, $765 = 0, $766 = 0, $767 = 0, $768 = 0, $769 = 0, $77 = 0, $770 = 0, $771 = 0, $772 = 0, $773 = 0;
 var $774 = 0, $775 = 0, $776 = 0, $777 = 0, $778 = 0, $779 = 0, $78 = 0, $780 = 0, $781 = 0, $782 = 0, $783 = 0, $784 = 0, $785 = 0, $786 = 0, $787 = 0, $788 = 0, $789 = 0, $79 = 0, $790 = 0, $791 = 0;
 var $792 = 0, $793 = 0, $794 = 0, $795 = 0, $796 = 0, $797 = 0, $798 = 0, $799 = 0, $8 = 0, $80 = 0, $800 = 0, $801 = 0, $802 = 0, $803 = 0, $804 = 0, $805 = 0, $806 = 0, $807 = 0, $808 = 0, $809 = 0;
 var $81 = 0, $810 = 0, $811 = 0, $812 = 0, $813 = 0, $814 = 0, $815 = 0, $816 = 0, $817 = 0, $818 = 0, $819 = 0, $82 = 0, $820 = 0, $821 = 0, $822 = 0, $823 = 0, $824 = 0, $825 = 0, $826 = 0, $827 = 0;
 var $828 = 0, $829 = 0, $83 = 0, $830 = 0, $831 = 0, $832 = 0, $833 = 0, $834 = 0, $835 = 0, $836 = 0, $837 = 0, $838 = 0, $839 = 0, $84 = 0, $840 = 0, $841 = 0, $842 = 0, $843 = 0, $844 = 0, $845 = 0;
 var $846 = 0, $847 = 0, $848 = 0, $849 = 0, $85 = 0, $850 = 0, $851 = 0, $852 = 0, $853 = 0, $854 = 0, $855 = 0, $856 = 0, $857 = 0, $858 = 0, $859 = 0, $86 = 0, $860 = 0, $861 = 0, $862 = 0, $863 = 0;
 var $864 = 0, $865 = 0, $866 = 0, $867 = 0, $868 = 0, $869 = 0, $87 = 0, $870 = 0, $871 = 0, $872 = 0, $873 = 0, $874 = 0, $875 = 0, $876 = 0, $877 = 0, $878 = 0, $879 = 0, $88 = 0, $880 = 0, $881 = 0;
 var $882 = 0, $883 = 0, $884 = 0, $885 = 0, $886 = 0, $887 = 0, $888 = 0, $889 = 0, $89 = 0, $890 = 0, $891 = 0, $892 = 0, $893 = 0, $894 = 0, $895 = 0, $896 = 0, $897 = 0, $898 = 0, $899 = 0, $9 = 0;
 var $90 = 0, $900 = 0, $901 = 0, $902 = 0, $903 = 0, $904 = 0, $905 = 0, $906 = 0, $907 = 0, $908 = 0, $909 = 0, $91 = 0, $910 = 0, $911 = 0, $912 = 0, $913 = 0, $914 = 0, $915 = 0, $916 = 0, $917 = 0;
 var $918 = 0, $919 = 0, $92 = 0, $920 = 0, $921 = 0, $922 = 0, $923 = 0, $924 = 0, $925 = 0, $926 = 0, $927 = 0, $928 = 0, $929 = 0, $93 = 0, $930 = 0, $931 = 0, $932 = 0, $933 = 0, $934 = 0, $935 = 0;
 var $936 = 0, $937 = 0, $938 = 0, $939 = 0, $94 = 0, $940 = 0, $941 = 0, $942 = 0, $943 = 0, $944 = 0, $945 = 0, $946 = 0, $947 = 0, $948 = 0, $949 = 0, $95 = 0, $950 = 0, $951 = 0, $952 = 0, $953 = 0;
 var $954 = 0, $955 = 0, $956 = 0, $957 = 0, $958 = 0, $959 = 0, $96 = 0, $960 = 0, $961 = 0, $962 = 0, $963 = 0, $964 = 0, $965 = 0, $966 = 0, $967 = 0, $968 = 0, $969 = 0, $97 = 0, $970 = 0, $971 = 0;
 var $972 = 0, $973 = 0, $974 = 0, $975 = 0, $976 = 0, $977 = 0, $978 = 0, $979 = 0, $98 = 0, $99 = 0, $cond$i = 0, $cond$i$i = 0, $cond$i203 = 0, $not$$i = 0, $or$cond$i = 0, $or$cond$i199 = 0, $or$cond1$i = 0, $or$cond1$i197 = 0, $or$cond11$i = 0, $or$cond2$i = 0;
 var $or$cond5$i = 0, $or$cond50$i = 0, $or$cond51$i = 0, $or$cond6$i = 0, $or$cond7$i = 0, $or$cond8$i = 0, $or$cond8$not$i = 0, $spec$select$i = 0, $spec$select$i201 = 0, $spec$select1$i = 0, $spec$select2$i = 0, $spec$select4$i = 0, $spec$select49$i = 0, $spec$select9$i = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = ($0>>>0)<(245);
 do {
  if ($2) {
   $3 = ($0>>>0)<(11);
   $4 = (($0) + 11)|0;
   $5 = $4 & -8;
   $6 = $3 ? 16 : $5;
   $7 = $6 >>> 3;
   $8 = HEAP32[36044]|0;
   $9 = $8 >>> $7;
   $10 = $9 & 3;
   $11 = ($10|0)==(0);
   if (!($11)) {
    $12 = $9 & 1;
    $13 = $12 ^ 1;
    $14 = (($13) + ($7))|0;
    $15 = $14 << 1;
    $16 = (144216 + ($15<<2)|0);
    $17 = ((($16)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($18)) + 8|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($16|0);
    if ($21) {
     $22 = 1 << $14;
     $23 = $22 ^ -1;
     $24 = $8 & $23;
     HEAP32[36044] = $24;
    } else {
     $25 = ((($20)) + 12|0);
     HEAP32[$25>>2] = $16;
     HEAP32[$17>>2] = $20;
    }
    $26 = $14 << 3;
    $27 = $26 | 3;
    $28 = ((($18)) + 4|0);
    HEAP32[$28>>2] = $27;
    $29 = (($18) + ($26)|0);
    $30 = ((($29)) + 4|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = $31 | 1;
    HEAP32[$30>>2] = $32;
    $$0 = $19;
    STACKTOP = sp;return ($$0|0);
   }
   $33 = HEAP32[(144184)>>2]|0;
   $34 = ($6>>>0)>($33>>>0);
   if ($34) {
    $35 = ($9|0)==(0);
    if (!($35)) {
     $36 = $9 << $7;
     $37 = 2 << $7;
     $38 = (0 - ($37))|0;
     $39 = $37 | $38;
     $40 = $36 & $39;
     $41 = (0 - ($40))|0;
     $42 = $40 & $41;
     $43 = (($42) + -1)|0;
     $44 = $43 >>> 12;
     $45 = $44 & 16;
     $46 = $43 >>> $45;
     $47 = $46 >>> 5;
     $48 = $47 & 8;
     $49 = $48 | $45;
     $50 = $46 >>> $48;
     $51 = $50 >>> 2;
     $52 = $51 & 4;
     $53 = $49 | $52;
     $54 = $50 >>> $52;
     $55 = $54 >>> 1;
     $56 = $55 & 2;
     $57 = $53 | $56;
     $58 = $54 >>> $56;
     $59 = $58 >>> 1;
     $60 = $59 & 1;
     $61 = $57 | $60;
     $62 = $58 >>> $60;
     $63 = (($61) + ($62))|0;
     $64 = $63 << 1;
     $65 = (144216 + ($64<<2)|0);
     $66 = ((($65)) + 8|0);
     $67 = HEAP32[$66>>2]|0;
     $68 = ((($67)) + 8|0);
     $69 = HEAP32[$68>>2]|0;
     $70 = ($69|0)==($65|0);
     if ($70) {
      $71 = 1 << $63;
      $72 = $71 ^ -1;
      $73 = $8 & $72;
      HEAP32[36044] = $73;
      $90 = $73;
     } else {
      $74 = ((($69)) + 12|0);
      HEAP32[$74>>2] = $65;
      HEAP32[$66>>2] = $69;
      $90 = $8;
     }
     $75 = $63 << 3;
     $76 = (($75) - ($6))|0;
     $77 = $6 | 3;
     $78 = ((($67)) + 4|0);
     HEAP32[$78>>2] = $77;
     $79 = (($67) + ($6)|0);
     $80 = $76 | 1;
     $81 = ((($79)) + 4|0);
     HEAP32[$81>>2] = $80;
     $82 = (($67) + ($75)|0);
     HEAP32[$82>>2] = $76;
     $83 = ($33|0)==(0);
     if (!($83)) {
      $84 = HEAP32[(144196)>>2]|0;
      $85 = $33 >>> 3;
      $86 = $85 << 1;
      $87 = (144216 + ($86<<2)|0);
      $88 = 1 << $85;
      $89 = $90 & $88;
      $91 = ($89|0)==(0);
      if ($91) {
       $92 = $90 | $88;
       HEAP32[36044] = $92;
       $$pre = ((($87)) + 8|0);
       $$0194 = $87;$$pre$phiZ2D = $$pre;
      } else {
       $93 = ((($87)) + 8|0);
       $94 = HEAP32[$93>>2]|0;
       $$0194 = $94;$$pre$phiZ2D = $93;
      }
      HEAP32[$$pre$phiZ2D>>2] = $84;
      $95 = ((($$0194)) + 12|0);
      HEAP32[$95>>2] = $84;
      $96 = ((($84)) + 8|0);
      HEAP32[$96>>2] = $$0194;
      $97 = ((($84)) + 12|0);
      HEAP32[$97>>2] = $87;
     }
     HEAP32[(144184)>>2] = $76;
     HEAP32[(144196)>>2] = $79;
     $$0 = $68;
     STACKTOP = sp;return ($$0|0);
    }
    $98 = HEAP32[(144180)>>2]|0;
    $99 = ($98|0)==(0);
    if ($99) {
     $$0192 = $6;
    } else {
     $100 = (0 - ($98))|0;
     $101 = $98 & $100;
     $102 = (($101) + -1)|0;
     $103 = $102 >>> 12;
     $104 = $103 & 16;
     $105 = $102 >>> $104;
     $106 = $105 >>> 5;
     $107 = $106 & 8;
     $108 = $107 | $104;
     $109 = $105 >>> $107;
     $110 = $109 >>> 2;
     $111 = $110 & 4;
     $112 = $108 | $111;
     $113 = $109 >>> $111;
     $114 = $113 >>> 1;
     $115 = $114 & 2;
     $116 = $112 | $115;
     $117 = $113 >>> $115;
     $118 = $117 >>> 1;
     $119 = $118 & 1;
     $120 = $116 | $119;
     $121 = $117 >>> $119;
     $122 = (($120) + ($121))|0;
     $123 = (144480 + ($122<<2)|0);
     $124 = HEAP32[$123>>2]|0;
     $125 = ((($124)) + 4|0);
     $126 = HEAP32[$125>>2]|0;
     $127 = $126 & -8;
     $128 = (($127) - ($6))|0;
     $$0169$i = $124;$$0170$i = $124;$$0171$i = $128;
     while(1) {
      $129 = ((($$0169$i)) + 16|0);
      $130 = HEAP32[$129>>2]|0;
      $131 = ($130|0)==(0|0);
      if ($131) {
       $132 = ((($$0169$i)) + 20|0);
       $133 = HEAP32[$132>>2]|0;
       $134 = ($133|0)==(0|0);
       if ($134) {
        break;
       } else {
        $136 = $133;
       }
      } else {
       $136 = $130;
      }
      $135 = ((($136)) + 4|0);
      $137 = HEAP32[$135>>2]|0;
      $138 = $137 & -8;
      $139 = (($138) - ($6))|0;
      $140 = ($139>>>0)<($$0171$i>>>0);
      $spec$select$i = $140 ? $139 : $$0171$i;
      $spec$select1$i = $140 ? $136 : $$0170$i;
      $$0169$i = $136;$$0170$i = $spec$select1$i;$$0171$i = $spec$select$i;
     }
     $141 = (($$0170$i) + ($6)|0);
     $142 = ($141>>>0)>($$0170$i>>>0);
     if ($142) {
      $143 = ((($$0170$i)) + 24|0);
      $144 = HEAP32[$143>>2]|0;
      $145 = ((($$0170$i)) + 12|0);
      $146 = HEAP32[$145>>2]|0;
      $147 = ($146|0)==($$0170$i|0);
      do {
       if ($147) {
        $152 = ((($$0170$i)) + 20|0);
        $153 = HEAP32[$152>>2]|0;
        $154 = ($153|0)==(0|0);
        if ($154) {
         $155 = ((($$0170$i)) + 16|0);
         $156 = HEAP32[$155>>2]|0;
         $157 = ($156|0)==(0|0);
         if ($157) {
          $$3$i = 0;
          break;
         } else {
          $$1174$i$ph = $156;$$1176$i$ph = $155;
         }
        } else {
         $$1174$i$ph = $153;$$1176$i$ph = $152;
        }
        $$1174$i = $$1174$i$ph;$$1176$i = $$1176$i$ph;
        while(1) {
         $158 = ((($$1174$i)) + 20|0);
         $159 = HEAP32[$158>>2]|0;
         $160 = ($159|0)==(0|0);
         if ($160) {
          $161 = ((($$1174$i)) + 16|0);
          $162 = HEAP32[$161>>2]|0;
          $163 = ($162|0)==(0|0);
          if ($163) {
           break;
          } else {
           $$1174$i$be = $162;$$1176$i$be = $161;
          }
         } else {
          $$1174$i$be = $159;$$1176$i$be = $158;
         }
         $$1174$i = $$1174$i$be;$$1176$i = $$1176$i$be;
        }
        HEAP32[$$1176$i>>2] = 0;
        $$3$i = $$1174$i;
       } else {
        $148 = ((($$0170$i)) + 8|0);
        $149 = HEAP32[$148>>2]|0;
        $150 = ((($149)) + 12|0);
        HEAP32[$150>>2] = $146;
        $151 = ((($146)) + 8|0);
        HEAP32[$151>>2] = $149;
        $$3$i = $146;
       }
      } while(0);
      $164 = ($144|0)==(0|0);
      do {
       if (!($164)) {
        $165 = ((($$0170$i)) + 28|0);
        $166 = HEAP32[$165>>2]|0;
        $167 = (144480 + ($166<<2)|0);
        $168 = HEAP32[$167>>2]|0;
        $169 = ($$0170$i|0)==($168|0);
        if ($169) {
         HEAP32[$167>>2] = $$3$i;
         $cond$i = ($$3$i|0)==(0|0);
         if ($cond$i) {
          $170 = 1 << $166;
          $171 = $170 ^ -1;
          $172 = $98 & $171;
          HEAP32[(144180)>>2] = $172;
          break;
         }
        } else {
         $173 = ((($144)) + 16|0);
         $174 = HEAP32[$173>>2]|0;
         $175 = ($174|0)==($$0170$i|0);
         $176 = ((($144)) + 20|0);
         $$sink = $175 ? $173 : $176;
         HEAP32[$$sink>>2] = $$3$i;
         $177 = ($$3$i|0)==(0|0);
         if ($177) {
          break;
         }
        }
        $178 = ((($$3$i)) + 24|0);
        HEAP32[$178>>2] = $144;
        $179 = ((($$0170$i)) + 16|0);
        $180 = HEAP32[$179>>2]|0;
        $181 = ($180|0)==(0|0);
        if (!($181)) {
         $182 = ((($$3$i)) + 16|0);
         HEAP32[$182>>2] = $180;
         $183 = ((($180)) + 24|0);
         HEAP32[$183>>2] = $$3$i;
        }
        $184 = ((($$0170$i)) + 20|0);
        $185 = HEAP32[$184>>2]|0;
        $186 = ($185|0)==(0|0);
        if (!($186)) {
         $187 = ((($$3$i)) + 20|0);
         HEAP32[$187>>2] = $185;
         $188 = ((($185)) + 24|0);
         HEAP32[$188>>2] = $$3$i;
        }
       }
      } while(0);
      $189 = ($$0171$i>>>0)<(16);
      if ($189) {
       $190 = (($$0171$i) + ($6))|0;
       $191 = $190 | 3;
       $192 = ((($$0170$i)) + 4|0);
       HEAP32[$192>>2] = $191;
       $193 = (($$0170$i) + ($190)|0);
       $194 = ((($193)) + 4|0);
       $195 = HEAP32[$194>>2]|0;
       $196 = $195 | 1;
       HEAP32[$194>>2] = $196;
      } else {
       $197 = $6 | 3;
       $198 = ((($$0170$i)) + 4|0);
       HEAP32[$198>>2] = $197;
       $199 = $$0171$i | 1;
       $200 = ((($141)) + 4|0);
       HEAP32[$200>>2] = $199;
       $201 = (($141) + ($$0171$i)|0);
       HEAP32[$201>>2] = $$0171$i;
       $202 = ($33|0)==(0);
       if (!($202)) {
        $203 = HEAP32[(144196)>>2]|0;
        $204 = $33 >>> 3;
        $205 = $204 << 1;
        $206 = (144216 + ($205<<2)|0);
        $207 = 1 << $204;
        $208 = $207 & $8;
        $209 = ($208|0)==(0);
        if ($209) {
         $210 = $207 | $8;
         HEAP32[36044] = $210;
         $$pre$i = ((($206)) + 8|0);
         $$0$i = $206;$$pre$phi$iZ2D = $$pre$i;
        } else {
         $211 = ((($206)) + 8|0);
         $212 = HEAP32[$211>>2]|0;
         $$0$i = $212;$$pre$phi$iZ2D = $211;
        }
        HEAP32[$$pre$phi$iZ2D>>2] = $203;
        $213 = ((($$0$i)) + 12|0);
        HEAP32[$213>>2] = $203;
        $214 = ((($203)) + 8|0);
        HEAP32[$214>>2] = $$0$i;
        $215 = ((($203)) + 12|0);
        HEAP32[$215>>2] = $206;
       }
       HEAP32[(144184)>>2] = $$0171$i;
       HEAP32[(144196)>>2] = $141;
      }
      $216 = ((($$0170$i)) + 8|0);
      $$0 = $216;
      STACKTOP = sp;return ($$0|0);
     } else {
      $$0192 = $6;
     }
    }
   } else {
    $$0192 = $6;
   }
  } else {
   $217 = ($0>>>0)>(4294967231);
   if ($217) {
    $$0192 = -1;
   } else {
    $218 = (($0) + 11)|0;
    $219 = $218 & -8;
    $220 = HEAP32[(144180)>>2]|0;
    $221 = ($220|0)==(0);
    if ($221) {
     $$0192 = $219;
    } else {
     $222 = (0 - ($219))|0;
     $223 = $218 >>> 8;
     $224 = ($223|0)==(0);
     if ($224) {
      $$0335$i = 0;
     } else {
      $225 = ($219>>>0)>(16777215);
      if ($225) {
       $$0335$i = 31;
      } else {
       $226 = (($223) + 1048320)|0;
       $227 = $226 >>> 16;
       $228 = $227 & 8;
       $229 = $223 << $228;
       $230 = (($229) + 520192)|0;
       $231 = $230 >>> 16;
       $232 = $231 & 4;
       $233 = $232 | $228;
       $234 = $229 << $232;
       $235 = (($234) + 245760)|0;
       $236 = $235 >>> 16;
       $237 = $236 & 2;
       $238 = $233 | $237;
       $239 = (14 - ($238))|0;
       $240 = $234 << $237;
       $241 = $240 >>> 15;
       $242 = (($239) + ($241))|0;
       $243 = $242 << 1;
       $244 = (($242) + 7)|0;
       $245 = $219 >>> $244;
       $246 = $245 & 1;
       $247 = $246 | $243;
       $$0335$i = $247;
      }
     }
     $248 = (144480 + ($$0335$i<<2)|0);
     $249 = HEAP32[$248>>2]|0;
     $250 = ($249|0)==(0|0);
     L79: do {
      if ($250) {
       $$2331$i = 0;$$3$i198 = 0;$$3326$i = $222;
       label = 61;
      } else {
       $251 = ($$0335$i|0)==(31);
       $252 = $$0335$i >>> 1;
       $253 = (25 - ($252))|0;
       $254 = $251 ? 0 : $253;
       $255 = $219 << $254;
       $$0318$i = 0;$$0323$i = $222;$$0329$i = $249;$$0336$i = $255;$$0339$i = 0;
       while(1) {
        $256 = ((($$0329$i)) + 4|0);
        $257 = HEAP32[$256>>2]|0;
        $258 = $257 & -8;
        $259 = (($258) - ($219))|0;
        $260 = ($259>>>0)<($$0323$i>>>0);
        if ($260) {
         $261 = ($259|0)==(0);
         if ($261) {
          $$415$i$ph = $$0329$i;$$432714$i$ph = 0;$$533413$i$ph = $$0329$i;
          label = 65;
          break L79;
         } else {
          $$1319$i = $$0329$i;$$1324$i = $259;
         }
        } else {
         $$1319$i = $$0318$i;$$1324$i = $$0323$i;
        }
        $262 = ((($$0329$i)) + 20|0);
        $263 = HEAP32[$262>>2]|0;
        $264 = $$0336$i >>> 31;
        $265 = (((($$0329$i)) + 16|0) + ($264<<2)|0);
        $266 = HEAP32[$265>>2]|0;
        $267 = ($263|0)==(0|0);
        $268 = ($263|0)==($266|0);
        $or$cond1$i197 = $267 | $268;
        $$1340$i = $or$cond1$i197 ? $$0339$i : $263;
        $269 = ($266|0)==(0|0);
        $spec$select4$i = $$0336$i << 1;
        if ($269) {
         $$2331$i = $$1340$i;$$3$i198 = $$1319$i;$$3326$i = $$1324$i;
         label = 61;
         break;
        } else {
         $$0318$i = $$1319$i;$$0323$i = $$1324$i;$$0329$i = $266;$$0336$i = $spec$select4$i;$$0339$i = $$1340$i;
        }
       }
      }
     } while(0);
     if ((label|0) == 61) {
      $270 = ($$2331$i|0)==(0|0);
      $271 = ($$3$i198|0)==(0|0);
      $or$cond$i199 = $270 & $271;
      if ($or$cond$i199) {
       $272 = 2 << $$0335$i;
       $273 = (0 - ($272))|0;
       $274 = $272 | $273;
       $275 = $274 & $220;
       $276 = ($275|0)==(0);
       if ($276) {
        $$0192 = $219;
        break;
       }
       $277 = (0 - ($275))|0;
       $278 = $275 & $277;
       $279 = (($278) + -1)|0;
       $280 = $279 >>> 12;
       $281 = $280 & 16;
       $282 = $279 >>> $281;
       $283 = $282 >>> 5;
       $284 = $283 & 8;
       $285 = $284 | $281;
       $286 = $282 >>> $284;
       $287 = $286 >>> 2;
       $288 = $287 & 4;
       $289 = $285 | $288;
       $290 = $286 >>> $288;
       $291 = $290 >>> 1;
       $292 = $291 & 2;
       $293 = $289 | $292;
       $294 = $290 >>> $292;
       $295 = $294 >>> 1;
       $296 = $295 & 1;
       $297 = $293 | $296;
       $298 = $294 >>> $296;
       $299 = (($297) + ($298))|0;
       $300 = (144480 + ($299<<2)|0);
       $301 = HEAP32[$300>>2]|0;
       $$3$i198211 = 0;$$4333$i = $301;
      } else {
       $$3$i198211 = $$3$i198;$$4333$i = $$2331$i;
      }
      $302 = ($$4333$i|0)==(0|0);
      if ($302) {
       $$4$lcssa$i = $$3$i198211;$$4327$lcssa$i = $$3326$i;
      } else {
       $$415$i$ph = $$3$i198211;$$432714$i$ph = $$3326$i;$$533413$i$ph = $$4333$i;
       label = 65;
      }
     }
     if ((label|0) == 65) {
      $$415$i = $$415$i$ph;$$432714$i = $$432714$i$ph;$$533413$i = $$533413$i$ph;
      while(1) {
       $303 = ((($$533413$i)) + 4|0);
       $304 = HEAP32[$303>>2]|0;
       $305 = $304 & -8;
       $306 = (($305) - ($219))|0;
       $307 = ($306>>>0)<($$432714$i>>>0);
       $spec$select$i201 = $307 ? $306 : $$432714$i;
       $spec$select2$i = $307 ? $$533413$i : $$415$i;
       $308 = ((($$533413$i)) + 16|0);
       $309 = HEAP32[$308>>2]|0;
       $310 = ($309|0)==(0|0);
       if ($310) {
        $311 = ((($$533413$i)) + 20|0);
        $312 = HEAP32[$311>>2]|0;
        $314 = $312;
       } else {
        $314 = $309;
       }
       $313 = ($314|0)==(0|0);
       if ($313) {
        $$4$lcssa$i = $spec$select2$i;$$4327$lcssa$i = $spec$select$i201;
        break;
       } else {
        $$415$i = $spec$select2$i;$$432714$i = $spec$select$i201;$$533413$i = $314;
       }
      }
     }
     $315 = ($$4$lcssa$i|0)==(0|0);
     if ($315) {
      $$0192 = $219;
     } else {
      $316 = HEAP32[(144184)>>2]|0;
      $317 = (($316) - ($219))|0;
      $318 = ($$4327$lcssa$i>>>0)<($317>>>0);
      if ($318) {
       $319 = (($$4$lcssa$i) + ($219)|0);
       $320 = ($319>>>0)>($$4$lcssa$i>>>0);
       if ($320) {
        $321 = ((($$4$lcssa$i)) + 24|0);
        $322 = HEAP32[$321>>2]|0;
        $323 = ((($$4$lcssa$i)) + 12|0);
        $324 = HEAP32[$323>>2]|0;
        $325 = ($324|0)==($$4$lcssa$i|0);
        do {
         if ($325) {
          $330 = ((($$4$lcssa$i)) + 20|0);
          $331 = HEAP32[$330>>2]|0;
          $332 = ($331|0)==(0|0);
          if ($332) {
           $333 = ((($$4$lcssa$i)) + 16|0);
           $334 = HEAP32[$333>>2]|0;
           $335 = ($334|0)==(0|0);
           if ($335) {
            $$3348$i = 0;
            break;
           } else {
            $$1346$i$ph = $334;$$1350$i$ph = $333;
           }
          } else {
           $$1346$i$ph = $331;$$1350$i$ph = $330;
          }
          $$1346$i = $$1346$i$ph;$$1350$i = $$1350$i$ph;
          while(1) {
           $336 = ((($$1346$i)) + 20|0);
           $337 = HEAP32[$336>>2]|0;
           $338 = ($337|0)==(0|0);
           if ($338) {
            $339 = ((($$1346$i)) + 16|0);
            $340 = HEAP32[$339>>2]|0;
            $341 = ($340|0)==(0|0);
            if ($341) {
             break;
            } else {
             $$1346$i$be = $340;$$1350$i$be = $339;
            }
           } else {
            $$1346$i$be = $337;$$1350$i$be = $336;
           }
           $$1346$i = $$1346$i$be;$$1350$i = $$1350$i$be;
          }
          HEAP32[$$1350$i>>2] = 0;
          $$3348$i = $$1346$i;
         } else {
          $326 = ((($$4$lcssa$i)) + 8|0);
          $327 = HEAP32[$326>>2]|0;
          $328 = ((($327)) + 12|0);
          HEAP32[$328>>2] = $324;
          $329 = ((($324)) + 8|0);
          HEAP32[$329>>2] = $327;
          $$3348$i = $324;
         }
        } while(0);
        $342 = ($322|0)==(0|0);
        do {
         if ($342) {
          $425 = $220;
         } else {
          $343 = ((($$4$lcssa$i)) + 28|0);
          $344 = HEAP32[$343>>2]|0;
          $345 = (144480 + ($344<<2)|0);
          $346 = HEAP32[$345>>2]|0;
          $347 = ($$4$lcssa$i|0)==($346|0);
          if ($347) {
           HEAP32[$345>>2] = $$3348$i;
           $cond$i203 = ($$3348$i|0)==(0|0);
           if ($cond$i203) {
            $348 = 1 << $344;
            $349 = $348 ^ -1;
            $350 = $220 & $349;
            HEAP32[(144180)>>2] = $350;
            $425 = $350;
            break;
           }
          } else {
           $351 = ((($322)) + 16|0);
           $352 = HEAP32[$351>>2]|0;
           $353 = ($352|0)==($$4$lcssa$i|0);
           $354 = ((($322)) + 20|0);
           $$sink320 = $353 ? $351 : $354;
           HEAP32[$$sink320>>2] = $$3348$i;
           $355 = ($$3348$i|0)==(0|0);
           if ($355) {
            $425 = $220;
            break;
           }
          }
          $356 = ((($$3348$i)) + 24|0);
          HEAP32[$356>>2] = $322;
          $357 = ((($$4$lcssa$i)) + 16|0);
          $358 = HEAP32[$357>>2]|0;
          $359 = ($358|0)==(0|0);
          if (!($359)) {
           $360 = ((($$3348$i)) + 16|0);
           HEAP32[$360>>2] = $358;
           $361 = ((($358)) + 24|0);
           HEAP32[$361>>2] = $$3348$i;
          }
          $362 = ((($$4$lcssa$i)) + 20|0);
          $363 = HEAP32[$362>>2]|0;
          $364 = ($363|0)==(0|0);
          if ($364) {
           $425 = $220;
          } else {
           $365 = ((($$3348$i)) + 20|0);
           HEAP32[$365>>2] = $363;
           $366 = ((($363)) + 24|0);
           HEAP32[$366>>2] = $$3348$i;
           $425 = $220;
          }
         }
        } while(0);
        $367 = ($$4327$lcssa$i>>>0)<(16);
        L128: do {
         if ($367) {
          $368 = (($$4327$lcssa$i) + ($219))|0;
          $369 = $368 | 3;
          $370 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$370>>2] = $369;
          $371 = (($$4$lcssa$i) + ($368)|0);
          $372 = ((($371)) + 4|0);
          $373 = HEAP32[$372>>2]|0;
          $374 = $373 | 1;
          HEAP32[$372>>2] = $374;
         } else {
          $375 = $219 | 3;
          $376 = ((($$4$lcssa$i)) + 4|0);
          HEAP32[$376>>2] = $375;
          $377 = $$4327$lcssa$i | 1;
          $378 = ((($319)) + 4|0);
          HEAP32[$378>>2] = $377;
          $379 = (($319) + ($$4327$lcssa$i)|0);
          HEAP32[$379>>2] = $$4327$lcssa$i;
          $380 = $$4327$lcssa$i >>> 3;
          $381 = ($$4327$lcssa$i>>>0)<(256);
          if ($381) {
           $382 = $380 << 1;
           $383 = (144216 + ($382<<2)|0);
           $384 = HEAP32[36044]|0;
           $385 = 1 << $380;
           $386 = $384 & $385;
           $387 = ($386|0)==(0);
           if ($387) {
            $388 = $384 | $385;
            HEAP32[36044] = $388;
            $$pre$i204 = ((($383)) + 8|0);
            $$0344$i = $383;$$pre$phi$i205Z2D = $$pre$i204;
           } else {
            $389 = ((($383)) + 8|0);
            $390 = HEAP32[$389>>2]|0;
            $$0344$i = $390;$$pre$phi$i205Z2D = $389;
           }
           HEAP32[$$pre$phi$i205Z2D>>2] = $319;
           $391 = ((($$0344$i)) + 12|0);
           HEAP32[$391>>2] = $319;
           $392 = ((($319)) + 8|0);
           HEAP32[$392>>2] = $$0344$i;
           $393 = ((($319)) + 12|0);
           HEAP32[$393>>2] = $383;
           break;
          }
          $394 = $$4327$lcssa$i >>> 8;
          $395 = ($394|0)==(0);
          if ($395) {
           $$0338$i = 0;
          } else {
           $396 = ($$4327$lcssa$i>>>0)>(16777215);
           if ($396) {
            $$0338$i = 31;
           } else {
            $397 = (($394) + 1048320)|0;
            $398 = $397 >>> 16;
            $399 = $398 & 8;
            $400 = $394 << $399;
            $401 = (($400) + 520192)|0;
            $402 = $401 >>> 16;
            $403 = $402 & 4;
            $404 = $403 | $399;
            $405 = $400 << $403;
            $406 = (($405) + 245760)|0;
            $407 = $406 >>> 16;
            $408 = $407 & 2;
            $409 = $404 | $408;
            $410 = (14 - ($409))|0;
            $411 = $405 << $408;
            $412 = $411 >>> 15;
            $413 = (($410) + ($412))|0;
            $414 = $413 << 1;
            $415 = (($413) + 7)|0;
            $416 = $$4327$lcssa$i >>> $415;
            $417 = $416 & 1;
            $418 = $417 | $414;
            $$0338$i = $418;
           }
          }
          $419 = (144480 + ($$0338$i<<2)|0);
          $420 = ((($319)) + 28|0);
          HEAP32[$420>>2] = $$0338$i;
          $421 = ((($319)) + 16|0);
          $422 = ((($421)) + 4|0);
          HEAP32[$422>>2] = 0;
          HEAP32[$421>>2] = 0;
          $423 = 1 << $$0338$i;
          $424 = $425 & $423;
          $426 = ($424|0)==(0);
          if ($426) {
           $427 = $425 | $423;
           HEAP32[(144180)>>2] = $427;
           HEAP32[$419>>2] = $319;
           $428 = ((($319)) + 24|0);
           HEAP32[$428>>2] = $419;
           $429 = ((($319)) + 12|0);
           HEAP32[$429>>2] = $319;
           $430 = ((($319)) + 8|0);
           HEAP32[$430>>2] = $319;
           break;
          }
          $431 = HEAP32[$419>>2]|0;
          $432 = ((($431)) + 4|0);
          $433 = HEAP32[$432>>2]|0;
          $434 = $433 & -8;
          $435 = ($434|0)==($$4327$lcssa$i|0);
          L145: do {
           if ($435) {
            $$0321$lcssa$i = $431;
           } else {
            $436 = ($$0338$i|0)==(31);
            $437 = $$0338$i >>> 1;
            $438 = (25 - ($437))|0;
            $439 = $436 ? 0 : $438;
            $440 = $$4327$lcssa$i << $439;
            $$032012$i = $440;$$032111$i = $431;
            while(1) {
             $447 = $$032012$i >>> 31;
             $448 = (((($$032111$i)) + 16|0) + ($447<<2)|0);
             $443 = HEAP32[$448>>2]|0;
             $449 = ($443|0)==(0|0);
             if ($449) {
              break;
             }
             $441 = $$032012$i << 1;
             $442 = ((($443)) + 4|0);
             $444 = HEAP32[$442>>2]|0;
             $445 = $444 & -8;
             $446 = ($445|0)==($$4327$lcssa$i|0);
             if ($446) {
              $$0321$lcssa$i = $443;
              break L145;
             } else {
              $$032012$i = $441;$$032111$i = $443;
             }
            }
            HEAP32[$448>>2] = $319;
            $450 = ((($319)) + 24|0);
            HEAP32[$450>>2] = $$032111$i;
            $451 = ((($319)) + 12|0);
            HEAP32[$451>>2] = $319;
            $452 = ((($319)) + 8|0);
            HEAP32[$452>>2] = $319;
            break L128;
           }
          } while(0);
          $453 = ((($$0321$lcssa$i)) + 8|0);
          $454 = HEAP32[$453>>2]|0;
          $455 = ((($454)) + 12|0);
          HEAP32[$455>>2] = $319;
          HEAP32[$453>>2] = $319;
          $456 = ((($319)) + 8|0);
          HEAP32[$456>>2] = $454;
          $457 = ((($319)) + 12|0);
          HEAP32[$457>>2] = $$0321$lcssa$i;
          $458 = ((($319)) + 24|0);
          HEAP32[$458>>2] = 0;
         }
        } while(0);
        $459 = ((($$4$lcssa$i)) + 8|0);
        $$0 = $459;
        STACKTOP = sp;return ($$0|0);
       } else {
        $$0192 = $219;
       }
      } else {
       $$0192 = $219;
      }
     }
    }
   }
  }
 } while(0);
 $460 = HEAP32[(144184)>>2]|0;
 $461 = ($460>>>0)<($$0192>>>0);
 if (!($461)) {
  $462 = (($460) - ($$0192))|0;
  $463 = HEAP32[(144196)>>2]|0;
  $464 = ($462>>>0)>(15);
  if ($464) {
   $465 = (($463) + ($$0192)|0);
   HEAP32[(144196)>>2] = $465;
   HEAP32[(144184)>>2] = $462;
   $466 = $462 | 1;
   $467 = ((($465)) + 4|0);
   HEAP32[$467>>2] = $466;
   $468 = (($463) + ($460)|0);
   HEAP32[$468>>2] = $462;
   $469 = $$0192 | 3;
   $470 = ((($463)) + 4|0);
   HEAP32[$470>>2] = $469;
  } else {
   HEAP32[(144184)>>2] = 0;
   HEAP32[(144196)>>2] = 0;
   $471 = $460 | 3;
   $472 = ((($463)) + 4|0);
   HEAP32[$472>>2] = $471;
   $473 = (($463) + ($460)|0);
   $474 = ((($473)) + 4|0);
   $475 = HEAP32[$474>>2]|0;
   $476 = $475 | 1;
   HEAP32[$474>>2] = $476;
  }
  $477 = ((($463)) + 8|0);
  $$0 = $477;
  STACKTOP = sp;return ($$0|0);
 }
 $478 = HEAP32[(144188)>>2]|0;
 $479 = ($478>>>0)>($$0192>>>0);
 if ($479) {
  $480 = (($478) - ($$0192))|0;
  HEAP32[(144188)>>2] = $480;
  $481 = HEAP32[(144200)>>2]|0;
  $482 = (($481) + ($$0192)|0);
  HEAP32[(144200)>>2] = $482;
  $483 = $480 | 1;
  $484 = ((($482)) + 4|0);
  HEAP32[$484>>2] = $483;
  $485 = $$0192 | 3;
  $486 = ((($481)) + 4|0);
  HEAP32[$486>>2] = $485;
  $487 = ((($481)) + 8|0);
  $$0 = $487;
  STACKTOP = sp;return ($$0|0);
 }
 $488 = HEAP32[36162]|0;
 $489 = ($488|0)==(0);
 if ($489) {
  HEAP32[(144656)>>2] = 4096;
  HEAP32[(144652)>>2] = 4096;
  HEAP32[(144660)>>2] = -1;
  HEAP32[(144664)>>2] = -1;
  HEAP32[(144668)>>2] = 0;
  HEAP32[(144620)>>2] = 0;
  $490 = $1;
  $491 = $490 & -16;
  $492 = $491 ^ 1431655768;
  HEAP32[36162] = $492;
  $496 = 4096;
 } else {
  $$pre$i195 = HEAP32[(144656)>>2]|0;
  $496 = $$pre$i195;
 }
 $493 = (($$0192) + 48)|0;
 $494 = (($$0192) + 47)|0;
 $495 = (($496) + ($494))|0;
 $497 = (0 - ($496))|0;
 $498 = $495 & $497;
 $499 = ($498>>>0)>($$0192>>>0);
 if (!($499)) {
  $$0 = 0;
  STACKTOP = sp;return ($$0|0);
 }
 $500 = HEAP32[(144616)>>2]|0;
 $501 = ($500|0)==(0);
 if (!($501)) {
  $502 = HEAP32[(144608)>>2]|0;
  $503 = (($502) + ($498))|0;
  $504 = ($503>>>0)<=($502>>>0);
  $505 = ($503>>>0)>($500>>>0);
  $or$cond1$i = $504 | $505;
  if ($or$cond1$i) {
   $$0 = 0;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $506 = HEAP32[(144620)>>2]|0;
 $507 = $506 & 4;
 $508 = ($507|0)==(0);
 L178: do {
  if ($508) {
   $509 = HEAP32[(144200)>>2]|0;
   $510 = ($509|0)==(0|0);
   L180: do {
    if ($510) {
     label = 128;
    } else {
     $$0$i20$i = (144624);
     while(1) {
      $511 = HEAP32[$$0$i20$i>>2]|0;
      $512 = ($511>>>0)>($509>>>0);
      if (!($512)) {
       $513 = ((($$0$i20$i)) + 4|0);
       $514 = HEAP32[$513>>2]|0;
       $515 = (($511) + ($514)|0);
       $516 = ($515>>>0)>($509>>>0);
       if ($516) {
        break;
       }
      }
      $517 = ((($$0$i20$i)) + 8|0);
      $518 = HEAP32[$517>>2]|0;
      $519 = ($518|0)==(0|0);
      if ($519) {
       label = 128;
       break L180;
      } else {
       $$0$i20$i = $518;
      }
     }
     $542 = (($495) - ($478))|0;
     $543 = $542 & $497;
     $544 = ($543>>>0)<(2147483647);
     if ($544) {
      $545 = ((($$0$i20$i)) + 4|0);
      $546 = (_sbrk(($543|0))|0);
      $547 = HEAP32[$$0$i20$i>>2]|0;
      $548 = HEAP32[$545>>2]|0;
      $549 = (($547) + ($548)|0);
      $550 = ($546|0)==($549|0);
      if ($550) {
       $551 = ($546|0)==((-1)|0);
       if ($551) {
        $$2234243136$i = $543;
       } else {
        $$723947$i = $543;$$748$i = $546;
        label = 145;
        break L178;
       }
      } else {
       $$2247$ph$i = $546;$$2253$ph$i = $543;
       label = 136;
      }
     } else {
      $$2234243136$i = 0;
     }
    }
   } while(0);
   do {
    if ((label|0) == 128) {
     $520 = (_sbrk(0)|0);
     $521 = ($520|0)==((-1)|0);
     if ($521) {
      $$2234243136$i = 0;
     } else {
      $522 = $520;
      $523 = HEAP32[(144652)>>2]|0;
      $524 = (($523) + -1)|0;
      $525 = $524 & $522;
      $526 = ($525|0)==(0);
      $527 = (($524) + ($522))|0;
      $528 = (0 - ($523))|0;
      $529 = $527 & $528;
      $530 = (($529) - ($522))|0;
      $531 = $526 ? 0 : $530;
      $spec$select49$i = (($531) + ($498))|0;
      $532 = HEAP32[(144608)>>2]|0;
      $533 = (($spec$select49$i) + ($532))|0;
      $534 = ($spec$select49$i>>>0)>($$0192>>>0);
      $535 = ($spec$select49$i>>>0)<(2147483647);
      $or$cond$i = $534 & $535;
      if ($or$cond$i) {
       $536 = HEAP32[(144616)>>2]|0;
       $537 = ($536|0)==(0);
       if (!($537)) {
        $538 = ($533>>>0)<=($532>>>0);
        $539 = ($533>>>0)>($536>>>0);
        $or$cond2$i = $538 | $539;
        if ($or$cond2$i) {
         $$2234243136$i = 0;
         break;
        }
       }
       $540 = (_sbrk(($spec$select49$i|0))|0);
       $541 = ($540|0)==($520|0);
       if ($541) {
        $$723947$i = $spec$select49$i;$$748$i = $520;
        label = 145;
        break L178;
       } else {
        $$2247$ph$i = $540;$$2253$ph$i = $spec$select49$i;
        label = 136;
       }
      } else {
       $$2234243136$i = 0;
      }
     }
    }
   } while(0);
   do {
    if ((label|0) == 136) {
     $552 = (0 - ($$2253$ph$i))|0;
     $553 = ($$2247$ph$i|0)!=((-1)|0);
     $554 = ($$2253$ph$i>>>0)<(2147483647);
     $or$cond7$i = $554 & $553;
     $555 = ($493>>>0)>($$2253$ph$i>>>0);
     $or$cond6$i = $555 & $or$cond7$i;
     if (!($or$cond6$i)) {
      $565 = ($$2247$ph$i|0)==((-1)|0);
      if ($565) {
       $$2234243136$i = 0;
       break;
      } else {
       $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
       label = 145;
       break L178;
      }
     }
     $556 = HEAP32[(144656)>>2]|0;
     $557 = (($494) - ($$2253$ph$i))|0;
     $558 = (($557) + ($556))|0;
     $559 = (0 - ($556))|0;
     $560 = $558 & $559;
     $561 = ($560>>>0)<(2147483647);
     if (!($561)) {
      $$723947$i = $$2253$ph$i;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
     $562 = (_sbrk(($560|0))|0);
     $563 = ($562|0)==((-1)|0);
     if ($563) {
      (_sbrk(($552|0))|0);
      $$2234243136$i = 0;
      break;
     } else {
      $564 = (($560) + ($$2253$ph$i))|0;
      $$723947$i = $564;$$748$i = $$2247$ph$i;
      label = 145;
      break L178;
     }
    }
   } while(0);
   $566 = HEAP32[(144620)>>2]|0;
   $567 = $566 | 4;
   HEAP32[(144620)>>2] = $567;
   $$4236$i = $$2234243136$i;
   label = 143;
  } else {
   $$4236$i = 0;
   label = 143;
  }
 } while(0);
 if ((label|0) == 143) {
  $568 = ($498>>>0)<(2147483647);
  if ($568) {
   $569 = (_sbrk(($498|0))|0);
   $570 = (_sbrk(0)|0);
   $571 = ($569|0)!=((-1)|0);
   $572 = ($570|0)!=((-1)|0);
   $or$cond5$i = $571 & $572;
   $573 = ($569>>>0)<($570>>>0);
   $or$cond8$i = $573 & $or$cond5$i;
   $574 = $570;
   $575 = $569;
   $576 = (($574) - ($575))|0;
   $577 = (($$0192) + 40)|0;
   $578 = ($576>>>0)>($577>>>0);
   $spec$select9$i = $578 ? $576 : $$4236$i;
   $or$cond8$not$i = $or$cond8$i ^ 1;
   $579 = ($569|0)==((-1)|0);
   $not$$i = $578 ^ 1;
   $580 = $579 | $not$$i;
   $or$cond50$i = $580 | $or$cond8$not$i;
   if (!($or$cond50$i)) {
    $$723947$i = $spec$select9$i;$$748$i = $569;
    label = 145;
   }
  }
 }
 if ((label|0) == 145) {
  $581 = HEAP32[(144608)>>2]|0;
  $582 = (($581) + ($$723947$i))|0;
  HEAP32[(144608)>>2] = $582;
  $583 = HEAP32[(144612)>>2]|0;
  $584 = ($582>>>0)>($583>>>0);
  if ($584) {
   HEAP32[(144612)>>2] = $582;
  }
  $585 = HEAP32[(144200)>>2]|0;
  $586 = ($585|0)==(0|0);
  L215: do {
   if ($586) {
    $587 = HEAP32[(144192)>>2]|0;
    $588 = ($587|0)==(0|0);
    $589 = ($$748$i>>>0)<($587>>>0);
    $or$cond11$i = $588 | $589;
    if ($or$cond11$i) {
     HEAP32[(144192)>>2] = $$748$i;
    }
    HEAP32[(144624)>>2] = $$748$i;
    HEAP32[(144628)>>2] = $$723947$i;
    HEAP32[(144636)>>2] = 0;
    $590 = HEAP32[36162]|0;
    HEAP32[(144212)>>2] = $590;
    HEAP32[(144208)>>2] = -1;
    HEAP32[(144228)>>2] = (144216);
    HEAP32[(144224)>>2] = (144216);
    HEAP32[(144236)>>2] = (144224);
    HEAP32[(144232)>>2] = (144224);
    HEAP32[(144244)>>2] = (144232);
    HEAP32[(144240)>>2] = (144232);
    HEAP32[(144252)>>2] = (144240);
    HEAP32[(144248)>>2] = (144240);
    HEAP32[(144260)>>2] = (144248);
    HEAP32[(144256)>>2] = (144248);
    HEAP32[(144268)>>2] = (144256);
    HEAP32[(144264)>>2] = (144256);
    HEAP32[(144276)>>2] = (144264);
    HEAP32[(144272)>>2] = (144264);
    HEAP32[(144284)>>2] = (144272);
    HEAP32[(144280)>>2] = (144272);
    HEAP32[(144292)>>2] = (144280);
    HEAP32[(144288)>>2] = (144280);
    HEAP32[(144300)>>2] = (144288);
    HEAP32[(144296)>>2] = (144288);
    HEAP32[(144308)>>2] = (144296);
    HEAP32[(144304)>>2] = (144296);
    HEAP32[(144316)>>2] = (144304);
    HEAP32[(144312)>>2] = (144304);
    HEAP32[(144324)>>2] = (144312);
    HEAP32[(144320)>>2] = (144312);
    HEAP32[(144332)>>2] = (144320);
    HEAP32[(144328)>>2] = (144320);
    HEAP32[(144340)>>2] = (144328);
    HEAP32[(144336)>>2] = (144328);
    HEAP32[(144348)>>2] = (144336);
    HEAP32[(144344)>>2] = (144336);
    HEAP32[(144356)>>2] = (144344);
    HEAP32[(144352)>>2] = (144344);
    HEAP32[(144364)>>2] = (144352);
    HEAP32[(144360)>>2] = (144352);
    HEAP32[(144372)>>2] = (144360);
    HEAP32[(144368)>>2] = (144360);
    HEAP32[(144380)>>2] = (144368);
    HEAP32[(144376)>>2] = (144368);
    HEAP32[(144388)>>2] = (144376);
    HEAP32[(144384)>>2] = (144376);
    HEAP32[(144396)>>2] = (144384);
    HEAP32[(144392)>>2] = (144384);
    HEAP32[(144404)>>2] = (144392);
    HEAP32[(144400)>>2] = (144392);
    HEAP32[(144412)>>2] = (144400);
    HEAP32[(144408)>>2] = (144400);
    HEAP32[(144420)>>2] = (144408);
    HEAP32[(144416)>>2] = (144408);
    HEAP32[(144428)>>2] = (144416);
    HEAP32[(144424)>>2] = (144416);
    HEAP32[(144436)>>2] = (144424);
    HEAP32[(144432)>>2] = (144424);
    HEAP32[(144444)>>2] = (144432);
    HEAP32[(144440)>>2] = (144432);
    HEAP32[(144452)>>2] = (144440);
    HEAP32[(144448)>>2] = (144440);
    HEAP32[(144460)>>2] = (144448);
    HEAP32[(144456)>>2] = (144448);
    HEAP32[(144468)>>2] = (144456);
    HEAP32[(144464)>>2] = (144456);
    HEAP32[(144476)>>2] = (144464);
    HEAP32[(144472)>>2] = (144464);
    $591 = (($$723947$i) + -40)|0;
    $592 = ((($$748$i)) + 8|0);
    $593 = $592;
    $594 = $593 & 7;
    $595 = ($594|0)==(0);
    $596 = (0 - ($593))|0;
    $597 = $596 & 7;
    $598 = $595 ? 0 : $597;
    $599 = (($$748$i) + ($598)|0);
    $600 = (($591) - ($598))|0;
    HEAP32[(144200)>>2] = $599;
    HEAP32[(144188)>>2] = $600;
    $601 = $600 | 1;
    $602 = ((($599)) + 4|0);
    HEAP32[$602>>2] = $601;
    $603 = (($$748$i) + ($591)|0);
    $604 = ((($603)) + 4|0);
    HEAP32[$604>>2] = 40;
    $605 = HEAP32[(144664)>>2]|0;
    HEAP32[(144204)>>2] = $605;
   } else {
    $$024372$i = (144624);
    while(1) {
     $606 = HEAP32[$$024372$i>>2]|0;
     $607 = ((($$024372$i)) + 4|0);
     $608 = HEAP32[$607>>2]|0;
     $609 = (($606) + ($608)|0);
     $610 = ($$748$i|0)==($609|0);
     if ($610) {
      label = 154;
      break;
     }
     $611 = ((($$024372$i)) + 8|0);
     $612 = HEAP32[$611>>2]|0;
     $613 = ($612|0)==(0|0);
     if ($613) {
      break;
     } else {
      $$024372$i = $612;
     }
    }
    if ((label|0) == 154) {
     $614 = ((($$024372$i)) + 4|0);
     $615 = ((($$024372$i)) + 12|0);
     $616 = HEAP32[$615>>2]|0;
     $617 = $616 & 8;
     $618 = ($617|0)==(0);
     if ($618) {
      $619 = ($606>>>0)<=($585>>>0);
      $620 = ($$748$i>>>0)>($585>>>0);
      $or$cond51$i = $620 & $619;
      if ($or$cond51$i) {
       $621 = (($608) + ($$723947$i))|0;
       HEAP32[$614>>2] = $621;
       $622 = HEAP32[(144188)>>2]|0;
       $623 = (($622) + ($$723947$i))|0;
       $624 = ((($585)) + 8|0);
       $625 = $624;
       $626 = $625 & 7;
       $627 = ($626|0)==(0);
       $628 = (0 - ($625))|0;
       $629 = $628 & 7;
       $630 = $627 ? 0 : $629;
       $631 = (($585) + ($630)|0);
       $632 = (($623) - ($630))|0;
       HEAP32[(144200)>>2] = $631;
       HEAP32[(144188)>>2] = $632;
       $633 = $632 | 1;
       $634 = ((($631)) + 4|0);
       HEAP32[$634>>2] = $633;
       $635 = (($585) + ($623)|0);
       $636 = ((($635)) + 4|0);
       HEAP32[$636>>2] = 40;
       $637 = HEAP32[(144664)>>2]|0;
       HEAP32[(144204)>>2] = $637;
       break;
      }
     }
    }
    $638 = HEAP32[(144192)>>2]|0;
    $639 = ($$748$i>>>0)<($638>>>0);
    if ($639) {
     HEAP32[(144192)>>2] = $$748$i;
    }
    $640 = (($$748$i) + ($$723947$i)|0);
    $$124471$i = (144624);
    while(1) {
     $641 = HEAP32[$$124471$i>>2]|0;
     $642 = ($641|0)==($640|0);
     if ($642) {
      label = 162;
      break;
     }
     $643 = ((($$124471$i)) + 8|0);
     $644 = HEAP32[$643>>2]|0;
     $645 = ($644|0)==(0|0);
     if ($645) {
      break;
     } else {
      $$124471$i = $644;
     }
    }
    if ((label|0) == 162) {
     $646 = ((($$124471$i)) + 12|0);
     $647 = HEAP32[$646>>2]|0;
     $648 = $647 & 8;
     $649 = ($648|0)==(0);
     if ($649) {
      HEAP32[$$124471$i>>2] = $$748$i;
      $650 = ((($$124471$i)) + 4|0);
      $651 = HEAP32[$650>>2]|0;
      $652 = (($651) + ($$723947$i))|0;
      HEAP32[$650>>2] = $652;
      $653 = ((($$748$i)) + 8|0);
      $654 = $653;
      $655 = $654 & 7;
      $656 = ($655|0)==(0);
      $657 = (0 - ($654))|0;
      $658 = $657 & 7;
      $659 = $656 ? 0 : $658;
      $660 = (($$748$i) + ($659)|0);
      $661 = ((($640)) + 8|0);
      $662 = $661;
      $663 = $662 & 7;
      $664 = ($663|0)==(0);
      $665 = (0 - ($662))|0;
      $666 = $665 & 7;
      $667 = $664 ? 0 : $666;
      $668 = (($640) + ($667)|0);
      $669 = $668;
      $670 = $660;
      $671 = (($669) - ($670))|0;
      $672 = (($660) + ($$0192)|0);
      $673 = (($671) - ($$0192))|0;
      $674 = $$0192 | 3;
      $675 = ((($660)) + 4|0);
      HEAP32[$675>>2] = $674;
      $676 = ($585|0)==($668|0);
      L238: do {
       if ($676) {
        $677 = HEAP32[(144188)>>2]|0;
        $678 = (($677) + ($673))|0;
        HEAP32[(144188)>>2] = $678;
        HEAP32[(144200)>>2] = $672;
        $679 = $678 | 1;
        $680 = ((($672)) + 4|0);
        HEAP32[$680>>2] = $679;
       } else {
        $681 = HEAP32[(144196)>>2]|0;
        $682 = ($681|0)==($668|0);
        if ($682) {
         $683 = HEAP32[(144184)>>2]|0;
         $684 = (($683) + ($673))|0;
         HEAP32[(144184)>>2] = $684;
         HEAP32[(144196)>>2] = $672;
         $685 = $684 | 1;
         $686 = ((($672)) + 4|0);
         HEAP32[$686>>2] = $685;
         $687 = (($672) + ($684)|0);
         HEAP32[$687>>2] = $684;
         break;
        }
        $688 = ((($668)) + 4|0);
        $689 = HEAP32[$688>>2]|0;
        $690 = $689 & 3;
        $691 = ($690|0)==(1);
        if ($691) {
         $692 = $689 & -8;
         $693 = $689 >>> 3;
         $694 = ($689>>>0)<(256);
         L246: do {
          if ($694) {
           $695 = ((($668)) + 8|0);
           $696 = HEAP32[$695>>2]|0;
           $697 = ((($668)) + 12|0);
           $698 = HEAP32[$697>>2]|0;
           $699 = ($698|0)==($696|0);
           if ($699) {
            $700 = 1 << $693;
            $701 = $700 ^ -1;
            $702 = HEAP32[36044]|0;
            $703 = $702 & $701;
            HEAP32[36044] = $703;
            break;
           } else {
            $704 = ((($696)) + 12|0);
            HEAP32[$704>>2] = $698;
            $705 = ((($698)) + 8|0);
            HEAP32[$705>>2] = $696;
            break;
           }
          } else {
           $706 = ((($668)) + 24|0);
           $707 = HEAP32[$706>>2]|0;
           $708 = ((($668)) + 12|0);
           $709 = HEAP32[$708>>2]|0;
           $710 = ($709|0)==($668|0);
           do {
            if ($710) {
             $715 = ((($668)) + 16|0);
             $716 = ((($715)) + 4|0);
             $717 = HEAP32[$716>>2]|0;
             $718 = ($717|0)==(0|0);
             if ($718) {
              $719 = HEAP32[$715>>2]|0;
              $720 = ($719|0)==(0|0);
              if ($720) {
               $$3$i$i = 0;
               break;
              } else {
               $$1263$i$i$ph = $719;$$1265$i$i$ph = $715;
              }
             } else {
              $$1263$i$i$ph = $717;$$1265$i$i$ph = $716;
             }
             $$1263$i$i = $$1263$i$i$ph;$$1265$i$i = $$1265$i$i$ph;
             while(1) {
              $721 = ((($$1263$i$i)) + 20|0);
              $722 = HEAP32[$721>>2]|0;
              $723 = ($722|0)==(0|0);
              if ($723) {
               $724 = ((($$1263$i$i)) + 16|0);
               $725 = HEAP32[$724>>2]|0;
               $726 = ($725|0)==(0|0);
               if ($726) {
                break;
               } else {
                $$1263$i$i$be = $725;$$1265$i$i$be = $724;
               }
              } else {
               $$1263$i$i$be = $722;$$1265$i$i$be = $721;
              }
              $$1263$i$i = $$1263$i$i$be;$$1265$i$i = $$1265$i$i$be;
             }
             HEAP32[$$1265$i$i>>2] = 0;
             $$3$i$i = $$1263$i$i;
            } else {
             $711 = ((($668)) + 8|0);
             $712 = HEAP32[$711>>2]|0;
             $713 = ((($712)) + 12|0);
             HEAP32[$713>>2] = $709;
             $714 = ((($709)) + 8|0);
             HEAP32[$714>>2] = $712;
             $$3$i$i = $709;
            }
           } while(0);
           $727 = ($707|0)==(0|0);
           if ($727) {
            break;
           }
           $728 = ((($668)) + 28|0);
           $729 = HEAP32[$728>>2]|0;
           $730 = (144480 + ($729<<2)|0);
           $731 = HEAP32[$730>>2]|0;
           $732 = ($731|0)==($668|0);
           do {
            if ($732) {
             HEAP32[$730>>2] = $$3$i$i;
             $cond$i$i = ($$3$i$i|0)==(0|0);
             if (!($cond$i$i)) {
              break;
             }
             $733 = 1 << $729;
             $734 = $733 ^ -1;
             $735 = HEAP32[(144180)>>2]|0;
             $736 = $735 & $734;
             HEAP32[(144180)>>2] = $736;
             break L246;
            } else {
             $737 = ((($707)) + 16|0);
             $738 = HEAP32[$737>>2]|0;
             $739 = ($738|0)==($668|0);
             $740 = ((($707)) + 20|0);
             $$sink321 = $739 ? $737 : $740;
             HEAP32[$$sink321>>2] = $$3$i$i;
             $741 = ($$3$i$i|0)==(0|0);
             if ($741) {
              break L246;
             }
            }
           } while(0);
           $742 = ((($$3$i$i)) + 24|0);
           HEAP32[$742>>2] = $707;
           $743 = ((($668)) + 16|0);
           $744 = HEAP32[$743>>2]|0;
           $745 = ($744|0)==(0|0);
           if (!($745)) {
            $746 = ((($$3$i$i)) + 16|0);
            HEAP32[$746>>2] = $744;
            $747 = ((($744)) + 24|0);
            HEAP32[$747>>2] = $$3$i$i;
           }
           $748 = ((($743)) + 4|0);
           $749 = HEAP32[$748>>2]|0;
           $750 = ($749|0)==(0|0);
           if ($750) {
            break;
           }
           $751 = ((($$3$i$i)) + 20|0);
           HEAP32[$751>>2] = $749;
           $752 = ((($749)) + 24|0);
           HEAP32[$752>>2] = $$3$i$i;
          }
         } while(0);
         $753 = (($668) + ($692)|0);
         $754 = (($692) + ($673))|0;
         $$0$i$i = $753;$$0259$i$i = $754;
        } else {
         $$0$i$i = $668;$$0259$i$i = $673;
        }
        $755 = ((($$0$i$i)) + 4|0);
        $756 = HEAP32[$755>>2]|0;
        $757 = $756 & -2;
        HEAP32[$755>>2] = $757;
        $758 = $$0259$i$i | 1;
        $759 = ((($672)) + 4|0);
        HEAP32[$759>>2] = $758;
        $760 = (($672) + ($$0259$i$i)|0);
        HEAP32[$760>>2] = $$0259$i$i;
        $761 = $$0259$i$i >>> 3;
        $762 = ($$0259$i$i>>>0)<(256);
        if ($762) {
         $763 = $761 << 1;
         $764 = (144216 + ($763<<2)|0);
         $765 = HEAP32[36044]|0;
         $766 = 1 << $761;
         $767 = $765 & $766;
         $768 = ($767|0)==(0);
         if ($768) {
          $769 = $765 | $766;
          HEAP32[36044] = $769;
          $$pre$i16$i = ((($764)) + 8|0);
          $$0267$i$i = $764;$$pre$phi$i17$iZ2D = $$pre$i16$i;
         } else {
          $770 = ((($764)) + 8|0);
          $771 = HEAP32[$770>>2]|0;
          $$0267$i$i = $771;$$pre$phi$i17$iZ2D = $770;
         }
         HEAP32[$$pre$phi$i17$iZ2D>>2] = $672;
         $772 = ((($$0267$i$i)) + 12|0);
         HEAP32[$772>>2] = $672;
         $773 = ((($672)) + 8|0);
         HEAP32[$773>>2] = $$0267$i$i;
         $774 = ((($672)) + 12|0);
         HEAP32[$774>>2] = $764;
         break;
        }
        $775 = $$0259$i$i >>> 8;
        $776 = ($775|0)==(0);
        do {
         if ($776) {
          $$0268$i$i = 0;
         } else {
          $777 = ($$0259$i$i>>>0)>(16777215);
          if ($777) {
           $$0268$i$i = 31;
           break;
          }
          $778 = (($775) + 1048320)|0;
          $779 = $778 >>> 16;
          $780 = $779 & 8;
          $781 = $775 << $780;
          $782 = (($781) + 520192)|0;
          $783 = $782 >>> 16;
          $784 = $783 & 4;
          $785 = $784 | $780;
          $786 = $781 << $784;
          $787 = (($786) + 245760)|0;
          $788 = $787 >>> 16;
          $789 = $788 & 2;
          $790 = $785 | $789;
          $791 = (14 - ($790))|0;
          $792 = $786 << $789;
          $793 = $792 >>> 15;
          $794 = (($791) + ($793))|0;
          $795 = $794 << 1;
          $796 = (($794) + 7)|0;
          $797 = $$0259$i$i >>> $796;
          $798 = $797 & 1;
          $799 = $798 | $795;
          $$0268$i$i = $799;
         }
        } while(0);
        $800 = (144480 + ($$0268$i$i<<2)|0);
        $801 = ((($672)) + 28|0);
        HEAP32[$801>>2] = $$0268$i$i;
        $802 = ((($672)) + 16|0);
        $803 = ((($802)) + 4|0);
        HEAP32[$803>>2] = 0;
        HEAP32[$802>>2] = 0;
        $804 = HEAP32[(144180)>>2]|0;
        $805 = 1 << $$0268$i$i;
        $806 = $804 & $805;
        $807 = ($806|0)==(0);
        if ($807) {
         $808 = $804 | $805;
         HEAP32[(144180)>>2] = $808;
         HEAP32[$800>>2] = $672;
         $809 = ((($672)) + 24|0);
         HEAP32[$809>>2] = $800;
         $810 = ((($672)) + 12|0);
         HEAP32[$810>>2] = $672;
         $811 = ((($672)) + 8|0);
         HEAP32[$811>>2] = $672;
         break;
        }
        $812 = HEAP32[$800>>2]|0;
        $813 = ((($812)) + 4|0);
        $814 = HEAP32[$813>>2]|0;
        $815 = $814 & -8;
        $816 = ($815|0)==($$0259$i$i|0);
        L291: do {
         if ($816) {
          $$0261$lcssa$i$i = $812;
         } else {
          $817 = ($$0268$i$i|0)==(31);
          $818 = $$0268$i$i >>> 1;
          $819 = (25 - ($818))|0;
          $820 = $817 ? 0 : $819;
          $821 = $$0259$i$i << $820;
          $$02604$i$i = $821;$$02613$i$i = $812;
          while(1) {
           $828 = $$02604$i$i >>> 31;
           $829 = (((($$02613$i$i)) + 16|0) + ($828<<2)|0);
           $824 = HEAP32[$829>>2]|0;
           $830 = ($824|0)==(0|0);
           if ($830) {
            break;
           }
           $822 = $$02604$i$i << 1;
           $823 = ((($824)) + 4|0);
           $825 = HEAP32[$823>>2]|0;
           $826 = $825 & -8;
           $827 = ($826|0)==($$0259$i$i|0);
           if ($827) {
            $$0261$lcssa$i$i = $824;
            break L291;
           } else {
            $$02604$i$i = $822;$$02613$i$i = $824;
           }
          }
          HEAP32[$829>>2] = $672;
          $831 = ((($672)) + 24|0);
          HEAP32[$831>>2] = $$02613$i$i;
          $832 = ((($672)) + 12|0);
          HEAP32[$832>>2] = $672;
          $833 = ((($672)) + 8|0);
          HEAP32[$833>>2] = $672;
          break L238;
         }
        } while(0);
        $834 = ((($$0261$lcssa$i$i)) + 8|0);
        $835 = HEAP32[$834>>2]|0;
        $836 = ((($835)) + 12|0);
        HEAP32[$836>>2] = $672;
        HEAP32[$834>>2] = $672;
        $837 = ((($672)) + 8|0);
        HEAP32[$837>>2] = $835;
        $838 = ((($672)) + 12|0);
        HEAP32[$838>>2] = $$0261$lcssa$i$i;
        $839 = ((($672)) + 24|0);
        HEAP32[$839>>2] = 0;
       }
      } while(0);
      $968 = ((($660)) + 8|0);
      $$0 = $968;
      STACKTOP = sp;return ($$0|0);
     }
    }
    $$0$i$i$i = (144624);
    while(1) {
     $840 = HEAP32[$$0$i$i$i>>2]|0;
     $841 = ($840>>>0)>($585>>>0);
     if (!($841)) {
      $842 = ((($$0$i$i$i)) + 4|0);
      $843 = HEAP32[$842>>2]|0;
      $844 = (($840) + ($843)|0);
      $845 = ($844>>>0)>($585>>>0);
      if ($845) {
       break;
      }
     }
     $846 = ((($$0$i$i$i)) + 8|0);
     $847 = HEAP32[$846>>2]|0;
     $$0$i$i$i = $847;
    }
    $848 = ((($844)) + -47|0);
    $849 = ((($848)) + 8|0);
    $850 = $849;
    $851 = $850 & 7;
    $852 = ($851|0)==(0);
    $853 = (0 - ($850))|0;
    $854 = $853 & 7;
    $855 = $852 ? 0 : $854;
    $856 = (($848) + ($855)|0);
    $857 = ((($585)) + 16|0);
    $858 = ($856>>>0)<($857>>>0);
    $859 = $858 ? $585 : $856;
    $860 = ((($859)) + 8|0);
    $861 = ((($859)) + 24|0);
    $862 = (($$723947$i) + -40)|0;
    $863 = ((($$748$i)) + 8|0);
    $864 = $863;
    $865 = $864 & 7;
    $866 = ($865|0)==(0);
    $867 = (0 - ($864))|0;
    $868 = $867 & 7;
    $869 = $866 ? 0 : $868;
    $870 = (($$748$i) + ($869)|0);
    $871 = (($862) - ($869))|0;
    HEAP32[(144200)>>2] = $870;
    HEAP32[(144188)>>2] = $871;
    $872 = $871 | 1;
    $873 = ((($870)) + 4|0);
    HEAP32[$873>>2] = $872;
    $874 = (($$748$i) + ($862)|0);
    $875 = ((($874)) + 4|0);
    HEAP32[$875>>2] = 40;
    $876 = HEAP32[(144664)>>2]|0;
    HEAP32[(144204)>>2] = $876;
    $877 = ((($859)) + 4|0);
    HEAP32[$877>>2] = 27;
    ;HEAP32[$860>>2]=HEAP32[(144624)>>2]|0;HEAP32[$860+4>>2]=HEAP32[(144624)+4>>2]|0;HEAP32[$860+8>>2]=HEAP32[(144624)+8>>2]|0;HEAP32[$860+12>>2]=HEAP32[(144624)+12>>2]|0;
    HEAP32[(144624)>>2] = $$748$i;
    HEAP32[(144628)>>2] = $$723947$i;
    HEAP32[(144636)>>2] = 0;
    HEAP32[(144632)>>2] = $860;
    $879 = $861;
    while(1) {
     $878 = ((($879)) + 4|0);
     HEAP32[$878>>2] = 7;
     $880 = ((($879)) + 8|0);
     $881 = ($880>>>0)<($844>>>0);
     if ($881) {
      $879 = $878;
     } else {
      break;
     }
    }
    $882 = ($859|0)==($585|0);
    if (!($882)) {
     $883 = $859;
     $884 = $585;
     $885 = (($883) - ($884))|0;
     $886 = HEAP32[$877>>2]|0;
     $887 = $886 & -2;
     HEAP32[$877>>2] = $887;
     $888 = $885 | 1;
     $889 = ((($585)) + 4|0);
     HEAP32[$889>>2] = $888;
     HEAP32[$859>>2] = $885;
     $890 = $885 >>> 3;
     $891 = ($885>>>0)<(256);
     if ($891) {
      $892 = $890 << 1;
      $893 = (144216 + ($892<<2)|0);
      $894 = HEAP32[36044]|0;
      $895 = 1 << $890;
      $896 = $894 & $895;
      $897 = ($896|0)==(0);
      if ($897) {
       $898 = $894 | $895;
       HEAP32[36044] = $898;
       $$pre$i$i = ((($893)) + 8|0);
       $$0206$i$i = $893;$$pre$phi$i$iZ2D = $$pre$i$i;
      } else {
       $899 = ((($893)) + 8|0);
       $900 = HEAP32[$899>>2]|0;
       $$0206$i$i = $900;$$pre$phi$i$iZ2D = $899;
      }
      HEAP32[$$pre$phi$i$iZ2D>>2] = $585;
      $901 = ((($$0206$i$i)) + 12|0);
      HEAP32[$901>>2] = $585;
      $902 = ((($585)) + 8|0);
      HEAP32[$902>>2] = $$0206$i$i;
      $903 = ((($585)) + 12|0);
      HEAP32[$903>>2] = $893;
      break;
     }
     $904 = $885 >>> 8;
     $905 = ($904|0)==(0);
     if ($905) {
      $$0207$i$i = 0;
     } else {
      $906 = ($885>>>0)>(16777215);
      if ($906) {
       $$0207$i$i = 31;
      } else {
       $907 = (($904) + 1048320)|0;
       $908 = $907 >>> 16;
       $909 = $908 & 8;
       $910 = $904 << $909;
       $911 = (($910) + 520192)|0;
       $912 = $911 >>> 16;
       $913 = $912 & 4;
       $914 = $913 | $909;
       $915 = $910 << $913;
       $916 = (($915) + 245760)|0;
       $917 = $916 >>> 16;
       $918 = $917 & 2;
       $919 = $914 | $918;
       $920 = (14 - ($919))|0;
       $921 = $915 << $918;
       $922 = $921 >>> 15;
       $923 = (($920) + ($922))|0;
       $924 = $923 << 1;
       $925 = (($923) + 7)|0;
       $926 = $885 >>> $925;
       $927 = $926 & 1;
       $928 = $927 | $924;
       $$0207$i$i = $928;
      }
     }
     $929 = (144480 + ($$0207$i$i<<2)|0);
     $930 = ((($585)) + 28|0);
     HEAP32[$930>>2] = $$0207$i$i;
     $931 = ((($585)) + 20|0);
     HEAP32[$931>>2] = 0;
     HEAP32[$857>>2] = 0;
     $932 = HEAP32[(144180)>>2]|0;
     $933 = 1 << $$0207$i$i;
     $934 = $932 & $933;
     $935 = ($934|0)==(0);
     if ($935) {
      $936 = $932 | $933;
      HEAP32[(144180)>>2] = $936;
      HEAP32[$929>>2] = $585;
      $937 = ((($585)) + 24|0);
      HEAP32[$937>>2] = $929;
      $938 = ((($585)) + 12|0);
      HEAP32[$938>>2] = $585;
      $939 = ((($585)) + 8|0);
      HEAP32[$939>>2] = $585;
      break;
     }
     $940 = HEAP32[$929>>2]|0;
     $941 = ((($940)) + 4|0);
     $942 = HEAP32[$941>>2]|0;
     $943 = $942 & -8;
     $944 = ($943|0)==($885|0);
     L325: do {
      if ($944) {
       $$0202$lcssa$i$i = $940;
      } else {
       $945 = ($$0207$i$i|0)==(31);
       $946 = $$0207$i$i >>> 1;
       $947 = (25 - ($946))|0;
       $948 = $945 ? 0 : $947;
       $949 = $885 << $948;
       $$02014$i$i = $949;$$02023$i$i = $940;
       while(1) {
        $956 = $$02014$i$i >>> 31;
        $957 = (((($$02023$i$i)) + 16|0) + ($956<<2)|0);
        $952 = HEAP32[$957>>2]|0;
        $958 = ($952|0)==(0|0);
        if ($958) {
         break;
        }
        $950 = $$02014$i$i << 1;
        $951 = ((($952)) + 4|0);
        $953 = HEAP32[$951>>2]|0;
        $954 = $953 & -8;
        $955 = ($954|0)==($885|0);
        if ($955) {
         $$0202$lcssa$i$i = $952;
         break L325;
        } else {
         $$02014$i$i = $950;$$02023$i$i = $952;
        }
       }
       HEAP32[$957>>2] = $585;
       $959 = ((($585)) + 24|0);
       HEAP32[$959>>2] = $$02023$i$i;
       $960 = ((($585)) + 12|0);
       HEAP32[$960>>2] = $585;
       $961 = ((($585)) + 8|0);
       HEAP32[$961>>2] = $585;
       break L215;
      }
     } while(0);
     $962 = ((($$0202$lcssa$i$i)) + 8|0);
     $963 = HEAP32[$962>>2]|0;
     $964 = ((($963)) + 12|0);
     HEAP32[$964>>2] = $585;
     HEAP32[$962>>2] = $585;
     $965 = ((($585)) + 8|0);
     HEAP32[$965>>2] = $963;
     $966 = ((($585)) + 12|0);
     HEAP32[$966>>2] = $$0202$lcssa$i$i;
     $967 = ((($585)) + 24|0);
     HEAP32[$967>>2] = 0;
    }
   }
  } while(0);
  $969 = HEAP32[(144188)>>2]|0;
  $970 = ($969>>>0)>($$0192>>>0);
  if ($970) {
   $971 = (($969) - ($$0192))|0;
   HEAP32[(144188)>>2] = $971;
   $972 = HEAP32[(144200)>>2]|0;
   $973 = (($972) + ($$0192)|0);
   HEAP32[(144200)>>2] = $973;
   $974 = $971 | 1;
   $975 = ((($973)) + 4|0);
   HEAP32[$975>>2] = $974;
   $976 = $$0192 | 3;
   $977 = ((($972)) + 4|0);
   HEAP32[$977>>2] = $976;
   $978 = ((($972)) + 8|0);
   $$0 = $978;
   STACKTOP = sp;return ($$0|0);
  }
 }
 $979 = (___errno_location()|0);
 HEAP32[$979>>2] = 12;
 $$0 = 0;
 STACKTOP = sp;return ($$0|0);
}
function _free($0) {
 $0 = $0|0;
 var $$0194$i = 0, $$0194$in$i = 0, $$0346381 = 0, $$0347$lcssa = 0, $$0347380 = 0, $$0359 = 0, $$0366 = 0, $$1 = 0, $$1345 = 0, $$1350 = 0, $$1350$be = 0, $$1350$ph = 0, $$1353 = 0, $$1353$be = 0, $$1353$ph = 0, $$1361 = 0, $$1361$be = 0, $$1361$ph = 0, $$1365 = 0, $$1365$be = 0;
 var $$1365$ph = 0, $$2 = 0, $$3 = 0, $$3363 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink395 = 0, $1 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0;
 var $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0;
 var $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0;
 var $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0;
 var $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0;
 var $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0;
 var $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond371 = 0, $cond372 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 if ($1) {
  return;
 }
 $2 = ((($0)) + -8|0);
 $3 = HEAP32[(144192)>>2]|0;
 $4 = ((($0)) + -4|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $5 & -8;
 $7 = (($2) + ($6)|0);
 $8 = $5 & 1;
 $9 = ($8|0)==(0);
 do {
  if ($9) {
   $10 = HEAP32[$2>>2]|0;
   $11 = $5 & 3;
   $12 = ($11|0)==(0);
   if ($12) {
    return;
   }
   $13 = (0 - ($10))|0;
   $14 = (($2) + ($13)|0);
   $15 = (($10) + ($6))|0;
   $16 = ($14>>>0)<($3>>>0);
   if ($16) {
    return;
   }
   $17 = HEAP32[(144196)>>2]|0;
   $18 = ($17|0)==($14|0);
   if ($18) {
    $79 = ((($7)) + 4|0);
    $80 = HEAP32[$79>>2]|0;
    $81 = $80 & 3;
    $82 = ($81|0)==(3);
    if (!($82)) {
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
    $83 = (($14) + ($15)|0);
    $84 = ((($14)) + 4|0);
    $85 = $15 | 1;
    $86 = $80 & -2;
    HEAP32[(144184)>>2] = $15;
    HEAP32[$79>>2] = $86;
    HEAP32[$84>>2] = $85;
    HEAP32[$83>>2] = $15;
    return;
   }
   $19 = $10 >>> 3;
   $20 = ($10>>>0)<(256);
   if ($20) {
    $21 = ((($14)) + 8|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = ((($14)) + 12|0);
    $24 = HEAP32[$23>>2]|0;
    $25 = ($24|0)==($22|0);
    if ($25) {
     $26 = 1 << $19;
     $27 = $26 ^ -1;
     $28 = HEAP32[36044]|0;
     $29 = $28 & $27;
     HEAP32[36044] = $29;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    } else {
     $30 = ((($22)) + 12|0);
     HEAP32[$30>>2] = $24;
     $31 = ((($24)) + 8|0);
     HEAP32[$31>>2] = $22;
     $$1 = $14;$$1345 = $15;$88 = $14;
     break;
    }
   }
   $32 = ((($14)) + 24|0);
   $33 = HEAP32[$32>>2]|0;
   $34 = ((($14)) + 12|0);
   $35 = HEAP32[$34>>2]|0;
   $36 = ($35|0)==($14|0);
   do {
    if ($36) {
     $41 = ((($14)) + 16|0);
     $42 = ((($41)) + 4|0);
     $43 = HEAP32[$42>>2]|0;
     $44 = ($43|0)==(0|0);
     if ($44) {
      $45 = HEAP32[$41>>2]|0;
      $46 = ($45|0)==(0|0);
      if ($46) {
       $$3 = 0;
       break;
      } else {
       $$1350$ph = $45;$$1353$ph = $41;
      }
     } else {
      $$1350$ph = $43;$$1353$ph = $42;
     }
     $$1350 = $$1350$ph;$$1353 = $$1353$ph;
     while(1) {
      $47 = ((($$1350)) + 20|0);
      $48 = HEAP32[$47>>2]|0;
      $49 = ($48|0)==(0|0);
      if ($49) {
       $50 = ((($$1350)) + 16|0);
       $51 = HEAP32[$50>>2]|0;
       $52 = ($51|0)==(0|0);
       if ($52) {
        break;
       } else {
        $$1350$be = $51;$$1353$be = $50;
       }
      } else {
       $$1350$be = $48;$$1353$be = $47;
      }
      $$1350 = $$1350$be;$$1353 = $$1353$be;
     }
     HEAP32[$$1353>>2] = 0;
     $$3 = $$1350;
    } else {
     $37 = ((($14)) + 8|0);
     $38 = HEAP32[$37>>2]|0;
     $39 = ((($38)) + 12|0);
     HEAP32[$39>>2] = $35;
     $40 = ((($35)) + 8|0);
     HEAP32[$40>>2] = $38;
     $$3 = $35;
    }
   } while(0);
   $53 = ($33|0)==(0|0);
   if ($53) {
    $$1 = $14;$$1345 = $15;$88 = $14;
   } else {
    $54 = ((($14)) + 28|0);
    $55 = HEAP32[$54>>2]|0;
    $56 = (144480 + ($55<<2)|0);
    $57 = HEAP32[$56>>2]|0;
    $58 = ($57|0)==($14|0);
    if ($58) {
     HEAP32[$56>>2] = $$3;
     $cond371 = ($$3|0)==(0|0);
     if ($cond371) {
      $59 = 1 << $55;
      $60 = $59 ^ -1;
      $61 = HEAP32[(144180)>>2]|0;
      $62 = $61 & $60;
      HEAP32[(144180)>>2] = $62;
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    } else {
     $63 = ((($33)) + 16|0);
     $64 = HEAP32[$63>>2]|0;
     $65 = ($64|0)==($14|0);
     $66 = ((($33)) + 20|0);
     $$sink = $65 ? $63 : $66;
     HEAP32[$$sink>>2] = $$3;
     $67 = ($$3|0)==(0|0);
     if ($67) {
      $$1 = $14;$$1345 = $15;$88 = $14;
      break;
     }
    }
    $68 = ((($$3)) + 24|0);
    HEAP32[$68>>2] = $33;
    $69 = ((($14)) + 16|0);
    $70 = HEAP32[$69>>2]|0;
    $71 = ($70|0)==(0|0);
    if (!($71)) {
     $72 = ((($$3)) + 16|0);
     HEAP32[$72>>2] = $70;
     $73 = ((($70)) + 24|0);
     HEAP32[$73>>2] = $$3;
    }
    $74 = ((($69)) + 4|0);
    $75 = HEAP32[$74>>2]|0;
    $76 = ($75|0)==(0|0);
    if ($76) {
     $$1 = $14;$$1345 = $15;$88 = $14;
    } else {
     $77 = ((($$3)) + 20|0);
     HEAP32[$77>>2] = $75;
     $78 = ((($75)) + 24|0);
     HEAP32[$78>>2] = $$3;
     $$1 = $14;$$1345 = $15;$88 = $14;
    }
   }
  } else {
   $$1 = $2;$$1345 = $6;$88 = $2;
  }
 } while(0);
 $87 = ($88>>>0)<($7>>>0);
 if (!($87)) {
  return;
 }
 $89 = ((($7)) + 4|0);
 $90 = HEAP32[$89>>2]|0;
 $91 = $90 & 1;
 $92 = ($91|0)==(0);
 if ($92) {
  return;
 }
 $93 = $90 & 2;
 $94 = ($93|0)==(0);
 if ($94) {
  $95 = HEAP32[(144200)>>2]|0;
  $96 = ($95|0)==($7|0);
  if ($96) {
   $97 = HEAP32[(144188)>>2]|0;
   $98 = (($97) + ($$1345))|0;
   HEAP32[(144188)>>2] = $98;
   HEAP32[(144200)>>2] = $$1;
   $99 = $98 | 1;
   $100 = ((($$1)) + 4|0);
   HEAP32[$100>>2] = $99;
   $101 = HEAP32[(144196)>>2]|0;
   $102 = ($$1|0)==($101|0);
   if (!($102)) {
    return;
   }
   HEAP32[(144196)>>2] = 0;
   HEAP32[(144184)>>2] = 0;
   return;
  }
  $103 = HEAP32[(144196)>>2]|0;
  $104 = ($103|0)==($7|0);
  if ($104) {
   $105 = HEAP32[(144184)>>2]|0;
   $106 = (($105) + ($$1345))|0;
   HEAP32[(144184)>>2] = $106;
   HEAP32[(144196)>>2] = $88;
   $107 = $106 | 1;
   $108 = ((($$1)) + 4|0);
   HEAP32[$108>>2] = $107;
   $109 = (($88) + ($106)|0);
   HEAP32[$109>>2] = $106;
   return;
  }
  $110 = $90 & -8;
  $111 = (($110) + ($$1345))|0;
  $112 = $90 >>> 3;
  $113 = ($90>>>0)<(256);
  do {
   if ($113) {
    $114 = ((($7)) + 8|0);
    $115 = HEAP32[$114>>2]|0;
    $116 = ((($7)) + 12|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ($117|0)==($115|0);
    if ($118) {
     $119 = 1 << $112;
     $120 = $119 ^ -1;
     $121 = HEAP32[36044]|0;
     $122 = $121 & $120;
     HEAP32[36044] = $122;
     break;
    } else {
     $123 = ((($115)) + 12|0);
     HEAP32[$123>>2] = $117;
     $124 = ((($117)) + 8|0);
     HEAP32[$124>>2] = $115;
     break;
    }
   } else {
    $125 = ((($7)) + 24|0);
    $126 = HEAP32[$125>>2]|0;
    $127 = ((($7)) + 12|0);
    $128 = HEAP32[$127>>2]|0;
    $129 = ($128|0)==($7|0);
    do {
     if ($129) {
      $134 = ((($7)) + 16|0);
      $135 = ((($134)) + 4|0);
      $136 = HEAP32[$135>>2]|0;
      $137 = ($136|0)==(0|0);
      if ($137) {
       $138 = HEAP32[$134>>2]|0;
       $139 = ($138|0)==(0|0);
       if ($139) {
        $$3363 = 0;
        break;
       } else {
        $$1361$ph = $138;$$1365$ph = $134;
       }
      } else {
       $$1361$ph = $136;$$1365$ph = $135;
      }
      $$1361 = $$1361$ph;$$1365 = $$1365$ph;
      while(1) {
       $140 = ((($$1361)) + 20|0);
       $141 = HEAP32[$140>>2]|0;
       $142 = ($141|0)==(0|0);
       if ($142) {
        $143 = ((($$1361)) + 16|0);
        $144 = HEAP32[$143>>2]|0;
        $145 = ($144|0)==(0|0);
        if ($145) {
         break;
        } else {
         $$1361$be = $144;$$1365$be = $143;
        }
       } else {
        $$1361$be = $141;$$1365$be = $140;
       }
       $$1361 = $$1361$be;$$1365 = $$1365$be;
      }
      HEAP32[$$1365>>2] = 0;
      $$3363 = $$1361;
     } else {
      $130 = ((($7)) + 8|0);
      $131 = HEAP32[$130>>2]|0;
      $132 = ((($131)) + 12|0);
      HEAP32[$132>>2] = $128;
      $133 = ((($128)) + 8|0);
      HEAP32[$133>>2] = $131;
      $$3363 = $128;
     }
    } while(0);
    $146 = ($126|0)==(0|0);
    if (!($146)) {
     $147 = ((($7)) + 28|0);
     $148 = HEAP32[$147>>2]|0;
     $149 = (144480 + ($148<<2)|0);
     $150 = HEAP32[$149>>2]|0;
     $151 = ($150|0)==($7|0);
     if ($151) {
      HEAP32[$149>>2] = $$3363;
      $cond372 = ($$3363|0)==(0|0);
      if ($cond372) {
       $152 = 1 << $148;
       $153 = $152 ^ -1;
       $154 = HEAP32[(144180)>>2]|0;
       $155 = $154 & $153;
       HEAP32[(144180)>>2] = $155;
       break;
      }
     } else {
      $156 = ((($126)) + 16|0);
      $157 = HEAP32[$156>>2]|0;
      $158 = ($157|0)==($7|0);
      $159 = ((($126)) + 20|0);
      $$sink395 = $158 ? $156 : $159;
      HEAP32[$$sink395>>2] = $$3363;
      $160 = ($$3363|0)==(0|0);
      if ($160) {
       break;
      }
     }
     $161 = ((($$3363)) + 24|0);
     HEAP32[$161>>2] = $126;
     $162 = ((($7)) + 16|0);
     $163 = HEAP32[$162>>2]|0;
     $164 = ($163|0)==(0|0);
     if (!($164)) {
      $165 = ((($$3363)) + 16|0);
      HEAP32[$165>>2] = $163;
      $166 = ((($163)) + 24|0);
      HEAP32[$166>>2] = $$3363;
     }
     $167 = ((($162)) + 4|0);
     $168 = HEAP32[$167>>2]|0;
     $169 = ($168|0)==(0|0);
     if (!($169)) {
      $170 = ((($$3363)) + 20|0);
      HEAP32[$170>>2] = $168;
      $171 = ((($168)) + 24|0);
      HEAP32[$171>>2] = $$3363;
     }
    }
   }
  } while(0);
  $172 = $111 | 1;
  $173 = ((($$1)) + 4|0);
  HEAP32[$173>>2] = $172;
  $174 = (($88) + ($111)|0);
  HEAP32[$174>>2] = $111;
  $175 = HEAP32[(144196)>>2]|0;
  $176 = ($$1|0)==($175|0);
  if ($176) {
   HEAP32[(144184)>>2] = $111;
   return;
  } else {
   $$2 = $111;
  }
 } else {
  $177 = $90 & -2;
  HEAP32[$89>>2] = $177;
  $178 = $$1345 | 1;
  $179 = ((($$1)) + 4|0);
  HEAP32[$179>>2] = $178;
  $180 = (($88) + ($$1345)|0);
  HEAP32[$180>>2] = $$1345;
  $$2 = $$1345;
 }
 $181 = $$2 >>> 3;
 $182 = ($$2>>>0)<(256);
 if ($182) {
  $183 = $181 << 1;
  $184 = (144216 + ($183<<2)|0);
  $185 = HEAP32[36044]|0;
  $186 = 1 << $181;
  $187 = $185 & $186;
  $188 = ($187|0)==(0);
  if ($188) {
   $189 = $185 | $186;
   HEAP32[36044] = $189;
   $$pre = ((($184)) + 8|0);
   $$0366 = $184;$$pre$phiZ2D = $$pre;
  } else {
   $190 = ((($184)) + 8|0);
   $191 = HEAP32[$190>>2]|0;
   $$0366 = $191;$$pre$phiZ2D = $190;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $192 = ((($$0366)) + 12|0);
  HEAP32[$192>>2] = $$1;
  $193 = ((($$1)) + 8|0);
  HEAP32[$193>>2] = $$0366;
  $194 = ((($$1)) + 12|0);
  HEAP32[$194>>2] = $184;
  return;
 }
 $195 = $$2 >>> 8;
 $196 = ($195|0)==(0);
 if ($196) {
  $$0359 = 0;
 } else {
  $197 = ($$2>>>0)>(16777215);
  if ($197) {
   $$0359 = 31;
  } else {
   $198 = (($195) + 1048320)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 8;
   $201 = $195 << $200;
   $202 = (($201) + 520192)|0;
   $203 = $202 >>> 16;
   $204 = $203 & 4;
   $205 = $204 | $200;
   $206 = $201 << $204;
   $207 = (($206) + 245760)|0;
   $208 = $207 >>> 16;
   $209 = $208 & 2;
   $210 = $205 | $209;
   $211 = (14 - ($210))|0;
   $212 = $206 << $209;
   $213 = $212 >>> 15;
   $214 = (($211) + ($213))|0;
   $215 = $214 << 1;
   $216 = (($214) + 7)|0;
   $217 = $$2 >>> $216;
   $218 = $217 & 1;
   $219 = $218 | $215;
   $$0359 = $219;
  }
 }
 $220 = (144480 + ($$0359<<2)|0);
 $221 = ((($$1)) + 28|0);
 HEAP32[$221>>2] = $$0359;
 $222 = ((($$1)) + 16|0);
 $223 = ((($$1)) + 20|0);
 HEAP32[$223>>2] = 0;
 HEAP32[$222>>2] = 0;
 $224 = HEAP32[(144180)>>2]|0;
 $225 = 1 << $$0359;
 $226 = $224 & $225;
 $227 = ($226|0)==(0);
 L112: do {
  if ($227) {
   $228 = $224 | $225;
   HEAP32[(144180)>>2] = $228;
   HEAP32[$220>>2] = $$1;
   $229 = ((($$1)) + 24|0);
   HEAP32[$229>>2] = $220;
   $230 = ((($$1)) + 12|0);
   HEAP32[$230>>2] = $$1;
   $231 = ((($$1)) + 8|0);
   HEAP32[$231>>2] = $$1;
  } else {
   $232 = HEAP32[$220>>2]|0;
   $233 = ((($232)) + 4|0);
   $234 = HEAP32[$233>>2]|0;
   $235 = $234 & -8;
   $236 = ($235|0)==($$2|0);
   L115: do {
    if ($236) {
     $$0347$lcssa = $232;
    } else {
     $237 = ($$0359|0)==(31);
     $238 = $$0359 >>> 1;
     $239 = (25 - ($238))|0;
     $240 = $237 ? 0 : $239;
     $241 = $$2 << $240;
     $$0346381 = $241;$$0347380 = $232;
     while(1) {
      $248 = $$0346381 >>> 31;
      $249 = (((($$0347380)) + 16|0) + ($248<<2)|0);
      $244 = HEAP32[$249>>2]|0;
      $250 = ($244|0)==(0|0);
      if ($250) {
       break;
      }
      $242 = $$0346381 << 1;
      $243 = ((($244)) + 4|0);
      $245 = HEAP32[$243>>2]|0;
      $246 = $245 & -8;
      $247 = ($246|0)==($$2|0);
      if ($247) {
       $$0347$lcssa = $244;
       break L115;
      } else {
       $$0346381 = $242;$$0347380 = $244;
      }
     }
     HEAP32[$249>>2] = $$1;
     $251 = ((($$1)) + 24|0);
     HEAP32[$251>>2] = $$0347380;
     $252 = ((($$1)) + 12|0);
     HEAP32[$252>>2] = $$1;
     $253 = ((($$1)) + 8|0);
     HEAP32[$253>>2] = $$1;
     break L112;
    }
   } while(0);
   $254 = ((($$0347$lcssa)) + 8|0);
   $255 = HEAP32[$254>>2]|0;
   $256 = ((($255)) + 12|0);
   HEAP32[$256>>2] = $$1;
   HEAP32[$254>>2] = $$1;
   $257 = ((($$1)) + 8|0);
   HEAP32[$257>>2] = $255;
   $258 = ((($$1)) + 12|0);
   HEAP32[$258>>2] = $$0347$lcssa;
   $259 = ((($$1)) + 24|0);
   HEAP32[$259>>2] = 0;
  }
 } while(0);
 $260 = HEAP32[(144208)>>2]|0;
 $261 = (($260) + -1)|0;
 HEAP32[(144208)>>2] = $261;
 $262 = ($261|0)==(0);
 if (!($262)) {
  return;
 }
 $$0194$in$i = (144632);
 while(1) {
  $$0194$i = HEAP32[$$0194$in$i>>2]|0;
  $263 = ($$0194$i|0)==(0|0);
  $264 = ((($$0194$i)) + 8|0);
  if ($263) {
   break;
  } else {
   $$0194$in$i = $264;
  }
 }
 HEAP32[(144208)>>2] = -1;
 return;
}
function _calloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = Math_imul($1, $0)|0;
  $4 = $1 | $0;
  $5 = ($4>>>0)>(65535);
  if ($5) {
   $6 = (($3>>>0) / ($0>>>0))&-1;
   $7 = ($6|0)==($1|0);
   $spec$select = $7 ? $3 : -1;
   $$0 = $spec$select;
  } else {
   $$0 = $3;
  }
 }
 $8 = (_malloc($$0)|0);
 $9 = ($8|0)==(0|0);
 if ($9) {
  return ($8|0);
 }
 $10 = ((($8)) + -4|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = $11 & 3;
 $13 = ($12|0)==(0);
 if ($13) {
  return ($8|0);
 }
 (_memset(($8|0),0,($$0|0))|0);
 return ($8|0);
}
function _realloc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $3 = (_malloc($1)|0);
  $$1 = $3;
  return ($$1|0);
 }
 $4 = ($1>>>0)>(4294967231);
 if ($4) {
  $5 = (___errno_location()|0);
  HEAP32[$5>>2] = 12;
  $$1 = 0;
  return ($$1|0);
 }
 $6 = ($1>>>0)<(11);
 $7 = (($1) + 11)|0;
 $8 = $7 & -8;
 $9 = $6 ? 16 : $8;
 $10 = ((($0)) + -8|0);
 $11 = (_try_realloc_chunk($10,$9)|0);
 $12 = ($11|0)==(0|0);
 if (!($12)) {
  $13 = ((($11)) + 8|0);
  $$1 = $13;
  return ($$1|0);
 }
 $14 = (_malloc($1)|0);
 $15 = ($14|0)==(0|0);
 if ($15) {
  $$1 = 0;
  return ($$1|0);
 }
 $16 = ((($0)) + -4|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = $17 & -8;
 $19 = $17 & 3;
 $20 = ($19|0)==(0);
 $21 = $20 ? 8 : 4;
 $22 = (($18) - ($21))|0;
 $23 = ($22>>>0)<($1>>>0);
 $24 = $23 ? $22 : $1;
 (_memcpy(($14|0),($0|0),($24|0))|0);
 _free($0);
 $$1 = $14;
 return ($$1|0);
}
function _try_realloc_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$1245 = 0, $$1245$be = 0, $$1245$ph = 0, $$1248 = 0, $$1248$be = 0, $$1248$ph = 0, $$2 = 0, $$3 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0;
 var $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0;
 var $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0;
 var $146 = 0, $147 = 0, $148 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $storemerge = 0, $storemerge1 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 4|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = $3 & -8;
 $5 = (($0) + ($4)|0);
 $6 = $3 & 3;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ($1>>>0)<(256);
  if ($8) {
   $$2 = 0;
   return ($$2|0);
  }
  $9 = (($1) + 4)|0;
  $10 = ($4>>>0)<($9>>>0);
  if (!($10)) {
   $11 = (($4) - ($1))|0;
   $12 = HEAP32[(144656)>>2]|0;
   $13 = $12 << 1;
   $14 = ($11>>>0)>($13>>>0);
   if (!($14)) {
    $$2 = $0;
    return ($$2|0);
   }
  }
  $$2 = 0;
  return ($$2|0);
 }
 $15 = ($4>>>0)<($1>>>0);
 if (!($15)) {
  $16 = (($4) - ($1))|0;
  $17 = ($16>>>0)>(15);
  if (!($17)) {
   $$2 = $0;
   return ($$2|0);
  }
  $18 = (($0) + ($1)|0);
  $19 = $3 & 1;
  $20 = $19 | $1;
  $21 = $20 | 2;
  HEAP32[$2>>2] = $21;
  $22 = ((($18)) + 4|0);
  $23 = $16 | 3;
  HEAP32[$22>>2] = $23;
  $24 = ((($5)) + 4|0);
  $25 = HEAP32[$24>>2]|0;
  $26 = $25 | 1;
  HEAP32[$24>>2] = $26;
  _dispose_chunk($18,$16);
  $$2 = $0;
  return ($$2|0);
 }
 $27 = HEAP32[(144200)>>2]|0;
 $28 = ($27|0)==($5|0);
 if ($28) {
  $29 = HEAP32[(144188)>>2]|0;
  $30 = (($29) + ($4))|0;
  $31 = ($30>>>0)>($1>>>0);
  $32 = (($30) - ($1))|0;
  $33 = (($0) + ($1)|0);
  if (!($31)) {
   $$2 = 0;
   return ($$2|0);
  }
  $34 = $32 | 1;
  $35 = ((($33)) + 4|0);
  $36 = $3 & 1;
  $37 = $36 | $1;
  $38 = $37 | 2;
  HEAP32[$2>>2] = $38;
  HEAP32[$35>>2] = $34;
  HEAP32[(144200)>>2] = $33;
  HEAP32[(144188)>>2] = $32;
  $$2 = $0;
  return ($$2|0);
 }
 $39 = HEAP32[(144196)>>2]|0;
 $40 = ($39|0)==($5|0);
 if ($40) {
  $41 = HEAP32[(144184)>>2]|0;
  $42 = (($41) + ($4))|0;
  $43 = ($42>>>0)<($1>>>0);
  if ($43) {
   $$2 = 0;
   return ($$2|0);
  }
  $44 = (($42) - ($1))|0;
  $45 = ($44>>>0)>(15);
  if ($45) {
   $46 = (($0) + ($1)|0);
   $47 = (($0) + ($42)|0);
   $48 = $3 & 1;
   $49 = $48 | $1;
   $50 = $49 | 2;
   HEAP32[$2>>2] = $50;
   $51 = ((($46)) + 4|0);
   $52 = $44 | 1;
   HEAP32[$51>>2] = $52;
   HEAP32[$47>>2] = $44;
   $53 = ((($47)) + 4|0);
   $54 = HEAP32[$53>>2]|0;
   $55 = $54 & -2;
   HEAP32[$53>>2] = $55;
   $storemerge = $46;$storemerge1 = $44;
  } else {
   $56 = $3 & 1;
   $57 = $56 | $42;
   $58 = $57 | 2;
   HEAP32[$2>>2] = $58;
   $59 = (($0) + ($42)|0);
   $60 = ((($59)) + 4|0);
   $61 = HEAP32[$60>>2]|0;
   $62 = $61 | 1;
   HEAP32[$60>>2] = $62;
   $storemerge = 0;$storemerge1 = 0;
  }
  HEAP32[(144184)>>2] = $storemerge1;
  HEAP32[(144196)>>2] = $storemerge;
  $$2 = $0;
  return ($$2|0);
 }
 $63 = ((($5)) + 4|0);
 $64 = HEAP32[$63>>2]|0;
 $65 = $64 & 2;
 $66 = ($65|0)==(0);
 if (!($66)) {
  $$2 = 0;
  return ($$2|0);
 }
 $67 = $64 & -8;
 $68 = (($67) + ($4))|0;
 $69 = ($68>>>0)<($1>>>0);
 if ($69) {
  $$2 = 0;
  return ($$2|0);
 }
 $70 = (($68) - ($1))|0;
 $71 = $64 >>> 3;
 $72 = ($64>>>0)<(256);
 do {
  if ($72) {
   $73 = ((($5)) + 8|0);
   $74 = HEAP32[$73>>2]|0;
   $75 = ((($5)) + 12|0);
   $76 = HEAP32[$75>>2]|0;
   $77 = ($76|0)==($74|0);
   if ($77) {
    $78 = 1 << $71;
    $79 = $78 ^ -1;
    $80 = HEAP32[36044]|0;
    $81 = $80 & $79;
    HEAP32[36044] = $81;
    break;
   } else {
    $82 = ((($74)) + 12|0);
    HEAP32[$82>>2] = $76;
    $83 = ((($76)) + 8|0);
    HEAP32[$83>>2] = $74;
    break;
   }
  } else {
   $84 = ((($5)) + 24|0);
   $85 = HEAP32[$84>>2]|0;
   $86 = ((($5)) + 12|0);
   $87 = HEAP32[$86>>2]|0;
   $88 = ($87|0)==($5|0);
   do {
    if ($88) {
     $93 = ((($5)) + 16|0);
     $94 = ((($93)) + 4|0);
     $95 = HEAP32[$94>>2]|0;
     $96 = ($95|0)==(0|0);
     if ($96) {
      $97 = HEAP32[$93>>2]|0;
      $98 = ($97|0)==(0|0);
      if ($98) {
       $$3 = 0;
       break;
      } else {
       $$1245$ph = $97;$$1248$ph = $93;
      }
     } else {
      $$1245$ph = $95;$$1248$ph = $94;
     }
     $$1245 = $$1245$ph;$$1248 = $$1248$ph;
     while(1) {
      $99 = ((($$1245)) + 20|0);
      $100 = HEAP32[$99>>2]|0;
      $101 = ($100|0)==(0|0);
      if ($101) {
       $102 = ((($$1245)) + 16|0);
       $103 = HEAP32[$102>>2]|0;
       $104 = ($103|0)==(0|0);
       if ($104) {
        break;
       } else {
        $$1245$be = $103;$$1248$be = $102;
       }
      } else {
       $$1245$be = $100;$$1248$be = $99;
      }
      $$1245 = $$1245$be;$$1248 = $$1248$be;
     }
     HEAP32[$$1248>>2] = 0;
     $$3 = $$1245;
    } else {
     $89 = ((($5)) + 8|0);
     $90 = HEAP32[$89>>2]|0;
     $91 = ((($90)) + 12|0);
     HEAP32[$91>>2] = $87;
     $92 = ((($87)) + 8|0);
     HEAP32[$92>>2] = $90;
     $$3 = $87;
    }
   } while(0);
   $105 = ($85|0)==(0|0);
   if (!($105)) {
    $106 = ((($5)) + 28|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = (144480 + ($107<<2)|0);
    $109 = HEAP32[$108>>2]|0;
    $110 = ($109|0)==($5|0);
    if ($110) {
     HEAP32[$108>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $111 = 1 << $107;
      $112 = $111 ^ -1;
      $113 = HEAP32[(144180)>>2]|0;
      $114 = $113 & $112;
      HEAP32[(144180)>>2] = $114;
      break;
     }
    } else {
     $115 = ((($85)) + 16|0);
     $116 = HEAP32[$115>>2]|0;
     $117 = ($116|0)==($5|0);
     $118 = ((($85)) + 20|0);
     $$sink = $117 ? $115 : $118;
     HEAP32[$$sink>>2] = $$3;
     $119 = ($$3|0)==(0|0);
     if ($119) {
      break;
     }
    }
    $120 = ((($$3)) + 24|0);
    HEAP32[$120>>2] = $85;
    $121 = ((($5)) + 16|0);
    $122 = HEAP32[$121>>2]|0;
    $123 = ($122|0)==(0|0);
    if (!($123)) {
     $124 = ((($$3)) + 16|0);
     HEAP32[$124>>2] = $122;
     $125 = ((($122)) + 24|0);
     HEAP32[$125>>2] = $$3;
    }
    $126 = ((($121)) + 4|0);
    $127 = HEAP32[$126>>2]|0;
    $128 = ($127|0)==(0|0);
    if (!($128)) {
     $129 = ((($$3)) + 20|0);
     HEAP32[$129>>2] = $127;
     $130 = ((($127)) + 24|0);
     HEAP32[$130>>2] = $$3;
    }
   }
  }
 } while(0);
 $131 = ($70>>>0)<(16);
 if ($131) {
  $132 = $3 & 1;
  $133 = $132 | $68;
  $134 = $133 | 2;
  HEAP32[$2>>2] = $134;
  $135 = (($0) + ($68)|0);
  $136 = ((($135)) + 4|0);
  $137 = HEAP32[$136>>2]|0;
  $138 = $137 | 1;
  HEAP32[$136>>2] = $138;
  $$2 = $0;
  return ($$2|0);
 } else {
  $139 = (($0) + ($1)|0);
  $140 = $3 & 1;
  $141 = $140 | $1;
  $142 = $141 | 2;
  HEAP32[$2>>2] = $142;
  $143 = ((($139)) + 4|0);
  $144 = $70 | 3;
  HEAP32[$143>>2] = $144;
  $145 = (($0) + ($68)|0);
  $146 = ((($145)) + 4|0);
  $147 = HEAP32[$146>>2]|0;
  $148 = $147 | 1;
  HEAP32[$146>>2] = $148;
  _dispose_chunk($139,$70);
  $$2 = $0;
  return ($$2|0);
 }
 return (0)|0;
}
function _dispose_chunk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$03649 = 0, $$0365$lcssa = 0, $$03658 = 0, $$0376 = 0, $$0383 = 0, $$1 = 0, $$1363 = 0, $$1371 = 0, $$1371$be = 0, $$1371$ph = 0, $$1374 = 0, $$1374$be = 0, $$1374$ph = 0, $$1378 = 0, $$1378$be = 0, $$1378$ph = 0, $$1382 = 0, $$1382$be = 0, $$1382$ph = 0, $$2 = 0;
 var $$3 = 0, $$3380 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$sink = 0, $$sink24 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0;
 var $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0;
 var $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0;
 var $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0;
 var $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0;
 var $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $2 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0;
 var $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $cond = 0, $cond4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (($0) + ($1)|0);
 $3 = ((($0)) + 4|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = $4 & 1;
 $6 = ($5|0)==(0);
 do {
  if ($6) {
   $7 = HEAP32[$0>>2]|0;
   $8 = $4 & 3;
   $9 = ($8|0)==(0);
   if ($9) {
    return;
   }
   $10 = (0 - ($7))|0;
   $11 = (($0) + ($10)|0);
   $12 = (($7) + ($1))|0;
   $13 = HEAP32[(144196)>>2]|0;
   $14 = ($13|0)==($11|0);
   if ($14) {
    $75 = ((($2)) + 4|0);
    $76 = HEAP32[$75>>2]|0;
    $77 = $76 & 3;
    $78 = ($77|0)==(3);
    if (!($78)) {
     $$1 = $11;$$1363 = $12;
     break;
    }
    $79 = ((($11)) + 4|0);
    $80 = $12 | 1;
    $81 = $76 & -2;
    HEAP32[(144184)>>2] = $12;
    HEAP32[$75>>2] = $81;
    HEAP32[$79>>2] = $80;
    HEAP32[$2>>2] = $12;
    return;
   }
   $15 = $7 >>> 3;
   $16 = ($7>>>0)<(256);
   if ($16) {
    $17 = ((($11)) + 8|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = ((($11)) + 12|0);
    $20 = HEAP32[$19>>2]|0;
    $21 = ($20|0)==($18|0);
    if ($21) {
     $22 = 1 << $15;
     $23 = $22 ^ -1;
     $24 = HEAP32[36044]|0;
     $25 = $24 & $23;
     HEAP32[36044] = $25;
     $$1 = $11;$$1363 = $12;
     break;
    } else {
     $26 = ((($18)) + 12|0);
     HEAP32[$26>>2] = $20;
     $27 = ((($20)) + 8|0);
     HEAP32[$27>>2] = $18;
     $$1 = $11;$$1363 = $12;
     break;
    }
   }
   $28 = ((($11)) + 24|0);
   $29 = HEAP32[$28>>2]|0;
   $30 = ((($11)) + 12|0);
   $31 = HEAP32[$30>>2]|0;
   $32 = ($31|0)==($11|0);
   do {
    if ($32) {
     $37 = ((($11)) + 16|0);
     $38 = ((($37)) + 4|0);
     $39 = HEAP32[$38>>2]|0;
     $40 = ($39|0)==(0|0);
     if ($40) {
      $41 = HEAP32[$37>>2]|0;
      $42 = ($41|0)==(0|0);
      if ($42) {
       $$3 = 0;
       break;
      } else {
       $$1371$ph = $41;$$1374$ph = $37;
      }
     } else {
      $$1371$ph = $39;$$1374$ph = $38;
     }
     $$1371 = $$1371$ph;$$1374 = $$1374$ph;
     while(1) {
      $43 = ((($$1371)) + 20|0);
      $44 = HEAP32[$43>>2]|0;
      $45 = ($44|0)==(0|0);
      if ($45) {
       $46 = ((($$1371)) + 16|0);
       $47 = HEAP32[$46>>2]|0;
       $48 = ($47|0)==(0|0);
       if ($48) {
        break;
       } else {
        $$1371$be = $47;$$1374$be = $46;
       }
      } else {
       $$1371$be = $44;$$1374$be = $43;
      }
      $$1371 = $$1371$be;$$1374 = $$1374$be;
     }
     HEAP32[$$1374>>2] = 0;
     $$3 = $$1371;
    } else {
     $33 = ((($11)) + 8|0);
     $34 = HEAP32[$33>>2]|0;
     $35 = ((($34)) + 12|0);
     HEAP32[$35>>2] = $31;
     $36 = ((($31)) + 8|0);
     HEAP32[$36>>2] = $34;
     $$3 = $31;
    }
   } while(0);
   $49 = ($29|0)==(0|0);
   if ($49) {
    $$1 = $11;$$1363 = $12;
   } else {
    $50 = ((($11)) + 28|0);
    $51 = HEAP32[$50>>2]|0;
    $52 = (144480 + ($51<<2)|0);
    $53 = HEAP32[$52>>2]|0;
    $54 = ($53|0)==($11|0);
    if ($54) {
     HEAP32[$52>>2] = $$3;
     $cond = ($$3|0)==(0|0);
     if ($cond) {
      $55 = 1 << $51;
      $56 = $55 ^ -1;
      $57 = HEAP32[(144180)>>2]|0;
      $58 = $57 & $56;
      HEAP32[(144180)>>2] = $58;
      $$1 = $11;$$1363 = $12;
      break;
     }
    } else {
     $59 = ((($29)) + 16|0);
     $60 = HEAP32[$59>>2]|0;
     $61 = ($60|0)==($11|0);
     $62 = ((($29)) + 20|0);
     $$sink = $61 ? $59 : $62;
     HEAP32[$$sink>>2] = $$3;
     $63 = ($$3|0)==(0|0);
     if ($63) {
      $$1 = $11;$$1363 = $12;
      break;
     }
    }
    $64 = ((($$3)) + 24|0);
    HEAP32[$64>>2] = $29;
    $65 = ((($11)) + 16|0);
    $66 = HEAP32[$65>>2]|0;
    $67 = ($66|0)==(0|0);
    if (!($67)) {
     $68 = ((($$3)) + 16|0);
     HEAP32[$68>>2] = $66;
     $69 = ((($66)) + 24|0);
     HEAP32[$69>>2] = $$3;
    }
    $70 = ((($65)) + 4|0);
    $71 = HEAP32[$70>>2]|0;
    $72 = ($71|0)==(0|0);
    if ($72) {
     $$1 = $11;$$1363 = $12;
    } else {
     $73 = ((($$3)) + 20|0);
     HEAP32[$73>>2] = $71;
     $74 = ((($71)) + 24|0);
     HEAP32[$74>>2] = $$3;
     $$1 = $11;$$1363 = $12;
    }
   }
  } else {
   $$1 = $0;$$1363 = $1;
  }
 } while(0);
 $82 = ((($2)) + 4|0);
 $83 = HEAP32[$82>>2]|0;
 $84 = $83 & 2;
 $85 = ($84|0)==(0);
 if ($85) {
  $86 = HEAP32[(144200)>>2]|0;
  $87 = ($86|0)==($2|0);
  if ($87) {
   $88 = HEAP32[(144188)>>2]|0;
   $89 = (($88) + ($$1363))|0;
   HEAP32[(144188)>>2] = $89;
   HEAP32[(144200)>>2] = $$1;
   $90 = $89 | 1;
   $91 = ((($$1)) + 4|0);
   HEAP32[$91>>2] = $90;
   $92 = HEAP32[(144196)>>2]|0;
   $93 = ($$1|0)==($92|0);
   if (!($93)) {
    return;
   }
   HEAP32[(144196)>>2] = 0;
   HEAP32[(144184)>>2] = 0;
   return;
  }
  $94 = HEAP32[(144196)>>2]|0;
  $95 = ($94|0)==($2|0);
  if ($95) {
   $96 = HEAP32[(144184)>>2]|0;
   $97 = (($96) + ($$1363))|0;
   HEAP32[(144184)>>2] = $97;
   HEAP32[(144196)>>2] = $$1;
   $98 = $97 | 1;
   $99 = ((($$1)) + 4|0);
   HEAP32[$99>>2] = $98;
   $100 = (($$1) + ($97)|0);
   HEAP32[$100>>2] = $97;
   return;
  }
  $101 = $83 & -8;
  $102 = (($101) + ($$1363))|0;
  $103 = $83 >>> 3;
  $104 = ($83>>>0)<(256);
  do {
   if ($104) {
    $105 = ((($2)) + 8|0);
    $106 = HEAP32[$105>>2]|0;
    $107 = ((($2)) + 12|0);
    $108 = HEAP32[$107>>2]|0;
    $109 = ($108|0)==($106|0);
    if ($109) {
     $110 = 1 << $103;
     $111 = $110 ^ -1;
     $112 = HEAP32[36044]|0;
     $113 = $112 & $111;
     HEAP32[36044] = $113;
     break;
    } else {
     $114 = ((($106)) + 12|0);
     HEAP32[$114>>2] = $108;
     $115 = ((($108)) + 8|0);
     HEAP32[$115>>2] = $106;
     break;
    }
   } else {
    $116 = ((($2)) + 24|0);
    $117 = HEAP32[$116>>2]|0;
    $118 = ((($2)) + 12|0);
    $119 = HEAP32[$118>>2]|0;
    $120 = ($119|0)==($2|0);
    do {
     if ($120) {
      $125 = ((($2)) + 16|0);
      $126 = ((($125)) + 4|0);
      $127 = HEAP32[$126>>2]|0;
      $128 = ($127|0)==(0|0);
      if ($128) {
       $129 = HEAP32[$125>>2]|0;
       $130 = ($129|0)==(0|0);
       if ($130) {
        $$3380 = 0;
        break;
       } else {
        $$1378$ph = $129;$$1382$ph = $125;
       }
      } else {
       $$1378$ph = $127;$$1382$ph = $126;
      }
      $$1378 = $$1378$ph;$$1382 = $$1382$ph;
      while(1) {
       $131 = ((($$1378)) + 20|0);
       $132 = HEAP32[$131>>2]|0;
       $133 = ($132|0)==(0|0);
       if ($133) {
        $134 = ((($$1378)) + 16|0);
        $135 = HEAP32[$134>>2]|0;
        $136 = ($135|0)==(0|0);
        if ($136) {
         break;
        } else {
         $$1378$be = $135;$$1382$be = $134;
        }
       } else {
        $$1378$be = $132;$$1382$be = $131;
       }
       $$1378 = $$1378$be;$$1382 = $$1382$be;
      }
      HEAP32[$$1382>>2] = 0;
      $$3380 = $$1378;
     } else {
      $121 = ((($2)) + 8|0);
      $122 = HEAP32[$121>>2]|0;
      $123 = ((($122)) + 12|0);
      HEAP32[$123>>2] = $119;
      $124 = ((($119)) + 8|0);
      HEAP32[$124>>2] = $122;
      $$3380 = $119;
     }
    } while(0);
    $137 = ($117|0)==(0|0);
    if (!($137)) {
     $138 = ((($2)) + 28|0);
     $139 = HEAP32[$138>>2]|0;
     $140 = (144480 + ($139<<2)|0);
     $141 = HEAP32[$140>>2]|0;
     $142 = ($141|0)==($2|0);
     if ($142) {
      HEAP32[$140>>2] = $$3380;
      $cond4 = ($$3380|0)==(0|0);
      if ($cond4) {
       $143 = 1 << $139;
       $144 = $143 ^ -1;
       $145 = HEAP32[(144180)>>2]|0;
       $146 = $145 & $144;
       HEAP32[(144180)>>2] = $146;
       break;
      }
     } else {
      $147 = ((($117)) + 16|0);
      $148 = HEAP32[$147>>2]|0;
      $149 = ($148|0)==($2|0);
      $150 = ((($117)) + 20|0);
      $$sink24 = $149 ? $147 : $150;
      HEAP32[$$sink24>>2] = $$3380;
      $151 = ($$3380|0)==(0|0);
      if ($151) {
       break;
      }
     }
     $152 = ((($$3380)) + 24|0);
     HEAP32[$152>>2] = $117;
     $153 = ((($2)) + 16|0);
     $154 = HEAP32[$153>>2]|0;
     $155 = ($154|0)==(0|0);
     if (!($155)) {
      $156 = ((($$3380)) + 16|0);
      HEAP32[$156>>2] = $154;
      $157 = ((($154)) + 24|0);
      HEAP32[$157>>2] = $$3380;
     }
     $158 = ((($153)) + 4|0);
     $159 = HEAP32[$158>>2]|0;
     $160 = ($159|0)==(0|0);
     if (!($160)) {
      $161 = ((($$3380)) + 20|0);
      HEAP32[$161>>2] = $159;
      $162 = ((($159)) + 24|0);
      HEAP32[$162>>2] = $$3380;
     }
    }
   }
  } while(0);
  $163 = $102 | 1;
  $164 = ((($$1)) + 4|0);
  HEAP32[$164>>2] = $163;
  $165 = (($$1) + ($102)|0);
  HEAP32[$165>>2] = $102;
  $166 = HEAP32[(144196)>>2]|0;
  $167 = ($$1|0)==($166|0);
  if ($167) {
   HEAP32[(144184)>>2] = $102;
   return;
  } else {
   $$2 = $102;
  }
 } else {
  $168 = $83 & -2;
  HEAP32[$82>>2] = $168;
  $169 = $$1363 | 1;
  $170 = ((($$1)) + 4|0);
  HEAP32[$170>>2] = $169;
  $171 = (($$1) + ($$1363)|0);
  HEAP32[$171>>2] = $$1363;
  $$2 = $$1363;
 }
 $172 = $$2 >>> 3;
 $173 = ($$2>>>0)<(256);
 if ($173) {
  $174 = $172 << 1;
  $175 = (144216 + ($174<<2)|0);
  $176 = HEAP32[36044]|0;
  $177 = 1 << $172;
  $178 = $176 & $177;
  $179 = ($178|0)==(0);
  if ($179) {
   $180 = $176 | $177;
   HEAP32[36044] = $180;
   $$pre = ((($175)) + 8|0);
   $$0383 = $175;$$pre$phiZ2D = $$pre;
  } else {
   $181 = ((($175)) + 8|0);
   $182 = HEAP32[$181>>2]|0;
   $$0383 = $182;$$pre$phiZ2D = $181;
  }
  HEAP32[$$pre$phiZ2D>>2] = $$1;
  $183 = ((($$0383)) + 12|0);
  HEAP32[$183>>2] = $$1;
  $184 = ((($$1)) + 8|0);
  HEAP32[$184>>2] = $$0383;
  $185 = ((($$1)) + 12|0);
  HEAP32[$185>>2] = $175;
  return;
 }
 $186 = $$2 >>> 8;
 $187 = ($186|0)==(0);
 if ($187) {
  $$0376 = 0;
 } else {
  $188 = ($$2>>>0)>(16777215);
  if ($188) {
   $$0376 = 31;
  } else {
   $189 = (($186) + 1048320)|0;
   $190 = $189 >>> 16;
   $191 = $190 & 8;
   $192 = $186 << $191;
   $193 = (($192) + 520192)|0;
   $194 = $193 >>> 16;
   $195 = $194 & 4;
   $196 = $195 | $191;
   $197 = $192 << $195;
   $198 = (($197) + 245760)|0;
   $199 = $198 >>> 16;
   $200 = $199 & 2;
   $201 = $196 | $200;
   $202 = (14 - ($201))|0;
   $203 = $197 << $200;
   $204 = $203 >>> 15;
   $205 = (($202) + ($204))|0;
   $206 = $205 << 1;
   $207 = (($205) + 7)|0;
   $208 = $$2 >>> $207;
   $209 = $208 & 1;
   $210 = $209 | $206;
   $$0376 = $210;
  }
 }
 $211 = (144480 + ($$0376<<2)|0);
 $212 = ((($$1)) + 28|0);
 HEAP32[$212>>2] = $$0376;
 $213 = ((($$1)) + 16|0);
 $214 = ((($$1)) + 20|0);
 HEAP32[$214>>2] = 0;
 HEAP32[$213>>2] = 0;
 $215 = HEAP32[(144180)>>2]|0;
 $216 = 1 << $$0376;
 $217 = $215 & $216;
 $218 = ($217|0)==(0);
 if ($218) {
  $219 = $215 | $216;
  HEAP32[(144180)>>2] = $219;
  HEAP32[$211>>2] = $$1;
  $220 = ((($$1)) + 24|0);
  HEAP32[$220>>2] = $211;
  $221 = ((($$1)) + 12|0);
  HEAP32[$221>>2] = $$1;
  $222 = ((($$1)) + 8|0);
  HEAP32[$222>>2] = $$1;
  return;
 }
 $223 = HEAP32[$211>>2]|0;
 $224 = ((($223)) + 4|0);
 $225 = HEAP32[$224>>2]|0;
 $226 = $225 & -8;
 $227 = ($226|0)==($$2|0);
 L104: do {
  if ($227) {
   $$0365$lcssa = $223;
  } else {
   $228 = ($$0376|0)==(31);
   $229 = $$0376 >>> 1;
   $230 = (25 - ($229))|0;
   $231 = $228 ? 0 : $230;
   $232 = $$2 << $231;
   $$03649 = $232;$$03658 = $223;
   while(1) {
    $239 = $$03649 >>> 31;
    $240 = (((($$03658)) + 16|0) + ($239<<2)|0);
    $235 = HEAP32[$240>>2]|0;
    $241 = ($235|0)==(0|0);
    if ($241) {
     break;
    }
    $233 = $$03649 << 1;
    $234 = ((($235)) + 4|0);
    $236 = HEAP32[$234>>2]|0;
    $237 = $236 & -8;
    $238 = ($237|0)==($$2|0);
    if ($238) {
     $$0365$lcssa = $235;
     break L104;
    } else {
     $$03649 = $233;$$03658 = $235;
    }
   }
   HEAP32[$240>>2] = $$1;
   $242 = ((($$1)) + 24|0);
   HEAP32[$242>>2] = $$03658;
   $243 = ((($$1)) + 12|0);
   HEAP32[$243>>2] = $$1;
   $244 = ((($$1)) + 8|0);
   HEAP32[$244>>2] = $$1;
   return;
  }
 } while(0);
 $245 = ((($$0365$lcssa)) + 8|0);
 $246 = HEAP32[$245>>2]|0;
 $247 = ((($246)) + 12|0);
 HEAP32[$247>>2] = $$1;
 HEAP32[$245>>2] = $$1;
 $248 = ((($$1)) + 8|0);
 HEAP32[$248>>2] = $246;
 $249 = ((($$1)) + 12|0);
 HEAP32[$249>>2] = $$0365$lcssa;
 $250 = ((($$1)) + 24|0);
 HEAP32[$250>>2] = 0;
 return;
}
function ___stdio_close($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $vararg_buffer = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $1 = ((($0)) + 60|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = (_dummy_734($2)|0);
 HEAP32[$vararg_buffer>>2] = $3;
 $4 = (___syscall6(6,($vararg_buffer|0))|0);
 $5 = (___syscall_ret($4)|0);
 STACKTOP = sp;return ($5|0);
}
function ___stdio_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$04756 = 0, $$04855 = 0, $$04954 = 0, $$051 = 0, $$1 = 0, $$150 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0;
 var $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer3 = sp + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 $4 = ((($0)) + 28|0);
 $5 = HEAP32[$4>>2]|0;
 HEAP32[$3>>2] = $5;
 $6 = ((($3)) + 4|0);
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = (($8) - ($5))|0;
 HEAP32[$6>>2] = $9;
 $10 = ((($3)) + 8|0);
 HEAP32[$10>>2] = $1;
 $11 = ((($3)) + 12|0);
 HEAP32[$11>>2] = $2;
 $12 = (($9) + ($2))|0;
 $13 = ((($0)) + 60|0);
 $14 = HEAP32[$13>>2]|0;
 $15 = $3;
 HEAP32[$vararg_buffer>>2] = $14;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $15;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $16 = (___syscall146(146,($vararg_buffer|0))|0);
 $17 = (___syscall_ret($16)|0);
 $18 = ($12|0)==($17|0);
 L1: do {
  if ($18) {
   label = 3;
  } else {
   $$04756 = 2;$$04855 = $12;$$04954 = $3;$27 = $17;
   while(1) {
    $26 = ($27|0)<(0);
    if ($26) {
     break;
    }
    $35 = (($$04855) - ($27))|0;
    $36 = ((($$04954)) + 4|0);
    $37 = HEAP32[$36>>2]|0;
    $38 = ($27>>>0)>($37>>>0);
    $39 = ((($$04954)) + 8|0);
    $$150 = $38 ? $39 : $$04954;
    $40 = $38 << 31 >> 31;
    $$1 = (($$04756) + ($40))|0;
    $41 = $38 ? $37 : 0;
    $$0 = (($27) - ($41))|0;
    $42 = HEAP32[$$150>>2]|0;
    $43 = (($42) + ($$0)|0);
    HEAP32[$$150>>2] = $43;
    $44 = ((($$150)) + 4|0);
    $45 = HEAP32[$44>>2]|0;
    $46 = (($45) - ($$0))|0;
    HEAP32[$44>>2] = $46;
    $47 = HEAP32[$13>>2]|0;
    $48 = $$150;
    HEAP32[$vararg_buffer3>>2] = $47;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = $48;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = $$1;
    $49 = (___syscall146(146,($vararg_buffer3|0))|0);
    $50 = (___syscall_ret($49)|0);
    $51 = ($35|0)==($50|0);
    if ($51) {
     label = 3;
     break L1;
    } else {
     $$04756 = $$1;$$04855 = $35;$$04954 = $$150;$27 = $50;
    }
   }
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = 0;
   HEAP32[$4>>2] = 0;
   HEAP32[$7>>2] = 0;
   $29 = HEAP32[$0>>2]|0;
   $30 = $29 | 32;
   HEAP32[$0>>2] = $30;
   $31 = ($$04756|0)==(2);
   if ($31) {
    $$051 = 0;
   } else {
    $32 = ((($$04954)) + 4|0);
    $33 = HEAP32[$32>>2]|0;
    $34 = (($2) - ($33))|0;
    $$051 = $34;
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 16|0);
  HEAP32[$24>>2] = $23;
  $25 = $20;
  HEAP32[$4>>2] = $25;
  HEAP32[$7>>2] = $25;
  $$051 = $2;
 }
 STACKTOP = sp;return ($$051|0);
}
function ___stdio_seek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$pre = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, $vararg_ptr3 = 0, $vararg_ptr4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 20|0;
 $4 = ((($0)) + 60|0);
 $5 = HEAP32[$4>>2]|0;
 $6 = $3;
 HEAP32[$vararg_buffer>>2] = $5;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = 0;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = $1;
 $vararg_ptr3 = ((($vararg_buffer)) + 12|0);
 HEAP32[$vararg_ptr3>>2] = $6;
 $vararg_ptr4 = ((($vararg_buffer)) + 16|0);
 HEAP32[$vararg_ptr4>>2] = $2;
 $7 = (___syscall140(140,($vararg_buffer|0))|0);
 $8 = (___syscall_ret($7)|0);
 $9 = ($8|0)<(0);
 if ($9) {
  HEAP32[$3>>2] = -1;
  $10 = -1;
 } else {
  $$pre = HEAP32[$3>>2]|0;
  $10 = $$pre;
 }
 STACKTOP = sp;return ($10|0);
}
function ___syscall_ret($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0>>>0)>(4294963200);
 if ($1) {
  $2 = (0 - ($0))|0;
  $3 = (___errno_location()|0);
  HEAP32[$3>>2] = $2;
  $$0 = -1;
 } else {
  $$0 = $0;
 }
 return ($$0|0);
}
function ___errno_location() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144736|0);
}
function _dummy_734($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return ($0|0);
}
function ___stdio_read($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$cast = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp + 16|0;
 $3 = sp;
 HEAP32[$3>>2] = $1;
 $4 = ((($3)) + 4|0);
 $5 = ((($0)) + 48|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = ($6|0)!=(0);
 $8 = $7&1;
 $9 = (($2) - ($8))|0;
 HEAP32[$4>>2] = $9;
 $10 = ((($3)) + 8|0);
 $11 = ((($0)) + 44|0);
 $12 = HEAP32[$11>>2]|0;
 HEAP32[$10>>2] = $12;
 $13 = ((($3)) + 12|0);
 HEAP32[$13>>2] = $6;
 $14 = ((($0)) + 60|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = $3;
 HEAP32[$vararg_buffer>>2] = $15;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $16;
 $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
 HEAP32[$vararg_ptr2>>2] = 2;
 $17 = (___syscall145(145,($vararg_buffer|0))|0);
 $18 = (___syscall_ret($17)|0);
 $19 = ($18|0)<(1);
 if ($19) {
  $20 = $18 & 48;
  $21 = $20 ^ 16;
  $22 = HEAP32[$0>>2]|0;
  $23 = $22 | $21;
  HEAP32[$0>>2] = $23;
  $$0 = $18;
 } else {
  $24 = HEAP32[$4>>2]|0;
  $25 = ($18>>>0)>($24>>>0);
  if ($25) {
   $26 = (($18) - ($24))|0;
   $27 = HEAP32[$11>>2]|0;
   $28 = ((($0)) + 4|0);
   HEAP32[$28>>2] = $27;
   $$cast = $27;
   $29 = (($$cast) + ($26)|0);
   $30 = ((($0)) + 8|0);
   HEAP32[$30>>2] = $29;
   $31 = HEAP32[$5>>2]|0;
   $32 = ($31|0)==(0);
   if ($32) {
    $$0 = $2;
   } else {
    $33 = ((($$cast)) + 1|0);
    HEAP32[$28>>2] = $33;
    $34 = HEAP8[$$cast>>0]|0;
    $35 = (($2) + -1)|0;
    $36 = (($1) + ($35)|0);
    HEAP8[$36>>0] = $34;
    $$0 = $2;
   }
  } else {
   $$0 = $18;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___stdout_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, $vararg_ptr2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $vararg_buffer = sp;
 $3 = sp + 16|0;
 $4 = ((($0)) + 36|0);
 HEAP32[$4>>2] = 213;
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 64;
 $7 = ($6|0)==(0);
 if ($7) {
  $8 = ((($0)) + 60|0);
  $9 = HEAP32[$8>>2]|0;
  $10 = $3;
  HEAP32[$vararg_buffer>>2] = $9;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = 21523;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = $10;
  $11 = (___syscall54(54,($vararg_buffer|0))|0);
  $12 = ($11|0)==(0);
  if (!($12)) {
   $13 = ((($0)) + 75|0);
   HEAP8[$13>>0] = -1;
  }
 }
 $14 = (___stdio_write($0,$1,$2)|0);
 STACKTOP = sp;return ($14|0);
}
function _tolower($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_isupper($0)|0);
 $2 = ($1|0)==(0);
 $3 = $0 | 32;
 $$0 = $2 ? $0 : $3;
 return ($$0|0);
}
function _isupper($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -65)|0;
 $2 = ($1>>>0)<(26);
 $3 = $2&1;
 return ($3|0);
}
function _strtox_764($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$sink = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $5 = sp;
 HEAP32[$5>>2] = 0;
 $6 = ((($5)) + 4|0);
 HEAP32[$6>>2] = $0;
 $7 = ((($5)) + 44|0);
 HEAP32[$7>>2] = $0;
 $8 = ($0|0)<(0|0);
 $9 = ((($0)) + 2147483647|0);
 $$sink = $8 ? (-1) : $9;
 $10 = ((($5)) + 8|0);
 HEAP32[$10>>2] = $$sink;
 $11 = ((($5)) + 76|0);
 HEAP32[$11>>2] = -1;
 ___shlim($5,0);
 $12 = (___intscan($5,$2,1,$3,$4)|0);
 $13 = tempRet0;
 $14 = ($1|0)==(0|0);
 if (!($14)) {
  $15 = ((($5)) + 108|0);
  $16 = HEAP32[$15>>2]|0;
  $17 = HEAP32[$6>>2]|0;
  $18 = HEAP32[$10>>2]|0;
  $19 = (($17) + ($16))|0;
  $20 = (($19) - ($18))|0;
  $21 = (($0) + ($20)|0);
  HEAP32[$1>>2] = $21;
 }
 tempRet0 = ($13);
 STACKTOP = sp;return ($12|0);
}
function ___shlim($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ((($0)) + 104|0);
 HEAP32[$2>>2] = $1;
 $3 = ((($0)) + 8|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 4|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ((($0)) + 108|0);
 HEAP32[$8>>2] = $7;
 $9 = ($1|0)!=(0);
 $10 = ($7|0)>($1|0);
 $or$cond = $9 & $10;
 if ($or$cond) {
  $11 = $6;
  $12 = (($11) + ($1)|0);
  $13 = ((($0)) + 100|0);
  HEAP32[$13>>2] = $12;
 } else {
  $14 = ((($0)) + 100|0);
  HEAP32[$14>>2] = $4;
 }
 return;
}
function ___intscan($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0154215 = 0, $$0157 = 0, $$0159 = 0, $$1155184 = 0, $$1158 = 0, $$1160 = 0, $$1160170 = 0, $$1165 = 0, $$1165168 = 0, $$1165169 = 0, $$2156202 = 0, $$3162208 = 0, $$4163$lcssa = 0, $$6$lcssa = 0, $$7190 = 0, $$8 = 0, $$pre$phi237Z2D = 0, $$pre$phi239Z2D = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0;
 var $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $30 = 0, $31 = 0, $32 = 0;
 var $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0;
 var $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0;
 var $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0;
 var $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $or$cond12 = 0, $or$cond179 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select166 = 0, $spec$select167 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $5 = ($1>>>0)>(36);
 L1: do {
  if ($5) {
   $6 = (___errno_location()|0);
   HEAP32[$6>>2] = 22;
   $291 = 0;$292 = 0;
  } else {
   $7 = ((($0)) + 4|0);
   $8 = ((($0)) + 100|0);
   while(1) {
    $9 = HEAP32[$7>>2]|0;
    $10 = HEAP32[$8>>2]|0;
    $11 = ($9>>>0)<($10>>>0);
    if ($11) {
     $12 = ((($9)) + 1|0);
     HEAP32[$7>>2] = $12;
     $13 = HEAP8[$9>>0]|0;
     $14 = $13&255;
     $16 = $14;
    } else {
     $15 = (___shgetc($0)|0);
     $16 = $15;
    }
    $17 = (_isspace($16)|0);
    $18 = ($17|0)==(0);
    if ($18) {
     break;
    }
   }
   L11: do {
    switch ($16|0) {
    case 43: case 45:  {
     $19 = ($16|0)==(45);
     $20 = $19 << 31 >> 31;
     $21 = HEAP32[$7>>2]|0;
     $22 = HEAP32[$8>>2]|0;
     $23 = ($21>>>0)<($22>>>0);
     if ($23) {
      $24 = ((($21)) + 1|0);
      HEAP32[$7>>2] = $24;
      $25 = HEAP8[$21>>0]|0;
      $26 = $25&255;
      $$0157 = $20;$$0159 = $26;
      break L11;
     } else {
      $27 = (___shgetc($0)|0);
      $$0157 = $20;$$0159 = $27;
      break L11;
     }
     break;
    }
    default: {
     $$0157 = 0;$$0159 = $16;
    }
    }
   } while(0);
   $28 = ($1|0)==(0);
   $29 = $1 | 16;
   $30 = ($29|0)==(16);
   $31 = ($$0159|0)==(48);
   $or$cond5 = $30 & $31;
   do {
    if ($or$cond5) {
     $32 = HEAP32[$7>>2]|0;
     $33 = HEAP32[$8>>2]|0;
     $34 = ($32>>>0)<($33>>>0);
     if ($34) {
      $35 = ((($32)) + 1|0);
      HEAP32[$7>>2] = $35;
      $36 = HEAP8[$32>>0]|0;
      $37 = $36&255;
      $40 = $37;
     } else {
      $38 = (___shgetc($0)|0);
      $40 = $38;
     }
     $39 = $40 | 32;
     $41 = ($39|0)==(120);
     if (!($41)) {
      if ($28) {
       $$1160170 = $40;$$1165168 = 8;
       label = 47;
       break;
      } else {
       $$1160 = $40;$$1165 = $1;
       label = 32;
       break;
      }
     }
     $42 = HEAP32[$7>>2]|0;
     $43 = HEAP32[$8>>2]|0;
     $44 = ($42>>>0)<($43>>>0);
     if ($44) {
      $45 = ((($42)) + 1|0);
      HEAP32[$7>>2] = $45;
      $46 = HEAP8[$42>>0]|0;
      $47 = $46&255;
      $50 = $47;
     } else {
      $48 = (___shgetc($0)|0);
      $50 = $48;
     }
     $49 = ((114945) + ($50)|0);
     $51 = HEAP8[$49>>0]|0;
     $52 = ($51&255)>(15);
     if ($52) {
      $53 = HEAP32[$8>>2]|0;
      $54 = ($53|0)==(0|0);
      if (!($54)) {
       $55 = HEAP32[$7>>2]|0;
       $56 = ((($55)) + -1|0);
       HEAP32[$7>>2] = $56;
      }
      $57 = ($2|0)==(0);
      if ($57) {
       ___shlim($0,0);
       $291 = 0;$292 = 0;
       break L1;
      }
      if ($54) {
       $291 = 0;$292 = 0;
       break L1;
      }
      $58 = HEAP32[$7>>2]|0;
      $59 = ((($58)) + -1|0);
      HEAP32[$7>>2] = $59;
      $291 = 0;$292 = 0;
      break L1;
     } else {
      $$1160170 = $50;$$1165168 = 16;
      label = 47;
     }
    } else {
     $spec$select166 = $28 ? 10 : $1;
     $60 = ((114945) + ($$0159)|0);
     $61 = HEAP8[$60>>0]|0;
     $62 = $61&255;
     $63 = ($spec$select166>>>0)>($62>>>0);
     if ($63) {
      $$1160 = $$0159;$$1165 = $spec$select166;
      label = 32;
     } else {
      $64 = HEAP32[$8>>2]|0;
      $65 = ($64|0)==(0|0);
      if (!($65)) {
       $66 = HEAP32[$7>>2]|0;
       $67 = ((($66)) + -1|0);
       HEAP32[$7>>2] = $67;
      }
      ___shlim($0,0);
      $68 = (___errno_location()|0);
      HEAP32[$68>>2] = 22;
      $291 = 0;$292 = 0;
      break L1;
     }
    }
   } while(0);
   L43: do {
    if ((label|0) == 32) {
     $69 = ($$1165|0)==(10);
     if ($69) {
      $70 = (($$1160) + -48)|0;
      $71 = ($70>>>0)<(10);
      if ($71) {
       $$0154215 = 0;$74 = $70;
       while(1) {
        $72 = ($$0154215*10)|0;
        $73 = (($72) + ($74))|0;
        $75 = HEAP32[$7>>2]|0;
        $76 = HEAP32[$8>>2]|0;
        $77 = ($75>>>0)<($76>>>0);
        if ($77) {
         $78 = ((($75)) + 1|0);
         HEAP32[$7>>2] = $78;
         $79 = HEAP8[$75>>0]|0;
         $80 = $79&255;
         $83 = $80;
        } else {
         $81 = (___shgetc($0)|0);
         $83 = $81;
        }
        $82 = (($83) + -48)|0;
        $84 = ($82>>>0)<(10);
        $85 = ($73>>>0)<(429496729);
        $86 = $84 & $85;
        if ($86) {
         $$0154215 = $73;$74 = $82;
        } else {
         break;
        }
       }
       $87 = ($82>>>0)<(10);
       if ($87) {
        $$3162208 = $83;$88 = $73;$89 = 0;$93 = $82;
        while(1) {
         $90 = (___muldi3(($88|0),($89|0),10,0)|0);
         $91 = tempRet0;
         $92 = ($93|0)<(0);
         $94 = $92 << 31 >> 31;
         $95 = $93 ^ -1;
         $96 = $94 ^ -1;
         $97 = ($91>>>0)>($96>>>0);
         $98 = ($90>>>0)>($95>>>0);
         $99 = ($91|0)==($96|0);
         $100 = $99 & $98;
         $101 = $97 | $100;
         if ($101) {
          $$1165169 = 10;$$8 = $$3162208;$293 = $88;$294 = $89;
          label = 76;
          break L43;
         }
         $102 = (_i64Add(($90|0),($91|0),($93|0),($94|0))|0);
         $103 = tempRet0;
         $104 = HEAP32[$7>>2]|0;
         $105 = HEAP32[$8>>2]|0;
         $106 = ($104>>>0)<($105>>>0);
         if ($106) {
          $107 = ((($104)) + 1|0);
          HEAP32[$7>>2] = $107;
          $108 = HEAP8[$104>>0]|0;
          $109 = $108&255;
          $112 = $109;
         } else {
          $110 = (___shgetc($0)|0);
          $112 = $110;
         }
         $111 = (($112) + -48)|0;
         $113 = ($111>>>0)<(10);
         $114 = ($103>>>0)<(429496729);
         $115 = ($102>>>0)<(2576980378);
         $116 = ($103|0)==(429496729);
         $117 = $116 & $115;
         $118 = $114 | $117;
         $or$cond7 = $113 & $118;
         if ($or$cond7) {
          $$3162208 = $112;$88 = $102;$89 = $103;$93 = $111;
         } else {
          break;
         }
        }
        $119 = ($111>>>0)>(9);
        if ($119) {
         $$1158 = $$0157;$265 = $103;$267 = $102;
        } else {
         $$1165169 = 10;$$8 = $112;$293 = $102;$294 = $103;
         label = 76;
        }
       } else {
        $$1158 = $$0157;$265 = 0;$267 = $73;
       }
      } else {
       $$1158 = $$0157;$265 = 0;$267 = 0;
      }
     } else {
      $$1160170 = $$1160;$$1165168 = $$1165;
      label = 47;
     }
    }
   } while(0);
   L63: do {
    if ((label|0) == 47) {
     $120 = (($$1165168) + -1)|0;
     $121 = $120 & $$1165168;
     $122 = ($121|0)==(0);
     if ($122) {
      $123 = ($$1165168*23)|0;
      $124 = $123 >>> 5;
      $125 = $124 & 7;
      $126 = (141002 + ($125)|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = ((114945) + ($$1160170)|0);
      $130 = HEAP8[$129>>0]|0;
      $131 = $130&255;
      $132 = ($$1165168>>>0)>($131>>>0);
      if ($132) {
       $$1155184 = 0;$135 = $131;
       while(1) {
        $133 = $$1155184 << $128;
        $134 = $135 | $133;
        $136 = HEAP32[$7>>2]|0;
        $137 = HEAP32[$8>>2]|0;
        $138 = ($136>>>0)<($137>>>0);
        if ($138) {
         $139 = ((($136)) + 1|0);
         HEAP32[$7>>2] = $139;
         $140 = HEAP8[$136>>0]|0;
         $141 = $140&255;
         $144 = $141;
        } else {
         $142 = (___shgetc($0)|0);
         $144 = $142;
        }
        $143 = ((114945) + ($144)|0);
        $145 = HEAP8[$143>>0]|0;
        $146 = $145&255;
        $147 = ($$1165168>>>0)>($146>>>0);
        $148 = ($134>>>0)<(134217728);
        $149 = $148 & $147;
        if ($149) {
         $$1155184 = $134;$135 = $146;
        } else {
         break;
        }
       }
       $$4163$lcssa = $144;$$pre$phi237Z2D = $146;$154 = 0;$156 = $134;$295 = $145;
      } else {
       $$4163$lcssa = $$1160170;$$pre$phi237Z2D = $131;$154 = 0;$156 = 0;$295 = $130;
      }
      $150 = (_bitshift64Lshr(-1,-1,($128|0))|0);
      $151 = tempRet0;
      $152 = ($$1165168>>>0)<=($$pre$phi237Z2D>>>0);
      $153 = ($151>>>0)<($154>>>0);
      $155 = ($150>>>0)<($156>>>0);
      $157 = ($151|0)==($154|0);
      $158 = $157 & $155;
      $159 = $153 | $158;
      $or$cond179 = $152 | $159;
      if ($or$cond179) {
       $$1165169 = $$1165168;$$8 = $$4163$lcssa;$293 = $156;$294 = $154;
       label = 76;
       break;
      }
      $160 = $156;$161 = $154;$165 = $295;
      while(1) {
       $162 = (_bitshift64Shl(($160|0),($161|0),($128|0))|0);
       $163 = tempRet0;
       $164 = $165&255;
       $166 = $162 | $164;
       $167 = HEAP32[$7>>2]|0;
       $168 = HEAP32[$8>>2]|0;
       $169 = ($167>>>0)<($168>>>0);
       if ($169) {
        $170 = ((($167)) + 1|0);
        HEAP32[$7>>2] = $170;
        $171 = HEAP8[$167>>0]|0;
        $172 = $171&255;
        $175 = $172;
       } else {
        $173 = (___shgetc($0)|0);
        $175 = $173;
       }
       $174 = ((114945) + ($175)|0);
       $176 = HEAP8[$174>>0]|0;
       $177 = $176&255;
       $178 = ($$1165168>>>0)<=($177>>>0);
       $179 = ($163>>>0)>($151>>>0);
       $180 = ($166>>>0)>($150>>>0);
       $181 = ($163|0)==($151|0);
       $182 = $181 & $180;
       $183 = $179 | $182;
       $or$cond = $178 | $183;
       if ($or$cond) {
        $$1165169 = $$1165168;$$8 = $175;$293 = $166;$294 = $163;
        label = 76;
        break L63;
       } else {
        $160 = $166;$161 = $163;$165 = $176;
       }
      }
     }
     $184 = ((114945) + ($$1160170)|0);
     $185 = HEAP8[$184>>0]|0;
     $186 = $185&255;
     $187 = ($$1165168>>>0)>($186>>>0);
     if ($187) {
      $$2156202 = 0;$190 = $186;
      while(1) {
       $188 = Math_imul($$2156202, $$1165168)|0;
       $189 = (($190) + ($188))|0;
       $191 = HEAP32[$7>>2]|0;
       $192 = HEAP32[$8>>2]|0;
       $193 = ($191>>>0)<($192>>>0);
       if ($193) {
        $194 = ((($191)) + 1|0);
        HEAP32[$7>>2] = $194;
        $195 = HEAP8[$191>>0]|0;
        $196 = $195&255;
        $199 = $196;
       } else {
        $197 = (___shgetc($0)|0);
        $199 = $197;
       }
       $198 = ((114945) + ($199)|0);
       $200 = HEAP8[$198>>0]|0;
       $201 = $200&255;
       $202 = ($$1165168>>>0)>($201>>>0);
       $203 = ($189>>>0)<(119304647);
       $204 = $203 & $202;
       if ($204) {
        $$2156202 = $189;$190 = $201;
       } else {
        break;
       }
      }
      $$6$lcssa = $199;$$pre$phi239Z2D = $201;$296 = $200;$297 = $189;$298 = 0;
     } else {
      $$6$lcssa = $$1160170;$$pre$phi239Z2D = $186;$296 = $185;$297 = 0;$298 = 0;
     }
     $205 = ($$1165168>>>0)>($$pre$phi239Z2D>>>0);
     if ($205) {
      $206 = (___udivdi3(-1,-1,($$1165168|0),0)|0);
      $207 = tempRet0;
      $$7190 = $$6$lcssa;$209 = $298;$211 = $297;$218 = $296;
      while(1) {
       $208 = ($209>>>0)>($207>>>0);
       $210 = ($211>>>0)>($206>>>0);
       $212 = ($209|0)==($207|0);
       $213 = $212 & $210;
       $214 = $208 | $213;
       if ($214) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $211;$294 = $209;
        label = 76;
        break L63;
       }
       $215 = (___muldi3(($211|0),($209|0),($$1165168|0),0)|0);
       $216 = tempRet0;
       $217 = $218&255;
       $219 = $217 ^ -1;
       $220 = ($216>>>0)>(4294967295);
       $221 = ($215>>>0)>($219>>>0);
       $222 = ($216|0)==(-1);
       $223 = $222 & $221;
       $224 = $220 | $223;
       if ($224) {
        $$1165169 = $$1165168;$$8 = $$7190;$293 = $211;$294 = $209;
        label = 76;
        break L63;
       }
       $225 = (_i64Add(($215|0),($216|0),($217|0),0)|0);
       $226 = tempRet0;
       $227 = HEAP32[$7>>2]|0;
       $228 = HEAP32[$8>>2]|0;
       $229 = ($227>>>0)<($228>>>0);
       if ($229) {
        $230 = ((($227)) + 1|0);
        HEAP32[$7>>2] = $230;
        $231 = HEAP8[$227>>0]|0;
        $232 = $231&255;
        $235 = $232;
       } else {
        $233 = (___shgetc($0)|0);
        $235 = $233;
       }
       $234 = ((114945) + ($235)|0);
       $236 = HEAP8[$234>>0]|0;
       $237 = $236&255;
       $238 = ($$1165168>>>0)>($237>>>0);
       if ($238) {
        $$7190 = $235;$209 = $226;$211 = $225;$218 = $236;
       } else {
        $$1165169 = $$1165168;$$8 = $235;$293 = $225;$294 = $226;
        label = 76;
        break;
       }
      }
     } else {
      $$1165169 = $$1165168;$$8 = $$6$lcssa;$293 = $297;$294 = $298;
      label = 76;
     }
    }
   } while(0);
   if ((label|0) == 76) {
    $239 = ((114945) + ($$8)|0);
    $240 = HEAP8[$239>>0]|0;
    $241 = $240&255;
    $242 = ($$1165169>>>0)>($241>>>0);
    if ($242) {
     while(1) {
      $243 = HEAP32[$7>>2]|0;
      $244 = HEAP32[$8>>2]|0;
      $245 = ($243>>>0)<($244>>>0);
      if ($245) {
       $246 = ((($243)) + 1|0);
       HEAP32[$7>>2] = $246;
       $247 = HEAP8[$243>>0]|0;
       $248 = $247&255;
       $251 = $248;
      } else {
       $249 = (___shgetc($0)|0);
       $251 = $249;
      }
      $250 = ((114945) + ($251)|0);
      $252 = HEAP8[$250>>0]|0;
      $253 = $252&255;
      $254 = ($$1165169>>>0)>($253>>>0);
      if (!($254)) {
       break;
      }
     }
     $255 = (___errno_location()|0);
     HEAP32[$255>>2] = 34;
     $256 = $3 & 1;
     $257 = ($256|0)==(0);
     $258 = (0)==(0);
     $259 = $257 & $258;
     $spec$select167 = $259 ? $$0157 : 0;
     $$1158 = $spec$select167;$265 = $4;$267 = $3;
    } else {
     $$1158 = $$0157;$265 = $294;$267 = $293;
    }
   }
   $260 = HEAP32[$8>>2]|0;
   $261 = ($260|0)==(0|0);
   if (!($261)) {
    $262 = HEAP32[$7>>2]|0;
    $263 = ((($262)) + -1|0);
    HEAP32[$7>>2] = $263;
   }
   $264 = ($265>>>0)<($4>>>0);
   $266 = ($267>>>0)<($3>>>0);
   $268 = ($265|0)==($4|0);
   $269 = $268 & $266;
   $270 = $264 | $269;
   if (!($270)) {
    $271 = $3 & 1;
    $272 = ($271|0)!=(0);
    $273 = (0)!=(0);
    $274 = $272 | $273;
    $275 = ($$1158|0)!=(0);
    $or$cond12 = $274 | $275;
    if (!($or$cond12)) {
     $276 = (___errno_location()|0);
     HEAP32[$276>>2] = 34;
     $277 = (_i64Add(($3|0),($4|0),-1,-1)|0);
     $278 = tempRet0;
     $291 = $278;$292 = $277;
     break;
    }
    $279 = ($265>>>0)>($4>>>0);
    $280 = ($267>>>0)>($3>>>0);
    $281 = ($265|0)==($4|0);
    $282 = $281 & $280;
    $283 = $279 | $282;
    if ($283) {
     $284 = (___errno_location()|0);
     HEAP32[$284>>2] = 34;
     $291 = $4;$292 = $3;
     break;
    }
   }
   $285 = ($$1158|0)<(0);
   $286 = $285 << 31 >> 31;
   $287 = $267 ^ $$1158;
   $288 = $265 ^ $286;
   $289 = (_i64Subtract(($287|0),($288|0),($$1158|0),($286|0))|0);
   $290 = tempRet0;
   $291 = $290;$292 = $289;
  }
 } while(0);
 tempRet0 = ($291);
 return ($292|0);
}
function ___shgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $$phi$trans$insert = 0, $$phi$trans$insert28 = 0, $$pre = 0, $$pre29 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 104|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if ($3) {
  label = 3;
 } else {
  $4 = ((($0)) + 108|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)<($2|0);
  if ($6) {
   label = 3;
  } else {
   label = 4;
  }
 }
 if ((label|0) == 3) {
  $7 = (___uflow($0)|0);
  $8 = ($7|0)<(0);
  if ($8) {
   label = 4;
  } else {
   $10 = HEAP32[$1>>2]|0;
   $11 = ($10|0)==(0);
   $$phi$trans$insert = ((($0)) + 8|0);
   $$pre = HEAP32[$$phi$trans$insert>>2]|0;
   if ($11) {
    $12 = $$pre;
    $42 = $12;
    label = 9;
   } else {
    $13 = ((($0)) + 4|0);
    $14 = HEAP32[$13>>2]|0;
    $15 = $14;
    $16 = (($$pre) - ($15))|0;
    $17 = ((($0)) + 108|0);
    $18 = HEAP32[$17>>2]|0;
    $19 = (($10) - ($18))|0;
    $20 = ($16|0)<($19|0);
    $21 = $$pre;
    if ($20) {
     $42 = $21;
     label = 9;
    } else {
     $22 = (($19) + -1)|0;
     $23 = (($14) + ($22)|0);
     $24 = ((($0)) + 100|0);
     HEAP32[$24>>2] = $23;
     $27 = $21;
    }
   }
   if ((label|0) == 9) {
    $25 = ((($0)) + 100|0);
    HEAP32[$25>>2] = $$pre;
    $27 = $42;
   }
   $26 = ($27|0)==(0|0);
   $$phi$trans$insert28 = ((($0)) + 4|0);
   if ($26) {
    $$pre29 = HEAP32[$$phi$trans$insert28>>2]|0;
    $37 = $$pre29;
   } else {
    $28 = HEAP32[$$phi$trans$insert28>>2]|0;
    $29 = $27;
    $30 = ((($0)) + 108|0);
    $31 = HEAP32[$30>>2]|0;
    $32 = (($29) + 1)|0;
    $33 = (($32) - ($28))|0;
    $34 = (($33) + ($31))|0;
    HEAP32[$30>>2] = $34;
    $35 = $28;
    $37 = $35;
   }
   $36 = ((($37)) + -1|0);
   $38 = HEAP8[$36>>0]|0;
   $39 = $38&255;
   $40 = ($7|0)==($39|0);
   if ($40) {
    $$0 = $7;
   } else {
    $41 = $7&255;
    HEAP8[$36>>0] = $41;
    $$0 = $7;
   }
  }
 }
 if ((label|0) == 4) {
  $9 = ((($0)) + 100|0);
  HEAP32[$9>>2] = 0;
  $$0 = -1;
 }
 return ($$0|0);
}
function _isspace($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $narrow = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(32);
 $2 = (($0) + -9)|0;
 $3 = ($2>>>0)<(5);
 $narrow = $1 | $3;
 $4 = $narrow&1;
 return ($4|0);
}
function ___uflow($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (___toread($0)|0);
 $3 = ($2|0)==(0);
 if ($3) {
  $4 = ((($0)) + 32|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (ftCall_iiii($5|0,$0,$1,1)|0);
  $7 = ($6|0)==(1);
  if ($7) {
   $8 = HEAP8[$1>>0]|0;
   $9 = $8&255;
   $$0 = $9;
  } else {
   $$0 = -1;
  }
 } else {
  $$0 = -1;
 }
 STACKTOP = sp;return ($$0|0);
}
function ___toread($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $sext = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = ((($0)) + 20|0);
 $8 = HEAP32[$7>>2]|0;
 $9 = ((($0)) + 28|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = ($8>>>0)>($10>>>0);
 if ($11) {
  $12 = ((($0)) + 36|0);
  $13 = HEAP32[$12>>2]|0;
  (ftCall_iiii($13|0,$0,0,0)|0);
 }
 $14 = ((($0)) + 16|0);
 HEAP32[$14>>2] = 0;
 HEAP32[$9>>2] = 0;
 HEAP32[$7>>2] = 0;
 $15 = HEAP32[$0>>2]|0;
 $16 = $15 & 4;
 $17 = ($16|0)==(0);
 if ($17) {
  $19 = ((($0)) + 44|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ((($0)) + 48|0);
  $22 = HEAP32[$21>>2]|0;
  $23 = (($20) + ($22)|0);
  $24 = ((($0)) + 8|0);
  HEAP32[$24>>2] = $23;
  $25 = ((($0)) + 4|0);
  HEAP32[$25>>2] = $23;
  $26 = $15 << 27;
  $sext = $26 >> 31;
  $$0 = $sext;
 } else {
  $18 = $15 | 32;
  HEAP32[$0>>2] = $18;
  $$0 = -1;
 }
 return ($$0|0);
}
function _strtol($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (_strtox_764($0,$1,$2,-2147483648,0)|0);
 $4 = tempRet0;
 return ($3|0);
}
function _strcmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$011 = 0, $$0710 = 0, $$lcssa = 0, $$lcssa8 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($2<<24>>24)!=($3<<24>>24);
 $5 = ($2<<24>>24)==(0);
 $or$cond9 = $5 | $4;
 if ($or$cond9) {
  $$lcssa = $3;$$lcssa8 = $2;
 } else {
  $$011 = $1;$$0710 = $0;
  while(1) {
   $6 = ((($$0710)) + 1|0);
   $7 = ((($$011)) + 1|0);
   $8 = HEAP8[$6>>0]|0;
   $9 = HEAP8[$7>>0]|0;
   $10 = ($8<<24>>24)!=($9<<24>>24);
   $11 = ($8<<24>>24)==(0);
   $or$cond = $11 | $10;
   if ($or$cond) {
    $$lcssa = $9;$$lcssa8 = $8;
    break;
   } else {
    $$011 = $7;$$0710 = $6;
   }
  }
 }
 $12 = $$lcssa8&255;
 $13 = $$lcssa&255;
 $14 = (($12) - ($13))|0;
 return ($14|0);
}
function _memcmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$01318 = 0, $$01417 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $14 = 0;
  } else {
   $$01318 = $0;$$01417 = $2;$$019 = $1;
   while(1) {
    $4 = HEAP8[$$01318>>0]|0;
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($4<<24>>24)==($5<<24>>24);
    if (!($6)) {
     break;
    }
    $7 = (($$01417) + -1)|0;
    $8 = ((($$01318)) + 1|0);
    $9 = ((($$019)) + 1|0);
    $10 = ($7|0)==(0);
    if ($10) {
     $14 = 0;
     break L1;
    } else {
     $$01318 = $8;$$01417 = $7;$$019 = $9;
    }
   }
   $11 = $4&255;
   $12 = $5&255;
   $13 = (($11) - ($12))|0;
   $14 = $13;
  }
 } while(0);
 return ($14|0);
}
function _strncmp($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$01823 = 0, $$01925 = 0, $$01925$in = 0, $$020 = 0, $$024 = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0;
 var $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond21 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(0);
 if ($3) {
  $$020 = 0;
 } else {
  $4 = HEAP8[$0>>0]|0;
  $5 = ($4<<24>>24)==(0);
  L3: do {
   if ($5) {
    $$0$lcssa = $1;$$lcssa = 0;
   } else {
    $$01823 = $0;$$01925$in = $2;$$024 = $1;$10 = $4;
    while(1) {
     $$01925 = (($$01925$in) + -1)|0;
     $6 = HEAP8[$$024>>0]|0;
     $7 = ($6<<24>>24)!=(0);
     $8 = ($$01925|0)!=(0);
     $or$cond = $8 & $7;
     $9 = ($10<<24>>24)==($6<<24>>24);
     $or$cond21 = $9 & $or$cond;
     if (!($or$cond21)) {
      $$0$lcssa = $$024;$$lcssa = $10;
      break L3;
     }
     $11 = ((($$01823)) + 1|0);
     $12 = ((($$024)) + 1|0);
     $13 = HEAP8[$11>>0]|0;
     $14 = ($13<<24>>24)==(0);
     if ($14) {
      $$0$lcssa = $12;$$lcssa = 0;
      break;
     } else {
      $$01823 = $11;$$01925$in = $$01925;$$024 = $12;$10 = $13;
     }
    }
   }
  } while(0);
  $15 = $$lcssa&255;
  $16 = HEAP8[$$0$lcssa>>0]|0;
  $17 = $16&255;
  $18 = (($15) - ($17))|0;
  $$020 = $18;
 }
 return ($$020|0);
}
function _isdigit($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (($0) + -48)|0;
 $2 = ($1>>>0)<(10);
 $3 = $2&1;
 return ($3|0);
}
function _vsnprintf($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$0 = 0, $$014 = 0, $$015 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 128|0;
 $4 = sp + 124|0;
 $5 = sp;
 dest=$5; src=120752; stop=dest+124|0; do { HEAP32[dest>>2]=HEAP32[src>>2]|0; dest=dest+4|0; src=src+4|0; } while ((dest|0) < (stop|0));
 $6 = (($1) + -1)|0;
 $7 = ($6>>>0)>(2147483646);
 if ($7) {
  $8 = ($1|0)==(0);
  if ($8) {
   $$014 = $4;$$015 = 1;
   label = 4;
  } else {
   $9 = (___errno_location()|0);
   HEAP32[$9>>2] = 75;
   $$0 = -1;
  }
 } else {
  $$014 = $0;$$015 = $1;
  label = 4;
 }
 if ((label|0) == 4) {
  $10 = $$014;
  $11 = (-2 - ($10))|0;
  $12 = ($$015>>>0)>($11>>>0);
  $spec$select = $12 ? $11 : $$015;
  $13 = ((($5)) + 48|0);
  HEAP32[$13>>2] = $spec$select;
  $14 = ((($5)) + 20|0);
  HEAP32[$14>>2] = $$014;
  $15 = ((($5)) + 44|0);
  HEAP32[$15>>2] = $$014;
  $16 = (($$014) + ($spec$select)|0);
  $17 = ((($5)) + 16|0);
  HEAP32[$17>>2] = $16;
  $18 = ((($5)) + 28|0);
  HEAP32[$18>>2] = $16;
  $19 = (_vfprintf($5,$2,$3)|0);
  $20 = ($spec$select|0)==(0);
  if ($20) {
   $$0 = $19;
  } else {
   $21 = HEAP32[$14>>2]|0;
   $22 = HEAP32[$17>>2]|0;
   $23 = ($21|0)==($22|0);
   $24 = $23 << 31 >> 31;
   $25 = (($21) + ($24)|0);
   HEAP8[$25>>0] = 0;
   $$0 = $19;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _vfprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select41 = 0, $vacopy_currentptr = 0, dest = 0, label = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 224|0;
 $3 = sp + 208|0;
 $4 = sp + 160|0;
 $5 = sp + 80|0;
 $6 = sp;
 dest=$4; stop=dest+40|0; do { HEAP32[dest>>2]=0|0; dest=dest+4|0; } while ((dest|0) < (stop|0));
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $7 = (_printf_core(0,$1,$3,$5,$4)|0);
 $8 = ($7|0)<(0);
 if ($8) {
  $$0 = -1;
 } else {
  $9 = ((($0)) + 76|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)>(-1);
  if ($11) {
   $12 = (___lockfile($0)|0);
   $40 = $12;
  } else {
   $40 = 0;
  }
  $13 = HEAP32[$0>>2]|0;
  $14 = $13 & 32;
  $15 = ((($0)) + 74|0);
  $16 = HEAP8[$15>>0]|0;
  $17 = ($16<<24>>24)<(1);
  if ($17) {
   $18 = $13 & -33;
   HEAP32[$0>>2] = $18;
  }
  $19 = ((($0)) + 48|0);
  $20 = HEAP32[$19>>2]|0;
  $21 = ($20|0)==(0);
  if ($21) {
   $23 = ((($0)) + 44|0);
   $24 = HEAP32[$23>>2]|0;
   HEAP32[$23>>2] = $6;
   $25 = ((($0)) + 28|0);
   HEAP32[$25>>2] = $6;
   $26 = ((($0)) + 20|0);
   HEAP32[$26>>2] = $6;
   HEAP32[$19>>2] = 80;
   $27 = ((($6)) + 80|0);
   $28 = ((($0)) + 16|0);
   HEAP32[$28>>2] = $27;
   $29 = (_printf_core($0,$1,$3,$5,$4)|0);
   $30 = ($24|0)==(0|0);
   if ($30) {
    $$1 = $29;
   } else {
    $31 = ((($0)) + 36|0);
    $32 = HEAP32[$31>>2]|0;
    (ftCall_iiii($32|0,$0,0,0)|0);
    $33 = HEAP32[$26>>2]|0;
    $34 = ($33|0)==(0|0);
    $spec$select = $34 ? -1 : $29;
    HEAP32[$23>>2] = $24;
    HEAP32[$19>>2] = 0;
    HEAP32[$28>>2] = 0;
    HEAP32[$25>>2] = 0;
    HEAP32[$26>>2] = 0;
    $$1 = $spec$select;
   }
  } else {
   $22 = (_printf_core($0,$1,$3,$5,$4)|0);
   $$1 = $22;
  }
  $35 = HEAP32[$0>>2]|0;
  $36 = $35 & 32;
  $37 = ($36|0)==(0);
  $spec$select41 = $37 ? $$1 : -1;
  $38 = $35 | $14;
  HEAP32[$0>>2] = $38;
  $39 = ($40|0)==(0);
  if (!($39)) {
   ___unlockfile($0);
  }
  $$0 = $spec$select41;
 }
 STACKTOP = sp;return ($$0|0);
}
function _printf_core($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$ = 0, $$0 = 0, $$0228 = 0, $$0229334 = 0, $$0232 = 0, $$0235 = 0, $$0237 = 0, $$0240313 = 0, $$0240313371 = 0, $$0240333 = 0, $$0243 = 0, $$0243$ph = 0, $$0243$ph$be = 0, $$0247 = 0, $$0247$ph = 0, $$0249$lcssa = 0, $$0249321 = 0, $$0252 = 0, $$0253 = 0, $$0254 = 0;
 var $$0259 = 0, $$0262$lcssa = 0, $$0262328 = 0, $$0269$ph = 0, $$1 = 0, $$1230340 = 0, $$1233 = 0, $$1236 = 0, $$1238 = 0, $$1241339 = 0, $$1248 = 0, $$1250 = 0, $$1255 = 0, $$1260 = 0, $$1263 = 0, $$1270 = 0, $$2 = 0, $$2234 = 0, $$2239 = 0, $$2242320 = 0;
 var $$2256 = 0, $$2256$ = 0, $$2261 = 0, $$2271 = 0, $$3257 = 0, $$3265 = 0, $$3272 = 0, $$3317 = 0, $$4258370 = 0, $$4266 = 0, $$5 = 0, $$6268 = 0, $$lcssa308 = 0, $$pre = 0, $$pre$phiZ2D = 0, $$pre360 = 0, $$pre362 = 0, $$pre363 = 0, $$pre363$pre = 0, $$pre364 = 0;
 var $$pre368 = 0, $$sink = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0, $121 = 0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0, $129 = 0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0;
 var $134 = 0, $135 = 0, $136 = 0, $137 = 0, $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $151 = 0;
 var $152 = 0, $153 = 0, $154 = 0, $155 = 0, $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0;
 var $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0;
 var $189 = 0, $19 = 0, $190 = 0, $191 = 0, $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0;
 var $207 = 0, $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0;
 var $225 = 0, $226 = 0, $227 = 0, $228 = 0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0;
 var $243 = 0, $244 = 0, $245 = 0, $246 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0;
 var $261 = 0, $262 = 0, $263 = 0, $264 = 0, $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0;
 var $28 = 0, $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0;
 var $298 = 0, $299 = 0, $30 = 0, $300 = 0, $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0;
 var $316 = 0, $317 = 0, $318 = 0, $319 = 0, $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0;
 var $334 = 0, $335 = 0, $336 = 0.0, $337 = 0, $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0;
 var $352 = 0, $353 = 0, $354 = 0, $355 = 0, $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0;
 var $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0;
 var $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0;
 var $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current2 = 0, $arglist_next = 0;
 var $arglist_next3 = 0, $brmerge = 0, $brmerge326 = 0, $expanded = 0, $expanded10 = 0, $expanded11 = 0, $expanded13 = 0, $expanded14 = 0, $expanded15 = 0, $expanded4 = 0, $expanded6 = 0, $expanded7 = 0, $expanded8 = 0, $or$cond = 0, $or$cond276 = 0, $or$cond278 = 0, $or$cond283 = 0, $spec$select = 0, $spec$select281 = 0, $spec$select284 = 0;
 var $spec$select291 = 0, $spec$select292 = 0, $spec$select293 = 0, $spec$select294 = 0, $spec$select295 = 0, $spec$select296 = 0, $spec$select297 = 0, $spec$select298 = 0, $spec$select299 = 0, $storemerge273$lcssa = 0, $storemerge273327 = 0, $storemerge274 = 0, $trunc = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $5 = sp + 56|0;
 $6 = sp + 40|0;
 $7 = sp;
 $8 = sp + 48|0;
 $9 = sp + 60|0;
 HEAP32[$5>>2] = $1;
 $10 = ($0|0)!=(0|0);
 $11 = ((($7)) + 40|0);
 $12 = $11;
 $13 = ((($7)) + 39|0);
 $14 = ((($8)) + 4|0);
 $$0243$ph = 0;$$0247$ph = 0;$$0269$ph = 0;
 L1: while(1) {
  $$0243 = $$0243$ph;$$0247 = $$0247$ph;
  while(1) {
   $15 = ($$0247|0)>(-1);
   do {
    if ($15) {
     $16 = (2147483647 - ($$0247))|0;
     $17 = ($$0243|0)>($16|0);
     if ($17) {
      $18 = (___errno_location()|0);
      HEAP32[$18>>2] = 75;
      $$1248 = -1;
      break;
     } else {
      $19 = (($$0243) + ($$0247))|0;
      $$1248 = $19;
      break;
     }
    } else {
     $$1248 = $$0247;
    }
   } while(0);
   $20 = HEAP32[$5>>2]|0;
   $21 = HEAP8[$20>>0]|0;
   $22 = ($21<<24>>24)==(0);
   if ($22) {
    label = 94;
    break L1;
   }
   $23 = $21;$25 = $20;
   L12: while(1) {
    switch ($23<<24>>24) {
    case 37:  {
     label = 10;
     break L12;
     break;
    }
    case 0:  {
     $$0249$lcssa = $25;
     break L12;
     break;
    }
    default: {
    }
    }
    $24 = ((($25)) + 1|0);
    HEAP32[$5>>2] = $24;
    $$pre = HEAP8[$24>>0]|0;
    $23 = $$pre;$25 = $24;
   }
   L15: do {
    if ((label|0) == 10) {
     label = 0;
     $$0249321 = $25;$27 = $25;
     while(1) {
      $26 = ((($27)) + 1|0);
      $28 = HEAP8[$26>>0]|0;
      $29 = ($28<<24>>24)==(37);
      if (!($29)) {
       $$0249$lcssa = $$0249321;
       break L15;
      }
      $30 = ((($$0249321)) + 1|0);
      $31 = ((($27)) + 2|0);
      HEAP32[$5>>2] = $31;
      $32 = HEAP8[$31>>0]|0;
      $33 = ($32<<24>>24)==(37);
      if ($33) {
       $$0249321 = $30;$27 = $31;
      } else {
       $$0249$lcssa = $30;
       break;
      }
     }
    }
   } while(0);
   $34 = $$0249$lcssa;
   $35 = $20;
   $36 = (($34) - ($35))|0;
   if ($10) {
    _out($0,$20,$36);
   }
   $37 = ($36|0)==(0);
   if ($37) {
    break;
   } else {
    $$0243 = $36;$$0247 = $$1248;
   }
  }
  $38 = HEAP32[$5>>2]|0;
  $39 = ((($38)) + 1|0);
  $40 = HEAP8[$39>>0]|0;
  $41 = $40 << 24 >> 24;
  $42 = (_isdigit($41)|0);
  $43 = ($42|0)==(0);
  $$pre360 = HEAP32[$5>>2]|0;
  if ($43) {
   $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
  } else {
   $44 = ((($$pre360)) + 2|0);
   $45 = HEAP8[$44>>0]|0;
   $46 = ($45<<24>>24)==(36);
   if ($46) {
    $47 = ((($$pre360)) + 1|0);
    $48 = HEAP8[$47>>0]|0;
    $49 = $48 << 24 >> 24;
    $50 = (($49) + -48)|0;
    $$0253 = $50;$$1270 = 1;$$sink = 3;
   } else {
    $$0253 = -1;$$1270 = $$0269$ph;$$sink = 1;
   }
  }
  $51 = (($$pre360) + ($$sink)|0);
  HEAP32[$5>>2] = $51;
  $52 = HEAP8[$51>>0]|0;
  $53 = $52 << 24 >> 24;
  $54 = (($53) + -32)|0;
  $55 = ($54>>>0)>(31);
  $56 = 1 << $54;
  $57 = $56 & 75913;
  $58 = ($57|0)==(0);
  $brmerge326 = $55 | $58;
  if ($brmerge326) {
   $$0262$lcssa = 0;$$lcssa308 = $52;$storemerge273$lcssa = $51;
  } else {
   $$0262328 = 0;$60 = $54;$storemerge273327 = $51;
   while(1) {
    $59 = 1 << $60;
    $61 = $59 | $$0262328;
    $62 = ((($storemerge273327)) + 1|0);
    HEAP32[$5>>2] = $62;
    $63 = HEAP8[$62>>0]|0;
    $64 = $63 << 24 >> 24;
    $65 = (($64) + -32)|0;
    $66 = ($65>>>0)>(31);
    $67 = 1 << $65;
    $68 = $67 & 75913;
    $69 = ($68|0)==(0);
    $brmerge = $66 | $69;
    if ($brmerge) {
     $$0262$lcssa = $61;$$lcssa308 = $63;$storemerge273$lcssa = $62;
     break;
    } else {
     $$0262328 = $61;$60 = $65;$storemerge273327 = $62;
    }
   }
  }
  $70 = ($$lcssa308<<24>>24)==(42);
  if ($70) {
   $71 = ((($storemerge273$lcssa)) + 1|0);
   $72 = HEAP8[$71>>0]|0;
   $73 = $72 << 24 >> 24;
   $74 = (_isdigit($73)|0);
   $75 = ($74|0)==(0);
   if ($75) {
    label = 27;
   } else {
    $76 = HEAP32[$5>>2]|0;
    $77 = ((($76)) + 2|0);
    $78 = HEAP8[$77>>0]|0;
    $79 = ($78<<24>>24)==(36);
    if ($79) {
     $80 = ((($76)) + 1|0);
     $81 = HEAP8[$80>>0]|0;
     $82 = $81 << 24 >> 24;
     $83 = (($82) + -48)|0;
     $84 = (($4) + ($83<<2)|0);
     HEAP32[$84>>2] = 10;
     $85 = HEAP8[$80>>0]|0;
     $86 = $85 << 24 >> 24;
     $87 = (($86) + -48)|0;
     $88 = (($3) + ($87<<3)|0);
     $89 = $88;
     $90 = $89;
     $91 = HEAP32[$90>>2]|0;
     $92 = (($89) + 4)|0;
     $93 = $92;
     $94 = HEAP32[$93>>2]|0;
     $95 = ((($76)) + 3|0);
     $$0259 = $91;$$2271 = 1;$storemerge274 = $95;
    } else {
     label = 27;
    }
   }
   if ((label|0) == 27) {
    label = 0;
    $96 = ($$1270|0)==(0);
    if (!($96)) {
     $$0 = -1;
     break;
    }
    if ($10) {
     $arglist_current = HEAP32[$2>>2]|0;
     $97 = $arglist_current;
     $98 = ((0) + 4|0);
     $expanded4 = $98;
     $expanded = (($expanded4) - 1)|0;
     $99 = (($97) + ($expanded))|0;
     $100 = ((0) + 4|0);
     $expanded8 = $100;
     $expanded7 = (($expanded8) - 1)|0;
     $expanded6 = $expanded7 ^ -1;
     $101 = $99 & $expanded6;
     $102 = $101;
     $103 = HEAP32[$102>>2]|0;
     $arglist_next = ((($102)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     $358 = $103;
    } else {
     $358 = 0;
    }
    $104 = HEAP32[$5>>2]|0;
    $105 = ((($104)) + 1|0);
    $$0259 = $358;$$2271 = 0;$storemerge274 = $105;
   }
   HEAP32[$5>>2] = $storemerge274;
   $106 = ($$0259|0)<(0);
   $107 = $$0262$lcssa | 8192;
   $108 = (0 - ($$0259))|0;
   $spec$select291 = $106 ? $107 : $$0262$lcssa;
   $spec$select292 = $106 ? $108 : $$0259;
   $$1260 = $spec$select292;$$1263 = $spec$select291;$$3272 = $$2271;$112 = $storemerge274;
  } else {
   $109 = (_getint($5)|0);
   $110 = ($109|0)<(0);
   if ($110) {
    $$0 = -1;
    break;
   }
   $$pre362 = HEAP32[$5>>2]|0;
   $$1260 = $109;$$1263 = $$0262$lcssa;$$3272 = $$1270;$112 = $$pre362;
  }
  $111 = HEAP8[$112>>0]|0;
  $113 = ($111<<24>>24)==(46);
  do {
   if ($113) {
    $114 = ((($112)) + 1|0);
    $115 = HEAP8[$114>>0]|0;
    $116 = ($115<<24>>24)==(42);
    if (!($116)) {
     HEAP32[$5>>2] = $114;
     $152 = (_getint($5)|0);
     $$pre363$pre = HEAP32[$5>>2]|0;
     $$0254 = $152;$$pre363 = $$pre363$pre;
     break;
    }
    $117 = ((($112)) + 2|0);
    $118 = HEAP8[$117>>0]|0;
    $119 = $118 << 24 >> 24;
    $120 = (_isdigit($119)|0);
    $121 = ($120|0)==(0);
    if (!($121)) {
     $122 = HEAP32[$5>>2]|0;
     $123 = ((($122)) + 3|0);
     $124 = HEAP8[$123>>0]|0;
     $125 = ($124<<24>>24)==(36);
     if ($125) {
      $126 = ((($122)) + 2|0);
      $127 = HEAP8[$126>>0]|0;
      $128 = $127 << 24 >> 24;
      $129 = (($128) + -48)|0;
      $130 = (($4) + ($129<<2)|0);
      HEAP32[$130>>2] = 10;
      $131 = HEAP8[$126>>0]|0;
      $132 = $131 << 24 >> 24;
      $133 = (($132) + -48)|0;
      $134 = (($3) + ($133<<3)|0);
      $135 = $134;
      $136 = $135;
      $137 = HEAP32[$136>>2]|0;
      $138 = (($135) + 4)|0;
      $139 = $138;
      $140 = HEAP32[$139>>2]|0;
      $141 = ((($122)) + 4|0);
      HEAP32[$5>>2] = $141;
      $$0254 = $137;$$pre363 = $141;
      break;
     }
    }
    $142 = ($$3272|0)==(0);
    if (!($142)) {
     $$0 = -1;
     break L1;
    }
    if ($10) {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $143 = $arglist_current2;
     $144 = ((0) + 4|0);
     $expanded11 = $144;
     $expanded10 = (($expanded11) - 1)|0;
     $145 = (($143) + ($expanded10))|0;
     $146 = ((0) + 4|0);
     $expanded15 = $146;
     $expanded14 = (($expanded15) - 1)|0;
     $expanded13 = $expanded14 ^ -1;
     $147 = $145 & $expanded13;
     $148 = $147;
     $149 = HEAP32[$148>>2]|0;
     $arglist_next3 = ((($148)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $359 = $149;
    } else {
     $359 = 0;
    }
    $150 = HEAP32[$5>>2]|0;
    $151 = ((($150)) + 2|0);
    HEAP32[$5>>2] = $151;
    $$0254 = $359;$$pre363 = $151;
   } else {
    $$0254 = -1;$$pre363 = $112;
   }
  } while(0);
  $$0252 = 0;$154 = $$pre363;
  while(1) {
   $153 = HEAP8[$154>>0]|0;
   $155 = $153 << 24 >> 24;
   $156 = (($155) + -65)|0;
   $157 = ($156>>>0)>(57);
   if ($157) {
    $$0 = -1;
    break L1;
   }
   $158 = ((($154)) + 1|0);
   HEAP32[$5>>2] = $158;
   $159 = HEAP8[$154>>0]|0;
   $160 = $159 << 24 >> 24;
   $161 = (($160) + -65)|0;
   $162 = ((115216 + (($$0252*58)|0)|0) + ($161)|0);
   $163 = HEAP8[$162>>0]|0;
   $164 = $163&255;
   $165 = (($164) + -1)|0;
   $166 = ($165>>>0)<(8);
   if ($166) {
    $$0252 = $164;$154 = $158;
   } else {
    break;
   }
  }
  $167 = ($163<<24>>24)==(0);
  if ($167) {
   $$0 = -1;
   break;
  }
  $168 = ($163<<24>>24)==(19);
  $169 = ($$0253|0)>(-1);
  do {
   if ($168) {
    if ($169) {
     $$0 = -1;
     break L1;
    } else {
     label = 54;
    }
   } else {
    if ($169) {
     $170 = (($4) + ($$0253<<2)|0);
     HEAP32[$170>>2] = $164;
     $171 = (($3) + ($$0253<<3)|0);
     $172 = $171;
     $173 = $172;
     $174 = HEAP32[$173>>2]|0;
     $175 = (($172) + 4)|0;
     $176 = $175;
     $177 = HEAP32[$176>>2]|0;
     $178 = $6;
     $179 = $178;
     HEAP32[$179>>2] = $174;
     $180 = (($178) + 4)|0;
     $181 = $180;
     HEAP32[$181>>2] = $177;
     label = 54;
     break;
    }
    if (!($10)) {
     $$0 = 0;
     break L1;
    }
    _pop_arg($6,$164,$2);
    $$pre364 = HEAP32[$5>>2]|0;
    $183 = $$pre364;
    label = 55;
   }
  } while(0);
  if ((label|0) == 54) {
   label = 0;
   if ($10) {
    $183 = $158;
    label = 55;
   } else {
    $$0243$ph$be = 0;
   }
  }
  L77: do {
   if ((label|0) == 55) {
    label = 0;
    $182 = ((($183)) + -1|0);
    $184 = HEAP8[$182>>0]|0;
    $185 = $184 << 24 >> 24;
    $186 = ($$0252|0)!=(0);
    $187 = $185 & 15;
    $188 = ($187|0)==(3);
    $or$cond276 = $186 & $188;
    $189 = $185 & -33;
    $$0235 = $or$cond276 ? $189 : $185;
    $190 = $$1263 & 8192;
    $191 = ($190|0)==(0);
    $192 = $$1263 & -65537;
    $spec$select = $191 ? $$1263 : $192;
    L79: do {
     switch ($$0235|0) {
     case 110:  {
      $trunc = $$0252&255;
      switch ($trunc<<24>>24) {
      case 0:  {
       $199 = HEAP32[$6>>2]|0;
       HEAP32[$199>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 1:  {
       $200 = HEAP32[$6>>2]|0;
       HEAP32[$200>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 2:  {
       $201 = ($$1248|0)<(0);
       $202 = $201 << 31 >> 31;
       $203 = HEAP32[$6>>2]|0;
       $204 = $203;
       $205 = $204;
       HEAP32[$205>>2] = $$1248;
       $206 = (($204) + 4)|0;
       $207 = $206;
       HEAP32[$207>>2] = $202;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 3:  {
       $208 = $$1248&65535;
       $209 = HEAP32[$6>>2]|0;
       HEAP16[$209>>1] = $208;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 4:  {
       $210 = $$1248&255;
       $211 = HEAP32[$6>>2]|0;
       HEAP8[$211>>0] = $210;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 6:  {
       $212 = HEAP32[$6>>2]|0;
       HEAP32[$212>>2] = $$1248;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      case 7:  {
       $213 = ($$1248|0)<(0);
       $214 = $213 << 31 >> 31;
       $215 = HEAP32[$6>>2]|0;
       $216 = $215;
       $217 = $216;
       HEAP32[$217>>2] = $$1248;
       $218 = (($216) + 4)|0;
       $219 = $218;
       HEAP32[$219>>2] = $214;
       $$0243$ph$be = 0;
       break L77;
       break;
      }
      default: {
       $$0243$ph$be = 0;
       break L77;
      }
      }
      break;
     }
     case 112:  {
      $220 = ($$0254>>>0)>(8);
      $221 = $220 ? $$0254 : 8;
      $222 = $spec$select | 8;
      $$1236 = 120;$$1255 = $221;$$3265 = $222;
      label = 67;
      break;
     }
     case 88: case 120:  {
      $$1236 = $$0235;$$1255 = $$0254;$$3265 = $spec$select;
      label = 67;
      break;
     }
     case 111:  {
      $238 = $6;
      $239 = $238;
      $240 = HEAP32[$239>>2]|0;
      $241 = (($238) + 4)|0;
      $242 = $241;
      $243 = HEAP32[$242>>2]|0;
      $244 = (_fmt_o($240,$243,$11)|0);
      $245 = $spec$select & 8;
      $246 = ($245|0)==(0);
      $247 = $244;
      $248 = (($12) - ($247))|0;
      $249 = ($$0254|0)>($248|0);
      $250 = (($248) + 1)|0;
      $251 = $246 | $249;
      $spec$select295 = $251 ? $$0254 : $250;
      $$0228 = $244;$$1233 = 0;$$1238 = 141011;$$2256 = $spec$select295;$$4266 = $spec$select;$277 = $240;$279 = $243;
      label = 73;
      break;
     }
     case 105: case 100:  {
      $252 = $6;
      $253 = $252;
      $254 = HEAP32[$253>>2]|0;
      $255 = (($252) + 4)|0;
      $256 = $255;
      $257 = HEAP32[$256>>2]|0;
      $258 = ($257|0)<(0);
      if ($258) {
       $259 = (_i64Subtract(0,0,($254|0),($257|0))|0);
       $260 = tempRet0;
       $261 = $6;
       $262 = $261;
       HEAP32[$262>>2] = $259;
       $263 = (($261) + 4)|0;
       $264 = $263;
       HEAP32[$264>>2] = $260;
       $$0232 = 1;$$0237 = 141011;$271 = $259;$272 = $260;
       label = 72;
       break L79;
      } else {
       $265 = $spec$select & 2048;
       $266 = ($265|0)==(0);
       $267 = $spec$select & 1;
       $268 = ($267|0)==(0);
       $$ = $268 ? 141011 : (141013);
       $spec$select296 = $266 ? $$ : (141012);
       $269 = $spec$select & 2049;
       $270 = ($269|0)!=(0);
       $spec$select297 = $270&1;
       $$0232 = $spec$select297;$$0237 = $spec$select296;$271 = $254;$272 = $257;
       label = 72;
       break L79;
      }
      break;
     }
     case 117:  {
      $193 = $6;
      $194 = $193;
      $195 = HEAP32[$194>>2]|0;
      $196 = (($193) + 4)|0;
      $197 = $196;
      $198 = HEAP32[$197>>2]|0;
      $$0232 = 0;$$0237 = 141011;$271 = $195;$272 = $198;
      label = 72;
      break;
     }
     case 99:  {
      $288 = $6;
      $289 = $288;
      $290 = HEAP32[$289>>2]|0;
      $291 = (($288) + 4)|0;
      $292 = $291;
      $293 = HEAP32[$292>>2]|0;
      $294 = $290&255;
      HEAP8[$13>>0] = $294;
      $$2 = $13;$$2234 = 0;$$2239 = 141011;$$5 = 1;$$6268 = $192;$$pre$phiZ2D = $12;
      break;
     }
     case 109:  {
      $295 = (___errno_location()|0);
      $296 = HEAP32[$295>>2]|0;
      $297 = (_strerror($296)|0);
      $$1 = $297;
      label = 77;
      break;
     }
     case 115:  {
      $298 = HEAP32[$6>>2]|0;
      $299 = ($298|0)==(0|0);
      $300 = $299 ? 141021 : $298;
      $$1 = $300;
      label = 77;
      break;
     }
     case 67:  {
      $307 = $6;
      $308 = $307;
      $309 = HEAP32[$308>>2]|0;
      $310 = (($307) + 4)|0;
      $311 = $310;
      $312 = HEAP32[$311>>2]|0;
      HEAP32[$8>>2] = $309;
      HEAP32[$14>>2] = 0;
      HEAP32[$6>>2] = $8;
      $$4258370 = -1;
      label = 81;
      break;
     }
     case 83:  {
      $313 = ($$0254|0)==(0);
      if ($313) {
       _pad_670($0,32,$$1260,0,$spec$select);
       $$0240313371 = 0;
       label = 91;
      } else {
       $$4258370 = $$0254;
       label = 81;
      }
      break;
     }
     case 65: case 71: case 70: case 69: case 97: case 103: case 102: case 101:  {
      $336 = +HEAPF64[$6>>3];
      $337 = (_fmt_fp($0,$336,$$1260,$$0254,$spec$select,$$0235)|0);
      $$0243$ph$be = $337;
      break L77;
      break;
     }
     default: {
      $$2 = $20;$$2234 = 0;$$2239 = 141011;$$5 = $$0254;$$6268 = $spec$select;$$pre$phiZ2D = $12;
     }
     }
    } while(0);
    L103: do {
     if ((label|0) == 67) {
      label = 0;
      $223 = $6;
      $224 = $223;
      $225 = HEAP32[$224>>2]|0;
      $226 = (($223) + 4)|0;
      $227 = $226;
      $228 = HEAP32[$227>>2]|0;
      $229 = $$1236 & 32;
      $230 = (_fmt_x($225,$228,$11,$229)|0);
      $231 = ($225|0)==(0);
      $232 = ($228|0)==(0);
      $233 = $231 & $232;
      $234 = $$3265 & 8;
      $235 = ($234|0)==(0);
      $or$cond278 = $235 | $233;
      $236 = $$1236 >>> 4;
      $237 = (141011 + ($236)|0);
      $spec$select293 = $or$cond278 ? 141011 : $237;
      $spec$select294 = $or$cond278 ? 0 : 2;
      $$0228 = $230;$$1233 = $spec$select294;$$1238 = $spec$select293;$$2256 = $$1255;$$4266 = $$3265;$277 = $225;$279 = $228;
      label = 73;
     }
     else if ((label|0) == 72) {
      label = 0;
      $273 = (_fmt_u($271,$272,$11)|0);
      $$0228 = $273;$$1233 = $$0232;$$1238 = $$0237;$$2256 = $$0254;$$4266 = $spec$select;$277 = $271;$279 = $272;
      label = 73;
     }
     else if ((label|0) == 77) {
      label = 0;
      $301 = (_memchr($$1,0,$$0254)|0);
      $302 = ($301|0)==(0|0);
      $303 = $301;
      $304 = $$1;
      $305 = (($303) - ($304))|0;
      $306 = (($$1) + ($$0254)|0);
      $$3257 = $302 ? $$0254 : $305;
      $$1250 = $302 ? $306 : $301;
      $$pre368 = $$1250;
      $$2 = $$1;$$2234 = 0;$$2239 = 141011;$$5 = $$3257;$$6268 = $192;$$pre$phiZ2D = $$pre368;
     }
     else if ((label|0) == 81) {
      label = 0;
      $314 = HEAP32[$6>>2]|0;
      $$0229334 = $314;$$0240333 = 0;
      while(1) {
       $315 = HEAP32[$$0229334>>2]|0;
       $316 = ($315|0)==(0);
       if ($316) {
        $$0240313 = $$0240333;
        break;
       }
       $317 = (_wctomb($9,$315)|0);
       $318 = ($317|0)<(0);
       $319 = (($$4258370) - ($$0240333))|0;
       $320 = ($317>>>0)>($319>>>0);
       $or$cond283 = $318 | $320;
       if ($or$cond283) {
        label = 85;
        break;
       }
       $321 = ((($$0229334)) + 4|0);
       $322 = (($317) + ($$0240333))|0;
       $323 = ($$4258370>>>0)>($322>>>0);
       if ($323) {
        $$0229334 = $321;$$0240333 = $322;
       } else {
        $$0240313 = $322;
        break;
       }
      }
      if ((label|0) == 85) {
       label = 0;
       if ($318) {
        $$0 = -1;
        break L1;
       } else {
        $$0240313 = $$0240333;
       }
      }
      _pad_670($0,32,$$1260,$$0240313,$spec$select);
      $324 = ($$0240313|0)==(0);
      if ($324) {
       $$0240313371 = 0;
       label = 91;
      } else {
       $325 = HEAP32[$6>>2]|0;
       $$1230340 = $325;$$1241339 = 0;
       while(1) {
        $326 = HEAP32[$$1230340>>2]|0;
        $327 = ($326|0)==(0);
        if ($327) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $328 = (_wctomb($9,$326)|0);
        $329 = (($328) + ($$1241339))|0;
        $330 = ($329|0)>($$0240313|0);
        if ($330) {
         $$0240313371 = $$0240313;
         label = 91;
         break L103;
        }
        $331 = ((($$1230340)) + 4|0);
        _out($0,$9,$328);
        $332 = ($329>>>0)<($$0240313>>>0);
        if ($332) {
         $$1230340 = $331;$$1241339 = $329;
        } else {
         $$0240313371 = $$0240313;
         label = 91;
         break;
        }
       }
      }
     }
    } while(0);
    if ((label|0) == 73) {
     label = 0;
     $274 = ($$2256|0)>(-1);
     $275 = $$4266 & -65537;
     $spec$select281 = $274 ? $275 : $$4266;
     $276 = ($277|0)!=(0);
     $278 = ($279|0)!=(0);
     $280 = $276 | $278;
     $281 = ($$2256|0)!=(0);
     $or$cond = $281 | $280;
     $282 = $$0228;
     $283 = (($12) - ($282))|0;
     $284 = $280 ^ 1;
     $285 = $284&1;
     $286 = (($283) + ($285))|0;
     $287 = ($$2256|0)>($286|0);
     $$2256$ = $287 ? $$2256 : $286;
     $spec$select298 = $or$cond ? $$2256$ : 0;
     $spec$select299 = $or$cond ? $$0228 : $11;
     $$2 = $spec$select299;$$2234 = $$1233;$$2239 = $$1238;$$5 = $spec$select298;$$6268 = $spec$select281;$$pre$phiZ2D = $12;
    }
    else if ((label|0) == 91) {
     label = 0;
     $333 = $spec$select ^ 8192;
     _pad_670($0,32,$$1260,$$0240313371,$333);
     $334 = ($$1260|0)>($$0240313371|0);
     $335 = $334 ? $$1260 : $$0240313371;
     $$0243$ph$be = $335;
     break;
    }
    $338 = $$2;
    $339 = (($$pre$phiZ2D) - ($338))|0;
    $340 = ($$5|0)<($339|0);
    $spec$select284 = $340 ? $339 : $$5;
    $341 = (($spec$select284) + ($$2234))|0;
    $342 = ($$1260|0)<($341|0);
    $$2261 = $342 ? $341 : $$1260;
    _pad_670($0,32,$$2261,$341,$$6268);
    _out($0,$$2239,$$2234);
    $343 = $$6268 ^ 65536;
    _pad_670($0,48,$$2261,$341,$343);
    _pad_670($0,48,$spec$select284,$339,0);
    _out($0,$$2,$339);
    $344 = $$6268 ^ 8192;
    _pad_670($0,32,$$2261,$341,$344);
    $$0243$ph$be = $$2261;
   }
  } while(0);
  $$0243$ph = $$0243$ph$be;$$0247$ph = $$1248;$$0269$ph = $$3272;
 }
 L125: do {
  if ((label|0) == 94) {
   $345 = ($0|0)==(0|0);
   if ($345) {
    $346 = ($$0269$ph|0)==(0);
    if ($346) {
     $$0 = 0;
    } else {
     $$2242320 = 1;
     while(1) {
      $347 = (($4) + ($$2242320<<2)|0);
      $348 = HEAP32[$347>>2]|0;
      $349 = ($348|0)==(0);
      if ($349) {
       break;
      }
      $350 = (($3) + ($$2242320<<3)|0);
      _pop_arg($350,$348,$2);
      $351 = (($$2242320) + 1)|0;
      $352 = ($351>>>0)<(10);
      if ($352) {
       $$2242320 = $351;
      } else {
       $$0 = 1;
       break L125;
      }
     }
     $$3317 = $$2242320;
     while(1) {
      $355 = (($4) + ($$3317<<2)|0);
      $356 = HEAP32[$355>>2]|0;
      $357 = ($356|0)==(0);
      $354 = (($$3317) + 1)|0;
      if (!($357)) {
       $$0 = -1;
       break L125;
      }
      $353 = ($354>>>0)<(10);
      if ($353) {
       $$3317 = $354;
      } else {
       $$0 = 1;
       break;
      }
     }
    }
   } else {
    $$0 = $$1248;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function ___lockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return 0;
}
function ___unlockfile($0) {
 $0 = $0|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function _out($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = $3 & 32;
 $5 = ($4|0)==(0);
 if ($5) {
  (___fwritex($1,$2,$0)|0);
 }
 return;
}
function _getint($0) {
 $0 = $0|0;
 var $$0$lcssa = 0, $$04 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = HEAP32[$0>>2]|0;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_isdigit($3)|0);
 $5 = ($4|0)==(0);
 if ($5) {
  $$0$lcssa = 0;
 } else {
  $$04 = 0;
  while(1) {
   $6 = ($$04*10)|0;
   $7 = HEAP32[$0>>2]|0;
   $8 = HEAP8[$7>>0]|0;
   $9 = $8 << 24 >> 24;
   $10 = (($6) + -48)|0;
   $11 = (($10) + ($9))|0;
   $12 = ((($7)) + 1|0);
   HEAP32[$0>>2] = $12;
   $13 = HEAP8[$12>>0]|0;
   $14 = $13 << 24 >> 24;
   $15 = (_isdigit($14)|0);
   $16 = ($15|0)==(0);
   if ($16) {
    $$0$lcssa = $11;
    break;
   } else {
    $$04 = $11;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _pop_arg($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$mask = 0, $$mask31 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0.0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0;
 var $116 = 0.0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0;
 var $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0;
 var $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0;
 var $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0;
 var $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $arglist_current = 0, $arglist_current11 = 0, $arglist_current14 = 0, $arglist_current17 = 0;
 var $arglist_current2 = 0, $arglist_current20 = 0, $arglist_current23 = 0, $arglist_current26 = 0, $arglist_current5 = 0, $arglist_current8 = 0, $arglist_next = 0, $arglist_next12 = 0, $arglist_next15 = 0, $arglist_next18 = 0, $arglist_next21 = 0, $arglist_next24 = 0, $arglist_next27 = 0, $arglist_next3 = 0, $arglist_next6 = 0, $arglist_next9 = 0, $expanded = 0, $expanded28 = 0, $expanded30 = 0, $expanded31 = 0;
 var $expanded32 = 0, $expanded34 = 0, $expanded35 = 0, $expanded37 = 0, $expanded38 = 0, $expanded39 = 0, $expanded41 = 0, $expanded42 = 0, $expanded44 = 0, $expanded45 = 0, $expanded46 = 0, $expanded48 = 0, $expanded49 = 0, $expanded51 = 0, $expanded52 = 0, $expanded53 = 0, $expanded55 = 0, $expanded56 = 0, $expanded58 = 0, $expanded59 = 0;
 var $expanded60 = 0, $expanded62 = 0, $expanded63 = 0, $expanded65 = 0, $expanded66 = 0, $expanded67 = 0, $expanded69 = 0, $expanded70 = 0, $expanded72 = 0, $expanded73 = 0, $expanded74 = 0, $expanded76 = 0, $expanded77 = 0, $expanded79 = 0, $expanded80 = 0, $expanded81 = 0, $expanded83 = 0, $expanded84 = 0, $expanded86 = 0, $expanded87 = 0;
 var $expanded88 = 0, $expanded90 = 0, $expanded91 = 0, $expanded93 = 0, $expanded94 = 0, $expanded95 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(20);
 L1: do {
  if (!($3)) {
   do {
    switch ($1|0) {
    case 9:  {
     $arglist_current = HEAP32[$2>>2]|0;
     $4 = $arglist_current;
     $5 = ((0) + 4|0);
     $expanded28 = $5;
     $expanded = (($expanded28) - 1)|0;
     $6 = (($4) + ($expanded))|0;
     $7 = ((0) + 4|0);
     $expanded32 = $7;
     $expanded31 = (($expanded32) - 1)|0;
     $expanded30 = $expanded31 ^ -1;
     $8 = $6 & $expanded30;
     $9 = $8;
     $10 = HEAP32[$9>>2]|0;
     $arglist_next = ((($9)) + 4|0);
     HEAP32[$2>>2] = $arglist_next;
     HEAP32[$0>>2] = $10;
     break L1;
     break;
    }
    case 10:  {
     $arglist_current2 = HEAP32[$2>>2]|0;
     $11 = $arglist_current2;
     $12 = ((0) + 4|0);
     $expanded35 = $12;
     $expanded34 = (($expanded35) - 1)|0;
     $13 = (($11) + ($expanded34))|0;
     $14 = ((0) + 4|0);
     $expanded39 = $14;
     $expanded38 = (($expanded39) - 1)|0;
     $expanded37 = $expanded38 ^ -1;
     $15 = $13 & $expanded37;
     $16 = $15;
     $17 = HEAP32[$16>>2]|0;
     $arglist_next3 = ((($16)) + 4|0);
     HEAP32[$2>>2] = $arglist_next3;
     $18 = ($17|0)<(0);
     $19 = $18 << 31 >> 31;
     $20 = $0;
     $21 = $20;
     HEAP32[$21>>2] = $17;
     $22 = (($20) + 4)|0;
     $23 = $22;
     HEAP32[$23>>2] = $19;
     break L1;
     break;
    }
    case 11:  {
     $arglist_current5 = HEAP32[$2>>2]|0;
     $24 = $arglist_current5;
     $25 = ((0) + 4|0);
     $expanded42 = $25;
     $expanded41 = (($expanded42) - 1)|0;
     $26 = (($24) + ($expanded41))|0;
     $27 = ((0) + 4|0);
     $expanded46 = $27;
     $expanded45 = (($expanded46) - 1)|0;
     $expanded44 = $expanded45 ^ -1;
     $28 = $26 & $expanded44;
     $29 = $28;
     $30 = HEAP32[$29>>2]|0;
     $arglist_next6 = ((($29)) + 4|0);
     HEAP32[$2>>2] = $arglist_next6;
     $31 = $0;
     $32 = $31;
     HEAP32[$32>>2] = $30;
     $33 = (($31) + 4)|0;
     $34 = $33;
     HEAP32[$34>>2] = 0;
     break L1;
     break;
    }
    case 12:  {
     $arglist_current8 = HEAP32[$2>>2]|0;
     $35 = $arglist_current8;
     $36 = ((0) + 8|0);
     $expanded49 = $36;
     $expanded48 = (($expanded49) - 1)|0;
     $37 = (($35) + ($expanded48))|0;
     $38 = ((0) + 8|0);
     $expanded53 = $38;
     $expanded52 = (($expanded53) - 1)|0;
     $expanded51 = $expanded52 ^ -1;
     $39 = $37 & $expanded51;
     $40 = $39;
     $41 = $40;
     $42 = $41;
     $43 = HEAP32[$42>>2]|0;
     $44 = (($41) + 4)|0;
     $45 = $44;
     $46 = HEAP32[$45>>2]|0;
     $arglist_next9 = ((($40)) + 8|0);
     HEAP32[$2>>2] = $arglist_next9;
     $47 = $0;
     $48 = $47;
     HEAP32[$48>>2] = $43;
     $49 = (($47) + 4)|0;
     $50 = $49;
     HEAP32[$50>>2] = $46;
     break L1;
     break;
    }
    case 13:  {
     $arglist_current11 = HEAP32[$2>>2]|0;
     $51 = $arglist_current11;
     $52 = ((0) + 4|0);
     $expanded56 = $52;
     $expanded55 = (($expanded56) - 1)|0;
     $53 = (($51) + ($expanded55))|0;
     $54 = ((0) + 4|0);
     $expanded60 = $54;
     $expanded59 = (($expanded60) - 1)|0;
     $expanded58 = $expanded59 ^ -1;
     $55 = $53 & $expanded58;
     $56 = $55;
     $57 = HEAP32[$56>>2]|0;
     $arglist_next12 = ((($56)) + 4|0);
     HEAP32[$2>>2] = $arglist_next12;
     $58 = $57&65535;
     $59 = $58 << 16 >> 16;
     $60 = ($59|0)<(0);
     $61 = $60 << 31 >> 31;
     $62 = $0;
     $63 = $62;
     HEAP32[$63>>2] = $59;
     $64 = (($62) + 4)|0;
     $65 = $64;
     HEAP32[$65>>2] = $61;
     break L1;
     break;
    }
    case 14:  {
     $arglist_current14 = HEAP32[$2>>2]|0;
     $66 = $arglist_current14;
     $67 = ((0) + 4|0);
     $expanded63 = $67;
     $expanded62 = (($expanded63) - 1)|0;
     $68 = (($66) + ($expanded62))|0;
     $69 = ((0) + 4|0);
     $expanded67 = $69;
     $expanded66 = (($expanded67) - 1)|0;
     $expanded65 = $expanded66 ^ -1;
     $70 = $68 & $expanded65;
     $71 = $70;
     $72 = HEAP32[$71>>2]|0;
     $arglist_next15 = ((($71)) + 4|0);
     HEAP32[$2>>2] = $arglist_next15;
     $$mask31 = $72 & 65535;
     $73 = $0;
     $74 = $73;
     HEAP32[$74>>2] = $$mask31;
     $75 = (($73) + 4)|0;
     $76 = $75;
     HEAP32[$76>>2] = 0;
     break L1;
     break;
    }
    case 15:  {
     $arglist_current17 = HEAP32[$2>>2]|0;
     $77 = $arglist_current17;
     $78 = ((0) + 4|0);
     $expanded70 = $78;
     $expanded69 = (($expanded70) - 1)|0;
     $79 = (($77) + ($expanded69))|0;
     $80 = ((0) + 4|0);
     $expanded74 = $80;
     $expanded73 = (($expanded74) - 1)|0;
     $expanded72 = $expanded73 ^ -1;
     $81 = $79 & $expanded72;
     $82 = $81;
     $83 = HEAP32[$82>>2]|0;
     $arglist_next18 = ((($82)) + 4|0);
     HEAP32[$2>>2] = $arglist_next18;
     $84 = $83&255;
     $85 = $84 << 24 >> 24;
     $86 = ($85|0)<(0);
     $87 = $86 << 31 >> 31;
     $88 = $0;
     $89 = $88;
     HEAP32[$89>>2] = $85;
     $90 = (($88) + 4)|0;
     $91 = $90;
     HEAP32[$91>>2] = $87;
     break L1;
     break;
    }
    case 16:  {
     $arglist_current20 = HEAP32[$2>>2]|0;
     $92 = $arglist_current20;
     $93 = ((0) + 4|0);
     $expanded77 = $93;
     $expanded76 = (($expanded77) - 1)|0;
     $94 = (($92) + ($expanded76))|0;
     $95 = ((0) + 4|0);
     $expanded81 = $95;
     $expanded80 = (($expanded81) - 1)|0;
     $expanded79 = $expanded80 ^ -1;
     $96 = $94 & $expanded79;
     $97 = $96;
     $98 = HEAP32[$97>>2]|0;
     $arglist_next21 = ((($97)) + 4|0);
     HEAP32[$2>>2] = $arglist_next21;
     $$mask = $98 & 255;
     $99 = $0;
     $100 = $99;
     HEAP32[$100>>2] = $$mask;
     $101 = (($99) + 4)|0;
     $102 = $101;
     HEAP32[$102>>2] = 0;
     break L1;
     break;
    }
    case 17:  {
     $arglist_current23 = HEAP32[$2>>2]|0;
     $103 = $arglist_current23;
     $104 = ((0) + 8|0);
     $expanded84 = $104;
     $expanded83 = (($expanded84) - 1)|0;
     $105 = (($103) + ($expanded83))|0;
     $106 = ((0) + 8|0);
     $expanded88 = $106;
     $expanded87 = (($expanded88) - 1)|0;
     $expanded86 = $expanded87 ^ -1;
     $107 = $105 & $expanded86;
     $108 = $107;
     $109 = +HEAPF64[$108>>3];
     $arglist_next24 = ((($108)) + 8|0);
     HEAP32[$2>>2] = $arglist_next24;
     HEAPF64[$0>>3] = $109;
     break L1;
     break;
    }
    case 18:  {
     $arglist_current26 = HEAP32[$2>>2]|0;
     $110 = $arglist_current26;
     $111 = ((0) + 8|0);
     $expanded91 = $111;
     $expanded90 = (($expanded91) - 1)|0;
     $112 = (($110) + ($expanded90))|0;
     $113 = ((0) + 8|0);
     $expanded95 = $113;
     $expanded94 = (($expanded95) - 1)|0;
     $expanded93 = $expanded94 ^ -1;
     $114 = $112 & $expanded93;
     $115 = $114;
     $116 = +HEAPF64[$115>>3];
     $arglist_next27 = ((($115)) + 8|0);
     HEAP32[$2>>2] = $arglist_next27;
     HEAPF64[$0>>3] = $116;
     break L1;
     break;
    }
    default: {
     break L1;
    }
    }
   } while(0);
  }
 } while(0);
 return;
}
function _fmt_x($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$05$lcssa = 0, $$056 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 $4 = ($0|0)==(0);
 $5 = ($1|0)==(0);
 $6 = $4 & $5;
 if ($6) {
  $$05$lcssa = $2;
 } else {
  $$056 = $2;$15 = $1;$8 = $0;
  while(1) {
   $7 = $8 & 15;
   $9 = (115680 + ($7)|0);
   $10 = HEAP8[$9>>0]|0;
   $11 = $10&255;
   $12 = $11 | $3;
   $13 = $12&255;
   $14 = ((($$056)) + -1|0);
   HEAP8[$14>>0] = $13;
   $16 = (_bitshift64Lshr(($8|0),($15|0),4)|0);
   $17 = tempRet0;
   $18 = ($16|0)==(0);
   $19 = ($17|0)==(0);
   $20 = $18 & $19;
   if ($20) {
    $$05$lcssa = $14;
    break;
   } else {
    $$056 = $14;$15 = $17;$8 = $16;
   }
  }
 }
 return ($$05$lcssa|0);
}
function _fmt_o($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$06 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0);
 $4 = ($1|0)==(0);
 $5 = $3 & $4;
 if ($5) {
  $$0$lcssa = $2;
 } else {
  $$06 = $2;$11 = $1;$7 = $0;
  while(1) {
   $6 = $7&255;
   $8 = $6 & 7;
   $9 = $8 | 48;
   $10 = ((($$06)) + -1|0);
   HEAP8[$10>>0] = $9;
   $12 = (_bitshift64Lshr(($7|0),($11|0),3)|0);
   $13 = tempRet0;
   $14 = ($12|0)==(0);
   $15 = ($13|0)==(0);
   $16 = $14 & $15;
   if ($16) {
    $$0$lcssa = $10;
    break;
   } else {
    $$06 = $10;$11 = $13;$7 = $12;
   }
  }
 }
 return ($$0$lcssa|0);
}
function _fmt_u($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$010$lcssa$off0 = 0, $$012 = 0, $$09$lcssa = 0, $$0914 = 0, $$1$lcssa = 0, $$111 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($1>>>0)>(0);
 $4 = ($0>>>0)>(4294967295);
 $5 = ($1|0)==(0);
 $6 = $5 & $4;
 $7 = $3 | $6;
 if ($7) {
  $$0914 = $2;$8 = $0;$9 = $1;
  while(1) {
   $10 = (___udivdi3(($8|0),($9|0),10,0)|0);
   $11 = tempRet0;
   $12 = (___muldi3(($10|0),($11|0),10,0)|0);
   $13 = tempRet0;
   $14 = (_i64Subtract(($8|0),($9|0),($12|0),($13|0))|0);
   $15 = tempRet0;
   $16 = $14&255;
   $17 = $16 | 48;
   $18 = ((($$0914)) + -1|0);
   HEAP8[$18>>0] = $17;
   $19 = ($9>>>0)>(9);
   $20 = ($8>>>0)>(4294967295);
   $21 = ($9|0)==(9);
   $22 = $21 & $20;
   $23 = $19 | $22;
   if ($23) {
    $$0914 = $18;$8 = $10;$9 = $11;
   } else {
    break;
   }
  }
  $$010$lcssa$off0 = $10;$$09$lcssa = $18;
 } else {
  $$010$lcssa$off0 = $0;$$09$lcssa = $2;
 }
 $24 = ($$010$lcssa$off0|0)==(0);
 if ($24) {
  $$1$lcssa = $$09$lcssa;
 } else {
  $$012 = $$010$lcssa$off0;$$111 = $$09$lcssa;
  while(1) {
   $25 = (($$012>>>0) / 10)&-1;
   $26 = ($25*10)|0;
   $27 = (($$012) - ($26))|0;
   $28 = $27 | 48;
   $29 = $28&255;
   $30 = ((($$111)) + -1|0);
   HEAP8[$30>>0] = $29;
   $31 = ($$012>>>0)<(10);
   if ($31) {
    $$1$lcssa = $30;
    break;
   } else {
    $$012 = $25;$$111 = $30;
   }
  }
 }
 return ($$1$lcssa|0);
}
function _strerror($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___pthread_self_107()|0);
 $2 = ((($1)) + 188|0);
 $3 = HEAP32[$2>>2]|0;
 $4 = (___strerror_l($0,$3)|0);
 return ($4|0);
}
function _memchr($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$035$lcssa = 0, $$035$lcssa65 = 0, $$03555 = 0, $$036$lcssa = 0, $$036$lcssa64 = 0, $$03654 = 0, $$046 = 0, $$137$lcssa = 0, $$137$lcssa66 = 0, $$13745 = 0, $$140 = 0, $$23839 = 0, $$in = 0, $$lcssa = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0;
 var $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0;
 var $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond53 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1 & 255;
 $4 = $0;
 $5 = $4 & 3;
 $6 = ($5|0)!=(0);
 $7 = ($2|0)!=(0);
 $or$cond53 = $7 & $6;
 L1: do {
  if ($or$cond53) {
   $8 = $1&255;
   $$03555 = $0;$$03654 = $2;
   while(1) {
    $9 = HEAP8[$$03555>>0]|0;
    $10 = ($9<<24>>24)==($8<<24>>24);
    if ($10) {
     $$035$lcssa65 = $$03555;$$036$lcssa64 = $$03654;
     label = 6;
     break L1;
    }
    $11 = ((($$03555)) + 1|0);
    $12 = (($$03654) + -1)|0;
    $13 = $11;
    $14 = $13 & 3;
    $15 = ($14|0)!=(0);
    $16 = ($12|0)!=(0);
    $or$cond = $16 & $15;
    if ($or$cond) {
     $$03555 = $11;$$03654 = $12;
    } else {
     $$035$lcssa = $11;$$036$lcssa = $12;$$lcssa = $16;
     label = 5;
     break;
    }
   }
  } else {
   $$035$lcssa = $0;$$036$lcssa = $2;$$lcssa = $7;
   label = 5;
  }
 } while(0);
 if ((label|0) == 5) {
  if ($$lcssa) {
   $$035$lcssa65 = $$035$lcssa;$$036$lcssa64 = $$036$lcssa;
   label = 6;
  } else {
   label = 16;
  }
 }
 L8: do {
  if ((label|0) == 6) {
   $17 = HEAP8[$$035$lcssa65>>0]|0;
   $18 = $1&255;
   $19 = ($17<<24>>24)==($18<<24>>24);
   if ($19) {
    $38 = ($$036$lcssa64|0)==(0);
    if ($38) {
     label = 16;
     break;
    } else {
     $39 = $$035$lcssa65;
     break;
    }
   }
   $20 = Math_imul($3, 16843009)|0;
   $21 = ($$036$lcssa64>>>0)>(3);
   L13: do {
    if ($21) {
     $$046 = $$035$lcssa65;$$13745 = $$036$lcssa64;
     while(1) {
      $22 = HEAP32[$$046>>2]|0;
      $23 = $22 ^ $20;
      $24 = (($23) + -16843009)|0;
      $25 = $23 & -2139062144;
      $26 = $25 ^ -2139062144;
      $27 = $26 & $24;
      $28 = ($27|0)==(0);
      if (!($28)) {
       $$137$lcssa66 = $$13745;$$in = $$046;
       break L13;
      }
      $29 = ((($$046)) + 4|0);
      $30 = (($$13745) + -4)|0;
      $31 = ($30>>>0)>(3);
      if ($31) {
       $$046 = $29;$$13745 = $30;
      } else {
       $$0$lcssa = $29;$$137$lcssa = $30;
       label = 11;
       break;
      }
     }
    } else {
     $$0$lcssa = $$035$lcssa65;$$137$lcssa = $$036$lcssa64;
     label = 11;
    }
   } while(0);
   if ((label|0) == 11) {
    $32 = ($$137$lcssa|0)==(0);
    if ($32) {
     label = 16;
     break;
    } else {
     $$137$lcssa66 = $$137$lcssa;$$in = $$0$lcssa;
    }
   }
   $$140 = $$in;$$23839 = $$137$lcssa66;
   while(1) {
    $33 = HEAP8[$$140>>0]|0;
    $34 = ($33<<24>>24)==($18<<24>>24);
    if ($34) {
     $39 = $$140;
     break L8;
    }
    $35 = ((($$140)) + 1|0);
    $36 = (($$23839) + -1)|0;
    $37 = ($36|0)==(0);
    if ($37) {
     label = 16;
     break;
    } else {
     $$140 = $35;$$23839 = $36;
    }
   }
  }
 } while(0);
 if ((label|0) == 16) {
  $39 = 0;
 }
 return ($39|0);
}
function _pad_670($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0, $$011 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 256|0;
 $5 = sp;
 $6 = $4 & 73728;
 $7 = ($6|0)==(0);
 $8 = ($2|0)>($3|0);
 $or$cond = $8 & $7;
 if ($or$cond) {
  $9 = (($2) - ($3))|0;
  $10 = $1 << 24 >> 24;
  $11 = ($9>>>0)<(256);
  $12 = $11 ? $9 : 256;
  (_memset(($5|0),($10|0),($12|0))|0);
  $13 = ($9>>>0)>(255);
  if ($13) {
   $14 = (($2) - ($3))|0;
   $$011 = $9;
   while(1) {
    _out($0,$5,256);
    $15 = (($$011) + -256)|0;
    $16 = ($15>>>0)>(255);
    if ($16) {
     $$011 = $15;
    } else {
     break;
    }
   }
   $17 = $14 & 255;
   $$0$lcssa = $17;
  } else {
   $$0$lcssa = $9;
  }
  _out($0,$5,$$0$lcssa);
 }
 STACKTOP = sp;return;
}
function _wctomb($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($0|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = (_wcrtomb($0,$1,0)|0);
  $$0 = $3;
 }
 return ($$0|0);
}
function _fmt_fp($0,$1,$2,$3,$4,$5) {
 $0 = $0|0;
 $1 = +$1;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 $5 = $5|0;
 var $$ = 0, $$0 = 0, $$0463$lcssa = 0, $$0463588 = 0, $$0464599 = 0, $$0471 = 0.0, $$0479 = 0, $$0487657 = 0, $$0488 = 0, $$0488669 = 0, $$0488671 = 0, $$0497670 = 0, $$0498 = 0, $$0511586 = 0.0, $$0512 = 0, $$0513 = 0, $$0516652 = 0, $$0522 = 0, $$0523 = 0, $$0525 = 0;
 var $$0527 = 0, $$0529 = 0, $$0529$in646 = 0, $$0532651 = 0, $$1465 = 0, $$1467 = 0.0, $$1469 = 0.0, $$1472 = 0.0, $$1480 = 0, $$1482$lcssa = 0, $$1482683 = 0, $$1489656 = 0, $$1499 = 0, $$1510587 = 0, $$1514$lcssa = 0, $$1514614 = 0, $$1517 = 0, $$1526 = 0, $$1528 = 0, $$1530621 = 0;
 var $$1533$lcssa = 0, $$1533645 = 0, $$1604 = 0, $$2 = 0, $$2473 = 0.0, $$2476 = 0, $$2483 = 0, $$2490$lcssa = 0, $$2490638 = 0, $$2500$lcssa = 0, $$2500682 = 0, $$2515 = 0, $$2518634 = 0, $$2531 = 0, $$2534633 = 0, $$3 = 0.0, $$3477 = 0, $$3484$lcssa = 0, $$3484663 = 0, $$3501$lcssa = 0;
 var $$3501676 = 0, $$3535620 = 0, $$4 = 0.0, $$4478$lcssa = 0, $$4478594 = 0, $$4492 = 0, $$4502$lcssa = 0, $$4502662 = 0, $$4520 = 0, $$5$lcssa = 0, $$5486$lcssa = 0, $$5486639 = 0, $$5493603 = 0, $$5503 = 0, $$5521 = 0, $$560 = 0, $$5609 = 0, $$6 = 0, $$6494593 = 0, $$7495608 = 0;
 var $$8 = 0, $$8506 = 0, $$9 = 0, $$9507$lcssa = 0, $$9507625 = 0, $$lcssa583 = 0, $$lobit = 0, $$neg = 0, $$neg571 = 0, $$not = 0, $$pn = 0, $$pr = 0, $$pr564 = 0, $$pre = 0, $$pre$phi717Z2D = 0, $$pre$phi718Z2D = 0, $$pre720 = 0, $$sink757 = 0, $10 = 0, $100 = 0;
 var $101 = 0, $102 = 0, $103 = 0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0;
 var $12 = 0, $120 = 0, $121 = 0.0, $122 = 0, $123 = 0, $124 = 0, $125 = 0, $126 = 0, $127 = 0, $128 = 0.0, $129 = 0.0, $13 = 0, $130 = 0.0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0;
 var $138 = 0, $139 = 0, $14 = 0, $140 = 0, $141 = 0, $142 = 0, $143 = 0, $144 = 0, $145 = 0, $146 = 0, $147 = 0, $148 = 0, $149 = 0, $15 = 0.0, $150 = 0, $151 = 0, $152 = 0, $153 = 0, $154 = 0, $155 = 0;
 var $156 = 0, $157 = 0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0, $163 = 0, $164 = 0, $165 = 0, $166 = 0, $167 = 0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0;
 var $174 = 0, $175 = 0, $176 = 0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0, $181 = 0, $182 = 0, $183 = 0, $184 = 0, $185 = 0, $186 = 0, $187 = 0, $188 = 0, $189 = 0, $19 = 0, $190 = 0, $191 = 0;
 var $192 = 0, $193 = 0, $194 = 0, $195 = 0, $196 = 0, $197 = 0, $198 = 0, $199 = 0, $20 = 0, $200 = 0, $201 = 0, $202 = 0, $203 = 0, $204 = 0, $205 = 0, $206 = 0, $207 = 0, $208 = 0, $209 = 0, $21 = 0;
 var $210 = 0, $211 = 0, $212 = 0, $213 = 0, $214 = 0, $215 = 0, $216 = 0, $217 = 0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0, $224 = 0, $225 = 0, $226 = 0, $227 = 0, $228 = 0;
 var $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0, $241 = 0, $242 = 0, $243 = 0, $244 = 0, $245 = 0, $246 = 0.0;
 var $247 = 0.0, $248 = 0, $249 = 0.0, $25 = 0, $250 = 0, $251 = 0, $252 = 0, $253 = 0, $254 = 0, $255 = 0, $256 = 0, $257 = 0, $258 = 0, $259 = 0, $26 = 0, $260 = 0, $261 = 0, $262 = 0, $263 = 0, $264 = 0;
 var $265 = 0, $266 = 0, $267 = 0, $268 = 0, $269 = 0, $27 = 0, $270 = 0, $271 = 0, $272 = 0, $273 = 0, $274 = 0, $275 = 0, $276 = 0, $277 = 0, $278 = 0, $279 = 0, $28 = 0, $280 = 0, $281 = 0, $282 = 0;
 var $283 = 0, $284 = 0, $285 = 0, $286 = 0, $287 = 0, $288 = 0, $289 = 0, $29 = 0, $290 = 0, $291 = 0, $292 = 0, $293 = 0, $294 = 0, $295 = 0, $296 = 0, $297 = 0, $298 = 0, $299 = 0, $30 = 0, $300 = 0;
 var $301 = 0, $302 = 0, $303 = 0, $304 = 0, $305 = 0, $306 = 0, $307 = 0, $308 = 0, $309 = 0, $31 = 0, $310 = 0, $311 = 0, $312 = 0, $313 = 0, $314 = 0, $315 = 0, $316 = 0, $317 = 0, $318 = 0, $319 = 0;
 var $32 = 0, $320 = 0, $321 = 0, $322 = 0, $323 = 0, $324 = 0, $325 = 0, $326 = 0, $327 = 0, $328 = 0, $329 = 0, $33 = 0, $330 = 0, $331 = 0, $332 = 0, $333 = 0, $334 = 0, $335 = 0, $336 = 0, $337 = 0;
 var $338 = 0, $339 = 0, $34 = 0, $340 = 0, $341 = 0, $342 = 0, $343 = 0, $344 = 0, $345 = 0, $346 = 0, $347 = 0, $348 = 0, $349 = 0, $35 = 0, $350 = 0, $351 = 0, $352 = 0, $353 = 0, $354 = 0, $355 = 0;
 var $356 = 0, $357 = 0, $358 = 0, $359 = 0, $36 = 0, $360 = 0, $361 = 0, $362 = 0, $363 = 0, $364 = 0, $365 = 0, $366 = 0, $367 = 0, $368 = 0, $369 = 0, $37 = 0.0, $370 = 0, $371 = 0, $372 = 0, $373 = 0;
 var $374 = 0, $375 = 0, $376 = 0, $377 = 0, $378 = 0, $379 = 0, $38 = 0.0, $380 = 0, $381 = 0, $382 = 0, $383 = 0, $384 = 0, $385 = 0, $386 = 0, $387 = 0, $388 = 0, $389 = 0, $39 = 0, $390 = 0, $391 = 0;
 var $392 = 0, $393 = 0, $394 = 0, $395 = 0, $396 = 0, $397 = 0, $398 = 0, $399 = 0, $40 = 0, $400 = 0, $401 = 0, $402 = 0, $403 = 0, $404 = 0, $405 = 0, $406 = 0, $407 = 0, $408 = 0, $409 = 0, $41 = 0;
 var $410 = 0, $411 = 0, $412 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0.0, $58 = 0.0;
 var $59 = 0.0, $6 = 0, $60 = 0.0, $61 = 0.0, $62 = 0.0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0;
 var $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0, $93 = 0, $94 = 0;
 var $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $not$ = 0, $or$cond = 0, $or$cond3$not = 0, $or$cond543 = 0, $or$cond546 = 0, $or$cond556 = 0, $or$cond559 = 0, $or$cond6 = 0, $scevgep711 = 0, $scevgep711712 = 0, $spec$select = 0, $spec$select539 = 0, $spec$select540 = 0, $spec$select540722 = 0, $spec$select540723 = 0;
 var $spec$select541 = 0, $spec$select544 = 0.0, $spec$select547 = 0, $spec$select548 = 0, $spec$select549 = 0, $spec$select551 = 0, $spec$select554 = 0, $spec$select557 = 0, $spec$select561 = 0.0, $spec$select562 = 0, $spec$select563 = 0, $spec$select565 = 0, $spec$select566 = 0, $spec$select567 = 0.0, $spec$select568 = 0.0, $spec$select569 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $6 = sp + 32|0;
 $7 = sp + 536|0;
 $8 = sp;
 $9 = $8;
 $10 = sp + 540|0;
 HEAP32[$7>>2] = 0;
 $11 = ((($10)) + 12|0);
 $12 = (___DOUBLE_BITS_671($1)|0);
 $13 = tempRet0;
 $14 = ($13|0)<(0);
 if ($14) {
  $15 = - $1;
  $16 = (___DOUBLE_BITS_671($15)|0);
  $17 = tempRet0;
  $$0471 = $15;$$0522 = 1;$$0523 = 141028;$25 = $17;$412 = $16;
 } else {
  $18 = $4 & 2048;
  $19 = ($18|0)==(0);
  $20 = $4 & 1;
  $21 = ($20|0)==(0);
  $$ = $21 ? (141029) : (141034);
  $spec$select565 = $19 ? $$ : (141031);
  $22 = $4 & 2049;
  $23 = ($22|0)!=(0);
  $spec$select566 = $23&1;
  $$0471 = $1;$$0522 = $spec$select566;$$0523 = $spec$select565;$25 = $13;$412 = $12;
 }
 $24 = $25 & 2146435072;
 $26 = (0)==(0);
 $27 = ($24|0)==(2146435072);
 $28 = $26 & $27;
 do {
  if ($28) {
   $29 = $5 & 32;
   $30 = ($29|0)!=(0);
   $31 = $30 ? 141047 : 141051;
   $32 = ($$0471 != $$0471) | (0.0 != 0.0);
   $33 = $30 ? 141055 : 141059;
   $$0512 = $32 ? $33 : $31;
   $34 = (($$0522) + 3)|0;
   $35 = $4 & -65537;
   _pad_670($0,32,$2,$34,$35);
   _out($0,$$0523,$$0522);
   _out($0,$$0512,3);
   $36 = $4 ^ 8192;
   _pad_670($0,32,$2,$34,$36);
   $$sink757 = $34;
  } else {
   $37 = (+_frexpl($$0471,$7));
   $38 = $37 * 2.0;
   $39 = $38 != 0.0;
   if ($39) {
    $40 = HEAP32[$7>>2]|0;
    $41 = (($40) + -1)|0;
    HEAP32[$7>>2] = $41;
   }
   $42 = $5 | 32;
   $43 = ($42|0)==(97);
   if ($43) {
    $44 = $5 & 32;
    $45 = ($44|0)==(0);
    $46 = ((($$0523)) + 9|0);
    $spec$select = $45 ? $$0523 : $46;
    $47 = $$0522 | 2;
    $48 = ($3>>>0)>(11);
    $49 = (12 - ($3))|0;
    $50 = ($49|0)==(0);
    $51 = $48 | $50;
    do {
     if ($51) {
      $$1472 = $38;
     } else {
      $$0511586 = 8.0;$$1510587 = $49;
      while(1) {
       $52 = (($$1510587) + -1)|0;
       $53 = $$0511586 * 16.0;
       $54 = ($52|0)==(0);
       if ($54) {
        break;
       } else {
        $$0511586 = $53;$$1510587 = $52;
       }
      }
      $55 = HEAP8[$spec$select>>0]|0;
      $56 = ($55<<24>>24)==(45);
      if ($56) {
       $57 = - $38;
       $58 = $57 - $53;
       $59 = $53 + $58;
       $60 = - $59;
       $$1472 = $60;
       break;
      } else {
       $61 = $38 + $53;
       $62 = $61 - $53;
       $$1472 = $62;
       break;
      }
     }
    } while(0);
    $63 = HEAP32[$7>>2]|0;
    $64 = ($63|0)<(0);
    $65 = (0 - ($63))|0;
    $66 = $64 ? $65 : $63;
    $67 = ($66|0)<(0);
    $68 = $67 << 31 >> 31;
    $69 = (_fmt_u($66,$68,$11)|0);
    $70 = ($69|0)==($11|0);
    if ($70) {
     $71 = ((($10)) + 11|0);
     HEAP8[$71>>0] = 48;
     $$0513 = $71;
    } else {
     $$0513 = $69;
    }
    $72 = $63 >> 31;
    $73 = $72 & 2;
    $74 = (($73) + 43)|0;
    $75 = $74&255;
    $76 = ((($$0513)) + -1|0);
    HEAP8[$76>>0] = $75;
    $77 = (($5) + 15)|0;
    $78 = $77&255;
    $79 = ((($$0513)) + -2|0);
    HEAP8[$79>>0] = $78;
    $80 = ($3|0)<(1);
    $81 = $4 & 8;
    $82 = ($81|0)==(0);
    $$0525 = $8;$$2473 = $$1472;
    while(1) {
     $83 = (~~(($$2473)));
     $84 = (115680 + ($83)|0);
     $85 = HEAP8[$84>>0]|0;
     $86 = $85&255;
     $87 = $44 | $86;
     $88 = $87&255;
     $89 = ((($$0525)) + 1|0);
     HEAP8[$$0525>>0] = $88;
     $90 = (+($83|0));
     $91 = $$2473 - $90;
     $92 = $91 * 16.0;
     $93 = $89;
     $94 = (($93) - ($9))|0;
     $95 = ($94|0)==(1);
     if ($95) {
      $96 = $92 == 0.0;
      $or$cond3$not = $80 & $96;
      $or$cond = $82 & $or$cond3$not;
      if ($or$cond) {
       $$1526 = $89;
      } else {
       $97 = ((($$0525)) + 2|0);
       HEAP8[$89>>0] = 46;
       $$1526 = $97;
      }
     } else {
      $$1526 = $89;
     }
     $98 = $92 != 0.0;
     if ($98) {
      $$0525 = $$1526;$$2473 = $92;
     } else {
      break;
     }
    }
    $99 = ($3|0)==(0);
    $$pre720 = $$1526;
    if ($99) {
     label = 25;
    } else {
     $100 = (-2 - ($9))|0;
     $101 = (($100) + ($$pre720))|0;
     $102 = ($101|0)<($3|0);
     if ($102) {
      $103 = $11;
      $104 = $79;
      $105 = (($3) + 2)|0;
      $106 = (($105) + ($103))|0;
      $107 = (($106) - ($104))|0;
      $$0527 = $107;$$pre$phi717Z2D = $103;$$pre$phi718Z2D = $104;
     } else {
      label = 25;
     }
    }
    if ((label|0) == 25) {
     $108 = $11;
     $109 = $79;
     $110 = (($108) - ($9))|0;
     $111 = (($110) - ($109))|0;
     $112 = (($111) + ($$pre720))|0;
     $$0527 = $112;$$pre$phi717Z2D = $108;$$pre$phi718Z2D = $109;
    }
    $113 = (($$0527) + ($47))|0;
    _pad_670($0,32,$2,$113,$4);
    _out($0,$spec$select,$47);
    $114 = $4 ^ 65536;
    _pad_670($0,48,$2,$113,$114);
    $115 = (($$pre720) - ($9))|0;
    _out($0,$8,$115);
    $116 = (($$pre$phi717Z2D) - ($$pre$phi718Z2D))|0;
    $117 = (($115) + ($116))|0;
    $118 = (($$0527) - ($117))|0;
    _pad_670($0,48,$118,0,0);
    _out($0,$79,$116);
    $119 = $4 ^ 8192;
    _pad_670($0,32,$2,$113,$119);
    $$sink757 = $113;
    break;
   }
   $120 = ($3|0)<(0);
   $spec$select539 = $120 ? 6 : $3;
   if ($39) {
    $121 = $38 * 268435456.0;
    $122 = HEAP32[$7>>2]|0;
    $123 = (($122) + -28)|0;
    HEAP32[$7>>2] = $123;
    $$3 = $121;$$pr = $123;
   } else {
    $$pre = HEAP32[$7>>2]|0;
    $$3 = $38;$$pr = $$pre;
   }
   $124 = ($$pr|0)<(0);
   $125 = ((($6)) + 288|0);
   $$0498 = $124 ? $6 : $125;
   $$1499 = $$0498;$$4 = $$3;
   while(1) {
    $126 = (~~(($$4))>>>0);
    HEAP32[$$1499>>2] = $126;
    $127 = ((($$1499)) + 4|0);
    $128 = (+($126>>>0));
    $129 = $$4 - $128;
    $130 = $129 * 1.0E+9;
    $131 = $130 != 0.0;
    if ($131) {
     $$1499 = $127;$$4 = $130;
    } else {
     break;
    }
   }
   $132 = $$0498;
   $133 = ($$pr|0)>(0);
   if ($133) {
    $$1482683 = $$0498;$$2500682 = $127;$135 = $$pr;
    while(1) {
     $134 = ($135|0)<(29);
     $136 = $134 ? $135 : 29;
     $$0488669 = ((($$2500682)) + -4|0);
     $137 = ($$0488669>>>0)<($$1482683>>>0);
     if ($137) {
      $$2483 = $$1482683;
     } else {
      $$0488671 = $$0488669;$$0497670 = 0;
      while(1) {
       $138 = HEAP32[$$0488671>>2]|0;
       $139 = (_bitshift64Shl(($138|0),0,($136|0))|0);
       $140 = tempRet0;
       $141 = (_i64Add(($139|0),($140|0),($$0497670|0),0)|0);
       $142 = tempRet0;
       $143 = (___udivdi3(($141|0),($142|0),1000000000,0)|0);
       $144 = tempRet0;
       $145 = (___muldi3(($143|0),($144|0),1000000000,0)|0);
       $146 = tempRet0;
       $147 = (_i64Subtract(($141|0),($142|0),($145|0),($146|0))|0);
       $148 = tempRet0;
       HEAP32[$$0488671>>2] = $147;
       $$0488 = ((($$0488671)) + -4|0);
       $149 = ($$0488>>>0)<($$1482683>>>0);
       if ($149) {
        break;
       } else {
        $$0488671 = $$0488;$$0497670 = $143;
       }
      }
      $150 = ($143|0)==(0);
      if ($150) {
       $$2483 = $$1482683;
      } else {
       $151 = ((($$1482683)) + -4|0);
       HEAP32[$151>>2] = $143;
       $$2483 = $151;
      }
     }
     $152 = ($$2500682>>>0)>($$2483>>>0);
     L57: do {
      if ($152) {
       $$3501676 = $$2500682;
       while(1) {
        $154 = ((($$3501676)) + -4|0);
        $155 = HEAP32[$154>>2]|0;
        $156 = ($155|0)==(0);
        if (!($156)) {
         $$3501$lcssa = $$3501676;
         break L57;
        }
        $153 = ($154>>>0)>($$2483>>>0);
        if ($153) {
         $$3501676 = $154;
        } else {
         $$3501$lcssa = $154;
         break;
        }
       }
      } else {
       $$3501$lcssa = $$2500682;
      }
     } while(0);
     $157 = HEAP32[$7>>2]|0;
     $158 = (($157) - ($136))|0;
     HEAP32[$7>>2] = $158;
     $159 = ($158|0)>(0);
     if ($159) {
      $$1482683 = $$2483;$$2500682 = $$3501$lcssa;$135 = $158;
     } else {
      $$1482$lcssa = $$2483;$$2500$lcssa = $$3501$lcssa;$$pr564 = $158;
      break;
     }
    }
   } else {
    $$1482$lcssa = $$0498;$$2500$lcssa = $127;$$pr564 = $$pr;
   }
   $160 = ($$pr564|0)<(0);
   if ($160) {
    $161 = (($spec$select539) + 25)|0;
    $162 = (($161|0) / 9)&-1;
    $163 = (($162) + 1)|0;
    $164 = ($42|0)==(102);
    $$3484663 = $$1482$lcssa;$$4502662 = $$2500$lcssa;$166 = $$pr564;
    while(1) {
     $165 = (0 - ($166))|0;
     $167 = ($165|0)<(9);
     $168 = $167 ? $165 : 9;
     $169 = ($$3484663>>>0)<($$4502662>>>0);
     if ($169) {
      $173 = 1 << $168;
      $174 = (($173) + -1)|0;
      $175 = 1000000000 >>> $168;
      $$0487657 = 0;$$1489656 = $$3484663;
      while(1) {
       $176 = HEAP32[$$1489656>>2]|0;
       $177 = $176 & $174;
       $178 = $176 >>> $168;
       $179 = (($178) + ($$0487657))|0;
       HEAP32[$$1489656>>2] = $179;
       $180 = Math_imul($177, $175)|0;
       $181 = ((($$1489656)) + 4|0);
       $182 = ($181>>>0)<($$4502662>>>0);
       if ($182) {
        $$0487657 = $180;$$1489656 = $181;
       } else {
        break;
       }
      }
      $183 = HEAP32[$$3484663>>2]|0;
      $184 = ($183|0)==(0);
      $185 = ((($$3484663)) + 4|0);
      $spec$select540 = $184 ? $185 : $$3484663;
      $186 = ($180|0)==(0);
      if ($186) {
       $$5503 = $$4502662;$spec$select540723 = $spec$select540;
      } else {
       $187 = ((($$4502662)) + 4|0);
       HEAP32[$$4502662>>2] = $180;
       $$5503 = $187;$spec$select540723 = $spec$select540;
      }
     } else {
      $170 = HEAP32[$$3484663>>2]|0;
      $171 = ($170|0)==(0);
      $172 = ((($$3484663)) + 4|0);
      $spec$select540722 = $171 ? $172 : $$3484663;
      $$5503 = $$4502662;$spec$select540723 = $spec$select540722;
     }
     $188 = $164 ? $$0498 : $spec$select540723;
     $189 = $$5503;
     $190 = $188;
     $191 = (($189) - ($190))|0;
     $192 = $191 >> 2;
     $193 = ($192|0)>($163|0);
     $194 = (($188) + ($163<<2)|0);
     $spec$select541 = $193 ? $194 : $$5503;
     $195 = HEAP32[$7>>2]|0;
     $196 = (($195) + ($168))|0;
     HEAP32[$7>>2] = $196;
     $197 = ($196|0)<(0);
     if ($197) {
      $$3484663 = $spec$select540723;$$4502662 = $spec$select541;$166 = $196;
     } else {
      $$3484$lcssa = $spec$select540723;$$4502$lcssa = $spec$select541;
      break;
     }
    }
   } else {
    $$3484$lcssa = $$1482$lcssa;$$4502$lcssa = $$2500$lcssa;
   }
   $198 = ($$3484$lcssa>>>0)<($$4502$lcssa>>>0);
   if ($198) {
    $199 = $$3484$lcssa;
    $200 = (($132) - ($199))|0;
    $201 = $200 >> 2;
    $202 = ($201*9)|0;
    $203 = HEAP32[$$3484$lcssa>>2]|0;
    $204 = ($203>>>0)<(10);
    if ($204) {
     $$1517 = $202;
    } else {
     $$0516652 = $202;$$0532651 = 10;
     while(1) {
      $205 = ($$0532651*10)|0;
      $206 = (($$0516652) + 1)|0;
      $207 = ($203>>>0)<($205>>>0);
      if ($207) {
       $$1517 = $206;
       break;
      } else {
       $$0516652 = $206;$$0532651 = $205;
      }
     }
    }
   } else {
    $$1517 = 0;
   }
   $208 = ($42|0)==(102);
   $209 = $208 ? 0 : $$1517;
   $210 = (($spec$select539) - ($209))|0;
   $211 = ($42|0)==(103);
   $212 = ($spec$select539|0)!=(0);
   $213 = $212 & $211;
   $$neg = $213 << 31 >> 31;
   $214 = (($210) + ($$neg))|0;
   $215 = $$4502$lcssa;
   $216 = (($215) - ($132))|0;
   $217 = $216 >> 2;
   $218 = ($217*9)|0;
   $219 = (($218) + -9)|0;
   $220 = ($214|0)<($219|0);
   if ($220) {
    $221 = ((($$0498)) + 4|0);
    $222 = (($214) + 9216)|0;
    $223 = (($222|0) / 9)&-1;
    $224 = (($223) + -1024)|0;
    $225 = (($221) + ($224<<2)|0);
    $226 = ($223*9)|0;
    $227 = (($222) - ($226))|0;
    $228 = ($227|0)<(8);
    if ($228) {
     $$0529$in646 = $227;$$1533645 = 10;
     while(1) {
      $$0529 = (($$0529$in646) + 1)|0;
      $229 = ($$1533645*10)|0;
      $230 = ($$0529$in646|0)<(7);
      if ($230) {
       $$0529$in646 = $$0529;$$1533645 = $229;
      } else {
       $$1533$lcssa = $229;
       break;
      }
     }
    } else {
     $$1533$lcssa = 10;
    }
    $231 = HEAP32[$225>>2]|0;
    $232 = (($231>>>0) / ($$1533$lcssa>>>0))&-1;
    $233 = Math_imul($232, $$1533$lcssa)|0;
    $234 = (($231) - ($233))|0;
    $235 = ($234|0)==(0);
    $236 = ((($225)) + 4|0);
    $237 = ($236|0)==($$4502$lcssa|0);
    $or$cond543 = $237 & $235;
    if ($or$cond543) {
     $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
    } else {
     $238 = $232 & 1;
     $239 = ($238|0)==(0);
     $spec$select544 = $239 ? 9007199254740992.0 : 9007199254740994.0;
     $240 = $$1533$lcssa >>> 1;
     $241 = ($234>>>0)<($240>>>0);
     $242 = ($234|0)==($240|0);
     $or$cond546 = $237 & $242;
     $spec$select561 = $or$cond546 ? 1.0 : 1.5;
     $spec$select567 = $241 ? 0.5 : $spec$select561;
     $243 = ($$0522|0)==(0);
     if ($243) {
      $$1467 = $spec$select567;$$1469 = $spec$select544;
     } else {
      $244 = HEAP8[$$0523>>0]|0;
      $245 = ($244<<24>>24)==(45);
      $246 = - $spec$select544;
      $247 = - $spec$select567;
      $spec$select568 = $245 ? $246 : $spec$select544;
      $spec$select569 = $245 ? $247 : $spec$select567;
      $$1467 = $spec$select569;$$1469 = $spec$select568;
     }
     $248 = (($231) - ($234))|0;
     HEAP32[$225>>2] = $248;
     $249 = $$1469 + $$1467;
     $250 = $249 != $$1469;
     if ($250) {
      $251 = (($248) + ($$1533$lcssa))|0;
      HEAP32[$225>>2] = $251;
      $252 = ($251>>>0)>(999999999);
      if ($252) {
       $$2490638 = $225;$$5486639 = $$3484$lcssa;
       while(1) {
        $253 = ((($$2490638)) + -4|0);
        HEAP32[$$2490638>>2] = 0;
        $254 = ($253>>>0)<($$5486639>>>0);
        if ($254) {
         $255 = ((($$5486639)) + -4|0);
         HEAP32[$255>>2] = 0;
         $$6 = $255;
        } else {
         $$6 = $$5486639;
        }
        $256 = HEAP32[$253>>2]|0;
        $257 = (($256) + 1)|0;
        HEAP32[$253>>2] = $257;
        $258 = ($257>>>0)>(999999999);
        if ($258) {
         $$2490638 = $253;$$5486639 = $$6;
        } else {
         $$2490$lcssa = $253;$$5486$lcssa = $$6;
         break;
        }
       }
      } else {
       $$2490$lcssa = $225;$$5486$lcssa = $$3484$lcssa;
      }
      $259 = $$5486$lcssa;
      $260 = (($132) - ($259))|0;
      $261 = $260 >> 2;
      $262 = ($261*9)|0;
      $263 = HEAP32[$$5486$lcssa>>2]|0;
      $264 = ($263>>>0)<(10);
      if ($264) {
       $$4492 = $$2490$lcssa;$$4520 = $262;$$8 = $$5486$lcssa;
      } else {
       $$2518634 = $262;$$2534633 = 10;
       while(1) {
        $265 = ($$2534633*10)|0;
        $266 = (($$2518634) + 1)|0;
        $267 = ($263>>>0)<($265>>>0);
        if ($267) {
         $$4492 = $$2490$lcssa;$$4520 = $266;$$8 = $$5486$lcssa;
         break;
        } else {
         $$2518634 = $266;$$2534633 = $265;
        }
       }
      }
     } else {
      $$4492 = $225;$$4520 = $$1517;$$8 = $$3484$lcssa;
     }
    }
    $268 = ((($$4492)) + 4|0);
    $269 = ($$4502$lcssa>>>0)>($268>>>0);
    $spec$select547 = $269 ? $268 : $$4502$lcssa;
    $$5521 = $$4520;$$8506 = $spec$select547;$$9 = $$8;
   } else {
    $$5521 = $$1517;$$8506 = $$4502$lcssa;$$9 = $$3484$lcssa;
   }
   $270 = (0 - ($$5521))|0;
   $271 = ($$8506>>>0)>($$9>>>0);
   L109: do {
    if ($271) {
     $$9507625 = $$8506;
     while(1) {
      $273 = ((($$9507625)) + -4|0);
      $274 = HEAP32[$273>>2]|0;
      $275 = ($274|0)==(0);
      if (!($275)) {
       $$9507$lcssa = $$9507625;$$lcssa583 = 1;
       break L109;
      }
      $272 = ($273>>>0)>($$9>>>0);
      if ($272) {
       $$9507625 = $273;
      } else {
       $$9507$lcssa = $273;$$lcssa583 = 0;
       break;
      }
     }
    } else {
     $$9507$lcssa = $$8506;$$lcssa583 = 0;
    }
   } while(0);
   do {
    if ($211) {
     $not$ = $212 ^ 1;
     $276 = $not$&1;
     $spec$select548 = (($spec$select539) + ($276))|0;
     $277 = ($spec$select548|0)>($$5521|0);
     $278 = ($$5521|0)>(-5);
     $or$cond6 = $277 & $278;
     if ($or$cond6) {
      $279 = (($5) + -1)|0;
      $$neg571 = (($spec$select548) + -1)|0;
      $280 = (($$neg571) - ($$5521))|0;
      $$0479 = $279;$$2476 = $280;
     } else {
      $281 = (($5) + -2)|0;
      $282 = (($spec$select548) + -1)|0;
      $$0479 = $281;$$2476 = $282;
     }
     $283 = $4 & 8;
     $284 = ($283|0)==(0);
     if ($284) {
      if ($$lcssa583) {
       $285 = ((($$9507$lcssa)) + -4|0);
       $286 = HEAP32[$285>>2]|0;
       $287 = ($286|0)==(0);
       if ($287) {
        $$2531 = 9;
       } else {
        $288 = (($286>>>0) % 10)&-1;
        $289 = ($288|0)==(0);
        if ($289) {
         $$1530621 = 0;$$3535620 = 10;
         while(1) {
          $290 = ($$3535620*10)|0;
          $291 = (($$1530621) + 1)|0;
          $292 = (($286>>>0) % ($290>>>0))&-1;
          $293 = ($292|0)==(0);
          if ($293) {
           $$1530621 = $291;$$3535620 = $290;
          } else {
           $$2531 = $291;
           break;
          }
         }
        } else {
         $$2531 = 0;
        }
       }
      } else {
       $$2531 = 9;
      }
      $294 = $$0479 | 32;
      $295 = ($294|0)==(102);
      $296 = $$9507$lcssa;
      $297 = (($296) - ($132))|0;
      $298 = $297 >> 2;
      $299 = ($298*9)|0;
      $300 = (($299) + -9)|0;
      if ($295) {
       $301 = (($300) - ($$2531))|0;
       $302 = ($301|0)>(0);
       $spec$select549 = $302 ? $301 : 0;
       $303 = ($$2476|0)<($spec$select549|0);
       $spec$select562 = $303 ? $$2476 : $spec$select549;
       $$1480 = $$0479;$$3477 = $spec$select562;
       break;
      } else {
       $304 = (($300) + ($$5521))|0;
       $305 = (($304) - ($$2531))|0;
       $306 = ($305|0)>(0);
       $spec$select551 = $306 ? $305 : 0;
       $307 = ($$2476|0)<($spec$select551|0);
       $spec$select563 = $307 ? $$2476 : $spec$select551;
       $$1480 = $$0479;$$3477 = $spec$select563;
       break;
      }
     } else {
      $$1480 = $$0479;$$3477 = $$2476;
     }
    } else {
     $$1480 = $5;$$3477 = $spec$select539;
    }
   } while(0);
   $308 = ($$3477|0)!=(0);
   $309 = $4 >>> 3;
   $$lobit = $309 & 1;
   $310 = $308 ? 1 : $$lobit;
   $311 = $$1480 | 32;
   $312 = ($311|0)==(102);
   if ($312) {
    $313 = ($$5521|0)>(0);
    $314 = $313 ? $$5521 : 0;
    $$2515 = 0;$$pn = $314;
   } else {
    $315 = ($$5521|0)<(0);
    $316 = $315 ? $270 : $$5521;
    $317 = ($316|0)<(0);
    $318 = $317 << 31 >> 31;
    $319 = (_fmt_u($316,$318,$11)|0);
    $320 = $11;
    $321 = $319;
    $322 = (($320) - ($321))|0;
    $323 = ($322|0)<(2);
    if ($323) {
     $$1514614 = $319;
     while(1) {
      $324 = ((($$1514614)) + -1|0);
      HEAP8[$324>>0] = 48;
      $325 = $324;
      $326 = (($320) - ($325))|0;
      $327 = ($326|0)<(2);
      if ($327) {
       $$1514614 = $324;
      } else {
       $$1514$lcssa = $324;
       break;
      }
     }
    } else {
     $$1514$lcssa = $319;
    }
    $328 = $$5521 >> 31;
    $329 = $328 & 2;
    $330 = (($329) + 43)|0;
    $331 = $330&255;
    $332 = ((($$1514$lcssa)) + -1|0);
    HEAP8[$332>>0] = $331;
    $333 = $$1480&255;
    $334 = ((($$1514$lcssa)) + -2|0);
    HEAP8[$334>>0] = $333;
    $335 = $334;
    $336 = (($320) - ($335))|0;
    $$2515 = $334;$$pn = $336;
   }
   $337 = (($$0522) + 1)|0;
   $338 = (($337) + ($$3477))|0;
   $$1528 = (($338) + ($310))|0;
   $339 = (($$1528) + ($$pn))|0;
   _pad_670($0,32,$2,$339,$4);
   _out($0,$$0523,$$0522);
   $340 = $4 ^ 65536;
   _pad_670($0,48,$2,$339,$340);
   if ($312) {
    $341 = ($$9>>>0)>($$0498>>>0);
    $spec$select554 = $341 ? $$0498 : $$9;
    $342 = ((($8)) + 9|0);
    $343 = $342;
    $344 = ((($8)) + 8|0);
    $$5493603 = $spec$select554;
    while(1) {
     $345 = HEAP32[$$5493603>>2]|0;
     $346 = (_fmt_u($345,0,$342)|0);
     $347 = ($$5493603|0)==($spec$select554|0);
     if ($347) {
      $353 = ($346|0)==($342|0);
      if ($353) {
       HEAP8[$344>>0] = 48;
       $$1465 = $344;
      } else {
       $$1465 = $346;
      }
     } else {
      $348 = ($346>>>0)>($8>>>0);
      if ($348) {
       $349 = $346;
       $350 = (($349) - ($9))|0;
       _memset(($8|0),48,($350|0))|0;
       $$0464599 = $346;
       while(1) {
        $351 = ((($$0464599)) + -1|0);
        $352 = ($351>>>0)>($8>>>0);
        if ($352) {
         $$0464599 = $351;
        } else {
         $$1465 = $351;
         break;
        }
       }
      } else {
       $$1465 = $346;
      }
     }
     $354 = $$1465;
     $355 = (($343) - ($354))|0;
     _out($0,$$1465,$355);
     $356 = ((($$5493603)) + 4|0);
     $357 = ($356>>>0)>($$0498>>>0);
     if ($357) {
      break;
     } else {
      $$5493603 = $356;
     }
    }
    $$not = $308 ^ 1;
    $358 = $4 & 8;
    $359 = ($358|0)==(0);
    $or$cond556 = $359 & $$not;
    if (!($or$cond556)) {
     _out($0,141063,1);
    }
    $360 = ($356>>>0)<($$9507$lcssa>>>0);
    $361 = ($$3477|0)>(0);
    $362 = $360 & $361;
    if ($362) {
     $$4478594 = $$3477;$$6494593 = $356;
     while(1) {
      $363 = HEAP32[$$6494593>>2]|0;
      $364 = (_fmt_u($363,0,$342)|0);
      $365 = ($364>>>0)>($8>>>0);
      if ($365) {
       $366 = $364;
       $367 = (($366) - ($9))|0;
       _memset(($8|0),48,($367|0))|0;
       $$0463588 = $364;
       while(1) {
        $368 = ((($$0463588)) + -1|0);
        $369 = ($368>>>0)>($8>>>0);
        if ($369) {
         $$0463588 = $368;
        } else {
         $$0463$lcssa = $368;
         break;
        }
       }
      } else {
       $$0463$lcssa = $364;
      }
      $370 = ($$4478594|0)<(9);
      $371 = $370 ? $$4478594 : 9;
      _out($0,$$0463$lcssa,$371);
      $372 = ((($$6494593)) + 4|0);
      $373 = (($$4478594) + -9)|0;
      $374 = ($372>>>0)<($$9507$lcssa>>>0);
      $375 = ($$4478594|0)>(9);
      $376 = $374 & $375;
      if ($376) {
       $$4478594 = $373;$$6494593 = $372;
      } else {
       $$4478$lcssa = $373;
       break;
      }
     }
    } else {
     $$4478$lcssa = $$3477;
    }
    $377 = (($$4478$lcssa) + 9)|0;
    _pad_670($0,48,$377,9,0);
   } else {
    $378 = ((($$9)) + 4|0);
    $spec$select557 = $$lcssa583 ? $$9507$lcssa : $378;
    $379 = ($$9>>>0)<($spec$select557>>>0);
    $380 = ($$3477|0)>(-1);
    $381 = $379 & $380;
    if ($381) {
     $382 = ((($8)) + 9|0);
     $383 = $4 & 8;
     $384 = ($383|0)==(0);
     $385 = $382;
     $386 = (0 - ($9))|0;
     $387 = ((($8)) + 8|0);
     $$5609 = $$3477;$$7495608 = $$9;
     while(1) {
      $388 = HEAP32[$$7495608>>2]|0;
      $389 = (_fmt_u($388,0,$382)|0);
      $390 = ($389|0)==($382|0);
      if ($390) {
       HEAP8[$387>>0] = 48;
       $$0 = $387;
      } else {
       $$0 = $389;
      }
      $391 = ($$7495608|0)==($$9|0);
      do {
       if ($391) {
        $395 = ((($$0)) + 1|0);
        _out($0,$$0,1);
        $396 = ($$5609|0)<(1);
        $or$cond559 = $384 & $396;
        if ($or$cond559) {
         $$2 = $395;
         break;
        }
        _out($0,141063,1);
        $$2 = $395;
       } else {
        $392 = ($$0>>>0)>($8>>>0);
        if (!($392)) {
         $$2 = $$0;
         break;
        }
        $scevgep711 = (($$0) + ($386)|0);
        $scevgep711712 = $scevgep711;
        _memset(($8|0),48,($scevgep711712|0))|0;
        $$1604 = $$0;
        while(1) {
         $393 = ((($$1604)) + -1|0);
         $394 = ($393>>>0)>($8>>>0);
         if ($394) {
          $$1604 = $393;
         } else {
          $$2 = $393;
          break;
         }
        }
       }
      } while(0);
      $397 = $$2;
      $398 = (($385) - ($397))|0;
      $399 = ($$5609|0)>($398|0);
      $400 = $399 ? $398 : $$5609;
      _out($0,$$2,$400);
      $401 = (($$5609) - ($398))|0;
      $402 = ((($$7495608)) + 4|0);
      $403 = ($402>>>0)<($spec$select557>>>0);
      $404 = ($401|0)>(-1);
      $405 = $403 & $404;
      if ($405) {
       $$5609 = $401;$$7495608 = $402;
      } else {
       $$5$lcssa = $401;
       break;
      }
     }
    } else {
     $$5$lcssa = $$3477;
    }
    $406 = (($$5$lcssa) + 18)|0;
    _pad_670($0,48,$406,18,0);
    $407 = $11;
    $408 = $$2515;
    $409 = (($407) - ($408))|0;
    _out($0,$$2515,$409);
   }
   $410 = $4 ^ 8192;
   _pad_670($0,32,$2,$339,$410);
   $$sink757 = $339;
  }
 } while(0);
 $411 = ($$sink757|0)<($2|0);
 $$560 = $411 ? $2 : $$sink757;
 STACKTOP = sp;return ($$560|0);
}
function ___DOUBLE_BITS_671($0) {
 $0 = +$0;
 var $1 = 0, $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$1 = HEAP32[tempDoublePtr>>2]|0;
 $2 = HEAP32[tempDoublePtr+4>>2]|0;
 tempRet0 = ($2);
 return ($1|0);
}
function _frexpl($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_frexp($0,$1));
 return (+$2);
}
function _frexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$016 = 0.0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0.0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0.0, $9 = 0.0, $storemerge = 0, $trunc$clear = 0, label = 0;
 var sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 $4 = (_bitshift64Lshr(($2|0),($3|0),52)|0);
 $5 = tempRet0;
 $6 = $4&65535;
 $trunc$clear = $6 & 2047;
 switch ($trunc$clear<<16>>16) {
 case 0:  {
  $7 = $0 != 0.0;
  if ($7) {
   $8 = $0 * 1.8446744073709552E+19;
   $9 = (+_frexp($8,$1));
   $10 = HEAP32[$1>>2]|0;
   $11 = (($10) + -64)|0;
   $$016 = $9;$storemerge = $11;
  } else {
   $$016 = $0;$storemerge = 0;
  }
  HEAP32[$1>>2] = $storemerge;
  $$0 = $$016;
  break;
 }
 case 2047:  {
  $$0 = $0;
  break;
 }
 default: {
  $12 = $4 & 2047;
  $13 = (($12) + -1022)|0;
  HEAP32[$1>>2] = $13;
  $14 = $3 & -2146435073;
  $15 = $14 | 1071644672;
  HEAP32[tempDoublePtr>>2] = $2;HEAP32[tempDoublePtr+4>>2] = $15;$16 = +HEAPF64[tempDoublePtr>>3];
  $$0 = $16;
 }
 }
 return (+$$0);
}
function _wcrtomb($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0;
 var $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0;
 var $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($0|0)==(0|0);
 do {
  if ($3) {
   $$0 = 1;
  } else {
   $4 = ($1>>>0)<(128);
   if ($4) {
    $5 = $1&255;
    HEAP8[$0>>0] = $5;
    $$0 = 1;
    break;
   }
   $6 = (___pthread_self_447()|0);
   $7 = ((($6)) + 188|0);
   $8 = HEAP32[$7>>2]|0;
   $9 = HEAP32[$8>>2]|0;
   $10 = ($9|0)==(0|0);
   if ($10) {
    $11 = $1 & -128;
    $12 = ($11|0)==(57216);
    if ($12) {
     $14 = $1&255;
     HEAP8[$0>>0] = $14;
     $$0 = 1;
     break;
    } else {
     $13 = (___errno_location()|0);
     HEAP32[$13>>2] = 84;
     $$0 = -1;
     break;
    }
   }
   $15 = ($1>>>0)<(2048);
   if ($15) {
    $16 = $1 >>> 6;
    $17 = $16 | 192;
    $18 = $17&255;
    $19 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $18;
    $20 = $1 & 63;
    $21 = $20 | 128;
    $22 = $21&255;
    HEAP8[$19>>0] = $22;
    $$0 = 2;
    break;
   }
   $23 = ($1>>>0)<(55296);
   $24 = $1 & -8192;
   $25 = ($24|0)==(57344);
   $or$cond = $23 | $25;
   if ($or$cond) {
    $26 = $1 >>> 12;
    $27 = $26 | 224;
    $28 = $27&255;
    $29 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $28;
    $30 = $1 >>> 6;
    $31 = $30 & 63;
    $32 = $31 | 128;
    $33 = $32&255;
    $34 = ((($0)) + 2|0);
    HEAP8[$29>>0] = $33;
    $35 = $1 & 63;
    $36 = $35 | 128;
    $37 = $36&255;
    HEAP8[$34>>0] = $37;
    $$0 = 3;
    break;
   }
   $38 = (($1) + -65536)|0;
   $39 = ($38>>>0)<(1048576);
   if ($39) {
    $40 = $1 >>> 18;
    $41 = $40 | 240;
    $42 = $41&255;
    $43 = ((($0)) + 1|0);
    HEAP8[$0>>0] = $42;
    $44 = $1 >>> 12;
    $45 = $44 & 63;
    $46 = $45 | 128;
    $47 = $46&255;
    $48 = ((($0)) + 2|0);
    HEAP8[$43>>0] = $47;
    $49 = $1 >>> 6;
    $50 = $49 & 63;
    $51 = $50 | 128;
    $52 = $51&255;
    $53 = ((($0)) + 3|0);
    HEAP8[$48>>0] = $52;
    $54 = $1 & 63;
    $55 = $54 | 128;
    $56 = $55&255;
    HEAP8[$53>>0] = $56;
    $$0 = 4;
    break;
   } else {
    $57 = (___errno_location()|0);
    HEAP32[$57>>2] = 84;
    $$0 = -1;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___pthread_self_447() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _pthread_self() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (120876|0);
}
function ___pthread_self_107() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function ___strerror_l($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$012$lcssa = 0, $$01214 = 0, $$016 = 0, $$113 = 0, $$115 = 0, $$115$ph = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $$016 = 0;
 while(1) {
  $2 = (115696 + ($$016)|0);
  $3 = HEAP8[$2>>0]|0;
  $4 = $3&255;
  $5 = ($4|0)==($0|0);
  if ($5) {
   label = 4;
   break;
  }
  $6 = (($$016) + 1)|0;
  $7 = ($6|0)==(87);
  if ($7) {
   $$115$ph = 87;
   label = 5;
   break;
  } else {
   $$016 = $6;
  }
 }
 if ((label|0) == 4) {
  $8 = ($$016|0)==(0);
  if ($8) {
   $$012$lcssa = 115792;
  } else {
   $$115$ph = $$016;
   label = 5;
  }
 }
 if ((label|0) == 5) {
  $$01214 = 115792;$$115 = $$115$ph;
  while(1) {
   $$113 = $$01214;
   while(1) {
    $9 = HEAP8[$$113>>0]|0;
    $10 = ($9<<24>>24)==(0);
    $11 = ((($$113)) + 1|0);
    if ($10) {
     break;
    } else {
     $$113 = $11;
    }
   }
   $12 = (($$115) + -1)|0;
   $13 = ($12|0)==(0);
   if ($13) {
    $$012$lcssa = $11;
    break;
   } else {
    $$01214 = $11;$$115 = $12;
   }
  }
 }
 $14 = ((($1)) + 20|0);
 $15 = HEAP32[$14>>2]|0;
 $16 = (___lctrans($$012$lcssa,$15)|0);
 return ($16|0);
}
function ___lctrans($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___lctrans_impl($0,$1)|0);
 return ($2|0);
}
function ___lctrans_impl($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $$0 = 0;
 } else {
  $3 = HEAP32[$1>>2]|0;
  $4 = ((($1)) + 4|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = (___mo_lookup($3,$5,$0)|0);
  $$0 = $6;
 }
 $7 = ($$0|0)==(0|0);
 $8 = $7 ? $0 : $$0;
 return ($8|0);
}
function ___mo_lookup($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$090 = 0, $$094 = 0, $$191 = 0, $$195 = 0, $$4 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0, $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0;
 var $61 = 0, $62 = 0, $63 = 0, $64 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond102 = 0, $or$cond104 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = HEAP32[$0>>2]|0;
 $4 = (($3) + 1794895138)|0;
 $5 = ((($0)) + 8|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (_swapc($6,$4)|0);
 $8 = ((($0)) + 12|0);
 $9 = HEAP32[$8>>2]|0;
 $10 = (_swapc($9,$4)|0);
 $11 = ((($0)) + 16|0);
 $12 = HEAP32[$11>>2]|0;
 $13 = (_swapc($12,$4)|0);
 $14 = $1 >>> 2;
 $15 = ($7>>>0)<($14>>>0);
 L1: do {
  if ($15) {
   $16 = $7 << 2;
   $17 = (($1) - ($16))|0;
   $18 = ($10>>>0)<($17>>>0);
   $19 = ($13>>>0)<($17>>>0);
   $or$cond = $18 & $19;
   if ($or$cond) {
    $20 = $13 | $10;
    $21 = $20 & 3;
    $22 = ($21|0)==(0);
    if ($22) {
     $23 = $10 >>> 2;
     $24 = $13 >>> 2;
     $$090 = 0;$$094 = $7;
     while(1) {
      $25 = $$094 >>> 1;
      $26 = (($$090) + ($25))|0;
      $27 = $26 << 1;
      $28 = (($27) + ($23))|0;
      $29 = (($0) + ($28<<2)|0);
      $30 = HEAP32[$29>>2]|0;
      $31 = (_swapc($30,$4)|0);
      $32 = (($28) + 1)|0;
      $33 = (($0) + ($32<<2)|0);
      $34 = HEAP32[$33>>2]|0;
      $35 = (_swapc($34,$4)|0);
      $36 = ($35>>>0)<($1>>>0);
      $37 = (($1) - ($35))|0;
      $38 = ($31>>>0)<($37>>>0);
      $or$cond102 = $36 & $38;
      if (!($or$cond102)) {
       $$4 = 0;
       break L1;
      }
      $39 = (($35) + ($31))|0;
      $40 = (($0) + ($39)|0);
      $41 = HEAP8[$40>>0]|0;
      $42 = ($41<<24>>24)==(0);
      if (!($42)) {
       $$4 = 0;
       break L1;
      }
      $43 = (($0) + ($35)|0);
      $44 = (_strcmp($2,$43)|0);
      $45 = ($44|0)==(0);
      if ($45) {
       break;
      }
      $62 = ($$094|0)==(1);
      $63 = ($44|0)<(0);
      if ($62) {
       $$4 = 0;
       break L1;
      }
      $$191 = $63 ? $$090 : $26;
      $64 = (($$094) - ($25))|0;
      $$195 = $63 ? $25 : $64;
      $$090 = $$191;$$094 = $$195;
     }
     $46 = (($27) + ($24))|0;
     $47 = (($0) + ($46<<2)|0);
     $48 = HEAP32[$47>>2]|0;
     $49 = (_swapc($48,$4)|0);
     $50 = (($46) + 1)|0;
     $51 = (($0) + ($50<<2)|0);
     $52 = HEAP32[$51>>2]|0;
     $53 = (_swapc($52,$4)|0);
     $54 = ($53>>>0)<($1>>>0);
     $55 = (($1) - ($53))|0;
     $56 = ($49>>>0)<($55>>>0);
     $or$cond104 = $54 & $56;
     if ($or$cond104) {
      $57 = (($0) + ($53)|0);
      $58 = (($53) + ($49))|0;
      $59 = (($0) + ($58)|0);
      $60 = HEAP8[$59>>0]|0;
      $61 = ($60<<24>>24)==(0);
      $spec$select = $61 ? $57 : 0;
      $$4 = $spec$select;
     } else {
      $$4 = 0;
     }
    } else {
     $$4 = 0;
    }
   } else {
    $$4 = 0;
   }
  } else {
   $$4 = 0;
  }
 } while(0);
 return ($$4|0);
}
function _swapc($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0);
 $3 = (_llvm_bswap_i32(($0|0))|0);
 $spec$select = $2 ? $0 : $3;
 return ($spec$select|0);
}
function ___fwritex($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$03846 = 0, $$042 = 0, $$1 = 0, $$139 = 0, $$141 = 0, $$143 = 0, $$pre = 0, $$pre48 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0;
 var $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, $or$cond = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($2)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)==(0|0);
 if ($5) {
  $7 = (___towrite($2)|0);
  $8 = ($7|0)==(0);
  if ($8) {
   $$pre = HEAP32[$3>>2]|0;
   $12 = $$pre;
   label = 5;
  } else {
   $$1 = 0;
  }
 } else {
  $6 = $4;
  $12 = $6;
  label = 5;
 }
 L5: do {
  if ((label|0) == 5) {
   $9 = ((($2)) + 20|0);
   $10 = HEAP32[$9>>2]|0;
   $11 = (($12) - ($10))|0;
   $13 = ($11>>>0)<($1>>>0);
   $14 = $10;
   if ($13) {
    $15 = ((($2)) + 36|0);
    $16 = HEAP32[$15>>2]|0;
    $17 = (ftCall_iiii($16|0,$2,$0,$1)|0);
    $$1 = $17;
    break;
   }
   $18 = ((($2)) + 75|0);
   $19 = HEAP8[$18>>0]|0;
   $20 = ($19<<24>>24)<(0);
   $21 = ($1|0)==(0);
   $or$cond = $20 | $21;
   L10: do {
    if ($or$cond) {
     $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
    } else {
     $$03846 = $1;
     while(1) {
      $23 = (($$03846) + -1)|0;
      $24 = (($0) + ($23)|0);
      $25 = HEAP8[$24>>0]|0;
      $26 = ($25<<24>>24)==(10);
      if ($26) {
       break;
      }
      $22 = ($23|0)==(0);
      if ($22) {
       $$139 = 0;$$141 = $0;$$143 = $1;$32 = $14;
       break L10;
      } else {
       $$03846 = $23;
      }
     }
     $27 = ((($2)) + 36|0);
     $28 = HEAP32[$27>>2]|0;
     $29 = (ftCall_iiii($28|0,$2,$0,$$03846)|0);
     $30 = ($29>>>0)<($$03846>>>0);
     if ($30) {
      $$1 = $29;
      break L5;
     }
     $31 = (($0) + ($$03846)|0);
     $$042 = (($1) - ($$03846))|0;
     $$pre48 = HEAP32[$9>>2]|0;
     $$139 = $$03846;$$141 = $31;$$143 = $$042;$32 = $$pre48;
    }
   } while(0);
   (_memcpy(($32|0),($$141|0),($$143|0))|0);
   $33 = HEAP32[$9>>2]|0;
   $34 = (($33) + ($$143)|0);
   HEAP32[$9>>2] = $34;
   $35 = (($$139) + ($$143))|0;
   $$1 = $35;
  }
 } while(0);
 return ($$1|0);
}
function ___towrite($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0;
 var $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 74|0);
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (($3) + 255)|0;
 $5 = $4 | $3;
 $6 = $5&255;
 HEAP8[$1>>0] = $6;
 $7 = HEAP32[$0>>2]|0;
 $8 = $7 & 8;
 $9 = ($8|0)==(0);
 if ($9) {
  $11 = ((($0)) + 8|0);
  HEAP32[$11>>2] = 0;
  $12 = ((($0)) + 4|0);
  HEAP32[$12>>2] = 0;
  $13 = ((($0)) + 44|0);
  $14 = HEAP32[$13>>2]|0;
  $15 = ((($0)) + 28|0);
  HEAP32[$15>>2] = $14;
  $16 = ((($0)) + 20|0);
  HEAP32[$16>>2] = $14;
  $17 = $14;
  $18 = ((($0)) + 48|0);
  $19 = HEAP32[$18>>2]|0;
  $20 = (($17) + ($19)|0);
  $21 = ((($0)) + 16|0);
  HEAP32[$21>>2] = $20;
  $$0 = 0;
 } else {
  $10 = $7 | 32;
  HEAP32[$0>>2] = $10;
  $$0 = -1;
 }
 return ($$0|0);
}
function _sn_write($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$cast = 0, $10 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 16|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ((($0)) + 20|0);
 $6 = HEAP32[$5>>2]|0;
 $7 = (($4) - ($6))|0;
 $8 = ($7>>>0)>($2>>>0);
 $spec$select = $8 ? $2 : $7;
 $$cast = $6;
 (_memcpy(($$cast|0),($1|0),($spec$select|0))|0);
 $9 = HEAP32[$5>>2]|0;
 $10 = (($9) + ($spec$select)|0);
 HEAP32[$5>>2] = $10;
 return ($2|0);
}
function _scalbn($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $$0 = 0.0, $$020 = 0, $10 = 0.0, $11 = 0, $12 = 0, $13 = 0.0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0.0, $2 = 0, $20 = 0.0, $3 = 0.0, $4 = 0, $5 = 0, $6 = 0.0, $7 = 0, $8 = 0;
 var $9 = 0, $spec$select = 0, $spec$select21 = 0.0, $spec$select22 = 0, $spec$select23 = 0.0, $spec$store$select = 0, $spec$store$select1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)>(1023);
 if ($2) {
  $3 = $0 * 8.9884656743115795E+307;
  $4 = (($1) + -1023)|0;
  $5 = ($1|0)>(2046);
  $6 = $3 * 8.9884656743115795E+307;
  $7 = (($1) + -2046)|0;
  $8 = ($7|0)<(1023);
  $spec$store$select = $8 ? $7 : 1023;
  $spec$select = $5 ? $spec$store$select : $4;
  $spec$select21 = $5 ? $6 : $3;
  $$0 = $spec$select21;$$020 = $spec$select;
 } else {
  $9 = ($1|0)<(-1022);
  if ($9) {
   $10 = $0 * 2.2250738585072014E-308;
   $11 = (($1) + 1022)|0;
   $12 = ($1|0)<(-2044);
   $13 = $10 * 2.2250738585072014E-308;
   $14 = (($1) + 2044)|0;
   $15 = ($14|0)>(-1022);
   $spec$store$select1 = $15 ? $14 : -1022;
   $spec$select22 = $12 ? $spec$store$select1 : $11;
   $spec$select23 = $12 ? $13 : $10;
   $$0 = $spec$select23;$$020 = $spec$select22;
  } else {
   $$0 = $0;$$020 = $1;
  }
 }
 $16 = (($$020) + 1023)|0;
 $17 = (_bitshift64Shl(($16|0),0,52)|0);
 $18 = tempRet0;
 HEAP32[tempDoublePtr>>2] = $17;HEAP32[tempDoublePtr+4>>2] = $18;$19 = +HEAPF64[tempDoublePtr>>3];
 $20 = $$0 * $19;
 return (+$20);
}
function _strcasecmp($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$01718 = 0, $$019 = 0, $$pre$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0;
 var $25 = 0, $26 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = HEAP8[$0>>0]|0;
 $3 = ($2<<24>>24)==(0);
 L1: do {
  if ($3) {
   $$0$lcssa = $1;$21 = 0;
  } else {
   $4 = $2&255;
   $$01718 = $0;$$019 = $1;$8 = $2;$9 = $4;
   while(1) {
    $5 = HEAP8[$$019>>0]|0;
    $6 = ($5<<24>>24)==(0);
    if ($6) {
     $$0$lcssa = $$019;$21 = $8;
     break L1;
    }
    $7 = ($8<<24>>24)==($5<<24>>24);
    if (!($7)) {
     $10 = (_tolower($9)|0);
     $11 = HEAP8[$$019>>0]|0;
     $12 = $11&255;
     $13 = (_tolower($12)|0);
     $14 = ($10|0)==($13|0);
     if (!($14)) {
      break;
     }
    }
    $15 = ((($$01718)) + 1|0);
    $16 = ((($$019)) + 1|0);
    $17 = HEAP8[$15>>0]|0;
    $18 = $17&255;
    $19 = ($17<<24>>24)==(0);
    if ($19) {
     $$0$lcssa = $16;$21 = 0;
     break L1;
    } else {
     $$01718 = $15;$$019 = $16;$8 = $17;$9 = $18;
    }
   }
   $$pre$pre = HEAP8[$$01718>>0]|0;
   $$0$lcssa = $$019;$21 = $$pre$pre;
  }
 } while(0);
 $20 = $21&255;
 $22 = (_tolower($20)|0);
 $23 = HEAP8[$$0$lcssa>>0]|0;
 $24 = $23&255;
 $25 = (_tolower($24)|0);
 $26 = (($22) - ($25))|0;
 return ($26|0);
}
function _strlen($0) {
 $0 = $0|0;
 var $$0 = 0, $$014 = 0, $$015$lcssa = 0, $$01518 = 0, $$1$lcssa = 0, $$pn = 0, $$pn29 = 0, $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0;
 var $20 = 0, $21 = 0, $22 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0;
 $2 = $1 & 3;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $$015$lcssa = $0;
   label = 5;
  } else {
   $$01518 = $0;$22 = $1;
   while(1) {
    $4 = HEAP8[$$01518>>0]|0;
    $5 = ($4<<24>>24)==(0);
    if ($5) {
     $$pn = $22;
     break L1;
    }
    $6 = ((($$01518)) + 1|0);
    $7 = $6;
    $8 = $7 & 3;
    $9 = ($8|0)==(0);
    if ($9) {
     $$015$lcssa = $6;
     label = 5;
     break;
    } else {
     $$01518 = $6;$22 = $7;
    }
   }
  }
 } while(0);
 if ((label|0) == 5) {
  $$0 = $$015$lcssa;
  while(1) {
   $10 = HEAP32[$$0>>2]|0;
   $11 = (($10) + -16843009)|0;
   $12 = $10 & -2139062144;
   $13 = $12 ^ -2139062144;
   $14 = $13 & $11;
   $15 = ($14|0)==(0);
   $16 = ((($$0)) + 4|0);
   if ($15) {
    $$0 = $16;
   } else {
    break;
   }
  }
  $17 = $10&255;
  $18 = ($17<<24>>24)==(0);
  if ($18) {
   $$1$lcssa = $$0;
  } else {
   $$pn29 = $$0;
   while(1) {
    $19 = ((($$pn29)) + 1|0);
    $$pre = HEAP8[$19>>0]|0;
    $20 = ($$pre<<24>>24)==(0);
    if ($20) {
     $$1$lcssa = $19;
     break;
    } else {
     $$pn29 = $19;
    }
   }
  }
  $21 = $$1$lcssa;
  $$pn = $21;
 }
 $$014 = (($$pn) - ($1))|0;
 return ($$014|0);
}
function ___munmap($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $vararg_buffer = 0, $vararg_ptr1 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $vararg_buffer = sp;
 $2 = $0;
 HEAP32[$vararg_buffer>>2] = $2;
 $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
 HEAP32[$vararg_ptr1>>2] = $1;
 $3 = (___syscall91(91,($vararg_buffer|0))|0);
 $4 = (___syscall_ret($3)|0);
 STACKTOP = sp;return ($4|0);
}
function _strchr($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (___strchrnul($0,$1)|0);
 $3 = HEAP8[$2>>0]|0;
 $4 = $1&255;
 $5 = ($3<<24>>24)==($4<<24>>24);
 $6 = $5 ? $2 : 0;
 return ($6|0);
}
function ___strchrnul($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$029$lcssa = 0, $$02936 = 0, $$030$lcssa = 0, $$03039 = 0, $$1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0;
 var $41 = 0, $42 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond33 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1 & 255;
 $3 = ($2|0)==(0);
 L1: do {
  if ($3) {
   $4 = (_strlen($0)|0);
   $5 = (($0) + ($4)|0);
   $$0 = $5;
  } else {
   $6 = $0;
   $7 = $6 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$030$lcssa = $0;
   } else {
    $9 = $1&255;
    $$03039 = $0;
    while(1) {
     $10 = HEAP8[$$03039>>0]|0;
     $11 = ($10<<24>>24)==(0);
     $12 = ($10<<24>>24)==($9<<24>>24);
     $or$cond = $11 | $12;
     if ($or$cond) {
      $$0 = $$03039;
      break L1;
     }
     $13 = ((($$03039)) + 1|0);
     $14 = $13;
     $15 = $14 & 3;
     $16 = ($15|0)==(0);
     if ($16) {
      $$030$lcssa = $13;
      break;
     } else {
      $$03039 = $13;
     }
    }
   }
   $17 = Math_imul($2, 16843009)|0;
   $18 = HEAP32[$$030$lcssa>>2]|0;
   $19 = (($18) + -16843009)|0;
   $20 = $18 & -2139062144;
   $21 = $20 ^ -2139062144;
   $22 = $21 & $19;
   $23 = ($22|0)==(0);
   L10: do {
    if ($23) {
     $$02936 = $$030$lcssa;$25 = $18;
     while(1) {
      $24 = $25 ^ $17;
      $26 = (($24) + -16843009)|0;
      $27 = $24 & -2139062144;
      $28 = $27 ^ -2139062144;
      $29 = $28 & $26;
      $30 = ($29|0)==(0);
      if (!($30)) {
       $$029$lcssa = $$02936;
       break L10;
      }
      $31 = ((($$02936)) + 4|0);
      $32 = HEAP32[$31>>2]|0;
      $33 = (($32) + -16843009)|0;
      $34 = $32 & -2139062144;
      $35 = $34 ^ -2139062144;
      $36 = $35 & $33;
      $37 = ($36|0)==(0);
      if ($37) {
       $$02936 = $31;$25 = $32;
      } else {
       $$029$lcssa = $31;
       break;
      }
     }
    } else {
     $$029$lcssa = $$030$lcssa;
    }
   } while(0);
   $38 = $1&255;
   $$1 = $$029$lcssa;
   while(1) {
    $39 = HEAP8[$$1>>0]|0;
    $40 = ($39<<24>>24)==(0);
    $41 = ($39<<24>>24)==($38<<24>>24);
    $or$cond33 = $40 | $41;
    $42 = ((($$1)) + 1|0);
    if ($or$cond33) {
     $$0 = $$1;
     break;
    } else {
     $$1 = $42;
    }
   }
  }
 } while(0);
 return ($$0|0);
}
function _dummy() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return;
}
function ___get_locale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$093$lcssa = 0, $$093118 = 0, $$094114 = 0, $$1 = 0, $$1100111 = 0, $$195112 = 0, $$2122 = 0, $$2123 = 0, $$2124 = 0, $$4 = 0, $$neg = 0, $$pre121 = 0, $10 = 0, $100 = 0, $101 = 0, $102 = 0, $103 = 0, $11 = 0, $12 = 0;
 var $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0;
 var $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $46 = 0, $47 = 0, $48 = 0, $49 = 0;
 var $5 = 0, $50 = 0, $51 = 0, $52 = 0, $53 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $62 = 0, $63 = 0, $64 = 0, $65 = 0, $66 = 0, $67 = 0;
 var $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0, $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0;
 var $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0, $99 = 0, $or$cond = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 272|0;
 $2 = sp;
 $3 = sp + 256|0;
 $4 = HEAP8[$1>>0]|0;
 $5 = ($4<<24>>24)==(0);
 do {
  if ($5) {
   $6 = (_getenv((141065|0))|0);
   $7 = ($6|0)==(0|0);
   if (!($7)) {
    $8 = HEAP8[$6>>0]|0;
    $9 = ($8<<24>>24)==(0);
    if (!($9)) {
     $$1 = $6;
     break;
    }
   }
   $10 = (117600 + (($0*12)|0)|0);
   $11 = (_getenv(($10|0))|0);
   $12 = ($11|0)==(0|0);
   if (!($12)) {
    $13 = HEAP8[$11>>0]|0;
    $14 = ($13<<24>>24)==(0);
    if (!($14)) {
     $$1 = $11;
     break;
    }
   }
   $15 = (_getenv((141072|0))|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    $17 = HEAP8[$15>>0]|0;
    $18 = ($17<<24>>24)==(0);
    if (!($18)) {
     $$1 = $15;
     break;
    }
   }
   $$1 = 141077;
  } else {
   $$1 = $1;
  }
 } while(0);
 $$093118 = 0;
 L13: while(1) {
  $19 = (($$1) + ($$093118)|0);
  $20 = HEAP8[$19>>0]|0;
  switch ($20<<24>>24) {
  case 47: case 0:  {
   $$093$lcssa = $$093118;
   break L13;
   break;
  }
  default: {
  }
  }
  $21 = (($$093118) + 1)|0;
  $22 = ($21>>>0)<(15);
  if ($22) {
   $$093118 = $21;
  } else {
   $$093$lcssa = 15;
   break;
  }
 }
 $23 = HEAP8[$$1>>0]|0;
 $24 = ($23<<24>>24)==(46);
 if ($24) {
  $$2122 = 141077;
  label = 15;
 } else {
  $25 = (($$1) + ($$093$lcssa)|0);
  $26 = HEAP8[$25>>0]|0;
  $27 = ($26<<24>>24)==(0);
  if ($27) {
   $28 = ($23<<24>>24)==(67);
   if ($28) {
    $$2122 = $$1;
    label = 15;
   } else {
    $$2123 = $$1;
    label = 16;
   }
  } else {
   $$2122 = 141077;
   label = 15;
  }
 }
 if ((label|0) == 15) {
  $29 = ((($$2122)) + 1|0);
  $30 = HEAP8[$29>>0]|0;
  $31 = ($30<<24>>24)==(0);
  if ($31) {
   $$2124 = $$2122;
   label = 18;
  } else {
   $$2123 = $$2122;
   label = 16;
  }
 }
 L22: do {
  if ((label|0) == 16) {
   $32 = (_strcmp($$2123,141077)|0);
   $33 = ($32|0)==(0);
   if ($33) {
    $$2124 = $$2123;
    label = 18;
   } else {
    $34 = (_strcmp($$2123,141085)|0);
    $35 = ($34|0)==(0);
    if ($35) {
     $$2124 = $$2123;
     label = 18;
    } else {
     $40 = HEAP32[36185]|0;
     $41 = ($40|0)==(0|0);
     if (!($41)) {
      $$094114 = $40;
      while(1) {
       $42 = ((($$094114)) + 8|0);
       $43 = (_strcmp($$2123,$42)|0);
       $44 = ($43|0)==(0);
       if ($44) {
        $$0 = $$094114;
        break L22;
       }
       $45 = ((($$094114)) + 24|0);
       $46 = HEAP32[$45>>2]|0;
       $47 = ($46|0)==(0|0);
       if ($47) {
        break;
       } else {
        $$094114 = $46;
       }
      }
     }
     ___lock((144744|0));
     $48 = HEAP32[36185]|0;
     $49 = ($48|0)==(0|0);
     L32: do {
      if (!($49)) {
       $$195112 = $48;
       while(1) {
        $50 = ((($$195112)) + 8|0);
        $51 = (_strcmp($$2123,$50)|0);
        $52 = ($51|0)==(0);
        if ($52) {
         break;
        }
        $53 = ((($$195112)) + 24|0);
        $54 = HEAP32[$53>>2]|0;
        $55 = ($54|0)==(0|0);
        if ($55) {
         break L32;
        } else {
         $$195112 = $54;
        }
       }
       ___unlock((144744|0));
       $$0 = $$195112;
       break L22;
      }
     } while(0);
     $56 = HEAP32[(144680)>>2]|0;
     $57 = ($56|0)==(0);
     L39: do {
      if ($57) {
       $58 = (_getenv((141091|0))|0);
       $59 = ($58|0)==(0|0);
       if ($59) {
        label = 41;
       } else {
        $60 = HEAP8[$58>>0]|0;
        $61 = ($60<<24>>24)==(0);
        if ($61) {
         label = 41;
        } else {
         $62 = (254 - ($$093$lcssa))|0;
         $63 = (($$093$lcssa) + 1)|0;
         $$1100111 = $58;
         while(1) {
          $64 = (___strchrnul($$1100111,58)|0);
          $65 = $64;
          $66 = $$1100111;
          $67 = (($65) - ($66))|0;
          $68 = HEAP8[$64>>0]|0;
          $69 = ($68<<24>>24)!=(0);
          $$neg = $69 << 31 >> 31;
          $70 = (($67) + ($$neg))|0;
          $71 = ($70>>>0)<($62>>>0);
          if ($71) {
           (_memcpy(($2|0),($$1100111|0),($70|0))|0);
           $72 = (($2) + ($70)|0);
           HEAP8[$72>>0] = 47;
           $73 = ((($72)) + 1|0);
           (_memcpy(($73|0),($$2123|0),($$093$lcssa|0))|0);
           $74 = (($63) + ($70))|0;
           $75 = (($2) + ($74)|0);
           HEAP8[$75>>0] = 0;
           $76 = (___map_file(($2|0),($3|0))|0);
           $77 = ($76|0)==(0|0);
           if (!($77)) {
            break;
           }
           $$pre121 = HEAP8[$64>>0]|0;
           $87 = $$pre121;
          } else {
           $87 = $68;
          }
          $86 = ($87<<24>>24)!=(0);
          $88 = $86&1;
          $89 = (($64) + ($88)|0);
          $90 = HEAP8[$89>>0]|0;
          $91 = ($90<<24>>24)==(0);
          if ($91) {
           label = 41;
           break L39;
          } else {
           $$1100111 = $89;
          }
         }
         $78 = (_malloc(28)|0);
         $79 = ($78|0)==(0|0);
         if ($79) {
          $92 = HEAP32[$3>>2]|0;
          (___munmap($76,$92)|0);
          label = 41;
          break;
         } else {
          HEAP32[$78>>2] = $76;
          $80 = HEAP32[$3>>2]|0;
          $81 = ((($78)) + 4|0);
          HEAP32[$81>>2] = $80;
          $82 = ((($78)) + 8|0);
          (_memcpy(($82|0),($$2123|0),($$093$lcssa|0))|0);
          $83 = (($82) + ($$093$lcssa)|0);
          HEAP8[$83>>0] = 0;
          $84 = HEAP32[36185]|0;
          $85 = ((($78)) + 24|0);
          HEAP32[$85>>2] = $84;
          HEAP32[36185] = $78;
          $$4 = $78;
          break;
         }
        }
       }
      } else {
       label = 41;
      }
     } while(0);
     if ((label|0) == 41) {
      $93 = (_malloc(28)|0);
      $94 = ($93|0)==(0|0);
      if ($94) {
       $$4 = $93;
      } else {
       $95 = HEAP32[30116]|0;
       HEAP32[$93>>2] = $95;
       $96 = HEAP32[(120468)>>2]|0;
       $97 = ((($93)) + 4|0);
       HEAP32[$97>>2] = $96;
       $98 = ((($93)) + 8|0);
       (_memcpy(($98|0),($$2123|0),($$093$lcssa|0))|0);
       $99 = (($98) + ($$093$lcssa)|0);
       HEAP8[$99>>0] = 0;
       $100 = HEAP32[36185]|0;
       $101 = ((($93)) + 24|0);
       HEAP32[$101>>2] = $100;
       HEAP32[36185] = $93;
       $$4 = $93;
      }
     }
     $102 = ($$4|0)==(0|0);
     $103 = ($0|0)==(0);
     $or$cond = $103 & $102;
     $spec$select = $or$cond ? 120464 : $$4;
     ___unlock((144744|0));
     $$0 = $spec$select;
    }
   }
  }
 } while(0);
 do {
  if ((label|0) == 18) {
   $36 = ($0|0)==(0);
   if ($36) {
    $37 = ((($$2124)) + 1|0);
    $38 = HEAP8[$37>>0]|0;
    $39 = ($38<<24>>24)==(46);
    if ($39) {
     $$0 = 120464;
     break;
    }
   }
   $$0 = 0;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$04956 = 0, $$05055 = 0, $$05253 = 0, $$151 = 0, $$154 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0;
 var $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $exitcond = 0, $exitcond57 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 $3 = ($0>>>0)>(6);
 do {
  if ($3) {
   $$0 = 0;
  } else {
   ___lock((144752|0));
   $4 = ($0|0)==(6);
   if (!($4)) {
    $27 = (_setlocale_one_unlocked($0,$1)|0);
    ___unlock((144752|0));
    $$0 = $27;
    break;
   }
   $5 = ($1|0)==(0|0);
   if (!($5)) {
    ;HEAP32[$2>>2]=HEAP32[117680>>2]|0;HEAP32[$2+4>>2]=HEAP32[117680+4>>2]|0;HEAP32[$2+8>>2]=HEAP32[117680+8>>2]|0;HEAP32[$2+12>>2]=HEAP32[117680+12>>2]|0;
    $$04956 = 0;$$05055 = $1;
    while(1) {
     $6 = (___strchrnul($$05055,59)|0);
     $7 = $6;
     $8 = $$05055;
     $9 = (($7) - ($8))|0;
     $10 = ($9|0)<(16);
     if ($10) {
      (_memcpy(($2|0),($$05055|0),($9|0))|0);
      $11 = (($2) + ($9)|0);
      HEAP8[$11>>0] = 0;
      $12 = HEAP8[$6>>0]|0;
      $13 = ($12<<24>>24)==(0);
      $14 = ((($6)) + 1|0);
      $spec$select = $13 ? $$05055 : $14;
      $$151 = $spec$select;
     } else {
      $$151 = $$05055;
     }
     (_setlocale_one_unlocked($$04956,$2)|0);
     $15 = (($$04956) + 1)|0;
     $exitcond57 = ($15|0)==(6);
     if ($exitcond57) {
      break;
     } else {
      $$04956 = $15;$$05055 = $$151;
     }
    }
   }
   $$05253 = 143552;$$154 = 0;
   while(1) {
    $16 = (144712 + ($$154<<2)|0);
    $17 = HEAP32[$16>>2]|0;
    $18 = ($17|0)==(0|0);
    $19 = ((($17)) + 8|0);
    $20 = $18 ? 141104 : $19;
    $21 = (_strlen($20)|0);
    (_memcpy(($$05253|0),($20|0),($21|0))|0);
    $22 = (($$05253) + ($21)|0);
    HEAP8[$22>>0] = 59;
    $23 = (($21) + 1)|0;
    $24 = (($$05253) + ($23)|0);
    $25 = (($$154) + 1)|0;
    $exitcond = ($25|0)==(6);
    if ($exitcond) {
     break;
    } else {
     $$05253 = $24;$$154 = $25;
    }
   }
   $26 = (($$05253) + ($21)|0);
   HEAP8[$26>>0] = 0;
   ___unlock((144752|0));
   $$0 = 143552;
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _setlocale_one_unlocked($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = ($1|0)==(0|0);
 if ($2) {
  $5 = (144712 + ($0<<2)|0);
  $6 = HEAP32[$5>>2]|0;
  $$0 = $6;
 } else {
  $3 = (___get_locale($0,$1)|0);
  $4 = (144712 + ($0<<2)|0);
  HEAP32[$4>>2] = $3;
  $$0 = $3;
 }
 $7 = ($$0|0)==(0|0);
 $8 = ((($$0)) + 8|0);
 $9 = $7 ? 141104 : $8;
 return ($9|0);
}
function _strcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpcpy($0,$1)|0);
 return ($0|0);
}
function ___stpcpy($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0$lcssa = 0, $$025$lcssa = 0, $$02536 = 0, $$026$lcssa = 0, $$02642 = 0, $$027$lcssa = 0, $$02741 = 0, $$030 = 0, $$037 = 0, $$1 = 0, $$128 = 0, $$22934 = 0, $$235 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0;
 var $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0;
 var $35 = 0, $36 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = $1;
 $3 = $0;
 $4 = $2 ^ $3;
 $5 = $4 & 3;
 $6 = ($5|0)==(0);
 L1: do {
  if ($6) {
   $7 = $2 & 3;
   $8 = ($7|0)==(0);
   if ($8) {
    $$026$lcssa = $1;$$027$lcssa = $0;
   } else {
    $$02642 = $1;$$02741 = $0;
    while(1) {
     $9 = HEAP8[$$02642>>0]|0;
     HEAP8[$$02741>>0] = $9;
     $10 = ($9<<24>>24)==(0);
     if ($10) {
      $$030 = $$02741;
      break L1;
     }
     $11 = ((($$02642)) + 1|0);
     $12 = ((($$02741)) + 1|0);
     $13 = $11;
     $14 = $13 & 3;
     $15 = ($14|0)==(0);
     if ($15) {
      $$026$lcssa = $11;$$027$lcssa = $12;
      break;
     } else {
      $$02642 = $11;$$02741 = $12;
     }
    }
   }
   $16 = HEAP32[$$026$lcssa>>2]|0;
   $17 = (($16) + -16843009)|0;
   $18 = $16 & -2139062144;
   $19 = $18 ^ -2139062144;
   $20 = $19 & $17;
   $21 = ($20|0)==(0);
   if ($21) {
    $$02536 = $$027$lcssa;$$037 = $$026$lcssa;$24 = $16;
    while(1) {
     $22 = ((($$037)) + 4|0);
     $23 = ((($$02536)) + 4|0);
     HEAP32[$$02536>>2] = $24;
     $25 = HEAP32[$22>>2]|0;
     $26 = (($25) + -16843009)|0;
     $27 = $25 & -2139062144;
     $28 = $27 ^ -2139062144;
     $29 = $28 & $26;
     $30 = ($29|0)==(0);
     if ($30) {
      $$02536 = $23;$$037 = $22;$24 = $25;
     } else {
      $$0$lcssa = $22;$$025$lcssa = $23;
      break;
     }
    }
   } else {
    $$0$lcssa = $$026$lcssa;$$025$lcssa = $$027$lcssa;
   }
   $$1 = $$0$lcssa;$$128 = $$025$lcssa;
   label = 10;
  } else {
   $$1 = $1;$$128 = $0;
   label = 10;
  }
 } while(0);
 if ((label|0) == 10) {
  $31 = HEAP8[$$1>>0]|0;
  HEAP8[$$128>>0] = $31;
  $32 = ($31<<24>>24)==(0);
  if ($32) {
   $$030 = $$128;
  } else {
   $$22934 = $$128;$$235 = $$1;
   while(1) {
    $33 = ((($$235)) + 1|0);
    $34 = ((($$22934)) + 1|0);
    $35 = HEAP8[$33>>0]|0;
    HEAP8[$34>>0] = $35;
    $36 = ($35<<24>>24)==(0);
    if ($36) {
     $$030 = $34;
     break;
    } else {
     $$22934 = $34;$$235 = $33;
    }
   }
  }
 }
 return ($$030|0);
}
function _ldexp($0,$1) {
 $0 = +$0;
 $1 = $1|0;
 var $2 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (+_scalbn($0,$1));
 return (+$2);
}
function ___sindf($0) {
 $0 = +$0;
 var $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = 0.0, $13 = Math_fround(0), $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 * $0;
 $2 = $1 * $1;
 $3 = $1 * 2.7183114939898219E-6;
 $4 = $3 + -1.9839334836096632E-4;
 $5 = $1 * $0;
 $6 = $1 * 0.0083333293858894632;
 $7 = $6 + -0.16666666641626524;
 $8 = $5 * $7;
 $9 = $8 + $0;
 $10 = $5 * $2;
 $11 = $10 * $4;
 $12 = $11 + $9;
 $13 = Math_fround($12);
 return (Math_fround($13));
}
function ___cosdf($0) {
 $0 = +$0;
 var $1 = 0.0, $10 = 0.0, $11 = 0.0, $12 = Math_fround(0), $2 = 0.0, $3 = 0.0, $4 = 0.0, $5 = 0.0, $6 = 0.0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = $0 * $0;
 $2 = $1 * $1;
 $3 = $1 * 2.4390448796277409E-5;
 $4 = $3 + -0.0013886763774609929;
 $5 = $1 * 0.499999997251031;
 $6 = 1.0 - $5;
 $7 = $2 * 0.041666623323739063;
 $8 = $6 + $7;
 $9 = $1 * $2;
 $10 = $9 * $4;
 $11 = $8 + $10;
 $12 = Math_fround($11);
 return (Math_fround($12));
}
function ___rem_pio2_large($0,$1,$2,$3,$4) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 $4 = $4|0;
 var $$0$lcssa = 0.0, $$0248$lcssa = 0.0, $$0248336 = 0.0, $$0250 = 0, $$0250278 = 0, $$0250279 = 0, $$0251 = 0, $$0251$in = 0, $$0253 = 0, $$0256 = 0, $$0258373 = 0, $$0263372 = 0, $$0271 = 0, $$0271277 = 0, $$0273$lcssa = 0, $$0273341 = 0, $$0363 = 0.0, $$1$lcssa = 0.0, $$10291 = 0, $$11313 = 0;
 var $$12309 = 0, $$1249 = 0.0, $$1252 = 0, $$1252$ph = 0, $$1254 = 0, $$1254$in = 0, $$1257318 = 0, $$1259362 = 0, $$1264368 = 0, $$1272 = 0, $$1274 = 0, $$1274$ph = 0, $$13303 = 0, $$1354 = 0.0, $$2255 = 0, $$2260335 = 0, $$2265334 = 0, $$2330 = 0.0, $$3261347 = 0, $$3266342 = 0;
 var $$3319 = 0.0, $$4$lcssa = 0.0, $$4262353 = 0, $$4267348 = 0, $$4267348$in = 0, $$4290 = 0.0, $$5$lcssa = 0.0, $$5268361 = 0, $$5268361$in = 0, $$5298 = 0.0, $$6$lcssa = 0.0, $$6269329 = 0, $$6292 = 0.0, $$7$lcssa = 0.0, $$7270324 = 0, $$7304 = 0.0, $$8289 = 0, $$9297 = 0, $$neg = 0, $$neg281 = 0;
 var $$phi$trans$insert = 0, $$phi$trans$insert395 = 0, $$pre = 0.0, $$pre396 = 0.0, $$sink = 0, $$sink425 = 0, $$sink427 = 0, $10 = 0, $100 = 0.0, $101 = 0, $102 = 0.0, $103 = 0.0, $104 = 0, $105 = 0, $106 = 0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0;
 var $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0, $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0, $123 = 0, $124 = 0.0, $125 = 0, $126 = 0, $127 = 0.0, $128 = 0.0, $129 = 0.0;
 var $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0, $136 = 0, $137 = 0.0, $138 = 0, $139 = 0.0, $14 = 0, $140 = 0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0, $145 = 0, $146 = 0, $147 = 0;
 var $148 = 0, $149 = 0, $15 = 0, $150 = 0.0, $151 = 0, $152 = 0, $153 = 0, $154 = 0.0, $155 = 0.0, $156 = 0, $157 = 0.0, $158 = 0, $159 = 0, $16 = 0, $160 = 0, $161 = 0, $162 = 0.0, $163 = 0, $164 = 0, $165 = 0.0;
 var $166 = 0.0, $167 = 0.0, $168 = 0, $169 = 0, $17 = 0, $170 = 0, $171 = 0, $172 = 0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0, $178 = 0, $179 = 0, $18 = 0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0;
 var $184 = 0.0, $185 = 0, $186 = 0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0, $190 = 0.0, $191 = 0.0, $192 = 0, $193 = 0, $194 = 0.0, $195 = 0.0, $196 = 0, $197 = 0.0, $198 = 0.0, $199 = 0, $20 = 0, $200 = 0, $201 = 0;
 var $202 = 0, $203 = 0.0, $204 = 0, $205 = 0.0, $206 = 0.0, $207 = 0.0, $208 = 0.0, $209 = 0, $21 = 0, $210 = 0, $211 = 0, $212 = 0, $213 = 0.0, $214 = 0, $215 = 0.0, $216 = 0.0, $217 = 0.0, $218 = 0.0, $219 = 0, $22 = 0;
 var $220 = 0, $221 = 0.0, $222 = 0.0, $223 = 0, $224 = 0, $225 = 0, $226 = 0.0, $227 = 0, $228 = 0.0, $229 = 0, $23 = 0.0, $230 = 0, $231 = 0.0, $232 = 0, $233 = 0.0, $234 = 0.0, $235 = 0, $236 = 0.0, $237 = 0, $238 = 0;
 var $24 = 0, $25 = 0.0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0.0, $32 = 0, $33 = 0, $34 = 0.0, $35 = 0.0, $36 = 0.0, $37 = 0, $38 = 0, $39 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0;
 var $44 = 0, $45 = 0, $46 = 0, $47 = 0.0, $48 = 0, $49 = 0.0, $5 = 0, $50 = 0, $51 = 0.0, $52 = 0.0, $53 = 0.0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0.0, $59 = 0.0, $6 = 0, $60 = 0, $61 = 0;
 var $62 = 0.0, $63 = 0.0, $64 = 0.0, $65 = 0.0, $66 = 0.0, $67 = 0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0, $75 = 0, $76 = 0, $77 = 0, $78 = 0, $79 = 0, $8 = 0;
 var $80 = 0, $81 = 0, $82 = 0, $83 = 0, $84 = 0, $85 = 0, $86 = 0, $87 = 0, $88 = 0, $89 = 0, $9 = 0, $90 = 0, $91 = 0, $92 = 0, $93 = 0, $94 = 0, $95 = 0, $96 = 0, $97 = 0, $98 = 0;
 var $99 = 0, $exitcond = 0, $exitcond391 = 0, $exitcond392 = 0, $exitcond393 = 0, $exitcond394 = 0, $or$cond = 0, $spec$store$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 560|0;
 $5 = sp + 480|0;
 $6 = sp + 320|0;
 $7 = sp + 160|0;
 $8 = sp;
 $9 = (117696 + ($4<<2)|0);
 $10 = HEAP32[$9>>2]|0;
 $11 = (($3) + -1)|0;
 $12 = (($2) + -3)|0;
 $13 = (($12|0) / 24)&-1;
 $14 = ($13|0)>(0);
 $spec$store$select = $14 ? $13 : 0;
 $$neg = Math_imul($spec$store$select, -24)|0;
 $$neg281 = (($2) + -24)|0;
 $15 = (($$neg281) + ($$neg))|0;
 $16 = (($10) + ($11))|0;
 $17 = ($16|0)<(0);
 if (!($17)) {
  $18 = (($spec$store$select) - ($11))|0;
  $19 = (($10) + ($3))|0;
  $$0258373 = $18;$$0263372 = 0;
  while(1) {
   $20 = ($$0258373|0)<(0);
   if ($20) {
    $25 = 0.0;
   } else {
    $21 = (117712 + ($$0258373<<2)|0);
    $22 = HEAP32[$21>>2]|0;
    $23 = (+($22|0));
    $25 = $23;
   }
   $24 = (($6) + ($$0263372<<3)|0);
   HEAPF64[$24>>3] = $25;
   $26 = (($$0263372) + 1)|0;
   $27 = (($$0258373) + 1)|0;
   $exitcond394 = ($26|0)==($19|0);
   if ($exitcond394) {
    break;
   } else {
    $$0258373 = $27;$$0263372 = $26;
   }
  }
 }
 $28 = ($3|0)>(0);
 $$1264368 = 0;
 while(1) {
  if ($28) {
   $29 = (($$1264368) + ($11))|0;
   $$0363 = 0.0;$$1259362 = 0;
   while(1) {
    $30 = (($0) + ($$1259362<<3)|0);
    $31 = +HEAPF64[$30>>3];
    $32 = (($29) - ($$1259362))|0;
    $33 = (($6) + ($32<<3)|0);
    $34 = +HEAPF64[$33>>3];
    $35 = $31 * $34;
    $36 = $$0363 + $35;
    $37 = (($$1259362) + 1)|0;
    $exitcond393 = ($37|0)==($3|0);
    if ($exitcond393) {
     $$0$lcssa = $36;
     break;
    } else {
     $$0363 = $36;$$1259362 = $37;
    }
   }
  } else {
   $$0$lcssa = 0.0;
  }
  $38 = (($8) + ($$1264368<<3)|0);
  HEAPF64[$38>>3] = $$0$lcssa;
  $39 = (($$1264368) + 1)|0;
  $40 = ($$1264368|0)<($10|0);
  if ($40) {
   $$1264368 = $39;
  } else {
   break;
  }
 }
 $41 = ($15|0)>(0);
 $42 = (24 - ($15))|0;
 $43 = (23 - ($15))|0;
 $44 = ($15|0)==(0);
 $45 = ($3|0)>(0);
 $$0253 = $10;
 while(1) {
  $46 = (($8) + ($$0253<<3)|0);
  $47 = +HEAPF64[$46>>3];
  $48 = ($$0253|0)>(0);
  if ($48) {
   $$0248336 = $47;$$2260335 = $$0253;$$2265334 = 0;
   while(1) {
    $49 = $$0248336 * 5.9604644775390625E-8;
    $50 = (~~(($49)));
    $51 = (+($50|0));
    $52 = $51 * 16777216.0;
    $53 = $$0248336 - $52;
    $54 = (~~(($53)));
    $55 = (($5) + ($$2265334<<2)|0);
    HEAP32[$55>>2] = $54;
    $56 = (($$2260335) + -1)|0;
    $57 = (($8) + ($56<<3)|0);
    $58 = +HEAPF64[$57>>3];
    $59 = $58 + $51;
    $60 = (($$2265334) + 1)|0;
    $61 = ($$2260335|0)>(1);
    if ($61) {
     $$0248336 = $59;$$2260335 = $56;$$2265334 = $60;
    } else {
     $$0248$lcssa = $59;
     break;
    }
   }
  } else {
   $$0248$lcssa = $47;
  }
  $62 = (+_scalbn($$0248$lcssa,$15));
  $63 = $62 * 0.125;
  $64 = (+Math_floor((+$63)));
  $65 = $64 * 8.0;
  $66 = $62 - $65;
  $67 = (~~(($66)));
  $68 = (+($67|0));
  $69 = $66 - $68;
  do {
   if ($41) {
    $70 = (($$0253) + -1)|0;
    $71 = (($5) + ($70<<2)|0);
    $72 = HEAP32[$71>>2]|0;
    $73 = $72 >> $42;
    $74 = (($73) + ($67))|0;
    $75 = $73 << $42;
    $76 = (($72) - ($75))|0;
    HEAP32[$71>>2] = $76;
    $77 = $76 >> $43;
    $$0250 = $77;$$0271 = $74;
    label = 21;
   } else {
    if ($44) {
     $78 = (($$0253) + -1)|0;
     $79 = (($5) + ($78<<2)|0);
     $80 = HEAP32[$79>>2]|0;
     $81 = $80 >> 23;
     $$0250 = $81;$$0271 = $67;
     label = 21;
     break;
    } else {
     $82 = !($69 >= 0.5);
     if ($82) {
      $$0250279 = 0;$$1249 = $69;$$1272 = $67;
      break;
     } else {
      $$0250278 = 2;$$0271277 = $67;
      label = 22;
      break;
     }
    }
   }
  } while(0);
  if ((label|0) == 21) {
   label = 0;
   $83 = ($$0250|0)>(0);
   if ($83) {
    $$0250278 = $$0250;$$0271277 = $$0271;
    label = 22;
   } else {
    $$0250279 = $$0250;$$1249 = $69;$$1272 = $$0271;
   }
  }
  if ((label|0) == 22) {
   label = 0;
   $84 = (($$0271277) + 1)|0;
   if ($48) {
    $$0273341 = 0;$$3266342 = 0;
    while(1) {
     $85 = (($5) + ($$3266342<<2)|0);
     $86 = HEAP32[$85>>2]|0;
     $87 = ($$0273341|0)==(0);
     if ($87) {
      $88 = ($86|0)==(0);
      if ($88) {
       $$1274 = 0;
      } else {
       $$1274$ph = 1;$$sink425 = 16777216;
       label = 26;
      }
     } else {
      $$1274$ph = $$0273341;$$sink425 = 16777215;
      label = 26;
     }
     if ((label|0) == 26) {
      label = 0;
      $89 = (($$sink425) - ($86))|0;
      HEAP32[$85>>2] = $89;
      $$1274 = $$1274$ph;
     }
     $90 = (($$3266342) + 1)|0;
     $exitcond391 = ($90|0)==($$0253|0);
     if ($exitcond391) {
      $$0273$lcssa = $$1274;
      break;
     } else {
      $$0273341 = $$1274;$$3266342 = $90;
     }
    }
   } else {
    $$0273$lcssa = 0;
   }
   L44: do {
    if ($41) {
     switch ($15|0) {
     case 1:  {
      $91 = (($$0253) + -1)|0;
      $92 = (($5) + ($91<<2)|0);
      $93 = HEAP32[$92>>2]|0;
      $94 = $93 & 8388607;
      HEAP32[$92>>2] = $94;
      break L44;
      break;
     }
     case 2:  {
      $95 = (($$0253) + -1)|0;
      $96 = (($5) + ($95<<2)|0);
      $97 = HEAP32[$96>>2]|0;
      $98 = $97 & 4194303;
      HEAP32[$96>>2] = $98;
      break L44;
      break;
     }
     default: {
      break L44;
     }
     }
    }
   } while(0);
   $99 = ($$0250278|0)==(2);
   if ($99) {
    $100 = 1.0 - $69;
    $101 = ($$0273$lcssa|0)==(0);
    if ($101) {
     $$0250279 = 2;$$1249 = $100;$$1272 = $84;
    } else {
     $102 = (+_scalbn(1.0,$15));
     $103 = $100 - $102;
     $$0250279 = 2;$$1249 = $103;$$1272 = $84;
    }
   } else {
    $$0250279 = $$0250278;$$1249 = $69;$$1272 = $84;
   }
  }
  $104 = $$1249 == 0.0;
  if (!($104)) {
   label = 49;
   break;
  }
  $105 = ($$0253|0)>($10|0);
  if ($105) {
   $$3261347 = 0;$$4267348$in = $$0253;
   while(1) {
    $$4267348 = (($$4267348$in) + -1)|0;
    $106 = (($5) + ($$4267348<<2)|0);
    $107 = HEAP32[$106>>2]|0;
    $108 = $107 | $$3261347;
    $109 = ($$4267348|0)>($10|0);
    if ($109) {
     $$3261347 = $108;$$4267348$in = $$4267348;
    } else {
     break;
    }
   }
   $110 = ($108|0)==(0);
   if (!($110)) {
    label = 41;
    break;
   }
  }
  $$0256 = 1;
  while(1) {
   $111 = (($10) - ($$0256))|0;
   $112 = (($5) + ($111<<2)|0);
   $113 = HEAP32[$112>>2]|0;
   $114 = ($113|0)==(0);
   $115 = (($$0256) + 1)|0;
   if ($114) {
    $$0256 = $115;
   } else {
    break;
   }
  }
  $116 = (($$0256) + ($$0253))|0;
  $$5268361$in = $$0253;
  while(1) {
   $$5268361 = (($$5268361$in) + 1)|0;
   $117 = (($$5268361) + ($spec$store$select))|0;
   $118 = (117712 + ($117<<2)|0);
   $119 = HEAP32[$118>>2]|0;
   $120 = (+($119|0));
   $121 = (($$5268361$in) + ($3))|0;
   $122 = (($6) + ($121<<3)|0);
   HEAPF64[$122>>3] = $120;
   if ($45) {
    $$1354 = 0.0;$$4262353 = 0;
    while(1) {
     $123 = (($0) + ($$4262353<<3)|0);
     $124 = +HEAPF64[$123>>3];
     $125 = (($121) - ($$4262353))|0;
     $126 = (($6) + ($125<<3)|0);
     $127 = +HEAPF64[$126>>3];
     $128 = $124 * $127;
     $129 = $$1354 + $128;
     $130 = (($$4262353) + 1)|0;
     $exitcond392 = ($130|0)==($3|0);
     if ($exitcond392) {
      $$1$lcssa = $129;
      break;
     } else {
      $$1354 = $129;$$4262353 = $130;
     }
    }
   } else {
    $$1$lcssa = 0.0;
   }
   $131 = (($8) + ($$5268361<<3)|0);
   HEAPF64[$131>>3] = $$1$lcssa;
   $132 = ($$5268361|0)<($116|0);
   if ($132) {
    $$5268361$in = $$5268361;
   } else {
    break;
   }
  }
  $$0253 = $116;
 }
 if ((label|0) == 41) {
  $$0251$in = $15;$$1254$in = $$0253;
  while(1) {
   $$0251 = (($$0251$in) + -24)|0;
   $$1254 = (($$1254$in) + -1)|0;
   $133 = (($5) + ($$1254<<2)|0);
   $134 = HEAP32[$133>>2]|0;
   $135 = ($134|0)==(0);
   if ($135) {
    $$0251$in = $$0251;$$1254$in = $$1254;
   } else {
    $$1252 = $$0251;$$2255 = $$1254;
    break;
   }
  }
 }
 else if ((label|0) == 49) {
  $136 = (0 - ($15))|0;
  $137 = (+_scalbn($$1249,$136));
  $138 = !($137 >= 16777216.0);
  if ($138) {
   $148 = (~~(($137)));
   $$1252$ph = $15;$$sink = $148;$$sink427 = $$0253;
  } else {
   $139 = $137 * 5.9604644775390625E-8;
   $140 = (~~(($139)));
   $141 = (+($140|0));
   $142 = $141 * 16777216.0;
   $143 = $137 - $142;
   $144 = (~~(($143)));
   $145 = (($5) + ($$0253<<2)|0);
   HEAP32[$145>>2] = $144;
   $146 = (($$0253) + 1)|0;
   $147 = (($$neg) + ($2))|0;
   $$1252$ph = $147;$$sink = $140;$$sink427 = $146;
  }
  $149 = (($5) + ($$sink427<<2)|0);
  HEAP32[$149>>2] = $$sink;
  $$1252 = $$1252$ph;$$2255 = $$sink427;
 }
 $150 = (+_scalbn(1.0,$$1252));
 $151 = ($$2255|0)>(-1);
 if ($151) {
  $$2330 = $150;$$6269329 = $$2255;
  while(1) {
   $152 = (($5) + ($$6269329<<2)|0);
   $153 = HEAP32[$152>>2]|0;
   $154 = (+($153|0));
   $155 = $$2330 * $154;
   $156 = (($8) + ($$6269329<<3)|0);
   HEAPF64[$156>>3] = $155;
   $157 = $$2330 * 5.9604644775390625E-8;
   $158 = (($$6269329) + -1)|0;
   $159 = ($$6269329|0)>(0);
   if ($159) {
    $$2330 = $157;$$6269329 = $158;
   } else {
    break;
   }
  }
  if ($151) {
   $$7270324 = $$2255;
   while(1) {
    $160 = (($$2255) - ($$7270324))|0;
    $$1257318 = 0;$$3319 = 0.0;
    while(1) {
     $161 = (117984 + ($$1257318<<3)|0);
     $162 = +HEAPF64[$161>>3];
     $163 = (($$1257318) + ($$7270324))|0;
     $164 = (($8) + ($163<<3)|0);
     $165 = +HEAPF64[$164>>3];
     $166 = $162 * $165;
     $167 = $$3319 + $166;
     $168 = (($$1257318) + 1)|0;
     $169 = ($$1257318|0)>=($10|0);
     $170 = ($$1257318>>>0)>=($160>>>0);
     $or$cond = $169 | $170;
     if ($or$cond) {
      break;
     } else {
      $$1257318 = $168;$$3319 = $167;
     }
    }
    $171 = (($7) + ($160<<3)|0);
    HEAPF64[$171>>3] = $167;
    $172 = (($$7270324) + -1)|0;
    $173 = ($$7270324|0)>(0);
    if ($173) {
     $$7270324 = $172;
    } else {
     break;
    }
   }
  }
 }
 L93: do {
  switch ($4|0) {
  case 0:  {
   if ($151) {
    $$4290 = 0.0;$$8289 = $$2255;
    while(1) {
     $174 = (($7) + ($$8289<<3)|0);
     $175 = +HEAPF64[$174>>3];
     $176 = $$4290 + $175;
     $177 = (($$8289) + -1)|0;
     $178 = ($$8289|0)>(0);
     if ($178) {
      $$4290 = $176;$$8289 = $177;
     } else {
      $$4$lcssa = $176;
      break;
     }
    }
   } else {
    $$4$lcssa = 0.0;
   }
   $179 = ($$0250279|0)==(0);
   $180 = - $$4$lcssa;
   $181 = $179 ? $$4$lcssa : $180;
   HEAPF64[$1>>3] = $181;
   break;
  }
  case 2: case 1:  {
   if ($151) {
    $$5298 = 0.0;$$9297 = $$2255;
    while(1) {
     $182 = (($7) + ($$9297<<3)|0);
     $183 = +HEAPF64[$182>>3];
     $184 = $$5298 + $183;
     $185 = (($$9297) + -1)|0;
     $186 = ($$9297|0)>(0);
     if ($186) {
      $$5298 = $184;$$9297 = $185;
     } else {
      $$5$lcssa = $184;
      break;
     }
    }
   } else {
    $$5$lcssa = 0.0;
   }
   $187 = ($$0250279|0)==(0);
   $188 = - $$5$lcssa;
   $189 = $187 ? $$5$lcssa : $188;
   HEAPF64[$1>>3] = $189;
   $190 = +HEAPF64[$7>>3];
   $191 = $190 - $$5$lcssa;
   $192 = ($$2255|0)<(1);
   if ($192) {
    $$6$lcssa = $191;
   } else {
    $$10291 = 1;$$6292 = $191;
    while(1) {
     $193 = (($7) + ($$10291<<3)|0);
     $194 = +HEAPF64[$193>>3];
     $195 = $$6292 + $194;
     $196 = (($$10291) + 1)|0;
     $exitcond = ($$10291|0)==($$2255|0);
     if ($exitcond) {
      $$6$lcssa = $195;
      break;
     } else {
      $$10291 = $196;$$6292 = $195;
     }
    }
   }
   $197 = - $$6$lcssa;
   $198 = $187 ? $$6$lcssa : $197;
   $199 = ((($1)) + 8|0);
   HEAPF64[$199>>3] = $198;
   break;
  }
  case 3:  {
   $200 = ($$2255|0)>(0);
   if ($200) {
    $$phi$trans$insert = (($7) + ($$2255<<3)|0);
    $$pre = +HEAPF64[$$phi$trans$insert>>3];
    $$11313 = $$2255;$206 = $$pre;
    while(1) {
     $201 = (($$11313) + -1)|0;
     $202 = (($7) + ($201<<3)|0);
     $203 = +HEAPF64[$202>>3];
     $204 = (($7) + ($$11313<<3)|0);
     $205 = $203 + $206;
     $207 = $203 - $205;
     $208 = $206 + $207;
     HEAPF64[$204>>3] = $208;
     HEAPF64[$202>>3] = $205;
     $209 = ($$11313|0)>(1);
     if ($209) {
      $$11313 = $201;$206 = $205;
     } else {
      break;
     }
    }
    $210 = ($$2255|0)>(1);
    if ($210) {
     $$phi$trans$insert395 = (($7) + ($$2255<<3)|0);
     $$pre396 = +HEAPF64[$$phi$trans$insert395>>3];
     $$12309 = $$2255;$216 = $$pre396;
     while(1) {
      $211 = (($$12309) + -1)|0;
      $212 = (($7) + ($211<<3)|0);
      $213 = +HEAPF64[$212>>3];
      $214 = (($7) + ($$12309<<3)|0);
      $215 = $213 + $216;
      $217 = $213 - $215;
      $218 = $216 + $217;
      HEAPF64[$214>>3] = $218;
      HEAPF64[$212>>3] = $215;
      $219 = ($$12309|0)>(2);
      if ($219) {
       $$12309 = $211;$216 = $215;
      } else {
       break;
      }
     }
     if ($210) {
      $$13303 = $$2255;$$7304 = 0.0;
      while(1) {
       $220 = (($7) + ($$13303<<3)|0);
       $221 = +HEAPF64[$220>>3];
       $222 = $$7304 + $221;
       $223 = (($$13303) + -1)|0;
       $224 = ($$13303|0)>(2);
       if ($224) {
        $$13303 = $223;$$7304 = $222;
       } else {
        $$7$lcssa = $222;
        break;
       }
      }
     } else {
      $$7$lcssa = 0.0;
     }
    } else {
     $$7$lcssa = 0.0;
    }
   } else {
    $$7$lcssa = 0.0;
   }
   $225 = ($$0250279|0)==(0);
   $226 = +HEAPF64[$7>>3];
   if ($225) {
    HEAPF64[$1>>3] = $226;
    $227 = ((($7)) + 8|0);
    $228 = +HEAPF64[$227>>3];
    $229 = ((($1)) + 8|0);
    HEAPF64[$229>>3] = $228;
    $230 = ((($1)) + 16|0);
    HEAPF64[$230>>3] = $$7$lcssa;
    break L93;
   } else {
    $231 = - $226;
    HEAPF64[$1>>3] = $231;
    $232 = ((($7)) + 8|0);
    $233 = +HEAPF64[$232>>3];
    $234 = - $233;
    $235 = ((($1)) + 8|0);
    HEAPF64[$235>>3] = $234;
    $236 = - $$7$lcssa;
    $237 = ((($1)) + 16|0);
    HEAPF64[$237>>3] = $236;
    break L93;
   }
   break;
  }
  default: {
  }
  }
 } while(0);
 $238 = $$1272 & 7;
 STACKTOP = sp;return ($238|0);
}
function ___rem_pio2f($0,$1) {
 $0 = Math_fround($0);
 $1 = $1|0;
 var $$0 = 0, $10 = 0.0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = 0.0, $15 = 0.0, $16 = 0, $17 = Math_fround(0), $18 = 0.0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = Math_fround(0), $24 = 0.0, $25 = 0, $26 = 0, $27 = 0.0;
 var $28 = 0.0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0.0, $8 = 0.0, $9 = 0.0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp + 8|0;
 $3 = sp;
 $4 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $5 = $4 & 2147483647;
 $6 = ($5>>>0)<(1305022427);
 do {
  if ($6) {
   $7 = +$0;
   $8 = $7 * 0.63661977236758138;
   $9 = $8 + 6755399441055744.0;
   $10 = $9 + -6755399441055744.0;
   $11 = (~~(($10)));
   $12 = $10 * 1.5707963109016418;
   $13 = $7 - $12;
   $14 = $10 * 1.5893254773528196E-8;
   $15 = $13 - $14;
   HEAPF64[$1>>3] = $15;
   $$0 = $11;
  } else {
   $16 = ($5>>>0)>(2139095039);
   if ($16) {
    $17 = Math_fround($0 - $0);
    $18 = +$17;
    HEAPF64[$1>>3] = $18;
    $$0 = 0;
    break;
   }
   $19 = $5 >>> 23;
   $20 = (($19) + -150)|0;
   $21 = $20 << 23;
   $22 = (($5) - ($21))|0;
   $23 = (HEAP32[tempDoublePtr>>2]=$22,Math_fround(HEAPF32[tempDoublePtr>>2]));
   $24 = +$23;
   HEAPF64[$2>>3] = $24;
   $25 = (___rem_pio2_large($2,$3,$20,1,0)|0);
   $26 = ($4|0)<(0);
   $27 = +HEAPF64[$3>>3];
   if ($26) {
    $28 = - $27;
    HEAPF64[$1>>3] = $28;
    $29 = (0 - ($25))|0;
    $$0 = $29;
    break;
   } else {
    HEAPF64[$1>>3] = $27;
    $$0 = $25;
    break;
   }
  }
 } while(0);
 STACKTOP = sp;return ($$0|0);
}
function _fwrite($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $10 = (___lockfile($3)|0);
  $phitmp = ($10|0)==(0);
  $11 = (___fwritex($0,$4,$3)|0);
  if ($phitmp) {
   $13 = $11;
  } else {
   ___unlockfile($3);
   $13 = $11;
  }
 } else {
  $9 = (___fwritex($0,$4,$3)|0);
  $13 = $9;
 }
 $12 = ($13|0)==($4|0);
 if ($12) {
  $15 = $spec$select;
 } else {
  $14 = (($13>>>0) / ($1>>>0))&-1;
  $15 = $14;
 }
 return ($15|0);
}
function ___unlist_locked_file($0) {
 $0 = $0|0;
 var $$pre = 0, $$sink = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 68|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)==(0);
 if (!($3)) {
  $4 = ((($0)) + 116|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ($5|0)==(0|0);
  $7 = $5;
  $$pre = ((($0)) + 112|0);
  if (!($6)) {
   $8 = HEAP32[$$pre>>2]|0;
   $9 = ((($5)) + 112|0);
   HEAP32[$9>>2] = $8;
  }
  $10 = HEAP32[$$pre>>2]|0;
  $11 = ($10|0)==(0|0);
  if ($11) {
   $13 = (___pthread_self_606()|0);
   $14 = ((($13)) + 232|0);
   $$sink = $14;
  } else {
   $12 = ((($10)) + 116|0);
   $$sink = $12;
  }
  HEAP32[$$sink>>2] = $7;
 }
 return;
}
function ___pthread_self_606() {
 var $0 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $0 = (_pthread_self()|0);
 return ($0|0);
}
function _fopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, $vararg_buffer8 = 0, $vararg_ptr1 = 0;
 var $vararg_ptr2 = 0, $vararg_ptr6 = 0, $vararg_ptr7 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48|0;
 $vararg_buffer8 = sp + 32|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = HEAP8[$1>>0]|0;
 $3 = $2 << 24 >> 24;
 $4 = (_strchr(141106,$3)|0);
 $5 = ($4|0)==(0|0);
 if ($5) {
  $6 = (___errno_location()|0);
  HEAP32[$6>>2] = 22;
  $$0 = 0;
 } else {
  $7 = (___fmodeflags($1)|0);
  $8 = $0;
  $9 = $7 | 32768;
  HEAP32[$vararg_buffer>>2] = $8;
  $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
  HEAP32[$vararg_ptr1>>2] = $9;
  $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
  HEAP32[$vararg_ptr2>>2] = 438;
  $10 = (___syscall5(5,($vararg_buffer|0))|0);
  $11 = (___syscall_ret($10)|0);
  $12 = ($11|0)<(0);
  if ($12) {
   $$0 = 0;
  } else {
   $13 = $7 & 524288;
   $14 = ($13|0)==(0);
   if (!($14)) {
    HEAP32[$vararg_buffer3>>2] = $11;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 2;
    $vararg_ptr7 = ((($vararg_buffer3)) + 8|0);
    HEAP32[$vararg_ptr7>>2] = 1;
    (___syscall221(221,($vararg_buffer3|0))|0);
   }
   $15 = (___fdopen($11,$1)|0);
   $16 = ($15|0)==(0|0);
   if ($16) {
    HEAP32[$vararg_buffer8>>2] = $11;
    (___syscall6(6,($vararg_buffer8|0))|0);
    $$0 = 0;
   } else {
    $$0 = $15;
   }
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___fmodeflags($0) {
 $0 = $0|0;
 var $$ = 0, $$0 = 0, $$2 = 0, $$4 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0;
 var $spec$select = 0, $spec$select13 = 0, $spec$select14 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (_strchr($0,43)|0);
 $2 = ($1|0)==(0|0);
 $3 = HEAP8[$0>>0]|0;
 $4 = ($3<<24>>24)!=(114);
 $$ = $4&1;
 $$0 = $2 ? $$ : 2;
 $5 = (_strchr($0,120)|0);
 $6 = ($5|0)==(0|0);
 $7 = $$0 | 128;
 $spec$select = $6 ? $$0 : $7;
 $8 = (_strchr($0,101)|0);
 $9 = ($8|0)==(0|0);
 $10 = $spec$select | 524288;
 $$2 = $9 ? $spec$select : $10;
 $11 = ($3<<24>>24)==(114);
 $12 = $$2 | 64;
 $spec$select13 = $11 ? $$2 : $12;
 $13 = ($3<<24>>24)==(119);
 $14 = $spec$select13 | 512;
 $$4 = $13 ? $14 : $spec$select13;
 $15 = ($3<<24>>24)==(97);
 $16 = $$4 | 1024;
 $spec$select14 = $15 ? $16 : $$4;
 return ($spec$select14|0);
}
function ___fdopen($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$0 = 0, $$pre = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0, $5 = 0;
 var $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vararg_buffer = 0, $vararg_buffer12 = 0, $vararg_buffer3 = 0, $vararg_buffer7 = 0, $vararg_ptr1 = 0, $vararg_ptr10 = 0, $vararg_ptr11 = 0, $vararg_ptr15 = 0, $vararg_ptr16 = 0, $vararg_ptr2 = 0, $vararg_ptr6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64|0;
 $vararg_buffer12 = sp + 40|0;
 $vararg_buffer7 = sp + 24|0;
 $vararg_buffer3 = sp + 16|0;
 $vararg_buffer = sp;
 $2 = sp + 56|0;
 $3 = HEAP8[$1>>0]|0;
 $4 = $3 << 24 >> 24;
 $5 = (_strchr(141106,$4)|0);
 $6 = ($5|0)==(0|0);
 if ($6) {
  $7 = (___errno_location()|0);
  HEAP32[$7>>2] = 22;
  $$0 = 0;
 } else {
  $8 = (_malloc(1156)|0);
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = 0;
  } else {
   (_memset(($8|0),0,124)|0);
   $10 = (_strchr($1,43)|0);
   $11 = ($10|0)==(0|0);
   if ($11) {
    $12 = HEAP8[$1>>0]|0;
    $13 = ($12<<24>>24)==(114);
    $14 = $13 ? 8 : 4;
    HEAP32[$8>>2] = $14;
   }
   $15 = (_strchr($1,101)|0);
   $16 = ($15|0)==(0|0);
   if (!($16)) {
    HEAP32[$vararg_buffer>>2] = $0;
    $vararg_ptr1 = ((($vararg_buffer)) + 4|0);
    HEAP32[$vararg_ptr1>>2] = 2;
    $vararg_ptr2 = ((($vararg_buffer)) + 8|0);
    HEAP32[$vararg_ptr2>>2] = 1;
    (___syscall221(221,($vararg_buffer|0))|0);
   }
   $17 = HEAP8[$1>>0]|0;
   $18 = ($17<<24>>24)==(97);
   if ($18) {
    HEAP32[$vararg_buffer3>>2] = $0;
    $vararg_ptr6 = ((($vararg_buffer3)) + 4|0);
    HEAP32[$vararg_ptr6>>2] = 3;
    $19 = (___syscall221(221,($vararg_buffer3|0))|0);
    $20 = $19 & 1024;
    $21 = ($20|0)==(0);
    if ($21) {
     $22 = $19 | 1024;
     HEAP32[$vararg_buffer7>>2] = $0;
     $vararg_ptr10 = ((($vararg_buffer7)) + 4|0);
     HEAP32[$vararg_ptr10>>2] = 4;
     $vararg_ptr11 = ((($vararg_buffer7)) + 8|0);
     HEAP32[$vararg_ptr11>>2] = $22;
     (___syscall221(221,($vararg_buffer7|0))|0);
    }
    $23 = HEAP32[$8>>2]|0;
    $24 = $23 | 128;
    HEAP32[$8>>2] = $24;
    $31 = $24;
   } else {
    $$pre = HEAP32[$8>>2]|0;
    $31 = $$pre;
   }
   $25 = ((($8)) + 60|0);
   HEAP32[$25>>2] = $0;
   $26 = ((($8)) + 132|0);
   $27 = ((($8)) + 44|0);
   HEAP32[$27>>2] = $26;
   $28 = ((($8)) + 48|0);
   HEAP32[$28>>2] = 1024;
   $29 = ((($8)) + 75|0);
   HEAP8[$29>>0] = -1;
   $30 = $31 & 8;
   $32 = ($30|0)==(0);
   if ($32) {
    $33 = $2;
    HEAP32[$vararg_buffer12>>2] = $0;
    $vararg_ptr15 = ((($vararg_buffer12)) + 4|0);
    HEAP32[$vararg_ptr15>>2] = 21523;
    $vararg_ptr16 = ((($vararg_buffer12)) + 8|0);
    HEAP32[$vararg_ptr16>>2] = $33;
    $34 = (___syscall54(54,($vararg_buffer12|0))|0);
    $35 = ($34|0)==(0);
    if ($35) {
     HEAP8[$29>>0] = 10;
    }
   }
   $36 = ((($8)) + 32|0);
   HEAP32[$36>>2] = 460;
   $37 = ((($8)) + 36|0);
   HEAP32[$37>>2] = 213;
   $38 = ((($8)) + 40|0);
   HEAP32[$38>>2] = 214;
   $39 = ((($8)) + 12|0);
   HEAP32[$39>>2] = 212;
   $40 = HEAP32[(144676)>>2]|0;
   $41 = ($40|0)==(0);
   if ($41) {
    $42 = ((($8)) + 76|0);
    HEAP32[$42>>2] = -1;
   }
   $43 = (___ofl_add($8)|0);
   $$0 = $8;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function ___ofl_add($0) {
 $0 = $0|0;
 var $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = (___ofl_lock()|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 56|0);
 HEAP32[$3>>2] = $2;
 $4 = HEAP32[$1>>2]|0;
 $5 = ($4|0)==(0|0);
 if (!($5)) {
  $6 = ((($4)) + 52|0);
  HEAP32[$6>>2] = $0;
 }
 HEAP32[$1>>2] = $0;
 ___ofl_unlock();
 return ($0|0);
}
function ___ofl_lock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___lock((144760|0));
 return (144768|0);
}
function ___ofl_unlock() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___unlock((144760|0));
 return;
}
function _fclose($0) {
 $0 = $0|0;
 var $$pre = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0;
 var $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $4 = (___lockfile($0)|0);
  $30 = $4;
 } else {
  $30 = 0;
 }
 ___unlist_locked_file($0);
 $5 = HEAP32[$0>>2]|0;
 $6 = $5 & 1;
 $7 = ($6|0)!=(0);
 if (!($7)) {
  $8 = (___ofl_lock()|0);
  $9 = ((($0)) + 52|0);
  $10 = HEAP32[$9>>2]|0;
  $11 = ($10|0)==(0|0);
  $12 = $10;
  $$pre = ((($0)) + 56|0);
  if (!($11)) {
   $13 = HEAP32[$$pre>>2]|0;
   $14 = ((($10)) + 56|0);
   HEAP32[$14>>2] = $13;
  }
  $15 = HEAP32[$$pre>>2]|0;
  $16 = ($15|0)==(0|0);
  $17 = $15;
  if (!($16)) {
   $18 = ((($15)) + 52|0);
   HEAP32[$18>>2] = $12;
  }
  $19 = HEAP32[$8>>2]|0;
  $20 = ($19|0)==($0|0);
  if ($20) {
   HEAP32[$8>>2] = $17;
  }
  ___ofl_unlock();
 }
 $21 = (_fflush($0)|0);
 $22 = ((($0)) + 12|0);
 $23 = HEAP32[$22>>2]|0;
 $24 = (ftCall_ii($23|0,$0)|0);
 $25 = $24 | $21;
 $26 = ((($0)) + 92|0);
 $27 = HEAP32[$26>>2]|0;
 $28 = ($27|0)==(0|0);
 if (!($28)) {
  _free($27);
 }
 if ($7) {
  $29 = ($30|0)==(0);
  if (!($29)) {
   ___unlockfile($0);
  }
 } else {
  _free($0);
 }
 return ($25|0);
}
function _fflush($0) {
 $0 = $0|0;
 var $$0 = 0, $$023 = 0, $$02325 = 0, $$02327 = 0, $$024$lcssa = 0, $$02426 = 0, $$1 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0;
 var $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ($0|0)==(0|0);
 do {
  if ($1) {
   $8 = HEAP32[30187]|0;
   $9 = ($8|0)==(0|0);
   if ($9) {
    $29 = 0;
   } else {
    $10 = HEAP32[30187]|0;
    $11 = (_fflush($10)|0);
    $29 = $11;
   }
   $12 = (___ofl_lock()|0);
   $$02325 = HEAP32[$12>>2]|0;
   $13 = ($$02325|0)==(0|0);
   if ($13) {
    $$024$lcssa = $29;
   } else {
    $$02327 = $$02325;$$02426 = $29;
    while(1) {
     $14 = ((($$02327)) + 76|0);
     $15 = HEAP32[$14>>2]|0;
     $16 = ($15|0)>(-1);
     if ($16) {
      $17 = (___lockfile($$02327)|0);
      $26 = $17;
     } else {
      $26 = 0;
     }
     $18 = ((($$02327)) + 20|0);
     $19 = HEAP32[$18>>2]|0;
     $20 = ((($$02327)) + 28|0);
     $21 = HEAP32[$20>>2]|0;
     $22 = ($19>>>0)>($21>>>0);
     if ($22) {
      $23 = (___fflush_unlocked($$02327)|0);
      $24 = $23 | $$02426;
      $$1 = $24;
     } else {
      $$1 = $$02426;
     }
     $25 = ($26|0)==(0);
     if (!($25)) {
      ___unlockfile($$02327);
     }
     $27 = ((($$02327)) + 56|0);
     $$023 = HEAP32[$27>>2]|0;
     $28 = ($$023|0)==(0|0);
     if ($28) {
      $$024$lcssa = $$1;
      break;
     } else {
      $$02327 = $$023;$$02426 = $$1;
     }
    }
   }
   ___ofl_unlock();
   $$0 = $$024$lcssa;
  } else {
   $2 = ((($0)) + 76|0);
   $3 = HEAP32[$2>>2]|0;
   $4 = ($3|0)>(-1);
   if (!($4)) {
    $5 = (___fflush_unlocked($0)|0);
    $$0 = $5;
    break;
   }
   $6 = (___lockfile($0)|0);
   $phitmp = ($6|0)==(0);
   $7 = (___fflush_unlocked($0)|0);
   if ($phitmp) {
    $$0 = $7;
   } else {
    ___unlockfile($0);
    $$0 = $7;
   }
  }
 } while(0);
 return ($$0|0);
}
function ___fflush_unlocked($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 20|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ((($0)) + 28|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($2>>>0)>($4>>>0);
 if ($5) {
  $6 = ((($0)) + 36|0);
  $7 = HEAP32[$6>>2]|0;
  (ftCall_iiii($7|0,$0,0,0)|0);
  $8 = HEAP32[$1>>2]|0;
  $9 = ($8|0)==(0|0);
  if ($9) {
   $$0 = -1;
  } else {
   label = 3;
  }
 } else {
  label = 3;
 }
 if ((label|0) == 3) {
  $10 = ((($0)) + 4|0);
  $11 = HEAP32[$10>>2]|0;
  $12 = ((($0)) + 8|0);
  $13 = HEAP32[$12>>2]|0;
  $14 = ($11>>>0)<($13>>>0);
  if ($14) {
   $15 = $11;
   $16 = $13;
   $17 = (($15) - ($16))|0;
   $18 = ((($0)) + 40|0);
   $19 = HEAP32[$18>>2]|0;
   (ftCall_iiii($19|0,$0,$17,1)|0);
  }
  $20 = ((($0)) + 16|0);
  HEAP32[$20>>2] = 0;
  HEAP32[$3>>2] = 0;
  HEAP32[$1>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $$0 = 0;
 }
 return ($$0|0);
}
function _feof($0) {
 $0 = $0|0;
 var $$lobit = 0, $$lobit8 = 0, $$lobit9 = 0, $1 = 0, $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)>(-1);
 if ($3) {
  $6 = (___lockfile($0)|0);
  $phitmp = ($6|0)==(0);
  $7 = HEAP32[$0>>2]|0;
  $8 = $7 >>> 4;
  $$lobit = $8 & 1;
  if ($phitmp) {
   $$lobit9 = $$lobit;
  } else {
   ___unlockfile($0);
   $$lobit9 = $$lobit;
  }
 } else {
  $4 = HEAP32[$0>>2]|0;
  $5 = $4 >>> 4;
  $$lobit8 = $5 & 1;
  $$lobit9 = $$lobit8;
 }
 return ($$lobit9|0);
}
function _fseek($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = (___fseeko($0,$1,$2)|0);
 return ($3|0);
}
function _fprintf($0,$1,$varargs) {
 $0 = $0|0;
 $1 = $1|0;
 $varargs = $varargs|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $2 = sp;
 HEAP32[$2>>2] = $varargs;
 $3 = (_vfprintf($0,$1,$2)|0);
 STACKTOP = sp;return ($3|0);
}
function ___fseeko($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $phitmp = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ((($0)) + 76|0);
 $4 = HEAP32[$3>>2]|0;
 $5 = ($4|0)>(-1);
 if ($5) {
  $7 = (___lockfile($0)|0);
  $phitmp = ($7|0)==(0);
  $8 = (___fseeko_unlocked($0,$1,$2)|0);
  if ($phitmp) {
   $9 = $8;
  } else {
   ___unlockfile($0);
   $9 = $8;
  }
 } else {
  $6 = (___fseeko_unlocked($0,$1,$2)|0);
  $9 = $6;
 }
 return ($9|0);
}
function ___fseeko_unlocked($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $$019 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $3 = ($2|0)==(1);
 if ($3) {
  $4 = ((($0)) + 8|0);
  $5 = HEAP32[$4>>2]|0;
  $6 = ((($0)) + 4|0);
  $7 = HEAP32[$6>>2]|0;
  $8 = (($1) - ($5))|0;
  $9 = (($8) + ($7))|0;
  $$019 = $9;
 } else {
  $$019 = $1;
 }
 $10 = ((($0)) + 20|0);
 $11 = HEAP32[$10>>2]|0;
 $12 = ((($0)) + 28|0);
 $13 = HEAP32[$12>>2]|0;
 $14 = ($11>>>0)>($13>>>0);
 if ($14) {
  $15 = ((($0)) + 36|0);
  $16 = HEAP32[$15>>2]|0;
  (ftCall_iiii($16|0,$0,0,0)|0);
  $17 = HEAP32[$10>>2]|0;
  $18 = ($17|0)==(0|0);
  if ($18) {
   $$0 = -1;
  } else {
   label = 5;
  }
 } else {
  label = 5;
 }
 if ((label|0) == 5) {
  $19 = ((($0)) + 16|0);
  HEAP32[$19>>2] = 0;
  HEAP32[$12>>2] = 0;
  HEAP32[$10>>2] = 0;
  $20 = ((($0)) + 40|0);
  $21 = HEAP32[$20>>2]|0;
  $22 = (ftCall_iiii($21|0,$0,$$019,$2)|0);
  $23 = ($22|0)<(0);
  if ($23) {
   $$0 = -1;
  } else {
   $24 = ((($0)) + 8|0);
   HEAP32[$24>>2] = 0;
   $25 = ((($0)) + 4|0);
   HEAP32[$25>>2] = 0;
   $26 = HEAP32[$0>>2]|0;
   $27 = $26 & -17;
   HEAP32[$0>>2] = $27;
   $$0 = 0;
  }
 }
 return ($$0|0);
}
function _strncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 (___stpncpy($0,$1,$2)|0);
 return ($0|0);
}
function ___stpncpy($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0$lcssa = 0, $$037$lcssa = 0, $$03754 = 0, $$038$lcssa = 0, $$03867 = 0, $$039$lcssa = 0, $$03966 = 0, $$042$lcssa = 0, $$04265 = 0, $$055 = 0, $$1$lcssa = 0, $$140 = 0, $$143 = 0, $$153 = 0, $$2 = 0, $$24147 = 0, $$24446 = 0, $$345 = 0, $$348 = 0, $$4 = 0;
 var $$lcssa = 0, $$pr = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0, $26 = 0, $27 = 0;
 var $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $or$cond = 0, $or$cond64 = 0;
 var label = 0, sp = 0;
 sp = STACKTOP;
 $3 = $1;
 $4 = $0;
 $5 = $3 ^ $4;
 $6 = $5 & 3;
 $7 = ($6|0)==(0);
 L1: do {
  if ($7) {
   $8 = $3 & 3;
   $9 = ($8|0)!=(0);
   $10 = ($2|0)!=(0);
   $or$cond64 = $10 & $9;
   if ($or$cond64) {
    $$03867 = $2;$$03966 = $1;$$04265 = $0;
    while(1) {
     $11 = HEAP8[$$03966>>0]|0;
     HEAP8[$$04265>>0] = $11;
     $12 = ($11<<24>>24)==(0);
     if ($12) {
      $$345 = $$04265;$$4 = $$03867;
      break L1;
     }
     $13 = (($$03867) + -1)|0;
     $14 = ((($$03966)) + 1|0);
     $15 = ((($$04265)) + 1|0);
     $16 = $14;
     $17 = $16 & 3;
     $18 = ($17|0)!=(0);
     $19 = ($13|0)!=(0);
     $or$cond = $19 & $18;
     if ($or$cond) {
      $$03867 = $13;$$03966 = $14;$$04265 = $15;
     } else {
      $$038$lcssa = $13;$$039$lcssa = $14;$$042$lcssa = $15;$$lcssa = $19;
      break;
     }
    }
   } else {
    $$038$lcssa = $2;$$039$lcssa = $1;$$042$lcssa = $0;$$lcssa = $10;
   }
   if ($$lcssa) {
    $$pr = HEAP8[$$039$lcssa>>0]|0;
    $20 = ($$pr<<24>>24)==(0);
    if ($20) {
     $$345 = $$042$lcssa;$$4 = $$038$lcssa;
    } else {
     $21 = ($$038$lcssa>>>0)>(3);
     L11: do {
      if ($21) {
       $$03754 = $$042$lcssa;$$055 = $$039$lcssa;$$153 = $$038$lcssa;
       while(1) {
        $22 = HEAP32[$$055>>2]|0;
        $23 = (($22) + -16843009)|0;
        $24 = $22 & -2139062144;
        $25 = $24 ^ -2139062144;
        $26 = $25 & $23;
        $27 = ($26|0)==(0);
        if (!($27)) {
         $$0$lcssa = $$055;$$037$lcssa = $$03754;$$1$lcssa = $$153;
         break L11;
        }
        HEAP32[$$03754>>2] = $22;
        $28 = (($$153) + -4)|0;
        $29 = ((($$055)) + 4|0);
        $30 = ((($$03754)) + 4|0);
        $31 = ($28>>>0)>(3);
        if ($31) {
         $$03754 = $30;$$055 = $29;$$153 = $28;
        } else {
         $$0$lcssa = $29;$$037$lcssa = $30;$$1$lcssa = $28;
         break;
        }
       }
      } else {
       $$0$lcssa = $$039$lcssa;$$037$lcssa = $$042$lcssa;$$1$lcssa = $$038$lcssa;
      }
     } while(0);
     $$140 = $$0$lcssa;$$143 = $$037$lcssa;$$2 = $$1$lcssa;
     label = 13;
    }
   } else {
    $$345 = $$042$lcssa;$$4 = 0;
   }
  } else {
   $$140 = $1;$$143 = $0;$$2 = $2;
   label = 13;
  }
 } while(0);
 L17: do {
  if ((label|0) == 13) {
   $32 = ($$2|0)==(0);
   if ($32) {
    $$345 = $$143;$$4 = 0;
   } else {
    $$24147 = $$140;$$24446 = $$143;$$348 = $$2;
    while(1) {
     $33 = HEAP8[$$24147>>0]|0;
     HEAP8[$$24446>>0] = $33;
     $34 = ($33<<24>>24)==(0);
     if ($34) {
      $$345 = $$24446;$$4 = $$348;
      break L17;
     }
     $35 = (($$348) + -1)|0;
     $36 = ((($$24147)) + 1|0);
     $37 = ((($$24446)) + 1|0);
     $38 = ($35|0)==(0);
     if ($38) {
      $$345 = $37;$$4 = 0;
      break;
     } else {
      $$24147 = $36;$$24446 = $37;$$348 = $35;
     }
    }
   }
  }
 } while(0);
 (_memset(($$345|0),0,($$4|0))|0);
 return ($$345|0);
}
function _strcat($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strlen($0)|0);
 $3 = (($0) + ($2)|0);
 (_strcpy($3,$1)|0);
 return ($0|0);
}
function _vasprintf($0,$1,$2) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 var $$0 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $vacopy_currentptr = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $3 = sp;
 $vacopy_currentptr = HEAP32[$2>>2]|0;
 HEAP32[$3>>2] = $vacopy_currentptr;
 $4 = (_vsnprintf(0,0,$1,$3)|0);
 $5 = ($4|0)<(0);
 if ($5) {
  $$0 = -1;
 } else {
  $6 = (($4) + 1)|0;
  $7 = (_malloc($6)|0);
  HEAP32[$0>>2] = $7;
  $8 = ($7|0)==(0|0);
  if ($8) {
   $$0 = -1;
  } else {
   $9 = (_vsnprintf($7,$6,$1,$2)|0);
   $$0 = $9;
  }
 }
 STACKTOP = sp;return ($$0|0);
}
function _fgetc($0) {
 $0 = $0|0;
 var $$0 = 0, $1 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $3 = 0, $4 = 0;
 var $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $1 = ((($0)) + 76|0);
 $2 = HEAP32[$1>>2]|0;
 $3 = ($2|0)<(0);
 if ($3) {
  label = 3;
 } else {
  $4 = (___lockfile($0)|0);
  $5 = ($4|0)==(0);
  if ($5) {
   label = 3;
  } else {
   $15 = ((($0)) + 4|0);
   $16 = HEAP32[$15>>2]|0;
   $17 = ((($0)) + 8|0);
   $18 = HEAP32[$17>>2]|0;
   $19 = ($16>>>0)<($18>>>0);
   if ($19) {
    $20 = ((($16)) + 1|0);
    HEAP32[$15>>2] = $20;
    $21 = HEAP8[$16>>0]|0;
    $22 = $21&255;
    $24 = $22;
   } else {
    $23 = (___uflow($0)|0);
    $24 = $23;
   }
   ___unlockfile($0);
   $$0 = $24;
  }
 }
 do {
  if ((label|0) == 3) {
   $6 = ((($0)) + 4|0);
   $7 = HEAP32[$6>>2]|0;
   $8 = ((($0)) + 8|0);
   $9 = HEAP32[$8>>2]|0;
   $10 = ($7>>>0)<($9>>>0);
   if ($10) {
    $11 = ((($7)) + 1|0);
    HEAP32[$6>>2] = $11;
    $12 = HEAP8[$7>>0]|0;
    $13 = $12&255;
    $$0 = $13;
    break;
   } else {
    $14 = (___uflow($0)|0);
    $$0 = $14;
    break;
   }
  }
 } while(0);
 return ($$0|0);
}
function _fread($0,$1,$2,$3) {
 $0 = $0|0;
 $1 = $1|0;
 $2 = $2|0;
 $3 = $3|0;
 var $$ = 0, $$0 = 0, $$054 = 0, $$056 = 0, $$15759 = 0, $$160 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0;
 var $24 = 0, $25 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0;
 var $43 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0, $9 = 0, $spec$select = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $4 = Math_imul($2, $1)|0;
 $5 = ($1|0)==(0);
 $spec$select = $5 ? 0 : $2;
 $6 = ((($3)) + 76|0);
 $7 = HEAP32[$6>>2]|0;
 $8 = ($7|0)>(-1);
 if ($8) {
  $9 = (___lockfile($3)|0);
  $37 = $9;
 } else {
  $37 = 0;
 }
 $10 = ((($3)) + 74|0);
 $11 = HEAP8[$10>>0]|0;
 $12 = $11 << 24 >> 24;
 $13 = (($12) + 255)|0;
 $14 = $13 | $12;
 $15 = $14&255;
 HEAP8[$10>>0] = $15;
 $16 = ((($3)) + 8|0);
 $17 = HEAP32[$16>>2]|0;
 $18 = ((($3)) + 4|0);
 $19 = HEAP32[$18>>2]|0;
 $20 = (($17) - ($19))|0;
 $21 = ($20|0)>(0);
 if ($21) {
  $22 = $19;
  $23 = ($20>>>0)<($4>>>0);
  $$ = $23 ? $20 : $4;
  (_memcpy(($0|0),($22|0),($$|0))|0);
  $24 = HEAP32[$18>>2]|0;
  $25 = (($24) + ($$)|0);
  HEAP32[$18>>2] = $25;
  $26 = (($0) + ($$)|0);
  $27 = (($4) - ($$))|0;
  $$054 = $27;$$056 = $26;
 } else {
  $$054 = $4;$$056 = $0;
 }
 $28 = ($$054|0)==(0);
 L7: do {
  if ($28) {
   label = 13;
  } else {
   $29 = ((($3)) + 32|0);
   $$15759 = $$056;$$160 = $$054;
   while(1) {
    $30 = (___toread($3)|0);
    $31 = ($30|0)==(0);
    if (!($31)) {
     break;
    }
    $32 = HEAP32[$29>>2]|0;
    $33 = (ftCall_iiii($32|0,$3,$$15759,$$160)|0);
    $34 = (($33) + 1)|0;
    $35 = ($34>>>0)<(2);
    if ($35) {
     break;
    }
    $40 = (($$160) - ($33))|0;
    $41 = (($$15759) + ($33)|0);
    $42 = ($40|0)==(0);
    if ($42) {
     label = 13;
     break L7;
    } else {
     $$15759 = $41;$$160 = $40;
    }
   }
   $36 = ($37|0)==(0);
   if (!($36)) {
    ___unlockfile($3);
   }
   $38 = (($4) - ($$160))|0;
   $39 = (($38>>>0) / ($1>>>0))&-1;
   $$0 = $39;
  }
 } while(0);
 if ((label|0) == 13) {
  $43 = ($37|0)==(0);
  if ($43) {
   $$0 = $spec$select;
  } else {
   ___unlockfile($3);
   $$0 = $spec$select;
  }
 }
 return ($$0|0);
}
function _printf($0,$varargs) {
 $0 = $0|0;
 $varargs = $varargs|0;
 var $1 = 0, $2 = 0, $3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 HEAP32[$1>>2] = $varargs;
 $2 = HEAP32[30155]|0;
 $3 = (_vfprintf($2,$0,$1)|0);
 STACKTOP = sp;return ($3|0);
}
function _strcspn($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $$01823 = 0, $$019$lcssa$sink = 0, $$01920 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $18 = 0, $19 = 0, $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0, $24 = 0, $25 = 0;
 var $26 = 0, $27 = 0, $28 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0, $39 = 0, $4 = 0, $5 = 0, $6 = 0, $7 = 0, $8 = 0;
 var $9 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32|0;
 $2 = sp;
 $3 = HEAP8[$1>>0]|0;
 $4 = ($3<<24>>24)==(0);
 L1: do {
  if ($4) {
   label = 3;
  } else {
   $5 = ((($1)) + 1|0);
   $6 = HEAP8[$5>>0]|0;
   $7 = ($6<<24>>24)==(0);
   if ($7) {
    label = 3;
   } else {
    (_memset(($2|0),0,32)|0);
    $10 = HEAP8[$1>>0]|0;
    $11 = ($10<<24>>24)==(0);
    if (!($11)) {
     $$01823 = $1;$13 = $10;
     while(1) {
      $12 = $13&255;
      $14 = $12 & 31;
      $15 = 1 << $14;
      $16 = $12 >>> 5;
      $17 = (($2) + ($16<<2)|0);
      $18 = HEAP32[$17>>2]|0;
      $19 = $18 | $15;
      HEAP32[$17>>2] = $19;
      $20 = ((($$01823)) + 1|0);
      $21 = HEAP8[$20>>0]|0;
      $22 = ($21<<24>>24)==(0);
      if ($22) {
       break;
      } else {
       $$01823 = $20;$13 = $21;
      }
     }
    }
    $23 = HEAP8[$0>>0]|0;
    $24 = ($23<<24>>24)==(0);
    if ($24) {
     $$019$lcssa$sink = $0;
    } else {
     $$01920 = $0;$26 = $23;
     while(1) {
      $25 = $26&255;
      $27 = $25 >>> 5;
      $28 = (($2) + ($27<<2)|0);
      $29 = HEAP32[$28>>2]|0;
      $30 = $25 & 31;
      $31 = 1 << $30;
      $32 = $29 & $31;
      $33 = ($32|0)==(0);
      if (!($33)) {
       $$019$lcssa$sink = $$01920;
       break L1;
      }
      $34 = ((($$01920)) + 1|0);
      $35 = HEAP8[$34>>0]|0;
      $36 = ($35<<24>>24)==(0);
      if ($36) {
       $$019$lcssa$sink = $34;
       break;
      } else {
       $$01920 = $34;$26 = $35;
      }
     }
    }
   }
  }
 } while(0);
 if ((label|0) == 3) {
  $8 = $3 << 24 >> 24;
  $9 = (___strchrnul($0,$8)|0);
  $$019$lcssa$sink = $9;
 }
 $37 = $$019$lcssa$sink;
 $38 = $0;
 $39 = (($37) - ($38))|0;
 STACKTOP = sp;return ($39|0);
}
function _strpbrk($0,$1) {
 $0 = $0|0;
 $1 = $1|0;
 var $2 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 $2 = (_strcspn($0,$1)|0);
 $3 = (($0) + ($2)|0);
 $4 = HEAP8[$3>>0]|0;
 $5 = ($4<<24>>24)==(0);
 $6 = $5 ? 0 : $3;
 return ($6|0);
}
function _cosf($0) {
 $0 = Math_fround($0);
 var $$0 = Math_fround(0), $$v = 0.0, $$v21 = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0.0, $17 = Math_fround(0), $18 = 0.0, $19 = Math_fround(0), $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0, $24 = 0.0;
 var $25 = Math_fround(0), $26 = Math_fround(0), $27 = 0.0, $28 = 0.0, $29 = Math_fround(0), $3 = 0, $30 = 0.0, $31 = 0.0, $32 = Math_fround(0), $33 = 0, $34 = Math_fround(0), $35 = 0, $36 = 0.0, $37 = Math_fround(0), $38 = 0.0, $39 = 0.0, $4 = 0, $40 = Math_fround(0), $41 = 0.0, $42 = Math_fround(0);
 var $43 = Math_fround(0), $44 = 0.0, $45 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0.0, $8 = Math_fround(0), $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 >>> 31;
 $4 = $2 & 2147483647;
 $5 = ($4>>>0)<(1061752795);
 L1: do {
  if ($5) {
   $6 = ($4>>>0)<(964689920);
   if ($6) {
    $$0 = Math_fround(1.0);
   } else {
    $7 = +$0;
    $8 = (Math_fround(___cosdf($7)));
    $$0 = $8;
   }
  } else {
   $9 = ($4>>>0)<(1081824210);
   if ($9) {
    $10 = ($4>>>0)>(1075235811);
    $11 = ($3|0)!=(0);
    $12 = +$0;
    if ($10) {
     $$v21 = $11 ? 3.1415926535897931 : -3.1415926535897931;
     $13 = $$v21 + $12;
     $14 = (Math_fround(___cosdf($13)));
     $15 = Math_fround(- $14);
     $$0 = $15;
     break;
    }
    if ($11) {
     $16 = $12 + 1.5707963267948966;
     $17 = (Math_fround(___sindf($16)));
     $$0 = $17;
     break;
    } else {
     $18 = 1.5707963267948966 - $12;
     $19 = (Math_fround(___sindf($18)));
     $$0 = $19;
     break;
    }
   }
   $20 = ($4>>>0)<(1088565718);
   if ($20) {
    $21 = ($4>>>0)>(1085271519);
    $22 = ($3|0)!=(0);
    if ($21) {
     $23 = +$0;
     $$v = $22 ? 6.2831853071795862 : -6.2831853071795862;
     $24 = $$v + $23;
     $25 = (Math_fround(___cosdf($24)));
     $$0 = $25;
     break;
    }
    if ($22) {
     $26 = Math_fround(- $0);
     $27 = +$26;
     $28 = $27 + -4.7123889803846897;
     $29 = (Math_fround(___sindf($28)));
     $$0 = $29;
     break;
    } else {
     $30 = +$0;
     $31 = $30 + -4.7123889803846897;
     $32 = (Math_fround(___sindf($31)));
     $$0 = $32;
     break;
    }
   }
   $33 = ($4>>>0)>(2139095039);
   if ($33) {
    $34 = Math_fround($0 - $0);
    $$0 = $34;
    break;
   }
   $35 = (___rem_pio2f($0,$1)|0);
   $trunc = $35&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $36 = +HEAPF64[$1>>3];
    $37 = (Math_fround(___cosdf($36)));
    $$0 = $37;
    break L1;
    break;
   }
   case 1:  {
    $38 = +HEAPF64[$1>>3];
    $39 = - $38;
    $40 = (Math_fround(___sindf($39)));
    $$0 = $40;
    break L1;
    break;
   }
   case 2:  {
    $41 = +HEAPF64[$1>>3];
    $42 = (Math_fround(___cosdf($41)));
    $43 = Math_fround(- $42);
    $$0 = $43;
    break L1;
    break;
   }
   default: {
    $44 = +HEAPF64[$1>>3];
    $45 = (Math_fround(___sindf($44)));
    $$0 = $45;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (Math_fround($$0));
}
function _sinf($0) {
 $0 = Math_fround($0);
 var $$0 = Math_fround(0), $$v = 0.0, $$v21 = 0.0, $$v21$v = 0.0, $1 = 0, $10 = 0, $11 = 0, $12 = 0.0, $13 = 0.0, $14 = Math_fround(0), $15 = Math_fround(0), $16 = 0.0, $17 = Math_fround(0), $18 = 0.0, $19 = Math_fround(0), $2 = 0, $20 = 0, $21 = 0, $22 = 0, $23 = 0.0;
 var $24 = 0.0, $25 = Math_fround(0), $26 = 0.0, $27 = Math_fround(0), $28 = Math_fround(0), $29 = 0.0, $3 = 0, $30 = Math_fround(0), $31 = 0, $32 = Math_fround(0), $33 = 0, $34 = 0.0, $35 = Math_fround(0), $36 = 0.0, $37 = Math_fround(0), $38 = 0.0, $39 = 0.0, $4 = 0, $40 = Math_fround(0), $41 = 0.0;
 var $42 = Math_fround(0), $43 = Math_fround(0), $5 = 0, $6 = 0, $7 = 0.0, $8 = Math_fround(0), $9 = 0, $trunc = 0, $trunc$clear = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16|0;
 $1 = sp;
 $2 = (HEAPF32[tempDoublePtr>>2]=$0,HEAP32[tempDoublePtr>>2]|0);
 $3 = $2 >>> 31;
 $4 = $2 & 2147483647;
 $5 = ($4>>>0)<(1061752795);
 L1: do {
  if ($5) {
   $6 = ($4>>>0)<(964689920);
   if ($6) {
    $$0 = $0;
   } else {
    $7 = +$0;
    $8 = (Math_fround(___sindf($7)));
    $$0 = $8;
   }
  } else {
   $9 = ($4>>>0)<(1081824210);
   if ($9) {
    $10 = ($4>>>0)<(1075235812);
    $11 = ($3|0)!=(0);
    $12 = +$0;
    if (!($10)) {
     $$v21$v = $11 ? 3.1415926535897931 : -3.1415926535897931;
     $$v21 = $$v21$v + $12;
     $18 = - $$v21;
     $19 = (Math_fround(___sindf($18)));
     $$0 = $19;
     break;
    }
    if ($11) {
     $13 = $12 + 1.5707963267948966;
     $14 = (Math_fround(___cosdf($13)));
     $15 = Math_fround(- $14);
     $$0 = $15;
     break;
    } else {
     $16 = $12 + -1.5707963267948966;
     $17 = (Math_fround(___cosdf($16)));
     $$0 = $17;
     break;
    }
   }
   $20 = ($4>>>0)<(1088565718);
   if ($20) {
    $21 = ($4>>>0)<(1085271520);
    $22 = ($3|0)!=(0);
    $23 = +$0;
    if (!($21)) {
     $$v = $22 ? 6.2831853071795862 : -6.2831853071795862;
     $29 = $$v + $23;
     $30 = (Math_fround(___sindf($29)));
     $$0 = $30;
     break;
    }
    if ($22) {
     $24 = $23 + 4.7123889803846897;
     $25 = (Math_fround(___cosdf($24)));
     $$0 = $25;
     break;
    } else {
     $26 = $23 + -4.7123889803846897;
     $27 = (Math_fround(___cosdf($26)));
     $28 = Math_fround(- $27);
     $$0 = $28;
     break;
    }
   }
   $31 = ($4>>>0)>(2139095039);
   if ($31) {
    $32 = Math_fround($0 - $0);
    $$0 = $32;
    break;
   }
   $33 = (___rem_pio2f($0,$1)|0);
   $trunc = $33&255;
   $trunc$clear = $trunc & 3;
   switch ($trunc$clear<<24>>24) {
   case 0:  {
    $34 = +HEAPF64[$1>>3];
    $35 = (Math_fround(___sindf($34)));
    $$0 = $35;
    break L1;
    break;
   }
   case 1:  {
    $36 = +HEAPF64[$1>>3];
    $37 = (Math_fround(___cosdf($36)));
    $$0 = $37;
    break L1;
    break;
   }
   case 2:  {
    $38 = +HEAPF64[$1>>3];
    $39 = - $38;
    $40 = (Math_fround(___sindf($39)));
    $$0 = $40;
    break L1;
    break;
   }
   default: {
    $41 = +HEAPF64[$1>>3];
    $42 = (Math_fround(___cosdf($41)));
    $43 = Math_fround(- $42);
    $$0 = $43;
    break L1;
   }
   }
  }
 } while(0);
 STACKTOP = sp;return (Math_fround($$0));
}
function _pow($0,$1) {
 $0 = +$0;
 $1 = +$1;
 var $$ = 0.0, $$0 = 0.0, $$0385 = 0.0, $$0386 = 0.0, $$0387 = 0.0, $$0388 = 0.0, $$0390 = 0.0, $$0391 = 0, $$0392 = 0, $$0392399 = 0, $$0392400 = 0, $$0396 = 0, $$12 = 0.0, $$1394 = 0, $$1397 = 0, $$2 = 0.0, $$3 = 0, $$pre = 0.0, $$sink = 0.0, $$sink410 = 0.0;
 var $10 = 0, $100 = 0.0, $101 = 0, $102 = 0, $103 = 0.0, $104 = 0.0, $105 = 0, $106 = 0.0, $107 = 0, $108 = 0, $109 = 0, $11 = 0, $110 = 0, $111 = 0, $112 = 0, $113 = 0, $114 = 0, $115 = 0, $116 = 0, $117 = 0;
 var $118 = 0, $119 = 0, $12 = 0, $120 = 0.0, $121 = 0, $122 = 0.0, $123 = 0.0, $124 = 0.0, $125 = 0.0, $126 = 0.0, $127 = 0, $128 = 0, $129 = 0.0, $13 = 0, $130 = 0, $131 = 0, $132 = 0, $133 = 0, $134 = 0, $135 = 0.0;
 var $136 = 0.0, $137 = 0.0, $138 = 0.0, $139 = 0.0, $14 = 0, $140 = 0.0, $141 = 0.0, $142 = 0.0, $143 = 0.0, $144 = 0.0, $145 = 0.0, $146 = 0.0, $147 = 0.0, $148 = 0.0, $149 = 0.0, $15 = 0, $150 = 0.0, $151 = 0.0, $152 = 0.0, $153 = 0.0;
 var $154 = 0.0, $155 = 0.0, $156 = 0.0, $157 = 0.0, $158 = 0.0, $159 = 0.0, $16 = 0, $160 = 0.0, $161 = 0.0, $162 = 0, $163 = 0, $164 = 0.0, $165 = 0.0, $166 = 0.0, $167 = 0.0, $168 = 0.0, $169 = 0.0, $17 = 0, $170 = 0.0, $171 = 0.0;
 var $172 = 0.0, $173 = 0, $174 = 0, $175 = 0.0, $176 = 0.0, $177 = 0.0, $178 = 0.0, $179 = 0.0, $18 = 0.0, $180 = 0.0, $181 = 0.0, $182 = 0, $183 = 0.0, $184 = 0.0, $185 = 0.0, $186 = 0.0, $187 = 0, $188 = 0.0, $189 = 0.0, $19 = 0;
 var $190 = 0.0, $191 = 0, $192 = 0, $193 = 0.0, $194 = 0.0, $195 = 0.0, $196 = 0.0, $197 = 0.0, $198 = 0.0, $199 = 0.0, $2 = 0, $20 = 0, $200 = 0.0, $201 = 0.0, $202 = 0.0, $203 = 0.0, $204 = 0.0, $205 = 0, $206 = 0, $207 = 0;
 var $208 = 0, $209 = 0, $21 = 0, $210 = 0, $211 = 0.0, $212 = 0.0, $213 = 0.0, $214 = 0.0, $215 = 0, $216 = 0.0, $217 = 0.0, $218 = 0, $219 = 0, $22 = 0, $220 = 0, $221 = 0, $222 = 0, $223 = 0.0, $224 = 0.0, $225 = 0.0;
 var $226 = 0, $227 = 0.0, $228 = 0.0, $229 = 0, $23 = 0, $230 = 0, $231 = 0, $232 = 0, $233 = 0, $234 = 0, $235 = 0, $236 = 0, $237 = 0, $238 = 0, $239 = 0, $24 = 0, $240 = 0.0, $241 = 0, $242 = 0, $243 = 0;
 var $244 = 0, $245 = 0, $246 = 0, $247 = 0.0, $248 = 0, $249 = 0, $25 = 0, $250 = 0.0, $251 = 0, $252 = 0.0, $253 = 0.0, $254 = 0.0, $255 = 0.0, $256 = 0.0, $257 = 0.0, $258 = 0.0, $259 = 0.0, $26 = 0, $260 = 0.0, $261 = 0.0;
 var $262 = 0.0, $263 = 0.0, $264 = 0.0, $265 = 0.0, $266 = 0.0, $267 = 0.0, $268 = 0.0, $269 = 0.0, $27 = 0, $270 = 0.0, $271 = 0.0, $272 = 0.0, $273 = 0.0, $274 = 0.0, $275 = 0.0, $276 = 0.0, $277 = 0.0, $278 = 0.0, $279 = 0.0, $28 = 0;
 var $280 = 0, $281 = 0, $282 = 0, $283 = 0, $284 = 0, $285 = 0.0, $286 = 0.0, $287 = 0.0, $288 = 0, $29 = 0, $3 = 0, $30 = 0, $31 = 0, $32 = 0, $33 = 0, $34 = 0, $35 = 0, $36 = 0, $37 = 0, $38 = 0;
 var $39 = 0, $4 = 0, $40 = 0, $41 = 0, $42 = 0, $43 = 0.0, $44 = 0.0, $45 = 0.0, $46 = 0, $47 = 0, $48 = 0.0, $49 = 0, $5 = 0, $50 = 0.0, $51 = 0, $52 = 0, $53 = 0.0, $54 = 0.0, $55 = 0, $56 = 0;
 var $57 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0.0, $61 = 0, $62 = 0, $63 = 0, $64 = 0.0, $65 = 0.0, $66 = 0, $67 = 0.0, $68 = 0.0, $69 = 0.0, $7 = 0, $70 = 0, $71 = 0, $72 = 0, $73 = 0, $74 = 0;
 var $75 = 0, $76 = 0, $77 = 0.0, $78 = 0.0, $79 = 0.0, $8 = 0, $80 = 0.0, $81 = 0.0, $82 = 0, $83 = 0, $84 = 0.0, $85 = 0.0, $86 = 0.0, $87 = 0.0, $88 = 0.0, $89 = 0.0, $9 = 0, $90 = 0.0, $91 = 0.0, $92 = 0.0;
 var $93 = 0.0, $94 = 0.0, $95 = 0.0, $96 = 0.0, $97 = 0.0, $98 = 0.0, $99 = 0.0, $not$ = 0, $or$cond = 0, $or$cond14 = 0, $or$cond3 = 0, $or$cond5 = 0, $or$cond7 = 0, $spec$select = 0.0, $spec$select398 = 0, $spec$select402 = 0, $spec$select403 = 0, $spec$select404 = 0.0, $spec$select405 = 0, $spec$select406 = 0;
 var $spec$select407 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 HEAPF64[tempDoublePtr>>3] = $0;$2 = HEAP32[tempDoublePtr>>2]|0;
 $3 = HEAP32[tempDoublePtr+4>>2]|0;
 HEAPF64[tempDoublePtr>>3] = $1;$4 = HEAP32[tempDoublePtr>>2]|0;
 $5 = HEAP32[tempDoublePtr+4>>2]|0;
 $6 = $3 & 2147483647;
 $7 = $5 & 2147483647;
 $8 = $7 | $4;
 $9 = ($8|0)==(0);
 if ($9) {
  $$0 = 1.0;
  return (+$$0);
 }
 $10 = ($3|0)==(1072693248);
 $11 = ($2|0)==(0);
 $or$cond = $11 & $10;
 if ($or$cond) {
  $$0 = 1.0;
  return (+$$0);
 }
 $12 = ($6>>>0)>(2146435072);
 if (!($12)) {
  $13 = ($6|0)==(2146435072);
  $14 = ($2|0)!=(0);
  $or$cond3 = $14 & $13;
  $15 = ($7>>>0)>(2146435072);
  $or$cond5 = $or$cond3 | $15;
  if (!($or$cond5)) {
   $16 = ($7|0)==(2146435072);
   $17 = ($4|0)!=(0);
   $or$cond7 = $17 & $16;
   if (!($or$cond7)) {
    $19 = ($3|0)<(0);
    do {
     if ($19) {
      $20 = ($7>>>0)>(1128267775);
      if ($20) {
       $$0392 = 2;
       label = 14;
      } else {
       $21 = ($7>>>0)>(1072693247);
       if ($21) {
        $22 = $7 >>> 20;
        $23 = ($7>>>0)>(1094713343);
        if ($23) {
         $24 = (1075 - ($22))|0;
         $25 = $4 >>> $24;
         $26 = $25 << $24;
         $27 = ($26|0)==($4|0);
         $28 = $25 & 1;
         $29 = (2 - ($28))|0;
         $spec$select402 = $27 ? $29 : 0;
         $$0392 = $spec$select402;
         label = 14;
         break;
        }
        $30 = ($4|0)==(0);
        if ($30) {
         $31 = (1043 - ($22))|0;
         $32 = $7 >>> $31;
         $33 = $32 << $31;
         $34 = ($33|0)==($7|0);
         $35 = $32 & 1;
         $36 = (2 - ($35))|0;
         $spec$select403 = $34 ? $36 : 0;
         $$0392400 = $spec$select403;
         label = 15;
        } else {
         $$0392399 = 0;
        }
       } else {
        $$0392 = 0;
        label = 14;
       }
      }
     } else {
      $$0392 = 0;
      label = 14;
     }
    } while(0);
    if ((label|0) == 14) {
     $37 = ($4|0)==(0);
     if ($37) {
      $$0392400 = $$0392;
      label = 15;
     } else {
      $$0392399 = $$0392;
     }
    }
    if ((label|0) == 15) {
     if ($16) {
      $38 = (($6) + -1072693248)|0;
      $39 = $38 | $2;
      $40 = ($39|0)==(0);
      if ($40) {
       $$0 = 1.0;
       return (+$$0);
      }
      $41 = ($6>>>0)>(1072693247);
      $42 = ($5|0)>(-1);
      if ($41) {
       $43 = $42 ? $1 : 0.0;
       $$0 = $43;
       return (+$$0);
      } else {
       $44 = - $1;
       $45 = $42 ? 0.0 : $44;
       $$0 = $45;
       return (+$$0);
      }
     }
     $46 = ($7|0)==(1072693248);
     if ($46) {
      $47 = ($5|0)>(-1);
      $48 = 1.0 / $0;
      $spec$select404 = $47 ? $0 : $48;
      return (+$spec$select404);
     }
     $49 = ($5|0)==(1073741824);
     if ($49) {
      $50 = $0 * $0;
      $$0 = $50;
      return (+$$0);
     }
     $51 = ($5|0)==(1071644672);
     $52 = ($3|0)>(-1);
     $or$cond14 = $52 & $51;
     if ($or$cond14) {
      $53 = (+Math_sqrt((+$0)));
      $$0 = $53;
      return (+$$0);
     } else {
      $$0392399 = $$0392400;
     }
    }
    $54 = (+Math_abs((+$0)));
    if ($11) {
     $55 = ($6|0)==(0);
     $56 = $6 | 1073741824;
     $57 = ($56|0)==(2146435072);
     $58 = $55 | $57;
     if ($58) {
      $59 = ($5|0)<(0);
      $60 = 1.0 / $54;
      $$0385 = $59 ? $60 : $54;
      if (!($19)) {
       $$0 = $$0385;
       return (+$$0);
      }
      $61 = (($6) + -1072693248)|0;
      $62 = $$0392399 | $61;
      $63 = ($62|0)==(0);
      if (!($63)) {
       $66 = ($$0392399|0)==(1);
       $67 = - $$0385;
       $spec$select = $66 ? $67 : $$0385;
       return (+$spec$select);
      }
      $64 = $$0385 - $$0385;
      $65 = $64 / $64;
      $$0 = $65;
      return (+$$0);
     }
    }
    L55: do {
     if ($19) {
      switch ($$0392399|0) {
      case 0:  {
       break;
      }
      case 1:  {
       $$0390 = -1.0;
       break L55;
       break;
      }
      default: {
       $$0390 = 1.0;
       break L55;
      }
      }
      $68 = $0 - $0;
      $69 = $68 / $68;
      $$0 = $69;
      return (+$$0);
     } else {
      $$0390 = 1.0;
     }
    } while(0);
    $70 = ($7>>>0)>(1105199104);
    do {
     if ($70) {
      $71 = ($7>>>0)>(1139802112);
      if ($71) {
       $72 = ($6>>>0)<(1072693248);
       if ($72) {
        $73 = ($5|0)<(0);
        $$ = $73 ? inf : 0.0;
        $$0 = $$;
        return (+$$0);
       } else {
        $74 = ($5|0)>(0);
        $$12 = $74 ? inf : 0.0;
        $$0 = $$12;
        return (+$$0);
       }
      }
      $75 = ($6>>>0)<(1072693247);
      if ($75) {
       $76 = ($5|0)<(0);
       $77 = $$0390 * 1.0000000000000001E+300;
       $78 = $77 * 1.0000000000000001E+300;
       $79 = $$0390 * 1.0E-300;
       $80 = $79 * 1.0E-300;
       $81 = $76 ? $78 : $80;
       $$0 = $81;
       return (+$$0);
      }
      $82 = ($6>>>0)>(1072693248);
      if (!($82)) {
       $89 = $54 + -1.0;
       $90 = $89 * $89;
       $91 = $89 * 0.25;
       $92 = 0.33333333333333331 - $91;
       $93 = $89 * $92;
       $94 = 0.5 - $93;
       $95 = $90 * $94;
       $96 = $89 * 1.4426950216293335;
       $97 = $89 * 1.9259629911266175E-8;
       $98 = $95 * 1.4426950408889634;
       $99 = $97 - $98;
       $100 = $96 + $99;
       HEAPF64[tempDoublePtr>>3] = $100;$101 = HEAP32[tempDoublePtr>>2]|0;
       $102 = HEAP32[tempDoublePtr+4>>2]|0;
       HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $102;$103 = +HEAPF64[tempDoublePtr>>3];
       $104 = $103 - $96;
       $$0388 = $103;$$sink = $99;$$sink410 = $104;
       break;
      }
      $83 = ($5|0)>(0);
      $84 = $$0390 * 1.0000000000000001E+300;
      $85 = $84 * 1.0000000000000001E+300;
      $86 = $$0390 * 1.0E-300;
      $87 = $86 * 1.0E-300;
      $88 = $83 ? $85 : $87;
      $$0 = $88;
      return (+$$0);
     } else {
      $105 = ($6>>>0)<(1048576);
      $106 = $54 * 9007199254740992.0;
      HEAPF64[tempDoublePtr>>3] = $106;$107 = HEAP32[tempDoublePtr>>2]|0;
      $108 = HEAP32[tempDoublePtr+4>>2]|0;
      $$0396 = $105 ? $108 : $6;
      $$0386 = $105 ? $106 : $54;
      $109 = $$0396 >> 20;
      $110 = $105 ? -1076 : -1023;
      $111 = (($110) + ($109))|0;
      $112 = $$0396 & 1048575;
      $113 = $112 | 1072693248;
      $114 = ($112>>>0)<(235663);
      if ($114) {
       $$0391 = 0;$$1394 = $111;$$1397 = $113;
      } else {
       $115 = ($112>>>0)<(767610);
       $116 = (($113) + -1048576)|0;
       $spec$select405 = $115 ? $113 : $116;
       $not$ = $115 ^ 1;
       $117 = $not$&1;
       $spec$select406 = (($111) + ($117))|0;
       $spec$select407 = $115&1;
       $$0391 = $spec$select407;$$1394 = $spec$select406;$$1397 = $spec$select405;
      }
      HEAPF64[tempDoublePtr>>3] = $$0386;$118 = HEAP32[tempDoublePtr>>2]|0;
      $119 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = $118;HEAP32[tempDoublePtr+4>>2] = $$1397;$120 = +HEAPF64[tempDoublePtr>>3];
      $121 = (118048 + ($$0391<<3)|0);
      $122 = +HEAPF64[$121>>3];
      $123 = $120 - $122;
      $124 = $122 + $120;
      $125 = 1.0 / $124;
      $126 = $123 * $125;
      HEAPF64[tempDoublePtr>>3] = $126;$127 = HEAP32[tempDoublePtr>>2]|0;
      $128 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $128;$129 = +HEAPF64[tempDoublePtr>>3];
      $130 = $$1397 >> 1;
      $131 = $130 | 536870912;
      $132 = (($131) + 524288)|0;
      $133 = $$0391 << 18;
      $134 = (($132) + ($133))|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $134;$135 = +HEAPF64[tempDoublePtr>>3];
      $136 = $135 - $122;
      $137 = $120 - $136;
      $138 = $135 * $129;
      $139 = $123 - $138;
      $140 = $137 * $129;
      $141 = $139 - $140;
      $142 = $125 * $141;
      $143 = $126 * $126;
      $144 = $143 * $143;
      $145 = $143 * 0.20697501780033842;
      $146 = $145 + 0.23066074577556175;
      $147 = $143 * $146;
      $148 = $147 + 0.27272812380853401;
      $149 = $143 * $148;
      $150 = $149 + 0.33333332981837743;
      $151 = $143 * $150;
      $152 = $151 + 0.42857142857855018;
      $153 = $143 * $152;
      $154 = $153 + 0.59999999999999465;
      $155 = $144 * $154;
      $156 = $126 + $129;
      $157 = $156 * $142;
      $158 = $157 + $155;
      $159 = $129 * $129;
      $160 = $159 + 3.0;
      $161 = $160 + $158;
      HEAPF64[tempDoublePtr>>3] = $161;$162 = HEAP32[tempDoublePtr>>2]|0;
      $163 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $163;$164 = +HEAPF64[tempDoublePtr>>3];
      $165 = $164 + -3.0;
      $166 = $165 - $159;
      $167 = $158 - $166;
      $168 = $129 * $164;
      $169 = $142 * $164;
      $170 = $126 * $167;
      $171 = $169 + $170;
      $172 = $168 + $171;
      HEAPF64[tempDoublePtr>>3] = $172;$173 = HEAP32[tempDoublePtr>>2]|0;
      $174 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $174;$175 = +HEAPF64[tempDoublePtr>>3];
      $176 = $175 - $168;
      $177 = $171 - $176;
      $178 = $175 * 0.96179670095443726;
      $179 = $175 * 7.0284616509527583E-9;
      $180 = $177 * 0.96179669392597555;
      $181 = $180 - $179;
      $182 = (118064 + ($$0391<<3)|0);
      $183 = +HEAPF64[$182>>3];
      $184 = $183 + $181;
      $185 = (+($$1394|0));
      $186 = $178 + $184;
      $187 = (118080 + ($$0391<<3)|0);
      $188 = +HEAPF64[$187>>3];
      $189 = $188 + $186;
      $190 = $189 + $185;
      HEAPF64[tempDoublePtr>>3] = $190;$191 = HEAP32[tempDoublePtr>>2]|0;
      $192 = HEAP32[tempDoublePtr+4>>2]|0;
      HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $192;$193 = +HEAPF64[tempDoublePtr>>3];
      $194 = $193 - $185;
      $195 = $194 - $188;
      $196 = $195 - $178;
      $$0388 = $193;$$sink = $184;$$sink410 = $196;
     }
    } while(0);
    $197 = $$sink - $$sink410;
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $5;$198 = +HEAPF64[tempDoublePtr>>3];
    $199 = $1 - $198;
    $200 = $199 * $$0388;
    $201 = $197 * $1;
    $202 = $201 + $200;
    $203 = $$0388 * $198;
    $204 = $203 + $202;
    HEAPF64[tempDoublePtr>>3] = $204;$205 = HEAP32[tempDoublePtr>>2]|0;
    $206 = HEAP32[tempDoublePtr+4>>2]|0;
    $207 = ($206|0)>(1083179007);
    if ($207) {
     $208 = (($206) + -1083179008)|0;
     $209 = $208 | $205;
     $210 = ($209|0)==(0);
     if (!($210)) {
      $211 = $$0390 * 1.0000000000000001E+300;
      $212 = $211 * 1.0000000000000001E+300;
      $$0 = $212;
      return (+$$0);
     }
     $213 = $202 + 8.0085662595372941E-17;
     $214 = $204 - $203;
     $215 = $213 > $214;
     if ($215) {
      $216 = $$0390 * 1.0000000000000001E+300;
      $217 = $216 * 1.0000000000000001E+300;
      $$0 = $217;
      return (+$$0);
     }
    } else {
     $218 = $206 & 2147482624;
     $219 = ($218>>>0)>(1083231231);
     if ($219) {
      $220 = (($206) + 1064252416)|0;
      $221 = $220 | $205;
      $222 = ($221|0)==(0);
      if (!($222)) {
       $223 = $$0390 * 1.0E-300;
       $224 = $223 * 1.0E-300;
       $$0 = $224;
       return (+$$0);
      }
      $225 = $204 - $203;
      $226 = !($202 <= $225);
      if (!($226)) {
       $227 = $$0390 * 1.0E-300;
       $228 = $227 * 1.0E-300;
       $$0 = $228;
       return (+$$0);
      }
     }
    }
    $229 = $206 & 2147483647;
    $230 = ($229>>>0)>(1071644672);
    if ($230) {
     $231 = $229 >>> 20;
     $232 = (($231) + -1022)|0;
     $233 = 1048576 >>> $232;
     $234 = (($233) + ($206))|0;
     $235 = $234 >>> 20;
     $236 = $235 & 2047;
     $237 = (($236) + -1023)|0;
     $238 = -1048576 >> $237;
     $239 = $238 & $234;
     HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $239;$240 = +HEAPF64[tempDoublePtr>>3];
     $241 = $234 & 1048575;
     $242 = $241 | 1048576;
     $243 = (1043 - ($236))|0;
     $244 = $242 >>> $243;
     $245 = ($206|0)<(0);
     $246 = (0 - ($244))|0;
     $spec$select398 = $245 ? $246 : $244;
     $247 = $203 - $240;
     $$pre = $202 + $247;
     HEAPF64[tempDoublePtr>>3] = $$pre;$248 = HEAP32[tempDoublePtr>>2]|0;
     $249 = HEAP32[tempDoublePtr+4>>2]|0;
     $$0387 = $247;$$3 = $spec$select398;$251 = $249;$288 = $248;
    } else {
     $$0387 = $203;$$3 = 0;$251 = $206;$288 = $205;
    }
    HEAP32[tempDoublePtr>>2] = 0;HEAP32[tempDoublePtr+4>>2] = $251;$250 = +HEAPF64[tempDoublePtr>>3];
    $252 = $250 * 0.69314718246459961;
    $253 = $250 - $$0387;
    $254 = $202 - $253;
    $255 = $254 * 0.69314718055994529;
    $256 = $250 * 1.904654299957768E-9;
    $257 = $255 - $256;
    $258 = $252 + $257;
    $259 = $258 - $252;
    $260 = $257 - $259;
    $261 = $258 * $258;
    $262 = $261 * 4.1381367970572385E-8;
    $263 = $262 + -1.6533902205465252E-6;
    $264 = $261 * $263;
    $265 = $264 + 6.6137563214379344E-5;
    $266 = $261 * $265;
    $267 = $266 + -0.0027777777777015593;
    $268 = $261 * $267;
    $269 = $268 + 0.16666666666666602;
    $270 = $261 * $269;
    $271 = $258 - $270;
    $272 = $258 * $271;
    $273 = $271 + -2.0;
    $274 = $272 / $273;
    $275 = $258 * $260;
    $276 = $260 + $275;
    $277 = $274 - $276;
    $278 = $277 - $258;
    $279 = 1.0 - $278;
    HEAPF64[tempDoublePtr>>3] = $279;$280 = HEAP32[tempDoublePtr>>2]|0;
    $281 = HEAP32[tempDoublePtr+4>>2]|0;
    $282 = $$3 << 20;
    $283 = (($282) + ($281))|0;
    $284 = ($283|0)<(1048576);
    if ($284) {
     $285 = (+_scalbn($279,$$3));
     $$2 = $285;
    } else {
     HEAP32[tempDoublePtr>>2] = $280;HEAP32[tempDoublePtr+4>>2] = $283;$286 = +HEAPF64[tempDoublePtr>>3];
     $$2 = $286;
    }
    $287 = $$0390 * $$2;
    $$0 = $287;
    return (+$$0);
   }
  }
 }
 $18 = $0 + $1;
 $$0 = $18;
 return (+$$0);
}
function ___emscripten_environ_constructor() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 ___buildEnvironment((144788|0));
 return;
}
function __get_tzname() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144772|0);
}
function __get_daylight() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144780|0);
}
function __get_timezone() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144784|0);
}
function __get_environ() {
 var label = 0, sp = 0;
 sp = STACKTOP;
 return (144788|0);
}
function runPostSets() {
}
function ___muldsi3($a, $b) {
    $a = $a | 0;
    $b = $b | 0;
    var $1 = 0, $2 = 0, $3 = 0, $6 = 0, $8 = 0, $11 = 0, $12 = 0;
    $1 = $a & 65535;
    $2 = $b & 65535;
    $3 = Math_imul($2, $1) | 0;
    $6 = $a >>> 16;
    $8 = ($3 >>> 16) + (Math_imul($2, $6) | 0) | 0;
    $11 = $b >>> 16;
    $12 = Math_imul($11, $1) | 0;
    return (tempRet0 = (($8 >>> 16) + (Math_imul($11, $6) | 0) | 0) + ((($8 & 65535) + $12 | 0) >>> 16) | 0, 0 | ($8 + $12 << 16 | $3 & 65535)) | 0;
}
function ___muldi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $x_sroa_0_0_extract_trunc = 0, $y_sroa_0_0_extract_trunc = 0, $1$0 = 0, $1$1 = 0, $2 = 0;
    $x_sroa_0_0_extract_trunc = $a$0;
    $y_sroa_0_0_extract_trunc = $b$0;
    $1$0 = ___muldsi3($x_sroa_0_0_extract_trunc, $y_sroa_0_0_extract_trunc) | 0;
    $1$1 = tempRet0;
    $2 = Math_imul($a$1, $y_sroa_0_0_extract_trunc) | 0;
    return (tempRet0 = ((Math_imul($b$1, $x_sroa_0_0_extract_trunc) | 0) + $2 | 0) + $1$1 | $1$1 & 0, 0 | $1$0 & -1) | 0;
}
function _i64Add(a, b, c, d) {
    /*
      x = a + b*2^32
      y = c + d*2^32
      result = l + h*2^32
    */
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a + c)>>>0;
    h = (b + d + (((l>>>0) < (a>>>0))|0))>>>0; // Add carry from low word to high word on overflow.
    return ((tempRet0 = h,l|0)|0);
}
function _i64Subtract(a, b, c, d) {
    a = a|0; b = b|0; c = c|0; d = d|0;
    var l = 0, h = 0;
    l = (a - c)>>>0;
    h = (b - d)>>>0;
    h = (b - d - (((c>>>0) > (a>>>0))|0))>>>0; // Borrow one from high word to low word on underflow.
    return ((tempRet0 = h,l|0)|0);
}
function ___udivmoddi4($a$0, $a$1, $b$0, $b$1, $rem) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    $rem = $rem | 0;
    var $n_sroa_0_0_extract_trunc = 0, $n_sroa_1_4_extract_shift$0 = 0, $n_sroa_1_4_extract_trunc = 0, $d_sroa_0_0_extract_trunc = 0, $d_sroa_1_4_extract_shift$0 = 0, $d_sroa_1_4_extract_trunc = 0, $4 = 0, $17 = 0, $37 = 0, $49 = 0, $51 = 0, $57 = 0, $58 = 0, $66 = 0, $78 = 0, $86 = 0, $88 = 0, $89 = 0, $91 = 0, $92 = 0, $95 = 0, $105 = 0, $117 = 0, $119 = 0, $125 = 0, $126 = 0, $130 = 0, $q_sroa_1_1_ph = 0, $q_sroa_0_1_ph = 0, $r_sroa_1_1_ph = 0, $r_sroa_0_1_ph = 0, $sr_1_ph = 0, $d_sroa_0_0_insert_insert99$0 = 0, $d_sroa_0_0_insert_insert99$1 = 0, $137$0 = 0, $137$1 = 0, $carry_0203 = 0, $sr_1202 = 0, $r_sroa_0_1201 = 0, $r_sroa_1_1200 = 0, $q_sroa_0_1199 = 0, $q_sroa_1_1198 = 0, $147 = 0, $149 = 0, $r_sroa_0_0_insert_insert42$0 = 0, $r_sroa_0_0_insert_insert42$1 = 0, $150$1 = 0, $151$0 = 0, $152 = 0, $154$0 = 0, $r_sroa_0_0_extract_trunc = 0, $r_sroa_1_4_extract_trunc = 0, $155 = 0, $carry_0_lcssa$0 = 0, $carry_0_lcssa$1 = 0, $r_sroa_0_1_lcssa = 0, $r_sroa_1_1_lcssa = 0, $q_sroa_0_1_lcssa = 0, $q_sroa_1_1_lcssa = 0, $q_sroa_0_0_insert_ext75$0 = 0, $q_sroa_0_0_insert_ext75$1 = 0, $q_sroa_0_0_insert_insert77$1 = 0, $_0$0 = 0, $_0$1 = 0;
    $n_sroa_0_0_extract_trunc = $a$0;
    $n_sroa_1_4_extract_shift$0 = $a$1;
    $n_sroa_1_4_extract_trunc = $n_sroa_1_4_extract_shift$0;
    $d_sroa_0_0_extract_trunc = $b$0;
    $d_sroa_1_4_extract_shift$0 = $b$1;
    $d_sroa_1_4_extract_trunc = $d_sroa_1_4_extract_shift$0;
    if (($n_sroa_1_4_extract_trunc | 0) == 0) {
      $4 = ($rem | 0) != 0;
      if (($d_sroa_1_4_extract_trunc | 0) == 0) {
        if ($4) {
          HEAP32[$rem >> 2] = ($n_sroa_0_0_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
          HEAP32[$rem + 4 >> 2] = 0;
        }
        $_0$1 = 0;
        $_0$0 = ($n_sroa_0_0_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$4) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      }
    }
    $17 = ($d_sroa_1_4_extract_trunc | 0) == 0;
    do {
      if (($d_sroa_0_0_extract_trunc | 0) == 0) {
        if ($17) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_0_0_extract_trunc >>> 0);
            HEAP32[$rem + 4 >> 2] = 0;
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_0_0_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        if (($n_sroa_0_0_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0;
            HEAP32[$rem + 4 >> 2] = ($n_sroa_1_4_extract_trunc >>> 0) % ($d_sroa_1_4_extract_trunc >>> 0);
          }
          $_0$1 = 0;
          $_0$0 = ($n_sroa_1_4_extract_trunc >>> 0) / ($d_sroa_1_4_extract_trunc >>> 0) >>> 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $37 = $d_sroa_1_4_extract_trunc - 1 | 0;
        if (($37 & $d_sroa_1_4_extract_trunc | 0) == 0) {
          if (($rem | 0) != 0) {
            HEAP32[$rem >> 2] = 0 | $a$0 & -1;
            HEAP32[$rem + 4 >> 2] = $37 & $n_sroa_1_4_extract_trunc | $a$1 & 0;
          }
          $_0$1 = 0;
          $_0$0 = $n_sroa_1_4_extract_trunc >>> ((_llvm_cttz_i32($d_sroa_1_4_extract_trunc | 0) | 0) >>> 0);
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $49 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
        $51 = $49 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
        if ($51 >>> 0 <= 30) {
          $57 = $51 + 1 | 0;
          $58 = 31 - $51 | 0;
          $sr_1_ph = $57;
          $r_sroa_0_1_ph = $n_sroa_1_4_extract_trunc << $58 | $n_sroa_0_0_extract_trunc >>> ($57 >>> 0);
          $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($57 >>> 0);
          $q_sroa_0_1_ph = 0;
          $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $58;
          break;
        }
        if (($rem | 0) == 0) {
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        HEAP32[$rem >> 2] = 0 | $a$0 & -1;
        HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
        $_0$1 = 0;
        $_0$0 = 0;
        return (tempRet0 = $_0$1, $_0$0) | 0;
      } else {
        if (!$17) {
          $117 = Math_clz32($d_sroa_1_4_extract_trunc | 0) | 0;
          $119 = $117 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          if ($119 >>> 0 <= 31) {
            $125 = $119 + 1 | 0;
            $126 = 31 - $119 | 0;
            $130 = $119 - 31 >> 31;
            $sr_1_ph = $125;
            $r_sroa_0_1_ph = $n_sroa_0_0_extract_trunc >>> ($125 >>> 0) & $130 | $n_sroa_1_4_extract_trunc << $126;
            $r_sroa_1_1_ph = $n_sroa_1_4_extract_trunc >>> ($125 >>> 0) & $130;
            $q_sroa_0_1_ph = 0;
            $q_sroa_1_1_ph = $n_sroa_0_0_extract_trunc << $126;
            break;
          }
          if (($rem | 0) == 0) {
            $_0$1 = 0;
            $_0$0 = 0;
            return (tempRet0 = $_0$1, $_0$0) | 0;
          }
          HEAP32[$rem >> 2] = 0 | $a$0 & -1;
          HEAP32[$rem + 4 >> 2] = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$1 = 0;
          $_0$0 = 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
        $66 = $d_sroa_0_0_extract_trunc - 1 | 0;
        if (($66 & $d_sroa_0_0_extract_trunc | 0) != 0) {
          $86 = (Math_clz32($d_sroa_0_0_extract_trunc | 0) | 0) + 33 | 0;
          $88 = $86 - (Math_clz32($n_sroa_1_4_extract_trunc | 0) | 0) | 0;
          $89 = 64 - $88 | 0;
          $91 = 32 - $88 | 0;
          $92 = $91 >> 31;
          $95 = $88 - 32 | 0;
          $105 = $95 >> 31;
          $sr_1_ph = $88;
          $r_sroa_0_1_ph = $91 - 1 >> 31 & $n_sroa_1_4_extract_trunc >>> ($95 >>> 0) | ($n_sroa_1_4_extract_trunc << $91 | $n_sroa_0_0_extract_trunc >>> ($88 >>> 0)) & $105;
          $r_sroa_1_1_ph = $105 & $n_sroa_1_4_extract_trunc >>> ($88 >>> 0);
          $q_sroa_0_1_ph = $n_sroa_0_0_extract_trunc << $89 & $92;
          $q_sroa_1_1_ph = ($n_sroa_1_4_extract_trunc << $89 | $n_sroa_0_0_extract_trunc >>> ($95 >>> 0)) & $92 | $n_sroa_0_0_extract_trunc << $91 & $88 - 33 >> 31;
          break;
        }
        if (($rem | 0) != 0) {
          HEAP32[$rem >> 2] = $66 & $n_sroa_0_0_extract_trunc;
          HEAP32[$rem + 4 >> 2] = 0;
        }
        if (($d_sroa_0_0_extract_trunc | 0) == 1) {
          $_0$1 = $n_sroa_1_4_extract_shift$0 | $a$1 & 0;
          $_0$0 = 0 | $a$0 & -1;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        } else {
          $78 = _llvm_cttz_i32($d_sroa_0_0_extract_trunc | 0) | 0;
          $_0$1 = 0 | $n_sroa_1_4_extract_trunc >>> ($78 >>> 0);
          $_0$0 = $n_sroa_1_4_extract_trunc << 32 - $78 | $n_sroa_0_0_extract_trunc >>> ($78 >>> 0) | 0;
          return (tempRet0 = $_0$1, $_0$0) | 0;
        }
      }
    } while (0);
    if (($sr_1_ph | 0) == 0) {
      $q_sroa_1_1_lcssa = $q_sroa_1_1_ph;
      $q_sroa_0_1_lcssa = $q_sroa_0_1_ph;
      $r_sroa_1_1_lcssa = $r_sroa_1_1_ph;
      $r_sroa_0_1_lcssa = $r_sroa_0_1_ph;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = 0;
    } else {
      $d_sroa_0_0_insert_insert99$0 = 0 | $b$0 & -1;
      $d_sroa_0_0_insert_insert99$1 = $d_sroa_1_4_extract_shift$0 | $b$1 & 0;
      $137$0 = _i64Add($d_sroa_0_0_insert_insert99$0 | 0, $d_sroa_0_0_insert_insert99$1 | 0, -1, -1) | 0;
      $137$1 = tempRet0;
      $q_sroa_1_1198 = $q_sroa_1_1_ph;
      $q_sroa_0_1199 = $q_sroa_0_1_ph;
      $r_sroa_1_1200 = $r_sroa_1_1_ph;
      $r_sroa_0_1201 = $r_sroa_0_1_ph;
      $sr_1202 = $sr_1_ph;
      $carry_0203 = 0;
      while (1) {
        $147 = $q_sroa_0_1199 >>> 31 | $q_sroa_1_1198 << 1;
        $149 = $carry_0203 | $q_sroa_0_1199 << 1;
        $r_sroa_0_0_insert_insert42$0 = 0 | ($r_sroa_0_1201 << 1 | $q_sroa_1_1198 >>> 31);
        $r_sroa_0_0_insert_insert42$1 = $r_sroa_0_1201 >>> 31 | $r_sroa_1_1200 << 1 | 0;
        _i64Subtract($137$0 | 0, $137$1 | 0, $r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0) | 0;
        $150$1 = tempRet0;
        $151$0 = $150$1 >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1;
        $152 = $151$0 & 1;
        $154$0 = _i64Subtract($r_sroa_0_0_insert_insert42$0 | 0, $r_sroa_0_0_insert_insert42$1 | 0, $151$0 & $d_sroa_0_0_insert_insert99$0 | 0, ((($150$1 | 0) < 0 ? -1 : 0) >> 31 | (($150$1 | 0) < 0 ? -1 : 0) << 1) & $d_sroa_0_0_insert_insert99$1 | 0) | 0;
        $r_sroa_0_0_extract_trunc = $154$0;
        $r_sroa_1_4_extract_trunc = tempRet0;
        $155 = $sr_1202 - 1 | 0;
        if (($155 | 0) == 0) {
          break;
        } else {
          $q_sroa_1_1198 = $147;
          $q_sroa_0_1199 = $149;
          $r_sroa_1_1200 = $r_sroa_1_4_extract_trunc;
          $r_sroa_0_1201 = $r_sroa_0_0_extract_trunc;
          $sr_1202 = $155;
          $carry_0203 = $152;
        }
      }
      $q_sroa_1_1_lcssa = $147;
      $q_sroa_0_1_lcssa = $149;
      $r_sroa_1_1_lcssa = $r_sroa_1_4_extract_trunc;
      $r_sroa_0_1_lcssa = $r_sroa_0_0_extract_trunc;
      $carry_0_lcssa$1 = 0;
      $carry_0_lcssa$0 = $152;
    }
    $q_sroa_0_0_insert_ext75$0 = $q_sroa_0_1_lcssa;
    $q_sroa_0_0_insert_ext75$1 = 0;
    $q_sroa_0_0_insert_insert77$1 = $q_sroa_1_1_lcssa | $q_sroa_0_0_insert_ext75$1;
    if (($rem | 0) != 0) {
      HEAP32[$rem >> 2] = 0 | $r_sroa_0_1_lcssa;
      HEAP32[$rem + 4 >> 2] = $r_sroa_1_1_lcssa | 0;
    }
    $_0$1 = (0 | $q_sroa_0_0_insert_ext75$0) >>> 31 | $q_sroa_0_0_insert_insert77$1 << 1 | ($q_sroa_0_0_insert_ext75$1 << 1 | $q_sroa_0_0_insert_ext75$0 >>> 31) & 0 | $carry_0_lcssa$1;
    $_0$0 = ($q_sroa_0_0_insert_ext75$0 << 1 | 0 >>> 31) & -2 | $carry_0_lcssa$0;
    return (tempRet0 = $_0$1, $_0$0) | 0;
}
function ___udivdi3($a$0, $a$1, $b$0, $b$1) {
    $a$0 = $a$0 | 0;
    $a$1 = $a$1 | 0;
    $b$0 = $b$0 | 0;
    $b$1 = $b$1 | 0;
    var $1$0 = 0;
    $1$0 = ___udivmoddi4($a$0, $a$1, $b$0, $b$1, 0) | 0;
    return $1$0 | 0;
}
function _bitshift64Lshr(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = high >>> bits;
      return (low >>> bits) | ((high&ander) << (32 - bits));
    }
    tempRet0 = 0;
    return (high >>> (bits - 32))|0;
}
function _bitshift64Shl(low, high, bits) {
    low = low|0; high = high|0; bits = bits|0;
    var ander = 0;
    if ((bits|0) < 32) {
      ander = ((1 << bits) - 1)|0;
      tempRet0 = (high << bits) | ((low&(ander << (32 - bits))) >>> (32 - bits));
      return low << bits;
    }
    tempRet0 = low << (bits - 32);
    return 0;
}
function _llvm_bswap_i32(x) {
    x = x|0;
    return (((x&0xff)<<24) | (((x>>8)&0xff)<<16) | (((x>>16)&0xff)<<8) | (x>>>24))|0;
}
function _llvm_minnum_f32(x, y) {
    x = +x;
    y = +y;
    if (x != x) return +y;
    if (y != y) return +x;
    return +Math_min(+x, +y);
}
function _llvm_minnum_f64(x, y) {
    x = +x;
    y = +y;
    if (x != x) return +y;
    if (y != y) return +x;
    return +Math_min(+x, +y);
}
function _memcpy(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    var aligned_dest_end = 0;
    var block_aligned_dest_end = 0;
    var dest_end = 0;
    // Test against a benchmarked cutoff limit for when HEAPU8.set() becomes faster to use.
    if ((num|0) >=
      8192
    ) {
      return _emscripten_memcpy_big(dest|0, src|0, num|0)|0;
    }

    ret = dest|0;
    dest_end = (dest + num)|0;
    if ((dest&3) == (src&3)) {
      // The initial unaligned < 4-byte front.
      while (dest & 3) {
        if ((num|0) == 0) return ret|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        dest = (dest+1)|0;
        src = (src+1)|0;
        num = (num-1)|0;
      }
      aligned_dest_end = (dest_end & -4)|0;
      block_aligned_dest_end = (aligned_dest_end - 64)|0;
      while ((dest|0) <= (block_aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        HEAP32[(((dest)+(4))>>2)]=((HEAP32[(((src)+(4))>>2)])|0);
        HEAP32[(((dest)+(8))>>2)]=((HEAP32[(((src)+(8))>>2)])|0);
        HEAP32[(((dest)+(12))>>2)]=((HEAP32[(((src)+(12))>>2)])|0);
        HEAP32[(((dest)+(16))>>2)]=((HEAP32[(((src)+(16))>>2)])|0);
        HEAP32[(((dest)+(20))>>2)]=((HEAP32[(((src)+(20))>>2)])|0);
        HEAP32[(((dest)+(24))>>2)]=((HEAP32[(((src)+(24))>>2)])|0);
        HEAP32[(((dest)+(28))>>2)]=((HEAP32[(((src)+(28))>>2)])|0);
        HEAP32[(((dest)+(32))>>2)]=((HEAP32[(((src)+(32))>>2)])|0);
        HEAP32[(((dest)+(36))>>2)]=((HEAP32[(((src)+(36))>>2)])|0);
        HEAP32[(((dest)+(40))>>2)]=((HEAP32[(((src)+(40))>>2)])|0);
        HEAP32[(((dest)+(44))>>2)]=((HEAP32[(((src)+(44))>>2)])|0);
        HEAP32[(((dest)+(48))>>2)]=((HEAP32[(((src)+(48))>>2)])|0);
        HEAP32[(((dest)+(52))>>2)]=((HEAP32[(((src)+(52))>>2)])|0);
        HEAP32[(((dest)+(56))>>2)]=((HEAP32[(((src)+(56))>>2)])|0);
        HEAP32[(((dest)+(60))>>2)]=((HEAP32[(((src)+(60))>>2)])|0);
        dest = (dest+64)|0;
        src = (src+64)|0;
      }
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP32[((dest)>>2)]=((HEAP32[((src)>>2)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    } else {
      // In the unaligned copy case, unroll a bit as well.
      aligned_dest_end = (dest_end - 4)|0;
      while ((dest|0) < (aligned_dest_end|0) ) {
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
        HEAP8[(((dest)+(1))>>0)]=((HEAP8[(((src)+(1))>>0)])|0);
        HEAP8[(((dest)+(2))>>0)]=((HEAP8[(((src)+(2))>>0)])|0);
        HEAP8[(((dest)+(3))>>0)]=((HEAP8[(((src)+(3))>>0)])|0);
        dest = (dest+4)|0;
        src = (src+4)|0;
      }
    }
    // The remaining unaligned < 4 byte tail.
    while ((dest|0) < (dest_end|0)) {
      HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      dest = (dest+1)|0;
      src = (src+1)|0;
    }
    return ret|0;
}
function _memmove(dest, src, num) {
    dest = dest|0; src = src|0; num = num|0;
    var ret = 0;
    if (((src|0) < (dest|0)) & ((dest|0) < ((src + num)|0))) {
      // Unlikely case: Copy backwards in a safe manner
      ret = dest;
      src = (src + num)|0;
      dest = (dest + num)|0;
      while ((num|0) > 0) {
        dest = (dest - 1)|0;
        src = (src - 1)|0;
        num = (num - 1)|0;
        HEAP8[((dest)>>0)]=((HEAP8[((src)>>0)])|0);
      }
      dest = ret;
    } else {
      _memcpy(dest, src, num) | 0;
    }
    return dest | 0;
}
function _memset(ptr, value, num) {
    ptr = ptr|0; value = value|0; num = num|0;
    var end = 0, aligned_end = 0, block_aligned_end = 0, value4 = 0;
    end = (ptr + num)|0;

    value = value & 0xff;
    if ((num|0) >= 67 /* 64 bytes for an unrolled loop + 3 bytes for unaligned head*/) {
      while ((ptr&3) != 0) {
        HEAP8[((ptr)>>0)]=value;
        ptr = (ptr+1)|0;
      }

      aligned_end = (end & -4)|0;
      block_aligned_end = (aligned_end - 64)|0;
      value4 = value | (value << 8) | (value << 16) | (value << 24);

      while((ptr|0) <= (block_aligned_end|0)) {
        HEAP32[((ptr)>>2)]=value4;
        HEAP32[(((ptr)+(4))>>2)]=value4;
        HEAP32[(((ptr)+(8))>>2)]=value4;
        HEAP32[(((ptr)+(12))>>2)]=value4;
        HEAP32[(((ptr)+(16))>>2)]=value4;
        HEAP32[(((ptr)+(20))>>2)]=value4;
        HEAP32[(((ptr)+(24))>>2)]=value4;
        HEAP32[(((ptr)+(28))>>2)]=value4;
        HEAP32[(((ptr)+(32))>>2)]=value4;
        HEAP32[(((ptr)+(36))>>2)]=value4;
        HEAP32[(((ptr)+(40))>>2)]=value4;
        HEAP32[(((ptr)+(44))>>2)]=value4;
        HEAP32[(((ptr)+(48))>>2)]=value4;
        HEAP32[(((ptr)+(52))>>2)]=value4;
        HEAP32[(((ptr)+(56))>>2)]=value4;
        HEAP32[(((ptr)+(60))>>2)]=value4;
        ptr = (ptr + 64)|0;
      }

      while ((ptr|0) < (aligned_end|0) ) {
        HEAP32[((ptr)>>2)]=value4;
        ptr = (ptr+4)|0;
      }
    }
    // The remaining bytes.
    while ((ptr|0) < (end|0)) {
      HEAP8[((ptr)>>0)]=value;
      ptr = (ptr+1)|0;
    }
    return (end-num)|0;
}
function _sbrk(increment) {
    increment = increment|0;
    var oldDynamicTop = 0;
    var oldDynamicTopOnChange = 0;
    var newDynamicTop = 0;
    var totalMemory = 0;
    oldDynamicTop = HEAP32[DYNAMICTOP_PTR>>2]|0;
    newDynamicTop = oldDynamicTop + increment | 0;

    if (((increment|0) > 0 & (newDynamicTop|0) < (oldDynamicTop|0)) // Detect and fail if we would wrap around signed 32-bit int.
      | (newDynamicTop|0) < 0) { // Also underflow, sbrk() should be able to be used to subtract.
      abortOnCannotGrowMemory()|0;
      ___setErrNo(12);
      return -1;
    }

    HEAP32[DYNAMICTOP_PTR>>2] = newDynamicTop;
    totalMemory = getTotalMemory()|0;
    if ((newDynamicTop|0) > (totalMemory|0)) {
      if ((enlargeMemory()|0) == 0) {
        HEAP32[DYNAMICTOP_PTR>>2] = oldDynamicTop;
        ___setErrNo(12);
        return -1;
      }
    }
    return oldDynamicTop|0;
}

  
//X = ftCall_X;


//ii = ftCall_ii;


//iii = ftCall_iii;


//iiii = ftCall_iiii;


//iiiii = ftCall_iiiii;


//iiiiii = ftCall_iiiiii;


//iiiiiii = ftCall_iiiiiii;


//v = ftCall_v;


//vi = ftCall_vi;


//vii = ftCall_vii;


//viii = ftCall_viii;


//viiii = ftCall_viiii;


//viiiiii = ftCall_viiiiii;


//viiiiiii = ftCall_viiiiiii;

function b0() {
 ; abort(0);return +0;
}














// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_X = [b0,_boxed_proxy_value_init,_boxed_proxy_value_free,_boxed_proxy_value_copy,_boxed_proxy_value_peek_pointer,_boxed_proxy_collect_value,_boxed_proxy_lcopy_value,_g_value_object_init,_g_value_object_free_value,_g_value_object_copy_value,_g_value_object_peek_pointer,_g_value_object_collect_value,_g_value_object_lcopy_value,_value_flags_enum_init,_value_flags_enum_copy_value,_value_flags_enum_collect_value,_value_flags_enum_lcopy_value,_g_param_spec_class_base_init,_g_param_spec_class_base_finalize,_g_param_spec_class_init,_g_param_spec_init,_value_param_init,_value_param_free_value,_value_param_copy_value,_value_param_peek_pointer,_value_param_collect_value,_value_param_lcopy_value,_param_spec_generic_class_init,_param_char_init
,_param_char_set_default,_param_char_validate,_param_int_values_cmp,_param_uchar_init,_param_uchar_set_default,_param_uchar_validate,_param_uint_values_cmp,_param_boolean_set_default,_param_boolean_validate,_param_int_init,_param_int_set_default,_param_int_validate,_param_uint_init,_param_uint_set_default,_param_uint_validate,_param_long_init,_param_long_set_default,_param_long_validate,_param_long_values_cmp,_param_ulong_init,_param_ulong_set_default,_param_ulong_validate,_param_ulong_values_cmp,_param_int64_init,_param_int64_set_default,_param_int64_validate,_param_int64_values_cmp,_param_uint64_init,_param_uint64_set_default,_param_uint64_validate
,_param_uint64_values_cmp,_param_unichar_init,_param_unichar_set_default,_param_unichar_validate,_param_unichar_values_cmp,_param_enum_init,_param_enum_finalize,_param_enum_set_default,_param_enum_validate,_param_flags_init,_param_flags_finalize,_param_flags_set_default,_param_flags_validate,_param_float_init,_param_float_set_default,_param_float_validate,_param_float_values_cmp,_param_double_init,_param_double_set_default,_param_double_validate,_param_double_values_cmp,_param_string_init,_param_string_finalize,_param_string_set_default,_param_string_validate,_param_string_values_cmp,_param_param_init,_param_param_set_default,_param_param_validate,_param_pointer_values_cmp
,_param_boxed_init,_param_boxed_set_default,_param_boxed_validate,_param_boxed_values_cmp,_param_pointer_init,_param_pointer_set_default,_param_pointer_validate,_param_value_array_init,_param_value_array_finalize,_param_value_array_set_default,_param_value_array_validate,_param_value_array_values_cmp,_param_object_init,_param_object_set_default,_param_object_validate,_param_object_values_cmp,_param_override_init,_param_override_finalize,_param_override_set_default,_param_override_validate,_param_override_values_cmp,_param_gtype_init,_param_gtype_set_default,_param_gtype_validate,_param_gtype_values_cmp,_param_variant_init,_param_variant_finalize,_param_variant_set_default,_param_variant_validate,_param_variant_values_cmp
,_value_init_long0,_value_copy_long0,_value_collect_int,_value_lcopy_char,_value_lcopy_boolean,_value_lcopy_int,_value_collect_long,_value_lcopy_long,_value_init_int64,_value_copy_int64,_value_collect_int64,_value_lcopy_int64,_value_init_float,_value_copy_float,_value_collect_float,_value_lcopy_float,_value_init_double,_value_copy_double,_value_collect_double,_value_lcopy_double,_value_init_string,_value_free_string,_value_copy_string,_value_peek_pointer0,_value_collect_string,_value_lcopy_string,_value_init_pointer,_value_copy_pointer,_value_collect_pointer,_value_lcopy_pointer
,_value_free_variant,_value_copy_variant,_value_collect_variant,_value_lcopy_variant,_system_icomparable_base_init,_system_icloneable_base_init,_system_io_buffered_reader_class_init,_system_io_buffered_reader_instance_init,_system_io_emscripten_file_system_class_init,_system_io_emscripten_file_system_instance_init,_system_io_file_class_init,_system_io_file_instance_init,_system_io_file_system_icomparable_interface_init,_system_io_file_handle_class_init,_system_io_file_handle_instance_init,_system_io_file_input_stream_class_init,_system_io_file_input_stream_instance_init,_system_io_file_system_class_init,_system_io_file_system_instance_init,_system_io_input_stream_class_init,_system_io_input_stream_instance_init,_system_io_input_stream_system_io_closeable_interface_init,_system_io_input_stream_reader_class_init,_system_io_input_stream_reader_instance_init,_system_io_closeable_base_init,_system_io_reader_class_init,_system_io_reader_instance_init,_system_io_reader_system_io_closeable_interface_init,_object_class_init,_object_instance_init
,_system_collections_generic_collection_class_init,_system_collections_generic_collection_instance_init,_system_collections_generic_dictionary_class_init,_system_collections_generic_dictionary_instance_init,_system_collections_generic_dictionary_value_collection_class_init,_system_collections_generic_dictionary_value_collection_instance_init,_system_collections_generic_dictionary_value_iterator_class_init,_system_collections_generic_dictionary_value_iterator_instance_init,_system_collections_generic_dictionary_key_set_class_init,_system_collections_generic_dictionary_key_set_instance_init,_system_collections_generic_dictionary_key_iterator_class_init,_system_collections_generic_dictionary_key_iterator_instance_init,_system_collections_generic_dictionary_map_iterator_class_init,_system_collections_generic_dictionary_map_iterator_instance_init,_system_collections_generic_iterable_class_init,_system_collections_generic_iterable_instance_init,_system_collections_generic_iterator_class_init,_system_collections_generic_iterator_instance_init,_system_collections_generic_map_iterator_class_init,_system_collections_generic_map_iterator_instance_init,_system_collections_generic_map_class_init,_system_collections_generic_map_instance_init,_system_collections_generic_set_class_init,_system_collections_generic_set_instance_init,_stbi__stdio_read,_stbi__stdio_skip,_stbi__stdio_eof,_game_class_init,_game_instance_init,_image_class_init
,_image_instance_init,_shader_class_init,_shader_instance_init,___stdio_close,___stdio_write,___stdio_seek,___stdout_write,_sn_write,_g_value_array_copy,_g_value_array_free,_g_type_iface_meta_marshal,_g_type_class_meta_marshal,_g_object_base_class_init,_g_object_base_class_finalize,_g_object_do_class_init,_g_object_init,_g_value_object_transform_value,_g_object_constructor,_g_object_constructed,_g_object_do_set_property,_g_object_do_get_property,_g_object_real_dispose,_g_object_finalize,_g_object_dispatch_properties_changed,_g_object_to_string,_g_object_equals,_g_object_get_hash_code,_object_interface_check_properties,_g_initially_unowned_class_intern_init,_g_initially_unowned_init
,_g_enum_class_init,_value_param_transform_value,_g_param_spec_finalize,_param_spec_pool_hash,_param_spec_pool_equals,_pool_list,_pool_depth_list,_pool_depth_list_for_interface,_pspec_compare_id,_default_value_set_default,_default_values_cmp,_g_direct_hash,_handler_hash,_handler_equal,_invalid_closure_notify,_g_str_hash,_g_str_equal,_system_io_buffered_reader_real_ReadOne,_system_io_buffered_reader_real_Read,_system_io_buffered_reader_real_Skip,_system_io_buffered_reader_real_Ready,_system_io_buffered_reader_real_MarkSupported,_system_io_buffered_reader_real_Mark,_system_io_buffered_reader_real_Reset,_system_io_buffered_reader_real_Close,_system_io_buffered_reader_finalize,_system_io_emscripten_file_system_real_GetSeparator,_system_io_emscripten_file_system_real_GetPathSeparator,_system_io_emscripten_file_system_real_Normalize,_system_io_emscripten_file_system_real_PrefixLength
,_system_io_emscripten_file_system_real_Resolve,_system_io_emscripten_file_system_real_GetDefaultParent,_system_io_emscripten_file_system_real_FromURIPath,_system_io_emscripten_file_system_real_IsAbsolute,_system_io_emscripten_file_system_real_ResolveFile,_system_io_emscripten_file_system_real_Canonicalize,_system_io_emscripten_file_system_real_GetBooleanAttributes,_system_io_emscripten_file_system_real_CheckAccess,_system_io_emscripten_file_system_real_GetLastModifiedTime,_system_io_emscripten_file_system_real_GetLength,_system_io_emscripten_file_system_real_SetPermission,_system_io_emscripten_file_system_real_CreateFileExclusively,_system_io_emscripten_file_system_real_List,_system_io_emscripten_file_system_real_CreateDirectory,_system_io_emscripten_file_system_real_SetLastModifiedTime,_system_io_emscripten_file_system_real_SetReadOnly,_system_io_emscripten_file_system_real_Delete,_system_io_emscripten_file_system_real_Rename,_system_io_emscripten_file_system_real_ListRoots,_system_io_emscripten_file_system_real_GetSpace,_system_io_emscripten_file_system_real_Compare,_system_io_emscripten_file_system_real_HashCode,_system_io_emscripten_file_system_finalize,_g_strdup,_g_free,_system_io_file_real_CompareTo,_system_io_file_finalize,_system_io_file_handle_finalize,_system_io_file_input_stream_real_ReadOne,_system_io_file_input_stream_real_Read
,_system_io_file_input_stream_real_Skip,_system_io_file_input_stream_real_Available,_system_io_file_input_stream_real_Close,_system_io_file_input_stream_finalize,_system_io_file_system_real_GetSeparator,_system_io_file_system_real_GetPathSeparator,_system_io_file_system_real_Normalize,_system_io_file_system_real_PrefixLength,_system_io_file_system_real_Resolve,_system_io_file_system_real_GetDefaultParent,_system_io_file_system_real_FromURIPath,_system_io_file_system_real_IsAbsolute,_system_io_file_system_real_ResolveFile,_system_io_file_system_real_Canonicalize,_system_io_file_system_real_GetBooleanAttributes,_system_io_file_system_real_CheckAccess,_system_io_file_system_real_SetPermission,_system_io_file_system_real_GetLastModifiedTime,_system_io_file_system_real_GetLength,_system_io_file_system_real_CreateFileExclusively,_system_io_file_system_real_Delete,_system_io_file_system_real_List,_system_io_file_system_real_CreateDirectory,_system_io_file_system_real_Rename,_system_io_file_system_real_SetLastModifiedTime,_system_io_file_system_real_SetReadOnly,_system_io_file_system_real_ListRoots,_system_io_file_system_real_GetSpace,_system_io_file_system_real_Compare,_system_io_file_system_real_HashCode
,_system_io_file_system_finalize,_system_io_input_stream_Close,_system_io_input_stream_real_ReadOne,_system_io_input_stream_real_Read,_system_io_input_stream_real_Skip,_system_io_input_stream_real_Available,_system_io_input_stream_real_Close,_system_io_input_stream_real_Mark,_system_io_input_stream_real_MarkSupported,_system_io_input_stream_real_Reset,_system_io_input_stream_reader_real_ReadOne,_system_io_input_stream_reader_real_Read,_system_io_input_stream_reader_real_Close,_system_io_input_stream_reader_finalize,_system_io_reader_Close,_system_io_reader_real_ReadOne,_system_io_reader_real_Read,_system_io_reader_real_Skip,_system_io_reader_real_Ready,_system_io_reader_real_MarkSupported,_system_io_reader_real_Mark,_system_io_reader_real_Reset,_system_io_reader_real_Close,_system_io_reader_finalize,_object_real_ToString,_object_real_Equals,_object_real_GetHashCode,_object_real_Clone,_system_collections_generic_collection_real_Contains,_system_collections_generic_collection_real_Add
,_system_collections_generic_collection_real_Remove,_system_collections_generic_collection_real_Clear,_system_collections_generic_collection_real_AddAll,_system_collections_generic_collection_real_ToArray,_system_collections_generic_collection_real_get_IsEmpty,__vala_system_collections_generic_collection_get_property,__vala_system_collections_generic_collection_set_property,_g_direct_equal,_system_collections_generic_dictionary_real_map_iterator,_system_collections_generic_dictionary_real_ContainsKey,_system_collections_generic_dictionary_real_get,_system_collections_generic_dictionary_real_set,_system_collections_generic_dictionary_real_Remove,_system_collections_generic_dictionary_real_Clear,_system_collections_generic_dictionary_real_get_Count,_system_collections_generic_dictionary_real_get_Keys,_system_collections_generic_dictionary_real_get_Values,__vala_system_collections_generic_dictionary_get_property,__vala_system_collections_generic_dictionary_set_property,_system_collections_generic_dictionary_finalize,_system_collections_generic_dictionary_value_collection_real_get_element_type,_system_collections_generic_dictionary_value_collection_real_iterator,_system_collections_generic_dictionary_value_collection_real_Add,_system_collections_generic_dictionary_value_collection_real_Clear,_system_collections_generic_dictionary_value_collection_real_Remove,_system_collections_generic_dictionary_value_collection_real_Contains,_system_collections_generic_dictionary_value_collection_real_get_Count,__vala_system_collections_generic_dictionary_value_collection_get_property,__vala_system_collections_generic_dictionary_value_collection_set_property,_system_collections_generic_dictionary_value_collection_finalize
,_system_collections_generic_dictionary_value_iterator_real_next,_system_collections_generic_dictionary_value_iterator_real_has_next,_system_collections_generic_dictionary_value_iterator_real_get,_system_collections_generic_dictionary_value_iterator_real_Remove,_system_collections_generic_dictionary_value_iterator_real_get_valid,__vala_system_collections_generic_dictionary_value_iterator_get_property,__vala_system_collections_generic_dictionary_value_iterator_set_property,_system_collections_generic_dictionary_value_iterator_finalize,_system_collections_generic_dictionary_key_set_real_get_element_type,_system_collections_generic_dictionary_key_set_real_iterator,_system_collections_generic_dictionary_key_set_real_Add,_system_collections_generic_dictionary_key_set_real_Clear,_system_collections_generic_dictionary_key_set_real_Remove,_system_collections_generic_dictionary_key_set_real_Contains,_system_collections_generic_dictionary_key_set_real_get_Count,__vala_system_collections_generic_dictionary_key_set_get_property,__vala_system_collections_generic_dictionary_key_set_set_property,_system_collections_generic_dictionary_key_set_finalize,_system_collections_generic_dictionary_key_iterator_real_next,_system_collections_generic_dictionary_key_iterator_real_has_next,_system_collections_generic_dictionary_key_iterator_real_get,_system_collections_generic_dictionary_key_iterator_real_Remove,_system_collections_generic_dictionary_key_iterator_real_get_valid,__vala_system_collections_generic_dictionary_key_iterator_get_property,__vala_system_collections_generic_dictionary_key_iterator_set_property,_system_collections_generic_dictionary_key_iterator_finalize,_system_collections_generic_dictionary_map_iterator_real_next,_system_collections_generic_dictionary_map_iterator_real_get_key,_system_collections_generic_dictionary_map_iterator_real_get_value,__vala_system_collections_generic_dictionary_map_iterator_get_property
,__vala_system_collections_generic_dictionary_map_iterator_set_property,_system_collections_generic_dictionary_map_iterator_finalize,_system_collections_generic_iterable_real_get_element_type,_system_collections_generic_iterable_real_iterator,__vala_system_collections_generic_iterable_get_property,__vala_system_collections_generic_iterable_set_property,_system_collections_generic_iterator_real_next,_system_collections_generic_iterator_real_has_next,_system_collections_generic_iterator_real_get,_system_collections_generic_iterator_real_Remove,__vala_system_collections_generic_iterator_get_property,__vala_system_collections_generic_iterator_set_property,_system_collections_generic_map_iterator_real_next,_system_collections_generic_map_iterator_real_get_key,_system_collections_generic_map_iterator_real_get_value,__vala_system_collections_generic_map_iterator_get_property,__vala_system_collections_generic_map_iterator_set_property,_system_collections_generic_map_real_ContainsKey,_system_collections_generic_map_real_get,_system_collections_generic_map_real_set,_system_collections_generic_map_real_Remove,_system_collections_generic_map_real_Clear,_system_collections_generic_map_real_map_iterator,__vala_system_collections_generic_map_get_property,__vala_system_collections_generic_map_set_property,__vala_system_collections_generic_set_get_property,__vala_system_collections_generic_set_set_property,_stbi__idct_block,_stbi__YCbCr_to_RGB_row,_stbi__resample_row_hv_2
,_resample_row_1,_stbi__resample_row_v_2,_stbi__resample_row_h_2,_stbi__resample_row_generic,____lambda49__glf_wframebuffersizefun,____lambda50__em_callback_func,_game_finalize,__vala_image_get_property,_image_finalize,__vala_shader_get_property,_shader_finalize,___stdio_read,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0,b0
,b0,b0,b0];














  return { ___emscripten_environ_constructor: ___emscripten_environ_constructor, ___errno_location: ___errno_location, ___muldi3: ___muldi3, ___udivdi3: ___udivdi3, __get_daylight: __get_daylight, __get_environ: __get_environ, __get_timezone: __get_timezone, __get_tzname: __get_tzname, _bitshift64Lshr: _bitshift64Lshr, _bitshift64Shl: _bitshift64Shl, _free: _free, _i64Add: _i64Add, _i64Subtract: _i64Subtract, _llvm_bswap_i32: _llvm_bswap_i32, _llvm_minnum_f32: _llvm_minnum_f32, _llvm_minnum_f64: _llvm_minnum_f64, _main: _main, _malloc: _malloc, _memcpy: _memcpy, _memmove: _memmove, _memset: _memset, _realloc: _realloc, _sbrk: _sbrk, _zerog_init_ctor: _zerog_init_ctor, establishStackSpace: establishStackSpace, getTempRet0: getTempRet0, runPostSets: runPostSets, setTempRet0: setTempRet0, setThrew: setThrew, stackAlloc: stackAlloc, stackRestore: stackRestore, stackSave: stackSave };
})
;